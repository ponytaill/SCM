/**
 * @fileoverview added by tsickle
 * Generated from: lib/query-solution.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { QuerySolutionComponent } from './query-solution.component';
import { SolutionManangerComponent } from './solutionmanager/solutionmanager.component';
import { SaveAsDialogComponent } from './saveasdialog/saveasdialog.component';
import { FormsModule } from '@angular/forms';
import { FarrisDialogModule } from '@farris/ui-dialog';
import { LookupModule } from '@farris/ui-lookup';
import { MultiSelectModule } from '@farris/ui-multi-select';
import { FieldGroupModule } from '@farris/ui-field-group';
import { InputGroupModule } from '@farris/ui-input-group';
import { FDropdownDirectiveTypeModule } from '@farris/ui-dropdown';
import { NotifyModule } from '@farris/ui-notify';
import { LoadingModule } from '@farris/ui-loading';
import { HttpClientModule } from '@angular/common/http';
import { SolutionService, QueryConditionModule } from '@farris/component-querycondition';
import { LocaleModule } from '@farris/ui-locale';
import { DatagridModule } from '@farris/ui-datagrid';
import { NumberHelperModule } from '@farris/ui-common/number';
import { DateHelperModule } from '@farris/ui-common/date';
import { FarrisTooltipModule } from '@farris/ui-tooltip';
import { SummaryConditionComponent } from './summary-condition/summary-condition.component';
import { SummaryListComponent } from './summary-list/summary-list.component';
export class QuerySolutionModule {
}
QuerySolutionModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule,
                    FormsModule,
                    FarrisDialogModule,
                    LookupModule,
                    MultiSelectModule,
                    FieldGroupModule,
                    InputGroupModule,
                    FDropdownDirectiveTypeModule,
                    NotifyModule.forRoot(),
                    LoadingModule.forRoot(),
                    QueryConditionModule,
                    HttpClientModule,
                    LocaleModule,
                    DatagridModule,
                    NumberHelperModule,
                    DateHelperModule,
                    FarrisTooltipModule
                ],
                declarations: [
                    QuerySolutionComponent,
                    SolutionManangerComponent,
                    SaveAsDialogComponent,
                    SummaryConditionComponent,
                    SummaryListComponent,
                ],
                entryComponents: [
                    SolutionManangerComponent,
                    SaveAsDialogComponent
                ],
                providers: [SolutionService],
                exports: [
                    QuerySolutionComponent,
                    SolutionManangerComponent,
                    SaveAsDialogComponent
                ]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXVlcnktc29sdXRpb24ubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzcC1jbXAvcXVlcnlzb2x1dGlvbi8iLCJzb3VyY2VzIjpbImxpYi9xdWVyeS1zb2x1dGlvbi5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUNwRSxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSw2Q0FBNkMsQ0FBQztBQUN4RixPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQztBQUM5RSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDN0MsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDdkQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ2pELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQzVELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQzFELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQzFELE9BQU8sRUFBRSw0QkFBNEIsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ25FLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNqRCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDbkQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDeEQsT0FBTyxFQUFFLGVBQWUsRUFBRSxvQkFBb0IsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBQ3pGLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNqRCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDckQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDOUQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDMUQsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDekQsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0saURBQWlELENBQUM7QUFDNUYsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sdUNBQXVDLENBQUM7QUF3QzdFLE1BQU0sT0FBTyxtQkFBbUI7OztZQXRDL0IsUUFBUSxTQUFDO2dCQUNSLE9BQU8sRUFBRTtvQkFDUCxZQUFZO29CQUNaLFdBQVc7b0JBQ1gsa0JBQWtCO29CQUNsQixZQUFZO29CQUNaLGlCQUFpQjtvQkFDakIsZ0JBQWdCO29CQUNoQixnQkFBZ0I7b0JBQ2hCLDRCQUE0QjtvQkFDNUIsWUFBWSxDQUFDLE9BQU8sRUFBRTtvQkFDdEIsYUFBYSxDQUFDLE9BQU8sRUFBRTtvQkFDdkIsb0JBQW9CO29CQUNwQixnQkFBZ0I7b0JBQ2hCLFlBQVk7b0JBQ1osY0FBYztvQkFDZCxrQkFBa0I7b0JBQ2xCLGdCQUFnQjtvQkFDaEIsbUJBQW1CO2lCQUNwQjtnQkFDRCxZQUFZLEVBQUU7b0JBQ1osc0JBQXNCO29CQUN0Qix5QkFBeUI7b0JBQ3pCLHFCQUFxQjtvQkFDckIseUJBQXlCO29CQUN6QixvQkFBb0I7aUJBQ3JCO2dCQUNELGVBQWUsRUFBQztvQkFDZCx5QkFBeUI7b0JBQ3pCLHFCQUFxQjtpQkFDdEI7Z0JBQ0QsU0FBUyxFQUFDLENBQUMsZUFBZSxDQUFDO2dCQUMzQixPQUFPLEVBQUM7b0JBQ04sc0JBQXNCO29CQUN0Qix5QkFBeUI7b0JBQ3pCLHFCQUFxQjtpQkFDdEI7YUFDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XHJcbmltcG9ydCB7IFF1ZXJ5U29sdXRpb25Db21wb25lbnQgfSBmcm9tICcuL3F1ZXJ5LXNvbHV0aW9uLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFNvbHV0aW9uTWFuYW5nZXJDb21wb25lbnQgfSBmcm9tICcuL3NvbHV0aW9ubWFuYWdlci9zb2x1dGlvbm1hbmFnZXIuY29tcG9uZW50JztcclxuaW1wb3J0IHsgU2F2ZUFzRGlhbG9nQ29tcG9uZW50IH0gZnJvbSAnLi9zYXZlYXNkaWFsb2cvc2F2ZWFzZGlhbG9nLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IEZvcm1zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xyXG5pbXBvcnQgeyBGYXJyaXNEaWFsb2dNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWRpYWxvZyc7XHJcbmltcG9ydCB7IExvb2t1cE1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktbG9va3VwJztcclxuaW1wb3J0IHsgTXVsdGlTZWxlY3RNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLW11bHRpLXNlbGVjdCc7XHJcbmltcG9ydCB7IEZpZWxkR3JvdXBNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWZpZWxkLWdyb3VwJztcclxuaW1wb3J0IHsgSW5wdXRHcm91cE1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktaW5wdXQtZ3JvdXAnO1xyXG5pbXBvcnQgeyBGRHJvcGRvd25EaXJlY3RpdmVUeXBlTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1kcm9wZG93bic7XHJcbmltcG9ydCB7IE5vdGlmeU1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktbm90aWZ5JztcclxuaW1wb3J0IHsgTG9hZGluZ01vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktbG9hZGluZyc7XHJcbmltcG9ydCB7IEh0dHBDbGllbnRNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XHJcbmltcG9ydCB7IFNvbHV0aW9uU2VydmljZSwgUXVlcnlDb25kaXRpb25Nb2R1bGUgfSBmcm9tICdAZmFycmlzL2NvbXBvbmVudC1xdWVyeWNvbmRpdGlvbic7XHJcbmltcG9ydCB7IExvY2FsZU1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktbG9jYWxlJztcclxuaW1wb3J0IHsgRGF0YWdyaWRNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWRhdGFncmlkJztcclxuaW1wb3J0IHsgTnVtYmVySGVscGVyTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1jb21tb24vbnVtYmVyJztcclxuaW1wb3J0IHsgRGF0ZUhlbHBlck1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktY29tbW9uL2RhdGUnO1xyXG5pbXBvcnQgeyBGYXJyaXNUb29sdGlwTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS10b29sdGlwJztcclxuaW1wb3J0IHsgU3VtbWFyeUNvbmRpdGlvbkNvbXBvbmVudCB9IGZyb20gJy4vc3VtbWFyeS1jb25kaXRpb24vc3VtbWFyeS1jb25kaXRpb24uY29tcG9uZW50JztcclxuaW1wb3J0IHsgU3VtbWFyeUxpc3RDb21wb25lbnQgfSBmcm9tICcuL3N1bW1hcnktbGlzdC9zdW1tYXJ5LWxpc3QuY29tcG9uZW50JztcclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgaW1wb3J0czogW1xyXG4gICAgQ29tbW9uTW9kdWxlLFxyXG4gICAgRm9ybXNNb2R1bGUsXHJcbiAgICBGYXJyaXNEaWFsb2dNb2R1bGUsXHJcbiAgICBMb29rdXBNb2R1bGUsXHJcbiAgICBNdWx0aVNlbGVjdE1vZHVsZSxcclxuICAgIEZpZWxkR3JvdXBNb2R1bGUsXHJcbiAgICBJbnB1dEdyb3VwTW9kdWxlLFxyXG4gICAgRkRyb3Bkb3duRGlyZWN0aXZlVHlwZU1vZHVsZSxcclxuICAgIE5vdGlmeU1vZHVsZS5mb3JSb290KCksXHJcbiAgICBMb2FkaW5nTW9kdWxlLmZvclJvb3QoKSxcclxuICAgIFF1ZXJ5Q29uZGl0aW9uTW9kdWxlLFxyXG4gICAgSHR0cENsaWVudE1vZHVsZSxcclxuICAgIExvY2FsZU1vZHVsZSxcclxuICAgIERhdGFncmlkTW9kdWxlLFxyXG4gICAgTnVtYmVySGVscGVyTW9kdWxlLFxyXG4gICAgRGF0ZUhlbHBlck1vZHVsZSxcclxuICAgIEZhcnJpc1Rvb2x0aXBNb2R1bGVcclxuICBdLFxyXG4gIGRlY2xhcmF0aW9uczogW1xyXG4gICAgUXVlcnlTb2x1dGlvbkNvbXBvbmVudCxcclxuICAgIFNvbHV0aW9uTWFuYW5nZXJDb21wb25lbnQsXHJcbiAgICBTYXZlQXNEaWFsb2dDb21wb25lbnQsXHJcbiAgICBTdW1tYXJ5Q29uZGl0aW9uQ29tcG9uZW50LFxyXG4gICAgU3VtbWFyeUxpc3RDb21wb25lbnQsXHJcbiAgXSxcclxuICBlbnRyeUNvbXBvbmVudHM6W1xyXG4gICAgU29sdXRpb25NYW5hbmdlckNvbXBvbmVudCxcclxuICAgIFNhdmVBc0RpYWxvZ0NvbXBvbmVudFxyXG4gIF0sXHJcbiAgcHJvdmlkZXJzOltTb2x1dGlvblNlcnZpY2VdLFxyXG4gIGV4cG9ydHM6WyBcclxuICAgIFF1ZXJ5U29sdXRpb25Db21wb25lbnQsXHJcbiAgICBTb2x1dGlvbk1hbmFuZ2VyQ29tcG9uZW50LFxyXG4gICAgU2F2ZUFzRGlhbG9nQ29tcG9uZW50XHJcbiAgXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgUXVlcnlTb2x1dGlvbk1vZHVsZSB7IH1cclxuIl19