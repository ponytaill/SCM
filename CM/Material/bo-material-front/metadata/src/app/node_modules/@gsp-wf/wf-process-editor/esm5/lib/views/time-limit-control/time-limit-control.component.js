/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, HostBinding, Output, EventEmitter, Input, ViewChild, TemplateRef, Injector, ComponentFactoryResolver } from '@angular/core';
import { BsModalService } from '@farris/ui-modal';
import { SendMessageOperationComponent } from './send-message-operation/send-message-operation.component';
import { AutoHandleOperationComponent } from "./auto-handle-operation/auto-handle-operation.component";
import { TimeLimitInfo, ExpireOperation } from './time-limit-control.entity';
import { EditorTypes } from '@farris/ui-datagrid-editors';
import { DatagridComponent } from '@farris/ui-datagrid';
import { MessagerService } from '@farris/ui-messager';
var TimeLimitControlComponent = /** @class */ (function () {
    function TimeLimitControlComponent(resolver, injector, modalService, message) {
        var _this = this;
        this.resolver = resolver;
        this.injector = injector;
        this.modalService = modalService;
        this.message = message;
        this.cls = 'farris-main-area flex-column';
        this.closeModal = new EventEmitter();
        this.submitModal = new EventEmitter();
        this.editorParams = {};
        this.modalConfig = {
            title: '超时操作',
            width: 580,
            height: 460,
            showButtons: true
        };
        this.timeLimitInfo = new TimeLimitInfo();
        this.tagCollection = [
            { value: 'constant', text: '固定值' },
            { value: 'scope', text: '时间范围' }
        ];
        this.timeUnitCollection = [
            { value: 'day', text: '天' },
            { value: 'hour', text: '时' },
            { value: 'minute', text: '分' }
        ];
        this.durationTypeCollection = [
            { value: 'BeforeDuration', text: '到期之前' },
            { value: 'OnDuration', text: '到期时' },
            { value: 'AfterDuration', text: '到期之后' }
        ];
        this.activityOperationTypeName = [
            { value: 'SendMessageExpireOperation', text: '超时预警' },
            { value: 'AutoHandleExpireOperation', text: '自动办理' }
        ];
        this.processOperationTypeName = [
            { value: 'SendMessageExpireOperation', text: '超时预警' }
        ];
        this.operationTypeName = [];
        this.timeScopeCollection = [
            { value: 'curDay', name: '当天' }
        ];
        this.timeScopeValue = this.timeScopeCollection[0].value;
        this.cols = [];
        this.location = 'activity';
        this.parser = (/**
         * @param {?} val
         * @return {?}
         */
        function (val) {
            // console.log(val);
            return Number(val);
        });
        this.durationTypeChange = (/**
         * @param {?} data
         * @return {?}
         */
        function (data) {
            if (data && data.value && data.value.value === _this.durationTypeCollection[1].value) {
                /** @type {?} */
                var operation = _this.timeLimitInfo.expireOperations.find((/**
                 * @param {?} e
                 * @return {?}
                 */
                function (e) { return e.id === data.rowData.id; }));
                operation.timeDuration = 0;
            }
        });
    }
    Object.defineProperty(TimeLimitControlComponent.prototype, "value", {
        set: /**
         * @param {?} v
         * @return {?}
         */
        function (v) {
            var e_1, _a;
            if (v) {
                this.timeLimitInfo = v;
            }
            else {
                this.timeLimitInfo = new TimeLimitInfo();
            }
            try {
                // 兼容历史数据中的操作类型
                for (var _b = tslib_1.__values(this.timeLimitInfo.expireOperations), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var operation = _c.value;
                    if (operation.operationTypeName === undefined) {
                        operation.operationTypeName = 'SendMessageExpireOperation';
                    }
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_1) throw e_1.error; }
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    TimeLimitControlComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.location = this.editorParams.location;
        if (this.location === 'activity') {
            this.operationTypeName = this.activityOperationTypeName;
        }
        else {
            this.operationTypeName = this.processOperationTypeName;
        }
        this.cols = [
            {
                field: 'durationType', width: 80, title: '期限类型',
                formatter: {
                    type: 'enum',
                    options: { valueField: 'value', textField: 'text', data: this.durationTypeCollection }
                },
                editor: {
                    type: EditorTypes.COMBOLIST,
                    options: {
                        valueField: 'value', textField: 'text', data: this.durationTypeCollection, idField: 'value', panelHeight: 'auto',
                        valueChange: this.durationTypeChange, showClear: false
                    }
                },
                validators: [
                    { type: 'required', messager: '必填' }
                ]
            },
            {
                field: 'timeDuration', width: 60, title: '时长',
                editor: {
                    type: EditorTypes.NUMBERBOX, options: { min: 0 },
                },
                validators: [
                    { type: 'required', messager: '必填' }
                ]
            },
            {
                field: 'timeUnit', width: 60, title: '单位',
                formatter: {
                    type: 'enum',
                    options: { valueField: 'value', textField: 'text', data: this.timeUnitCollection }
                },
                editor: {
                    type: EditorTypes.COMBOLIST,
                    options: { valueField: 'value', textField: 'text', data: this.timeUnitCollection, idField: 'value', panelHeight: 'auto' }
                },
                validators: [
                    { type: 'required', messager: '必填' }
                ]
            },
            {
                field: 'operationTypeName', width: 100, title: '操作类型名称',
                formatter: {
                    type: 'enum',
                    options: { valueField: 'value', textField: 'text', data: this.operationTypeName }
                },
                editor: {
                    type: EditorTypes.COMBOLIST,
                    options: { valueField: 'value', textField: 'text', data: this.operationTypeName, idField: 'value', panelHeight: 'auto' }
                },
                validators: [
                    { type: 'required', messager: '必填' }
                ]
            },
            {
                field: 'sendType', width: 80, title: '操作', template: this.cell,
                validators: [
                    { type: 'required', messager: '必填' }
                ]
            }
        ];
    };
    // beforeEdit = (param: RowEditParam) => {
    //   const rowData = param.rowData as any;
    //   if(rowData.durationType === 'OnDuration'){
    //     if(param.column.field === 'timeUnit'){
    //       rowData.timeUnit = 'day'
    //       param.column.editor = {};
    //     } else if(param.column.field === 'timeDuration'){
    //       rowData.timeDuration = 0;
    //       param.column.editor = {};
    //     } else {
    //       const fieldValue = this.cols.find(col => col.field === param.column.field);
    //       param.column.editor = fieldValue.editor;
    //     }
    //   }
    //   return of(true);
    // }
    // beforeEdit = (param: RowEditParam) => {
    //   const rowData = param.rowData as any;
    //   if(rowData.durationType === 'OnDuration'){
    //     if(param.column.field === 'timeUnit'){
    //       rowData.timeUnit = 'day'
    //       param.column.editor = {};
    //     } else if(param.column.field === 'timeDuration'){
    //       rowData.timeDuration = 0;
    //       param.column.editor = {};
    //     } else {
    //       const fieldValue = this.cols.find(col => col.field === param.column.field);
    //       param.column.editor = fieldValue.editor;
    //     }
    //   }
    //   return of(true);
    // }
    /**
     * @return {?}
     */
    TimeLimitControlComponent.prototype.clickOK = 
    // beforeEdit = (param: RowEditParam) => {
    //   const rowData = param.rowData as any;
    //   if(rowData.durationType === 'OnDuration'){
    //     if(param.column.field === 'timeUnit'){
    //       rowData.timeUnit = 'day'
    //       param.column.editor = {};
    //     } else if(param.column.field === 'timeDuration'){
    //       rowData.timeDuration = 0;
    //       param.column.editor = {};
    //     } else {
    //       const fieldValue = this.cols.find(col => col.field === param.column.field);
    //       param.column.editor = fieldValue.editor;
    //     }
    //   }
    //   return of(true);
    // }
    /**
     * @return {?}
     */
    function () {
        this.grid.endCellEdit();
        this.timeLimitInfo.dueTime += '';
        if (this.validator()) {
            /** @type {?} */
            var object = { value: this.timeLimitInfo, parameters: null };
            this.submitModal.emit(object);
        }
    };
    /**
     * @return {?}
     */
    TimeLimitControlComponent.prototype.clickCancel = /**
     * @return {?}
     */
    function () {
        this.closeModal.emit();
    };
    /**
     * @private
     * @return {?}
     */
    TimeLimitControlComponent.prototype.validator = /**
     * @private
     * @return {?}
     */
    function () {
        var e_2, _a;
        if (this.timeLimitInfo.expireOperations
            && this.timeLimitInfo.expireOperations.length > 0) {
            try {
                for (var _b = tslib_1.__values(this.timeLimitInfo.expireOperations), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var e = _c.value;
                    if (e.operationTypeName === 'SendMessageExpireOperation') {
                        /** @type {?} */
                        var a = (/** @type {?} */ (e));
                        if (!a.sendType) {
                            this.message.info('请设置超时操作！');
                            return false;
                        }
                    }
                    if (e.operationTypeName === 'AutoHandleExpireOperation') {
                        /** @type {?} */
                        var a = (/** @type {?} */ (e));
                        if (!a.autoHandleType) {
                            this.message.info('请设置自动办理类型！');
                            return false;
                        }
                        if (!a.message) {
                            this.message.info('请设置自动办理意见！');
                            return false;
                        }
                    }
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_2) throw e_2.error; }
            }
        }
        return true;
    };
    /**
     * @return {?}
     */
    TimeLimitControlComponent.prototype.add = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var operation = new ExpireOperation();
        this.timeLimitInfo.expireOperations.push(operation);
        this.grid.loadData(this.timeLimitInfo.expireOperations);
        this.grid.selectRow(operation.id);
    };
    /**
     * @return {?}
     */
    TimeLimitControlComponent.prototype.remove = /**
     * @return {?}
     */
    function () {
        this.grid.endCellEdit();
        /** @type {?} */
        var curItem = this.grid.selectedRow;
        if (!curItem) {
            this.message.info('尚未选中预警操作！');
            return;
        }
        /** @type {?} */
        var i = this.timeLimitInfo.expireOperations.findIndex((/**
         * @param {?} a
         * @return {?}
         */
        function (a) { return a.id === curItem.data.id; }));
        if (i > -1) {
            this.timeLimitInfo.expireOperations.splice(i, 1);
            this.grid.loadData(this.timeLimitInfo.expireOperations);
        }
    };
    /**
     * @param {?} ctx
     * @return {?}
     */
    TimeLimitControlComponent.prototype.editOperation = /**
     * @param {?} ctx
     * @return {?}
     */
    function (ctx) {
        var _this = this;
        this.grid.endCellEdit();
        if (ctx.rowData.operationTypeName === 'SendMessageExpireOperation') {
            this.sendMassageOperation(ctx);
        }
        if (ctx.rowData.operationTypeName === 'AutoHandleExpireOperation') {
            this.message.confirm("下一节点是由当前办理人指派的话，当前节点不支持任务自动办理").subscribe((/**
             * @param {?} re
             * @return {?}
             */
            function (re) { return re === true ? _this.autoHandleOperation(ctx) : null; }));
        }
    };
    /**
     * @param {?} ctx
     * @return {?}
     */
    TimeLimitControlComponent.prototype.sendMassageOperation = /**
     * @param {?} ctx
     * @return {?}
     */
    function (ctx) {
        var _this = this;
        /** @type {?} */
        var dialog;
        /** @type {?} */
        var compFactory = this.resolver.resolveComponentFactory(SendMessageOperationComponent);
        /** @type {?} */
        var compRef = compFactory.create(this.injector);
        compRef.instance.location = this.location;
        compRef.instance.value = Object.assign({}, ctx.rowData);
        compRef.instance.submitEmitter.subscribe((/**
         * @param {?} re
         * @return {?}
         */
        function (re) {
            /** @type {?} */
            var operation = _this.timeLimitInfo.expireOperations.find((/**
             * @param {?} o
             * @return {?}
             */
            function (o) { return o.id === re.id; }));
            operation = Object.assign(operation, re);
            dialog.close();
        }));
        compRef.instance.closeEmitter.subscribe((/**
         * @param {?} re
         * @return {?}
         */
        function (re) {
            dialog.close();
        }));
        /** @type {?} */
        var modalConfig = {
            title: '预警消息',
            width: 500,
            height: this.location === 'activity' ? 390 : 460,
            buttons: compRef.instance.footer,
            showButtons: true
        };
        dialog = this.modalService.show(compRef, modalConfig);
    };
    /**
     * @param {?} ctx
     * @return {?}
     */
    TimeLimitControlComponent.prototype.autoHandleOperation = /**
     * @param {?} ctx
     * @return {?}
     */
    function (ctx) {
        var _this = this;
        /** @type {?} */
        var dialog;
        /** @type {?} */
        var compFactory = this.resolver.resolveComponentFactory(AutoHandleOperationComponent);
        /** @type {?} */
        var compRef = compFactory.create(this.injector);
        compRef.instance.value = Object.assign({}, ctx.rowData);
        compRef.instance.submitEmitter.subscribe((/**
         * @param {?} re
         * @return {?}
         */
        function (re) {
            /** @type {?} */
            var operation = _this.timeLimitInfo.expireOperations.find((/**
             * @param {?} o
             * @return {?}
             */
            function (o) { return o.id === re.id; }));
            operation = Object.assign(operation, re);
            dialog.close();
        }));
        compRef.instance.closeEmitter.subscribe((/**
         * @param {?} re
         * @return {?}
         */
        function (re) {
            dialog.close();
        }));
        /** @type {?} */
        var modalConfig = {
            title: '自动办理',
            width: 500,
            height: this.location === 'activity' ? 390 : 460,
            buttons: compRef.instance.footer,
            showButtons: true
        };
        dialog = this.modalService.show(compRef, modalConfig);
    };
    /**
     * @param {?} data
     * @return {?}
     */
    TimeLimitControlComponent.prototype.tagSelectChange = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        if (data.data.value === 'constant') {
            this.timeLimitInfo.timeUnit = "day";
        }
        else if (data.data.value === 'scope') {
            this.timeLimitInfo.timeUnit = '';
            this.timeLimitInfo.dueTime = this.timeScopeValue;
        }
    };
    /**
     * @param {?} data
     * @return {?}
     */
    TimeLimitControlComponent.prototype.changeTimeScope = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        this.timeScopeValue = data;
        this.timeLimitInfo.dueTime = this.timeScopeValue;
    };
    TimeLimitControlComponent.decorators = [
        { type: Component, args: [{
                    selector: 'lib-time-limit-control',
                    template: "<div class=\"f-page\">\r\n  <div class=\"f-utils-fill-flex-column farris-split-section m-2 h-100\">\r\n    <section class=\"f-utils-fill-flex-column h-100\">\r\n      <div class=\"f-section-header pt-2 mx-2\">\r\n        <div class=\"f-title\">\r\n          <h4 class=\"f-title-text\">\u4EFB\u52A1\u5904\u7406\u65F6\u6548\u63A7\u5236</h4>\r\n        </div>\r\n      </div>\r\n      <div class=\"f-utils-fill-flex-column h-100\">\r\n        <form class=\"h-100\">\r\n          <div class=\"f-utils-fill-flex-column h-100\">\r\n            <div class=\"farris-form-controls-inline\">\r\n              <div class=\"farris-group-wrap\">\r\n                <div class=\"form-group\">\r\n                  <label class=\"col-form-label pl-1 mr-3\">\r\n                    <span class=\"farris-label-text\">\u662F\u5426\u542F\u7528</span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap mr-5\">\r\n                    <farris-switch [(ngModel)]=\"timeLimitInfo.enable\" name=\"enable\"></farris-switch>\r\n                    <div class=\"farris-feedback valid-feedback\"></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"farris-form-controls-inline\">\r\n              <div class=\"farris-group-wrap\">\r\n                <div class=\"form-group\" style=\"width: 100%;\">\r\n                  <label class=\"col-form-label pl-1 mr-3\">\r\n                    <span class=\"farris-label-text\">\u4EFB\u52A1\u671F\u9650</span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap mr-1\" style=\"width: 35%;\"><!--name=\"tag\"-->\r\n                    <farris-combo-list [(ngModel)]=\"timeLimitInfo.tag\" [idField]=\"'value'\" [textField]=\"'text'\" name=\"tag\"\r\n                                       [valueField]=\"'value'\" [data]=\"tagCollection\" [panelHeight]=\"'auto'\"\r\n                                       [editable]=\"false\" [enableClear]=\"false\" (selectChange)=\"tagSelectChange($event)\">\r\n                    </farris-combo-list>\r\n                    <div class=\"farris-feedback valid-feedback\"></div>\r\n                  </div>\r\n                  <div *ngIf=\"timeLimitInfo.tag === 'constant'\" class=\"farris-input-wrap mr-1\" style=\"width: 35%;\">\r\n                    <farris-number-spinner [(ngModel)]=\"timeLimitInfo.dueTime\" name=\"dueTime\"\r\n                      [editable]=\"true\" [precision]=\"0\" [parser]=\"parser\"\r\n                      [min]=\"0\"></farris-number-spinner>\r\n                    <div class=\"farris-feedback valid-feedback\"></div>\r\n                  </div>\r\n                  <div *ngIf=\"timeLimitInfo.tag === 'constant'\" class=\"farris-input-wrap mr-5\" style=\"width: 30%;\">\r\n                    <farris-combo-list [(ngModel)]=\"timeLimitInfo.timeUnit\" name=\"timeUnit\" [idField]=\"'value'\" [textField]=\"'text'\"\r\n                    [valueField]=\"'value'\" [data]=\"timeUnitCollection\" [panelHeight]=\"'auto'\"\r\n                    [editable]=\"false\" [enableClear]=\"false\">\r\n                    </farris-combo-list>\r\n                    <div class=\"farris-feedback valid-feedback\"></div>\r\n                  </div>\r\n                  <div *ngIf=\"timeLimitInfo.tag === 'scope'\" class=\"farris-input-wrap mr-1\" style=\"width: 65%;\">\r\n                    <farris-radiogroup [(ngModel)]=\"timeLimitInfo.dueTime\" name=\"scope\"\r\n                                       [data]=\"timeScopeCollection\"\r\n                                       (changeValue)=\"changeTimeScope($event)\">\r\n                    </farris-radiogroup>\r\n                    <div class=\"farris-feedback valid-feedback\"></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"mx-2 mt-3\">\r\n              <div class=\"title-content\">\r\n                <h4 class=\"title-text\">\u65F6\u6548\u9884\u8B66\u64CD\u4F5C</h4><span class=\"title-line\"></span>\r\n              </div>\r\n            </div>\r\n            <div class=\"mx-2 h-100\">\r\n              <farris-tabs class=\"f-utils-fill h-100\" [value]=\"'operation'\" [contentFill]=\"true\" [autoTitleWidth]=\"true\">\r\n                <farris-tab [title]=\"'\u64CD\u4F5C\u5217\u8868'\" [id]=\"'operation'\">\r\n                  <ng-template farrisTabsExtend>\r\n                    <div class=\"mx-2\">\r\n                      <button type=\"button\" (click)=\"add()\"\r\n                        class=\"btn btn-primary mr-2\">\u65B0\u589E</button>\r\n                      <button type=\"button\" (click)=\"remove()\"\r\n                        class=\"btn btn-secondary\">\u5220\u9664</button>\r\n                    </div>\r\n                  </ng-template>\r\n                  <ng-template #content>\r\n                    <div class=\"f-utils-fill-flex-column h-100\" style=\"background: #FFF;\">\r\n                      <farris-datagrid #grid [data]=\"timeLimitInfo.expireOperations\" [idField]=\"'id'\" [columns]=\"cols\"\r\n                        [fit]=\"true\" [editMode]=\"'cell'\" [editable]=\"true\"\r\n                        [fitColumns]=\"true\" [pagination]=\"false\" [showCheckbox]=\"false\" [multiSelect]=\"false\"><!--[beforeEdit]=\"beforeEdit\" [afterEdit]=\"afterEdit\"-->\r\n                      </farris-datagrid>\r\n                    </div>\r\n                  </ng-template>\r\n                </farris-tab>\r\n              </farris-tabs>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </section>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #iconSelectFooter>\r\n  <button type=\"button\" class=\"btn btn-primary btn-sm mx-2\" (click)=\"clickOK()\">\u786E\u5B9A</button>\r\n  <button type=\"button\" class=\"btn btn-secondary btn-sm\" (click)=\"clickCancel()\">\u53D6\u6D88</button>\r\n</ng-template>\r\n\r\n<ng-template #cell let-ctx>\r\n  <span (click)=\"editOperation(ctx)\" *ngIf=\"ctx.rowData.operationTypeName === 'SendMessageExpireOperation'\" class=\"link\">\r\n    {{ ctx.rowData.sendType?'\uFF08\u5DF2\u8BBE\u7F6E\uFF09': '\uFF08\u672A\u8BBE\u7F6E\uFF09' }}\r\n  </span>\r\n  <span (click)=\"editOperation(ctx)\" *ngIf=\"ctx.rowData.operationTypeName === 'AutoHandleExpireOperation'\" class=\"link\">\r\n    {{ (ctx.rowData.autoHandleType && ctx.rowData.message)?'\uFF08\u5DF2\u8BBE\u7F6E\uFF09': '\uFF08\u672A\u8BBE\u7F6E\uFF09' }}\r\n  </span>\r\n</ng-template>\r\n",
                    styles: [".title-content{color:#000;display:inline-flex;align-items:center;line-height:1.375rem;position:relative;overflow:hidden;padding:0 0 0 1rem;min-width:760px}.title-content ::before{content:'';width:.25rem;height:1.125rem;background:#59a1ff;border-radius:1px;position:absolute;top:50%;left:0;margin-top:-.5625rem}.title-text{font-size:1rem;line-height:1.375rem;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;margin-bottom:0;margin-right:10px}.title-line{flex-grow:1;border-bottom:1px dashed rgba(0,0,0,.1)}.link{color:#1206bb;font-size:14px}.link:hover{color:#5d478b;font-size:14px}"]
                }] }
    ];
    /** @nocollapse */
    TimeLimitControlComponent.ctorParameters = function () { return [
        { type: ComponentFactoryResolver },
        { type: Injector },
        { type: BsModalService },
        { type: MessagerService }
    ]; };
    TimeLimitControlComponent.propDecorators = {
        cls: [{ type: HostBinding, args: ['class',] }],
        closeModal: [{ type: Output }],
        submitModal: [{ type: Output }],
        value: [{ type: Input }],
        editorParams: [{ type: Input }],
        modalFooter: [{ type: ViewChild, args: ['iconSelectFooter',] }],
        cell: [{ type: ViewChild, args: ['cell',] }],
        grid: [{ type: ViewChild, args: ['grid',] }]
    };
    return TimeLimitControlComponent;
}());
export { TimeLimitControlComponent };
if (false) {
    /** @type {?} */
    TimeLimitControlComponent.prototype.cls;
    /** @type {?} */
    TimeLimitControlComponent.prototype.closeModal;
    /** @type {?} */
    TimeLimitControlComponent.prototype.submitModal;
    /** @type {?} */
    TimeLimitControlComponent.prototype.editorParams;
    /** @type {?} */
    TimeLimitControlComponent.prototype.modalFooter;
    /** @type {?} */
    TimeLimitControlComponent.prototype.cell;
    /** @type {?} */
    TimeLimitControlComponent.prototype.grid;
    /** @type {?} */
    TimeLimitControlComponent.prototype.modalConfig;
    /** @type {?} */
    TimeLimitControlComponent.prototype.timeLimitInfo;
    /** @type {?} */
    TimeLimitControlComponent.prototype.tagCollection;
    /** @type {?} */
    TimeLimitControlComponent.prototype.timeUnitCollection;
    /** @type {?} */
    TimeLimitControlComponent.prototype.durationTypeCollection;
    /** @type {?} */
    TimeLimitControlComponent.prototype.activityOperationTypeName;
    /** @type {?} */
    TimeLimitControlComponent.prototype.processOperationTypeName;
    /** @type {?} */
    TimeLimitControlComponent.prototype.operationTypeName;
    /** @type {?} */
    TimeLimitControlComponent.prototype.timeScopeCollection;
    /** @type {?} */
    TimeLimitControlComponent.prototype.timeScopeValue;
    /** @type {?} */
    TimeLimitControlComponent.prototype.cols;
    /** @type {?} */
    TimeLimitControlComponent.prototype.location;
    /** @type {?} */
    TimeLimitControlComponent.prototype.parser;
    /** @type {?} */
    TimeLimitControlComponent.prototype.durationTypeChange;
    /**
     * @type {?}
     * @private
     */
    TimeLimitControlComponent.prototype.resolver;
    /**
     * @type {?}
     * @private
     */
    TimeLimitControlComponent.prototype.injector;
    /**
     * @type {?}
     * @private
     */
    TimeLimitControlComponent.prototype.modalService;
    /**
     * @type {?}
     * @private
     */
    TimeLimitControlComponent.prototype.message;
}
var TimeLimitControlConverter = /** @class */ (function () {
    function TimeLimitControlConverter() {
    }
    /**
     * @param {?} data
     * @return {?}
     */
    TimeLimitControlConverter.prototype.convertTo = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        if (data && data.enable) {
            return '（已设置）';
        }
        else {
            return '（未设置）';
        }
    };
    return TimeLimitControlConverter;
}());
export { TimeLimitControlConverter };
//# sourceMappingURL=data:application/json;base64,