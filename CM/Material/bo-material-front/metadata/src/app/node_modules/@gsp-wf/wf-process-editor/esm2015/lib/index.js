/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ProcessDesignerUIState } from './app/process-designer.uistate';
import { ProcessDesignerViewModel } from './app/process-designer.viewmodel';
import { ProcessDesignerDataService } from './domain/process-designer.dataservice';
import { BpmnProcessViewModel } from './app/bpmn-process.viewmodel';
import { WFFlowElementsViewModel } from './app/wf-flowElements.viewModel';
import { SubProcessViewModel } from './app/sub-process.viewmodel';
import { AutoActivityAdapter } from './app/auto-activity.adapter';
import { CatchEventAdapter } from './app/catch-event.adapter';
import { MessageActivityAdapter } from './app/message-activity.adapter';
import { NotifyActivityAdapter } from './app/notify-activity.adapter';
import { AifCreationBillActivityAdapter } from './app/aif-creation-bill-activity.adapter';
/** @type {?} */
const PROCESS_DESIGNER_APP_PROVIDERS = [
    ProcessDesignerUIState,
    ProcessDesignerViewModel,
    BpmnProcessViewModel,
    WFFlowElementsViewModel,
    SubProcessViewModel,
    AutoActivityAdapter,
    CatchEventAdapter,
    MessageActivityAdapter,
    NotifyActivityAdapter,
    AifCreationBillActivityAdapter,
];
export { ProcessDesignerUIState, ProcessDesignerViewModel, BpmnProcessViewModel, WFFlowElementsViewModel, SubProcessViewModel, AutoActivityAdapter, CatchEventAdapter, MessageActivityAdapter, NotifyActivityAdapter, AifCreationBillActivityAdapter, PROCESS_DESIGNER_APP_PROVIDERS, };
/** @type {?} */
const PROCESS_DESIGNER_DOMAIN_PROVIDERS = [
    ProcessDesignerDataService
];
export { ProcessDesignerDataService, PROCESS_DESIGNER_DOMAIN_PROVIDERS };
/** @type {?} */
const PROCESS_DESIGNER_PART_PROVIDERS = [];
export { PROCESS_DESIGNER_PART_PROVIDERS };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NwLXdmL3dmLXByb2Nlc3MtZWRpdG9yLyIsInNvdXJjZXMiOlsibGliL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFDQSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUN4RSxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUM1RSxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQztBQUNuRixPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUNwRSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUMxRSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUNsRSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUNsRSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUM5RCxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUN4RSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUN0RSxPQUFPLEVBQUUsOEJBQThCLEVBQUUsTUFBTSwwQ0FBMEMsQ0FBQzs7TUFFcEYsOEJBQThCLEdBQWU7SUFDL0Msc0JBQXNCO0lBQ3RCLHdCQUF3QjtJQUN4QixvQkFBb0I7SUFDcEIsdUJBQXVCO0lBQ3ZCLG1CQUFtQjtJQUNuQixtQkFBbUI7SUFDbkIsaUJBQWlCO0lBQ2pCLHNCQUFzQjtJQUN0QixxQkFBcUI7SUFDckIsOEJBQThCO0NBQ2pDO0FBQ0QsT0FBTyxFQUNILHNCQUFzQixFQUN0Qix3QkFBd0IsRUFDeEIsb0JBQW9CLEVBQ3BCLHVCQUF1QixFQUN2QixtQkFBbUIsRUFDbkIsbUJBQW1CLEVBQ25CLGlCQUFpQixFQUNqQixzQkFBc0IsRUFDdEIscUJBQXFCLEVBQ3JCLDhCQUE4QixFQUM5Qiw4QkFBOEIsR0FDakMsQ0FBQzs7TUFDSSxpQ0FBaUMsR0FBZTtJQUNsRCwwQkFBMEI7Q0FDN0I7QUFDRCxPQUFPLEVBQ0gsMEJBQTBCLEVBQzFCLGlDQUFpQyxFQUNwQyxDQUFDOztNQUNJLCtCQUErQixHQUFlLEVBQ25EO0FBQ0QsT0FBTyxFQUNILCtCQUErQixFQUNsQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHJvdmlkZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgUHJvY2Vzc0Rlc2lnbmVyVUlTdGF0ZSB9IGZyb20gJy4vYXBwL3Byb2Nlc3MtZGVzaWduZXIudWlzdGF0ZSc7XHJcbmltcG9ydCB7IFByb2Nlc3NEZXNpZ25lclZpZXdNb2RlbCB9IGZyb20gJy4vYXBwL3Byb2Nlc3MtZGVzaWduZXIudmlld21vZGVsJztcclxuaW1wb3J0IHsgUHJvY2Vzc0Rlc2lnbmVyRGF0YVNlcnZpY2UgfSBmcm9tICcuL2RvbWFpbi9wcm9jZXNzLWRlc2lnbmVyLmRhdGFzZXJ2aWNlJztcclxuaW1wb3J0IHsgQnBtblByb2Nlc3NWaWV3TW9kZWwgfSBmcm9tICcuL2FwcC9icG1uLXByb2Nlc3Mudmlld21vZGVsJztcclxuaW1wb3J0IHsgV0ZGbG93RWxlbWVudHNWaWV3TW9kZWwgfSBmcm9tICcuL2FwcC93Zi1mbG93RWxlbWVudHMudmlld01vZGVsJztcclxuaW1wb3J0IHsgU3ViUHJvY2Vzc1ZpZXdNb2RlbCB9IGZyb20gJy4vYXBwL3N1Yi1wcm9jZXNzLnZpZXdtb2RlbCc7XHJcbmltcG9ydCB7IEF1dG9BY3Rpdml0eUFkYXB0ZXIgfSBmcm9tICcuL2FwcC9hdXRvLWFjdGl2aXR5LmFkYXB0ZXInO1xyXG5pbXBvcnQgeyBDYXRjaEV2ZW50QWRhcHRlciB9IGZyb20gJy4vYXBwL2NhdGNoLWV2ZW50LmFkYXB0ZXInO1xyXG5pbXBvcnQgeyBNZXNzYWdlQWN0aXZpdHlBZGFwdGVyIH0gZnJvbSAnLi9hcHAvbWVzc2FnZS1hY3Rpdml0eS5hZGFwdGVyJztcclxuaW1wb3J0IHsgTm90aWZ5QWN0aXZpdHlBZGFwdGVyIH0gZnJvbSAnLi9hcHAvbm90aWZ5LWFjdGl2aXR5LmFkYXB0ZXInO1xyXG5pbXBvcnQgeyBBaWZDcmVhdGlvbkJpbGxBY3Rpdml0eUFkYXB0ZXIgfSBmcm9tICcuL2FwcC9haWYtY3JlYXRpb24tYmlsbC1hY3Rpdml0eS5hZGFwdGVyJztcclxuXHJcbmNvbnN0IFBST0NFU1NfREVTSUdORVJfQVBQX1BST1ZJREVSUzogUHJvdmlkZXJbXSA9IFtcclxuICAgIFByb2Nlc3NEZXNpZ25lclVJU3RhdGUsXHJcbiAgICBQcm9jZXNzRGVzaWduZXJWaWV3TW9kZWwsXHJcbiAgICBCcG1uUHJvY2Vzc1ZpZXdNb2RlbCxcclxuICAgIFdGRmxvd0VsZW1lbnRzVmlld01vZGVsLFxyXG4gICAgU3ViUHJvY2Vzc1ZpZXdNb2RlbCxcclxuICAgIEF1dG9BY3Rpdml0eUFkYXB0ZXIsXHJcbiAgICBDYXRjaEV2ZW50QWRhcHRlcixcclxuICAgIE1lc3NhZ2VBY3Rpdml0eUFkYXB0ZXIsXHJcbiAgICBOb3RpZnlBY3Rpdml0eUFkYXB0ZXIsXHJcbiAgICBBaWZDcmVhdGlvbkJpbGxBY3Rpdml0eUFkYXB0ZXIsXHJcbl07XHJcbmV4cG9ydCB7XHJcbiAgICBQcm9jZXNzRGVzaWduZXJVSVN0YXRlLFxyXG4gICAgUHJvY2Vzc0Rlc2lnbmVyVmlld01vZGVsLFxyXG4gICAgQnBtblByb2Nlc3NWaWV3TW9kZWwsXHJcbiAgICBXRkZsb3dFbGVtZW50c1ZpZXdNb2RlbCxcclxuICAgIFN1YlByb2Nlc3NWaWV3TW9kZWwsXHJcbiAgICBBdXRvQWN0aXZpdHlBZGFwdGVyLFxyXG4gICAgQ2F0Y2hFdmVudEFkYXB0ZXIsXHJcbiAgICBNZXNzYWdlQWN0aXZpdHlBZGFwdGVyLFxyXG4gICAgTm90aWZ5QWN0aXZpdHlBZGFwdGVyLFxyXG4gICAgQWlmQ3JlYXRpb25CaWxsQWN0aXZpdHlBZGFwdGVyLFxyXG4gICAgUFJPQ0VTU19ERVNJR05FUl9BUFBfUFJPVklERVJTLFxyXG59O1xyXG5jb25zdCBQUk9DRVNTX0RFU0lHTkVSX0RPTUFJTl9QUk9WSURFUlM6IFByb3ZpZGVyW10gPSBbXHJcbiAgICBQcm9jZXNzRGVzaWduZXJEYXRhU2VydmljZVxyXG5dO1xyXG5leHBvcnQge1xyXG4gICAgUHJvY2Vzc0Rlc2lnbmVyRGF0YVNlcnZpY2UsXHJcbiAgICBQUk9DRVNTX0RFU0lHTkVSX0RPTUFJTl9QUk9WSURFUlNcclxufTtcclxuY29uc3QgUFJPQ0VTU19ERVNJR05FUl9QQVJUX1BST1ZJREVSUzogUHJvdmlkZXJbXSA9IFtcclxuXTtcclxuZXhwb3J0IHtcclxuICAgIFBST0NFU1NfREVTSUdORVJfUEFSVF9QUk9WSURFUlNcclxufTtcclxuIl19