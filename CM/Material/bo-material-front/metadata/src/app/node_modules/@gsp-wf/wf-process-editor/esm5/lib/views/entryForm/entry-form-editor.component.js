/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Output, Input, ViewChild, EventEmitter, TemplateRef } from '@angular/core';
import { HttpService } from '@ecp-caf/caf-common';
import { DatagridComponent } from '@farris/ui-datagrid';
import { MessagerService } from '@farris/ui-messager';
var EntryFormEditorComponent = /** @class */ (function () {
    function EntryFormEditorComponent(http, message) {
        this.http = http;
        this.message = message;
        this.closeModal = new EventEmitter();
        this.submitModal = new EventEmitter();
        this.editorParams = {};
        this.modalConfig = {
            title: '流程分类',
            width: 540,
            height: 520,
            showButtons: true
        };
        this.columns = [
            { title: '编号', field: 'code', width: 100, sortable: true },
            { title: '名称', field: 'name', width: 100, sortable: true },
            { title: '类型', field: 'base', width: 60, formatter: { type: 'boolean', options: { trueText: '基础', falseText: '扩展' } } }
        ];
        this.data = [];
    }
    Object.defineProperty(EntryFormEditorComponent.prototype, "value", {
        set: /**
         * @param {?} data
         * @return {?}
         */
        function (data) {
            if (data) {
                this.flowFormId = data.id;
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    EntryFormEditorComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.getBaseAndExtendFlowForm();
    };
    /**
     * @return {?}
     */
    EntryFormEditorComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @return {?}
     */
    EntryFormEditorComponent.prototype.clickOK = /**
     * @return {?}
     */
    function () {
        if (!this.grid.selectedRow) {
            this.message.info('尚未选择流程分类');
            return;
        }
        /** @type {?} */
        var object = { value: this.grid.selectedRow.data, parameters: null };
        this.submitModal.emit(object);
    };
    /**
     * @return {?}
     */
    EntryFormEditorComponent.prototype.clickCancel = /**
     * @return {?}
     */
    function () {
        this.closeModal.emit();
    };
    /**
     * @private
     * @return {?}
     */
    EntryFormEditorComponent.prototype.getBaseAndExtendFlowForm = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.flowFormId) {
            /** @type {?} */
            var url = "/api/runtime/wf/v1.0/flowForm/" + this.flowFormId + "/baseAndExtend";
            this.http.get(url).subscribe((/**
             * @param {?} re
             * @return {?}
             */
            function (re) {
                if (re && re.length > 0) {
                    _this.data = re;
                    setTimeout((/**
                     * @return {?}
                     */
                    function () {
                        _this.grid.selectRow(_this.flowFormId, true);
                    }), 0);
                }
                else {
                    _this.message.info('流程分类已经不存在');
                }
            }));
        }
    };
    EntryFormEditorComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-entry-form-editor',
                    template: "<div class=\"f-page\">\r\n  <div class=\"f-page-main f-utils-fill-flex-column h-100\">\r\n    <div class=\"f-utils-fill-flex-column farris-overflow-y-auto h-100\">\r\n      <farris-datagrid #grid [data]=\"data\" [columns]=\"columns\" [idField]=\"'id'\" [fit]=\"true\" [fitColumns]=\"true\"\r\n         [pagination]=\"false\" [showCheckbox]=\"false\" [multiSelect]=\"false\" [showLineNumber]=\"true\" [lineNumberTitle]=\"'\u5E8F\u53F7'\" \r\n         [lineNumberWidth]=\"50\">\r\n      </farris-datagrid>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n<ng-template #iconSelectFooter>\r\n    <button type=\"button\" class=\"btn btn-primary btn-sm px-3 mx-2\" (click)=\"clickOK()\">\u91CD\u65B0\u7ED1\u5B9A</button>\r\n    <button type=\"button\" class=\"btn btn-secondary btn-sm px-3\" (click)=\"clickCancel()\">\u53D6\u6D88</button>\r\n</ng-template>\r\n",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    EntryFormEditorComponent.ctorParameters = function () { return [
        { type: HttpService },
        { type: MessagerService }
    ]; };
    EntryFormEditorComponent.propDecorators = {
        closeModal: [{ type: Output }],
        submitModal: [{ type: Output }],
        value: [{ type: Input }],
        modalFooter: [{ type: ViewChild, args: ['iconSelectFooter',] }],
        grid: [{ type: ViewChild, args: ['grid',] }],
        editorParams: [{ type: Input }]
    };
    return EntryFormEditorComponent;
}());
export { EntryFormEditorComponent };
if (false) {
    /** @type {?} */
    EntryFormEditorComponent.prototype.closeModal;
    /** @type {?} */
    EntryFormEditorComponent.prototype.submitModal;
    /** @type {?} */
    EntryFormEditorComponent.prototype.modalFooter;
    /** @type {?} */
    EntryFormEditorComponent.prototype.grid;
    /** @type {?} */
    EntryFormEditorComponent.prototype.editorParams;
    /**
     * @type {?}
     * @private
     */
    EntryFormEditorComponent.prototype.flowFormId;
    /** @type {?} */
    EntryFormEditorComponent.prototype.modalConfig;
    /** @type {?} */
    EntryFormEditorComponent.prototype.columns;
    /** @type {?} */
    EntryFormEditorComponent.prototype.data;
    /**
     * @type {?}
     * @private
     */
    EntryFormEditorComponent.prototype.http;
    /**
     * @type {?}
     * @private
     */
    EntryFormEditorComponent.prototype.message;
}
var FlowFormConverter = /** @class */ (function () {
    function FlowFormConverter() {
    }
    /**
     * @param {?} data
     * @return {?}
     */
    FlowFormConverter.prototype.convertTo = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        if (data) {
            return data.name;
        }
    };
    return FlowFormConverter;
}());
export { FlowFormConverter };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW50cnktZm9ybS1lZGl0b3IuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzcC13Zi93Zi1wcm9jZXNzLWVkaXRvci8iLCJzb3VyY2VzIjpbImxpYi92aWV3cy9lbnRyeUZvcm0vZW50cnktZm9ybS1lZGl0b3IuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLE1BQU0sRUFBRSxLQUFLLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxXQUFXLEVBQWlCLE1BQU0sZUFBZSxDQUFDO0FBR3RILE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUNsRCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUN4RCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFFdEQ7SUF1Q0Usa0NBQ1UsSUFBaUIsRUFDakIsT0FBd0I7UUFEeEIsU0FBSSxHQUFKLElBQUksQ0FBYTtRQUNqQixZQUFPLEdBQVAsT0FBTyxDQUFpQjtRQWxDeEIsZUFBVSxHQUFHLElBQUksWUFBWSxFQUFPLENBQUM7UUFDckMsZ0JBQVcsR0FBRyxJQUFJLFlBQVksRUFBTyxDQUFDO1FBYXZDLGlCQUFZLEdBQVEsRUFBRSxDQUFDO1FBR2hDLGdCQUFXLEdBQUc7WUFDWixLQUFLLEVBQUUsTUFBTTtZQUNiLEtBQUssRUFBRSxHQUFHO1lBQ1YsTUFBTSxFQUFFLEdBQUc7WUFDWCxXQUFXLEVBQUUsSUFBSTtTQUNsQixDQUFDO1FBRUYsWUFBTyxHQUFHO1lBQ1IsRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLEdBQUcsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFO1lBQzFELEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxHQUFHLEVBQUUsUUFBUSxFQUFFLElB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QUNsQjtJQUNILENBQUM7SUFDSCx3QkFBQztBQUFELENBQUMsQUFSRCxJQVFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIE91dHB1dCwgSW5wdXQsIFZpZXdDaGlsZCwgRXZlbnRFbWl0dGVyLCBUZW1wbGF0ZVJlZiwgQWZ0ZXJWaWV3SW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBEYXRhVGFibGVDb21wb25lbnQgfSBmcm9tICdAZmFycmlzL3VpLWRhdGF0YWJsZSc7XHJcbmltcG9ydCB7IFR5cGVDb252ZXJ0ZXIgfSBmcm9tICdAZmFycmlzL3VpLXByb3BlcnR5LXBhbmVsJztcclxuaW1wb3J0IHsgSHR0cFNlcnZpY2UgfSBmcm9tICdAZWNwLWNhZi9jYWYtY29tbW9uJztcclxuaW1wb3J0IHsgRGF0YWdyaWRDb21wb25lbnQgfSBmcm9tICdAZmFycmlzL3VpLWRhdGFncmlkJztcclxuaW1wb3J0IHsgTWVzc2FnZXJTZXJ2aWNlIH0gZnJvbSAnQGZhcnJpcy91aS1tZXNzYWdlcic7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2FwcC1lbnRyeS1mb3JtLWVkaXRvcicsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL2VudHJ5LWZvcm0tZWRpdG9yLmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9lbnRyeS1mb3JtLWVkaXRvci5jb21wb25lbnQuY3NzJ11cclxufSlcclxuZXhwb3J0IGNsYXNzIEVudHJ5Rm9ybUVkaXRvckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgQWZ0ZXJWaWV3SW5pdCB7XHJcblxyXG4gIEBPdXRwdXQoKSBjbG9zZU1vZGFsID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XHJcbiAgQE91dHB1dCgpIHN1Ym1pdE1vZGFsID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XHJcblxyXG4gIEBJbnB1dCgpXHJcbiAgc2V0IHZhbHVlKGRhdGE6IGFueSkge1xyXG4gICAgaWYgKGRhdGEpIHtcclxuICAgICAgdGhpcy5mbG93Rm9ybUlkID0gZGF0YS5pZDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIEBWaWV3Q2hpbGQoJ2ljb25TZWxlY3RGb290ZXInKSBtb2RhbEZvb3RlcjogVGVtcGxhdGVSZWY8YW55PjtcclxuXHJcbiAgQFZpZXdDaGlsZCgnZ3JpZCcpIGdyaWQ6IERhdGFncmlkQ29tcG9uZW50O1xyXG5cclxuICBASW5wdXQoKSBlZGl0b3JQYXJhbXM6IGFueSA9IHt9O1xyXG5cclxuICBwcml2YXRlIGZsb3dGb3JtSWQ6IHN0cmluZztcclxuICBtb2RhbENvbmZpZyA9IHtcclxuICAgIHRpdGxlOiAn5rWB56iL5YiG57G7JyxcclxuICAgIHdpZHRoOiA1NDAsXHJcbiAgICBoZWlnaHQ6IDUyMCxcclxuICAgIHNob3dCdXR0b25zOiB0cnVlXHJcbiAgfTtcclxuXHJcbiAgY29sdW1ucyA9IFtcclxuICAgIHsgdGl0bGU6ICfnvJblj7cnLCBmaWVsZDogJ2NvZGUnLCB3aWR0aDogMTAwLCBzb3J0YWJsZTogdHJ1ZSB9LFxyXG4gICAgeyB0aXRsZTogJ+WQjeensCcsIGZpZWxkOiAnbmFtZScsIHdpZHRoOiAxMDAsIHNvcnRhYmxlOiB0cnVlIH0sXHJcbiAgICB7IHRpdGxlOiAn57G75Z6LJywgZmllbGQ6ICdiYXNlJywgd2lkdGg6IDYwLCBmb3JtYXR0ZXI6IHsgdHlwZTogJ2Jvb2xlYW4nLCBvcHRpb25zOiB7IHRydWVUZXh0OiAn5Z+656GAJywgZmFsc2VUZXh0OiAn5omp5bGVJyB9IH19XHJcbiAgXTtcclxuXHJcbiAgZGF0YSA9IFtdO1xyXG5cclxuICBjb25zdHJ1Y3RvcihcclxuICAgIHByaXZhdGUgaHR0cDogSHR0cFNlcnZpY2UsXHJcbiAgICBwcml2YXRlIG1lc3NhZ2U6IE1lc3NhZ2VyU2VydmljZVxyXG4gICkgeyB9XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gICAgdGhpcy5nZXRCYXNlQW5kRXh0ZW5kRmxvd0Zvcm0oKTtcclxuICB9XHJcbiAgbmdBZnRlclZpZXdJbml0KCkge1xyXG4gIH1cclxuXHJcbiAgY2xpY2tPSygpIHtcclxuICAgIGlmICghdGhpcy5ncmlkLnNlbGVjdGVkUm93KSB7XHJcbiAgICAgIHRoaXMubWVzc2FnZS5pbmZvKCflsJrmnKrpgInmi6nmtYHnqIvliIbnsbsnKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgY29uc3Qgb2JqZWN0ID0geyB2YWx1ZTogdGhpcy5ncmlkLnNlbGVjdGVkUm93LmRhdGEsIHBhcmFtZXRlcnM6IG51bGwgfTtcclxuICAgIHRoaXMuc3VibWl0TW9kYWwuZW1pdChvYmplY3QpO1xyXG4gIH1cclxuXHJcbiAgY2xpY2tDYW5jZWwoKSB7XHJcbiAgICB0aGlzLmNsb3NlTW9kYWwuZW1pdCgpO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBnZXRCYXNlQW5kRXh0ZW5kRmxvd0Zvcm0oKSB7XHJcbiAgICBpZiAodGhpcy5mbG93Rm9ybUlkKSB7XHJcbiAgICAgIGNvbnN0IHVybCA9IGAvYXBpL3J1bnRpbWUvd2YvdjEuMC9mbG93Rm9ybS8ke3RoaXMuZmxvd0Zvcm1JZH0vYmFzZUFuZEV4dGVuZGA7XHJcbiAgICAgIHRoaXMuaHR0cC5nZXQodXJsKS5zdWJzY3JpYmUoKHJlOiBhbnkpID0+IHtcclxuICAgICAgICBpZiAocmUgJiYgcmUubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgdGhpcy5kYXRhID0gcmU7XHJcbiAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5ncmlkLnNlbGVjdFJvdyh0aGlzLmZsb3dGb3JtSWQsIHRydWUpO1xyXG4gICAgICAgICAgfSwgMCk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIHRoaXMubWVzc2FnZS5pbmZvKCfmtYHnqIvliIbnsbvlt7Lnu4/kuI3lrZjlnKgnKTtcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbn1cclxuZXhwb3J0IGNsYXNzIEZsb3dGb3JtQ29udmVydGVyIGltcGxlbWVudHMgVHlwZUNvbnZlcnRlciB7XHJcbiAgY29uc3RydWN0b3IoKSB7IH1cclxuXHJcbiAgY29udmVydFRvKGRhdGEpOiBzdHJpbmcge1xyXG4gICAgaWYgKGRhdGEpIHtcclxuICAgICAgcmV0dXJuIGRhdGEubmFtZTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcblxyXG5cclxuXHJcbiJdfQ==