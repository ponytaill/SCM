/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Injector, ViewChild, TemplateRef, Input, Output, EventEmitter } from '@angular/core';
import { SendMessage } from '../time-limit-control.entity';
import { MessagerService } from '@farris/ui-messager';
import { ProcessDesignerUIState } from '../../../app/process-designer.uistate';
export class SendMessageOperationComponent {
    /**
     * @param {?} injector
     * @param {?} message
     * @param {?} uistate
     */
    constructor(injector, message, uistate) {
        this.injector = injector;
        this.message = message;
        this.uistate = uistate;
        // operation: ExpireOperation = new ExpireOperation();
        this.operation = new SendMessage('activity');
        this.closeEmitter = new EventEmitter();
        this.submitEmitter = new EventEmitter();
        this.typeGroup = this.uistate.messageChannels.map((/**
         * @param {?} m
         * @return {?}
         */
        m => ({ value: m.code, name: m.name })));
        this.receiverVariables = [
            { value: 'procInstCreator', name: '流程发起人' }
        ];
        this.activityReceiverVariables = [
            { value: 'workItemParticipant', name: '当前节点办理人' },
            { value: 'procInstCreator', name: '流程发起人' },
            { value: 'preActExecutors', name: '上一节点办理人' }
        ];
        this.placeholder = '';
        this.placeholder2 = '';
        this.parser = (/**
         * @param {?} val
         * @return {?}
         */
        (val) => {
            // console.log(val);
            return Number(val);
        });
        this.timeUnitCollection = [
            { value: 'day', text: '天' },
            { value: 'hour', text: '时' },
            { value: 'minute', text: '分' }
        ];
        this.location = 'activity';
        this.activityReceiverVar = '';
        this.bindingData = {};
    }
    /**
     * @param {?} info
     * @return {?}
     */
    set value(info) {
        this.operation = Object.assign({}, info);
        if (this.operation.sendType === undefined) {
            /** @type {?} */
            const sendMessage = new SendMessage(this.location);
            this.operation.cycleEnable = sendMessage.cycleEnable;
            this.operation.cycleTimeUnit = sendMessage.cycleTimeUnit;
            this.operation.receiver = sendMessage.receiver;
            this.operation.subject = sendMessage.subject;
            this.operation.message = sendMessage.message;
        }
        if (this.operation.receiver && this.operation.receiver.length > 0) {
            /** @type {?} */
            let array = this.operation.receiver.split(',');
            if (array.indexOf('workItemParticipant') > -1) {
                this.receiverVari = 'workItemParticipant';
                this.activityReceiverVar += 'workItemParticipant,';
            }
            if (array.indexOf('procInstCreator') > -1) {
                this.receiverVari = 'procInstCreator';
                this.activityReceiverVar += 'procInstCreator,';
            }
            if (array.indexOf('preActExecutors') > -1) {
                this.activityReceiverVar += 'preActExecutors,';
            }
            if (this.activityReceiverVar.length > 0) {
                this.activityReceiverVar = this.activityReceiverVar.substring(0, this.activityReceiverVar.length - 1);
            }
            if (array.length > 0) {
                array = array.filter((/**
                 * @param {?} a
                 * @return {?}
                 */
                a => a !== 'procInstCreator'));
                this.bindingData.id = '';
                for (const r of array) {
                    this.bindingData.id += r + ',';
                }
                if (this.bindingData.id) {
                    this.bindingData.id = this.bindingData.id.substring(0, this.bindingData.id.length - 1);
                }
            }
        }
        if (this.operation.receiverText && this.operation.receiverText.length > 0) {
            /** @type {?} */
            let array = this.operation.receiverText.split(',');
            if (array.length > 0) {
                array = array.filter((/**
                 * @param {?} a
                 * @return {?}
                 */
                a => a !== '流程发起人'));
                this.bindingData.name = '';
                for (const r of array) {
                    this.bindingData.name += r + ',';
                }
                if (this.bindingData.name) {
                    this.bindingData.name = this.bindingData.name.substring(0, this.bindingData.name.length - 1);
                }
            }
        }
    }
    /**
     * @return {?}
     */
    get value() {
        return this.operation;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @return {?}
     */
    clickOK() {
        this.operation.cycleTime += '';
        if (this.location === 'process') {
            this.setReceiver();
        }
        if (this.location === 'activity') {
            this.setActivityReceiver();
        }
        if (this.validator()) {
            this.submitEmitter.emit(this.operation);
        }
    }
    /**
     * @return {?}
     */
    clickCancel() {
        this.closeEmitter.emit();
    }
    /**
     * @return {?}
     */
    clear() {
        this.bindingData = {};
    }
    /**
     * @private
     * @return {?}
     */
    setReceiver() {
        /** @type {?} */
        let receiver = '';
        /** @type {?} */
        let receiverText = '';
        if (this.receiverVari) {
            receiver += this.receiverVari + ',';
            /** @type {?} */
            const array = this.receiverVari.split(',');
            if (array.length > 0) {
                for (const a of array) {
                    /** @type {?} */
                    const t = this.receiverVariables.find((/**
                     * @param {?} v
                     * @return {?}
                     */
                    v => v.value === a)).name;
                    receiverText += t + ',';
                }
            }
        }
        if (this.bindingData.id) {
            receiver += this.bindingData.id + ',';
            receiverText += this.bindingData.name + ',';
        }
        if (receiver) {
            receiver = receiver.substring(0, receiver.length - 1);
        }
        if (receiverText) {
            receiverText = receiverText.substring(0, receiverText.length - 1);
        }
        this.operation.receiver = receiver;
        this.operation.receiverText = receiverText;
    }
    /**
     * @return {?}
     */
    setActivityReceiver() {
        /** @type {?} */
        let receiver = '';
        if (this.activityReceiverVar) {
            receiver += this.activityReceiverVar + ',';
        }
        if (receiver) {
            receiver = receiver.substring(0, receiver.length - 1);
        }
        this.operation.receiver = receiver;
    }
    /**
     * @private
     * @return {?}
     */
    validator() {
        if (!this.operation.sendType) {
            this.message.info('发送方式不允许为空！');
            return false;
        }
        if (!this.operation.subject) {
            this.message.info('消息主题不允许为空！');
            return false;
        }
        if (!this.operation.message) {
            this.message.info('消息内容不允许为空！');
            return false;
        }
        if (!this.operation.receiver) {
            this.message.info('接收人不允许为空！');
            return false;
        }
        return true;
    }
}
SendMessageOperationComponent.decorators = [
    { type: Component, args: [{
                selector: 'lib-send-message-operation',
                template: "<div class=\"f-page\">\r\n  <div class=\"f-utils-fill-flex-column farris-split-section m-2 h-100\">\r\n    <section class=\"f-utils-fill-flex-column h-100\">\r\n      <div class=\"f-section-header pt-2 mx-2\">\r\n        <div class=\"f-title\">\r\n          <h4 class=\"f-title-text\">\u9884\u8B66\u6D88\u606F\u8BBE\u7F6E</h4>\r\n        </div>\r\n      </div>\r\n      <div class=\"f-utils-fill-flex-column h-100\">\r\n        <perfect-scrollbar [config]=\"{}\">\r\n          <form class=\"h-100\">\r\n            <div class=\"farris-form form-inline farris-form-inline\">\r\n              <div class=\"farris-form-controls-inline\">\r\n                <div class=\"farris-group-wrap\">\r\n                  <div class=\"form-group\">\r\n                    <label class=\"col-form-label pl-1 mr-3\">\r\n                      <span class=\"farris-label-text\">\u542F\u7528\u5FAA\u73AF\u9884\u8B66</span>\r\n                    </label>\r\n                    <div class=\"farris-input-wrap mr-5\">\r\n                      <farris-switch [(ngModel)]=\"operation.cycleEnable\" name=\"cycleEnable\"></farris-switch>\r\n                      <div class=\"farris-feedback valid-feedback\"></div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"farris-form-controls-inline\">\r\n                <div class=\"farris-group-wrap\">\r\n                  <div class=\"form-group\" style=\"width: 100%;\">\r\n                    <label class=\"col-form-label pl-1 mr-3\">\r\n                      <span class=\"farris-label-text\">\u5FAA\u73AF\u65F6\u95F4\u95F4\u9694</span>\r\n                    </label>\r\n                    <div class=\"farris-input-wrap mr-1\" style=\"width: 35%;\">\r\n                      <farris-number-spinner [(ngModel)]=\"operation.cycleTime\" name=\"cycleTime\"\r\n                                             [editable]=\"true\" [precision]=\"0\" [parser]=\"parser\"\r\n                                             [min]=\"0\"></farris-number-spinner>\r\n                      <div class=\"farris-feedback valid-feedback\"></div>\r\n                    </div>\r\n                    <div class=\"farris-input-wrap mr-5\" style=\"width: 30%;\">\r\n                      <farris-combo-list [(ngModel)]=\"operation.cycleTimeUnit\" name=\"cycleTimeUnit\" [idField]=\"'value'\" [textField]=\"'text'\"\r\n                                         [valueField]=\"'value'\" [data]=\"timeUnitCollection\" [panelHeight]=\"'auto'\"\r\n                                         [editable]=\"false\" [enableClear]=\"false\">\r\n                      </farris-combo-list>\r\n                      <div class=\"farris-feedback valid-feedback\"></div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"farris-group-wrap\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\">\r\n                    <span class=\"farris-label-info text-danger\">*</span>\r\n                    <span class=\"farris-label-text\">\u53D1\u9001\u65B9\u5F0F</span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap ml-1\">\r\n                    <farris-checkboxgroup #checkboxGroup [(ngModel)]=\"operation.sendType\" name=\"sendType\" [horizontal]=\"true\"\r\n                      [data]=\"typeGroup\">\r\n                    </farris-checkboxgroup>\r\n                    <div class=\"farris-feedback valid-feedback\"></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"farris-group-wrap my-3\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\">\r\n                    <span class=\"farris-label-info text-danger\">*</span>\r\n                    <span class=\"farris-label-text\">\u6D88\u606F\u4E3B\u9898</span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap ml-1\">\r\n                    <input class=\"form-control\" type=\"text\" value=\"subject\" [(ngModel)]=\"operation.subject\" name=\"subject\"\r\n                      [placeholder]=\"placeholder\" />\r\n                    <div class=\"farris-feedback valid-feedback\"></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"farris-group-wrap my-3\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\">\r\n                    <span class=\"farris-label-info text-danger\">*</span>\r\n                    <span class=\"farris-label-text\">\u6D88\u606F\u5185\u5BB9</span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap ml-1\">\r\n                    <textarea class=\"form-control\" type=\"text\" value=\"message\" [(ngModel)]=\"operation.message\" name=\"message\"\r\n                      [placeholder]=\"placeholder2\" style=\"height: 100px;\"></textarea>\r\n                    <div class=\"farris-feedback valid-feedback\"></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div *ngIf=\"location==='process'\" class=\"farris-group-wrap\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\">\r\n                    <span class=\"farris-label-info text-danger\">*</span>\r\n                    <span class=\"farris-label-text\">\u63A5\u6536\u4EBA</span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap ml-1\">\r\n                    <div class=\"pb-2\">\r\n                      <farris-checkboxgroup #receiverVariable [(ngModel)]=\"receiverVari\" name=\"receiverVariable\"\r\n                        [horizontal]=\"true\" [data]=\"receiverVariables\">\r\n                      </farris-checkboxgroup>\r\n                    </div>\r\n                    <div>\r\n                      <sys-farris-grid-lookup #userHelp [singleSelect]=\"false\" [displayTxt]=\"bindingData.name\" [pagination]=\"true\"\r\n                        [pageSize]=\"20\" [title]=\"'\u7CFB\u7EDF\u7528\u6237'\" [sourceType]=\"'user'\" [bindingData]=\"bindingData\"\r\n                        [filter]=\"{notGetCurrentUser:false, notGetStopUser:true}\" [typeMode]=\"1\" (clear)=\"clear()\">\r\n                      </sys-farris-grid-lookup>\r\n                    </div>\r\n                    <div class=\"farris-feedback valid-feedback\"></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div *ngIf=\"location==='activity'\" class=\"farris-group-wrap\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\">\r\n                    <span class=\"farris-label-info text-danger\">*</span>\r\n                    <span class=\"farris-label-text\">\u63A5\u6536\u4EBA</span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap ml-1\">\r\n                    <div class=\"pb-2\">\r\n                      <farris-checkboxgroup #receiverVariable1 [(ngModel)]=\"activityReceiverVar\" name=\"ActivityReceiverVariable\"\r\n                                            [horizontal]=\"true\" [data]=\"activityReceiverVariables\">\r\n                      </farris-checkboxgroup>\r\n                    </div>\r\n                    <div class=\"farris-feedback valid-feedback\"></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </perfect-scrollbar>\r\n\r\n      </div>\r\n    </section>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #footer>\r\n  <button type=\"button\" class=\"btn btn-primary btn-sm mx-2\" (click)=\"clickOK()\">\u786E\u5B9A</button>\r\n  <button type=\"button\" class=\"btn btn-secondary btn-sm mx-2\" (click)=\"clickCancel()\">\u53D6\u6D88</button>\r\n</ng-template>\r\n",
                styles: [""]
            }] }
];
/** @nocollapse */
SendMessageOperationComponent.ctorParameters = () => [
    { type: Injector },
    { type: MessagerService },
    { type: ProcessDesignerUIState }
];
SendMessageOperationComponent.propDecorators = {
    footer: [{ type: ViewChild, args: ['footer',] }],
    value: [{ type: Input }],
    closeEmitter: [{ type: Output }],
    submitEmitter: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    SendMessageOperationComponent.prototype.footer;
    /** @type {?} */
    SendMessageOperationComponent.prototype.operation;
    /** @type {?} */
    SendMessageOperationComponent.prototype.closeEmitter;
    /** @type {?} */
    SendMessageOperationComponent.prototype.submitEmitter;
    /** @type {?} */
    SendMessageOperationComponent.prototype.typeGroup;
    /** @type {?} */
    SendMessageOperationComponent.prototype.receiverVariables;
    /** @type {?} */
    SendMessageOperationComponent.prototype.activityReceiverVariables;
    /** @type {?} */
    SendMessageOperationComponent.prototype.placeholder;
    /** @type {?} */
    SendMessageOperationComponent.prototype.placeholder2;
    /** @type {?} */
    SendMessageOperationComponent.prototype.parser;
    /** @type {?} */
    SendMessageOperationComponent.prototype.timeUnitCollection;
    /** @type {?} */
    SendMessageOperationComponent.prototype.location;
    /** @type {?} */
    SendMessageOperationComponent.prototype.receiverVari;
    /** @type {?} */
    SendMessageOperationComponent.prototype.activityReceiverVar;
    /** @type {?} */
    SendMessageOperationComponent.prototype.bindingData;
    /**
     * @type {?}
     * @private
     */
    SendMessageOperationComponent.prototype.injector;
    /**
     * @type {?}
     * @private
     */
    SendMessageOperationComponent.prototype.message;
    /**
     * @type {?}
     * @private
     */
    SendMessageOperationComponent.prototype.uistate;
}
//# sourceMappingURL=data:application/json;base64,