/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, HostBinding, Input, Output, EventEmitter, ViewChild, TemplateRef } from '@angular/core';
import { CallActivitySubProcess } from './call-activity-sub-process.entity';
import { MessagerService } from '@farris/ui-messager';
import { ProcessDeUtil } from '../../domain/process-de-util';
import { HttpService } from '@ecp-caf/caf-common';
import { ProcessDesignerUIState } from '../../app/process-designer.uistate';
import { ExpressionService, InjectedType } from '@gsp-svc/expression';
export class CallActivitySubProcessComponent {
    /**
     * @param {?} message
     * @param {?} util
     * @param {?} http
     * @param {?} designerState
     * @param {?} expr
     */
    constructor(message, util, http, designerState, expr) {
        this.message = message;
        this.util = util;
        this.http = http;
        this.designerState = designerState;
        this.expr = expr;
        this.cls = 'farris-main-area flex-column';
        this.closeModal = new EventEmitter();
        this.submitModal = new EventEmitter();
        this.modalConfig = {
            title: '子流程选项',
            width: 480,
            height: 360,
            showButtons: true
        };
        this.callActivitySubProcess = new CallActivitySubProcess();
        this.groupIcon = '<i class="f-icon f-icon-lookup"></i>';
    }
    /**
     * @param {?} v
     * @return {?}
     */
    set value(v) {
        if (v) {
            this.callActivitySubProcess = v;
            this.getProcessDefKey(this.callActivitySubProcess.calledElement);
            this.getFlowForm(this.callActivitySubProcess.calledBizDefKey);
        }
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @return {?}
     */
    clickOK() {
        if (this.validator()) {
            /** @type {?} */
            const object = { value: this.callActivitySubProcess, parameters: null };
            this.submitModal.emit(object);
        }
    }
    /**
     * @return {?}
     */
    clickCancel() {
        this.closeModal.emit();
    }
    /**
     * @param {?} args
     * @return {?}
     */
    processConfirm(args) {
        if (args) {
            this.callActivitySubProcess.calledElement = args.id;
            this.callActivitySubProcess.calledElementName = args.name;
        }
    }
    /**
     * @param {?} args
     * @return {?}
     */
    clearProcessDef(args) {
        this.callActivitySubProcess.calledElement = '';
        this.callActivitySubProcess.calledElementName = '';
    }
    /**
     * @param {?} args
     * @return {?}
     */
    flowFormConfirm(args) {
        if (args) {
            this.callActivitySubProcess.calledBizDefKey = args.id;
            this.callActivitySubProcess.calledBizDefName = args.name;
        }
    }
    /**
     * @param {?} args
     * @return {?}
     */
    clearFlowForm(args) {
        this.callActivitySubProcess.calledBizDefKey = '';
        this.callActivitySubProcess.calledBizDefName = '';
    }
    /**
     * @return {?}
     */
    setBizDataId() {
        this.showExprHelp();
    }
    /**
     * @private
     * @return {?}
     */
    showExprHelp() {
        if (this.designerState.schemas.length > 0) {
            for (const schema of this.designerState.schemas) {
                this.expr.addSchema('Schema', schema);
            }
            if (this.designerState.schemas[0].entityTypes && this.designerState.schemas[0].entityTypes.length > 0) {
                /** @type {?} */
                const entityType = this.designerState.schemas[0].entityTypes[0];
                this.expr.addInjectedEntity(entityType.name, 'Schema', entityType.name, InjectedType.EntityType);
            }
        }
        /** @type {?} */
        const context = new Array();
        if (this.designerState.procInstContext.length > 0) {
            for (const variable of this.designerState.procInstContext) {
                context.push(variable);
                // this.expr.addContext(variable);
            }
        }
        if (this.designerState.formalParameterContext.length > 0) {
            for (const variable of this.designerState.formalParameterContext) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                c => c.key === variable.key))) {
                    context.push(variable);
                }
                // this.expr.addContext(variable);
            }
        }
        if (this.designerState.participantContext.length > 0) {
            for (const variable of this.designerState.participantContext) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                c => c.key === variable.key))) {
                    context.push(variable);
                }
                // this.expr.addContext(variable);
            }
        }
        if (this.designerState.processVariableContext.length > 0) {
            for (const variable of this.designerState.processVariableContext) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                c => c.key === variable.key))) {
                    context.push(variable);
                }
                // this.expr.addContext(variable);
            }
        }
        if (context.length > 0) {
            for (const v of context) {
                this.expr.addContext(v);
            }
        }
        this.expr.addExpressionText(this.callActivitySubProcess.bizDataId);
        this.expr.buildExpression().then((/**
         * @param {?} expressioninfo
         * @return {?}
         */
        (expressioninfo) => {
            this.callActivitySubProcess.bizDataId = expressioninfo;
        }));
    }
    /**
     * @param {?} bool
     * @return {?}
     */
    valueChange(bool) {
        if (bool) {
            this.callActivitySubProcess.bizDataId = null;
        }
    }
    /**
     * @private
     * @return {?}
     */
    validator() {
        if (!this.callActivitySubProcess.inheritBizDataId && !this.callActivitySubProcess.bizDataId) {
            this.message.warning('当子流程与父流程单据不一致时，请设置子流程单据内码！');
            return false;
        }
        return true;
    }
    /**
     * @private
     * @param {?} key
     * @return {?}
     */
    getProcessDefKey(key) {
        /** @type {?} */
        let url = this.util.getProcDefKeyWebApi();
        if (key) {
            url += `/${key}`;
            this.http.get(url).subscribe((/**
             * @param {?} re
             * @return {?}
             */
            (re) => {
                this.callActivitySubProcess.calledElementName = re.name;
            }));
        }
    }
    /**
     * @private
     * @param {?} id
     * @return {?}
     */
    getFlowForm(id) {
        /** @type {?} */
        let url = this.util.getFlowFormWebApi();
        if (id) {
            url += `/${id}`;
            this.http.get(url).subscribe((/**
             * @param {?} re
             * @return {?}
             */
            (re) => {
                this.callActivitySubProcess.calledBizDefName = re.name;
            }));
        }
    }
}
CallActivitySubProcessComponent.decorators = [
    { type: Component, args: [{
                selector: 'lib-call-activity-sub-process',
                template: "<div class=\"f-page\">\r\n  <div class=\"f-utils-fill-flex-column farris-split-section m-2 h-100\">\r\n    <section class=\"f-utils-fill-flex-column h-100\">\r\n      <div class=\"f-section-header pt-2 mx-2\">\r\n        <div class=\"f-title\">\r\n          <h4 class=\"f-title-text\">\u8BBE\u7F6E\u9009\u9879</h4>\r\n        </div>\r\n      </div>\r\n      <div class=\"f-utils-fill-flex-column h-100\">\r\n        <form class=\"h-100\">\r\n          <div class=\"farris-form form-inline farris-form-inline\">\r\n            <div class=\"farris-group-wrap mt-1\">\r\n              <div class=\"form-group farris-form-group\">\r\n                <label class=\"col-form-label\">\r\n                  <span class=\"farris-label-text\">\u6D41\u7A0B\u5206\u7C7B</span>\r\n                </label>\r\n                <div class=\"farris-input-wrap ml-1\">\r\n                  <wf-bizprocess-lookup [title]=\"'\u6D41\u7A0B\u5206\u7C7B'\" [sourceType]=\"'flowform'\" [displayTxt]=\"callActivitySubProcess.calledBizDefName\"\r\n                    (afterConfirm)=\"flowFormConfirm($event)\" (clear)=\"clearFlowForm($event)\">\r\n                  </wf-bizprocess-lookup>\r\n                  <div class=\"farris-feedback valid-feedback\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"farris-group-wrap my-4\">\r\n              <div class=\"form-group farris-form-group\">\r\n                <label class=\"col-form-label\">\r\n                  <span class=\"farris-label-text\">\u6D41\u7A0B\u5B9A\u4E49</span>\r\n                </label>\r\n                <div class=\"farris-input-wrap ml-1\">\r\n                  <wf-bizprocess-lookup [title]=\"'\u6D41\u7A0B\u5B9A\u4E49'\"  [displayTxt]=\"callActivitySubProcess.calledElementName\"\r\n                    (afterConfirm)=\"processConfirm($event)\" (clear)=\"clearProcessDef($event)\">\r\n                  </wf-bizprocess-lookup>\r\n                  <div class=\"farris-feedback valid-feedback\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <!-- <div class=\"farris-group-wrap my-4\">\r\n              <div class=\"form-group farris-form-group\">\r\n                <label class=\"col-form-label\">\r\n                  <span class=\"farris-label-info text-danger\">*</span>\r\n                  <span class=\"farris-label-text\">\u7EE7\u627F\u53D8\u91CF</span>\r\n                </label>\r\n                <div class=\"farris-input-wrap ml-1\">\r\n                  <farris-switch [(ngModel)]=\"callActivitySubProcess.inheritVariables\" name=\"inheritVariables\">\r\n                  </farris-switch>\r\n                  <div class=\"farris-feedback valid-feedback\"></div>\r\n                </div>\r\n              </div>\r\n            </div> -->\r\n            <div class=\"farris-group-wrap my-4\">\r\n              <div class=\"form-group farris-form-group\">\r\n                <label class=\"ml-4 pl-3\">\r\n                  <span class=\"farris-label-text\">\u4E0E\u7236\u6D41\u7A0B\u540C\u4E00\u5F20\u4E1A\u52A1\u5355\u636E</span>\r\n                </label>\r\n                <div class=\"farris-input-wrap ml-3\">\r\n                  <farris-switch  [(ngModel)]=\"callActivitySubProcess.inheritBizDataId\" name=\"inheritBizDataId\"\r\n                    (valueChange)=\"valueChange($event)\">\r\n                  </farris-switch>\r\n                  <div class=\"farris-feedback valid-feedback\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div *ngIf=\"!callActivitySubProcess.inheritBizDataId\" class=\"farris-group-wrap\">\r\n              <div class=\"form-group farris-form-group\">\r\n                <label class=\"ml-4 pl-3\">\r\n                  <span class=\"farris-label-text\">\u8BBE\u7F6E\u5355\u636E\u5185\u7801</span>\r\n                </label>\r\n                <div class=\"farris-input-wrap ml-3\">\r\n                  <input-group class=\"form-control\" style=\"width: 100%;padding:0;border:0;\" [enableClear]=\"false\"\r\n                    [ngModel]=\"callActivitySubProcess.bizDataId\" name=\"bizDataId\"\r\n                    [editable]=\"false\" (clickHandle)=\"setBizDataId()\" [groupText]=\"groupIcon\"></input-group>\r\n                  <div class=\"farris-feedback valid-feedback\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </section>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #iconSelectFooter>\r\n  <button type=\"button\" class=\"btn btn-primary btn-sm mx-2\" (click)=\"clickOK()\">\u786E\u5B9A</button>\r\n  <button type=\"button\" class=\"btn btn-secondary btn-sm mx-2\" (click)=\"clickCancel()\">\u53D6\u6D88</button>\r\n</ng-template>\r\n",
                styles: [""]
            }] }
];
/** @nocollapse */
CallActivitySubProcessComponent.ctorParameters = () => [
    { type: MessagerService },
    { type: ProcessDeUtil },
    { type: HttpService },
    { type: ProcessDesignerUIState },
    { type: ExpressionService }
];
CallActivitySubProcessComponent.propDecorators = {
    cls: [{ type: HostBinding, args: ['class',] }],
    value: [{ type: Input }],
    closeModal: [{ type: Output }],
    submitModal: [{ type: Output }],
    modalFooter: [{ type: ViewChild, args: ['iconSelectFooter',] }]
};
if (false) {
    /** @type {?} */
    CallActivitySubProcessComponent.prototype.cls;
    /** @type {?} */
    CallActivitySubProcessComponent.prototype.closeModal;
    /** @type {?} */
    CallActivitySubProcessComponent.prototype.submitModal;
    /** @type {?} */
    CallActivitySubProcessComponent.prototype.modalFooter;
    /** @type {?} */
    CallActivitySubProcessComponent.prototype.modalConfig;
    /** @type {?} */
    CallActivitySubProcessComponent.prototype.callActivitySubProcess;
    /** @type {?} */
    CallActivitySubProcessComponent.prototype.groupIcon;
    /**
     * @type {?}
     * @private
     */
    CallActivitySubProcessComponent.prototype.message;
    /**
     * @type {?}
     * @private
     */
    CallActivitySubProcessComponent.prototype.util;
    /**
     * @type {?}
     * @private
     */
    CallActivitySubProcessComponent.prototype.http;
    /**
     * @type {?}
     * @private
     */
    CallActivitySubProcessComponent.prototype.designerState;
    /**
     * @type {?}
     * @private
     */
    CallActivitySubProcessComponent.prototype.expr;
}
export class CallActivitySubProcessConverter {
    constructor() { }
    /**
     * @param {?} data
     * @return {?}
     */
    convertTo(data) {
        if (data && (data.calledBizDefKey || data.calledElement)) {
            return '（已设置）';
        }
        return '（未设置）';
    }
}
//# sourceMappingURL=data:application/json;base64,