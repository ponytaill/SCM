/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, HostBinding, ViewChild, ElementRef, NgZone } from '@angular/core';
import { HttpService } from '@ecp-caf/caf-common';
import { SysFarrisLookupComponent } from '@gsp-sys/sysmgr-ui';
import { ProcessDesignerUIState } from '../../../../app/process-designer.uistate';
import { ExprEditMode, ExpressionService, InjectedType } from '@gsp-svc/expression';
import { PositionPerformerEntity } from '../../entities/position-performer.entity';
export class PositionPerformerComponent {
    /**
     * @param {?} http
     * @param {?} designerUIState
     * @param {?} expr
     * @param {?} ngZone
     */
    constructor(http, designerUIState, expr, ngZone) {
        this.http = http;
        this.designerUIState = designerUIState;
        this.expr = expr;
        this.ngZone = ngZone;
        this.cls = 'd-flex flex-fill h-100';
        this.showClearButton = false;
        this.groupIcon = '<i class="f-icon f-icon-lookup"></i>';
        this.positionTypes = [
            { value: '0', text: '组织岗' },
            { value: '1', text: '通用岗' }
        ];
        this.filter = {};
        this.position = new PositionPerformerEntity();
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
        this.ngZone.runOutsideAngular((/**
         * @return {?}
         */
        () => {
            this.inputGroup.nativeElement.addEventListener('mouseenter', this.onMouseEnter.bind(this));
            this.inputGroup.nativeElement.addEventListener('mouseleave', this.onMouseLeave.bind(this));
        }));
    }
    /**
     * @param {?} event
     * @return {?}
     */
    onMouseEnter(event) {
        this.showClearButton = true;
        if (this.showClearButton) {
            this.toggleClearIcon(event, true);
        }
    }
    /**
     * @param {?} event
     * @return {?}
     */
    onMouseLeave(event) {
        this.showClearButton = false;
        this.toggleClearIcon(event, false);
    }
    /**
     * @private
     * @param {?} event
     * @param {?=} isShow
     * @return {?}
     */
    toggleClearIcon(event, isShow = false) {
        /** @type {?} */
        const str = isShow ? '' : 'none';
        /** @type {?} */
        const clearIcon = event.target.querySelector('.input-group-clear');
        if (clearIcon) {
            clearIcon.style.display = str;
        }
    }
    /**
     * @return {?}
     */
    clear() {
        this.position.performerId = null;
        this.position.performerName = null;
    }
    /**
     * @param {?} data
     * @return {?}
     */
    positionTypeChange(data) {
        if (data.value === '0') {
            this.filter = { positionType: 0 };
        }
        else {
            this.filter = { positionType: 1 };
        }
        this.clear();
        this.position.orgType = null;
        this.position.orgId = null;
    }
    /**
     * @return {?}
     */
    selectOrganition() {
        if (this.position.positionType === '1') {
            if (this.designerUIState.schemas.length > 0) {
                for (const schema of this.designerUIState.schemas) {
                    this.expr.addSchema('Schema', schema);
                }
                if (this.designerUIState.schemas[0].entityTypes && this.designerUIState.schemas[0].entityTypes.length > 0) {
                    /** @type {?} */
                    const entityType = this.designerUIState.schemas[0].entityTypes[0];
                    this.expr.addInjectedEntity(entityType.name, 'Schema', entityType.name, InjectedType.EntityType);
                }
            }
            this.expr.addExpressionText(this.position.orgId);
            this.expr.buildExpression().then((/**
             * @param {?} expr
             * @return {?}
             */
            (expr) => {
                this.position.orgId = expr;
            }));
        }
    }
    /**
     * @return {?}
     */
    selectPosition() {
        this.posiHelp.showHelp();
    }
    /**
     * @return {?}
     */
    editCondition() {
        if (this.designerUIState.schemas.length > 0) {
            for (const schema of this.designerUIState.schemas) {
                this.expr.addSchema('Schema', schema);
            }
            if (this.designerUIState.schemas[0].entityTypes && this.designerUIState.schemas[0].entityTypes.length > 0) {
                /** @type {?} */
                const entityType = this.designerUIState.schemas[0].entityTypes[0];
                this.expr.addInjectedEntity(entityType.name, 'Schema', entityType.name, InjectedType.EntityType);
            }
        }
        /** @type {?} */
        const context = new Array();
        if (this.designerUIState.procInstContext.length > 0) {
            for (const variable of this.designerUIState.procInstContext) {
                context.push(variable);
            }
        }
        if (this.designerUIState.formalParameterContext.length > 0) {
            for (const variable of this.designerUIState.formalParameterContext) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                c => c.key === variable.key))) {
                    context.push(variable);
                }
            }
        }
        if (this.designerUIState.participantContext.length > 0) {
            for (const variable of this.designerUIState.participantContext) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                c => c.key === variable.key))) {
                    context.push(variable);
                }
            }
        }
        if (this.designerUIState.processVariableContext.length > 0) {
            for (const variable of this.designerUIState.processVariableContext) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                c => c.key === variable.key))) {
                    context.push(variable);
                }
            }
        }
        if (this.designerUIState.activityComponentContext.length > 0) {
            for (const variable of this.designerUIState.activityComponentContext) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                c => c.key === variable.key))) {
                    context.push(variable);
                }
            }
        }
        if (context.length > 0) {
            for (const v of context) {
                this.expr.addContext(v);
            }
        }
        this.expr.setEditPattern(ExprEditMode.Conditional); // 表达式展现模式：默认简易版
        this.expr.addExpressionText(this.position.condition);
        this.expr.buildExpression().then((/**
         * @param {?} expressioninfo
         * @return {?}
         */
        (expressioninfo) => {
            this.position.condition = expressioninfo;
        }));
    }
    /**
     * @param {?} re
     * @return {?}
     */
    orgTypeChange(re) {
        this.position.orgType = re.data.value;
    }
    /**
     * @return {?}
     */
    clearOrgType() {
        this.position.orgType = null;
    }
    /**
     * @param {?} data
     * @return {?}
     */
    positionsSelect(data) {
        if (data) {
            this.position.performerId = data.id;
            this.position.performerName = data.name;
            this.position.type = 'wf.PositionParticipant';
            if (!this.position.positionType) {
                this.position.positionType = data.posType + '';
                this.filter = {
                    positionType: data.posType
                };
            }
        }
    }
    /**
     * @return {?}
     */
    getPerformers() {
        return this.position;
    }
}
PositionPerformerComponent.decorators = [
    { type: Component, args: [{
                selector: 'app-position-performer',
                template: "<div class=\"d-flex flex-fill farris-overflow-y-auto p-md-2\">\r\n  <form style=\"background: #F0F3F6; width: 100%;\">\r\n    <div class=\"d-flex m-2 flex-column w-100\">\r\n      <div class=\"d-flex flex-column mx-5 my-4\" style=\"background: #FFF;\">\r\n        <div class=\"farris-form form-inline  farris-form-inline mr-5\">\r\n          <div class=\"col-12 farris-group-auto my-3\">\r\n            <div class=\"farris-group-wrap\">\r\n              <div class=\"form-group farris-form-group\">\r\n                <label class=\"col-form-label\">\r\n                  <!-- <span class=\"farris-label-info text-danger\">*</span> -->\r\n                  <span class=\"farris-label-text\">\u5C97\u4F4D\u7C7B\u578B</span>\r\n                </label>\r\n                <div class=\"farris-input-wrap\">\r\n                  <farris-combo-list [(ngModel)]=\"position.positionType\" name=\"positionType\" [panelHeight]=\"'auto'\" [idField]=\"'value'\"\r\n                    [textField]=\"'text'\" [data]=\"positionTypes\" (valueChange)=\"positionTypeChange($event)\"\r\n                    [panelHeight]=\"'auto'\" [enableClear]=\"false\">\r\n                  </farris-combo-list>\r\n                  <div class=\"farris-feedback valid-feedback\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-12 farris-group-auto my-4\">\r\n            <div class=\"farris-group-wrap\">\r\n              <div class=\"form-group farris-form-group\">\r\n                <label class=\"col-form-label\">\r\n                  <span class=\"farris-label-info text-danger\">*</span>\r\n                  <span class=\"farris-label-text\">\u5C97\u4F4D</span>\r\n                </label>\r\n                <div class=\"farris-input-wrap\">\r\n                  <div #inputGroup class=\"input-group\">\r\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"position.performerName\" name=\"positionName\" [readOnly]=\"true\" />\r\n                    <div class=\"input-group-append\">\r\n                      <span [style.display]=\"showClearButton ? '' : 'none'\" class=\"input-group-text input-group-clear\" (click)=\"clear()\">\r\n                        <i class=\"f-icon modal_close\"></i>\r\n                      </span>\r\n                      <span class=\"input-group-text\" (click)=\"selectPosition()\" style=\"background: #FFF;\">\r\n                        <i class=\"f-icon f-icon-lookup\"></i>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"farris-feedback valid-feedback\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-12 farris-group-auto my-4\">\r\n            <div class=\"farris-group-wrap\">\r\n              <div class=\"form-group farris-form-group\">\r\n                <label class=\"col-form-label\">\r\n                  <!-- <span *ngIf=\"filter.positionType===1\" class=\"farris-label-info text-danger\">*</span> -->\r\n                  <span class=\"farris-label-text\">\u7EC4\u7EC7\u7C7B\u578B</span>\r\n                </label>\r\n                <div class=\"farris-input-wrap\">\r\n                  <farris-combo-list [(ngModel)]=\"position.orgType\" name=\"orgType\" [idField]=\"'value'\" [textField]=\"'text'\" [valueField]=\"'value'\"\r\n                    [data]=\"designerUIState.orgTypeCollection\" [panelHeight]=\"'auto'\" (clear)=\"clearOrgType()\"\r\n                    (selectChange)='orgTypeChange($event)' [readonly]=\"!(position.positionType==='1')\" [placeholder]=\"position.positionType==='1'?'\u8BF7\u9009\u62E9':''\">\r\n                  </farris-combo-list>\r\n                  <div class=\"farris-feedback valid-feedback\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-12 farris-group-auto my-3\">\r\n            <div class=\"farris-group-wrap\">\r\n              <div class=\"form-group farris-form-group\">\r\n                <label class=\"col-form-label\">\r\n                  <!-- <span *ngIf=\"filter.positionType===1\" class=\"farris-label-info text-danger\">*</span> -->\r\n                  <span class=\"farris-label-text\">\u7EC4\u7EC7</span>\r\n                </label>\r\n                <div class=\"farris-input-wrap\">\r\n                  <!-- <div class=\"input-group\">\r\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"position.orgId\" name=\"organization\" [readOnly]=\"true\" />\r\n                    <div class=\"input-group-append\">\r\n                      <span class=\"input-group-text\" (click)=\"selectOrganition()\" style=\"background: #FFF;\">\r\n                        <i class=\"f-icon f-icon-lookup\"></i>\r\n                      </span>\r\n                    </div>\r\n                  </div> -->\r\n                  <input-group class=\"form-control\" style=\"width: 100%;padding:0;border:0;\" [enableClear]=\"false\"\r\n                    [showButtonWhenDisabled]=\"false\" [readonly]=\"!(position.positionType==='1')\"\r\n                    [(ngModel)]=\"position.orgId\" name=\"organization\" [placeholder]=\"position.positionType==='1'?'\u8BF7\u9009\u62E9':''\"\r\n                    [editable]=\"false\" (clickHandle)=\"selectOrganition()\" [groupText]=\"groupIcon\"></input-group>\r\n                  <div class=\"farris-feedback valid-feedback\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"d-flex flex-column mx-5\" style=\"background: #FFF;\">\r\n        <div class=\"farris-form form-inline farris-form-inline mr-5\">\r\n          <div class=\"col-12 farris-group-auto my-3\">\r\n            <div class=\"farris-group-wrap\">\r\n              <div class=\"form-group farris-form-group\">\r\n                <label class=\"col-form-label\">\r\n                  <span class=\"farris-label-text\">\u542F\u7528\u6761\u4EF6</span>\r\n                </label>\r\n                <div class=\"farris-input-wrap\">\r\n                  <div class=\"input-group\">\r\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"this.position.condition\" name=\"conditon\" [readOnly]=\"true\" />\r\n                    <div class=\"input-group-append\">\r\n                      <span class=\"input-group-text\" (click)=\"editCondition()\" style=\"background: #FFF;\">\r\n                        <i class=\"f-icon f-icon-lookup\"></i>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"farris-feedback valid-feedback\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</div>\r\n\r\n<sys-farris-grid-lookup #posiHelp style=\"display: none;\" [singleSelect]=\"true\"\r\n  [pagination]=\"true\" [pageSize]=\"20\" [title]=\"'\u7CFB\u7EDF\u5C97\u4F4D'\" [sourceType]=\"'position'\"\r\n  (afterConfirm)=\"positionsSelect($event)\" [filter]=\"filter\">\r\n</sys-farris-grid-lookup>\r\n",
                styles: [""]
            }] }
];
/** @nocollapse */
PositionPerformerComponent.ctorParameters = () => [
    { type: HttpService },
    { type: ProcessDesignerUIState },
    { type: ExpressionService },
    { type: NgZone }
];
PositionPerformerComponent.propDecorators = {
    cls: [{ type: HostBinding, args: ['class',] }],
    posiHelp: [{ type: ViewChild, args: [SysFarrisLookupComponent,] }],
    inputGroup: [{ type: ViewChild, args: ['inputGroup',] }]
};
if (false) {
    /** @type {?} */
    PositionPerformerComponent.prototype.cls;
    /** @type {?} */
    PositionPerformerComponent.prototype.posiHelp;
    /** @type {?} */
    PositionPerformerComponent.prototype.inputGroup;
    /** @type {?} */
    PositionPerformerComponent.prototype.showClearButton;
    /** @type {?} */
    PositionPerformerComponent.prototype.groupIcon;
    /** @type {?} */
    PositionPerformerComponent.prototype.positionTypes;
    /** @type {?} */
    PositionPerformerComponent.prototype.condition;
    /** @type {?} */
    PositionPerformerComponent.prototype.filter;
    /** @type {?} */
    PositionPerformerComponent.prototype.position;
    /**
     * @type {?}
     * @private
     */
    PositionPerformerComponent.prototype.http;
    /** @type {?} */
    PositionPerformerComponent.prototype.designerUIState;
    /**
     * @type {?}
     * @private
     */
    PositionPerformerComponent.prototype.expr;
    /**
     * @type {?}
     * @private
     */
    PositionPerformerComponent.prototype.ngZone;
}
//# sourceMappingURL=data:application/json;base64,