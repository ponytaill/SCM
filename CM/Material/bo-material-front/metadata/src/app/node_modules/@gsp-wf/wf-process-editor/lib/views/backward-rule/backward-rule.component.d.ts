import { OnInit, EventEmitter, TemplateRef, AfterViewInit } from '@angular/core';
import { TypeConverter } from '@farris/ui-property-panel';
import { ProcessDesignerUIState } from '../../app/process-designer.uistate';
import { MessagerService } from '@farris/ui-messager';
import { Observable } from 'rxjs';
import { PickedResult, LookupGridComponent } from '@farris/ui-lookup';
export declare class BackwardRuleComponent implements OnInit, AfterViewInit {
    private uiState;
    private message;
    cls: string;
    editorParams: any;
    value: any;
    nodeType: 'UserActivity' | 'CallActivitySubProcess';
    closeModal: EventEmitter<any>;
    submitModal: EventEmitter<any>;
    modalFooter: TemplateRef<any>;
    hlp: LookupGridComponent;
    modalConfig: {
        title: string;
        width: number;
        height: number;
        showButtons: boolean;
    };
    displayText: string;
    listItems: {
        Id: string;
        Name: string;
    }[];
    items: any[];
    columns: {
        title: string;
        field: string;
        width: number;
        searchField: string;
    }[];
    selectAbleChecked: boolean;
    waitReturnChecked: boolean;
    dynamicBackWardRuleAbleChecked: boolean;
    targetRef: string;
    pageInfo: {
        pageIndex: number;
        pageList: number[];
        pageSize: number;
    };
    total: number;
    constructor(uiState: ProcessDesignerUIState, message: MessagerService);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    selectAbleClick(): void;
    waitReturnClick(): void;
    dynamicBackWardRuleAbleClick(): void;
    dictPicked: (arg: any) => Observable<PickedResult>;
    clickOK(): void;
    clickCancel(): void;
    pagerChanged(arg: any): void;
    pageSizeChange(arg: any): void;
    search(arg: any): void;
    load(search?: {
        field: string;
        value: string;
    }): void;
    private getTargetRef;
}
export declare class BackwardRuleConverter implements TypeConverter {
    constructor();
    convertTo(data: any): string;
}
