import { OnInit, NgZone, AfterViewInit, ElementRef } from '@angular/core';
import { PerformerOptions } from '../../entities/performer-options';
import { ProcessDesignerUIState } from '../../../../app/process-designer.uistate';
import { ExpressionService } from '@gsp-svc/expression';
import { MessagerService } from '@farris/ui-messager';
export declare class PerformerOptionsComponent implements OnInit, AfterViewInit {
    private ngZone;
    private designerState;
    private expr;
    private message;
    cls: string;
    options: PerformerOptions;
    exclusionPerformers: string | Array<string>;
    automaticPerformers: Array<string>;
    inputGroup: ElementRef;
    showClearButton: boolean;
    historicFirst: boolean;
    excludeExprPerformer: string;
    excludeProcInstCreator: boolean;
    excludePreActExecutors: boolean;
    excludeAllPassExecutors: boolean;
    autoProcInstCreator: boolean;
    autoPreActExecutors: boolean;
    autoAllPassExecutors: boolean;
    noPerformerStrategyList: {
        text: string;
        value: string;
    }[];
    exclusionPerformersOptions: {
        value: string;
        name: string;
    }[];
    noPerformerStrategy: string;
    constructor(ngZone: NgZone, designerState: ProcessDesignerUIState, expr: ExpressionService, message: MessagerService);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    onMouseEnter(event: any): void;
    onMouseLeave(event: any): void;
    private toggleClearIcon;
    excludeProcInstCreatorClick(event: any): void;
    excludePreActExecutorsClick(event: any): void;
    excludeAllPassExecutorsClick(event: any): void;
    autoProcInstCreatorClick(event: any): void;
    autoPreActExecutorsClick(event: any): void;
    autoAllPassExecutorsClick(event: any): void;
    getPerformerOptions(): PerformerOptions;
    private getExclusionPerformers;
    private getAutoPerformers;
    openExprEditor(): void;
    clear(): void;
}
