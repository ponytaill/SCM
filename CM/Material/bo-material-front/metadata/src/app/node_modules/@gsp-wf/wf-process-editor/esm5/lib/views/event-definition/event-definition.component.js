/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, HostBinding, Output, EventEmitter, Input, ViewChild, TemplateRef, Injector } from '@angular/core';
import { DatagridComponent } from '@farris/ui-datagrid';
import { MessagerService } from '@farris/ui-messager';
import { ProcessDeUtil } from '../../domain/process-de-util';
import { EventDefinition } from './event-definition.entity';
import { EditorTypes } from '@farris/ui-datagrid-editors';
var EventDefinitionComponent = /** @class */ (function () {
    function EventDefinitionComponent(message, util, injector) {
        this.message = message;
        this.util = util;
        this.injector = injector;
        this.cls = 'farris-main-area flex-column';
        this.closeModal = new EventEmitter();
        this.submitModal = new EventEmitter();
        this.modalConfig = {
            title: '信号定义',
            width: 560,
            height: 420,
            showButtons: true
        };
        this.triggerActionCollection = [
            { text: '正向', value: 'Pass' },
            { text: '反向', value: 'Back' },
            { text: '终止', value: 'Abort' }
        ];
        this.columns = new Array();
        this.data = new Array();
    }
    Object.defineProperty(EventDefinitionComponent.prototype, "value", {
        set: /**
         * @param {?} items
         * @return {?}
         */
        function (items) {
            var e_1, _a;
            if (items && items.length > 0) {
                try {
                    for (var items_1 = tslib_1.__values(items), items_1_1 = items_1.next(); !items_1_1.done; items_1_1 = items_1.next()) {
                        var item = items_1_1.value;
                        /** @type {?} */
                        var event_1 = new EventDefinition();
                        event_1.Id = item.Id;
                        event_1.name = item.name;
                        event_1.triggerAction = item.triggerAction;
                        event_1.Async = item.Async;
                        event_1.SignalRef = item.SignalRef;
                        this.data.push(event_1);
                    }
                }
                catch (e_1_1) { e_1 = { error: e_1_1 }; }
                finally {
                    try {
                        if (items_1_1 && !items_1_1.done && (_a = items_1.return)) _a.call(items_1);
                    }
                    finally { if (e_1) throw e_1.error; }
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    EventDefinitionComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.columns = [{
                field: 'SignalRef', width: 100, title: '信号编号',
                editor: { type: EditorTypes.TEXTBOX, options: {} },
                validators: [
                    { type: 'required', messager: '必填' }
                ]
            },
            {
                field: 'name', width: 100, title: '信号名称',
                editor: { type: EditorTypes.TEXTBOX, options: {} },
                validators: [
                    { type: 'required', messager: '必填' }
                ]
            },
            {
                field: 'triggerAction', width: 100, title: '流转方向',
                formatter: {
                    type: 'enum',
                    options: { valueField: 'value', textField: 'text', data: this.triggerActionCollection }
                },
                editor: {
                    type: EditorTypes.COMBOLIST,
                    options: { valueField: 'value', textField: 'text', data: this.triggerActionCollection, idField: 'value', panelHeight: 'auto', showClear: false }
                },
                validators: [
                    { type: 'required', messager: '必填' }
                ]
            }];
    };
    /**
     * @return {?}
     */
    EventDefinitionComponent.prototype.add = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var event = new EventDefinition();
        event.Id = ProcessDeUtil.GenerateElementId();
        this.data.push(event);
        this.grid.loadData(this.data);
    };
    /**
     * @return {?}
     */
    EventDefinitionComponent.prototype.delete = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.grid.endCellEdit();
        if (this.grid.selectedRow && this.grid.selectedRow.data) {
            /** @type {?} */
            var i = this.data.findIndex((/**
             * @param {?} d
             * @return {?}
             */
            function (d) { return d.Id === _this.grid.selectedRow.data.Id; }));
            this.data.splice(i, 1);
            this.grid.loadData(this.data);
        }
        else {
            this.message.info('尚未选中一条触发事件！');
        }
    };
    /**
     * @return {?}
     */
    EventDefinitionComponent.prototype.clickOK = /**
     * @return {?}
     */
    function () {
        this.grid.endCellEdit();
        if (this.validator()) {
            /** @type {?} */
            var object = { value: this.data, parameters: null };
            this.submitModal.emit(object);
        }
    };
    /**
     * @return {?}
     */
    EventDefinitionComponent.prototype.clickCancel = /**
     * @return {?}
     */
    function () {
        this.closeModal.emit();
    };
    /**
     * @private
     * @return {?}
     */
    EventDefinitionComponent.prototype.validator = /**
     * @private
     * @return {?}
     */
    function () {
        var e_2, _a;
        if (this.data.length === 0) {
            this.message.info('至少需要一个信号定义，请了解！');
            return false;
        }
        else {
            try {
                for (var _b = tslib_1.__values(this.data), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var d = _c.value;
                    if (!d.SignalRef) {
                        this.message.info('信号编号不允许为空！');
                        return false;
                    }
                    else if (!d.name) {
                        this.message.info('信号名称不允许为空！');
                        return false;
                    }
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_2) throw e_2.error; }
            }
            if (this.data.length > 1) {
                for (var i = 0; i < this.data.length; i++) {
                    /** @type {?} */
                    var code1 = this.data[i].SignalRef;
                    for (var j = i + 1; j < this.data.length; j++) {
                        /** @type {?} */
                        var code2 = this.data[j].SignalRef;
                        if (code1 === code2) {
                            this.message.warning("\u4FE1\u53F7\u7F16\u53F7\u4E0D\u5141\u8BB8\u91CD\u590D\uFF01");
                            return false;
                        }
                    }
                }
            }
        }
        return true;
    };
    EventDefinitionComponent.decorators = [
        { type: Component, args: [{
                    selector: 'lib-event-definition',
                    template: "<div class=\"f-page\">\r\n  <div class=\"f-page-header\">\r\n    <nav class=\"f-page-header-base\">\r\n      <div class=\"f-title\">\r\n        <span class=\"f-title-icon f-text-orna-bill\">\r\n          <i class=\"f-icon f-icon-page-title-administer\"></i>\r\n        </span>\r\n        <h4 class=\"f-title-text\">\u5217\u8868</h4>\r\n      </div>\r\n      <div class=\"btn-toolbar btn-group-lg\">\r\n        <button class=\"btn btn-primary mr-2\" (click)=\"add()\">\u65B0\u589E</button>\r\n        <button class=\"btn btn-secondary\" (click)=\"delete()\">\u5220\u9664</button>\r\n      </div>\r\n    </nav>\r\n  </div>\r\n  <div class=\"f-page-main f-utils-fill-flex-column h-100\">\r\n    <div class=\"f-utils-fill-flex-column farris-overflow-y-auto h-100\">\r\n      <farris-datagrid #grid [data]=\"data\" [columns]=\"columns\" [idField]=\"'Id'\" [fit]=\"true\" [fitColumns]=\"true\"\r\n        [editable]=\"true\" [editMode]=\"'cell'\" [pagination]=\"false\" [showCheckbox]=\"false\" [multiSelect]=\"false\">\r\n      </farris-datagrid>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #iconSelectFooter>\r\n  <button type=\"button\" class=\"btn btn-primary btn-sm px-3 mx-2\" (click)=\"clickOK()\">\u786E\u5B9A</button>\r\n  <button type=\"button\" class=\"btn btn-secondary btn-sm px-3 mx-2\" (click)=\"clickCancel()\">\u53D6\u6D88</button>\r\n</ng-template>\r\n",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    EventDefinitionComponent.ctorParameters = function () { return [
        { type: MessagerService },
        { type: ProcessDeUtil },
        { type: Injector }
    ]; };
    EventDefinitionComponent.propDecorators = {
        cls: [{ type: HostBinding, args: ['class',] }],
        closeModal: [{ type: Output }],
        submitModal: [{ type: Output }],
        value: [{ type: Input }],
        modalFooter: [{ type: ViewChild, args: ['iconSelectFooter',] }],
        grid: [{ type: ViewChild, args: ['grid',] }]
    };
    return EventDefinitionComponent;
}());
export { EventDefinitionComponent };
if (false) {
    /** @type {?} */
    EventDefinitionComponent.prototype.cls;
    /** @type {?} */
    EventDefinitionComponent.prototype.closeModal;
    /** @type {?} */
    EventDefinitionComponent.prototype.submitModal;
    /** @type {?} */
    EventDefinitionComponent.prototype.modalFooter;
    /** @type {?} */
    EventDefinitionComponent.prototype.grid;
    /** @type {?} */
    EventDefinitionComponent.prototype.modalConfig;
    /** @type {?} */
    EventDefinitionComponent.prototype.triggerActionCollection;
    /** @type {?} */
    EventDefinitionComponent.prototype.columns;
    /** @type {?} */
    EventDefinitionComponent.prototype.data;
    /**
     * @type {?}
     * @private
     */
    EventDefinitionComponent.prototype.message;
    /**
     * @type {?}
     * @private
     */
    EventDefinitionComponent.prototype.util;
    /**
     * @type {?}
     * @private
     */
    EventDefinitionComponent.prototype.injector;
}
var EventDefinitionConverter = /** @class */ (function () {
    function EventDefinitionConverter() {
    }
    /**
     * @param {?} data
     * @return {?}
     */
    EventDefinitionConverter.prototype.convertTo = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        if (data && data.length > 0) {
            return '（已设置）';
        }
        else {
            return '（未设置）';
        }
    };
    return EventDefinitionConverter;
}());
export { EventDefinitionConverter };
//# sourceMappingURL=data:application/json;base64,