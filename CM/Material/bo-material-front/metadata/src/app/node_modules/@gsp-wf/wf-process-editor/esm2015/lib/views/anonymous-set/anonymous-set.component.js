/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, HostBinding, EventEmitter, Output, Input, ViewChild, TemplateRef, Injector } from '@angular/core';
import { AnonymousSet } from './anonymous-set.entity';
export class AnonymousSetComponent {
    /**
     * @param {?} injector
     */
    constructor(injector) {
        this.injector = injector;
        this.cls = 'farris-main-area flex-column';
        this.closeModal = new EventEmitter();
        this.submitModal = new EventEmitter();
        this.anonymousSet = new AnonymousSet();
        this.modalConfig = {
            title: '匿名选项',
            width: 450,
            height: 360,
            showButtons: true
        };
    }
    /**
     * @param {?} data
     * @return {?}
     */
    set value(data) {
        this.anonymousSet.isAnonymity = data.isAnonymity || false;
        this.anonymousSet.anonymous = data.anonymous || '审批人';
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @return {?}
     */
    clickOK() {
        /** @type {?} */
        const object = { value: this.anonymousSet, parameters: null };
        this.submitModal.emit(object);
    }
    /**
     * @return {?}
     */
    clickCancel() {
        this.closeModal.emit();
    }
}
AnonymousSetComponent.decorators = [
    { type: Component, args: [{
                selector: 'lib-anonymous-set',
                template: "<div class=\"f-page\">\r\n  <div class=\"f-utils-fill-flex-column farris-split-section m-2 h-100\">\r\n    <section class=\"f-utils-fill-flex-column h-100\">\r\n      <div class=\"f-section-header pt-2 mx-2\">\r\n        <div class=\"f-title\">\r\n          <h4 class=\"f-title-text\">\u533F\u540D\u8BBE\u7F6E</h4>\r\n        </div>\r\n      </div>\r\n      <div class=\"f-utils-fill-flex-column h-100\">\r\n        <div class=\"farris-form form-inline farris-form-inline\">\r\n          <div class=\"col-12 farris-group-auto my-3 pr-5\">\r\n            <div class=\"farris-group-wrap\">\r\n              <div class=\"form-group farris-form-group\">\r\n                <label class=\"col-form-label\">\r\n                  <span class=\"farris-label-text\">\u662F\u5426\u542F\u7528</span>\r\n                </label>\r\n                <div class=\"farris-input-wrap ml-1\">\r\n                  <farris-switch [(ngModel)]=\"anonymousSet.isAnonymity\" name=\"isAnonymity\"></farris-switch>\r\n                  <div class=\"farris-feedback valid-feedback\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-12 farris-group-auto mt-4 pr-5\">\r\n            <div class=\"farris-group-wrap\">\r\n              <div class=\"form-group farris-form-group\">\r\n                <label class=\"col-form-label\">\r\n                  <span class=\"farris-label-text\">\u533F\u540D\u4EE3\u79F0</span>\r\n                </label>\r\n                <div class=\"farris-input-wrap ml-1\">\r\n                  <textarea class=\"form-control\" type=\"text\" value=\"anonymous\" [(ngModel)]=\"anonymousSet.anonymous\" name=\"anonymous\"\r\n                  style=\"height: 50px;\" [readOnly]=\"!anonymousSet.isAnonymity\"></textarea>\r\n                  <div class=\"farris-feedback valid-feedback\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #iconSelectFooter>\r\n  <button type=\"button\" class=\"btn btn-primary btn-sm mx-2\" (click)=\"clickOK()\">\u786E\u5B9A</button>\r\n  <button type=\"button\" class=\"btn btn-secondary btn-sm mx-2\" (click)=\"clickCancel()\">\u53D6\u6D88</button>\r\n</ng-template>",
                styles: [""]
            }] }
];
/** @nocollapse */
AnonymousSetComponent.ctorParameters = () => [
    { type: Injector }
];
AnonymousSetComponent.propDecorators = {
    cls: [{ type: HostBinding, args: ['class',] }],
    closeModal: [{ type: Output }],
    submitModal: [{ type: Output }],
    value: [{ type: Input }],
    modalFooter: [{ type: ViewChild, args: ['iconSelectFooter',] }]
};
if (false) {
    /** @type {?} */
    AnonymousSetComponent.prototype.cls;
    /** @type {?} */
    AnonymousSetComponent.prototype.closeModal;
    /** @type {?} */
    AnonymousSetComponent.prototype.submitModal;
    /** @type {?} */
    AnonymousSetComponent.prototype.modalFooter;
    /** @type {?} */
    AnonymousSetComponent.prototype.anonymousSet;
    /** @type {?} */
    AnonymousSetComponent.prototype.modalConfig;
    /**
     * @type {?}
     * @private
     */
    AnonymousSetComponent.prototype.injector;
}
export class AnonymousSetConverter {
    constructor() { }
    /**
     * @param {?} data
     * @return {?}
     */
    convertTo(data) {
        if (data && data.isAnonymity) {
            return '（已设置）';
        }
        else {
            return '（未设置）';
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5vbnltb3VzLXNldC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NwLXdmL3dmLXByb2Nlc3MtZWRpdG9yLyIsInNvdXJjZXMiOlsibGliL3ZpZXdzL2Fub255bW91cy1zZXQvYW5vbnltb3VzLXNldC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsV0FBVyxFQUFFLFlBQVksRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSxXQUFXLEVBQVUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXRJLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQU90RCxNQUFNLE9BQU8scUJBQXFCOzs7O0lBcUJoQyxZQUNVLFFBQWtCO1FBQWxCLGFBQVEsR0FBUixRQUFRLENBQVU7UUFwQjVCLFFBQUcsR0FBRyw4QkFBOEIsQ0FBQztRQUUzQixlQUFVLEdBQUcsSUFBSSxZQUFZLEVBQU8sQ0FBQztRQUNyQyxnQkFBVyxHQUFHLElBQUksWUFBWSxFQUFPLENBQUM7UUFTaEQsaUJBQVksR0FBaUIsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUNoRCxnQkFBVyxHQUFHO1lBQ1osS0FBSyxFQUFFLE1BQU07WUFDYixLQUFLLEVBQUUsR0FBRztZQUNWLE1BQU0sRUFBRSxHQUFHO1lBQ1gsV0FBVyxFQUFFLElBQUk7U0FDbEIsQ0FBQztJQUdFLENBQUM7Ozs7O0lBaEJMLElBQWEsS0FBSyxDQUFDLElBQWtCO1FBQ25DLElBQUksQ0FBQyxZQUFZLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxXQUFXLElBQUksS0FBSyxDQUFDO1FBQzFELElBQUksQ0FBQyxZQUFZLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxTQUFTLElBQUksS0FBSyxDQUFDO0lBQ3hELENBQUM7Ozs7SUFlRCxRQUFRO0lBQ1IsQ0FBQzs7OztJQUNELE9BQU87O2NBQ0MsTUFBTSxHQUFHLEVBQUUsS0FBSyxFQUFFLElBQUksQ0FBQyxZQUFZLEVBQUUsVUFBVSxFQUFFLElBQUksRUFBRTtRQUM3RCxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUNoQyxDQUFDOzs7O0lBRUQsV0FBVztRQUNULElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDekIsQ0FBQzs7O1lBdkNGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsbUJBQW1CO2dCQUM3QixneUVBQTZDOzthQUU5Qzs7OztZQVJxRyxRQUFROzs7a0JBVTNHLFdBQVcsU0FBQyxPQUFPO3lCQUduQixNQUFNOzBCQUNOLE1BQU07b0JBRU4sS0FBSzswQkFLTCxTQUFTLFNBQUMsa0JBQWtCOzs7O0lBWDdCLG9DQUNxQzs7SUFFckMsMkNBQStDOztJQUMvQyw0Q0FBZ0Q7O0lBT2hELDRDQUE2RDs7SUFFN0QsNkNBQWdEOztJQUNoRCw0Q0FLRTs7Ozs7SUFFQSx5Q0FBMEI7O0FBZTlCLE1BQU0sT0FBTyxxQkFBcUI7SUFDaEMsZ0JBQWdCLENBQUM7Ozs7O0lBRWpCLFNBQVMsQ0FBQyxJQUFTO1FBQ2pCLElBQUksSUFBSSxJQUFJLElBQUksQ0FBQyxXQUFXLEVBQUU7WUFDNUIsT0FBTyxPQUFPLENBQUM7U0FDaEI7YUFBTTtZQUNMLE9BQU8sT0FBTyxDQUFDO1NBQ2hCO0lBQ0gsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIEhvc3RCaW5kaW5nLCBFdmVudEVtaXR0ZXIsIE91dHB1dCwgSW5wdXQsIFZpZXdDaGlsZCwgVGVtcGxhdGVSZWYsIEluamVjdCwgSW5qZWN0b3IgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgVHlwZUNvbnZlcnRlciB9IGZyb20gJ0BmYXJyaXMvdWktcHJvcGVydHktcGFuZWwnO1xyXG5pbXBvcnQgeyBBbm9ueW1vdXNTZXQgfSBmcm9tICcuL2Fub255bW91cy1zZXQuZW50aXR5JztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnbGliLWFub255bW91cy1zZXQnLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9hbm9ueW1vdXMtc2V0LmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9hbm9ueW1vdXMtc2V0LmNvbXBvbmVudC5zY3NzJ11cclxufSlcclxuZXhwb3J0IGNsYXNzIEFub255bW91c1NldENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcbiAgQEhvc3RCaW5kaW5nKCdjbGFzcycpXHJcbiAgY2xzID0gJ2ZhcnJpcy1tYWluLWFyZWEgZmxleC1jb2x1bW4nO1xyXG5cclxuICBAT3V0cHV0KCkgY2xvc2VNb2RhbCA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xyXG4gIEBPdXRwdXQoKSBzdWJtaXRNb2RhbCA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xyXG5cclxuICBASW5wdXQoKSBzZXQgdmFsdWUoZGF0YTogQW5vbnltb3VzU2V0KSB7XHJcbiAgICB0aGlzLmFub255bW91c1NldC5pc0Fub255bWl0eSA9IGRhdGEuaXNBbm9ueW1pdHkgfHwgZmFsc2U7XHJcbiAgICB0aGlzLmFub255bW91c1NldC5hbm9ueW1vdXMgPSBkYXRhLmFub255bW91cyB8fCAn5a6h5om55Lq6JztcclxuICB9XHJcblxyXG4gIEBWaWV3Q2hpbGQoJ2ljb25TZWxlY3RGb290ZXInKSBtb2RhbEZvb3RlcjogVGVtcGxhdGVSZWY8YW55PjtcclxuXHJcbiAgYW5vbnltb3VzU2V0OiBBbm9ueW1vdXNTZXQgPSBuZXcgQW5vbnltb3VzU2V0KCk7XHJcbiAgbW9kYWxDb25maWcgPSB7XHJcbiAgICB0aXRsZTogJ+WMv+WQjemAiemhuScsXHJcbiAgICB3aWR0aDogNDUwLFxyXG4gICAgaGVpZ2h0OiAzNjAsXHJcbiAgICBzaG93QnV0dG9uczogdHJ1ZVxyXG4gIH07XHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICBwcml2YXRlIGluamVjdG9yOiBJbmplY3RvclxyXG4gICkgeyB9XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gIH1cclxuICBjbGlja09LKCkge1xyXG4gICAgY29uc3Qgb2JqZWN0ID0geyB2YWx1ZTogdGhpcy5hbm9ueW1vdXNTZXQsIHBhcmFtZXRlcnM6IG51bGwgfTtcclxuICAgIHRoaXMuc3VibWl0TW9kYWwuZW1pdChvYmplY3QpO1xyXG4gIH1cclxuXHJcbiAgY2xpY2tDYW5jZWwoKSB7XHJcbiAgICB0aGlzLmNsb3NlTW9kYWwuZW1pdCgpO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIEFub255bW91c1NldENvbnZlcnRlciBpbXBsZW1lbnRzIFR5cGVDb252ZXJ0ZXIge1xyXG4gIGNvbnN0cnVjdG9yKCkgeyB9XHJcblxyXG4gIGNvbnZlcnRUbyhkYXRhOiBhbnkpOiBzdHJpbmcge1xyXG4gICAgaWYgKGRhdGEgJiYgZGF0YS5pc0Fub255bWl0eSkge1xyXG4gICAgICByZXR1cm4gJ++8iOW3suiuvue9ru+8iSc7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICByZXR1cm4gJ++8iOacquiuvue9ru+8iSc7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdfQ==