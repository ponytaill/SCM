/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { ReactiveFormsModule, FormsModule } from '@angular/forms';
import { HttpClientModule } from '@angular/common/http';
import { WfProcessEditorComponent } from './wf-process-editor.component';
import { PerformerConfigService } from './views/performer/performer-config.service';
import { EntryFormEditorComponent } from './views/entryForm/entry-form-editor.component';
import { ExpressionEditorComponent } from './views/expressionEditor/expression-editor.component';
import { AssignPerformerConfigComponent } from './views/assign-performer-config/assign-performer-config.component';
import { SignRuleComponent } from './views/sign-rule/sign-rule.component';
import { ApprovelItemsComponent } from './views/approvel-items/approvel-items.component';
import { ExecuteFormsComponent } from './views/execute-forms/execute-forms.component';
import { JumpScopeComponent } from './views/jump-scope/jump-scope.component';
import { BackwardRuleComponent } from './views/backward-rule/backward-rule.component';
import { ActivityComponentComponent } from './views/activity-component/activity-component.component';
import { PerformerComponent } from './views/performer/performer.component';
import { PerformerEditComponent } from './views/performer/views/performer-edit/performer-edit.component';
import { UserPerformerComponent } from './views/performer/views/user-performer/user-performer.component';
import { ComponentPerformerComponent } from './views/performer/views/component-performer/component-performer.component';
import { PositionPerformerComponent } from './views/performer/views/position-performer/position-performer.component';
import { PerformerOptionsComponent } from './views/performer/views/performer-options/performer-options.component';
import { ReportingLineComponent } from './views/performer/views/reporting-line/reporting-line.component';
import { TitleExpressionComponent } from './views/title-expression/title-expression.component';
import { SaveAsEditComponent } from './views/save-as-edit/save-as-edit.component';
import { OrganizationPotentialOwnerComponent } from './views/organization-potential-owner/organization-potential-owner.component';
import { CustomizeActionComponent } from './views/customize-action/customize-action.component';
import { CustomizeActionListComponent } from './views/customize-action/views/customize-action-list/customize-action-list.component';
import { JumpScopePipe } from './views/jump-scope/jump-scope.pipe';
import { UsersNamePipe } from './views/performer/views/user-performer/users-name.pipe';
import { PROCESS_DESIGNER_APP_PROVIDERS, PROCESS_DESIGNER_DOMAIN_PROVIDERS, PROCESS_DESIGNER_PART_PROVIDERS } from './index';
import { SessionService, HttpService } from '@ecp-caf/caf-common';
import { ExpressionService, ExpressionModule } from '@gsp-svc/expression';
import { CommonComponentUiRTService, CommonComponentUiModule } from '@gsp-cmp/ccmp-ui';
import { SelectMetadataRTComponent, GSPMetadataRTServiceModule, MetadataRTSelectModule } from '@gsp-lcm/metadatart-selector';
import { SysManagerUIModule } from '@gsp-sys/sysmgr-ui';
import { RtfAppHelpModule } from '@gsp-sys/rtf-ui';
import { TreeTableModule } from '@farris/ui-treetable';
import { PropertyPanelModule } from '@farris/ui-property-panel';
import { DataTableModule } from '@farris/ui-datatable';
import { LayoutModule } from '@farris/ui-layout';
import { NotifyModule } from '@farris/ui-notify';
import { FarrisDialogModule } from '@farris/ui-dialog';
import { SplitterModule } from '@farris/ui-splitter';
import { InputGroupModule } from '@farris/ui-input-group';
import { LookupModule } from '@farris/ui-lookup';
import { FlexLayoutModule } from '@farris/ui-flex-layout';
import { FarrisPanelModule } from '@farris/ui-panel';
import { FarrisResponsiveModule } from '@farris/ui-responsive';
import { FarrisTabsModule } from '@farris/ui-tabs';
import { LoadingModule } from '@farris/ui-loading';
import { MessagerModule } from '@farris/ui-messager';
import { ModalModule } from '@farris/ui-modal';
import { PopoverModule } from '@farris/ui-popover';
import { PaginationModule } from '@farris/ui-pagination';
import { FarrisDropdownModule } from '@farris/ui-dropdown';
import { DatagridEditorsModule, EditorProviders } from '@farris/ui-datagrid-editors';
import { DatagridModule } from '@farris/ui-datagrid';
import { ComboListModule } from '@farris/ui-combo-list';
import { FarrisFormsModule } from '@farris/ui-forms';
import { SwitchModule } from '@farris/ui-switch';
import { WizardModule } from '@farris/ui-wizard';
import { FarrisSectionModule } from '@farris/ui-section';
import { PerfectScrollbarModule } from '@farris/ui-perfect-scrollbar';
import { ProcessDeUtil } from './domain/process-de-util';
import { CallActivitySubProcessComponent } from './views/call-activity-sub-process/call-activity-sub-process.component';
import { WfBizprocessLookupModule } from '@gsp-wf/wf-bizprocess-lookup';
import { TimeLimitControlComponent } from './views/time-limit-control/time-limit-control.component';
import { SendMessageOperationComponent } from './views/time-limit-control/send-message-operation/send-message-operation.component';
import { NumberSpinnerModule } from '@farris/ui-number-spinner';
import { EventDefinitionComponent } from './views/event-definition/event-definition.component';
import { AnonymousSetComponent } from './views/anonymous-set/anonymous-set.component';
import { ProcessVariablesComponent } from './views/process-variables/process-variables.component';
import { VariableSettingComponent } from './views/variable-setting/variable-setting.component';
import { ConstantEditComponent } from './views/variable-setting/views/constant-edit/constant-edit.component';
import { ComponentEditComponent } from './views/variable-setting/views/component-edit/component-edit.component';
import { MessageNoticeComponent } from './views/message-notice/message-notice.component';
import { MessageNoticeEditComponent } from './views/message-notice/message-notice-edit/message-notice-edit.component';
import { AddExecuteFormComponent } from './views/execute-forms/add-execute-form/add-execute-form.component';
import { FormFormatConfigComponent } from './views/execute-forms/form-format-config/form-format-config.component';
import { FormConfigContainerComponent } from './views/execute-forms/form-config-container/form-config-container.component';
import { FarrisButtonModule } from '@farris/ui-button';
import { ParameterSettingComponent } from './views/execute-forms/parameter-setting/parameter-setting.component';
import { FormOperationConfigComponent } from './views/execute-forms/form-operation-config/form-operation-config.component';
import { NoteComponent } from './views/note/note.component';
import { ApprovalPivotComponent } from './views/approval-pivot/approval-pivot.component';
import { WfReportDefHelpComponent } from './views/performer/views/reporting-line/service/wf-report-def-help.component';
import { WfReportDefHelpService } from './views/performer/views/reporting-line/service/wf-report-def-help.service';
import { UrgeHandleRuleComponent } from './views/urge-handle-rule/urge-handle-rule.component';
import { MatrixPerformerComponent } from './views/performer/views/matrix-performer/matrix-performer.component';
import { EnumListComponent } from './views/performer/views/matrix-performer/enum-list/enum-list.component';
import { AutoHandleOperationComponent } from './views/time-limit-control/auto-handle-operation/auto-handle-operation.component';
import { ProcessListHelpModule } from './aif-process-list-help/process-list-help.module';
import { ProcessListHelpComponent } from './aif-process-list-help/components/process-list-help/process-list-help.component';
import { ExtendPropertyComponent } from './views/extend-property/extend-property.component';
import { CallActivitySubProcess2Component } from './views/call-activity-sub-process2/call-activity-sub-process2.component';
export class WfProcessEditorModule {
}
WfProcessEditorModule.decorators = [
    { type: NgModule, args: [{
                declarations: [
                    WfProcessEditorComponent,
                    EntryFormEditorComponent,
                    ExpressionEditorComponent,
                    AssignPerformerConfigComponent,
                    SignRuleComponent,
                    ApprovelItemsComponent,
                    ExecuteFormsComponent,
                    JumpScopeComponent,
                    BackwardRuleComponent,
                    JumpScopePipe,
                    ActivityComponentComponent,
                    PerformerComponent,
                    PerformerEditComponent,
                    UserPerformerComponent,
                    ComponentPerformerComponent,
                    PositionPerformerComponent,
                    PerformerOptionsComponent,
                    UsersNamePipe,
                    ReportingLineComponent,
                    TitleExpressionComponent,
                    SaveAsEditComponent,
                    OrganizationPotentialOwnerComponent,
                    CustomizeActionComponent,
                    CustomizeActionListComponent,
                    CallActivitySubProcessComponent,
                    TimeLimitControlComponent,
                    SendMessageOperationComponent,
                    EventDefinitionComponent,
                    AnonymousSetComponent,
                    ProcessVariablesComponent,
                    VariableSettingComponent,
                    ConstantEditComponent,
                    ComponentEditComponent,
                    MessageNoticeComponent,
                    MessageNoticeEditComponent,
                    AddExecuteFormComponent,
                    FormFormatConfigComponent,
                    FormConfigContainerComponent,
                    ParameterSettingComponent,
                    FormOperationConfigComponent,
                    NoteComponent,
                    ApprovalPivotComponent,
                    WfReportDefHelpComponent,
                    UrgeHandleRuleComponent,
                    NoteComponent,
                    MatrixPerformerComponent,
                    EnumListComponent,
                    AutoHandleOperationComponent,
                    ExtendPropertyComponent,
                    CallActivitySubProcess2Component,
                ],
                imports: [
                    CommonModule,
                    ReactiveFormsModule,
                    FormsModule,
                    HttpClientModule,
                    SysManagerUIModule,
                    RtfAppHelpModule,
                    CommonComponentUiModule,
                    GSPMetadataRTServiceModule.forRoot(''),
                    MetadataRTSelectModule,
                    TreeTableModule,
                    DataTableModule,
                    LayoutModule,
                    NotifyModule,
                    FarrisDialogModule,
                    SplitterModule,
                    InputGroupModule,
                    LookupModule,
                    FlexLayoutModule,
                    FarrisPanelModule,
                    FarrisResponsiveModule,
                    ExpressionModule,
                    PropertyPanelModule,
                    FarrisTabsModule,
                    LoadingModule.forRoot({
                        message: '加载中...'
                    }),
                    MessagerModule.forRoot({
                        width: 500
                    }),
                    ModalModule,
                    PopoverModule,
                    PaginationModule,
                    FarrisDropdownModule,
                    DatagridEditorsModule,
                    DatagridModule.forRoot([
                        ...EditorProviders
                    ]),
                    ComboListModule,
                    WizardModule,
                    FarrisFormsModule,
                    SwitchModule,
                    WfBizprocessLookupModule,
                    NumberSpinnerModule,
                    PerfectScrollbarModule,
                    FarrisSectionModule,
                    FarrisButtonModule,
                    ProcessListHelpModule,
                ],
                providers: [
                    SessionService,
                    HttpService,
                    ExpressionService,
                    CommonComponentUiRTService,
                    PROCESS_DESIGNER_APP_PROVIDERS,
                    PROCESS_DESIGNER_DOMAIN_PROVIDERS,
                    PROCESS_DESIGNER_PART_PROVIDERS,
                    PerformerConfigService,
                    ProcessDeUtil,
                    WfReportDefHelpService
                ],
                exports: [WfProcessEditorComponent],
                entryComponents: [
                    EntryFormEditorComponent,
                    ExpressionEditorComponent,
                    AssignPerformerConfigComponent,
                    SignRuleComponent,
                    ApprovelItemsComponent,
                    ExecuteFormsComponent,
                    JumpScopeComponent,
                    BackwardRuleComponent,
                    ActivityComponentComponent,
                    SelectMetadataRTComponent,
                    PerformerComponent,
                    PerformerEditComponent,
                    UserPerformerComponent,
                    ComponentPerformerComponent,
                    PositionPerformerComponent,
                    PerformerOptionsComponent,
                    ReportingLineComponent,
                    TitleExpressionComponent,
                    SaveAsEditComponent,
                    OrganizationPotentialOwnerComponent,
                    CustomizeActionComponent,
                    CustomizeActionListComponent,
                    CallActivitySubProcessComponent,
                    TimeLimitControlComponent,
                    SendMessageOperationComponent,
                    EventDefinitionComponent,
                    AnonymousSetComponent,
                    ProcessVariablesComponent,
                    VariableSettingComponent,
                    ConstantEditComponent,
                    ComponentEditComponent,
                    MessageNoticeComponent,
                    MessageNoticeEditComponent,
                    AddExecuteFormComponent,
                    FormFormatConfigComponent,
                    FormConfigContainerComponent,
                    ParameterSettingComponent,
                    FormOperationConfigComponent,
                    NoteComponent,
                    ApprovalPivotComponent,
                    UrgeHandleRuleComponent,
                    NoteComponent,
                    MatrixPerformerComponent,
                    EnumListComponent,
                    AutoHandleOperationComponent,
                    ProcessListHelpComponent,
                    ExtendPropertyComponent,
                    CallActivitySubProcess2Component,
                ],
            },] }
];
//# sourceMappingURL=data:application/json;base64,