import { OnInit, ElementRef, EventEmitter, ChangeDetectorRef, Injector } from '@angular/core';
import { DomSanitizer } from '@angular/platform-browser';
import { UiFlowchartService } from '../services/ui-flowchart.service';
import { WFFlowchartService } from '../wf-flowchart.service';
export declare class UIFlowchartComponent implements OnInit {
    private sanitizer;
    private service;
    private changeDetector;
    private injector;
    private chartService;
    static func: any;
    cls: string;
    iframe: ElementRef;
    modalHide: EventEmitter<boolean>;
    procInstId: string;
    dataId: string;
    actDefId: string;
    ifForecast: string;
    type: any;
    srcUrl: any;
    content: string;
    actInstList: any[];
    transInsList: any[];
    processInstance: any;
    fcHtml: string;
    theme: string;
    processForecastPayload: any;
    private _mode;
    mode: string;
    modeButton: string;
    typeList: {
        value: string;
        text: string;
    }[];
    private message;
    private frameworkSvc;
    ProcInstId: string;
    DataId: string;
    constructor(sanitizer: DomSanitizer, service: UiFlowchartService, changeDetector: ChangeDetectorRef, injector: Injector, chartService: WFFlowchartService);
    ngOnInit(): void;
    private addMessageListener;
    eventHandler: (event: any) => void;
    private viewFlowChart;
    private viewParent;
    private viewChild;
    modeSwitch(): void;
    private viewLogs;
    private viewFlowChartByProcInstId;
    private processForecast;
    private viewForm;
    private retryAifCreation;
    loadFlowChart(): void;
    postMessage(action: string, data: any): void;
    fill(): void;
}
