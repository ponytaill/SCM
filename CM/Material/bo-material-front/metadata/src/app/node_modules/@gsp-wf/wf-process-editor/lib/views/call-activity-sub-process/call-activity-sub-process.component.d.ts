import { OnInit, EventEmitter, TemplateRef } from '@angular/core';
import { TypeConverter } from '@farris/ui-property-panel';
import { CallActivitySubProcess } from './call-activity-sub-process.entity';
import { MessagerService } from '@farris/ui-messager';
import { ProcessDeUtil } from '../../domain/process-de-util';
import { HttpService } from '@ecp-caf/caf-common';
import { ProcessDesignerUIState } from '../../app/process-designer.uistate';
import { ExpressionService } from '@gsp-svc/expression';
export declare class CallActivitySubProcessComponent implements OnInit {
    private message;
    private util;
    private http;
    private designerState;
    private expr;
    cls: string;
    value: CallActivitySubProcess;
    closeModal: EventEmitter<any>;
    submitModal: EventEmitter<any>;
    modalFooter: TemplateRef<any>;
    modalConfig: {
        title: string;
        width: number;
        height: number;
        showButtons: boolean;
    };
    callActivitySubProcess: CallActivitySubProcess;
    groupIcon: string;
    constructor(message: MessagerService, util: ProcessDeUtil, http: HttpService, designerState: ProcessDesignerUIState, expr: ExpressionService);
    ngOnInit(): void;
    clickOK(): void;
    clickCancel(): void;
    processConfirm(args: any): void;
    clearProcessDef(args: any): void;
    flowFormConfirm(args: any): void;
    clearFlowForm(args: any): void;
    setBizDataId(): void;
    private showExprHelp;
    valueChange(bool: boolean): void;
    private validator;
    private getProcessDefKey;
    private getFlowForm;
}
export declare class CallActivitySubProcessConverter implements TypeConverter {
    constructor();
    convertTo(data: any): string;
}
