/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, Output, EventEmitter, ViewChild, TemplateRef, Input } from '@angular/core';
import { UrgeHandleRule } from './urge-handle-rule';
import { ProcessDesignerUIState } from '../../app/process-designer.uistate';
import { ExpressionService, InjectedType } from '@gsp-svc/expression';
import { MessagerService } from '@farris/ui-messager';
var UrgeHandleRuleComponent = /** @class */ (function () {
    function UrgeHandleRuleComponent(designerUIState, expr, message) {
        this.designerUIState = designerUIState;
        this.expr = expr;
        this.message = message;
        this.groupIcon2 = '<i class="f-icon f-icon-lookup"></i>';
        this.closeModal = new EventEmitter();
        this.submitModal = new EventEmitter();
        this.urgeHandleRule = new UrgeHandleRule();
        this.typeGroup = this.designerUIState.messageChannels.map((/**
         * @param {?} m
         * @return {?}
         */
        function (m) { return ({ value: m.code, name: m.name }); }));
        this.modalConfig = {
            title: '催办',
            width: 500,
            height: 445,
            showButtons: true
        };
        this.parser = (/**
         * @param {?} val
         * @return {?}
         */
        function (val) {
            return Number(val);
        });
    }
    Object.defineProperty(UrgeHandleRuleComponent.prototype, "value", {
        set: /**
         * @param {?} data
         * @return {?}
         */
        function (data) {
            if (!data) {
                this.urgeHandleRule.urgeHandleAble = true;
                this.urgeHandleRule.sendType = 'cloudplus,inmail';
            }
            else {
                this.urgeHandleRule = data;
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    UrgeHandleRuleComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @return {?}
     */
    UrgeHandleRuleComponent.prototype.clickOK = /**
     * @return {?}
     */
    function () {
        if (this.validator()) {
            /** @type {?} */
            var object = { value: this.urgeHandleRule, parameters: null };
            this.submitModal.emit(object);
        }
    };
    /**
     * @return {?}
     */
    UrgeHandleRuleComponent.prototype.clickCancel = /**
     * @return {?}
     */
    function () {
        this.closeModal.emit();
    };
    /**
     * @private
     * @return {?}
     */
    UrgeHandleRuleComponent.prototype.validator = /**
     * @private
     * @return {?}
     */
    function () {
        if (!this.urgeHandleRule.urgeHandleAble) {
            return true;
        }
        if (!this.urgeHandleRule.sendType) {
            this.message.info('尚未选择发送方式！');
            return false;
        }
        if (!this.urgeHandleRule.urgeMessageSubject) {
            this.message.info('尚未配置消息主题！');
            return false;
        }
        if (!this.urgeHandleRule.urgeMessageContent) {
            this.message.info('尚未选择消息内容！');
            return false;
        }
        return true;
    };
    /**
     * @param {?} data
     * @return {?}
     */
    UrgeHandleRuleComponent.prototype.titleExpr = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        this.showTitleHelp(data);
    };
    /**
     * @param {?} data
     * @return {?}
     */
    UrgeHandleRuleComponent.prototype.contentExpr = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        this.showContentHelp(data);
    };
    /**
     * @param {?} data
     * @return {?}
     */
    UrgeHandleRuleComponent.prototype.showTitleHelp = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        var _this = this;
        this.showExpr();
        if (this.urgeHandleRule.urgeMessageSubject && this.urgeHandleRule.urgeMessageSubject.length > 0) {
            this.expr.addExpressionText(this.urgeHandleRule.urgeMessageSubject);
        }
        else {
            this.expr.addExpressionText('');
        }
        this.expr.buildExpression().then((/**
         * @param {?} expressionInfo
         * @return {?}
         */
        function (expressionInfo) {
            _this.urgeHandleRule.urgeMessageSubject = expressionInfo;
        }));
    };
    /**
     * @param {?} data
     * @return {?}
     */
    UrgeHandleRuleComponent.prototype.showContentHelp = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        var _this = this;
        this.showExpr();
        if (this.urgeHandleRule.urgeMessageContent && this.urgeHandleRule.urgeMessageContent.length > 0) {
            this.expr.addExpressionText(this.urgeHandleRule.urgeMessageContent);
        }
        else {
            this.expr.addExpressionText('');
        }
        this.expr.buildExpression().then((/**
         * @param {?} expressionInfo
         * @return {?}
         */
        function (expressionInfo) {
            _this.urgeHandleRule.urgeMessageContent = expressionInfo;
        }));
    };
    /**
     * @return {?}
     */
    UrgeHandleRuleComponent.prototype.showExpr = /**
     * @return {?}
     */
    function () {
        var e_1, _a, e_2, _b, e_3, _c, e_4, _d;
        if (this.designerUIState.schemas.length > 0) {
            try {
                for (var _e = tslib_1.__values(this.designerUIState.schemas), _f = _e.next(); !_f.done; _f = _e.next()) {
                    var schema = _f.value;
                    // this.expr.addCommonObject(co);
                    this.expr.addSchema('Schema', schema);
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_f && !_f.done && (_a = _e.return)) _a.call(_e);
                }
                finally { if (e_1) throw e_1.error; }
            }
            if (this.designerUIState.schemas[0].entityTypes && this.designerUIState.schemas[0].entityTypes.length > 0) {
                /** @type {?} */
                var entityType = this.designerUIState.schemas[0].entityTypes[0];
                this.expr.addInjectedEntity(entityType.name, 'Schema', entityType.name, InjectedType.EntityType);
            }
        }
        /** @type {?} */
        var context = new Array();
        if (this.designerUIState.urgeContext.length > 0) {
            try {
                for (var _g = tslib_1.__values(this.designerUIState.urgeContext), _h = _g.next(); !_h.done; _h = _g.next()) {
                    var variable = _h.value;
                    context.push(variable);
                    // this.expr.addContext(variable);
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (_h && !_h.done && (_b = _g.return)) _b.call(_g);
                }
                finally { if (e_2) throw e_2.error; }
            }
        }
        if (this.designerUIState.processVariableContext.length > 0) {
            var _loop_1 = function (variable) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) { return c.key === variable.key; }))) {
                    context.push(variable);
                }
            };
            try {
                for (var _j = tslib_1.__values(this.designerUIState.processVariableContext), _k = _j.next(); !_k.done; _k = _j.next()) {
                    var variable = _k.value;
                    _loop_1(variable);
                }
            }
            catch (e_3_1) { e_3 = { error: e_3_1 }; }
            finally {
                try {
                    if (_k && !_k.done && (_c = _j.return)) _c.call(_j);
                }
                finally { if (e_3) throw e_3.error; }
            }
        }
        if (context.length > 0) {
            try {
                for (var context_1 = tslib_1.__values(context), context_1_1 = context_1.next(); !context_1_1.done; context_1_1 = context_1.next()) {
                    var v = context_1_1.value;
                    this.expr.addContext(v);
                }
            }
            catch (e_4_1) { e_4 = { error: e_4_1 }; }
            finally {
                try {
                    if (context_1_1 && !context_1_1.done && (_d = context_1.return)) _d.call(context_1);
                }
                finally { if (e_4) throw e_4.error; }
            }
        }
    };
    UrgeHandleRuleComponent.decorators = [
        { type: Component, args: [{
                    selector: 'lib-urge-handle-rule',
                    template: "<div class=\"f-page\">\r\n  <section class=\"f-page-main d-flex flex-column\">\r\n    <farris-section class=\"pt-0 f-section-form f-section-in-mainsubcard\" [mainTitle]=\"'\u50AC\u529E\u9009\u9879'\"\r\n      [enableAccordion]=\"''\" [enableMaximize]=\"false\">\r\n      <div class=\"f-form-layout farris-form farris-form-controls-inline\">\r\n        <fieldset class=\"f-section-formgroup\">\r\n          <div class=\"f-section-formgroup-inputs\">\r\n            <div class=\"col-12\">\r\n              <div class=\"farris-group-wrap\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\">\r\n                    <span class=\"farris-label-info text-danger\">*</span>\r\n                    <span class=\"farris-label-text\">\u542F\u7528\u50AC\u529E</span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap ml-1\">\r\n                    <farris-switch [(ngModel)]=\"urgeHandleRule.urgeHandleAble\" name=\"enable\"></farris-switch>\r\n                    <div class=\"farris-feedback valid-feedback\"></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-12 mt-2 pt-1\">\r\n              <div class=\"farris-group-wrap\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\">\r\n                    <span class=\"farris-label-info text-danger\">*</span>\r\n                    <span class=\"farris-label-text\">\u65F6\u95F4\u8BBE\u7F6E</span>\r\n                  </label>\r\n                  <label style=\"width: 55%;\" class=\"mb-0\">\r\n                    <span class=\"farris-label-text\">\u6700\u65E9\u5141\u8BB8\u50AC\u529E\u65F6\u95F4\uFF08\u5C0F\u65F6\uFF09</span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap\">\r\n                    <farris-number-spinner [(ngModel)]=\"urgeHandleRule.earlyTime\" name=\"earlyTime\" [editable]=\"true\" [precision]=\"0\"\r\n                      [parser]=\"parser\" [min]=\"0\"></farris-number-spinner>\r\n                    <div class=\"farris-feedback valid-feedback\"></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-12\">\r\n              <div class=\"farris-group-wrap\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\">\r\n                    <span class=\"farris-label-text\"></span>\r\n                  </label>\r\n                  <label style=\"width: 55%;\" class=\"mb-0\">\r\n                    <span class=\"farris-label-text\">\u6700\u5C0F\u5141\u8BB8\u50AC\u529E\u95F4\u9694\uFF08\u5C0F\u65F6\uFF09</span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap\">\r\n                    <farris-number-spinner [(ngModel)]=\"urgeHandleRule.intervalTime\" name=\"intervalTime\" [editable]=\"true\" [precision]=\"0\"\r\n                      [parser]=\"parser\" [min]=\"0\"></farris-number-spinner>\r\n                    <div class=\"farris-feedback valid-feedback\"></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-12 mt-2 pt-1\">\r\n              <div class=\"farris-group-wrap\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\">\r\n                    <span class=\"farris-label-info text-danger\">*</span>\r\n                    <span class=\"farris-label-text\">\u53D1\u9001\u65B9\u5F0F</span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap\">\r\n                    <farris-checkboxgroup #checkboxGroup [(ngModel)]=\"urgeHandleRule.sendType\" name=\"sendType\" [horizontal]=\"true\"\r\n                      [data]=\"typeGroup\">\r\n                    </farris-checkboxgroup>\r\n                    <div class=\"farris-feedback valid-feedback\"></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-12 mt-2 pt-1\">\r\n              <div class=\"farris-group-wrap\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\">\r\n                    <span class=\"farris-label-info text-danger\">*</span>\r\n                    <span class=\"farris-label-text\">\u6D88\u606F\u4E3B\u9898</span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap\">\r\n                    <input-group [editable]=\"false\" [customCls]=\"'custom-cls'\" [groupText]=\"groupIcon2\"\r\n                                 [(value)]=\"urgeHandleRule.urgeMessageSubject\" (clickHandle)=\"titleExpr($event)\">\r\n                    </input-group>\r\n                    <div class=\"farris-feedback valid-feedback\"></div>\r\n                  </div>\r\n                  <label class=\"col-form-label\">\r\n                    <span class=\"farris-label-text\">\u652F\u6301\u7F16\u8F91</span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap\" style=\"text-align: right\">\r\n                    <farris-switch [(ngModel)]=\"urgeHandleRule.subjectEditable\" name=\"enable\" size=\"small\"></farris-switch>\r\n                    <div class=\"farris-feedback valid-feedback\"></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-12 mt-2 pt-1\">\r\n              <div class=\"farris-group-wrap\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\">\r\n                    <span class=\"farris-label-info text-danger\">*</span>\r\n                    <span class=\"farris-label-text\">\u6D88\u606F\u5185\u5BB9</span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap\">\r\n                    <input-group [editable]=\"false\" [customCls]=\"'custom-cls'\" [groupText]=\"groupIcon2\"\r\n                                 [(value)]=\"urgeHandleRule.urgeMessageContent\" (clickHandle)=\"contentExpr($event)\">\r\n                    </input-group>\r\n                    <div class=\"farris-feedback valid-feedback\"></div>\r\n                  </div>\r\n                  <label class=\"col-form-label\">\r\n                    <span class=\"farris-label-text\">\u652F\u6301\u7F16\u8F91</span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap\">\r\n                    <farris-switch [(ngModel)]=\"urgeHandleRule.contentEditable\" name=\"enable\" size=\"small\"></farris-switch>\r\n                    <div class=\"farris-feedback valid-feedback\"></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-12 mt-2 pt-1\">\r\n              <div class=\"farris-group-wrap\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\">\r\n                    <span class=\"farris-label-text\">\u663E\u793A\u50AC\u529E\u4EBA</span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap\">\r\n                    <farris-switch [(ngModel)]=\"urgeHandleRule.addReminder\" name=\"enable\" size=\"small\"></farris-switch>\r\n                    <div class=\"farris-feedback valid-feedback\"></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </fieldset>\r\n      </div>\r\n    </farris-section>\r\n  </section>\r\n</div>\r\n\r\n<ng-template #iconSelectFooter>\r\n  <button type=\"button\" class=\"btn btn-primary btn-sm px-3 mx-2\" (click)=\"clickOK()\">\u786E\u5B9A</button>\r\n  <button type=\"button\" class=\"btn btn-secondary btn-sm px-3\" (click)=\"clickCancel()\">\u53D6\u6D88</button>\r\n</ng-template>\r\n",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    UrgeHandleRuleComponent.ctorParameters = function () { return [
        { type: ProcessDesignerUIState },
        { type: ExpressionService },
        { type: MessagerService }
    ]; };
    UrgeHandleRuleComponent.propDecorators = {
        closeModal: [{ type: Output }],
        submitModal: [{ type: Output }],
        modalFooter: [{ type: ViewChild, args: ['iconSelectFooter',] }],
        value: [{ type: Input }]
    };
    return UrgeHandleRuleComponent;
}());
export { UrgeHandleRuleComponent };
if (false) {
    /** @type {?} */
    UrgeHandleRuleComponent.prototype.groupIcon2;
    /** @type {?} */
    UrgeHandleRuleComponent.prototype.closeModal;
    /** @type {?} */
    UrgeHandleRuleComponent.prototype.submitModal;
    /** @type {?} */
    UrgeHandleRuleComponent.prototype.modalFooter;
    /** @type {?} */
    UrgeHandleRuleComponent.prototype.urgeHandleRule;
    /** @type {?} */
    UrgeHandleRuleComponent.prototype.typeGroup;
    /** @type {?} */
    UrgeHandleRuleComponent.prototype.modalConfig;
    /** @type {?} */
    UrgeHandleRuleComponent.prototype.parser;
    /**
     * @type {?}
     * @private
     */
    UrgeHandleRuleComponent.prototype.designerUIState;
    /**
     * @type {?}
     * @private
     */
    UrgeHandleRuleComponent.prototype.expr;
    /**
     * @type {?}
     * @private
     */
    UrgeHandleRuleComponent.prototype.message;
}
var UrgeHandleRuleConverter = /** @class */ (function () {
    function UrgeHandleRuleConverter() {
    }
    /**
     * @param {?} data
     * @return {?}
     */
    UrgeHandleRuleConverter.prototype.convertTo = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        if (!data) {
            return '（已设置）';
        }
        else if (data.urgeHandleAble) {
            return '（已设置）';
        }
        else {
            return '（未设置）';
        }
    };
    return UrgeHandleRuleConverter;
}());
export { UrgeHandleRuleConverter };
//# sourceMappingURL=data:application/json;base64,