/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, HostBinding, ViewChild, Input } from '@angular/core';
import { UserPerformerComponent } from '../user-performer/user-performer.component';
import { PositionPerformerComponent } from '../position-performer/position-performer.component';
import { ComponentPerformerComponent } from '../component-performer/component-performer.component';
import { ReportingLineComponent } from '../reporting-line/reporting-line.component';
import { MatrixPerformerComponent } from '../matrix-performer/matrix-performer.component';
import { HttpService } from "@ecp-caf/caf-common";
var PerformerEditComponent = /** @class */ (function () {
    function PerformerEditComponent(http) {
        this.http = http;
        this.cls = 'farris-main-area flex-column';
        this.tab = 'user';
        this.display = true;
    }
    /**
     * @return {?}
     */
    PerformerEditComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @return {?}
     */
    PerformerEditComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.performer) {
            switch (this.performer.type) {
                case 'wf.UserParticipant':
                    this.tab = 'user';
                    this.usersCmp.users = [];
                    this.usersCmp.users.push(this.performer.value);
                    // 考虑到兼容历史数据，暂时不使用用户参与者实体类中的userType属性
                    if (this.performer.value.performerId && this.performer.value.performerId.charAt(0) === '{') {
                        /** @type {?} */
                        var url = '/api/runtime/wf/v1.0/reportingOrgType/hasAdminOrg';
                        this.http.get(url).subscribe((/**
                         * @param {?} data
                         * @return {?}
                         */
                        function (data) {
                            _this.usersCmp.userTypeButtonNeedShow = data;
                            _this.usersCmp.userType = 'variable';
                            _this.usersCmp.curOrgType = _this.performer.value.orgType === 'Sys' ? 'Sys' : 'Administrative_organization';
                            _this.usersCmp.condition = _this.performer.value.condition;
                            // 根据表达式中的函数名判断是否使用的是上下文变量
                            /** @type {?} */
                            var isContextVariable = _this.performer.value.performerId.indexOf("GetContextParameter") >= 0;
                            _this.usersCmp.variableOrgTypes = isContextVariable ? [
                                { name: '系统用户', value: 'Sys' }
                            ] : [
                                { name: '系统用户', value: 'Sys' },
                                { name: '行政人员', value: 'Administrative_organization' }
                            ];
                        }));
                    }
                    else {
                        this.usersCmp.userType = 'user';
                        this.usersCmp.condition = this.performer.value.condition;
                    }
                    break;
                case 'wf.PositionParticipant':
                    this.tab = 'position';
                    this.posiCmp.position = Object.assign({}, this.performer.value);
                    if (this.posiCmp.position.positionType === '0') {
                        this.posiCmp.filter = { positionType: 0 };
                    }
                    else {
                        this.posiCmp.filter = { positionType: 1 };
                    }
                    break;
                case 'wf.ReportingLineParticipant':
                    this.tab = 'report';
                    this.reportingLineCmp.setReportingLineDataEntity = this.performer.value;
                    break;
                case 'wf.ComponentParticipant':
                    this.tab = 'component';
                    this.cmpCmp.component = this.performer.value;
                    break;
                case 'wf.MatrixParticipant':
                    this.tab = 'matrix';
                    this.cmpCmp.component = this.performer.value;
                    this.matrixCmp.setMatrixDataEntity = this.performer.value;
            }
        }
    };
    /**
     * @return {?}
     */
    PerformerEditComponent.prototype.getPerformers = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var users = this.usersCmp.getPerformers();
        /** @type {?} */
        var position = this.posiCmp.getPerformers();
        /** @type {?} */
        var component = this.cmpCmp.getPerformers();
        /** @type {?} */
        var reportingLine = this.reportingLineCmp.getPerformers();
        /** @type {?} */
        var matrix = this.matrixCmp.getPerformers();
        // let performers = [];
        /** @type {?} */
        var positionPerformers = [];
        // 只包含岗位参与者
        /** @type {?} */
        var userPerformers = [];
        if (users && users.length > 0) {
            userPerformers = userPerformers.concat(users);
        }
        if (position && position.performerId) {
            positionPerformers.push(position);
        }
        return { userPerformers: userPerformers, positionPerformers: positionPerformers, component: component, reportingLine: reportingLine, matrix: matrix };
    };
    PerformerEditComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-performer-edit',
                    template: "<div class=\"flex-fill farris-split-section m-2 farris-overflow-y-auto f-utils-flex-column\">\r\n    <farris-tabs class=\"f-utils-fill h-100\" #tabs [value]=\"tab\" [fill]=\"true\" [contentFill]=\"true\">\r\n      <farris-tab title=\"\u7528\u6237\" [show]=\"true\" [id]=\"'user'\">\r\n        <ng-template #content>\r\n          <app-user-performer></app-user-performer>\r\n        </ng-template>\r\n      </farris-tab>\r\n      <farris-tab title=\"\u5C97\u4F4D\" [id]=\"'position'\">\r\n        <ng-template #content>\r\n          <app-position-performer></app-position-performer>\r\n        </ng-template>\r\n      </farris-tab>\r\n      <farris-tab title=\"\u6C47\u62A5\u5173\u7CFB\" [id]=\"'report'\">\r\n        <ng-template #content>\r\n          <app-reporting-line></app-reporting-line>\r\n        </ng-template>\r\n      </farris-tab>\r\n      <farris-tab title=\"\u77E9\u9635\" [id]=\"'matrix'\" *ngIf=\"display\">\r\n        <ng-template #content>\r\n          <app-matrix-performer></app-matrix-performer>\r\n        </ng-template>\r\n      </farris-tab>\r\n      <farris-tab title=\"\u53C2\u4E0E\u8005\u6784\u4EF6\" [id]=\"'component'\">\r\n        <ng-template #content>\r\n          <app-component-performer [component]=\"component\" style=\"background: #FFF;\"></app-component-performer>\r\n        </ng-template>\r\n      </farris-tab>\r\n    </farris-tabs>\r\n</div>\r\n",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    PerformerEditComponent.ctorParameters = function () { return [
        { type: HttpService }
    ]; };
    PerformerEditComponent.propDecorators = {
        cls: [{ type: HostBinding, args: ['class',] }],
        display: [{ type: Input }],
        usersCmp: [{ type: ViewChild, args: [UserPerformerComponent,] }],
        posiCmp: [{ type: ViewChild, args: [PositionPerformerComponent,] }],
        cmpCmp: [{ type: ViewChild, args: [ComponentPerformerComponent,] }],
        reportingLineCmp: [{ type: ViewChild, args: [ReportingLineComponent,] }],
        matrixCmp: [{ type: ViewChild, args: [MatrixPerformerComponent,] }]
    };
    return PerformerEditComponent;
}());
export { PerformerEditComponent };
if (false) {
    /** @type {?} */
    PerformerEditComponent.prototype.cls;
    /** @type {?} */
    PerformerEditComponent.prototype.component;
    /** @type {?} */
    PerformerEditComponent.prototype.performer;
    /** @type {?} */
    PerformerEditComponent.prototype.tab;
    /** @type {?} */
    PerformerEditComponent.prototype.display;
    /** @type {?} */
    PerformerEditComponent.prototype.usersCmp;
    /** @type {?} */
    PerformerEditComponent.prototype.posiCmp;
    /** @type {?} */
    PerformerEditComponent.prototype.cmpCmp;
    /** @type {?} */
    PerformerEditComponent.prototype.reportingLineCmp;
    /** @type {?} */
    PerformerEditComponent.prototype.matrixCmp;
    /**
     * @type {?}
     * @private
     */
    PerformerEditComponent.prototype.http;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGVyZm9ybWVyLWVkaXQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzcC13Zi93Zi1wcm9jZXNzLWVkaXRvci8iLCJzb3VyY2VzIjpbImxpYi92aWV3cy9wZXJmb3JtZXIvdmlld3MvcGVyZm9ybWVyLWVkaXQvcGVyZm9ybWVyLWVkaXQuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFVLFdBQVcsRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFnQixNQUFNLGVBQWUsQ0FBQztBQUU5RixPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw0Q0FBNEMsQ0FBQztBQUNwRixPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSxvREFBb0QsQ0FBQztBQUNoRyxPQUFPLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSxzREFBc0QsQ0FBQztBQUVuRyxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw0Q0FBNEMsQ0FBQztBQUNwRixPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSxnREFBZ0QsQ0FBQztBQUMxRixPQUFPLEVBQUMsV0FBVyxFQUFDLE1BQU0scUJBQXFCLENBQUM7QUFFaEQ7SUFzQkUsZ0NBQW9CLElBQWtCO1FBQWxCLFNBQUksR0FBSixJQUFJLENBQWM7UUFmdEMsUUFBRyxHQUFHLDhCQUE4QixDQUFDO1FBSXJDLFFBQUcsR0FBRyxNQUFNLENBQUM7UUFDSixZQUFPLEdBQUcsSUFBSSxDQUFDO0lBV3hCLENBQUM7Ozs7SUFFRCx5Q0FBUTs7O0lBQVI7SUFDQSxDQUFDOzs7O0lBRUQsZ0RBQWU7OztJQUFmO1FBQUEsaUJBb0RDO1FBbkRDLElBQUksSUFBSSxDQUFDLFNBQVMsRUFBRTtZQUNsQixRQUFRLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxFQUFFO2dCQUMzQixLQUFLLG9CQUFvQjtvQkFDdkIsSUFBSSxDQUFDLEdBQUcsR0FBRyxNQUFNLENBQUM7b0JBQ2xCLElBQUksQ0FBQyxRQUFR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Q0FBOEM7O2lCQUUvQzs7OztnQkFOTyxXQUFXOzs7c0JBUWhCLFdBQVcsU0FBQyxPQUFPOzBCQU1uQixLQUFLOzJCQUVMLFNBQVMsU0FBQyxzQkFBc0I7MEJBQ2hDLFNBQVMsU0FBQywwQkFBMEI7eUJBQ3BDLFNBQVMsU0FBQywyQkFBMkI7bUNBQ3JDLFNBQVMsU0FBQyxzQkFBc0I7NEJBQ2hDLFNBQVMsU0FBQyx3QkFBd0I7O0lBa0ZyQyw2QkFBQztDQUFBLEFBcEdELElBb0dDO1NBL0ZZLHNCQUFzQjs7O0lBQ2pDLHFDQUNxQzs7SUFDckMsMkNBQThCOztJQUM5QiwyQ0FBd0M7O0lBRXhDLHFDQUFhOztJQUNiLHlDQUF3Qjs7SUFFeEIsMENBQW9FOztJQUNwRSx5Q0FBMkU7O0lBQzNFLHdDQUE0RTs7SUFDNUUsa0RBQTRFOztJQUM1RSwyQ0FBeUU7Ozs7O0lBSTdELHNDQUEwQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBPbkluaXQsIEhvc3RCaW5kaW5nLCBWaWV3Q2hpbGQsIElucHV0LCBBZnRlclZpZXdJbml0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgRm9ybUdyb3VwLCBGb3JtQ29udHJvbCB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcclxuaW1wb3J0IHsgVXNlclBlcmZvcm1lckNvbXBvbmVudCB9IGZyb20gJy4uL3VzZXItcGVyZm9ybWVyL3VzZXItcGVyZm9ybWVyLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFBvc2l0aW9uUGVyZm9ybWVyQ29tcG9uZW50IH0gZnJvbSAnLi4vcG9zaXRpb24tcGVyZm9ybWVyL3Bvc2l0aW9uLXBlcmZvcm1lci5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBDb21wb25lbnRQZXJmb3JtZXJDb21wb25lbnQgfSBmcm9tICcuLi9jb21wb25lbnQtcGVyZm9ybWVyL2NvbXBvbmVudC1wZXJmb3JtZXIuY29tcG9uZW50JztcclxuaW1wb3J0IHsgQml6Q29tcG9uZW50RW50aXR5IH0gZnJvbSAnLi4vLi4vLi4vLi4vZG9tYWluL2VudGl0aWVzL2Jpei1jb21wb25lbnQuZW50aXR5JztcclxuaW1wb3J0IHsgUmVwb3J0aW5nTGluZUNvbXBvbmVudCB9IGZyb20gJy4uL3JlcG9ydGluZy1saW5lL3JlcG9ydGluZy1saW5lLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IE1hdHJpeFBlcmZvcm1lckNvbXBvbmVudCB9IGZyb20gJy4uL21hdHJpeC1wZXJmb3JtZXIvbWF0cml4LXBlcmZvcm1lci5jb21wb25lbnQnO1xyXG5pbXBvcnQge0h0dHBTZXJ2aWNlfSBmcm9tIFwiQGVjcC1jYWYvY2FmLWNvbW1vblwiO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhcHAtcGVyZm9ybWVyLWVkaXQnLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9wZXJmb3JtZXItZWRpdC5jb21wb25lbnQuaHRtbCcsXHJcbiAgc3R5bGVVcmxzOiBbJy4vcGVyZm9ybWVyLWVkaXQuY29tcG9uZW50LnNjc3MnXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgUGVyZm9ybWVyRWRpdENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgQWZ0ZXJWaWV3SW5pdCB7XHJcbiAgQEhvc3RCaW5kaW5nKCdjbGFzcycpXHJcbiAgY2xzID0gJ2ZhcnJpcy1tYWluLWFyZWEgZmxleC1jb2x1bW4nO1xyXG4gIGNvbXBvbmVudDogQml6Q29tcG9uZW50RW50aXR5O1xyXG4gIHBlcmZvcm1lcjogeyB0eXBlOiBzdHJpbmcsIHZhbHVlOiBhbnkgfTtcclxuXHJcbiAgdGFiID0gJ3VzZXInO1xyXG4gIEBJbnB1dCgpIGRpc3BsYXkgPSB0cnVlO1xyXG5cclxuICBAVmlld0NoaWxkKFVzZXJQZXJmb3JtZXJDb21wb25lbnQpIHVzZXJzQ21wOiBVc2VyUGVyZm9ybWVyQ29tcG9uZW50O1xyXG4gIEBWaWV3Q2hpbGQoUG9zaXRpb25QZXJmb3JtZXJDb21wb25lbnQpIHBvc2lDbXA6IFBvc2l0aW9uUGVyZm9ybWVyQ29tcG9uZW50O1xyXG4gIEBWaWV3Q2hpbGQoQ29tcG9uZW50UGVyZm9ybWVyQ29tcG9uZW50KSBjbXBDbXA6IENvbXBvbmVudFBlcmZvcm1lckNvbXBvbmVudDtcclxuICBAVmlld0NoaWxkKFJlcG9ydGluZ0xpbmVDb21wb25lbnQpIHJlcG9ydGluZ0xpbmVDbXA6IFJlcG9ydGluZ0xpbmVDb21wb25lbnQ7XHJcbiAgQFZpZXdDaGlsZChNYXRyaXhQZXJmb3JtZXJDb21wb25lbnQpIG1hdHJpeENtcDogTWF0cml4UGVyZm9ybWVyQ29tcG9uZW50O1xyXG5cclxuXHJcblxyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgaHR0cD86IEh0dHBTZXJ2aWNlKSB7XHJcbiAgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICB9XHJcblxyXG4gIG5nQWZ0ZXJWaWV3SW5pdCgpIHtcclxuICAgIGlmICh0aGlzLnBlcmZvcm1lcikge1xyXG4gICAgICBzd2l0Y2ggKHRoaXMucGVyZm9ybWVyLnR5cGUpIHtcclxuICAgICAgICBjYXNlICd3Zi5Vc2VyUGFydGljaXBhbnQnOlxyXG4gICAgICAgICAgdGhpcy50YWIgPSAndXNlcic7XHJcbiAgICAgICAgICB0aGlzLnVzZXJzQ21wLnVzZXJzID0gW107XHJcbiAgICAgICAgICB0aGlzLnVzZXJzQ21wLnVzZXJzLnB1c2godGhpcy5wZXJmb3JtZXIudmFsdWUpO1xyXG4gICAgICAgICAgLy8g6ICD6JmR5Yiw5YW85a655Y6G5Y+y5pWw5o2u77yM5pqC5pe25LiN5L2/55So55So5oi35Y+C5LiO6ICF5a6e5L2T57G75Lit55qEdXNlclR5cGXlsZ7mgKdcclxuICAgICAgICAgIGlmKHRoaXMucGVyZm9ybWVyLnZhbHVlLnBlcmZvcm1lcklkICYmIHRoaXMucGVyZm9ybWVyLnZhbHVlLnBlcmZvcm1lcklkLmNoYXJBdCgwKSA9PT0gJ3snKXtcclxuICAgICAgICAgICAgbGV0IHVybCA9ICcvYXBpL3J1bnRpbWUvd2YvdjEuMC9yZXBvcnRpbmdPcmdUeXBlL2hhc0FkbWluT3JnJztcclxuICAgICAgICAgICAgdGhpcy5odHRwLmdldCh1cmwpLnN1YnNjcmliZSgoZGF0YTogYW55KSA9PiB7XHJcbiAgICAgICAgICAgICAgdGhpcy51c2Vyc0NtcC51c2VyVHlwZUJ1dHRvbk5lZWRTaG93ID0gZGF0YTtcclxuICAgICAgICAgICAgICB0aGlzLnVzZXJzQ21wLnVzZXJUeXBlID0gJ3ZhcmlhYmxlJztcclxuICAgICAgICAgICAgICB0aGlzLnVzZXJzQ21wLmN1ck9yZ1R5cGUgPSB0aGlzLnBlcmZvcm1lci52YWx1ZS5vcmdUeXBlID09PSAnU3lzJyA/ICdTeXMnIDogJ0FkbWluaXN0cmF0aXZlX29yZ2FuaXphdGlvbic7XHJcbiAgICAgICAgICAgICAgdGhpcy51c2Vyc0NtcC5jb25kaXRpb24gPSB0aGlzLnBlcmZvcm1lci52YWx1ZS5jb25kaXRpb247XHJcbiAgICAgICAgICAgICAgLy8g5qC55o2u6KGo6L6+5byP5Lit55qE5Ye95pWw5ZCN5Yik5pat5piv5ZCm5L2/55So55qE5piv5LiK5LiL5paH5Y+Y6YePXHJcbiAgICAgICAgICAgICAgY29uc3QgaXNDb250ZXh0VmFyaWFibGUgPSB0aGlzLnBlcmZvcm1lci52YWx1ZS5wZXJmb3JtZXJJZC5pbmRleE9mKFwiR2V0Q29udGV4dFBhcmFtZXRlclwiKSA+PSAwO1xyXG4gICAgICAgICAgICAgIHRoaXMudXNlcnNDbXAudmFyaWFibGVPcmdUeXBlcyA9IGlzQ29udGV4dFZhcmlhYmxlID8gW1xyXG4gICAgICAgICAgICAgICAgeyBuYW1lOiAn57O757uf55So5oi3JywgdmFsdWU6ICdTeXMnIH1cclxuICAgICAgICAgICAgICAgIF0gOiBbXHJcbiAgICAgICAgICAgICAgICB7IG5hbWU6ICfns7vnu5/nlKjmiLcnLCB2YWx1ZTogJ1N5cycgfSxcclxuICAgICAgICAgICAgICAgIHsgbmFtZTogJ+ihjOaUv+S6uuWRmCcsIHZhbHVlOiAnQWRtaW5pc3RyYXRpdmVfb3JnYW5pemF0aW9uJyB9XHJcbiAgICAgICAgICAgICAgXTtcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICB0aGlzLnVzZXJzQ21wLnVzZXJUeXBlID0gJ3VzZXInO1xyXG4gICAgICAgICAgICB0aGlzLnVzZXJzQ21wLmNvbmRpdGlvbiA9IHRoaXMucGVyZm9ybWVyLnZhbHVlLmNvbmRpdGlvbjtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIGNhc2UgJ3dmLlBvc2l0aW9uUGFydGljaXBhbnQnOlxyXG4gICAgICAgICAgdGhpcy50YWIgPSAncG9zaXRpb24nO1xyXG4gICAgICAgICAgdGhpcy5wb3NpQ21wLnBvc2l0aW9uID0gT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5wZXJmb3JtZXIudmFsdWUpO1xyXG4gICAgICAgICAgaWYgKHRoaXMucG9zaUNtcC5wb3NpdGlvbi5wb3NpdGlvblR5cGUgPT09ICcwJykge1xyXG4gICAgICAgICAgICB0aGlzLnBvc2lDbXAuZmlsdGVyID0geyBwb3NpdGlvblR5cGU6IDAgfTtcclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMucG9zaUNtcC5maWx0ZXIgPSB7IHBvc2l0aW9uVHlwZTogMSB9O1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgY2FzZSAnd2YuUmVwb3J0aW5nTGluZVBhcnRpY2lwYW50JzpcclxuICAgICAgICAgIHRoaXMudGFiID0gJ3JlcG9ydCc7XHJcbiAgICAgICAgICB0aGlzLnJlcG9ydGluZ0xpbmVDbXAuc2V0UmVwb3J0aW5nTGluZURhdGFFbnRpdHkgPSB0aGlzLnBlcmZvcm1lci52YWx1ZTtcclxuICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIGNhc2UgJ3dmLkNvbXBvbmVudFBhcnRpY2lwYW50JzpcclxuICAgICAgICAgIHRoaXMudGFiID0gJ2NvbXBvbmVudCc7XHJcbiAgICAgICAgICB0aGlzLmNtcENtcC5jb21wb25lbnQgPSB0aGlzLnBlcmZvcm1lci52YWx1ZTtcclxuICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIGNhc2UgJ3dmLk1hdHJpeFBhcnRpY2lwYW50JzpcclxuICAgICAgICAgIHRoaXMudGFiID0gJ21hdHJpeCc7XHJcbiAgICAgICAgICB0aGlzLmNtcENtcC5jb21wb25lbnQgPSB0aGlzLnBlcmZvcm1lci52YWx1ZTtcclxuICAgICAgICAgIHRoaXMubWF0cml4Q21wLnNldE1hdHJpeERhdGFFbnRpdHkgPSB0aGlzLnBlcmZvcm1lci52YWx1ZTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuICBnZXRQZXJmb3JtZXJzKCkge1xyXG4gICAgY29uc3QgdXNlcnMgPSB0aGlzLnVzZXJzQ21wLmdldFBlcmZvcm1lcnMoKTtcclxuICAgIGNvbnN0IHBvc2l0aW9uID0gdGhpcy5wb3NpQ21wLmdldFBlcmZvcm1lcnMoKTtcclxuICAgIGNvbnN0IGNvbXBvbmVudCA9IHRoaXMuY21wQ21wLmdldFBlcmZvcm1lcnMoKTtcclxuICAgIGNvbnN0IHJlcG9ydGluZ0xpbmUgPSB0aGlzLnJlcG9ydGluZ0xpbmVDbXAuZ2V0UGVyZm9ybWVycygpO1xyXG4gICAgY29uc3QgbWF0cml4ID0gdGhpcy5tYXRyaXhDbXAuZ2V0UGVyZm9ybWVycygpO1xyXG5cclxuICAgIC8vIGxldCBwZXJmb3JtZXJzID0gW107XHJcbiAgICBsZXQgcG9zaXRpb25QZXJmb3JtZXJzID0gW107IC8vIOWPquWMheWQq+Wyl+S9jeWPguS4juiAhVxyXG4gICAgbGV0IHVzZXJQZXJmb3JtZXJzID0gW107IC8vIOeUqOaIt+WPguS4juiAhVxyXG5cclxuICAgIGlmICh1c2VycyAmJiB1c2Vycy5sZW5ndGggPiAwKSB7XHJcbiAgICAgIHVzZXJQZXJmb3JtZXJzID0gdXNlclBlcmZvcm1lcnMuY29uY2F0KHVzZXJzKTtcclxuICAgIH1cclxuICAgIGlmIChwb3NpdGlvbiAmJiBwb3NpdGlvbi5wZXJmb3JtZXJJZCkge1xyXG4gICAgICBwb3NpdGlvblBlcmZvcm1lcnMucHVzaChwb3NpdGlvbik7XHJcbiAgICB9XHJcbiAgICByZXR1cm4geyB1c2VyUGVyZm9ybWVycywgcG9zaXRpb25QZXJmb3JtZXJzLCBjb21wb25lbnQsIHJlcG9ydGluZ0xpbmUsIG1hdHJpeH07XHJcbiAgfVxyXG59XHJcbiJdfQ==