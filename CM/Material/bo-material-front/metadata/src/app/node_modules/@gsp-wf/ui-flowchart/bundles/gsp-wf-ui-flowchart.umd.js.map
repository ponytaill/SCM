{"version":3,"file":"gsp-wf-ui-flowchart.umd.js.map","sources":["ng://@gsp-wf/ui-flowchart/lib/services/i18n/en.ts","ng://@gsp-wf/ui-flowchart/lib/services/i18n/zh-cht.ts","ng://@gsp-wf/ui-flowchart/lib/services/i18n/zh-chs.ts","ng://@gsp-wf/ui-flowchart/lib/services/i18n/index.ts","ng://@gsp-wf/ui-flowchart/lib/services/ui-flowchart.service.ts","ng://@gsp-wf/ui-flowchart/lib/wf-flowchart.service.ts","ng://@gsp-wf/ui-flowchart/lib/task-flowchart/task-flowchart.component.ts","ng://@gsp-wf/ui-flowchart/lib/services/translate.pipe.ts","ng://@gsp-wf/ui-flowchart/lib/ui-flowchart.module.ts","ng://@gsp-wf/ui-flowchart/lib/entity/forecast-process-payload.ts"],"sourcesContent":["export const en = {\r\n    static: {\r\n        approvalLogs: {\r\n            title: 'Approval Logs',\r\n            approvalOpinion: 'Approval opinion',\r\n            startTime: 'StartTime',\r\n            endTime: 'EndTime',\r\n            todo: 'Todo',\r\n            done: 'Done',\r\n            toAssign: 'To Assign'\r\n        },\r\n        flowchart: {\r\n            title: 'Flow Chart',\r\n            processNotFound: 'process instance id is null',\r\n            flowChart: 'Flow Chart',\r\n            complete: 'Hide Calculated Route',\r\n            simulation: 'Show Calculated Route',\r\n            sequenceColor: 'Description Of Sequence Color',\r\n            completed: 'Completed',\r\n            calculate: 'Calculate Route',\r\n            default: 'Default',\r\n            suspend: 'Calculate Suspend',\r\n            noProcess: 'Process definition not found!',\r\n            list: 'Process List',\r\n            noDataId: 'form id is null',\r\n            noBizDefKey: 'process category id is null'\r\n        }\r\n    }\r\n};\r\n","export const zh_CHT = {\r\n    static: {\r\n        approvalLogs: {\r\n            title: 'å¯©æ¹è¨é',\r\n            approvalOpinion: 'å¯©æ¹æè¦',\r\n            startTime: 'æ¥æ¶æé',\r\n            endTime: 'èçæé',\r\n            todo: 'å¾è¾¦ç',\r\n            done: 'å·²è¾¦ç',\r\n            toAssign: 'æªææ´¾'\r\n        },\r\n        flowchart: {\r\n            title: 'æ¥çæµç¨',\r\n            processNotFound: 'æµç¨å¯¦ä¾IDçºç©º',\r\n            dataIdIsNull: 'å®æå§ç¢¼çºç©º',\r\n            flowChart: 'æµç¨å',\r\n            complete: 'é±èè¨ç®è·¯ç·',\r\n            simulation: 'é¡¯ç¤ºè¨ç®è·¯ç·',\r\n            sequenceColor: 'åæ¯ç·é¡è²èªªæ',\r\n            completed: 'å·²éè¡',\r\n            calculate: 'è¨ç®è·¯ç·',\r\n            default: 'é»èª',\r\n            suspend: 'è¨ç®ä¸­æ·',\r\n            noProcess: 'æªæ¾å°ç¬¦åæ¢ä»¶çæµç¨å®ç¾©ï¼',\r\n            list: 'æµç¨åè¡¨',\r\n            noDataId: 'å®æå§ç¢¼çºç©º',\r\n            noBizDefKey: 'æµç¨åé¡IDçºç©º'\r\n        }\r\n    }\r\n};\r\n","export const zh_CHS = {\r\n    static: {\r\n        approvalLogs: {\r\n            title: 'å®¡æ¹è®°å½',\r\n            approvalOpinion: 'å®¡æ¹æè§',\r\n            startTime: 'æ¥æ¶æ¶é´',\r\n            endTime: 'å¤çæ¶é´',\r\n            todo: 'å¾åç',\r\n            done: 'å·²åç',\r\n            toAssign: 'æªææ´¾'\r\n        },\r\n        flowchart: {\r\n            title: 'æ¥çæµç¨',\r\n            processNotFound: 'æµç¨å®ä¾IDä¸ºç©º',\r\n            dataIdIsNull: 'åæ®åç ä¸ºç©º',\r\n            flowChart: 'æµç¨å¾',\r\n            complete: 'éèè®¡ç®è·¯çº¿',\r\n            simulation: 'æ¾ç¤ºè®¡ç®è·¯çº¿',\r\n            sequenceColor: 'åæ¯çº¿é¢è²è¯´æ',\r\n            completed: 'å·²è¿è¡',\r\n            calculate: 'è®¡ç®è·¯çº¿',\r\n            default: 'é»è®¤',\r\n            suspend: 'è®¡ç®ä¸­æ­',\r\n            noProcess: 'æªæ¾å°ç¬¦åæ¡ä»¶çæµç¨å®ä¹ï¼',\r\n            list: 'æµç¨åè¡¨',\r\n            noDataId: 'åæ®åç ä¸ºç©º',\r\n            noBizDefKey: 'æµç¨åç±»IDä¸ºç©º'\r\n        }\r\n    }\r\n};\r\n","import { en } from './en';\r\nimport { zh_CHT } from './zh-cht';\r\nimport { zh_CHS } from './zh-chs';\r\n\r\nexport const translate = {\r\n    'zh-CHS': zh_CHS,\r\n    'en': en,\r\n    'zh-CHT': zh_CHT\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, from, of } from 'rxjs';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { translate } from './i18n/index';\r\nimport { ForecastProcessPayload } from '../entity/forecast-process-payload';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class UiFlowchartService {\r\n\r\n  constructor(private httpSvc: HttpService) { }\r\n\r\n  getForecastProcessListByPayload(payload: ForecastProcessPayload): Observable<any> {\r\n    const url = '/api/runtime/wf/v1.0/processInstances/startProcess-simulation';\r\n    return this.httpSvc.post(url, payload).pipe(\r\n      map((re: any) => re.procDefs)\r\n    );\r\n  }\r\n\r\n  getRuntimeProcInstsByDataId(dataId: string): Observable<any> {\r\n    if (dataId) {\r\n      const url = `/api/runtime/wf/v1.0/processInstances/runtimeProcInstList?dataId=${dataId}`;\r\n      return this.httpSvc.get(url);\r\n    } else {\r\n      return from(new Array());\r\n    }\r\n  }\r\n\r\n  getHistoricProcInstsByDataId(dataId: string): Observable<any> {\r\n    if (dataId) {\r\n      const url = `/api/runtime/wf/v1.0/processInstances/historicProcInstList?dataId=${dataId}`;\r\n      return this.httpSvc.get(url);\r\n    } else {\r\n      return from(new Array());\r\n    }\r\n  }\r\n\r\n  /**\r\n   * åºäºæµç¨å®ä¾IDè·åæµç¨å®ä¾\r\n   * @param procInstId æµç¨å®ä¾id\r\n   */\r\n  getProcInstanceById(procInstId: string): Observable<any> {\r\n    const url = `/api/runtime/wf/v1.0/processInstances/${procInstId}`;\r\n    return this.httpSvc.get(url);\r\n  }\r\n  /**\r\n   * åºäºæµç¨å®ä¾IDè·åbpmnModel\r\n   */\r\n  getBpmnModelbyProcInstId(procInstId: string): Observable<any> {\r\n    const url = `/api/runtime/wf/v1.0/processInstances/${procInstId}/bpmnModel`;\r\n    return this.httpSvc.get(url);\r\n  }\r\n\r\n  /**\r\n   * åºäºæµç¨å®ä¹IDè·åbpmnModel\r\n   */\r\n  getBpmnModelbyProcDefId(procDefId: string): Observable<any> {\r\n    const url = `/api/runtime/wf/v1.0/procDefs/${procDefId}/bpmnModel`;\r\n    return this.httpSvc.get(url);\r\n  }\r\n\r\n  getSubProcessInstance(superActInstId: string, superProcInstId: string): Observable<any> {\r\n    if (superActInstId) {\r\n      const url = `/api/runtime/wf/v1.0/processInstances/subProcInst?superActInstId=${superActInstId}&superProcInstId=${superProcInstId}`;\r\n      return this.httpSvc.get(url);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * è·åææåå«é¢è§£æçæµç¨å®ä¾ä¿¡æ¯\r\n   */\r\n  getForecastProcessByProcInstId(procInstId: string): Observable<any> {\r\n    const url = `/api/runtime/wf/v1.0/processInstances/${procInstId}/forecastProcess`;\r\n    return this.httpSvc.get(url);\r\n  }\r\n\r\n  /**\r\n   * è·åæµç¨é¢æµæ°æ®\r\n   */\r\n  getForecastProcessByPayload(payload: any) {\r\n    const url = '/api/runtime/wf/v1.0/processInstances/forecastProcess';\r\n    return this.httpSvc.post(url, payload);\r\n  }\r\n\r\n  getCompleteProcessInfoByProcInstId(procInstId: string): Observable<any> {\r\n    const url = `/api/runtime/wf/v1.0/processInstances/${procInstId}/flowChartInfo`;\r\n    return this.httpSvc.get(url);\r\n  }\r\n\r\n  /**\r\n   * åºäºæµç¨å®ä¾Idè·åæææ´»å¨å®ä¾\r\n   * @param procInstId procInstId\r\n   */\r\n  getAllActiInstsbyProcInstId(procInstId: string): Observable<any> {\r\n    const url = `/api/runtime/wf/v1.0/processInstances/${procInstId}/activityInstanceSlims`;\r\n    return this.httpSvc.get(url);\r\n  }\r\n\r\n  /**\r\n   * åºäºæµç¨å®ä¾IDè·åææçæµè½¬å®ä¾\r\n   * @param procInstId procInstId\r\n   */\r\n  getTransitionInstanceSlimsByProcInstId(procInstId: string): Observable<any> {\r\n    const url = `/api/runtime/wf/v1.0/processInstances/${procInstId}/transitionInstanceSlims`;\r\n    return this.httpSvc.get(url);\r\n  }\r\n\r\n  getFormInfoByProcInstId(procInstId: string): Observable<any> {\r\n    const url = `/api/runtime/wf/v1.0/processInstances/${procInstId}/formInfo`;\r\n    return this.httpSvc.get(url);\r\n  }\r\n\r\n  getFormInfoByActInstId(procInstId: string, actInstId: string): Observable<any> {\r\n    let url = `/api/runtime/wf/v1.0/processInstances/${procInstId}/formInfo`;\r\n    if (actInstId) {\r\n      url += `?actInstId=${actInstId}`;\r\n    }\r\n    return this.httpSvc.get(url);\r\n  }\r\n\r\n  /**\r\n   * è·åå®¡æ¹æ¥å¿ä¿¡æ¯\r\n   * @param ProcInstId ProcInstId\r\n   * æ°æ¹é çæ¥å£\r\n   */\r\n  getWorkItemLogs(procInstId: string, activityDefinitionId?: string): Observable<any> {\r\n    const logUrl = activityDefinitionId ?\r\n      `/api/runtime/wf/v1.0/processInstances/${procInstId}/logs?activityDefinitionId=${activityDefinitionId}` :\r\n      `/api/runtime/wf/v1.0/processInstances/${procInstId}/logs`;\r\n    return this.httpSvc.get(logUrl);\r\n  }\r\n\r\n  getI18nValue(name: string) {\r\n    if (!name) { return ''; }\r\n    const defaultLang = localStorage.getItem('languageCode');\r\n    const langData = defaultLang ? translate[defaultLang] : translate['zh-CHS'];\r\n    let resultVal = '';\r\n    if (name.indexOf('.') === -1) {\r\n      resultVal = langData[name];\r\n    } else {\r\n      resultVal = name.split('.').reduce((obj, key) => {\r\n        if (obj) {\r\n          return obj[key];\r\n        } else {\r\n          return null;\r\n        }\r\n      }, langData);\r\n    }\r\n    return resultVal;\r\n  }\r\n\r\n  getProcessInstanceById(processId: string): Observable<any> {\r\n    const url = `/api/runtime/wf/v1.0/processInstances/${processId}`;\r\n    return this.httpSvc.get(url);\r\n  }\r\n\r\n  getProcInstIdByDataId(dataId: string): Observable<any> {\r\n    const url = `/api/runtime/wf/v1.0/processInstances/procInstId?bizInstId=${dataId}`;\r\n    return this.httpSvc.get(url);\r\n  }\r\n\r\n  retryAifCreation(procInstId: string, actInstId: string, bizInstId: string) {\r\n    return this.httpSvc.post(\"/api/runtime/wf/v1.0/aifactivityinstance/retry\", actInstId);\r\n  }\r\n}\r\n","import { Injectable, Injector, ComponentFactoryResolver } from '@angular/core';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { ModalOptions, BsModalService } from '@farris/ui-modal';\r\nimport { UIFlowchartComponent } from './task-flowchart/task-flowchart.component';\r\nimport { translate } from './services/i18n/index';\r\nimport { UiFlowchartService } from './services/ui-flowchart.service';\r\nimport { AppOptions, FrameworkService } from '@gsp-sys/rtf-common';\r\nimport { of } from 'rxjs';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { ForecastProcessPayload } from './entity/forecast-process-payload';\r\n\r\n\r\n@Injectable()\r\nexport class WFFlowchartService {\r\n\r\n    private flowchartService: UiFlowchartService;\r\n    private frameworkService: FrameworkService;\r\n\r\n    constructor(\r\n        private msgService: MessagerService,\r\n        private injector: Injector,\r\n        private resolver: ComponentFactoryResolver,\r\n        private modalService: BsModalService,\r\n    ) {\r\n        this.flowchartService = this.injector.get(UiFlowchartService);\r\n        this.frameworkService = this.injector.get(FrameworkService);\r\n    }\r\n\r\n    viewProcess(payload: ForecastProcessPayload) {\r\n        if (!payload || !payload.dataId) {\r\n            this.msgService.warning(this.getI18nValue('static.flowchart.noDataId'));\r\n            return;\r\n        }\r\n        if (!payload || !payload.bizDefKey) {\r\n            this.msgService.warning(this.getI18nValue('static.flowchart.noBizDefKey'));\r\n            return;\r\n        }\r\n        const parameters = new Map<string, any>();\r\n        parameters.set('dataId', payload.dataId);\r\n        parameters.set('bizDefKey', payload.bizDefKey);\r\n        if (payload.startMode) {\r\n            parameters.set('startMode', payload.startMode);\r\n        }\r\n        if (payload.startUserId) {\r\n            parameters.set('startUserId', payload.startUserId);\r\n        }\r\n        parameters.set('withTitle', true);\r\n        const options: AppOptions = {\r\n            appType: 'menu',\r\n            funcId: 'WFViewFlowChart',\r\n            appId: '',\r\n            appEntrance: '',\r\n            tabId: payload.dataId,\r\n            isNewTab: true,\r\n            queryStringParams: parameters\r\n        };\r\n        this.frameworkService.openMenu(options);\r\n    }\r\n\r\n    /**\r\n     * æ¥çæµç¨ï¼tabé¡µä¸­æå¼ï¼\r\n     * @param procInstId æµç¨å®ä¾ID\r\n     */\r\n    viewFlowChart(procInstId: string) {\r\n        if (!procInstId) {\r\n            this.msgService.warning(this.getI18nValue('static.flowchart.processNotFound'));\r\n            return;\r\n        }\r\n        const parameters = new Map<string, any>();\r\n        parameters.set('processId', procInstId);\r\n        parameters.set('withTitle', true);\r\n        const options: AppOptions = {\r\n            appType: 'menu',\r\n            funcId: 'WFViewFlowChart',\r\n            appId: '',\r\n            appEntrance: '',\r\n            tabId: new Date().getTime().toString(),\r\n            isNewTab: true,\r\n            queryStringParams: parameters\r\n        };\r\n        this.frameworkService.openMenu(options);\r\n    }\r\n\r\n    viewFlowChartByDataId(dataId: string) {\r\n        if (!dataId) {\r\n            this.msgService.warning(this.getI18nValue('static.flowchart.dataIdIsNull'));\r\n            return;\r\n        }\r\n        const parameters = new Map<string, any>();\r\n        parameters.set('dataId', dataId);\r\n        parameters.set('withTitle', true);\r\n        const options: AppOptions = {\r\n            appType: 'menu',\r\n            funcId: 'WFViewFlowChart',\r\n            appId: '',\r\n            appEntrance: '',\r\n            tabId: new Date().getTime().toString(),\r\n            isNewTab: true,\r\n            queryStringParams: parameters\r\n        };\r\n        this.frameworkService.openMenu(options);\r\n    }\r\n\r\n    /**\r\n     * æ¥çæµç¨ï¼å¼¹æ¡ä¸­æå¼ï¼\r\n     * @param procInstId æµç¨å®ä¾ID\r\n     */\r\n    viewFlowChartByDialog(procInstId: string, mode?: string) {\r\n        if (!procInstId) {\r\n            this.msgService.warning(this.getI18nValue('static.flowchart.processNotFound'));\r\n            return;\r\n        }\r\n        let func;\r\n        if (UIFlowchartComponent.func) {\r\n            func = UIFlowchartComponent.func;\r\n        }\r\n        const modalConfig: ModalOptions = {\r\n            title: this.getI18nValue('static.flowchart.title'),\r\n            width: 1200,\r\n            height: 530,\r\n            showButtons: false,\r\n            beforeClose: (modalRef: any) => {\r\n                if (UIFlowchartComponent.func) {\r\n                    window.removeEventListener('message', UIFlowchartComponent.func, false);\r\n                }\r\n                if (func) {\r\n                    window.addEventListener('message', func, false);\r\n                    UIFlowchartComponent.func = func;\r\n                }\r\n                return of(true);\r\n            }\r\n        };\r\n        const compFactory = this.resolver.resolveComponentFactory(UIFlowchartComponent);\r\n        const inj = Injector.create({\r\n            providers: [\r\n                {\r\n                    provide: UiFlowchartService, useFactory: (httpSvc) => {\r\n                        return new UiFlowchartService(httpSvc);\r\n                    },\r\n                    deps: [\r\n                        HttpService\r\n                    ]\r\n                }], parent: this.injector\r\n        });\r\n        const compRef = compFactory.create(inj);\r\n        compRef.instance.ProcInstId = procInstId;\r\n        if (mode) {\r\n            compRef.instance.mode = mode;\r\n        }\r\n        compRef.instance.fill();\r\n        this.flowchartService.getProcessInstanceById(procInstId).subscribe(re => {\r\n            modalConfig.title = re.name + '-v' + re.version + '.0';\r\n            const dialog = this.modalService.show(compRef, modalConfig);\r\n        })\r\n    }\r\n\r\n    private getI18nValue(name: string) {\r\n        if (!name) { return ''; }\r\n        var defaultLang = localStorage.getItem('languageCode');\r\n        var langData = defaultLang ? translate[defaultLang] : translate['zh-CHS'];\r\n        let resultVal = '';\r\n        if (name.indexOf('.') === -1) {\r\n            resultVal = langData[name];\r\n        } else {\r\n            resultVal = name.split('.').reduce((obj, key) => {\r\n                if (obj) {\r\n                    return obj[key];\r\n                } else {\r\n                    return null;\r\n                }\r\n            }, langData);\r\n        }\r\n        return resultVal;\r\n    }\r\n}\r\n","import {\r\n  Component, OnInit, ViewChild, ElementRef, Input, Output,\r\n  EventEmitter, HostBinding, ChangeDetectorRef, Optional, Injector\r\n} from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { forkJoin } from 'rxjs';\r\nimport { UiFlowchartService } from '../services/ui-flowchart.service';\r\nimport { WFFlowchartService } from '../wf-flowchart.service';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { AppOptions, FrameworkService } from '@gsp-sys/rtf-common';\r\n\r\n@Component({\r\n  selector: 'wf-flowchart',\r\n  templateUrl: './task-flowchart.component.html',\r\n  styleUrls: ['./task-flowchart.component.css']\r\n})\r\n\r\nexport class UIFlowchartComponent implements OnInit {\r\n\r\n  static func: any = null; // æ¶æ¯çå¬å¤çæ¹æ³\r\n  @HostBinding('class') cls = 'd-flex flex-fill h-100';\r\n  @ViewChild('iframe') iframe: ElementRef;\r\n  @Output() modalHide = new EventEmitter<boolean>();\r\n  procInstId: string;//æµç¨å®ä¾id\r\n  dataId: string;//è¡¨åid\r\n  actDefId: string;//èç¹å®ä¹id\r\n  ifForecast: string;//æ¯å¦é¢æµ\r\n  type: any; //type = 'process'æ¥çæµç¨æ¥å¿ï¼type = 'activity'ï¼æ¥çèç¹æ¥å¿\r\n  srcUrl: any;\r\n  content: string; // bpmnModel\r\n  actInstList: any[]; // æ´»å¨å®ä¾List\r\n  transInsList: any[];  // æµè½¬å®ä¾\r\n  processInstance: any;\r\n  fcHtml = window.document.location.origin + '/platform/runtime/wf/web/designer/flowchart.html';\r\n\r\n  @Input()\r\n  theme = 'viewFlowChart';\r\n\r\n  @Input()\r\n  processForecastPayload: any;\r\n\r\n  private _mode = 'complete';\r\n\r\n  @Input()\r\n  set mode(v: string) {\r\n    this._mode = v;\r\n    if (this._mode === 'simulation') {\r\n      this.ifForecast = 'true';\r\n      this.modeButton = this.service.getI18nValue('static.flowchart.complete');\r\n    } else if (this._mode === 'complete') {\r\n      this.modeButton = this.service.getI18nValue('static.flowchart.simulation');\r\n    }\r\n  }\r\n  get mode() {\r\n    return this._mode;\r\n  }\r\n\r\n  modeButton = this.service.getI18nValue('static.flowchart.simulation');\r\n  typeList = [{\r\n    value: 'complete', text: this.service.getI18nValue('static.flowchart.complete')\r\n  },\r\n  {\r\n    value: 'simulation', text: this.service.getI18nValue('static.flowchart.simulation')\r\n  }];\r\n  private message: MessagerService;\r\n  private frameworkSvc: FrameworkService;\r\n\r\n  @Input()\r\n  set ProcInstId(procInstId: string) {\r\n    if (procInstId) {\r\n      this.procInstId = procInstId;\r\n    }\r\n  }\r\n\r\n  @Input()\r\n  set DataId(dataId: string) {\r\n    if (dataId) {\r\n      this.dataId = dataId;\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    private sanitizer: DomSanitizer,\r\n    private service: UiFlowchartService,\r\n    private changeDetector: ChangeDetectorRef,\r\n    private injector: Injector,\r\n    @Optional() private chartService: WFFlowchartService,\r\n  ) {\r\n    this.message = this.injector.get(MessagerService);\r\n    this.frameworkSvc = this.injector.get(FrameworkService);\r\n    this.srcUrl = this.sanitizer.bypassSecurityTrustResourceUrl(this.fcHtml);\r\n    if (UIFlowchartComponent.func) {\r\n      window.removeEventListener('message', UIFlowchartComponent.func, false);\r\n    }\r\n    this.addMessageListener();\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  private addMessageListener() {\r\n    window.addEventListener('message', this.eventHandler, false);\r\n    UIFlowchartComponent.func = this.eventHandler;\r\n  }\r\n\r\n  // çå¬äºä»¶å¤ç\r\n  eventHandler = (event) => {\r\n    const origin = event.origin;\r\n    const message = event.data;\r\n    if (this.fcHtml.search(origin) > -1) {\r\n      switch (message.action) {\r\n        case 'load':\r\n          this.viewFlowChart();\r\n          break;\r\n        case 'viewLogs':\r\n          this.viewLogs(message.data);\r\n          break;\r\n        case 'viewParent':\r\n          this.viewParent(message.data.superProcInstId);\r\n          break;\r\n        case 'viewChild':\r\n          this.viewChild(message.data.superActInstId, message.data.superProcInstId);\r\n          break;\r\n        case 'viewForm':\r\n          this.viewForm(message.data.procInstId, message.data.actInstId, message.data.bizInstId);\r\n          break;\r\n        case 'retryAifCreation':\r\n          this.retryAifCreation(message.data.procInstId, message.data.actInstId, message.data.bizInstId);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  private viewFlowChart() {\r\n    if (this.theme === 'viewFlowChart') {\r\n      this.viewFlowChartByProcInstId();\r\n    } else {\r\n      this.processForecast();\r\n    }\r\n  }\r\n\r\n  private viewParent(superProcInstId: string) {\r\n    // this.procInstId = superProcInstId;\r\n    // this.viewFlowChartByProcInstId();\r\n  }\r\n\r\n  private viewChild(superActInstId: string, superProcInstId: string) {\r\n    this.service.getSubProcessInstance(superActInstId, superProcInstId)\r\n      .subscribe(re => {\r\n        if (this.chartService) {\r\n          this.chartService.viewFlowChartByDialog(re.id, this.mode);\r\n        } else {\r\n          throw Error('è¯·åçº§æ¥çæµç¨å¬å±åå®ç°èæ¥å­æµç¨å¾åè½');\r\n        }\r\n      });\r\n  }\r\n\r\n  modeSwitch() {\r\n    if (this.mode === 'complete') {\r\n      this.mode = 'simulation';\r\n      this.ifForecast = 'true';\r\n      this.modeButton = this.service.getI18nValue('static.flowchart.complete');\r\n      this.service.getForecastProcessByProcInstId(this.procInstId).subscribe(r => {\r\n        this.actInstList = r.activityInstanceSlims;\r\n        this.transInsList = r.transitionInstanceSlims;\r\n        this.postMessage('modeSwitch', {\r\n          mode: 'simulation',\r\n          actiInstList: r.activityInstanceSlims,\r\n          transInsList: r.transitionInstanceSlims\r\n        });\r\n      });\r\n    } else {\r\n      this.mode = 'complete';\r\n      this.ifForecast = 'false';\r\n      this.modeButton = this.service.getI18nValue('static.flowchart.simulation');\r\n      this.service.getCompleteProcessInfoByProcInstId(this.procInstId).subscribe(r => {\r\n        this.actInstList = r.activityInstanceSlims;\r\n        this.transInsList = r.transitionInstanceSlims;\r\n        this.postMessage('modeSwitch', {\r\n          mode: 'complete',\r\n          actiInstList: r.activityInstanceSlims,\r\n          transInsList: r.transitionInstanceSlims\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  private viewLogs(data: any) {\r\n    this.type = data.type;\r\n    this.actDefId = data.actiDefId;\r\n  }\r\n\r\n  private viewFlowChartByProcInstId() {\r\n    this.content = '';\r\n    if (this.procInstId) {\r\n      if (this.mode === 'complete') {\r\n        forkJoin(\r\n          this.service.getProcInstanceById(this.procInstId),\r\n          this.service.getBpmnModelbyProcInstId(this.procInstId),\r\n          this.service.getCompleteProcessInfoByProcInstId(this.procInstId))\r\n          .subscribe((data: any[]) => {\r\n            this.processInstance = data[0];\r\n            this.content = JSON.stringify(data[1]);\r\n            this.actInstList = data[2].activityInstanceSlims;\r\n            this.transInsList = data[2].transitionInstanceSlims;\r\n            this.loadFlowChart();\r\n          });\r\n      } else {\r\n        forkJoin(\r\n          this.service.getProcInstanceById(this.procInstId),\r\n          this.service.getBpmnModelbyProcInstId(this.procInstId),\r\n          this.service.getForecastProcessByProcInstId(this.procInstId))\r\n          .subscribe((data: any[]) => {\r\n            this.processInstance = data[0];\r\n            this.content = JSON.stringify(data[1]);\r\n            this.actInstList = data[2].activityInstanceSlims;\r\n            this.transInsList = data[2].transitionInstanceSlims;\r\n            this.loadFlowChart();\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  private processForecast() {\r\n    this.content = '';\r\n    this.mode = 'simulation';\r\n    // this.ifForecast = true;\r\n    if (this.processForecastPayload.processDefinitionId && this.processForecastPayload.dataId) {\r\n      forkJoin(\r\n        this.service.getBpmnModelbyProcDefId(this.processForecastPayload.processDefinitionId),\r\n        this.service.getForecastProcessByPayload(this.processForecastPayload))\r\n        .subscribe((data: any[]) => {\r\n          this.content = JSON.stringify(data[0]);\r\n          this.actInstList = data[1].activityInstanceSlims;\r\n          this.transInsList = data[1].transitionInstanceSlims;\r\n          this.loadFlowChart();\r\n        });\r\n    }\r\n  }\r\n\r\n  private viewForm(procInstId: string, actInstId: string, bizInstId: string) {\r\n    if (procInstId) {\r\n      this.service.getFormInfoByActInstId(procInstId, actInstId).subscribe((re: any) => {\r\n        const formInfo = re;\r\n        if (!formInfo || !formInfo.appId) {\r\n          if (this.message) {\r\n            this.message.info('æ¾ä¸å°åæ®ï¼è¯·èç³»ç®¡çåæ¥çåå ï¼');\r\n          }\r\n          return;\r\n        }\r\n        const options: AppOptions = {\r\n          appType: 'menu',\r\n          funcId: formInfo.appId,\r\n          appId: '',\r\n          appEntrance: '',\r\n          tabId: bizInstId,\r\n          isNewTab: true\r\n        };\r\n        // ä¼ å·¥ä½æµä¸ä¸æåæ°\r\n        const parameters = new Map<string, any>();\r\n        parameters.set('procInstId', procInstId);\r\n        parameters.set('actInstId', actInstId);\r\n        formInfo.parameters.forEach((item: any) =>\r\n          parameters.set(item.code, item.value)\r\n        );\r\n        options.queryStringParams = parameters;\r\n        if (this.frameworkSvc) {\r\n          this.frameworkSvc.openMenu(options);\r\n        } else {\r\n          throw Error('æ¡æ¶æå¡ä¸å­å¨ï¼æ æ³èæ¥ï¼');\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private retryAifCreation(procInstId: string, actInstId: string, bizInstId: string) {\r\n    if (procInstId) {\r\n      this.service.retryAifCreation(procInstId, actInstId, bizInstId).subscribe(\r\n        (re: any) => {\r\n          this.viewFlowChart();\r\n        },\r\n        (err) => {\r\n          setTimeout(() => {\r\n            //todo ç¡®å®å¼å¸¸ç»æ, ç®åéç¨å¼å®¹åå¼æ¹å¼\r\n            this.message.error(err.error == null ? err.message : (err.error.Message || err.error.message || err.message));\r\n          }, 300);\r\n          throw err;\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  public loadFlowChart() {\r\n    if (this.content) {\r\n      this.postMessage('load', {\r\n        processInstance: this.processInstance,\r\n        content: this.content,\r\n        actiInstList: this.actInstList,\r\n        transInsList: this.transInsList,\r\n        mode: this.mode\r\n      });\r\n    }\r\n  }\r\n\r\n  postMessage(action: string, data: any) {\r\n    const message = { action, data };\r\n    this.iframe.nativeElement.contentWindow.postMessage(message, this.fcHtml);\r\n  }\r\n\r\n  fill() {\r\n    this.cls = 'd-flex flex-fill h-100 f-utils-absolute-all';\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { UiFlowchartService } from './ui-flowchart.service'\r\n\r\n@Pipe({ name: 'translate' })\r\nexport class TranslatePipe implements PipeTransform {\r\n\r\n    constructor(\r\n        private service: UiFlowchartService\r\n    ) { }\r\n\r\n    transform(name: any, defaultVal = ''): any {\r\n        const r = this.service.getI18nValue(name);\r\n        return r ? r : defaultVal;\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { UIFlowchartComponent } from './task-flowchart/task-flowchart.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { UiFlowchartService } from './services/ui-flowchart.service';\r\nimport { WFFlowchartService } from './wf-flowchart.service';\r\nimport { MessagerModule } from '@farris/ui-messager';\r\nimport { FarrisDialogModule } from '@farris/ui-dialog';\r\nimport { TranslatePipe } from './services/translate.pipe';\r\nimport { LayoutModule } from '@farris/ui-layout';\r\nimport { FarrisSectionModule } from '@farris/ui-section';\r\nimport { WfApprovalLogsModule } from '@gsp-wf/wf-approval-logs';\r\nimport { ComboListModule } from '@farris/ui-combo-list';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { FDropdownDirectiveTypeModule } from '@farris/ui-dropdown';\r\nimport { DatagridModule } from '@farris/ui-datagrid';\r\nimport { NotifyModule } from '@farris/ui-notify';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    UIFlowchartComponent,\r\n    TranslatePipe],\r\n  imports: [\r\n    LayoutModule,\r\n    CommonModule,\r\n    FarrisDialogModule,\r\n    MessagerModule.forRoot({\r\n      width: 500\r\n    }),\r\n    FarrisSectionModule,\r\n    WfApprovalLogsModule,\r\n    ComboListModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    FDropdownDirectiveTypeModule,\r\n    DatagridModule,\r\n    NotifyModule\r\n  ],\r\n  exports: [UIFlowchartComponent],\r\n  providers: [\r\n    HttpService,\r\n    UiFlowchartService,\r\n    WFFlowchartService,\r\n  ],\r\n  entryComponents: [\r\n    UIFlowchartComponent\r\n  ]\r\n})\r\nexport class UiFlowchartModule { }\r\n","export class ForecastProcessPayload {\r\n\r\n    bizDefKey: string;\r\n\r\n    dataId: string;\r\n\r\n    startMode: string;\r\n\r\n    startUserId: string;\r\n}\r\n"],"names":["map","from","Injectable","HttpService","FrameworkService","of","Injector","MessagerService","ComponentFactoryResolver","BsModalService","EventEmitter","forkJoin","Component","DomSanitizer","ChangeDetectorRef","Optional","HostBinding","ViewChild","Output","Input","Pipe","NgModule","LayoutModule","CommonModule","FarrisDialogModule","MessagerModule","FarrisSectionModule","WfApprovalLogsModule","ComboListModule","ReactiveFormsModule","FormsModule","FDropdownDirectiveTypeModule","DatagridModule","NotifyModule"],"mappings":"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"}
