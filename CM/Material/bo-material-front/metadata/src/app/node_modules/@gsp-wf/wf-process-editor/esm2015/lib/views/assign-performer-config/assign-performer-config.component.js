/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Output, Input, ViewChild, EventEmitter, TemplateRef, HostBinding } from '@angular/core';
import { FormGroup, FormControl } from '@angular/forms';
import { AssignPerformerConfig } from './assign-performer-config.entity';
import { OrganizationPotentialOwner, ActionScope } from '../organization-potential-owner/actionOrganizationScope';
export class AssignPerformerConfigComponent {
    constructor() {
        this.cls = 'farris-main-area flex-column';
        this.closeModal = new EventEmitter();
        this.submitModal = new EventEmitter();
        this.allowGlobalAssign = false;
        this.operatorCollection = [
            { text: '当前办理人', value: 'currentUser' },
            { text: '流程发起人', value: 'procInstCreator' }
        ];
        this.operator = 'currentUser';
        this.organizationLevelCollection = [
            { value: 'GLOBAL', text: '全员', orgId: 'global' },
            { value: 'UNIT', text: '本单位', orgId: 'currentUnit' },
            { value: 'DEPARTMENT', text: '本部门', orgId: 'currentDepartment' }
        ];
        this.organizationLevel = this.organizationLevelCollection[0].value;
        this.includeChildren = false;
        this.modalConfig = {
            title: '指派规则',
            width: 450,
            height: 470,
            showButtons: true
        };
    }
    /**
     * @param {?} v
     * @return {?}
     */
    set value(v) {
        this.assingPerformerConfigForm = new FormGroup({
            multiSelect: new FormControl(v.multiSelect),
            necessary: new FormControl(v.necessary)
        });
        this.operator = v.operator || 'currentUser';
        this.allowGlobalAssign = v.allowGlobalAssign || false;
        if (v.assignScope) {
            this.organizationLevel = v.assignScope.organizationLevel;
            this.includeChildren = v.assignScope.includeChildren;
        }
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @return {?}
     */
    clickOK() {
        this.config = {
            operator: this.operator,
            multiSelect: this.assingPerformerConfigForm.get('multiSelect').value,
            necessary: this.assingPerformerConfigForm.get('necessary').value,
            allowGlobalAssign: this.allowGlobalAssign
        };
        if (this.allowGlobalAssign && this.organizationLevel !== this.organizationLevelCollection[0].value) {
            /** @type {?} */
            const potential = new OrganizationPotentialOwner();
            potential.actionScope = ActionScope.AssignUser;
            potential.organizationLevel = (/** @type {?} */ (this.organizationLevel));
            potential.organizationId = this.organizationLevelCollection.find((/**
             * @param {?} o
             * @return {?}
             */
            o => o.value === this.organizationLevel)).orgId;
            potential.organizationName = this.organizationLevelCollection.find((/**
             * @param {?} o
             * @return {?}
             */
            o => o.value === this.organizationLevel)).text;
            potential.includeChildren = this.includeChildren;
            potential.tag = 'variable';
            this.config.assignScope = potential;
        }
        /** @type {?} */
        const object = { value: this.config, parameters: null };
        this.submitModal.emit(object);
    }
    /**
     * @return {?}
     */
    clickCancel() {
        this.closeModal.emit();
    }
    /**
     * @param {?} event
     * @return {?}
     */
    valueChange(event) {
        switch (event.value) {
            case this.organizationLevelCollection[0].value:
                this.includeChildren = false;
                break;
            case this.organizationLevelCollection[1].value:
                this.includeChildren = true;
                break;
            case this.organizationLevelCollection[2].value:
                this.includeChildren = false;
                break;
        }
    }
}
AssignPerformerConfigComponent.decorators = [
    { type: Component, args: [{
                selector: 'app-assign-performer-config',
                template: "<div class=\"f-page\">\r\n  <div class=\"f-utils-fill-flex-column farris-split-section m-2 h-100\">\r\n    <section class=\"f-utils-fill-flex-column h-100\">\r\n      <div class=\"f-section-header pt-2 mx-2\">\r\n        <div class=\"f-title\">\r\n          <h4 class=\"f-title-text\">\u6307\u6D3E\u89C4\u5219\u9009\u9879</h4>\r\n        </div>\r\n      </div>\r\n      <div class=\"f-utils-fill-flex-column h-100\">\r\n        <form class=\"h-100\" [formGroup]=\"assingPerformerConfigForm\">\r\n          <div class=\"f-utils-fill-flex-column justify-content-center h-100 pb-4\">\r\n            <div class=\"my-2 mx-5\">\r\n              <div class=\"farris-group-wrap\">\r\n                <div class=\"form-group\">\r\n                  <label class=\"col-form-label\">\r\n                    <span class=\"farris-label-text\">\u6307\u6D3E\u64CD\u4F5C\u4EBA</span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap mt-1\" style=\"width: 300px;\">\r\n                    <farris-combo-list [(ngModel)]=\"operator\" name=\"operator\" [ngModelOptions]=\"{standalone: true}\"\r\n                      [idField]=\"'value'\" [textField]=\"'text'\" [valueField]=\"'value'\" [data]=\"operatorCollection\"\r\n                      [panelHeight]=\"60\">\r\n                    </farris-combo-list>\r\n                    <div class=\"farris-feedback valid-feedback\"></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"my-2 mx-5\">\r\n              <div class=\"farris-input-wrap\">\r\n                <div class=\"custom-control custom-checkbox\">\r\n                  <input class=\"custom-control-input\" type=\"checkbox\" id=\"multiSelect\" formControlName=\"multiSelect\"\r\n                    [readOnly]=\"false\" />\r\n                  <label class=\"custom-control-label\" for=\"multiSelect\">\u5141\u8BB8\u9009\u62E9\u591A\u4E2A\u5F85\u9009\u7528\u6237</label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"my-2 mx-5\">\r\n              <div class=\"farris-input-wrap\">\r\n                <div class=\"custom-control custom-checkbox\">\r\n                  <input class=\"custom-control-input\" type=\"checkbox\" id=\"necessary\" formControlName=\"necessary\" [readOnly]=\"false\" />\r\n                  <label class=\"custom-control-label\" for=\"necessary\">\u53EA\u6709\u4E00\u4E2A\u5F85\u9009\u7528\u6237\u65F6\uFF0C\u4ECD\u9700\u624B\u5DE5\u9009\u62E9</label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"mx-2 mt-3\">\r\n              <div class=\"title-content\">\r\n                <h4 class=\"title-text\">\u8BBE\u5B9A\u7684\u53C2\u4E0E\u8005\u8303\u56F4\u5916\u6307\u6D3E</h4><span class=\"title-line\"></span>\r\n              </div>\r\n            </div>\r\n            <div class=\"farris-form form-inline farris-form-inline my-1\">\r\n              <div class=\"col-12 mt-3\">\r\n                <div class=\"farris-group-wrap\">\r\n                  <div class=\"form-group farris-form-group\">\r\n                    <label class=\"col-form-label\">\r\n                      <span class=\"farris-label-text\">\u662F\u5426\u542F\u7528</span>\r\n                    </label>\r\n                    <div class=\"farris-input-wrap ml-1\">\r\n                      <farris-switch [(ngModel)]=\"allowGlobalAssign\" [ngModelOptions]=\"{standalone: true}\" name=\"allowGlobalAssign\"></farris-switch>\r\n                      <div class=\"farris-feedback valid-feedback\"></div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"d-flex flex-row\">\r\n                <div class=\"col-8 my-2\">\r\n                  <div class=\"farris-group-wrap\">\r\n                    <div class=\"form-group farris-form-group\">\r\n                      <label class=\"col-form-label\">\r\n                        <span class=\"farris-label-text\">\u7EC4\u7EC7\u8303\u56F4</span>\r\n                      </label>\r\n                      <div class=\"farris-input-wrap ml-1\">\r\n                        <farris-combo-list [panelHeight]=\"100\" [(ngModel)]=\"organizationLevel\" [ngModelOptions]=\"{standalone: true}\"\r\n                          name=\"organizationLevel\" [idField]=\"'value'\" [textField]=\"'text'\" [valueField]=\"'value'\"\r\n                          [data]=\"organizationLevelCollection\" [readonly]=\"allowGlobalAssign===false\" (valueChange)=\"valueChange($event)\">\r\n                        </farris-combo-list>\r\n                        <div class=\"farris-feedback valid-feedback\"></div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-4 my-2\">\r\n                  <div class=\"farris-input-wrap pt-1\">\r\n                    <div class=\"custom-control custom-checkbox mr-3\">\r\n                      <input class=\"custom-control-input\" type=\"checkbox\" [(ngModel)]=\"includeChildren\" [ngModelOptions]=\"{standalone: true}\"\r\n                        name=\"includeChildren\" id=\"includeChildren\" [disabled]=\"!(allowGlobalAssign===true && organizationLevel === organizationLevelCollection[2].value)\" />\r\n                      <label class=\"custom-control-label\" for=\"includeChildren\">\u5305\u542B\u4E0B\u7EA7</label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </section>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #iconSelectFooter>\r\n  <button type=\"button\" class=\"btn btn-primary btn-sm px-3 mx-2\" (click)=\"clickOK()\">\u786E\u5B9A</button>\r\n  <button type=\"button\" class=\"btn btn-secondary btn-sm px-3 mx-2\" (click)=\"clickCancel()\">\u53D6\u6D88</button>\r\n</ng-template>\r\n\r\n",
                styles: [".title-content{color:#000;display:inline-flex;align-items:center;line-height:1.375rem;position:relative;overflow:hidden;padding:0 0 0 1rem;min-width:415px}.title-content ::before{content:'';width:.25rem;height:1.125rem;background:#59a1ff;border-radius:1px;position:absolute;top:50%;left:0;margin-top:-.5625rem}.title-text{font-size:1rem;line-height:1.375rem;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;margin-bottom:0;margin-right:10px}.title-line{flex-grow:1;border-bottom:1px dashed rgba(0,0,0,.1)}"]
            }] }
];
/** @nocollapse */
AssignPerformerConfigComponent.ctorParameters = () => [];
AssignPerformerConfigComponent.propDecorators = {
    cls: [{ type: HostBinding, args: ['class',] }],
    closeModal: [{ type: Output }],
    submitModal: [{ type: Output }],
    value: [{ type: Input }],
    modalFooter: [{ type: ViewChild, args: ['iconSelectFooter',] }]
};
if (false) {
    /** @type {?} */
    AssignPerformerConfigComponent.prototype.cls;
    /** @type {?} */
    AssignPerformerConfigComponent.prototype.closeModal;
    /** @type {?} */
    AssignPerformerConfigComponent.prototype.submitModal;
    /** @type {?} */
    AssignPerformerConfigComponent.prototype.assingPerformerConfigForm;
    /**
     * @type {?}
     * @private
     */
    AssignPerformerConfigComponent.prototype.config;
    /** @type {?} */
    AssignPerformerConfigComponent.prototype.modalFooter;
    /** @type {?} */
    AssignPerformerConfigComponent.prototype.allowGlobalAssign;
    /** @type {?} */
    AssignPerformerConfigComponent.prototype.operatorCollection;
    /** @type {?} */
    AssignPerformerConfigComponent.prototype.operator;
    /** @type {?} */
    AssignPerformerConfigComponent.prototype.organizationLevelCollection;
    /** @type {?} */
    AssignPerformerConfigComponent.prototype.organizationLevel;
    /** @type {?} */
    AssignPerformerConfigComponent.prototype.includeChildren;
    /** @type {?} */
    AssignPerformerConfigComponent.prototype.modalConfig;
}
export class AssignConfigConverter {
    constructor() { }
    /**
     * @param {?} data
     * @return {?}
     */
    convertTo(data) {
        return '（已设置）';
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXNzaWduLXBlcmZvcm1lci1jb25maWcuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzcC13Zi93Zi1wcm9jZXNzLWVkaXRvci8iLCJzb3VyY2VzIjpbImxpYi92aWV3cy9hc3NpZ24tcGVyZm9ybWVyLWNvbmZpZy9hc3NpZ24tcGVyZm9ybWVyLWNvbmZpZy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsTUFBTSxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLFdBQVcsRUFBRSxXQUFXLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFcEgsT0FBTyxFQUFFLFNBQVMsRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUN4RCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUN6RSxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsV0FBVyxFQUFxQixNQUFNLHlEQUF5RCxDQUFDO0FBT3JJLE1BQU0sT0FBTyw4QkFBOEI7SUE0Q3pDO1FBMUNBLFFBQUcsR0FBRyw4QkFBOEIsQ0FBQztRQUMzQixlQUFVLEdBQUcsSUFBSSxZQUFZLEVBQU8sQ0FBQztRQUNyQyxnQkFBVyxHQUFHLElBQUksWUFBWSxFQUFPLENBQUM7UUFvQmhELHNCQUFpQixHQUFHLEtBQUssQ0FBQztRQUUxQix1QkFBa0IsR0FBRztZQUNuQixFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFFLGFBQWEsRUFBRTtZQUN2QyxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFFLGlCQUFpQixFQUFFO1NBQUMsQ0FBQztRQUMvQyxhQUFRLEdBQUcsYUFBYSxDQUFDO1FBRXpCLGdDQUEyQixHQUFHO1lBQzVCLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxRQUFRLEVBQUU7WUFDaEQsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLGFBQWEsRUFBRTtZQUNwRCxFQUFFLEtBQUssRUFBRSxZQUFZLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsbUJBQW1CLEVBQUU7U0FBQyxDQUFDO1FBQ3BFLHNCQUFpQixHQUFHLElBQUksQ0FBQywyQkFBMkIsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7UUFDOUQsb0JBQWUsR0FBRyxLQUFLLENBQUM7UUFFeEIsZ0JBQVcsR0FBRztZQUNaLEtBQUssRUFBRSxNQUFNO1lBQ2IsS0FBSyxFQUFFLEdBQUc7WUFDVixNQUFNLEVBQUUsR0FBRztZQUNYLFdBQVcsRUFBRSxJQUFJO1NBQ2xCLENBQUM7SUFDYyxDQUFDOzs7OztJQXBDakIsSUFDSSxLQUFLLENBQUMsQ0FBd0I7UUFDaEMsSUFBSSxDQUFDLHlCQUF5QixHQUFHLElBQUksU0FBUyxDQUFDO1lBQzdDLFdBQVcsRUFBRSxJQUFJLFdBQVcsQ0FBQyxDQUFDLENBQUMsV0FBVyxDQUFDO1lBQzNDLFNBQVMsRUFBRSxJQUFJLFdBQVcsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDO1NBQ3hDLENBQUMsQ0FBQztRQUNILElBQUksQ0FBQyxRQUFRLEdBQUcsQ0FBQyxDQUFDLFFBQVEsSUFBSSxhQUFhLENBQUM7UUFDNUMsSUFBSSxDQUFDLGlCQUFpQixHQUFHLENBQUMsQ0FBQyxpQkFBaUIsSUFBSSxLQUFLLENBQUM7UUFDdEQsSUFBSSxDQUFDLENBQUMsV0FBVyxFQUFFO1lBQ2pCLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxDQUFDLENBQUMsV0FBVyxDQUFDLGlCQUFpQixDQUFDO1lBQ3pELElBQUksQ0FBQyxlQUFlLEdBQUcsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxlQUFlLENBQUM7U0FDdEQ7SUFDSCxDQUFDOzs7O0lBMEJELFFBQVE7SUFDUixDQUFDOzs7O0lBRUQsT0FBTztRQUNMLElBQUksQ0FBQyxNQUFNLEdBQUc7WUFDWixRQUFRLEVBQUUsSUFBSSxDQUFDLFFBQVE7WUFDdkIsV0FBVyxFQUFFLElBQUksQ0FBQyx5QkFBeUIsQ0FBQyxHQUFHLENBQUMsYUFBYSxDQUFDLENBQUMsS0FBSztZQUNwRSxTQUFTLEVBQUUsSUFBSSxDQUFDLHlCQUF5QixDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsQ0FBQyxLQUFLO1lBQ2hFLGlCQUFpQixFQUFFLElBQUksQ0FBQyxpQkFBaUI7U0FDMUMsQ0FBQztRQUNGLElBQUksSUFBSSxDQUFDLGlCQUFpQixJQUFJLElBQUksQ0FBQyxpQkFBaUIsS0FBSyxJQUFJLENBQUMsMkJBQTJCLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFOztrQkFDNUYsU0FBUyxHQUFHLElBQUksMEJBQTBCLEVBQUU7WUFDbEQsU0FBUyxDQUFDLFdBQVcsR0FBRyxXQUFXLENBQUMsVUFBVSxDQUFDO1lBQy9DLFNBQVMsQ0FBQyxpQkFBaUIsR0FBRyxtQkFBQSxJQUFJLENBQUMsaUJBQWlCLEVBQXFCLENBQUM7WUFDMUUsU0FBUyxDQUFDLGNBQWMsR0FBRyxJQUFJLENBQUMsMkJBQTJCLENBQUMsSUFBSTs7OztZQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEtBQUssS0FBSyxJQUFJLENBQUMsaUJBQWlCLEVBQUMsQ0FBQyxLQUFLLENBQUM7WUFDaEgsU0FBUyxDQUFDLGdCQUFnQixHQUFHLElBQUksQ0FBQywyQkFBMkIsQ0FBQyxJQUFJOzs7O1lBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsS0FBSyxLQUFLLElBQUksQ0FBQyxpQkFBaUIsRUFBQyxDQUFDLElBQUksQ0FBQztZQUNqSCxTQUFTLENBQUMsZUFBZSxHQUFHLElBQUksQ0FBQyxlQUFlLENBQUM7WUFDakQsU0FBUyxDQUFDLEdBQUcsR0FBRyxVQUFVLENBQUM7WUFDM0IsSUFBSSxDQUFDLE1BQU0sQ0FBQyxXQUFXLEdBQUcsU0FBUyxDQUFDO1NBQ3JDOztjQUNLLE1BQU0sR0FBRyxFQUFFLEtBQUssRUFBRSxJQUFJLENBQUMsTUFBTSxFQUFFLFVBQVUsRUFBRSxJQUFJLEVBQUU7UUFDdkQsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDaEMsQ0FBQzs7OztJQUVELFdBQVc7UUFDVCxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ3pCLENBQUM7Ozs7O0lBRUQsV0FBVyxDQUFDLEtBQVU7UUFDcEIsUUFBUSxLQUFLLENBQUMsS0FBSyxFQUFFO1lBQ25CLEtBQUssSUFBSSxDQUFDLDJCQUEyQixDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUs7Z0JBQzVDLElBQUksQ0FBQyxlQUFlLEdBQUcsS0FBSyxDQUFDO2dCQUM3QixNQUFNO1lBQ1IsS0FBSyxJQUFJLENBQUMsMkJBQTJCLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSztnQkFDNUMsSUFBSSxDQUFDLGVBQWUsR0FBRyxJQUFJLENBQUM7Z0JBQzVCLE1BQU07WUFDUixLQUFLLElBQUksQ0FBQywyQkFBMkIsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLO2dCQUM1QyxJQUFJLENBQUMsZUFBZSxHQUFHLEtBQUssQ0FBQztnQkFDN0IsTUFBTTtTQUNUO0lBQ0gsQ0FBQzs7O1lBM0ZGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsNkJBQTZCO2dCQUN2QywyNExBQXVEOzthQUV4RDs7Ozs7a0JBRUUsV0FBVyxTQUFDLE9BQU87eUJBRW5CLE1BQU07MEJBQ04sTUFBTTtvQkFJTixLQUFLOzBCQWNMLFNBQVMsU0FBQyxrQkFBa0I7Ozs7SUFyQjdCLDZDQUNxQzs7SUFDckMsb0RBQStDOztJQUMvQyxxREFBZ0Q7O0lBQ2hELG1FQUFxQzs7Ozs7SUFDckMsZ0RBQXNDOztJQWdCdEMscURBQTZEOztJQUU3RCwyREFBMEI7O0lBRTFCLDREQUUrQzs7SUFDL0Msa0RBQXlCOztJQUV6QixxRUFHb0U7O0lBQ3BFLDJEQUE4RDs7SUFDOUQseURBQXdCOztJQUV4QixxREFLRTs7QUE2Q0osTUFBTSxPQUFPLHFCQUFxQjtJQUNoQyxnQkFBZ0IsQ0FBQzs7Ozs7SUFFakIsU0FBUyxDQUFDLElBQUk7UUFDWixPQUFPLE9BQU8sQ0FBQztJQUNqQixDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgT3V0cHV0LCBJbnB1dCwgVmlld0NoaWxkLCBFdmVudEVtaXR0ZXIsIFRlbXBsYXRlUmVmLCBIb3N0QmluZGluZyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBUeXBlQ29udmVydGVyIH0gZnJvbSAnQGZhcnJpcy91aS1wcm9wZXJ0eS1wYW5lbCc7XHJcbmltcG9ydCB7IEZvcm1Hcm91cCwgRm9ybUNvbnRyb2wgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XHJcbmltcG9ydCB7IEFzc2lnblBlcmZvcm1lckNvbmZpZyB9IGZyb20gJy4vYXNzaWduLXBlcmZvcm1lci1jb25maWcuZW50aXR5JztcclxuaW1wb3J0IHsgT3JnYW5pemF0aW9uUG90ZW50aWFsT3duZXIsIEFjdGlvblNjb3BlLCBPcmdhbml6YXRpb25MZXZlbCB9IGZyb20gJy4uL29yZ2FuaXphdGlvbi1wb3RlbnRpYWwtb3duZXIvYWN0aW9uT3JnYW5pemF0aW9uU2NvcGUnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhcHAtYXNzaWduLXBlcmZvcm1lci1jb25maWcnLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9hc3NpZ24tcGVyZm9ybWVyLWNvbmZpZy5jb21wb25lbnQuaHRtbCcsXHJcbiAgc3R5bGVVcmxzOiBbJy4vYXNzaWduLXBlcmZvcm1lci1jb25maWcuY29tcG9uZW50LmNzcyddXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBBc3NpZ25QZXJmb3JtZXJDb25maWdDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG4gIEBIb3N0QmluZGluZygnY2xhc3MnKVxyXG4gIGNscyA9ICdmYXJyaXMtbWFpbi1hcmVhIGZsZXgtY29sdW1uJztcclxuICBAT3V0cHV0KCkgY2xvc2VNb2RhbCA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xyXG4gIEBPdXRwdXQoKSBzdWJtaXRNb2RhbCA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xyXG4gIGFzc2luZ1BlcmZvcm1lckNvbmZpZ0Zvcm06IEZvcm1Hcm91cDtcclxuICBwcml2YXRlIGNvbmZpZzogQXNzaWduUGVyZm9ybWVyQ29uZmlnO1xyXG5cclxuICBASW5wdXQoKVxyXG4gIHNldCB2YWx1ZSh2OiBBc3NpZ25QZXJmb3JtZXJDb25maWcpIHtcclxuICAgIHRoaXMuYXNzaW5nUGVyZm9ybWVyQ29uZmlnRm9ybSA9IG5ldyBGb3JtR3JvdXAoe1xyXG4gICAgICBtdWx0aVNlbGVjdDogbmV3IEZvcm1Db250cm9sKHYubXVsdGlTZWxlY3QpLFxyXG4gICAgICBuZWNlc3Nhcnk6IG5ldyBGb3JtQ29udHJvbCh2Lm5lY2Vzc2FyeSlcclxuICAgIH0pO1xyXG4gICAgdGhpcy5vcGVyYXRvciA9IHYub3BlcmF0b3IgfHwgJ2N1cnJlbnRVc2VyJztcclxuICAgIHRoaXMuYWxsb3dHbG9iYWxBc3NpZ24gPSB2LmFsbG93R2xvYmFsQXNzaWduIHx8IGZhbHNlO1xyXG4gICAgaWYgKHYuYXNzaWduU2NvcGUpIHtcclxuICAgICAgdGhpcy5vcmdhbml6YXRpb25MZXZlbCA9IHYuYXNzaWduU2NvcGUub3JnYW5pemF0aW9uTGV2ZWw7XHJcbiAgICAgIHRoaXMuaW5jbHVkZUNoaWxkcmVuID0gdi5hc3NpZ25TY29wZS5pbmNsdWRlQ2hpbGRyZW47XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBAVmlld0NoaWxkKCdpY29uU2VsZWN0Rm9vdGVyJykgbW9kYWxGb290ZXI6IFRlbXBsYXRlUmVmPGFueT47XHJcblxyXG4gIGFsbG93R2xvYmFsQXNzaWduID0gZmFsc2U7XHJcblxyXG4gIG9wZXJhdG9yQ29sbGVjdGlvbiA9IFtcclxuICAgIHsgdGV4dDogJ+W9k+WJjeWKnueQhuS6uicsIHZhbHVlOiAnY3VycmVudFVzZXInIH0sXHJcbiAgICB7IHRleHQ6ICfmtYHnqIvlj5HotbfkuronLCB2YWx1ZTogJ3Byb2NJbnN0Q3JlYXRvcicgfV07XHJcbiAgb3BlcmF0b3IgPSAnY3VycmVudFVzZXInO1xyXG5cclxuICBvcmdhbml6YXRpb25MZXZlbENvbGxlY3Rpb24gPSBbXHJcbiAgICB7IHZhbHVlOiAnR0xPQkFMJywgdGV4dDogJ+WFqOWRmCcsIG9yZ0lkOiAnZ2xvYmFsJyB9LFxyXG4gICAgeyB2YWx1ZTogJ1VOSVQnLCB0ZXh0OiAn5pys5Y2V5L2NJywgb3JnSWQ6ICdjdXJyZW50VW5pdCcgfSxcclxuICAgIHsgdmFsdWU6ICdERVBBUlRNRU5UJywgdGV4dDogJ+acrOmDqOmXqCcsIG9yZ0lkOiAnY3VycmVudERlcGFydG1lbnQnIH1dO1xyXG4gIG9yZ2FuaXphdGlvbkxldmVsID0gdGhpcy5vcmdhbml6YXRpb25MZXZlbENvbGxlY3Rpb25bMF0udmFsdWU7XHJcbiAgaW5jbHVkZUNoaWxkcmVuID0gZmFsc2U7XHJcblxyXG4gIG1vZGFsQ29uZmlnID0ge1xyXG4gICAgdGl0bGU6ICfmjIfmtL7op4TliJknLFxyXG4gICAgd2lkdGg6IDQ1MCxcclxuICAgIGhlaWdodDogNDcwLFxyXG4gICAgc2hvd0J1dHRvbnM6IHRydWVcclxuICB9O1xyXG4gIGNvbnN0cnVjdG9yKCkgeyB9XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gIH1cclxuXHJcbiAgY2xpY2tPSygpIHtcclxuICAgIHRoaXMuY29uZmlnID0ge1xyXG4gICAgICBvcGVyYXRvcjogdGhpcy5vcGVyYXRvcixcclxuICAgICAgbXVsdGlTZWxlY3Q6IHRoaXMuYXNzaW5nUGVyZm9ybWVyQ29uZmlnRm9ybS5nZXQoJ211bHRpU2VsZWN0JykudmFsdWUsXHJcbiAgICAgIG5lY2Vzc2FyeTogdGhpcy5hc3NpbmdQZXJmb3JtZXJDb25maWdGb3JtLmdldCgnbmVjZXNzYXJ5JykudmFsdWUsXHJcbiAgICAgIGFsbG93R2xvYmFsQXNzaWduOiB0aGlzLmFsbG93R2xvYmFsQXNzaWduXHJcbiAgICB9O1xyXG4gICAgaWYgKHRoaXMuYWxsb3dHbG9iYWxBc3NpZ24gJiYgdGhpcy5vcmdhbml6YXRpb25MZXZlbCAhPT0gdGhpcy5vcmdhbml6YXRpb25MZXZlbENvbGxlY3Rpb25bMF0udmFsdWUpIHtcclxuICAgICAgY29uc3QgcG90ZW50aWFsID0gbmV3IE9yZ2FuaXphdGlvblBvdGVudGlhbE93bmVyKCk7XHJcbiAgICAgIHBvdGVudGlhbC5hY3Rpb25TY29wZSA9IEFjdGlvblNjb3BlLkFzc2lnblVzZXI7XHJcbiAgICAgIHBvdGVudGlhbC5vcmdhbml6YXRpb25MZXZlbCA9IHRoaXMub3JnYW5pemF0aW9uTGV2ZWwgYXMgT3JnYW5pemF0aW9uTGV2ZWw7XHJcbiAgICAgIHBvdGVudGlhbC5vcmdhbml6YXRpb25JZCA9IHRoaXMub3JnYW5pemF0aW9uTGV2ZWxDb2xsZWN0aW9uLmZpbmQobyA9PiBvLnZhbHVlID09PSB0aGlzLm9yZ2FuaXphdGlvbkxldmVsKS5vcmdJZDtcclxuICAgICAgcG90ZW50aWFsLm9yZ2FuaXphdGlvbk5hbWUgPSB0aGlzLm9yZ2FuaXphdGlvbkxldmVsQ29sbGVjdGlvbi5maW5kKG8gPT4gby52YWx1ZSA9PT0gdGhpcy5vcmdhbml6YXRpb25MZXZlbCkudGV4dDtcclxuICAgICAgcG90ZW50aWFsLmluY2x1ZGVDaGlsZHJlbiA9IHRoaXMuaW5jbHVkZUNoaWxkcmVuO1xyXG4gICAgICBwb3RlbnRpYWwudGFnID0gJ3ZhcmlhYmxlJztcclxuICAgICAgdGhpcy5jb25maWcuYXNzaWduU2NvcGUgPSBwb3RlbnRpYWw7XHJcbiAgICB9XHJcbiAgICBjb25zdCBvYmplY3QgPSB7IHZhbHVlOiB0aGlzLmNvbmZpZywgcGFyYW1ldGVyczogbnVsbCB9O1xyXG4gICAgdGhpcy5zdWJtaXRNb2RhbC5lbWl0KG9iamVjdCk7XHJcbiAgfVxyXG5cclxuICBjbGlja0NhbmNlbCgpIHtcclxuICAgIHRoaXMuY2xvc2VNb2RhbC5lbWl0KCk7XHJcbiAgfVxyXG5cclxuICB2YWx1ZUNoYW5nZShldmVudDogYW55KSB7XHJcbiAgICBzd2l0Y2ggKGV2ZW50LnZhbHVlKSB7XHJcbiAgICAgIGNhc2UgdGhpcy5vcmdhbml6YXRpb25MZXZlbENvbGxlY3Rpb25bMF0udmFsdWU6XHJcbiAgICAgICAgdGhpcy5pbmNsdWRlQ2hpbGRyZW4gPSBmYWxzZTtcclxuICAgICAgICBicmVhaztcclxuICAgICAgY2FzZSB0aGlzLm9yZ2FuaXphdGlvbkxldmVsQ29sbGVjdGlvblsxXS52YWx1ZTpcclxuICAgICAgICB0aGlzLmluY2x1ZGVDaGlsZHJlbiA9IHRydWU7XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICAgIGNhc2UgdGhpcy5vcmdhbml6YXRpb25MZXZlbENvbGxlY3Rpb25bMl0udmFsdWU6XHJcbiAgICAgICAgdGhpcy5pbmNsdWRlQ2hpbGRyZW4gPSBmYWxzZTtcclxuICAgICAgICBicmVhaztcclxuICAgIH1cclxuICB9XHJcbn1cclxuZXhwb3J0IGNsYXNzIEFzc2lnbkNvbmZpZ0NvbnZlcnRlciBpbXBsZW1lbnRzIFR5cGVDb252ZXJ0ZXIge1xyXG4gIGNvbnN0cnVjdG9yKCkgeyB9XHJcblxyXG4gIGNvbnZlcnRUbyhkYXRhKTogc3RyaW5nIHtcclxuICAgIHJldHVybiAn77yI5bey6K6+572u77yJJztcclxuICB9XHJcbn1cclxuIl19