/**
 * @fileoverview added by tsickle
 * Generated from: lib/entity/form-rest/FormBillCreationProcessExecutorArgs.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { BpmnModelJsonHelper } from "@edp-aif/common-api";
import { FormCreationRuleExecutorArgs } from "@edp-aif/runtime-api";
import { ManualCreationMode } from "./ManualCreationMode";
export class FormBillCreationProcessExecutorArgs extends FormCreationRuleExecutorArgs {
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.billCreationProcessId = null;
        this.creationRuleInstanceId = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "billCreationProcessId", this.billCreationProcessId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "creationRuleInstanceId", this.creationRuleInstanceId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "manualCreationMode", this.manualCreationMode);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.billCreationProcessId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "billCreationProcessId");
        this.creationRuleInstanceId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "creationRuleInstanceId");
        this.manualCreationMode = ManualCreationMode[BpmnModelJsonHelper.GetAttributeValueAsString(obj, "creationRuleInstanceId")];
    }
}
if (false) {
    /** @type {?} */
    FormBillCreationProcessExecutorArgs.prototype.billCreationProcessId;
    /** @type {?} */
    FormBillCreationProcessExecutorArgs.prototype.creationRuleInstanceId;
    /** @type {?} */
    FormBillCreationProcessExecutorArgs.prototype.manualCreationMode;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRm9ybUJpbGxDcmVhdGlvblByb2Nlc3NFeGVjdXRvckFyZ3MuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZWRwLWJpZi9ydW50aW1lLWFwaS8iLCJzb3VyY2VzIjpbImxpYi9lbnRpdHkvZm9ybS1yZXN0L0Zvcm1CaWxsQ3JlYXRpb25Qcm9jZXNzRXhlY3V0b3JBcmdzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDMUQsT0FBTyxFQUFFLDRCQUE0QixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDcEUsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFFMUQsTUFBTSxPQUFPLG1DQUFvQyxTQUFRLDRCQUE0Qjs7Ozs7SUFLdkUsbUJBQW1CO1FBQ3pCLEtBQUssQ0FBQyxtQkFBbUIsRUFBRSxDQUFDO1FBRTVCLElBQUksQ0FBQyxxQkFBcUIsR0FBRyxJQUFJLENBQUM7UUFDbEMsSUFBSSxDQUFDLHNCQUFzQixHQUFHLElBQUksQ0FBQztJQUN2QyxDQUFDOzs7O0lBRU0sbUJBQW1COztZQUNsQixHQUFHLEdBQU8sS0FBSyxDQUFDLG1CQUFtQixFQUFFO1FBRXpDLG1CQUFtQixDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSx1QkFBdUIsRUFBRSxJQUFJLENBQUMscUJBQXFCLENBQUMsQ0FBQztRQUNoRyxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsd0JBQXdCLEVBQUUsSUFBSSxDQUFDLHNCQUFzQixDQUFDLENBQUM7UUFDbEcsbUJBQW1CLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLG9CQUFvQixFQUFFLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO1FBRTFGLE9BQU8sR0FBRyxDQUFDO0lBQ2YsQ0FBQzs7Ozs7SUFFTSxrQkFBa0IsQ0FBQyxHQUFPO1FBQzdCLEtBQUssQ0FBQyxrQkFBa0IsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUU5QixJQUFJLENBQUMscUJBQXFCLEdBQUcsbUJBQW1CLENBQUMseUJBQXlCLENBQUMsR0FBRyxFQUFFLHVCQUF1QixDQUFDLENBQUM7UUFDekcsSUFBSSxDQUFDLHNCQUFzQixHQUFHLG1CQUFtQixDQUFDLHlCQUF5QixDQUFDLEdBQUcsRUFBRSx3QkFBd0IsQ0FBQyxDQUFDO1FBQzNHLElBQUksQ0FBQyxrQkFBa0IsR0FBRyxrQkFBa0IsQ0FBQyxtQkFBbUIsQ0FBQyx5QkFBeUIsQ0FBQyxHQUFHLEVBQUUsd0JBQXdCLENBQUMsQ0FBQyxDQUFDO0lBQy9ILENBQUM7Q0FDSjs7O0lBNUJHLG9FQUE4Qjs7SUFDOUIscUVBQStCOztJQUMvQixpRUFBdUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCcG1uTW9kZWxKc29uSGVscGVyIH0gZnJvbSBcIkBlZHAtYWlmL2NvbW1vbi1hcGlcIjtcclxuaW1wb3J0IHsgRm9ybUNyZWF0aW9uUnVsZUV4ZWN1dG9yQXJncyB9IGZyb20gXCJAZWRwLWFpZi9ydW50aW1lLWFwaVwiO1xyXG5pbXBvcnQgeyBNYW51YWxDcmVhdGlvbk1vZGUgfSBmcm9tIFwiLi9NYW51YWxDcmVhdGlvbk1vZGVcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBGb3JtQmlsbENyZWF0aW9uUHJvY2Vzc0V4ZWN1dG9yQXJncyBleHRlbmRzIEZvcm1DcmVhdGlvblJ1bGVFeGVjdXRvckFyZ3Mge1xyXG4gICAgYmlsbENyZWF0aW9uUHJvY2Vzc0lkOiBzdHJpbmc7XHJcbiAgICBjcmVhdGlvblJ1bGVJbnN0YW5jZUlkOiBzdHJpbmc7XHJcbiAgICBtYW51YWxDcmVhdGlvbk1vZGU6IE1hbnVhbENyZWF0aW9uTW9kZTtcclxuXHJcbiAgICBwcm90ZWN0ZWQgUmVzZXRCZWZvcmVMb2FkRnJvbSgpOiB2b2lkIHtcclxuICAgICAgICBzdXBlci5SZXNldEJlZm9yZUxvYWRGcm9tKCk7XHJcblxyXG4gICAgICAgIHRoaXMuYmlsbENyZWF0aW9uUHJvY2Vzc0lkID0gbnVsbDtcclxuICAgICAgICB0aGlzLmNyZWF0aW9uUnVsZUluc3RhbmNlSWQgPSBudWxsO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBDb252ZXJ0VG9Kc29uT2JqZWN0KCk6IHt9IHtcclxuICAgICAgICBsZXQgb2JqOiB7fSA9IHN1cGVyLkNvbnZlcnRUb0pzb25PYmplY3QoKTtcclxuXHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwiYmlsbENyZWF0aW9uUHJvY2Vzc0lkXCIsIHRoaXMuYmlsbENyZWF0aW9uUHJvY2Vzc0lkKTtcclxuICAgICAgICBCcG1uTW9kZWxKc29uSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJjcmVhdGlvblJ1bGVJbnN0YW5jZUlkXCIsIHRoaXMuY3JlYXRpb25SdWxlSW5zdGFuY2VJZCk7XHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwibWFudWFsQ3JlYXRpb25Nb2RlXCIsIHRoaXMubWFudWFsQ3JlYXRpb25Nb2RlKTtcclxuXHJcbiAgICAgICAgcmV0dXJuIG9iajtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgTG9hZEZyb21Kc29uT2JqZWN0KG9iajoge30pOiB2b2lkIHtcclxuICAgICAgICBzdXBlci5Mb2FkRnJvbUpzb25PYmplY3Qob2JqKTtcclxuXHJcbiAgICAgICAgdGhpcy5iaWxsQ3JlYXRpb25Qcm9jZXNzSWQgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcImJpbGxDcmVhdGlvblByb2Nlc3NJZFwiKTtcclxuICAgICAgICB0aGlzLmNyZWF0aW9uUnVsZUluc3RhbmNlSWQgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcImNyZWF0aW9uUnVsZUluc3RhbmNlSWRcIik7XHJcbiAgICAgICAgdGhpcy5tYW51YWxDcmVhdGlvbk1vZGUgPSBNYW51YWxDcmVhdGlvbk1vZGVbQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzU3RyaW5nKG9iaiwgXCJjcmVhdGlvblJ1bGVJbnN0YW5jZUlkXCIpXTtcclxuICAgIH1cclxufVxyXG4iXX0=