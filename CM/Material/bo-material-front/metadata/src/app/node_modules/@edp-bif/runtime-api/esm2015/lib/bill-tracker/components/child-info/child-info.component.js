/**
 * @fileoverview added by tsickle
 * Generated from: lib/bill-tracker/components/child-info/child-info.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectorRef, Component, ComponentFactoryResolver, Inject, Injector, Input, LOCALE_ID, Optional, ViewChild, ViewContainerRef } from "@angular/core";
import { BillDataTable, BillSchemaTable, DataType } from "@edp-aif/common-api";
import { BillTrackingDataShownMode, BillTrackingSettings } from "@edp-bif/common-api";
import { DatagridComponent } from "@farris/ui-datagrid";
import { LoadingService } from "@farris/ui-loading";
import { MessagerService } from "@farris/ui-messager";
import { BsModalService } from "@farris/ui-modal";
import { NotifyService } from "@farris/ui-notify";
import { BillInfo } from "../../../entity/tracking/BillInfo";
import { BillTrackerLocalePipe } from "../../pipe/bill-tracker-locale.pipe";
import { BillTrackerDataInfoService } from "../../services/bill-tracker-data-info.service";
import { ChildInfoListComponent } from "../child-info-list/child-info-list.component";
export class ChildInfoComponent {
    /**
     * @param {?} notify
     * @param {?} messager
     * @param {?} loading
     * @param {?} modal
     * @param {?} dataInfoService
     * @param {?} localePipe
     * @param {?} vcr
     * @param {?} inj
     * @param {?} cfr
     * @param {?} cdr
     * @param {?} localeId
     */
    constructor(notify, messager, loading, modal, dataInfoService, localePipe, vcr, inj, cfr, cdr, localeId) {
        this.notify = notify;
        this.messager = messager;
        this.loading = loading;
        this.modal = modal;
        this.dataInfoService = dataInfoService;
        this.localePipe = localePipe;
        this.vcr = vcr;
        this.inj = inj;
        this.cfr = cfr;
        this.cdr = cdr;
        this.localeId = localeId;
        this.secTitle = null;
        this.showDetail = false;
        this.dgCols = [];
        this.dgData = [];
        this.dgLineNumberTitle = this.localePipe.transform("lineNumber");
        this.dgIdField = "bifDgId0d63";
        this.localeId = localeId || this.inj.get(LOCALE_ID);
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        // 设置section标题
        this.secTitle = this.localePipe.transform("basicInfo");
        // 表名解析
        this.secTitle = this.dataInfoService.getTableLabel(this.billInfo, this.schemaTable, this.localeId);
        // 单据追踪配置
        /** @type {?} */
        let bts = new BillTrackingSettings();
        if (this.billInfo && this.billInfo.billTrackingSettings) {
            bts.LoadFromJson(this.billInfo.billTrackingSettings);
        }
        // 字段解析
        /** @type {?} */
        let fieldContent = bts.customFieldContent;
        /** @type {?} */
        let fieldConfig = fieldContent && (typeof fieldContent == "object" ? fieldContent : JSON.parse(fieldContent));
        /** @type {?} */
        let selectedFields = fieldConfig && fieldConfig.schema && fieldConfig.schema[this.schemaTable.tableName] && fieldConfig.schema[this.schemaTable.tableName].fields;
        selectedFields = selectedFields ? selectedFields : [];
        /** @type {?} */
        let showCustomFields = bts.billTrackingDataShownMode === BillTrackingDataShownMode.CUSTOMFIELD;
        /** @type {?} */
        const fs = this.schemaTable.getFieldList();
        // 提取字段
        /** @type {?} */
        let ffs = this.dataInfoService.extractFFields(fs, selectedFields, showCustomFields);
        // 筛选显示列
        ffs = ffs.filter((/**
         * @param {?} f
         * @return {?}
         */
        f => f.show));
        // 按order排序
        ffs = this.dataInfoService.sortFieldsByOrder(ffs);
        // 创建显示列
        this.dgCols = [];
        ffs.forEach((/**
         * @param {?} f
         * @return {?}
         */
        (f) => {
            /** @type {?} */
            let c = {
                field: f.fieldPath || f.fieldName,
                title: this.dataInfoService.getFieldLabel(f, this.localeId),
                width: 120
            };
            if (f.dataType == DataType.Boolean) {
                c.formatter = (/**
                 * @param {?} value
                 * @param {?} rowData
                 * @param {?} rowIndex
                 * @return {?}
                 */
                (value, rowData, rowIndex) => {
                    if (value == true) {
                        return this.localePipe.transform("yes");
                    }
                    else if (value == false) {
                        return this.localePipe.transform("no");
                    }
                    else {
                        return "-";
                    }
                });
            }
            this.dgCols.push(c);
        }));
        // 构建行数据
        /** @type {?} */
        const rows = this.dataTable.GetRowList();
        this.dgData = [...this.dataInfoService.extractDataRows(rows, ffs, fs, this.dgIdField)];
        if (this.dgData.length > 0) {
            setTimeout((/**
             * @return {?}
             */
            () => {
                this.dg && this.dg.selectRow(this.dgData[0][this.dgIdField]);
            }), 500);
        }
    }
    /**
     * @param {?} row
     * @return {?}
     */
    selectChanged(row) {
        /** @type {?} */
        const r = this.dataTable.GetRowMap()[row.id];
        this.showDetail = this.dataInfoService.hasChildData(r, this.billInfo);
        this.cdr.detectChanges();
    }
    /**
     * @return {?}
     */
    viewChildData() {
        if (this.dg.selectedRow == null) {
            this.notify.warning(this.localePipe.transform("selectOneFirst"));
            return;
        }
        /** @type {?} */
        const row = this.dataTable.GetRowMap()[this.dg.selectedRow.id];
        if (!this.dataInfoService.hasChildData(row, this.billInfo)) {
            this.notify.info(this.localePipe.transform("noChildData"));
            return;
        }
        /** @type {?} */
        const cmpF = this.cfr.resolveComponentFactory(ChildInfoListComponent);
        /** @type {?} */
        const cmpR = cmpF.create(this.inj, []);
        // 获取子表列表
        /** @type {?} */
        const childSchemaTables = this.dataInfoService.getChildTables(this.billInfo, this.schemaTable);
        cmpR.instance.childSchemaTables = childSchemaTables;
        cmpR.instance.childDataTableMap = row.GetChildTableMap();
        cmpR.instance.billInfo = this.billInfo;
        /** @type {?} */
        const bsModalRef = this.modal.show(cmpR, {
            title: this.localePipe.transform("childData"),
            width: 900,
            height: 600,
            showButtons: false,
        });
        cmpR.instance.bsModalRef = bsModalRef;
    }
}
ChildInfoComponent.decorators = [
    { type: Component, args: [{
                selector: "lib-bill-tracker-child-info",
                template: "<div class=\"f-struct-wrapper\" *ngIf=\"dgCols&&dgCols.length>0&&dgData&&dgData.length>0\">\r\n    <farris-section class=\"f-section-tabs f-section-in-mainsubcard\" [mainTitle]=\"secTitle\">\r\n        <ng-template farrisSectionToolbar [toolbarCls]=\"'section-test-toolbar'\">\r\n            <button class=\"btn btn-secondary f-btn-ml\" *ngIf=\"showDetail\" (click)=\"viewChildData()\">\r\n                {{ \"childData\" | billTrackerLocale}}\r\n            </button>\r\n        </ng-template>\r\n        <div class=\"\">\r\n            <div class=\"f-utils-fill\">\r\n                <farris-datagrid #dg [data]=\"dgData\" [idField]=\"dgIdField\" [fields]=\"dgCols\" [showLineNumber]=\"true\"\r\n                    [striped]=\"true\" [virtualized]=\"false\" [pagination]=\"false\" [virtualizedAsyncLoad]=\"false\"\r\n                    [multiSelect]=\"false\" [fit]=\"true\" [showCheckbox]=\"false\" [showAllCheckbox]=\"false\"\r\n                    [lineNumberTitle]=\"dgLineNumberTitle\" [mergeCell]=\"false\" [showBorder]=\"true\"\r\n                    [checkOnSelect]=\"false\" [selectOnCheck]=\"false\" [nowrap]=\"true\" [autoFitColumns]=\"true\"\r\n                    [fitColumns]=\"true\" [autoHeight]=\"false\" (selectChanged)=\"selectChanged($event)\">\r\n                </farris-datagrid>\r\n            </div>\r\n        </div>\r\n    </farris-section>\r\n</div>"
            }] }
];
/** @nocollapse */
ChildInfoComponent.ctorParameters = () => [
    { type: NotifyService },
    { type: MessagerService },
    { type: LoadingService },
    { type: BsModalService },
    { type: BillTrackerDataInfoService },
    { type: BillTrackerLocalePipe },
    { type: ViewContainerRef },
    { type: Injector },
    { type: ComponentFactoryResolver },
    { type: ChangeDetectorRef },
    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [LOCALE_ID,] }] }
];
ChildInfoComponent.propDecorators = {
    schemaTable: [{ type: Input, args: ["schemaTable",] }],
    dataTable: [{ type: Input, args: ["dataTable",] }],
    billInfo: [{ type: Input, args: ["billInfo",] }],
    dg: [{ type: ViewChild, args: ["dg",] }]
};
if (false) {
    /** @type {?} */
    ChildInfoComponent.prototype.schemaTable;
    /** @type {?} */
    ChildInfoComponent.prototype.dataTable;
    /** @type {?} */
    ChildInfoComponent.prototype.billInfo;
    /** @type {?} */
    ChildInfoComponent.prototype.secTitle;
    /** @type {?} */
    ChildInfoComponent.prototype.showDetail;
    /** @type {?} */
    ChildInfoComponent.prototype.dg;
    /** @type {?} */
    ChildInfoComponent.prototype.dgCols;
    /** @type {?} */
    ChildInfoComponent.prototype.dgData;
    /** @type {?} */
    ChildInfoComponent.prototype.dgLineNumberTitle;
    /** @type {?} */
    ChildInfoComponent.prototype.dgIdField;
    /** @type {?} */
    ChildInfoComponent.prototype.notify;
    /** @type {?} */
    ChildInfoComponent.prototype.messager;
    /** @type {?} */
    ChildInfoComponent.prototype.loading;
    /** @type {?} */
    ChildInfoComponent.prototype.modal;
    /** @type {?} */
    ChildInfoComponent.prototype.dataInfoService;
    /** @type {?} */
    ChildInfoComponent.prototype.localePipe;
    /** @type {?} */
    ChildInfoComponent.prototype.vcr;
    /** @type {?} */
    ChildInfoComponent.prototype.inj;
    /** @type {?} */
    ChildInfoComponent.prototype.cfr;
    /** @type {?} */
    ChildInfoComponent.prototype.cdr;
    /** @type {?} */
    ChildInfoComponent.prototype.localeId;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hpbGQtaW5mby5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZWRwLWJpZi9ydW50aW1lLWFwaS8iLCJzb3VyY2VzIjpbImxpYi9iaWxsLXRyYWNrZXIvY29tcG9uZW50cy9jaGlsZC1pbmZvL2NoaWxkLWluZm8uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLGlCQUFpQixFQUFFLFNBQVMsRUFBRSx3QkFBd0IsRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQVUsUUFBUSxFQUFFLFNBQVMsRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMxSyxPQUFPLEVBQUUsYUFBYSxFQUE0RCxlQUFlLEVBQUUsUUFBUSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDekksT0FBTyxFQUFpQyx5QkFBeUIsRUFBRSxvQkFBb0IsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3JILE9BQU8sRUFBYyxpQkFBaUIsRUFBZSxNQUFNLHFCQUFxQixDQUFDO0FBQ2pGLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNwRCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDdEQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ2xELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNsRCxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFDN0QsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0scUNBQXFDLENBQUM7QUFDNUUsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0sK0NBQStDLENBQUM7QUFDM0YsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sOENBQThDLENBQUM7QUFPdEYsTUFBTSxPQUFPLGtCQUFrQjs7Ozs7Ozs7Ozs7Ozs7SUFxQjNCLFlBQ1csTUFBcUIs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QWE7d0JBR25CLEtBQUssU0FBQyxXQUFXO3VCQUdqQixLQUFLLFNBQUMsVUFBVTtpQkFPaEIsU0FBUyxTQUFDLElBQUk7Ozs7SUFiZix5Q0FDb0M7O0lBRXBDLHVDQUNnQzs7SUFFaEMsc0NBQzBCOztJQUUxQixzQ0FBZ0I7O0lBRWhCLHdDQUFtQjs7SUFFbkIsZ0NBQ3NCOztJQUN0QixvQ0FBWTs7SUFDWixvQ0FBWTs7SUFDWiwrQ0FBNEQ7O0lBQzVELHVDQUEwQjs7SUFHdEIsb0NBQTRCOztJQUM1QixzQ0FBZ0M7O0lBQ2hDLHFDQUE4Qjs7SUFDOUIsbUNBQTRCOztJQUM1Qiw2Q0FBa0Q7O0lBQ2xELHdDQUF3Qzs7SUFDeEMsaUNBQTRCOztJQUM1QixpQ0FBb0I7O0lBQ3BCLGlDQUFvQzs7SUFDcEMsaUNBQTZCOztJQUM3QixzQ0FBc0QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VEZXRlY3RvclJlZiwgQ29tcG9uZW50LCBDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIsIEluamVjdCwgSW5qZWN0b3IsIElucHV0LCBMT0NBTEVfSUQsIE9uSW5pdCwgT3B0aW9uYWwsIFZpZXdDaGlsZCwgVmlld0NvbnRhaW5lclJlZiB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XHJcbmltcG9ydCB7IEJpbGxEYXRhVGFibGUsIEJpbGxTY2hlbWFGaWVsZCwgQmlsbFNjaGVtYUZpZWxkQmFzZSwgQmlsbFNjaGVtYVN1YkZpZWxkLCBCaWxsU2NoZW1hVGFibGUsIERhdGFUeXBlIH0gZnJvbSBcIkBlZHAtYWlmL2NvbW1vbi1hcGlcIjtcclxuaW1wb3J0IHsgQmlsbFRyYWNrZXJTY2hlbWFGaWVsZENvbnRlbnQsIEJpbGxUcmFja2luZ0RhdGFTaG93bk1vZGUsIEJpbGxUcmFja2luZ1NldHRpbmdzIH0gZnJvbSBcIkBlZHAtYmlmL2NvbW1vbi1hcGlcIjtcclxuaW1wb3J0IHsgRGF0YUNvbHVtbiwgRGF0YWdyaWRDb21wb25lbnQsIFNlbGVjdGVkUm93IH0gZnJvbSBcIkBmYXJyaXMvdWktZGF0YWdyaWRcIjtcclxuaW1wb3J0IHsgTG9hZGluZ1NlcnZpY2UgfSBmcm9tIFwiQGZhcnJpcy91aS1sb2FkaW5nXCI7XHJcbmltcG9ydCB7IE1lc3NhZ2VyU2VydmljZSB9IGZyb20gXCJAZmFycmlzL3VpLW1lc3NhZ2VyXCI7XHJcbmltcG9ydCB7IEJzTW9kYWxTZXJ2aWNlIH0gZnJvbSBcIkBmYXJyaXMvdWktbW9kYWxcIjtcclxuaW1wb3J0IHsgTm90aWZ5U2VydmljZSB9IGZyb20gXCJAZmFycmlzL3VpLW5vdGlmeVwiO1xyXG5pbXBvcnQgeyBCaWxsSW5mbyB9IGZyb20gXCIuLi8uLi8uLi9lbnRpdHkvdHJhY2tpbmcvQmlsbEluZm9cIjtcclxuaW1wb3J0IHsgQmlsbFRyYWNrZXJMb2NhbGVQaXBlIH0gZnJvbSBcIi4uLy4uL3BpcGUvYmlsbC10cmFja2VyLWxvY2FsZS5waXBlXCI7XHJcbmltcG9ydCB7IEJpbGxUcmFja2VyRGF0YUluZm9TZXJ2aWNlIH0gZnJvbSBcIi4uLy4uL3NlcnZpY2VzL2JpbGwtdHJhY2tlci1kYXRhLWluZm8uc2VydmljZVwiO1xyXG5pbXBvcnQgeyBDaGlsZEluZm9MaXN0Q29tcG9uZW50IH0gZnJvbSBcIi4uL2NoaWxkLWluZm8tbGlzdC9jaGlsZC1pbmZvLWxpc3QuY29tcG9uZW50XCI7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICAgIHNlbGVjdG9yOiBcImxpYi1iaWxsLXRyYWNrZXItY2hpbGQtaW5mb1wiLFxyXG4gICAgdGVtcGxhdGVVcmw6IFwiLi9jaGlsZC1pbmZvLmNvbXBvbmVudC5odG1sXCIsXHJcbiAgICBzdHlsZVVybHM6IFtdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBDaGlsZEluZm9Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG4gICAgQElucHV0KFwic2NoZW1hVGFibGVcIilcclxuICAgIHB1YmxpYyBzY2hlbWFUYWJsZTogQmlsbFNjaGVtYVRhYmxlO1xyXG5cclxuICAgIEBJbnB1dChcImRhdGFUYWJsZVwiKVxyXG4gICAgcHVibGljIGRhdGFUYWJsZTogQmlsbERhdGFUYWJsZTtcclxuXHJcbiAgICBASW5wdXQoXCJiaWxsSW5mb1wiKVxyXG4gICAgcHVibGljIGJpbGxJbmZvOiBCaWxsSW5mbztcclxuXHJcbiAgICBzZWNUaXRsZSA9IG51bGw7XHJcblxyXG4gICAgc2hvd0RldGFpbCA9IGZhbHNlO1xyXG5cclxuICAgIEBWaWV3Q2hpbGQoXCJkZ1wiKVxyXG4gICAgZGc6IERhdGFncmlkQ29tcG9uZW50O1xyXG4gICAgZGdDb2xzID0gW107XHJcbiAgICBkZ0RhdGEgPSBbXTtcclxuICAgIGRnTGluZU51bWJlclRpdGxlID0gdGhpcy5sb2NhbGVQaXBlLnRyYW5zZm9ybShcImxpbmVOdW1iZXJcIik7XHJcbiAgICBkZ0lkRmllbGQgPSBcImJpZkRnSWQwZDYzXCI7XHJcblxyXG4gICAgY29uc3RydWN0b3IoXHJcbiAgICAgICAgcHVibGljIG5vdGlmeTogTm90aWZ5U2VydmljZSxcclxuICAgICAgICBwdWJsaWMgbWVzc2FnZXI6IE1lc3NhZ2VyU2VydmljZSxcclxuICAgICAgICBwdWJsaWMgbG9hZGluZzogTG9hZGluZ1NlcnZpY2UsXHJcbiAgICAgICAgcHVibGljIG1vZGFsOiBCc01vZGFsU2VydmljZSxcclxuICAgICAgICBwdWJsaWMgZGF0YUluZm9TZXJ2aWNlOiBCaWxsVHJhY2tlckRhdGFJbmZvU2VydmljZSxcclxuICAgICAgICBwdWJsaWMgbG9jYWxlUGlwZTogQmlsbFRyYWNrZXJMb2NhbGVQaXBlLFxyXG4gICAgICAgIHB1YmxpYyB2Y3I6IFZpZXdDb250YWluZXJSZWYsXHJcbiAgICAgICAgcHVibGljIGluajogSW5qZWN0b3IsXHJcbiAgICAgICAgcHVibGljIGNmcjogQ29tcG9uZW50RmFjdG9yeVJlc29sdmVyLFxyXG4gICAgICAgIHB1YmxpYyBjZHI6IENoYW5nZURldGVjdG9yUmVmLFxyXG4gICAgICAgIEBPcHRpb25hbCgpIEBJbmplY3QoTE9DQUxFX0lEKSBwdWJsaWMgbG9jYWxlSWQ6IHN0cmluZyxcclxuICAgICkge1xyXG4gICAgICAgIHRoaXMubG9jYWxlSWQgPSBsb2NhbGVJZCB8fCB0aGlzLmluai5nZXQoTE9DQUxFX0lEKTtcclxuICAgIH1cclxuXHJcbiAgICBuZ09uSW5pdCgpOiB2b2lkIHtcclxuICAgICAgICAvLyDorr7nva5zZWN0aW9u5qCH6aKYXHJcbiAgICAgICAgdGhpcy5zZWNUaXRsZSA9IHRoaXMubG9jYWxlUGlwZS50cmFuc2Zvcm0oXCJiYXNpY0luZm9cIik7XHJcbiAgICAgICAgLy8g6KGo5ZCN6Kej5p6QXHJcbiAgICAgICAgdGhpcy5zZWNUaXRsZSA9IHRoaXMuZGF0YUluZm9TZXJ2aWNlLmdldFRhYmxlTGFiZWwodGhpcy5iaWxsSW5mbywgdGhpcy5zY2hlbWFUYWJsZSwgdGhpcy5sb2NhbGVJZCk7XHJcblxyXG4gICAgICAgIC8vIOWNleaNrui/vei4qumFjee9rlxyXG4gICAgICAgIGxldCBidHM6IEJpbGxUcmFja2luZ1NldHRpbmdzID0gbmV3IEJpbGxUcmFja2luZ1NldHRpbmdzKCk7XHJcbiAgICAgICAgaWYgKHRoaXMuYmlsbEluZm8gJiYgdGhpcy5iaWxsSW5mby5iaWxsVHJhY2tpbmdTZXR0aW5ncykge1xyXG4gICAgICAgICAgICBidHMuTG9hZEZyb21Kc29uKHRoaXMuYmlsbEluZm8uYmlsbFRyYWNraW5nU2V0dGluZ3MpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8g5a2X5q616Kej5p6QXHJcbiAgICAgICAgbGV0IGZpZWxkQ29udGVudCA9IGJ0cy5jdXN0b21GaWVsZENvbnRlbnQ7XHJcbiAgICAgICAgbGV0IGZpZWxkQ29uZmlnOiBCaWxsVHJhY2tlclNjaGVtYUZpZWxkQ29udGVudCA9IGZpZWxkQ29udGVudCAmJiAodHlwZW9mIGZpZWxkQ29udGVudCA9PSBcIm9iamVjdFwiID8gZmllbGRDb250ZW50IDogSlNPTi5wYXJzZShmaWVsZENvbnRlbnQpKTtcclxuICAgICAgICBsZXQgc2VsZWN0ZWRGaWVsZHMgPSBmaWVsZENvbmZpZyAmJiBmaWVsZENvbmZpZy5zY2hlbWEgJiYgZmllbGRDb25maWcuc2NoZW1hW3RoaXMuc2NoZW1hVGFibGUudGFibGVOYW1lXSAmJiBmaWVsZENvbmZpZy5zY2hlbWFbdGhpcy5zY2hlbWFUYWJsZS50YWJsZU5hbWVdLmZpZWxkcztcclxuICAgICAgICBzZWxlY3RlZEZpZWxkcyA9IHNlbGVjdGVkRmllbGRzID8gc2VsZWN0ZWRGaWVsZHMgOiBbXTtcclxuICAgICAgICBsZXQgc2hvd0N1c3RvbUZpZWxkcyA9IGJ0cy5iaWxsVHJhY2tpbmdEYXRhU2hvd25Nb2RlID09PSBCaWxsVHJhY2tpbmdEYXRhU2hvd25Nb2RlLkNVU1RPTUZJRUxEO1xyXG5cclxuICAgICAgICBjb25zdCBmcyA9IHRoaXMuc2NoZW1hVGFibGUuZ2V0RmllbGRMaXN0KCk7XHJcbiAgICAgICAgLy8g5o+Q5Y+W5a2X5q61XHJcbiAgICAgICAgbGV0IGZmcyA9IHRoaXMuZGF0YUluZm9TZXJ2aWNlLmV4dHJhY3RGRmllbGRzKGZzLCBzZWxlY3RlZEZpZWxkcywgc2hvd0N1c3RvbUZpZWxkcyk7XHJcbiAgICAgICAgLy8g562b6YCJ5pi+56S65YiXXHJcbiAgICAgICAgZmZzID0gZmZzLmZpbHRlcihmID0+IGYuc2hvdyk7XHJcbiAgICAgICAgLy8g5oyJb3JkZXLmjpLluo9cclxuICAgICAgICBmZnMgPSB0aGlzLmRhdGFJbmZvU2VydmljZS5zb3J0RmllbGRzQnlPcmRlcihmZnMpO1xyXG5cclxuICAgICAgICAvLyDliJvlu7rmmL7npLrliJdcclxuICAgICAgICB0aGlzLmRnQ29scyA9IFtdO1xyXG4gICAgICAgIGZmcy5mb3JFYWNoKChmOiBCaWxsU2NoZW1hRmllbGQgfCBCaWxsU2NoZW1hU3ViRmllbGQpID0+IHtcclxuICAgICAgICAgICAgbGV0IGM6IERhdGFDb2x1bW4gPSB7XHJcbiAgICAgICAgICAgICAgICBmaWVsZDogZi5maWVsZFBhdGggfHwgZi5maWVsZE5hbWUsXHJcbiAgICAgICAgICAgICAgICB0aXRsZTogdGhpcy5kYXRhSW5mb1NlcnZpY2UuZ2V0RmllbGRMYWJlbChmLCB0aGlzLmxvY2FsZUlkKSxcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAxMjBcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgaWYgKGYuZGF0YVR5cGUgPT0gRGF0YVR5cGUuQm9vbGVhbikge1xyXG4gICAgICAgICAgICAgICAgYy5mb3JtYXR0ZXIgPSAodmFsdWU6IGJvb2xlYW4sIHJvd0RhdGEsIHJvd0luZGV4KSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHZhbHVlID09IHRydWUpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMubG9jYWxlUGlwZS50cmFuc2Zvcm0oXCJ5ZXNcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmICh2YWx1ZSA9PSBmYWxzZSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5sb2NhbGVQaXBlLnRyYW5zZm9ybShcIm5vXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBcIi1cIjtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdGhpcy5kZ0NvbHMucHVzaChjKTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgLy8g5p6E5bu66KGM5pWw5o2uXHJcbiAgICAgICAgY29uc3Qgcm93cyA9IHRoaXMuZGF0YVRhYmxlLkdldFJvd0xpc3QoKTtcclxuICAgICAgICB0aGlzLmRnRGF0YSA9IFsuLi50aGlzLmRhdGFJbmZvU2VydmljZS5leHRyYWN0RGF0YVJvd3Mocm93cywgZmZzLCBmcywgdGhpcy5kZ0lkRmllbGQpXTtcclxuXHJcbiAgICAgICAgaWYgKHRoaXMuZGdEYXRhLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmRnICYmIHRoaXMuZGcuc2VsZWN0Um93KHRoaXMuZGdEYXRhWzBdW3RoaXMuZGdJZEZpZWxkXSk7XHJcbiAgICAgICAgICAgIH0sIDUwMCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHNlbGVjdENoYW5nZWQocm93OiBTZWxlY3RlZFJvdykge1xyXG4gICAgICAgIGNvbnN0IHIgPSB0aGlzLmRhdGFUYWJsZS5HZXRSb3dNYXAoKVtyb3cuaWRdO1xyXG4gICAgICAgIHRoaXMuc2hvd0RldGFpbCA9IHRoaXMuZGF0YUluZm9TZXJ2aWNlLmhhc0NoaWxkRGF0YShyLCB0aGlzLmJpbGxJbmZvKTtcclxuICAgICAgICB0aGlzLmNkci5kZXRlY3RDaGFuZ2VzKCk7XHJcbiAgICB9XHJcblxyXG4gICAgdmlld0NoaWxkRGF0YSgpIHtcclxuICAgICAgICBpZiAodGhpcy5kZy5zZWxlY3RlZFJvdyA9PSBudWxsKSB7XHJcbiAgICAgICAgICAgIHRoaXMubm90aWZ5Lndhcm5pbmcodGhpcy5sb2NhbGVQaXBlLnRyYW5zZm9ybShcInNlbGVjdE9uZUZpcnN0XCIpKTtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgY29uc3Qgcm93ID0gdGhpcy5kYXRhVGFibGUuR2V0Um93TWFwKClbdGhpcy5kZy5zZWxlY3RlZFJvdy5pZF07XHJcbiAgICAgICAgaWYgKCF0aGlzLmRhdGFJbmZvU2VydmljZS5oYXNDaGlsZERhdGEocm93LCB0aGlzLmJpbGxJbmZvKSkge1xyXG4gICAgICAgICAgICB0aGlzLm5vdGlmeS5pbmZvKHRoaXMubG9jYWxlUGlwZS50cmFuc2Zvcm0oXCJub0NoaWxkRGF0YVwiKSk7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGNvbnN0IGNtcEYgPSB0aGlzLmNmci5yZXNvbHZlQ29tcG9uZW50RmFjdG9yeShDaGlsZEluZm9MaXN0Q29tcG9uZW50KTtcclxuICAgICAgICBjb25zdCBjbXBSID0gY21wRi5jcmVhdGUodGhpcy5pbmosIFtdKTtcclxuICAgICAgICAvLyDojrflj5blrZDooajliJfooahcclxuICAgICAgICBjb25zdCBjaGlsZFNjaGVtYVRhYmxlcyA9IHRoaXMuZGF0YUluZm9TZXJ2aWNlLmdldENoaWxkVGFibGVzKHRoaXMuYmlsbEluZm8sIHRoaXMuc2NoZW1hVGFibGUpO1xyXG4gICAgICAgIGNtcFIuaW5zdGFuY2UuY2hpbGRTY2hlbWFUYWJsZXMgPSBjaGlsZFNjaGVtYVRhYmxlcztcclxuICAgICAgICBjbXBSLmluc3RhbmNlLmNoaWxkRGF0YVRhYmxlTWFwID0gcm93LkdldENoaWxkVGFibGVNYXAoKTtcclxuICAgICAgICBjbXBSLmluc3RhbmNlLmJpbGxJbmZvID0gdGhpcy5iaWxsSW5mbztcclxuICAgICAgICBjb25zdCBic01vZGFsUmVmID0gdGhpcy5tb2RhbC5zaG93KGNtcFIsIHtcclxuICAgICAgICAgICAgdGl0bGU6IHRoaXMubG9jYWxlUGlwZS50cmFuc2Zvcm0oXCJjaGlsZERhdGFcIiksXHJcbiAgICAgICAgICAgIHdpZHRoOiA5MDAsXHJcbiAgICAgICAgICAgIGhlaWdodDogNjAwLFxyXG4gICAgICAgICAgICBzaG93QnV0dG9uczogZmFsc2UsXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgY21wUi5pbnN0YW5jZS5ic01vZGFsUmVmID0gYnNNb2RhbFJlZjtcclxuICAgIH1cclxufSJdfQ==