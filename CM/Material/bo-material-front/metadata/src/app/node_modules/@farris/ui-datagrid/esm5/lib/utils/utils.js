/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*
 * @Author: 疯狂秀才(Lucas Huang)
 * @Date: 2019-08-06 07:43:53
 * @LastEditors: 疯狂秀才(Lucas Huang)
 * @LastEditTime: 2019-11-19 20:31:27
 * @QQ: 1055818239
 * @Version: v0.0.1
 */
var /*
 * @Author: 疯狂秀才(Lucas Huang)
 * @Date: 2019-08-06 07:43:53
 * @LastEditors: 疯狂秀才(Lucas Huang)
 * @LastEditTime: 2019-11-19 20:31:27
 * @QQ: 1055818239
 * @Version: v0.0.1
 */
Utils = /** @class */ (function () {
    function Utils() {
    }
    /**
     * @return {?}
     */
    Utils.uuid = /**
     * @return {?}
     */
    function () {
        /**
         * @return {?}
         */
        function S4() {
            // tslint:disable-next-line: no-bitwise
            return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);
        }
        return (S4() + S4() + '-' + S4() + '-' + S4() + '-' + S4() + '-' + S4() + S4() + S4());
    };
    /**
     * 获取对象中指定字段的值。 field: 可以为带有层级结构的路径，如： user.firstName | name 等
     */
    /**
     * 获取对象中指定字段的值。 field: 可以为带有层级结构的路径，如： user.firstName | name 等
     * @param {?} field
     * @param {?} data
     * @param {?=} safe
     * @return {?}
     */
    Utils.getValue = /**
     * 获取对象中指定字段的值。 field: 可以为带有层级结构的路径，如： user.firstName | name 等
     * @param {?} field
     * @param {?} data
     * @param {?=} safe
     * @return {?}
     */
    function (field, data, safe) {
        if (safe === void 0) { safe = false; }
        if (!data) {
            return '';
        }
        /** @type {?} */
        var resultVal = '';
        if (field.indexOf('.') === -1 || data.hasOwnProperty(field)) {
            resultVal = data[field];
        }
        else {
            resultVal = field.split('.').reduce((/**
             * @param {?} obj
             * @param {?} key
             * @return {?}
             */
            function (obj, key) {
                if (obj) {
                    return obj[key];
                }
                else {
                    return null;
                }
            }), data);
        }
        if (safe) {
            return this.escapeValue(resultVal);
        }
        return resultVal;
    };
    /**
     * @param {?} field
     * @param {?} val
     * @param {?} obj
     * @param {?=} nest
     * @return {?}
     */
    Utils.setValue = /**
     * @param {?} field
     * @param {?} val
     * @param {?} obj
     * @param {?=} nest
     * @return {?}
     */
    function (field, val, obj, nest) {
        if (nest === void 0) { nest = true; }
        if (field) {
            if (field.indexOf('.') > -1 && nest) {
                /** @type {?} */
                var lastObj_1 = null;
                /** @type {?} */
                var _fields = field.split('.');
                _fields.reduce((/**
                 * @param {?} c
                 * @param {?} p
                 * @return {?}
                 */
                function (c, p) {
                    lastObj_1 = c;
                    return c[p];
                }), obj);
                if (lastObj_1) {
                    lastObj_1[_fields.pop()] = val;
                }
            }
            else {
                obj[field] = val;
            }
        }
    };
    /** 获取多语值 */
    /**
     * 获取多语值
     * @param {?} valObj
     * @param {?} localeId
     * @return {?}
     */
    Utils.getMultilingualValue = /**
     * 获取多语值
     * @param {?} valObj
     * @param {?} localeId
     * @return {?}
     */
    function (valObj, localeId) {
        if (valObj && typeof valObj === 'object' && Object.keys(valObj).length > 0) {
            localeId = localeId || 'zh-CHS';
            /** @type {?} */
            var val = valObj[localeId];
            if (val !== undefined) {
                return val;
            }
            else {
                return '';
            }
        }
        else {
            return '';
        }
    };
    /**
     * @param {?} val
     * @return {?}
     */
    Utils.escapeValue = /**
     * @param {?} val
     * @return {?}
     */
    function (val) {
        if (val === null || val === undefined || val === '') {
            return '';
        }
        /** @type {?} */
        var escapeHTML = (/**
         * @param {?} unsafe_str
         * @return {?}
         */
        function (unsafe_str) {
            return unsafe_str
                .replace(/&/g, '&amp;')
                .replace(/</g, '&lt;')
                .replace(/>/g, '&gt;')
                .replace(/\"/g, '&quot;')
                .replace(/\'/g, '&#39;')
                .replace(/\//g, '&#x2F;');
            // .replace('src','drc');
        });
        if (typeof val === 'string') {
            return escapeHTML(val);
        }
        return val;
    };
    /**
     * @param {?} evt
     * @return {?}
     */
    Utils.eventPath = /**
     * @param {?} evt
     * @return {?}
     */
    function (evt) {
        /** @type {?} */
        var path = (evt.composedPath && evt.composedPath()) || evt.path;
        /** @type {?} */
        var target = evt.target;
        if (path != null) {
            return (path.indexOf(window) < 0) ? path.concat(window) : path;
        }
        if (target === window) {
            return [window];
        }
        /** @type {?} */
        var getParents = (/**
         * @param {?} node
         * @param {?=} memo
         * @return {?}
         */
        function (node, memo) {
            if (memo === void 0) { memo = undefined; }
            memo = memo || [];
            /** @type {?} */
            var parentNode = node.parentNode;
            if (!parentNode) {
                return memo;
            }
            else {
                return getParents(parentNode, memo.concat(parentNode));
            }
        });
        return [target].concat(getParents(target), window);
    };
    /**
     * @return {?}
     */
    Utils.hasDialogOpen = /**
     * @return {?}
     */
    function () {
        // return document.body.classList.value.indexOf('modal-open') > -1;
        // 兼容IE 11
        return document.body.className.indexOf('modal-open') > -1;
    };
    /**
     * @param {?} el
     * @param {?} evt
     * @param {?} fn
     * @param {?=} opts
     * @return {?}
     */
    Utils.on = /**
     * @param {?} el
     * @param {?} evt
     * @param {?} fn
     * @param {?=} opts
     * @return {?}
     */
    function (el, evt, fn, opts) {
        if (opts === void 0) { opts = {}; }
        /** @type {?} */
        var delegatorFn = (/**
         * @param {?} e
         * @return {?}
         */
        function (e) { return e.target.matches(opts.target) && fn.call(e.target, e); });
        el.addEventListener(evt, opts.target ? delegatorFn : fn, opts.options || false);
        return (/**
         * @return {?}
         */
        function () {
            el.removeEventListener(evt, delegatorFn, opts);
        });
    };
    /**
     * @param {?} el
     * @param {?} evt
     * @param {?=} fn
     * @param {?=} opts
     * @return {?}
     */
    Utils.off = /**
     * @param {?} el
     * @param {?} evt
     * @param {?=} fn
     * @param {?=} opts
     * @return {?}
     */
    function (el, evt, fn, opts) {
        if (fn === void 0) { fn = (/**
         * @return {?}
         */
        function () { }); }
        if (opts === void 0) { opts = {}; }
        el.removeEventListener(evt, fn, opts);
    };
    /** 获取字符长度，中文汉字占2个字符 */
    /**
     * 获取字符长度，中文汉字占2个字符
     * @param {?} str
     * @return {?}
     */
    Utils.getBLen = /**
     * 获取字符长度，中文汉字占2个字符
     * @param {?} str
     * @return {?}
     */
    function (str) {
        if (str == null) {
            return 0;
        }
        if (typeof str !== 'string') {
            str += '';
        }
        return str.replace(/[^\x00-\xff]/g, '01').length;
    };
    // static difference(first: any[], second: any[]): any[] {
    //     return first.filter(item => !second.includes(item));
    // }
    // static getDiffItems(arr1, arr2) {
    //     const diff1 = Utils.difference(arr1, arr2);
    //     const diff2 = Utils.difference(arr2, arr1);
    //     return diff1.concat(diff2);
    // }
    // static difference(first: any[], second: any[]): any[] {
    //     return first.filter(item => !second.includes(item));
    // }
    // static getDiffItems(arr1, arr2) {
    //     const diff1 = Utils.difference(arr1, arr2);
    //     const diff2 = Utils.difference(arr2, arr1);
    //     return diff1.concat(diff2);
    // }
    /**
     * @param {?} col
     * @param {?} localeId
     * @return {?}
     */
    Utils.getWhenEmptyText = 
    // static difference(first: any[], second: any[]): any[] {
    //     return first.filter(item => !second.includes(item));
    // }
    // static getDiffItems(arr1, arr2) {
    //     const diff1 = Utils.difference(arr1, arr2);
    //     const diff2 = Utils.difference(arr2, arr1);
    //     return diff1.concat(diff2);
    // }
    /**
     * @param {?} col
     * @param {?} localeId
     * @return {?}
     */
    function (col, localeId) {
        /** @type {?} */
        var EMPTY_INPUT_TEXT = {
            'zh-CHS': '请输入',
            'zh-CHT': '請輸入',
            en: 'Please input'
        };
        /** @type {?} */
        var EMPTY_SELECT_TEXT = {
            'zh-CHS': '请选择',
            'zh-CHT': '請選擇',
            en: 'Please select'
        };
        if (col.editor) {
            switch (col.editor.type) {
                case 'datepicker':
                case 'select':
                case 'lookup':
                case 'combolist':
                case 'combo-lookup':
                    return EMPTY_SELECT_TEXT[localeId];
                default:
                    return EMPTY_INPUT_TEXT[localeId];
            }
        }
        // 控制面板列
        if (col.field === '_datagrid-setting-control_') {
            return '';
        }
        return EMPTY_INPUT_TEXT[localeId];
    };
    return Utils;
}());
/*
 * @Author: 疯狂秀才(Lucas Huang)
 * @Date: 2019-08-06 07:43:53
 * @LastEditors: 疯狂秀才(Lucas Huang)
 * @LastEditTime: 2019-11-19 20:31:27
 * @QQ: 1055818239
 * @Version: v0.0.1
 */
export { Utils };
//# sourceMappingURL=data:application/json;base64,