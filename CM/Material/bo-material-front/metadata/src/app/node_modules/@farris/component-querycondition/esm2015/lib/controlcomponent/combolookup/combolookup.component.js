/**
 * @fileoverview added by tsickle
 * Generated from: lib/controlcomponent/combolookup/combolookup.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter } from '@angular/core';
import { SolutionService } from '../../service/solution.service';
export class ComboLookUpComponent {
    /**
     * @param {?} solutionService
     */
    constructor(solutionService) {
        this.solutionService = solutionService;
        /**
         * 某个字段发生值变化事件时，需要同步清空的字段，可能不是当前字段
         */
        this.changeFields = [];
        this.conditionChange = new EventEmitter();
        this.selectedValues = "";
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.getComboLookUpBindingInfo();
        this.testId = this.solutionService.getGuid();
        this.placeholder = (this.item.placeHolder) ? (this.item.placeHolder) : (this.item.control.placeholder);
        this.autoWidth = false;
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    ngOnChanges(changes) {
        this.getComboLookUpBindingInfo();
        if (changes['changeFields'] && changes['changeFields'].currentValue && !changes['changeFields'].firstChange) {
            /** @type {?} */
            const isChange = changes['changeFields'].currentValue.some((/**
             * @param {?} field
             * @return {?}
             */
            field => field == this.item.fieldCode));
            if (isChange) {
                this.textValue = ((/** @type {?} */ (this.item.value))).textValue;
            }
        }
    }
    /**
     * @param {?} data
     * @return {?}
     */
    valueChangeHandler(data) {
        /** @type {?} */
        const helpValue = ((/** @type {?} */ (this.item.value)));
        helpValue.value = data.selections;
        helpValue.valueField = this.valueField;
        helpValue.textValue = helpValue.getTextValue(this.textField);
        this.textValue = helpValue.textValue;
        this.conditionChange.emit();
    }
    /**
     * @return {?}
     */
    getComboLookUpBindingInfo() {
        /** @type {?} */
        const comboLookUpControl = ((/** @type {?} */ (this.item.control)));
        this.uri = comboLookUpControl.uri;
        this.idField = comboLookUpControl.idField;
        this.valueField = comboLookUpControl.valueField;
        this.textField = comboLookUpControl.textField;
        this.mapFields = comboLookUpControl.mapFields;
        this.displayType = comboLookUpControl.displayType;
        this.preEventCmd = comboLookUpControl.preEventCmd;
        this.postEventCmd = comboLookUpControl.postEventCmd;
        this.multiSelect = comboLookUpControl.singleSelect === true ? false : true;
        this.panelWidth = comboLookUpControl.panelWidth ? comboLookUpControl.panelWidth : 300;
        this.panelHeight = comboLookUpControl.panelHeight ? comboLookUpControl.panelHeight : 300;
        /** @type {?} */
        const comboLookUpValue = ((/** @type {?} */ (this.item.value)));
        if (comboLookUpValue.textValue == 'help-text-value-null') { //旧数据兼容
            this.textValue = comboLookUpValue.getTextValue(this.textField);
        }
        else {
            this.textValue = comboLookUpValue.textValue;
        }
        if (comboLookUpValue && comboLookUpValue.value) {
            this.selectedValues = (comboLookUpValue.value || []).map((/**
             * @param {?} n
             * @return {?}
             */
            n => n[this.idField])).join(',');
        }
    }
    /**
     * @param {?} data
     * @return {?}
     */
    clearData(data) {
        ((/** @type {?} */ (this.item.value))).clearValue();
        this.conditionChange.emit();
    }
    /**
     * @param {?} field
     * @return {?}
     */
    getConditionItemTitle(field) {
        return this.solutionService.getConditionItemTitle(field);
    }
}
ComboLookUpComponent.decorators = [
    { type: Component, args: [{
                selector: 'app-solution-combolookup',
                template: "<div class=\"farris-group-wrap\" id=\"{{item.id}}\">\r\n    <div class=\"form-group farris-form-group common-group \"  [ngClass]=\"{'q-state-readonly':item.readonly}\">\r\n        <label class=\"col-form-label\" *ngIf=\"item\" title=\"{{getConditionItemTitle(item)}}\">\r\n            <span class=\"farris-label-info text-danger\" *ngIf=\"item.control.isRequired()\">*</span>\r\n            <span class=\"farris-label-text\">{{item.fieldName}}</span>\r\n        </label>\r\n        <div class=\"farris-input-wrap\">\r\n            <farris-combo-lookup *ngIf=\"item\"\r\n                [uri]=\"uri\"\r\n                [placeholder]=\"placeholder\"\r\n                [(ngModel)]=\"textValue\"\r\n                [idField]=\"idField\"\r\n                [valueField]=\"valueField\"\r\n                [textField]=\"textField\"\r\n                [mapFields]=\"mapFields\"\r\n                [displayType]=\"displayType\"\r\n                [multiSelect]=\"multiSelect\"\r\n                [selectedValues]=\"selectedValues\"\r\n                [beforeShow]=\"preEventCmd\"\r\n                [beforeHide]=\"postEventCmd\"\r\n                (valueChange)=\"valueChangeHandler($event)\"\r\n                (clear)=\"clearData($event)\"\r\n                [autoWidth]=\"autoWidth\"\r\n                [panelWidth]=\"panelWidth\"\r\n                [panelHeight]=\"panelHeight\"\r\n                [readonly]=\"item.readonly\"\r\n                id=\"{{testId}}\"\r\n            >\r\n        </farris-combo-lookup>\r\n        </div>\r\n    </div>\r\n</div>"
            }] }
];
/** @nocollapse */
ComboLookUpComponent.ctorParameters = () => [
    { type: SolutionService }
];
ComboLookUpComponent.propDecorators = {
    item: [{ type: Input }],
    changeFields: [{ type: Input }],
    conditionChange: [{ type: Output, args: ['conditionChange',] }]
};
if (false) {
    /**
     * QueryCondition类型
     * @type {?}
     */
    ComboLookUpComponent.prototype.item;
    /**
     * 某个字段发生值变化事件时，需要同步清空的字段，可能不是当前字段
     * @type {?}
     */
    ComboLookUpComponent.prototype.changeFields;
    /** @type {?} */
    ComboLookUpComponent.prototype.conditionChange;
    /** @type {?} */
    ComboLookUpComponent.prototype.uri;
    /** @type {?} */
    ComboLookUpComponent.prototype.idField;
    /** @type {?} */
    ComboLookUpComponent.prototype.valueField;
    /** @type {?} */
    ComboLookUpComponent.prototype.textField;
    /** @type {?} */
    ComboLookUpComponent.prototype.textValue;
    /** @type {?} */
    ComboLookUpComponent.prototype.mapFields;
    /** @type {?} */
    ComboLookUpComponent.prototype.displayType;
    /** @type {?} */
    ComboLookUpComponent.prototype.multiSelect;
    /** @type {?} */
    ComboLookUpComponent.prototype.preEventCmd;
    /** @type {?} */
    ComboLookUpComponent.prototype.postEventCmd;
    /** @type {?} */
    ComboLookUpComponent.prototype.testId;
    /** @type {?} */
    ComboLookUpComponent.prototype.placeholder;
    /** @type {?} */
    ComboLookUpComponent.prototype.autoWidth;
    /** @type {?} */
    ComboLookUpComponent.prototype.panelWidth;
    /** @type {?} */
    ComboLookUpComponent.prototype.panelHeight;
    /** @type {?} */
    ComboLookUpComponent.prototype.selectedValues;
    /**
     * @type {?}
     * @private
     */
    ComboLookUpComponent.prototype.solutionService;
}
//# sourceMappingURL=data:application/json;base64,