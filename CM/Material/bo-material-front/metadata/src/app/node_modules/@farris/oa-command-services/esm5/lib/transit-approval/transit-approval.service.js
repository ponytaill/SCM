/**
 * @fileoverview added by tsickle
 * Generated from: lib/transit-approval/transit-approval.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable, Injector } from '@angular/core';
import { BehaviorSubject } from 'rxjs';
var TransitApprovalStatus = /** @class */ (function () {
    function TransitApprovalStatus(injetor) {
        this.injetor = injetor;
        // 因为注位置的问题，这样子拿不到
        // this.stateMachineSer = this.injetor.get(StateMachineService);
    }
    /**
     * @return {?}
     */
    TransitApprovalStatus.prototype.switchStatus = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var result = new BehaviorSubject('Cancel');
        //  判断流程传参  formConfigId
        /** @type {?} */
        var frameContext;
        try {
            frameContext = this['context'].frameContext;
        }
        catch (error) {
            throw new Error('can not find frameContex');
        }
        if (frameContext.uiState['UIStateInProcess'] == 'Approving' && frameContext.uiState['formConfigId']) {
            result.next('Edit');
        }
        return result;
    };
    TransitApprovalStatus.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    TransitApprovalStatus.ctorParameters = function () { return [
        { type: Injector }
    ]; };
    return TransitApprovalStatus;
}());
export { TransitApprovalStatus };
if (false) {
    /**
     * @type {?}
     * @private
     */
    TransitApprovalStatus.prototype.injetor;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNpdC1hcHByb3ZhbC5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy9vYS1jb21tYW5kLXNlcnZpY2VzLyIsInNvdXJjZXMiOlsibGliL3RyYW5zaXQtYXBwcm92YWwvdHJhbnNpdC1hcHByb3ZhbC5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFHckQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUV2QztJQUVJLCtCQUNZLE9BQWlCO1FBQWpCLFlBQU8sR0FBUCxPQUFPLENBQVU7UUFFekIsa0JBQWtCO1FBQ2xCLGdFQUFnRTtJQUNwRSxDQUFDOzs7O0lBQ00sNENBQVk7OztJQUFuQjs7WUFDVSxNQUFNLEdBQTRCLElBQUksZUFBZSxDQUFDLFFBQVEsQ0FBQzs7O1lBRWpFLFlBQTBCO1FBQzlCLElBQUk7WUFDQSxZQUFZLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLFlBQVksQ0FBQTtTQUM5QztRQUFDLE9BQU8sS0FBSyxFQUFFO1lBQ1osTUFBTSxJQUFJLEtBQUssQ0FBQywwQkFBMEIsQ0FBQyxDQUFDO1NBQy9DO1FBQ0QsSUFBSSxZQUFZLENBQUMsT0FBTyxDQUFDLGtCQUFrQixDQUFDLElBQUksV0FBVyxJQUFJLFlBQVksQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFDLEVBQUU7WUFDakcsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztTQUN2QjtRQUNELE9BQU8sTUFBTSxDQUFDO0lBQ2xCLENBQUM7O2dCQXJCSixVQUFVOzs7O2dCQUxVLFFBQVE7O0lBMkI3Qiw0QkFBQztDQUFBLEFBdEJELElBc0JDO1NBckJZLHFCQUFxQjs7Ozs7O0lBRTFCLHdDQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUsIEluamVjdG9yIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbi8vIGltcG9ydCB7IFN0YXRlTWFjaGluZVNlcnZpY2UgfSBmcm9tICdAZmFycmlzL2NvbW1hbmQtc2VydmljZXMnO1xyXG5pbXBvcnQgeyBGcmFtZUNvbnRleHQgfSBmcm9tICdAZmFycmlzL2RldmtpdCc7XHJcbmltcG9ydCB7IEJlaGF2aW9yU3ViamVjdCB9IGZyb20gJ3J4anMnO1xyXG5cclxuQEluamVjdGFibGUoKVxyXG5leHBvcnQgY2xhc3MgVHJhbnNpdEFwcHJvdmFsU3RhdHVzIHtcclxuICAgIGNvbnN0cnVjdG9yKFxyXG4gICAgICAgIHByaXZhdGUgaW5qZXRvcjogSW5qZWN0b3JcclxuICAgICkge1xyXG4gICAgICAgIC8vIOWboOS4uuazqOS9jee9rueahOmXrumimO+8jOi/meagt+WtkOaLv+S4jeWIsFxyXG4gICAgICAgIC8vIHRoaXMuc3RhdGVNYWNoaW5lU2VyID0gdGhpcy5pbmpldG9yLmdldChTdGF0ZU1hY2hpbmVTZXJ2aWNlKTtcclxuICAgIH1cclxuICAgIHB1YmxpYyBzd2l0Y2hTdGF0dXMoKSB7XHJcbiAgICAgICAgY29uc3QgcmVzdWx0OiBCZWhhdmlvclN1YmplY3Q8c3RyaW5nPiA9IG5ldyBCZWhhdmlvclN1YmplY3QoJ0NhbmNlbCcpO1xyXG4gICAgICAgIC8vICDliKTmlq3mtYHnqIvkvKDlj4IgIGZvcm1Db25maWdJZFxyXG4gICAgICAgIGxldCBmcmFtZUNvbnRleHQ6IEZyYW1lQ29udGV4dDtcclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICBmcmFtZUNvbnRleHQgPSB0aGlzWydjb250ZXh0J10uZnJhbWVDb250ZXh0XHJcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdjYW4gbm90IGZpbmQgZnJhbWVDb250ZXgnKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKGZyYW1lQ29udGV4dC51aVN0YXRlWydVSVN0YXRlSW5Qcm9jZXNzJ10gPT0gJ0FwcHJvdmluZycgJiYgZnJhbWVDb250ZXh0LnVpU3RhdGVbJ2Zvcm1Db25maWdJZCddKSB7XHJcbiAgICAgICAgICAgIHJlc3VsdC5uZXh0KCdFZGl0Jyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiByZXN1bHQ7XHJcbiAgICB9XHJcbn0iXX0=