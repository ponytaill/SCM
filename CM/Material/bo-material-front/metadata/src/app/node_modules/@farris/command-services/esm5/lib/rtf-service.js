import { Injectable } from '@angular/core';
import { EMPTY, Subject } from 'rxjs';
import { UID } from '@farris/devkit';
/*
 * @Author: aalizzwell
 * @Date: 2019-07-23 15:56:11
 * @Last Modified by: aalizzwell
 * @Last Modified time: 2019-11-27 15:31:36
 */
/**
 * RuntimeFrameworkService
 * @scope @FormModule
 */
// tslint:disable: no-string-literal disable: max-line-length
var RuntimeFrameworkService = /** @class */ (function () {
    function RuntimeFrameworkService() {
        this.rtfService = this.getService();
    }
    /**
     * 遍历获取rtf服务
     */
    RuntimeFrameworkService.prototype.getService = function () {
        var env = window;
        while (!env['gspframeworkService'] && env !== window.top && this.isSameOrigin(env)) {
            env = env.parent;
        }
        return env['gspframeworkService'] && env['gspframeworkService']['rtf'] || {};
    };
    // #region 导航服务
    /**
     * 打开菜单或应用
     * @param options options
     */
    RuntimeFrameworkService.prototype.openMenu = function (options) {
        if (this.rtfService && this.rtfService.hasOwnProperty('func') && typeof this.rtfService['func']['openMenu'] === 'function') {
            this.rtfService.func.openMenu(options);
        }
    };
    /**
     * 打开菜单或应用
     * @param options options
     */
    RuntimeFrameworkService.prototype.openMenu$ = function (options) {
        if (this.rtfService && this.rtfService.hasOwnProperty('func') && typeof this.rtfService['func']['openMenuByStream'] === 'function') {
            return this.rtfService.func.openMenuByStream(options);
        }
        return EMPTY;
    };
    /**
     * 获取导航实体数据
     * @param tabId tabid
     * @param callback callback
     * @param once once
     */
    RuntimeFrameworkService.prototype.getEntityParam = function (tabId, callback, once) {
        if (once === void 0) { once = true; }
        if (this.rtfService && this.rtfService.hasOwnProperty('func') && typeof this.rtfService['func']['getEntityParam'] === 'function') {
            this.rtfService.func.getEntityParam(tabId, callback, once);
        }
    };
    /**
     * 尝试关闭菜单或应用
     * @param options optins
     */
    RuntimeFrameworkService.prototype.beforeCloseMenu = function (options) {
        if (this.rtfService && this.rtfService.hasOwnProperty('func') && typeof this.rtfService['func']['beforeClose'] === 'function') {
            this.rtfService.func.beforeClose(options);
        }
    };
    /**
     * 关闭菜单
     * @param options options
     */
    RuntimeFrameworkService.prototype.closeMenu = function (options) {
        if (this.rtfService && this.rtfService.hasOwnProperty('func') && typeof this.rtfService['func']['close'] === 'function') {
            this.rtfService.func.close(options);
        }
    };
    /**
     * 获取菜单静态参数
     * @param funcId 菜单id
     * @param callback 回调
     */
    RuntimeFrameworkService.prototype.getMenuParams = function (funcId, callback) {
        if (this.rtfService && this.rtfService.hasOwnProperty('func') && typeof this.rtfService['func']['getMenuParams'] === 'function') {
            this.rtfService.func.getMenuParams(funcId, callback);
        }
    };
    /**
     * 添加事件监听
     */
    RuntimeFrameworkService.prototype.addEventListener = function (token, handler, options) {
        if (this.rtfService && this.rtfService.hasOwnProperty('frmEvent') && typeof this.rtfService['frmEvent']['eventListener'] === 'function') {
            this.rtfService.frmEvent.eventListener(token, handler, options);
        }
    };
    /**
     * 获取运行框架菜单切换控制事件
     * @returns Observable<any>
     */
    RuntimeFrameworkService.prototype.getMenuSwitchControlEvent = function () {
        var subject = new Subject();
        var frmEvent = this.rtfService && this.rtfService.frmEvent || null;
        if (frmEvent) {
            var tabId_1 = this.tabId;
            var options_1 = this.params;
            window.setTimeout(function () {
                frmEvent.eventListener(tabId_1, function (response) {
                    var menuSwitchControl = response && response.menuSwitchControl || null;
                    if (menuSwitchControl && menuSwitchControl.key === tabId_1) {
                        subject.next(menuSwitchControl.value);
                    }
                    else {
                        subject.next(null);
                    }
                }, options_1);
            }, 0);
        }
        return subject;
    };
    Object.defineProperty(RuntimeFrameworkService.prototype, "params", {
        //#endregion
        // #region 适配层属性
        get: function () {
            if (this.rtfService && this.rtfService.hasOwnProperty('session') && typeof this.rtfService['session']['getCommonVariable'] === 'function') {
                return this.rtfService['session']['getCommonVariable']();
            }
            return null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RuntimeFrameworkService.prototype, "tabId", {
        /**
         * 获取tabId
         */
        get: function () {
            return this.params && this.params['tabId'] || null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RuntimeFrameworkService.prototype, "formToken", {
        /**
         * 获取formToken
         */
        get: function () {
            return this.params && this.params['formToken'] || null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RuntimeFrameworkService.prototype, "funcId", {
        /**
         * 获取funcId
         */
        get: function () {
            return this.params && this.params['funcId'] || null;
        },
        enumerable: true,
        configurable: true
    });
    // #endregion
    // #region 事件通信
    /**
     * 注册主题
     * @param code 主题的标识
     * @param options token生成规则
     * @param subject 自定义主题，默认使用Subject
     * @returns string 注册成功后返回主题的唯一标识
     */
    RuntimeFrameworkService.prototype.subjectRegister = function (code, options, subject) {
        if (this.rtfService && this.rtfService.hasOwnProperty('broadcast') && typeof this.rtfService['broadcast']['subjectRegister'] === 'function') {
            return this.rtfService.broadcast.subjectRegister(code, options, subject);
        }
        return null;
    };
    /**
     * 移除主题
     * @param token 主题唯一标识
     */
    RuntimeFrameworkService.prototype.subjectRemove = function (token) {
        if (this.rtfService && this.rtfService.hasOwnProperty('broadcast') && typeof this.rtfService['broadcast']['subjectRemove'] === 'function') {
            this.rtfService.broadcast.subjectRemove(token);
        }
    };
    /**
     * 给主题发送消息
     * @param token 主题标识
     * @param info 消息
     */
    RuntimeFrameworkService.prototype.subjectNotify = function (token, info) {
        if (this.rtfService && this.rtfService.hasOwnProperty('broadcast') && typeof this.rtfService['broadcast']['notify'] === 'function') {
            this.rtfService.broadcast.notify(token, info);
        }
    };
    /**
     * 注册主题监听器
     * @param token 主题标识
     * @param handler 主题处理器
     * @param observerToken 监听器id(可选)
     * @returns 监听器Id
     * @description 监听主题消息，监听成功返回当前监听者的唯一标识
     */
    RuntimeFrameworkService.prototype.subjectResponse = function (token, handler, observerToken) {
        if (this.rtfService && this.rtfService.hasOwnProperty('broadcast') && typeof this.rtfService['broadcast']['response'] === 'function') {
            var code = observerToken;
            if (typeof observerToken === 'undefined' || !observerToken || observerToken.length < 1) {
                code = UID.create();
            }
            this.rtfService.broadcast.response(token, code, handler);
            return code;
        }
        return null;
    };
    /**
     * 取消对主题的监听
     * @param token 主题标识
     * @param observerToken 监听器标识
     */
    RuntimeFrameworkService.prototype.responseUnSubscribe = function (token, observerToken) {
        if (this.rtfService && this.rtfService.hasOwnProperty('broadcast') && typeof this.rtfService['broadcast']['responseUnSubscribe'] === 'function') {
            this.rtfService.broadcast.responseUnSubscribe(token, observerToken);
        }
    };
    // #endregion
    // #region 工具函数
    /**
     * 是否同源
     * @param environment window
     */
    RuntimeFrameworkService.prototype.isSameOrigin = function (environment) {
        var host = window.location.host;
        try {
            if (environment && environment.location && typeof environment.location.host !== 'undefined') {
                return environment.location.host === host;
            }
        }
        catch (e) {
            return false;
        }
        return false;
    };
    RuntimeFrameworkService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    RuntimeFrameworkService.ctorParameters = function () { return []; };
    return RuntimeFrameworkService;
}());
export { RuntimeFrameworkService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicnRmLXNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL2NvbW1hbmQtc2VydmljZXMvIiwic291cmNlcyI6WyJsaWIvcnRmLXNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsS0FBSyxFQUFjLE9BQU8sRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUNsRCxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFckM7Ozs7O0dBS0c7QUFHSDs7O0dBR0c7QUFDSCw2REFBNkQ7QUFDN0Q7SUFHRTtRQUNFLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO0lBQ3RDLENBQUM7SUFDRDs7T0FFRztJQUNLLDRDQUFVLEdBQWxCO1FBQ0UsSUFBSSxHQUFHLEdBQVcsTUFBTSxDQUFDO1FBQ3pCLE9BQU8sQ0FBQyxHQUFHLENBQUMscUJBQXFCLENBQUMsSUFBSSxHQUFHLEtBQUssTUFBTSxDQUFDLEdBQUcsSUFBSSxJQUFJLENBQUMsWUFBWSxDQUFDLEdBQUcsQ0FBQyxFQUFFO1lBQ2xGLEdBQUcsR0FBRyxHQUFHLENBQUMsTUFBTSxDQUFDO1NBQ2xCO1FBQ0QsT0FBTyxHQUFHLENBQUMscUJBQXFCLENBQUMsSUFBSSxHQUFHLENBQUMscUJBQXFCLENBQUMsQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDL0UsQ0FBQztJQUNELGVBQWU7SUFDZjs7O09BR0c7SUFDSCwwQ0FBUSxHQUFSLFVBQVMsT0FBWTtRQUNuQixJQUFJLElBQUksQ0FBQyxVQUFVLElBQUksSUFBSSxDQUFDLFVBQVUsQ0FBQyxjQUFjLENBQUMsTUFBTSxDQUFDLElBQUksT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDLFVBQVUsQ0FBQyxLQUFLLFVBQVUsRUFBRTtZQUMxSCxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLENBQUM7U0FDeEM7SUFDSCxDQUFDO0lBQ0Q7OztPQUdHO0lBQ0gsMkNBQVMsR0FBVCxVQUFVLE9BQVk7UUFDcEIsSUFBSSxJQUFJLENBQUMsVUFBVSxJQUFJLElBQUksQ0FBQyxVQUFVLENBQUMsY0FBYyxDQUFDLE1BQU0sQ0FBQyxJQUFJLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsQ0FBQyxrQkFBa0IsQ0FBQyxLQUFLLFVBQVUsRUFBRTtZQUNsSSxPQUFPLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLE9BQU8sQ0FBQyxDQUFDO1NBQ3ZEO1FBQ0QsT0FBTyxLQUFLLENBQUM7SUFDZixDQUFDO0lBQ0Q7Ozs7O09BS0c7SUFDSCxnREFBYyxHQUFkLFVBQWUsS0FBYSxFQUFFLFFBQWEsRUFBRSxJQUFvQjtRQUFwQixxQkFBQSxFQUFBLFdBQW9CO1FBQy9ELElBQUksSUFBSSxDQUFDLFVBQVUsSUFBSSxJQUFJLENBQUMsVUFBVSxDQUFDLGNBQWMsQ0FBQyxNQUFNLENBQUMsSUFBSSxPQUFPLElBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLENBQUMsZ0JBQWdCLENBQUMsS0FBSyxVQUFVLEVBQUU7WUFDaEksSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLEtBQUssRUFBRSxRQUFRLEVBQUUsSUFBSSxDQUFDLENBQUM7U0FDNUQ7SUFDSCxDQUFDO0lBQ0Q7OztPQUdHO0lBQ0gsaURBQWUsR0FBZixVQUFnQixPQUFZO1FBQzFCLElBQUksSUFBSSxDQUFDLFVBQVUsSUFBSSxJQUFJLENBQUMsVUFBVSxDQUFDLGNBQWMsQ0FBQyxNQUFNLENBQUMsSUFBSSxPQUFPLElBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLENBQUMsYUFBYSxDQUFDLEtBQUssVUFBVSxFQUFFO1lBQzdILElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUMsQ0FBQztTQUMzQztJQUNILENBQUM7SUFDRDs7O09BR0c7SUFDSCwyQ0FBUyxHQUFULFVBQVUsT0FBWTtRQUNwQixJQUFJLElBQUksQ0FBQyxVQUFVLElBQUksSUFBSSxDQUFDLFVBQVUsQ0FBQyxjQUFjLENBQUMsTUFBTSxDQUFDLElBQUksT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDLE9BQU8sQ0FBQyxLQUFLLFVBQVUsRUFBRTtZQUN2SCxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUM7U0FDckM7SUFDSCxDQUFDO0lBQ0Q7Ozs7T0FJRztJQUNILCtDQUFhLEdBQWIsVUFBYyxNQUFjLEVBQUUsUUFBMEI7UUFDdEQsSUFBSSxJQUFJLENBQUMsVUFBVSxJQUFJLElBQUksQ0FBQyxVQUFVLENBQUMsY0FBYyxDQUFDLE1BQU0sQ0FBQyxJQUFJLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsQ0FBQyxlQUFlLENBQUMsS0FBSyxVQUFVLEVBQUU7WUFDL0gsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLE1BQU0sRUFBRSxRQUFRLENBQUMsQ0FBQztTQUN0RDtJQUNILENBQUM7SUFDRDs7T0FFRztJQUNILGtEQUFnQixHQUFoQixVQUFpQixLQUFhLEVBQUUsT0FBNkIsRUFBRSxPQUFZO1FBQ3pFLElBQUksSUFBSSxDQUFDLFVBQVUsSUFBSSxJQUFJLENBQUMsVUFBVSxDQUFDLGNBQWMsQ0FBQyxVQUFVLENBQUMsSUFBSSxPQUFPLElBQUksQ0FBQyxVQUFVLENBQUMsVUFBVSxDQUFDLENBQUMsZUFBZSxDQUFDLEtBQUssVUFBVSxFQUFFO1lBQ3ZJLElBQUksQ0FBQyxVQUFVLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxLQUFLLEVBQUUsT0FBTyxFQUFFLE9BQU8sQ0FBQyxDQUFDO1NBQ2pFO0lBQ0gsQ0FBQztJQUNEOzs7T0FHRztJQUNJLDJEQUF5QixHQUFoQztRQUNFLElBQU0sT0FBTyxHQUFHLElBQUksT0FBTyxFQUFPLENBQUM7UUFDbkMsSUFBTSxRQUFRLEdBQUcsSUFBSSxDQUFDLFVBQVUsSUFBSSxJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsSUFBSSxJQUFJLENBQUM7UUFDckUsSUFBSSxRQUFRLEVBQUU7WUFDWixJQUFNLE9BQUssR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDO1lBQ3pCLElBQU0sU0FBTyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUM7WUFDNUIsTUFBTSxDQUFDLFVBQVUsQ0FBQztnQkFDaEIsUUFBUSxDQUFDLGFBQWEsQ0FBQyxPQUFLLEVBQUUsVUFBQyxRQUE4RTtvQkFDM0csSUFBTSxpQkFBaUIsR0FBRyxRQUFRLElBQUksUUFBUSxDQUFDLGlCQUFpQixJQUFJLElBQUksQ0FBQztvQkFDekUsSUFBSSxpQkFBaUIsSUFBSSxpQkFBaUIsQ0FBQyxHQUFHLEtBQUssT0FBSyxFQUFFO3dCQUN4RCxPQUFPLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLEtBQUssQ0FBQyxDQUFDO3FCQUN2Qzt5QkFBTTt3QkFDTCxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO3FCQUNwQjtnQkFDSCxDQUFDLEVBQUUsU0FBTyxDQUFDLENBQUM7WUFDZCxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7U0FDUDtRQUNELE9BQU8sT0FBTyxDQUFDO0lBQ2pCLENBQUM7SUFJRCxzQkFBVywyQ0FBTTtRQUhqQixZQUFZO1FBRVosZ0JBQWdCO2FBQ2hCO1lBQ0UsSUFBSSxJQUFJLENBQUMsVUFBVSxJQUFJLElBQUksQ0FBQyxVQUFVLENBQUMsY0FBYyxDQUFDLFNBQVMsQ0FBQyxJQUFJLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQyxTQUFTLENBQUMsQ0FBQyxtQkFBbUIsQ0FBQyxLQUFLLFVBQVUsRUFBRTtnQkFDekksT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDLFNBQVMsQ0FBQyxDQUFDLG1CQUFtQixDQUFDLEVBQUUsQ0FBQzthQUMxRDtZQUNELE9BQU8sSUFBSSxDQUFDO1FBQ2QsQ0FBQzs7O09BQUE7SUFJRCxzQkFBVywwQ0FBSztRQUhoQjs7V0FFRzthQUNIO1lBQ0UsT0FBTyxJQUFJLENBQUMsTUFBTSxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLElBQUksSUFBSSxDQUFDO1FBQ3JELENBQUM7OztPQUFBO0lBSUQsc0JBQVcsOENBQVM7UUFIcEI7O1dBRUc7YUFDSDtZQUNFLE9BQU8sSUFBSSxDQUFDLE1BQU0sSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxJQUFJLElBQUksQ0FBQztRQUN6RCxDQUFDOzs7T0FBQTtJQUlELHNCQUFXLDJDQUFNO1FBSGpCOztXQUVHO2FBQ0g7WUFDRSxPQUFPLElBQUksQ0FBQyxNQUFNLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsSUFBSSxJQUFJLENBQUM7UUFDdEQsQ0FBQzs7O09BQUE7SUFDRCxhQUFhO0lBRWIsZUFBZTtJQUNmOzs7Ozs7T0FNRztJQUNJLGlEQUFlLEdBQXRCLFVBQXVCLElBQVksRUFBRSxPQUFZLEVBQUUsT0FBc0I7UUFDdkUsSUFBSSxJQUFJLENBQUMsVUFBVSxJQUFJLElBQUksQ0FBQyxVQUFVLENBQUMsY0FBYyxDQUFDLFdBQVcsQ0FBQyxJQUFJLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQyxXQUFXLENBQUMsQ0FBQyxpQkFBaUIsQ0FBQyxLQUFLLFVBQVUsRUFBRTtZQUMzSSxPQUFPLElBQUksQ0FBQyxVQUFVLENBQUMsU0FBUyxDQUFDLGVBQWUsQ0FBQyxJQUFJLEVBQUUsT0FBTyxFQUFFLE9BQU8sQ0FBQyxDQUFDO1NBQzFFO1FBQ0QsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBQ0Q7OztPQUdHO0lBQ0ksK0NBQWEsR0FBcEIsVUFBcUIsS0FBYTtRQUNoQyxJQUFJLElBQUksQ0FBQyxVQUFVLElBQUksSUFBSSxDQUFDLFVBQVUsQ0FBQyxjQUFjLENBQUMsV0FBVyxDQUFDLElBQUksT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDLFdBQVcsQ0FBQyxDQUFDLGVBQWUsQ0FBQyxLQUFLLFVBQVUsRUFBRTtZQUN6SSxJQUFJLENBQUMsVUFBVSxDQUFDLFNBQVMsQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLENBQUM7U0FDaEQ7SUFDSCxDQUFDO0lBQ0Q7Ozs7T0FJRztJQUNJLCtDQUFhLEdBQXBCLFVBQXFCLEtBQWEsRUFBRSxJQUFTO1FBQzNDLElBQUksSUFBSSxDQUFDLFVBQVUsSUFBSSxJQUFJLENBQUMsVUFBVSxDQUFDLGNBQWMsQ0FBQyxXQUFXLENBQUMsSUFBSSxPQUFPLElBQUksQ0FBQyxVQUFVLENBQUMsV0FBVyxDQUFDLENBQUMsUUFBUSxDQUFDLEtBQUssVUFBVSxFQUFFO1lBQ2xJLElBQUksQ0FBQyxVQUFVLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLENBQUM7U0FDL0M7SUFDSCxDQUFDO0lBQ0Q7Ozs7Ozs7T0FPRztJQUNJLGlEQUFlLEdBQXRCLFVBQXVCLEtBQWEsRUFBRSxPQUE0QixFQUFFLGFBQXNCO1FBQ3hGLElBQUksSUFBSSxDQUFDLFVBQVUsSUFBSSxJQUFJLENBQUMsVUFBVSxDQUFDLGNBQWMsQ0FBQyxXQUFXLENBQUMsSUFBSSxPQUFPLElBQUksQ0FBQyxVQUFVLENBQUMsV0FBVyxDQUFDLENBQUMsVUFBVSxDQUFDLEtBQUssVUFBVSxFQUFFO1lBQ3BJLElBQUksSUFBSSxHQUFHLGFBQWEsQ0FBQztZQUN6QixJQUFJLE9BQU8sYUFBYSxLQUFLLFdBQVcsSUFBSSxDQUFDLGFBQWEsSUFBSSxhQUFhLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtnQkFDdEYsSUFBSSxHQUFHLEdBQUcsQ0FBQyxNQUFNLEVBQUUsQ0FBQzthQUNyQjtZQUNELElBQUksQ0FBQyxVQUFVLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxLQUFLLEVBQUUsSUFBSSxFQUFFLE9BQU8sQ0FBQyxDQUFDO1lBQ3pELE9BQU8sSUFBSSxDQUFDO1NBQ2I7UUFDRCxPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7SUFDRDs7OztPQUlHO0lBQ0kscURBQW1CLEdBQTFCLFVBQTJCLEtBQWEsRUFBRSxhQUFxQjtRQUM3RCxJQUFJLElBQUksQ0FBQyxVQUFVLElBQUksSUFBSSxDQUFDLFVBQVUsQ0FBQyxjQUFjLENBQUMsV0FBVyxDQUFDLElBQUksT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDLFdBQVcsQ0FBQyxDQUFDLHFCQUFxQixDQUFDLEtBQUssVUFBVSxFQUFFO1lBQy9JLElBQUksQ0FBQyxVQUFVLENBQUMsU0FBUyxDQUFDLG1CQUFtQixDQUFDLEtBQUssRUFBRSxhQUFhLENBQUMsQ0FBQztTQUNyRTtJQUNILENBQUM7SUFDRCxhQUFhO0lBRWIsZUFBZTtJQUNmOzs7T0FHRztJQUNLLDhDQUFZLEdBQXBCLFVBQXFCLFdBQW1CO1FBQ3RDLElBQU0sSUFBSSxHQUFHLE1BQU0sQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDO1FBQ2xDLElBQUk7WUFDRixJQUFJLFdBQVcsSUFBSSxXQUFXLENBQUMsUUFBUSxJQUFJLE9BQU8sV0FBVyxDQUFDLFFBQVEsQ0FBQyxJQUFJLEtBQUssV0FBVyxFQUFFO2dCQUMzRixPQUFPLFdBQVcsQ0FBQyxRQUFRLENBQUMsSUFBSSxLQUFLLElBQUksQ0FBQzthQUMzQztTQUNGO1FBQUMsT0FBTyxDQUFDLEVBQUU7WUFDVixPQUFPLEtBQUssQ0FBQztTQUNkO1FBRUQsT0FBTyxLQUFLLENBQUM7SUFDZixDQUFDOztnQkF2TkYsVUFBVTs7OztJQXlOWCw4QkFBQztDQUFBLEFBek5ELElBeU5DO1NBeE5ZLHVCQUF1QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEVNUFRZLCBPYnNlcnZhYmxlLCBTdWJqZWN0IH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBVSUQgfSBmcm9tICdAZmFycmlzL2RldmtpdCc7XG5pbXBvcnQgeyBzd2l0Y2hNYXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG4vKlxuICogQEF1dGhvcjogYWFsaXp6d2VsbCBcbiAqIEBEYXRlOiAyMDE5LTA3LTIzIDE1OjU2OjExIFxuICogQExhc3QgTW9kaWZpZWQgYnk6IGFhbGl6endlbGxcbiAqIEBMYXN0IE1vZGlmaWVkIHRpbWU6IDIwMTktMTEtMjcgMTU6MzE6MzZcbiAqL1xuXG5cbi8qKlxuICogUnVudGltZUZyYW1ld29ya1NlcnZpY2VcbiAqIEBzY29wZSBARm9ybU1vZHVsZVxuICovXG4vLyB0c2xpbnQ6ZGlzYWJsZTogbm8tc3RyaW5nLWxpdGVyYWwgZGlzYWJsZTogbWF4LWxpbmUtbGVuZ3RoXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgUnVudGltZUZyYW1ld29ya1NlcnZpY2Uge1xuICBwcml2YXRlIHJ0ZlNlcnZpY2U6IGFueTtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5ydGZTZXJ2aWNlID0gdGhpcy5nZXRTZXJ2aWNlKCk7XG4gIH1cbiAgLyoqXG4gICAqIOmBjeWOhuiOt+WPlnJ0ZuacjeWKoVxuICAgKi9cbiAgcHJpdmF0ZSBnZXRTZXJ2aWNlKCkge1xuICAgIGxldCBlbnY6IFdpbmRvdyA9IHdpbmRvdztcbiAgICB3aGlsZSAoIWVudlsnZ3NwZnJhbWV3b3JrU2VydmljZSddICYmIGVudiAhPT0gd2luZG93LnRvcCAmJiB0aGlzLmlzU2FtZU9yaWdpbihlbnYpKSB7XG4gICAgICBlbnYgPSBlbnYucGFyZW50O1xuICAgIH1cbiAgICByZXR1cm4gZW52Wydnc3BmcmFtZXdvcmtTZXJ2aWNlJ10gJiYgZW52Wydnc3BmcmFtZXdvcmtTZXJ2aWNlJ11bJ3J0ZiddIHx8IHt9O1xuICB9XG4gIC8vICNyZWdpb24g5a+86Iiq5pyN5YqhXG4gIC8qKlxuICAgKiDmiZPlvIDoj5zljZXmiJblupTnlKhcbiAgICogQHBhcmFtIG9wdGlvbnMgb3B0aW9uc1xuICAgKi9cbiAgb3Blbk1lbnUob3B0aW9uczogYW55KSB7XG4gICAgaWYgKHRoaXMucnRmU2VydmljZSAmJiB0aGlzLnJ0ZlNlcnZpY2UuaGFzT3duUHJvcGVydHkoJ2Z1bmMnKSAmJiB0eXBlb2YgdGhpcy5ydGZTZXJ2aWNlWydmdW5jJ11bJ29wZW5NZW51J10gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHRoaXMucnRmU2VydmljZS5mdW5jLm9wZW5NZW51KG9wdGlvbnMpO1xuICAgIH1cbiAgfVxuICAvKipcbiAgICog5omT5byA6I+c5Y2V5oiW5bqU55SoXG4gICAqIEBwYXJhbSBvcHRpb25zIG9wdGlvbnNcbiAgICovXG4gIG9wZW5NZW51JChvcHRpb25zOiBhbnkpIHtcbiAgICBpZiAodGhpcy5ydGZTZXJ2aWNlICYmIHRoaXMucnRmU2VydmljZS5oYXNPd25Qcm9wZXJ0eSgnZnVuYycpICYmIHR5cGVvZiB0aGlzLnJ0ZlNlcnZpY2VbJ2Z1bmMnXVsnb3Blbk1lbnVCeVN0cmVhbSddID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICByZXR1cm4gdGhpcy5ydGZTZXJ2aWNlLmZ1bmMub3Blbk1lbnVCeVN0cmVhbShvcHRpb25zKTtcbiAgICB9XG4gICAgcmV0dXJuIEVNUFRZO1xuICB9XG4gIC8qKlxuICAgKiDojrflj5blr7zoiKrlrp7kvZPmlbDmja5cbiAgICogQHBhcmFtIHRhYklkIHRhYmlkXG4gICAqIEBwYXJhbSBjYWxsYmFjayBjYWxsYmFja1xuICAgKiBAcGFyYW0gb25jZSBvbmNlXG4gICAqL1xuICBnZXRFbnRpdHlQYXJhbSh0YWJJZDogc3RyaW5nLCBjYWxsYmFjazogYW55LCBvbmNlOiBib29sZWFuID0gdHJ1ZSkge1xuICAgIGlmICh0aGlzLnJ0ZlNlcnZpY2UgJiYgdGhpcy5ydGZTZXJ2aWNlLmhhc093blByb3BlcnR5KCdmdW5jJykgJiYgdHlwZW9mIHRoaXMucnRmU2VydmljZVsnZnVuYyddWydnZXRFbnRpdHlQYXJhbSddID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICB0aGlzLnJ0ZlNlcnZpY2UuZnVuYy5nZXRFbnRpdHlQYXJhbSh0YWJJZCwgY2FsbGJhY2ssIG9uY2UpO1xuICAgIH1cbiAgfVxuICAvKipcbiAgICog5bCd6K+V5YWz6Zet6I+c5Y2V5oiW5bqU55SoXG4gICAqIEBwYXJhbSBvcHRpb25zIG9wdGluc1xuICAgKi9cbiAgYmVmb3JlQ2xvc2VNZW51KG9wdGlvbnM6IGFueSkge1xuICAgIGlmICh0aGlzLnJ0ZlNlcnZpY2UgJiYgdGhpcy5ydGZTZXJ2aWNlLmhhc093blByb3BlcnR5KCdmdW5jJykgJiYgdHlwZW9mIHRoaXMucnRmU2VydmljZVsnZnVuYyddWydiZWZvcmVDbG9zZSddID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICB0aGlzLnJ0ZlNlcnZpY2UuZnVuYy5iZWZvcmVDbG9zZShvcHRpb25zKTtcbiAgICB9XG4gIH1cbiAgLyoqXG4gICAqIOWFs+mXreiPnOWNlVxuICAgKiBAcGFyYW0gb3B0aW9ucyBvcHRpb25zXG4gICAqL1xuICBjbG9zZU1lbnUob3B0aW9uczogYW55KSB7XG4gICAgaWYgKHRoaXMucnRmU2VydmljZSAmJiB0aGlzLnJ0ZlNlcnZpY2UuaGFzT3duUHJvcGVydHkoJ2Z1bmMnKSAmJiB0eXBlb2YgdGhpcy5ydGZTZXJ2aWNlWydmdW5jJ11bJ2Nsb3NlJ10gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHRoaXMucnRmU2VydmljZS5mdW5jLmNsb3NlKG9wdGlvbnMpO1xuICAgIH1cbiAgfVxuICAvKipcbiAgICog6I635Y+W6I+c5Y2V6Z2Z5oCB5Y+C5pWwXG4gICAqIEBwYXJhbSBmdW5jSWQg6I+c5Y2VaWRcbiAgICogQHBhcmFtIGNhbGxiYWNrIOWbnuiwg1xuICAgKi9cbiAgZ2V0TWVudVBhcmFtcyhmdW5jSWQ6IHN0cmluZywgY2FsbGJhY2s6IChwYXJhbXMpID0+IHZvaWQpIHtcbiAgICBpZiAodGhpcy5ydGZTZXJ2aWNlICYmIHRoaXMucnRmU2VydmljZS5oYXNPd25Qcm9wZXJ0eSgnZnVuYycpICYmIHR5cGVvZiB0aGlzLnJ0ZlNlcnZpY2VbJ2Z1bmMnXVsnZ2V0TWVudVBhcmFtcyddID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICB0aGlzLnJ0ZlNlcnZpY2UuZnVuYy5nZXRNZW51UGFyYW1zKGZ1bmNJZCwgY2FsbGJhY2spO1xuICAgIH1cbiAgfVxuICAvKipcbiAgICog5re75Yqg5LqL5Lu255uR5ZCsXG4gICAqL1xuICBhZGRFdmVudExpc3RlbmVyKHRva2VuOiBzdHJpbmcsIGhhbmRsZXI6ICh2YWx1ZTogYW55KSA9PiB2b2lkLCBvcHRpb25zOiBhbnkpIHtcbiAgICBpZiAodGhpcy5ydGZTZXJ2aWNlICYmIHRoaXMucnRmU2VydmljZS5oYXNPd25Qcm9wZXJ0eSgnZnJtRXZlbnQnKSAmJiB0eXBlb2YgdGhpcy5ydGZTZXJ2aWNlWydmcm1FdmVudCddWydldmVudExpc3RlbmVyJ10gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHRoaXMucnRmU2VydmljZS5mcm1FdmVudC5ldmVudExpc3RlbmVyKHRva2VuLCBoYW5kbGVyLCBvcHRpb25zKTtcbiAgICB9XG4gIH1cbiAgLyoqXG4gICAqIOiOt+WPlui/kOihjOahhuaetuiPnOWNleWIh+aNouaOp+WItuS6i+S7tlxuICAgKiBAcmV0dXJucyBPYnNlcnZhYmxlPGFueT5cbiAgICovXG4gIHB1YmxpYyBnZXRNZW51U3dpdGNoQ29udHJvbEV2ZW50KCk6IE9ic2VydmFibGU8YW55PiB7XG4gICAgY29uc3Qgc3ViamVjdCA9IG5ldyBTdWJqZWN0PGFueT4oKTtcbiAgICBjb25zdCBmcm1FdmVudCA9IHRoaXMucnRmU2VydmljZSAmJiB0aGlzLnJ0ZlNlcnZpY2UuZnJtRXZlbnQgfHwgbnVsbDtcbiAgICBpZiAoZnJtRXZlbnQpIHtcbiAgICAgIGNvbnN0IHRhYklkID0gdGhpcy50YWJJZDtcbiAgICAgIGNvbnN0IG9wdGlvbnMgPSB0aGlzLnBhcmFtcztcbiAgICAgIHdpbmRvdy5zZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgZnJtRXZlbnQuZXZlbnRMaXN0ZW5lcih0YWJJZCwgKHJlc3BvbnNlOiB7IG1lbnVTd2l0Y2hDb250cm9sOiB7IGtleTogYW55LCB2YWx1ZTogYW55IH0sIFtwcm9wOiBzdHJpbmddOiBhbnkgfSkgPT4ge1xuICAgICAgICAgIGNvbnN0IG1lbnVTd2l0Y2hDb250cm9sID0gcmVzcG9uc2UgJiYgcmVzcG9uc2UubWVudVN3aXRjaENvbnRyb2wgfHwgbnVsbDtcbiAgICAgICAgICBpZiAobWVudVN3aXRjaENvbnRyb2wgJiYgbWVudVN3aXRjaENvbnRyb2wua2V5ID09PSB0YWJJZCkge1xuICAgICAgICAgICAgc3ViamVjdC5uZXh0KG1lbnVTd2l0Y2hDb250cm9sLnZhbHVlKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgc3ViamVjdC5uZXh0KG51bGwpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSwgb3B0aW9ucyk7XG4gICAgICB9LCAwKTtcbiAgICB9XG4gICAgcmV0dXJuIHN1YmplY3Q7XG4gIH1cbiAgLy8jZW5kcmVnaW9uXG5cbiAgLy8gI3JlZ2lvbiDpgILphY3lsYLlsZ7mgKdcbiAgcHVibGljIGdldCBwYXJhbXMoKSB7XG4gICAgaWYgKHRoaXMucnRmU2VydmljZSAmJiB0aGlzLnJ0ZlNlcnZpY2UuaGFzT3duUHJvcGVydHkoJ3Nlc3Npb24nKSAmJiB0eXBlb2YgdGhpcy5ydGZTZXJ2aWNlWydzZXNzaW9uJ11bJ2dldENvbW1vblZhcmlhYmxlJ10gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHJldHVybiB0aGlzLnJ0ZlNlcnZpY2VbJ3Nlc3Npb24nXVsnZ2V0Q29tbW9uVmFyaWFibGUnXSgpO1xuICAgIH1cbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICAvKipcbiAgICog6I635Y+WdGFiSWRcbiAgICovXG4gIHB1YmxpYyBnZXQgdGFiSWQoKSB7XG4gICAgcmV0dXJuIHRoaXMucGFyYW1zICYmIHRoaXMucGFyYW1zWyd0YWJJZCddIHx8IG51bGw7XG4gIH1cbiAgLyoqXG4gICAqIOiOt+WPlmZvcm1Ub2tlblxuICAgKi9cbiAgcHVibGljIGdldCBmb3JtVG9rZW4oKSB7XG4gICAgcmV0dXJuIHRoaXMucGFyYW1zICYmIHRoaXMucGFyYW1zWydmb3JtVG9rZW4nXSB8fCBudWxsO1xuICB9XG4gIC8qKlxuICAgKiDojrflj5ZmdW5jSWRcbiAgICovXG4gIHB1YmxpYyBnZXQgZnVuY0lkKCkge1xuICAgIHJldHVybiB0aGlzLnBhcmFtcyAmJiB0aGlzLnBhcmFtc1snZnVuY0lkJ10gfHwgbnVsbDtcbiAgfVxuICAvLyAjZW5kcmVnaW9uXG5cbiAgLy8gI3JlZ2lvbiDkuovku7bpgJrkv6FcbiAgLyoqXG4gICAqIOazqOWGjOS4u+mimFxuICAgKiBAcGFyYW0gY29kZSDkuLvpopjnmoTmoIfor4ZcbiAgICogQHBhcmFtIG9wdGlvbnMgdG9rZW7nlJ/miJDop4TliJlcbiAgICogQHBhcmFtIHN1YmplY3Qg6Ieq5a6a5LmJ5Li76aKY77yM6buY6K6k5L2/55SoU3ViamVjdFxuICAgKiBAcmV0dXJucyBzdHJpbmcg5rOo5YaM5oiQ5Yqf5ZCO6L+U5Zue5Li76aKY55qE5ZSv5LiA5qCH6K+GXG4gICAqL1xuICBwdWJsaWMgc3ViamVjdFJlZ2lzdGVyKGNvZGU6IHN0cmluZywgb3B0aW9uczogYW55LCBzdWJqZWN0PzogU3ViamVjdDxhbnk+KTogc3RyaW5nIHtcbiAgICBpZiAodGhpcy5ydGZTZXJ2aWNlICYmIHRoaXMucnRmU2VydmljZS5oYXNPd25Qcm9wZXJ0eSgnYnJvYWRjYXN0JykgJiYgdHlwZW9mIHRoaXMucnRmU2VydmljZVsnYnJvYWRjYXN0J11bJ3N1YmplY3RSZWdpc3RlciddID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICByZXR1cm4gdGhpcy5ydGZTZXJ2aWNlLmJyb2FkY2FzdC5zdWJqZWN0UmVnaXN0ZXIoY29kZSwgb3B0aW9ucywgc3ViamVjdCk7XG4gICAgfVxuICAgIHJldHVybiBudWxsO1xuICB9XG4gIC8qKlxuICAgKiDnp7vpmaTkuLvpophcbiAgICogQHBhcmFtIHRva2VuIOS4u+mimOWUr+S4gOagh+ivhlxuICAgKi9cbiAgcHVibGljIHN1YmplY3RSZW1vdmUodG9rZW46IHN0cmluZykge1xuICAgIGlmICh0aGlzLnJ0ZlNlcnZpY2UgJiYgdGhpcy5ydGZTZXJ2aWNlLmhhc093blByb3BlcnR5KCdicm9hZGNhc3QnKSAmJiB0eXBlb2YgdGhpcy5ydGZTZXJ2aWNlWydicm9hZGNhc3QnXVsnc3ViamVjdFJlbW92ZSddID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICB0aGlzLnJ0ZlNlcnZpY2UuYnJvYWRjYXN0LnN1YmplY3RSZW1vdmUodG9rZW4pO1xuICAgIH1cbiAgfVxuICAvKipcbiAgICog57uZ5Li76aKY5Y+R6YCB5raI5oGvXG4gICAqIEBwYXJhbSB0b2tlbiDkuLvpopjmoIfor4ZcbiAgICogQHBhcmFtIGluZm8g5raI5oGvXG4gICAqL1xuICBwdWJsaWMgc3ViamVjdE5vdGlmeSh0b2tlbjogc3RyaW5nLCBpbmZvOiBhbnkpIHtcbiAgICBpZiAodGhpcy5ydGZTZXJ2aWNlICYmIHRoaXMucnRmU2VydmljZS5oYXNPd25Qcm9wZXJ0eSgnYnJvYWRjYXN0JykgJiYgdHlwZW9mIHRoaXMucnRmU2VydmljZVsnYnJvYWRjYXN0J11bJ25vdGlmeSddID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICB0aGlzLnJ0ZlNlcnZpY2UuYnJvYWRjYXN0Lm5vdGlmeSh0b2tlbiwgaW5mbyk7XG4gICAgfVxuICB9XG4gIC8qKlxuICAgKiDms6jlhozkuLvpopjnm5HlkKzlmahcbiAgICogQHBhcmFtIHRva2VuIOS4u+mimOagh+ivhlxuICAgKiBAcGFyYW0gaGFuZGxlciDkuLvpopjlpITnkIblmahcbiAgICogQHBhcmFtIG9ic2VydmVyVG9rZW4g55uR5ZCs5ZmoaWQo5Y+v6YCJKVxuICAgKiBAcmV0dXJucyDnm5HlkKzlmahJZFxuICAgKiBAZGVzY3JpcHRpb24g55uR5ZCs5Li76aKY5raI5oGv77yM55uR5ZCs5oiQ5Yqf6L+U5Zue5b2T5YmN55uR5ZCs6ICF55qE5ZSv5LiA5qCH6K+GXG4gICAqL1xuICBwdWJsaWMgc3ViamVjdFJlc3BvbnNlKHRva2VuOiBzdHJpbmcsIGhhbmRsZXI6IChkYXRhOiBhbnkpID0+IHZvaWQsIG9ic2VydmVyVG9rZW4/OiBzdHJpbmcpOiBzdHJpbmcge1xuICAgIGlmICh0aGlzLnJ0ZlNlcnZpY2UgJiYgdGhpcy5ydGZTZXJ2aWNlLmhhc093blByb3BlcnR5KCdicm9hZGNhc3QnKSAmJiB0eXBlb2YgdGhpcy5ydGZTZXJ2aWNlWydicm9hZGNhc3QnXVsncmVzcG9uc2UnXSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgbGV0IGNvZGUgPSBvYnNlcnZlclRva2VuO1xuICAgICAgaWYgKHR5cGVvZiBvYnNlcnZlclRva2VuID09PSAndW5kZWZpbmVkJyB8fCAhb2JzZXJ2ZXJUb2tlbiB8fCBvYnNlcnZlclRva2VuLmxlbmd0aCA8IDEpIHtcbiAgICAgICAgY29kZSA9IFVJRC5jcmVhdGUoKTtcbiAgICAgIH1cbiAgICAgIHRoaXMucnRmU2VydmljZS5icm9hZGNhc3QucmVzcG9uc2UodG9rZW4sIGNvZGUsIGhhbmRsZXIpO1xuICAgICAgcmV0dXJuIGNvZGU7XG4gICAgfVxuICAgIHJldHVybiBudWxsO1xuICB9XG4gIC8qKlxuICAgKiDlj5bmtojlr7nkuLvpopjnmoTnm5HlkKxcbiAgICogQHBhcmFtIHRva2VuIOS4u+mimOagh+ivhlxuICAgKiBAcGFyYW0gb2JzZXJ2ZXJUb2tlbiDnm5HlkKzlmajmoIfor4ZcbiAgICovXG4gIHB1YmxpYyByZXNwb25zZVVuU3Vic2NyaWJlKHRva2VuOiBzdHJpbmcsIG9ic2VydmVyVG9rZW46IHN0cmluZykge1xuICAgIGlmICh0aGlzLnJ0ZlNlcnZpY2UgJiYgdGhpcy5ydGZTZXJ2aWNlLmhhc093blByb3BlcnR5KCdicm9hZGNhc3QnKSAmJiB0eXBlb2YgdGhpcy5ydGZTZXJ2aWNlWydicm9hZGNhc3QnXVsncmVzcG9uc2VVblN1YnNjcmliZSddID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICB0aGlzLnJ0ZlNlcnZpY2UuYnJvYWRjYXN0LnJlc3BvbnNlVW5TdWJzY3JpYmUodG9rZW4sIG9ic2VydmVyVG9rZW4pO1xuICAgIH1cbiAgfVxuICAvLyAjZW5kcmVnaW9uXG5cbiAgLy8gI3JlZ2lvbiDlt6Xlhbflh73mlbBcbiAgLyoqXG4gICAqIOaYr+WQpuWQjOa6kFxuICAgKiBAcGFyYW0gZW52aXJvbm1lbnQgd2luZG93XG4gICAqL1xuICBwcml2YXRlIGlzU2FtZU9yaWdpbihlbnZpcm9ubWVudDogV2luZG93KSB7XG4gICAgY29uc3QgaG9zdCA9IHdpbmRvdy5sb2NhdGlvbi5ob3N0O1xuICAgIHRyeSB7XG4gICAgICBpZiAoZW52aXJvbm1lbnQgJiYgZW52aXJvbm1lbnQubG9jYXRpb24gJiYgdHlwZW9mIGVudmlyb25tZW50LmxvY2F0aW9uLmhvc3QgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHJldHVybiBlbnZpcm9ubWVudC5sb2NhdGlvbi5ob3N0ID09PSBob3N0O1xuICAgICAgfVxuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgLy8gI2VuZHJlZ2lvblxufVxuIl19