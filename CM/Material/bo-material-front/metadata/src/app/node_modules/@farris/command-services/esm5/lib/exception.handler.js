/*
 * @Author: aalizzwell
 * @Date: 2019-05-30 10:35:09
 * @Last Modified by: aalizzwell
 * @Last Modified time: 2019-06-15 19:22:13
 */
import { Injectable, Optional } from '@angular/core';
import { LanguageService } from './languag.service';
import { FormErrorService } from './error/form-error.service';
import { AppContext } from '@farris/devkit';
/**
 * 默认异常处理器
 * @scope 没有提供对应Provider
 */
var ExceptionHandler = /** @class */ (function () {
    function ExceptionHandler(formErrorService, languageService, applicationContext) {
        this.formErrorService = formErrorService;
        this.languageService = languageService;
        this.applicationContext = applicationContext;
        this.appContext = null;
        if (this.languageService == null) {
            this.languageService = LanguageService.getInstance();
        }
    }
    ExceptionHandler.prototype.setContext = function (applicationContext) {
        this.appContext = applicationContext;
    };
    ExceptionHandler.prototype.handle = function (error) {
        if (!!this.formErrorService) {
            this.formErrorService.exception(this.languageService.loadFailed, error);
        }
    };
    ExceptionHandler.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    ExceptionHandler.ctorParameters = function () { return [
        { type: FormErrorService },
        { type: LanguageService, decorators: [{ type: Optional }] },
        { type: AppContext }
    ]; };
    return ExceptionHandler;
}());
export { ExceptionHandler };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhjZXB0aW9uLmhhbmRsZXIuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL2NvbW1hbmQtc2VydmljZXMvIiwic291cmNlcyI6WyJsaWIvZXhjZXB0aW9uLmhhbmRsZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7O0dBS0c7QUFDSCxPQUFPLEVBQUUsVUFBVSxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNyRCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDcEQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDOUQsT0FBTyxFQUFxQixVQUFVLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUUvRDs7O0dBR0c7QUFDSDtJQUdFLDBCQUNVLGdCQUFrQyxFQUN0QixlQUFnQyxFQUM1QyxrQkFBOEI7UUFGOUIscUJBQWdCLEdBQWhCLGdCQUFnQixDQUFrQjtRQUN0QixvQkFBZSxHQUFmLGVBQWUsQ0FBaUI7UUFDNUMsdUJBQWtCLEdBQWxCLGtCQUFrQixDQUFZO1FBSmhDLGVBQVUsR0FBZSxJQUFJLENBQUM7UUFNcEMsSUFBSSxJQUFJLENBQUMsZUFBZSxJQUFJLElBQUksRUFBRTtZQUNoQyxJQUFJLENBQUMsZUFBZSxHQUFHLGVBQWUsQ0FBQyxXQUFXLEVBQUUsQ0FBQztTQUN0RDtJQUNILENBQUM7SUFDTSxxQ0FBVSxHQUFqQixVQUFrQixrQkFBOEI7UUFDOUMsSUFBSSxDQUFDLFVBQVUsR0FBRyxrQkFBa0IsQ0FBQztJQUN2QyxDQUFDO0lBQ00saUNBQU0sR0FBYixVQUFjLEtBQVU7UUFDdEIsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLGdCQUFnQixFQUFFO1lBQzNCLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxVQUFVLEVBQUUsS0FBSyxDQUFDLENBQUM7U0FDekU7SUFDSCxDQUFDOztnQkFuQkYsVUFBVTs7OztnQkFQRixnQkFBZ0I7Z0JBRGhCLGVBQWUsdUJBYW5CLFFBQVE7Z0JBWGUsVUFBVTs7SUEwQnRDLHVCQUFDO0NBQUEsQUFwQkQsSUFvQkM7QUFFRCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBAQXV0aG9yOiBhYWxpenp3ZWxsXG4gKiBARGF0ZTogMjAxOS0wNS0zMCAxMDozNTowOVxuICogQExhc3QgTW9kaWZpZWQgYnk6IGFhbGl6endlbGxcbiAqIEBMYXN0IE1vZGlmaWVkIHRpbWU6IDIwMTktMDYtMTUgMTk6MjI6MTNcbiAqL1xuaW1wb3J0IHsgSW5qZWN0YWJsZSwgT3B0aW9uYWwgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IExhbmd1YWdlU2VydmljZSB9IGZyb20gJy4vbGFuZ3VhZy5zZXJ2aWNlJztcbmltcG9ydCB7IEZvcm1FcnJvclNlcnZpY2UgfSBmcm9tICcuL2Vycm9yL2Zvcm0tZXJyb3Iuc2VydmljZSc7XG5pbXBvcnQgeyBJRXhjZXB0aW9uSGFuZGxlciwgQXBwQ29udGV4dCB9IGZyb20gJ0BmYXJyaXMvZGV2a2l0JztcblxuLyoqXG4gKiDpu5jorqTlvILluLjlpITnkIblmahcbiAqIEBzY29wZSDmsqHmnInmj5Dkvpvlr7nlupRQcm92aWRlclxuICovXG5ASW5qZWN0YWJsZSgpXG5jbGFzcyBFeGNlcHRpb25IYW5kbGVyIGltcGxlbWVudHMgSUV4Y2VwdGlvbkhhbmRsZXIge1xuICBwcml2YXRlIGFwcENvbnRleHQ6IEFwcENvbnRleHQgPSBudWxsO1xuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIGZvcm1FcnJvclNlcnZpY2U6IEZvcm1FcnJvclNlcnZpY2UsXG4gICAgQE9wdGlvbmFsKCkgcHJpdmF0ZSBsYW5ndWFnZVNlcnZpY2U6IExhbmd1YWdlU2VydmljZSxcbiAgICBwcml2YXRlIGFwcGxpY2F0aW9uQ29udGV4dDogQXBwQ29udGV4dCxcbiAgKSB7XG4gICAgaWYgKHRoaXMubGFuZ3VhZ2VTZXJ2aWNlID09IG51bGwpIHtcbiAgICAgIHRoaXMubGFuZ3VhZ2VTZXJ2aWNlID0gTGFuZ3VhZ2VTZXJ2aWNlLmdldEluc3RhbmNlKCk7XG4gICAgfVxuICB9XG4gIHB1YmxpYyBzZXRDb250ZXh0KGFwcGxpY2F0aW9uQ29udGV4dDogQXBwQ29udGV4dCkge1xuICAgIHRoaXMuYXBwQ29udGV4dCA9IGFwcGxpY2F0aW9uQ29udGV4dDtcbiAgfVxuICBwdWJsaWMgaGFuZGxlKGVycm9yOiBhbnkpIHtcbiAgICBpZiAoISF0aGlzLmZvcm1FcnJvclNlcnZpY2UpIHtcbiAgICAgIHRoaXMuZm9ybUVycm9yU2VydmljZS5leGNlcHRpb24odGhpcy5sYW5ndWFnZVNlcnZpY2UubG9hZEZhaWxlZCwgZXJyb3IpO1xuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgeyBFeGNlcHRpb25IYW5kbGVyIH07XG4iXX0=