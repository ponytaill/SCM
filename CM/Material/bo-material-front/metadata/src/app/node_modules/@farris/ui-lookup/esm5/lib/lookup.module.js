/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*
 * @Author: 疯狂秀才(Lucas Huang)
 * @Date: 2018-12-04 10:43:42
 * @LastEditors: 疯狂秀才(Lucas Huang)
 * @LastEditTime: 2019-09-26 13:33:30
 * @Company: Inspur
 * @Version: v0.0.1
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { FarrisCommonModule } from '@farris/ui-common';
import { InputGroupModule } from '@farris/ui-input-group';
import { LayoutModule } from '@farris/ui-layout';
import { LocaleModule } from '@farris/ui-locale';
import { FarrisDialogModule } from '@farris/ui-dialog';
import { MessagerModule } from '@farris/ui-messager';
import { DataTableModule, DataTableComponent } from '@farris/ui-datatable';
import { TreeTableModule, TreeTableComponent } from '@farris/ui-treetable';
import { LoadingModule } from '@farris/ui-loading';
import { LookupGridComponent } from './lookup-grid.component';
import { LookupComponent } from './lookup.component';
import { LookupLeftComponent } from './lookup-left.component';
import { LookupTabsComponent } from './lookup-tabs.component';
import { LookupTipDirective } from './lookup-tip.directive';
import { NotifyModule } from '@farris/ui-notify';
import { FarrisContextMenuModule } from '@farris/ui-context-menu';
import { LookupQuickSelectPanelComponent } from './quick-select/quick-select-panel.component';
import { LookupQuickSelectDirective } from './quick-select/lookup-quick-select.directive';
var LookupModule = /** @class */ (function () {
    function LookupModule() {
    }
    LookupModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        CommonModule,
                        FormsModule,
                        FarrisCommonModule.forRoot(),
                        FarrisDialogModule.forRoot(),
                        MessagerModule.forRoot(),
                        NotifyModule.forRoot(),
                        LoadingModule.forRoot({ delay: 1000 }),
                        InputGroupModule,
                        LayoutModule,
                        DataTableModule,
                        TreeTableModule,
                        FarrisContextMenuModule,
                        LocaleModule.forRoot()
                    ],
                    exports: [
                        LookupGridComponent, LookupComponent
                    ],
                    declarations: [
                        LookupGridComponent,
                        LookupComponent,
                        LookupLeftComponent,
                        LookupTabsComponent,
                        LookupTipDirective,
                        LookupQuickSelectPanelComponent,
                        LookupQuickSelectDirective
                    ],
                    providers: [],
                    entryComponents: [DataTableComponent, TreeTableComponent, LookupLeftComponent, LookupTabsComponent, LookupQuickSelectPanelComponent]
                },] }
    ];
    return LookupModule;
}());
export { LookupModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9va3VwLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvdWktbG9va3VwLyIsInNvdXJjZXMiOlsibGliL2xvb2t1cC5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBUUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRTdDLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQzFELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNqRCxPQUFPLEVBQUUsWUFBWSxFQUFDLE1BQU0sbUJBQW1CLENBQUM7QUFDaEQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDdkQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxlQUFlLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUMzRSxPQUFPLEVBQUUsZUFBZSxFQUFFLGtCQUFrQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDM0UsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBRW5ELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQzlELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNyRCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUM5RCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUM5RCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUM1RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDakQsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDbEUsT0FBTyxFQUFFLCtCQUErQixFQUFFLE1BQU0sNkNBQTZDLENBQUM7QUFDOUYsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0sOENBQThDLENBQUM7QUFDMUY7SUFBQTtJQStCMkIsQ0FBQzs7Z0JBL0IzQixRQUFRLFNBQUM7b0JBQ04sT0FBTyxFQUFFO3dCQUNMLFlBQVk7d0JBQ1osV0FBVzt3QkFDWCxrQkFBa0IsQ0FBQyxPQUFPLEVBQUU7d0JBQzVCLGtCQUFrQixDQUFDLE9BQU8sRUFBRTt3QkFDNUIsY0FBYyxDQUFDLE9BQU8sRUFBRTt3QkFDeEIsWUFBWSxDQUFDLE9BQU8sRUFBRTt3QkFDdEIsYUFBYSxDQUFDLE9BQU8sQ0FBQyxFQUFDLEtBQUssRUFBRSxJQUFJLEVBQUMsQ0FBQzt3QkFDcEMsZ0JBQWdCO3dCQUNoQixZQUFZO3dCQUNaLGVBQWU7d0JBQ2YsZUFBZTt3QkFDZix1QkFBdUI7d0JBQ3ZCLFlBQVksQ0FBQyxPQUFPLEVBQUU7cUJBQ3pCO29CQUNELE9BQU8sRUFBRTt3QkFDTCxtQkFBbUIsRUFBRSxlQUFlO3FCQUN2QztvQkFDRCxZQUFZLEVBQUU7d0JBQ1YsbUJBQW1CO3dCQUNuQixlQUFlO3dCQUNmLG1CQUFtQjt3QkFDbkIsbUJBQW1CO3dCQUNuQixrQkFBa0I7d0JBQ2xCLCtCQUErQjt3QkFDL0IsMEJBQTBCO3FCQUM3QjtvQkFDRCxTQUFTLEVBQUUsRUFBRTtvQkFDYixlQUFlLEVBQUUsQ0FBQyxrQkFBa0IsRUFBRSxrQkFBa0IsRUFBRSxtQkFBbUIsRUFBRSxtQkFBbUIsRUFBRSwrQkFBK0IsQ0FBQztpQkFDdkk7O0lBQzBCLG1CQUFDO0NBQUEsQUEvQjVCLElBK0I0QjtTQUFmLFlBQVkiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxyXG4gKiBAQXV0aG9yOiDnlq/ni4Lnp4DmiY0oTHVjYXMgSHVhbmcpXHJcbiAqIEBEYXRlOiAyMDE4LTEyLTA0IDEwOjQzOjQyXHJcbiAqIEBMYXN0RWRpdG9yczog55av54uC56eA5omNKEx1Y2FzIEh1YW5nKVxyXG4gKiBATGFzdEVkaXRUaW1lOiAyMDE5LTA5LTI2IDEzOjMzOjMwXHJcbiAqIEBDb21wYW55OiBJbnNwdXJcclxuICogQFZlcnNpb246IHYwLjAuMVxyXG4gKi9cclxuaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcclxuaW1wb3J0IHsgRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XHJcblxyXG5pbXBvcnQgeyBGYXJyaXNDb21tb25Nb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWNvbW1vbic7XHJcbmltcG9ydCB7IElucHV0R3JvdXBNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWlucHV0LWdyb3VwJztcclxuaW1wb3J0IHsgTGF5b3V0TW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1sYXlvdXQnO1xyXG5pbXBvcnQgeyBMb2NhbGVNb2R1bGV9IGZyb20gJ0BmYXJyaXMvdWktbG9jYWxlJztcclxuaW1wb3J0IHsgRmFycmlzRGlhbG9nTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1kaWFsb2cnO1xyXG5pbXBvcnQgeyBNZXNzYWdlck1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktbWVzc2FnZXInO1xyXG5pbXBvcnQgeyBEYXRhVGFibGVNb2R1bGUsIERhdGFUYWJsZUNvbXBvbmVudCB9IGZyb20gJ0BmYXJyaXMvdWktZGF0YXRhYmxlJztcclxuaW1wb3J0IHsgVHJlZVRhYmxlTW9kdWxlLCBUcmVlVGFibGVDb21wb25lbnQgfSBmcm9tICdAZmFycmlzL3VpLXRyZWV0YWJsZSc7XHJcbmltcG9ydCB7IExvYWRpbmdNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWxvYWRpbmcnO1xyXG5cclxuaW1wb3J0IHsgTG9va3VwR3JpZENvbXBvbmVudCB9IGZyb20gJy4vbG9va3VwLWdyaWQuY29tcG9uZW50JztcclxuaW1wb3J0IHsgTG9va3VwQ29tcG9uZW50IH0gZnJvbSAnLi9sb29rdXAuY29tcG9uZW50JztcclxuaW1wb3J0IHsgTG9va3VwTGVmdENvbXBvbmVudCB9IGZyb20gJy4vbG9va3VwLWxlZnQuY29tcG9uZW50JztcclxuaW1wb3J0IHsgTG9va3VwVGFic0NvbXBvbmVudCB9IGZyb20gJy4vbG9va3VwLXRhYnMuY29tcG9uZW50JztcclxuaW1wb3J0IHsgTG9va3VwVGlwRGlyZWN0aXZlIH0gZnJvbSAnLi9sb29rdXAtdGlwLmRpcmVjdGl2ZSc7XHJcbmltcG9ydCB7IE5vdGlmeU1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktbm90aWZ5JztcclxuaW1wb3J0IHsgRmFycmlzQ29udGV4dE1lbnVNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWNvbnRleHQtbWVudSc7XHJcbmltcG9ydCB7IExvb2t1cFF1aWNrU2VsZWN0UGFuZWxDb21wb25lbnQgfSBmcm9tICcuL3F1aWNrLXNlbGVjdC9xdWljay1zZWxlY3QtcGFuZWwuY29tcG9uZW50JztcclxuaW1wb3J0IHsgTG9va3VwUXVpY2tTZWxlY3REaXJlY3RpdmUgfSBmcm9tICcuL3F1aWNrLXNlbGVjdC9sb29rdXAtcXVpY2stc2VsZWN0LmRpcmVjdGl2ZSc7XHJcbkBOZ01vZHVsZSh7XHJcbiAgICBpbXBvcnRzOiBbXHJcbiAgICAgICAgQ29tbW9uTW9kdWxlLFxyXG4gICAgICAgIEZvcm1zTW9kdWxlLFxyXG4gICAgICAgIEZhcnJpc0NvbW1vbk1vZHVsZS5mb3JSb290KCksXHJcbiAgICAgICAgRmFycmlzRGlhbG9nTW9kdWxlLmZvclJvb3QoKSxcclxuICAgICAgICBNZXNzYWdlck1vZHVsZS5mb3JSb290KCksXHJcbiAgICAgICAgTm90aWZ5TW9kdWxlLmZvclJvb3QoKSxcclxuICAgICAgICBMb2FkaW5nTW9kdWxlLmZvclJvb3Qoe2RlbGF5OiAxMDAwfSksXHJcbiAgICAgICAgSW5wdXRHcm91cE1vZHVsZSxcclxuICAgICAgICBMYXlvdXRNb2R1bGUsXHJcbiAgICAgICAgRGF0YVRhYmxlTW9kdWxlLFxyXG4gICAgICAgIFRyZWVUYWJsZU1vZHVsZSxcclxuICAgICAgICBGYXJyaXNDb250ZXh0TWVudU1vZHVsZSxcclxuICAgICAgICBMb2NhbGVNb2R1bGUuZm9yUm9vdCgpXHJcbiAgICBdLFxyXG4gICAgZXhwb3J0czogW1xyXG4gICAgICAgIExvb2t1cEdyaWRDb21wb25lbnQsIExvb2t1cENvbXBvbmVudFxyXG4gICAgXSxcclxuICAgIGRlY2xhcmF0aW9uczogW1xyXG4gICAgICAgIExvb2t1cEdyaWRDb21wb25lbnQsXHJcbiAgICAgICAgTG9va3VwQ29tcG9uZW50LFxyXG4gICAgICAgIExvb2t1cExlZnRDb21wb25lbnQsXHJcbiAgICAgICAgTG9va3VwVGFic0NvbXBvbmVudCxcclxuICAgICAgICBMb29rdXBUaXBEaXJlY3RpdmUsXHJcbiAgICAgICAgTG9va3VwUXVpY2tTZWxlY3RQYW5lbENvbXBvbmVudCxcclxuICAgICAgICBMb29rdXBRdWlja1NlbGVjdERpcmVjdGl2ZVxyXG4gICAgXSxcclxuICAgIHByb3ZpZGVyczogW10sXHJcbiAgICBlbnRyeUNvbXBvbmVudHM6IFtEYXRhVGFibGVDb21wb25lbnQsIFRyZWVUYWJsZUNvbXBvbmVudCwgTG9va3VwTGVmdENvbXBvbmVudCwgTG9va3VwVGFic0NvbXBvbmVudCwgTG9va3VwUXVpY2tTZWxlY3RQYW5lbENvbXBvbmVudF1cclxufSlcclxuZXhwb3J0IGNsYXNzIExvb2t1cE1vZHVsZSB7fVxyXG4iXX0=