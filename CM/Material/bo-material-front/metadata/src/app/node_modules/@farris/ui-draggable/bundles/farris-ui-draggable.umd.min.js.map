{"version":3,"sources":["ng://@farris/ui-draggable/lib/models/position.ts","ng://@farris/ui-draggable/lib/widgets/helper-block.ts","ng://@farris/ui-draggable/lib/angular-draggable.directive.ts","node_modules/tslib/tslib.es6.js","ng://@farris/ui-draggable/lib/widgets/resize-handle.ts","ng://@farris/ui-draggable/lib/models/size.ts","ng://@farris/ui-draggable/lib/angular-resizeable.directive.ts","ng://@farris/ui-draggable/lib/draggable.module.ts"],"names":["Position","fromEvent","e","el","this","isMouseEvent","clientX","clientY","changedTouches","length","i","target","Object","prototype","toString","apply","indexOf","isIPosition","obj","getCurrent","pos","window","computed","getComputedStyle","x","parseInt","getPropertyValue","y","isNaN","copy","p","set","defineProperty","add","subtract","multiply","n","divide","reset","HelperBlock","parent","_added","appendChild","_helper","remove","removeChild","dispose","renderer","helper","createElement","setStyle","AngularDraggableDirective","setting","nativeElement","_zIndex","undefined","allowDrag","element","getDragEl","addClass","putBack","removeClass","ngOnInit","resetPosition","ngOnDestroy","bounds","handle","orignal","oldTrans","tempTrans","currTrans","_helperBlock","draggingSub","unsubscribe","ngOnChanges","changes","isFirstChange","currentValue","moving","needTransform","transform","ngAfterViewInit","inBounds","boundsCheck","position","moveTo","scale","edge","emit","movingOffset","value","translateX","translateY","lockAxis","gridSize","Math","round","pickUp","oldZIndex","style","zIndex","zIndexMoving","started","subscribeEvents","_this","document","passive","subscribe","event","onMouseMove","test","navigator","userAgent","unsubscribeEvents","boundary","getBoundingClientRect","elem","result","top","outOfBounds","right","bottom","left","getCurrentOffset","removeProperty","stopped","endOffset","trackPosition","checkHandleTarget","tagName","parentElement","classList","contains","child","children","hasOwnProperty","onMouseDown","MouseEvent","button","srcElement","preventDefaultEvent","stopPropagation","preventDefault","Directive","args","selector","exportAs","ElementRef","Renderer2","Output","Input","HostListener","type","EventEmitter","__assign","assign","t","s","arguments","call","__values","o","m","Symbol","iterator","next","done","ResizeHandle","_handle","removeEventListener","_onResize","css","addEventListener","Size","size","width","height","AngularResizableDirective","v","_resizable","updateResizable","updateAspectRatio","updateContainment","removeHandles","_containment","elm","_initSize","_initPos","_currSize","_currPos","resetSize","doResize","getStatus","rzCls","createHandles","rzAspectRatio","_aspectRatio","r","Number","rzContainment","querySelector","tmpHandleTypes","rzHandles","replace","toLowerCase","split","tmpHandleTypes_1","tslib_1.__values","tmpHandleTypes_1_1","createHandleByType","_handleType","push","_handles","keys","tmpHandleTypes_2","tmpHandleTypes_2_1","_el","match","bind","_b","_c","_handleResizing","_origMousePos","startResize","onMouseLeave","stopResize","_origPos","_origSize","resizeTo","onResizing","getBounding","getGridSize","updateDirection","rzStart","getResizingEvent","rzStop","_direction","resetBounding","rzResizing","host","direction","_directionChanged","actions","updateParams","datas","params","fixedEdge","w","tmpX","_gridSize","tmpY","checkBounds","checkSize","adjustByRatio","container","_adjusted","newHeight","floor","newWidth","maxWidth","_bounding","pr","deltaL","maxHeight","pb","deltaT","minHeight","rzMinHeight","minWidth","rzMinWidth","rzMaxHeight","rzMaxWidth","transforms","clientWidth","clientHeight","offsetLeft","offsetTop","rzGrid","Array","isArray","AngularDraggableModule","NgModule","imports","declarations","exports"],"mappings":"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","sourcesContent":["export interface IPosition {\r\n    x: number;\r\n    y: number;\r\n  }\r\n  \r\n  export class Position implements IPosition {\r\n    constructor(public x: number, public y: number) { }\r\n  \r\n    static fromEvent(e: MouseEvent | TouchEvent, el: any = null) {\r\n      /**\r\n       * Fix issue: Resize doesn't work on Windows10 IE11 (and on some windows 7 IE11)\r\n       * https://github.com/xieziyu/angular2-draggable/issues/164\r\n       * e instanceof MouseEvent check returns false on IE11\r\n       */\r\n      if (this.isMouseEvent(e)) {\r\n        return new Position(e.clientX, e.clientY);\r\n      } else {\r\n        if (el === null || e.changedTouches.length === 1) {\r\n          return new Position(e.changedTouches[0].clientX, e.changedTouches[0].clientY);\r\n        }\r\n  \r\n        /**\r\n         * Fix issue: Multiple phone draggables at the same time\r\n         * https://github.com/xieziyu/angular2-draggable/issues/128\r\n         */\r\n        for (let i = 0; i < e.changedTouches.length; i++) {\r\n          if (e.changedTouches[i].target === el) {\r\n            return new Position(e.changedTouches[i].clientX, e.changedTouches[i].clientY);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  \r\n    static isMouseEvent(e: MouseEvent | TouchEvent): e is MouseEvent {\r\n      return Object.prototype.toString.apply(e).indexOf('MouseEvent') === 8;\r\n    }\r\n  \r\n    static isIPosition(obj): obj is IPosition {\r\n      return !!obj && ('x' in obj) && ('y' in obj);\r\n    }\r\n  \r\n    static getCurrent(el: Element) {\r\n      let pos = new Position(0, 0);\r\n  \r\n      if (window) {\r\n        const computed = window.getComputedStyle(el);\r\n        if (computed) {\r\n          let x = parseInt(computed.getPropertyValue('left'), 10);\r\n          let y = parseInt(computed.getPropertyValue('top'), 10);\r\n          pos.x = isNaN(x) ? 0 : x;\r\n          pos.y = isNaN(y) ? 0 : y;\r\n        }\r\n        return pos;\r\n      } else {\r\n        // console.error('Not Supported!');\r\n        return null;\r\n      }\r\n    }\r\n  \r\n    static copy(p: IPosition) {\r\n      return new Position(0, 0).set(p);\r\n    }\r\n  \r\n    get value(): IPosition {\r\n      return { x: this.x, y: this.y };\r\n    }\r\n  \r\n    add(p: IPosition) {\r\n      this.x += p.x;\r\n      this.y += p.y;\r\n      return this;\r\n    }\r\n  \r\n    subtract(p: IPosition) {\r\n      this.x -= p.x;\r\n      this.y -= p.y;\r\n      return this;\r\n    }\r\n  \r\n    multiply(n: number) {\r\n      this.x *= n;\r\n      this.y *= n;\r\n    }\r\n  \r\n    divide(n: number) {\r\n      this.x /= n;\r\n      this.y /= n;\r\n    }\r\n  \r\n    reset() {\r\n      this.x = 0;\r\n      this.y = 0;\r\n      return this;\r\n    }\r\n  \r\n    set(p: IPosition) {\r\n      this.x = p.x;\r\n      this.y = p.y;\r\n      return this;\r\n    }\r\n  }\r\n  ","import { Renderer2 } from '@angular/core';\r\n\r\nexport class HelperBlock {\r\n    protected _helper: Element;\r\n    private _added = false;\r\n\r\n    constructor(\r\n        protected parent: Element,\r\n        protected renderer: Renderer2\r\n    ) {\r\n        // generate helper div\r\n        let helper = renderer.createElement('div');\r\n        renderer.setStyle(helper, 'position', 'absolute');\r\n        renderer.setStyle(helper, 'width', '100%');\r\n        renderer.setStyle(helper, 'height', '100%');\r\n        renderer.setStyle(helper, 'background-color', 'transparent');\r\n        renderer.setStyle(helper, 'top', '0');\r\n        renderer.setStyle(helper, 'left', '0');\r\n\r\n        // done\r\n        this._helper = helper;\r\n    }\r\n\r\n    add() {\r\n        // append div to parent\r\n        if (this.parent && !this._added) {\r\n            this.parent.appendChild(this._helper);\r\n            this._added = true;\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        if (this.parent && this._added) {\r\n            this.parent.removeChild(this._helper);\r\n            this._added = false;\r\n        }\r\n    }\r\n\r\n    dispose() {\r\n        this._helper = null;\r\n        this._added = false;\r\n    }\r\n\r\n    get el() {\r\n        return this._helper;\r\n    }\r\n}\r\n","import {\r\n    Directive, ElementRef, Renderer2,\r\n    Input, Output, OnInit, HostListener,\r\n    EventEmitter, OnChanges, SimpleChanges, OnDestroy, AfterViewInit\r\n} from '@angular/core';\r\n\r\nimport { Subscription, fromEvent } from 'rxjs';\r\nimport { IPosition, Position } from './models/position';\r\nimport { HelperBlock } from './widgets/helper-block';\r\n\r\n@Directive({\r\n    selector: '[ngDraggable]',\r\n    exportAs: 'ngDraggable'\r\n})\r\nexport class AngularDraggableDirective implements OnInit, OnDestroy, OnChanges, AfterViewInit {\r\n    private allowDrag = true;\r\n    private moving = false;\r\n    private orignal: Position = null;\r\n    private oldTrans = new Position(0, 0);\r\n    private tempTrans = new Position(0, 0);\r\n    private currTrans = new Position(0, 0);\r\n    private oldZIndex = '';\r\n    private _zIndex = '';\r\n    private needTransform = false;\r\n\r\n    private draggingSub: Subscription = null;\r\n\r\n    /**\r\n     * Bugfix: iFrames, and context unrelated elements block all events, and are unusable\r\n     * https://github.com/xieziyu/angular2-draggable/issues/84\r\n     */\r\n    private _helperBlock: HelperBlock = null;\r\n\r\n    @Output() started = new EventEmitter<any>();\r\n    @Output() stopped = new EventEmitter<any>();\r\n    @Output() edge = new EventEmitter<any>();\r\n\r\n    /** Make the handle HTMLElement draggable */\r\n    @Input() handle: HTMLElement;\r\n\r\n    /** Set the bounds HTMLElement */\r\n    @Input() bounds: HTMLElement;\r\n\r\n    /** List of allowed out of bounds edges **/\r\n    @Input() outOfBounds = {\r\n        top: false,\r\n        right: false,\r\n        bottom: false,\r\n        left: false\r\n    };\r\n\r\n    /** Round the position to nearest grid */\r\n    @Input() gridSize = 1;\r\n\r\n    /** Set z-index when dragging */\r\n    @Input() zIndexMoving: string;\r\n\r\n    /** Set z-index when not dragging */\r\n    @Input() set zIndex(setting: string) {\r\n        this.renderer.setStyle(this.el.nativeElement, 'z-index', setting);\r\n        this._zIndex = setting;\r\n    }\r\n    /** Whether to limit the element stay in the bounds */\r\n    @Input() inBounds = false;\r\n\r\n    /** Whether the element should use it's previous drag position on a new drag event. */\r\n    @Input() trackPosition = true;\r\n\r\n    /** Input css scale transform of element so translations are correct */\r\n    @Input() scale = 1;\r\n\r\n    /** Whether to prevent default event */\r\n    @Input() preventDefaultEvent = false;\r\n\r\n    /** Set initial position by offsets */\r\n    @Input() position: IPosition = { x: 0, y: 0 };\r\n\r\n    /** Lock axis: 'x' or 'y' */\r\n    @Input() lockAxis: string = null;\r\n\r\n    /** Emit position offsets when moving */\r\n    @Output() movingOffset = new EventEmitter<IPosition>();\r\n\r\n    /** Emit position offsets when put back */\r\n    @Output() endOffset = new EventEmitter<IPosition>();\r\n\r\n    @Input()\r\n    set ngDraggable(setting: any) {\r\n        if (setting !== undefined && setting !== null && setting !== '') {\r\n            this.allowDrag = !!setting;\r\n\r\n            let element = this.getDragEl();\r\n\r\n            if (this.allowDrag) {\r\n                this.renderer.addClass(element, 'ng-draggable');\r\n            } else {\r\n                this.putBack();\r\n                this.renderer.removeClass(element, 'ng-draggable');\r\n            }\r\n        }\r\n    }\r\n\r\n    constructor(private el: ElementRef, private renderer: Renderer2) {\r\n        this._helperBlock = new HelperBlock(el.nativeElement, renderer);\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (this.allowDrag) {\r\n            let element = this.getDragEl();\r\n            this.renderer.addClass(element, 'ng-draggable');\r\n        }\r\n        this.resetPosition();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.bounds = null;\r\n        this.handle = null;\r\n        this.orignal = null;\r\n        this.oldTrans = null;\r\n        this.tempTrans = null;\r\n        this.currTrans = null;\r\n        this._helperBlock.dispose();\r\n        this._helperBlock = null;\r\n\r\n        if (this.draggingSub) {\r\n            this.draggingSub.unsubscribe();\r\n        }\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes['position'] && !changes['position'].isFirstChange()) {\r\n            let p = changes['position'].currentValue;\r\n\r\n            if (!this.moving) {\r\n                if (Position.isIPosition(p)) {\r\n                    this.oldTrans.set(p);\r\n                } else {\r\n                    this.oldTrans.reset();\r\n                }\r\n\r\n                this.transform();\r\n            } else {\r\n                this.needTransform = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        if (this.inBounds) {\r\n            this.boundsCheck();\r\n            this.oldTrans.add(this.tempTrans);\r\n            this.tempTrans.reset();\r\n        }\r\n    }\r\n\r\n    private getDragEl() {\r\n        return this.handle ? this.handle : this.el.nativeElement;\r\n    }\r\n\r\n    resetPosition() {\r\n        if (Position.isIPosition(this.position)) {\r\n            this.oldTrans.set(this.position);\r\n        } else {\r\n            this.oldTrans.reset();\r\n        }\r\n        this.tempTrans.reset();\r\n        this.transform();\r\n    }\r\n\r\n    moveTo(p: Position) {\r\n        if (this.orignal) {\r\n            p.subtract(this.orignal);\r\n        }\r\n\r\n        this.tempTrans.set(p);\r\n        this.tempTrans.divide(this.scale);\r\n        this.transform();\r\n\r\n        if (this.bounds) {\r\n            this.edge.emit(this.boundsCheck());\r\n        }\r\n\r\n        this.movingOffset.emit(this.currTrans.value);\r\n    }\r\n\r\n    private transform() {\r\n        let translateX = this.tempTrans.x + this.oldTrans.x;\r\n        let translateY = this.tempTrans.y + this.oldTrans.y;\r\n\r\n        if (this.lockAxis === 'x') {\r\n            translateX = this.oldTrans.x;\r\n            this.tempTrans.x = 0;\r\n        } else if (this.lockAxis === 'y') {\r\n            translateY = this.oldTrans.y;\r\n            this.tempTrans.y = 0;\r\n        }\r\n\r\n        // Snap to grid: by grid size\r\n        if (this.gridSize > 1) {\r\n            translateX = Math.round(translateX / this.gridSize) * this.gridSize;\r\n            translateY = Math.round(translateY / this.gridSize) * this.gridSize;\r\n        }\r\n\r\n        let value = `translate3d(${Math.round(translateX)}px, ${Math.round(translateY)}px, 0px)`;\r\n\r\n        this.renderer.setStyle(this.el.nativeElement, 'transform', value);\r\n        this.renderer.setStyle(this.el.nativeElement, '-webkit-transform', value);\r\n        this.renderer.setStyle(this.el.nativeElement, '-ms-transform', value);\r\n        this.renderer.setStyle(this.el.nativeElement, '-moz-transform', value);\r\n        this.renderer.setStyle(this.el.nativeElement, '-o-transform', value);\r\n\r\n        // save current position\r\n        this.currTrans.x = translateX;\r\n        this.currTrans.y = translateY;\r\n    }\r\n\r\n    private pickUp() {\r\n        // get old z-index:\r\n        this.oldZIndex = this.el.nativeElement.style.zIndex ? this.el.nativeElement.style.zIndex : '';\r\n\r\n        if (window) {\r\n            this.oldZIndex = window.getComputedStyle(this.el.nativeElement, null).getPropertyValue('z-index');\r\n        }\r\n\r\n        if (this.zIndexMoving) {\r\n            this.renderer.setStyle(this.el.nativeElement, 'z-index', this.zIndexMoving);\r\n        }\r\n\r\n        if (!this.moving) {\r\n            this.started.emit(this.el.nativeElement);\r\n            this.moving = true;\r\n\r\n            const element = this.getDragEl();\r\n            this.renderer.addClass(element, 'ng-dragging');\r\n\r\n            /**\r\n             * Fix performance issue:\r\n             * https://github.com/xieziyu/angular2-draggable/issues/112\r\n             */\r\n            this.subscribeEvents();\r\n        }\r\n    }\r\n\r\n    private subscribeEvents() {\r\n        this.draggingSub = fromEvent(document, 'mousemove', { passive: false }).subscribe(event => this.onMouseMove(event as MouseEvent));\r\n        this.draggingSub.add(fromEvent(document, 'touchmove', { passive: false }).subscribe(event => this.onMouseMove(event as TouchEvent)));\r\n        this.draggingSub.add(fromEvent(document, 'mouseup', { passive: false }).subscribe(() => this.putBack()));\r\n        // checking if browser is IE or Edge - https://github.com/xieziyu/angular2-draggable/issues/153\r\n        let isIEOrEdge = /msie\\s|trident\\//i.test(window.navigator.userAgent);\r\n        if (!isIEOrEdge) {\r\n            this.draggingSub.add(fromEvent(document, 'mouseleave', { passive: false }).subscribe(() => this.putBack()));\r\n        }\r\n        this.draggingSub.add(fromEvent(document, 'touchend', { passive: false }).subscribe(() => this.putBack()));\r\n        this.draggingSub.add(fromEvent(document, 'touchcancel', { passive: false }).subscribe(() => this.putBack()));\r\n    }\r\n\r\n    private unsubscribeEvents() {\r\n        this.draggingSub.unsubscribe();\r\n        this.draggingSub = null;\r\n    }\r\n\r\n    boundsCheck() {\r\n        if (this.bounds) {\r\n            let boundary = this.bounds.getBoundingClientRect();\r\n            let elem = this.el.nativeElement.getBoundingClientRect();\r\n            let result = {\r\n                'top': this.outOfBounds.top ? true : boundary.top < elem.top,\r\n                'right': this.outOfBounds.right ? true : boundary.right > elem.right,\r\n                'bottom': this.outOfBounds.bottom ? true : boundary.bottom > elem.bottom,\r\n                'left': this.outOfBounds.left ? true : boundary.left < elem.left\r\n            };\r\n\r\n            if (this.inBounds) {\r\n                if (!result.top) {\r\n                    this.tempTrans.y -= (elem.top - boundary.top) / this.scale;\r\n                }\r\n\r\n                if (!result.bottom) {\r\n                    this.tempTrans.y -= (elem.bottom - boundary.bottom) / this.scale;\r\n                }\r\n\r\n                if (!result.right) {\r\n                    this.tempTrans.x -= (elem.right - boundary.right) / this.scale;\r\n                }\r\n\r\n                if (!result.left) {\r\n                    this.tempTrans.x -= (elem.left - boundary.left) / this.scale;\r\n                }\r\n\r\n                this.transform();\r\n            }\r\n\r\n            return result;\r\n        }\r\n    }\r\n\r\n    /** Get current offset */\r\n    getCurrentOffset() {\r\n        return this.currTrans.value;\r\n    }\r\n\r\n    private putBack() {\r\n        if (this._zIndex) {\r\n            this.renderer.setStyle(this.el.nativeElement, 'z-index', this._zIndex);\r\n        } else if (this.zIndexMoving) {\r\n            if (this.oldZIndex) {\r\n                this.renderer.setStyle(this.el.nativeElement, 'z-index', this.oldZIndex);\r\n            } else {\r\n                this.el.nativeElement.style.removeProperty('z-index');\r\n            }\r\n        }\r\n\r\n        if (this.moving) {\r\n            this.stopped.emit(this.el.nativeElement);\r\n\r\n            // Remove the helper div:\r\n            this._helperBlock.remove();\r\n\r\n            if (this.needTransform) {\r\n                if (Position.isIPosition(this.position)) {\r\n                    this.oldTrans.set(this.position);\r\n                } else {\r\n                    this.oldTrans.reset();\r\n                }\r\n\r\n                this.transform();\r\n                this.needTransform = false;\r\n            }\r\n\r\n            if (this.bounds) {\r\n                this.edge.emit(this.boundsCheck());\r\n            }\r\n\r\n            this.moving = false;\r\n            this.endOffset.emit(this.currTrans.value);\r\n\r\n            if (this.trackPosition) {\r\n                this.oldTrans.add(this.tempTrans);\r\n            }\r\n\r\n            this.tempTrans.reset();\r\n\r\n            if (!this.trackPosition) {\r\n                this.transform();\r\n            }\r\n\r\n            const element = this.getDragEl();\r\n            this.renderer.removeClass(element, 'ng-dragging');\r\n\r\n            /**\r\n             * Fix performance issue:\r\n             * https://github.com/xieziyu/angular2-draggable/issues/112\r\n             */\r\n            this.unsubscribeEvents();\r\n        }\r\n    }\r\n\r\n    checkHandleTarget(target: EventTarget, element: Element) {\r\n        // Checks if the target is the element clicked, then checks each child element of element as well\r\n        // Ignores button clicks\r\n\r\n        // Ignore elements of type button\r\n        if (element.tagName === 'BUTTON') {\r\n            return false;\r\n        }\r\n\r\n        if (element.tagName === 'SPAN' && element.parentElement.classList.contains('f-btn-icon')) {\r\n            return false;\r\n        }\r\n\r\n        // If the target was found, return true (handle was found)\r\n        if (element === target) {\r\n            return true;\r\n        }\r\n\r\n        // Recursively iterate this elements children\r\n        for (let child in element.children) {\r\n            if (element.children.hasOwnProperty(child)) {\r\n                if (this.checkHandleTarget(target, element.children[child])) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Handle was not found in this lineage\r\n        // Note: return false is ignore unless it is the parent element\r\n        return false;\r\n    }\r\n\r\n    @HostListener('mousedown', ['$event'])\r\n    @HostListener('touchstart', ['$event'])\r\n    onMouseDown(event: MouseEvent | TouchEvent) {\r\n        // 1. skip right click;\r\n        if (event instanceof MouseEvent && event.button === 2) {\r\n            return;\r\n        }\r\n        // 2. if handle is set, the element can only be moved by handle\r\n        let target = event.target || event.srcElement;\r\n        if (this.handle !== undefined && !this.checkHandleTarget(target, this.handle)) {\r\n            return;\r\n        }\r\n\r\n        // 3. if allow drag is set to false, ignore the mousedown\r\n        if (this.allowDrag === false) {\r\n            return;\r\n        }\r\n\r\n        if (this.preventDefaultEvent) {\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n        }\r\n\r\n        this.orignal = Position.fromEvent(event, this.getDragEl());\r\n        this.pickUp();\r\n    }\r\n\r\n    onMouseMove(event: MouseEvent | TouchEvent) {\r\n        if (this.moving && this.allowDrag) {\r\n            if (this.preventDefaultEvent) {\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n            }\r\n\r\n            // Add a transparent helper div:\r\n            this._helperBlock.add();\r\n            this.moveTo(Position.fromEvent(event, this.getDragEl()));\r\n        }\r\n    }\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Renderer2 } from '@angular/core';\r\n\r\nexport class ResizeHandle {\r\n    protected _handle: Element;\r\n    private _onResize;\r\n\r\n    constructor(\r\n        protected parent: Element,\r\n        protected renderer: Renderer2,\r\n        public type: string,\r\n        public css: string,\r\n        private onMouseDown: any\r\n    ) {\r\n        // generate handle div\r\n        let handle = renderer.createElement('div');\r\n        renderer.addClass(handle, 'ng-resizable-handle');\r\n        renderer.addClass(handle, css);\r\n\r\n        // add default diagonal for se handle\r\n        if (type === 'se') {\r\n            renderer.addClass(handle, 'ng-resizable-diagonal');\r\n        }\r\n\r\n        // append div to parent\r\n        if (this.parent) {\r\n            parent.appendChild(handle);\r\n        }\r\n\r\n        // create and register event listener\r\n        this._onResize = (event) => { onMouseDown(event, this); };\r\n        handle.addEventListener('mousedown', this._onResize, { passive: false });\r\n        handle.addEventListener('touchstart', this._onResize, { passive: false });\r\n\r\n        // done\r\n        this._handle = handle;\r\n    }\r\n\r\n    dispose() {\r\n        this._handle.removeEventListener('mousedown', this._onResize);\r\n        this._handle.removeEventListener('touchstart', this._onResize);\r\n\r\n        if (this.parent) {\r\n            this.parent.removeChild(this._handle);\r\n        }\r\n        this._handle = null;\r\n        this._onResize = null;\r\n    }\r\n\r\n    get el() {\r\n        return this._handle;\r\n    }\r\n}\r\n","export interface ISize {\r\n    width: number;\r\n    height: number;\r\n}\r\n\r\nexport class Size implements ISize {\r\n    constructor(public width: number, public height: number) { }\r\n\r\n    static getCurrent(el: Element) {\r\n        let size = new Size(0, 0);\r\n\r\n        if (window) {\r\n            const computed = window.getComputedStyle(el);\r\n            if (computed) {\r\n                size.width = parseInt(computed.getPropertyValue('width'), 10);\r\n                size.height = parseInt(computed.getPropertyValue('height'), 10);\r\n            }\r\n            return size;\r\n        } else {\r\n            // console.error('Not Supported!');\r\n            return null;\r\n        }\r\n    }\r\n\r\n    static copy(s: Size) {\r\n        return new Size(0, 0).set(s);\r\n    }\r\n\r\n    set(s: ISize) {\r\n        this.width = s.width;\r\n        this.height = s.height;\r\n        return this;\r\n    }\r\n}\r\n","import {\r\n    Directive, ElementRef, Renderer2,\r\n    Input, Output, OnInit, EventEmitter, OnChanges, SimpleChanges,\r\n    OnDestroy, AfterViewInit\r\n} from '@angular/core';\r\n\r\nimport { Subscription, fromEvent } from 'rxjs';\r\nimport { HelperBlock } from './widgets/helper-block';\r\nimport { ResizeHandle } from './widgets/resize-handle';\r\nimport { ResizeHandleType } from './models/resize-handle-type';\r\nimport { Position, IPosition } from './models/position';\r\nimport { Size } from './models/size';\r\nimport { IResizeEvent } from './models/resize-event';\r\n\r\n@Directive({\r\n    selector: '[ngResizable]',\r\n    exportAs: 'ngResizable'\r\n})\r\nexport class AngularResizableDirective implements OnInit, OnChanges, OnDestroy, AfterViewInit {\r\n    private _resizable = true;\r\n    private _handles: { [key: string]: ResizeHandle } = {};\r\n    private _handleType: string[] = [];\r\n    private _handleResizing: ResizeHandle = null;\r\n    private _direction: { 'n': boolean, 's': boolean, 'w': boolean, 'e': boolean } = null;\r\n    private _directionChanged: { 'n': boolean, 's': boolean, 'w': boolean, 'e': boolean } = null;\r\n    private _aspectRatio = 0;\r\n    private _containment: HTMLElement = null;\r\n    private _origMousePos: Position = null;\r\n\r\n    /** Original Size and Position */\r\n    private _origSize: Size = null;\r\n    private _origPos: Position = null;\r\n\r\n    /** Current Size and Position */\r\n    private _currSize: Size = null;\r\n    private _currPos: Position = null;\r\n\r\n    /** Initial Size and Position */\r\n    private _initSize: Size = null;\r\n    private _initPos: Position = null;\r\n\r\n    /** Snap to gird */\r\n    private _gridSize: IPosition = null;\r\n\r\n    private _bounding: any = null;\r\n\r\n    /**\r\n     * Bugfix: iFrames, and context unrelated elements block all events, and are unusable\r\n     * https://github.com/xieziyu/angular2-draggable/issues/84\r\n     */\r\n    private _helperBlock: HelperBlock = null;\r\n\r\n    private draggingSub: Subscription = null;\r\n    private _adjusted = false;\r\n    // è¿½å èªå®ä¹çæ ·å¼\r\n    @Input() rzCls = '';\r\n    /** Disables the resizable if set to false. */\r\n    @Input() set ngResizable(v: any) {\r\n        if (v !== undefined && v !== null && v !== '') {\r\n            this._resizable = !!v;\r\n            this.updateResizable();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Which handles can be used for resizing.\r\n     * @example\r\n     * [rzHandles] = \"'n,e,s,w,se,ne,sw,nw'\"\r\n     * equals to: [rzHandles] = \"'all'\"\r\n     *\r\n     * */\r\n    @Input() rzHandles: ResizeHandleType = 'e,s,se';\r\n\r\n    /**\r\n     * Whether the element should be constrained to a specific aspect ratio.\r\n     *  Multiple types supported:\r\n     *  boolean: When set to true, the element will maintain its original aspect ratio.\r\n     *  number: Force the element to maintain a specific aspect ratio during resizing.\r\n     */\r\n    @Input() rzAspectRatio: boolean | number = false;\r\n\r\n    /**\r\n     * Constrains resizing to within the bounds of the specified element or region.\r\n     *  Multiple types supported:\r\n     *  Selector: The resizable element will be contained to the bounding box of the first element found by the selector.\r\n     *            If no element is found, no containment will be set.\r\n     *  Element: The resizable element will be contained to the bounding box of this element.\r\n     *  String: Possible values: \"parent\".\r\n     */\r\n    @Input() rzContainment: string | HTMLElement = null;\r\n\r\n    /**\r\n     * Snaps the resizing element to a grid, every x and y pixels.\r\n     * A number for both width and height or an array values like [ x, y ]\r\n     */\r\n    @Input() rzGrid: number | number[] = null;\r\n\r\n    /** The minimum width the resizable should be allowed to resize to. */\r\n    @Input() rzMinWidth: number = null;\r\n\r\n    /** The minimum height the resizable should be allowed to resize to. */\r\n    @Input() rzMinHeight: number = null;\r\n\r\n    /** The maximum width the resizable should be allowed to resize to. */\r\n    @Input() rzMaxWidth: number = null;\r\n\r\n    /** The maximum height the resizable should be allowed to resize to. */\r\n    @Input() rzMaxHeight: number = null;\r\n\r\n    /** Whether to prevent default event */\r\n    @Input() preventDefaultEvent = true;\r\n\r\n    @Input() fixedEdge = false;\r\n\r\n    /** emitted when start resizing */\r\n    @Output() rzStart = new EventEmitter<IResizeEvent>();\r\n\r\n    /** emitted when start resizing */\r\n    @Output() rzResizing = new EventEmitter<IResizeEvent>();\r\n\r\n    /** emitted when stop resizing */\r\n    @Output() rzStop = new EventEmitter<IResizeEvent>();\r\n\r\n    constructor(private el: ElementRef<HTMLElement>, private renderer: Renderer2) {\r\n        this._helperBlock = new HelperBlock(el.nativeElement, renderer);\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes['rzHandles'] && !changes['rzHandles'].isFirstChange()) {\r\n            this.updateResizable();\r\n        }\r\n\r\n        if (changes['rzAspectRatio'] && !changes['rzAspectRatio'].isFirstChange()) {\r\n            this.updateAspectRatio();\r\n        }\r\n\r\n        if (changes['rzContainment'] && !changes['rzContainment'].isFirstChange()) {\r\n            this.updateContainment();\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.updateResizable();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.removeHandles();\r\n        this._containment = null;\r\n        if (this._helperBlock) {\r\n            this._helperBlock.dispose();\r\n            this._helperBlock = null;\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        const elm = this.el.nativeElement;\r\n        this._initSize = Size.getCurrent(elm);\r\n        this._initPos = Position.getCurrent(elm);\r\n        this._currSize = Size.copy(this._initSize);\r\n        this._currPos = Position.copy(this._initPos);\r\n        this.updateAspectRatio();\r\n        this.updateContainment();\r\n    }\r\n\r\n    /** A method to reset size */\r\n    public resetSize() {\r\n        this._currSize = Size.copy(this._initSize);\r\n        this._currPos = Position.copy(this._initPos);\r\n        this.doResize();\r\n    }\r\n\r\n    /** A method to get current status */\r\n    public getStatus() {\r\n        if (!this._currPos || !this._currSize) {\r\n            return null;\r\n        }\r\n\r\n        return {\r\n            size: {\r\n                width: this._currSize.width,\r\n                height: this._currSize.height\r\n            },\r\n            position: {\r\n                top: this._currPos.y,\r\n                left: this._currPos.x\r\n            }\r\n        };\r\n    }\r\n\r\n    private updateResizable() {\r\n        const element = this.el.nativeElement;\r\n\r\n        // clear handles:\r\n        this.renderer.removeClass(element, 'ng-resizable');\r\n        this.rzCls&&  this.renderer.removeClass(element, this.rzCls);\r\n        this.removeHandles();\r\n\r\n        // create new ones:\r\n        if (this._resizable) {\r\n            this.renderer.addClass(element, 'ng-resizable');\r\n            this.rzCls&&this.renderer.addClass(element, this.rzCls);\r\n            this.createHandles();\r\n        }\r\n    }\r\n\r\n    /** Use it to update aspect */\r\n    private updateAspectRatio() {\r\n        if (typeof this.rzAspectRatio === 'boolean') {\r\n            if (this.rzAspectRatio && this._currSize.height) {\r\n                this._aspectRatio = (this._currSize.width / this._currSize.height);\r\n            } else {\r\n                this._aspectRatio = 0;\r\n            }\r\n        } else {\r\n            let r = Number(this.rzAspectRatio);\r\n            this._aspectRatio = isNaN(r) ? 0 : r;\r\n        }\r\n    }\r\n\r\n    /** Use it to update containment */\r\n    private updateContainment() {\r\n        if (!this.rzContainment) {\r\n            this._containment = null;\r\n            return;\r\n        }\r\n\r\n        if (typeof this.rzContainment === 'string') {\r\n            if (this.rzContainment === 'parent') {\r\n                this._containment = this.el.nativeElement.parentElement;\r\n            } else {\r\n                this._containment = document.querySelector<HTMLElement>(this.rzContainment);\r\n            }\r\n        } else {\r\n            this._containment = this.rzContainment;\r\n        }\r\n    }\r\n\r\n    /** Use it to create handle divs */\r\n    private createHandles() {\r\n        if (!this.rzHandles) {\r\n            return;\r\n        }\r\n\r\n        let tmpHandleTypes: string[];\r\n        if (typeof this.rzHandles === 'string') {\r\n            if (this.rzHandles === 'all') {\r\n                tmpHandleTypes = ['n', 'e', 's', 'w', 'ne', 'se', 'nw', 'sw'];\r\n            } else {\r\n                tmpHandleTypes = this.rzHandles.replace(/ /g, '').toLowerCase().split(',');\r\n            }\r\n\r\n            for (let type of tmpHandleTypes) {\r\n                // default handle theme: ng-resizable-$type.\r\n                let handle = this.createHandleByType(type, `ng-resizable-${type}`);\r\n                if (handle) {\r\n                    this._handleType.push(type);\r\n                    this._handles[type] = handle;\r\n                }\r\n            }\r\n        } else {\r\n            tmpHandleTypes = Object.keys(this.rzHandles);\r\n            for (let type of tmpHandleTypes) {\r\n                // custom handle theme.\r\n                let handle = this.createHandleByType(type, this.rzHandles[type]);\r\n                if (handle) {\r\n                    this._handleType.push(type);\r\n                    this._handles[type] = handle;\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    /** Use it to create a handle */\r\n    private createHandleByType(type: string, css: string): ResizeHandle {\r\n        const _el = this.el.nativeElement;\r\n\r\n        if (!type.match(/^(se|sw|ne|nw|n|e|s|w)$/)) {\r\n            // console.error('Invalid handle type:', type);\r\n            return null;\r\n        }\r\n        return new ResizeHandle(_el, this.renderer, type, css, this.onMouseDown.bind(this));\r\n    }\r\n\r\n    private removeHandles() {\r\n        for (let type of this._handleType) {\r\n            this._handles[type].dispose();\r\n        }\r\n\r\n        this._handleType = [];\r\n        this._handles = {};\r\n    }\r\n\r\n    onMouseDown(event: MouseEvent | TouchEvent, handle: ResizeHandle) {\r\n        // skip right click;\r\n        if (event instanceof MouseEvent && event.button === 2) {\r\n            return;\r\n        }\r\n\r\n        if (this.preventDefaultEvent) {\r\n            // prevent default events\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n        }\r\n\r\n        if (!this._handleResizing) {\r\n            this._origMousePos = Position.fromEvent(event);\r\n            this.startResize(handle);\r\n\r\n            this.subscribeEvents();\r\n        }\r\n    }\r\n\r\n    private subscribeEvents() {\r\n        this.draggingSub = fromEvent(document, 'mousemove', { passive: false }).subscribe(event => this.onMouseMove(event as MouseEvent));\r\n        this.draggingSub.add(fromEvent(document, 'touchmove', { passive: false }).subscribe(event => this.onMouseMove(event as TouchEvent)));\r\n        this.draggingSub.add(fromEvent(document, 'mouseup', { passive: false }).subscribe(() => this.onMouseLeave()));\r\n        // fix for issue #164\r\n        let isIEOrEdge = /msie\\s|trident\\//i.test(window.navigator.userAgent);\r\n        if (!isIEOrEdge) {\r\n            this.draggingSub.add(fromEvent(document, 'mouseleave', { passive: false }).subscribe(() => this.onMouseLeave()));\r\n        }\r\n        this.draggingSub.add(fromEvent(document, 'touchend', { passive: false }).subscribe(() => this.onMouseLeave()));\r\n        this.draggingSub.add(fromEvent(document, 'touchcancel', { passive: false }).subscribe(() => this.onMouseLeave()));\r\n    }\r\n\r\n    private unsubscribeEvents() {\r\n        this.draggingSub.unsubscribe();\r\n        this.draggingSub = null;\r\n    }\r\n\r\n    onMouseLeave() {\r\n        if (this._handleResizing) {\r\n            this.stopResize();\r\n            this._origMousePos = null;\r\n            this.unsubscribeEvents();\r\n        }\r\n    }\r\n\r\n    onMouseMove(event: MouseEvent | TouchEvent) {\r\n        if (this._handleResizing && this._resizable && this._origMousePos && this._origPos && this._origSize) {\r\n            this.resizeTo(Position.fromEvent(event));\r\n            this.onResizing();\r\n        }\r\n    }\r\n\r\n    private startResize(handle: ResizeHandle) {\r\n        const elm = this.el.nativeElement;\r\n        this._origSize = Size.getCurrent(elm);\r\n        this._origPos = Position.getCurrent(elm); // x: left, y: top\r\n        this._currSize = Size.copy(this._origSize);\r\n        this._currPos = Position.copy(this._origPos);\r\n        if (this._containment) {\r\n            this.getBounding();\r\n        }\r\n        this.getGridSize();\r\n\r\n        // Add a transparent helper div:\r\n        this._helperBlock.add();\r\n        this._handleResizing = handle;\r\n        this.updateDirection();\r\n        this.rzStart.emit(this.getResizingEvent());\r\n    }\r\n\r\n    private stopResize() {\r\n        // Remove the helper div:\r\n        this._helperBlock.remove();\r\n        this.rzStop.emit(this.getResizingEvent());\r\n        this._handleResizing = null;\r\n        this._direction = null;\r\n        this._origSize = null;\r\n        this._origPos = null;\r\n        if (this._containment) {\r\n            this.resetBounding();\r\n        }\r\n    }\r\n\r\n    private onResizing() {\r\n        this.rzResizing.emit(this.getResizingEvent());\r\n    }\r\n\r\n    private getResizingEvent(): IResizeEvent {\r\n        return {\r\n            host: this.el.nativeElement,\r\n            handle: this._handleResizing ? this._handleResizing.el : null,\r\n            size: {\r\n                width: this._currSize.width,\r\n                height: this._currSize.height\r\n            },\r\n            position: {\r\n                top: this._currPos.y,\r\n                left: this._currPos.x\r\n            },\r\n            direction: { ...this._directionChanged },\r\n            actions: {\r\n                stopResize: () => {\r\n                    this.onMouseLeave();\r\n                },\r\n                updateParams: (datas) => {\r\n                    this.updateParams(datas);\r\n                }\r\n            }\r\n        };\r\n    }\r\n    /**\r\n     * ç¨äºä¼ éåé\r\n     * @param params \r\n     */\r\n    private updateParams(params) {\r\n        if (params && params.hasOwnProperty('fixedEdge')) {\r\n            this.fixedEdge = params['fixedEdge'];\r\n        }\r\n    }\r\n    private updateDirection() {\r\n        this._direction = {\r\n            n: !!this._handleResizing.type.match(/n/),\r\n            s: !!this._handleResizing.type.match(/s/),\r\n            w: !!this._handleResizing.type.match(/w/),\r\n            e: !!this._handleResizing.type.match(/e/)\r\n        };\r\n\r\n        this._directionChanged = { ...this._direction };\r\n\r\n        // if aspect ration should be preserved:\r\n        if (this.rzAspectRatio) {\r\n\r\n            // if north then west (unless ne)\r\n            if (this._directionChanged.n && !this._directionChanged.e) {\r\n                this._directionChanged.w = true;\r\n            }\r\n\r\n            // if south then east (unless sw)\r\n            if (this._directionChanged.s && !this._directionChanged.w) {\r\n                this._directionChanged.e = true;\r\n            }\r\n\r\n            // if east then south (unless ne)\r\n            if (this._directionChanged.e && !this._directionChanged.n) {\r\n                this._directionChanged.s = true;\r\n            }\r\n\r\n            // if west then south (unless nw)\r\n            if (this._directionChanged.w && !this._directionChanged.n) {\r\n                this._directionChanged.s = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    private resizeTo(p: Position) {\r\n        p.subtract(this._origMousePos);\r\n\r\n        const tmpX = Math.round(p.x / this._gridSize.x) * this._gridSize.x;\r\n        const tmpY = Math.round(p.y / this._gridSize.y) * this._gridSize.y;\r\n\r\n        if (this._direction.n) {\r\n            // n, ne, nw\r\n            this._currPos.y = this._origPos.y + tmpY;\r\n            this._currSize.height = this._origSize.height - tmpY;\r\n        } else if (this._direction.s) {\r\n            // s, se, sw\r\n            this._currSize.height = this._origSize.height + tmpY;\r\n        }\r\n\r\n        if (this._direction.e) {\r\n            // e, ne, se\r\n            this._currSize.width = this._origSize.width + tmpX;\r\n        } else if (this._direction.w) {\r\n            // w, nw, sw\r\n            this._currSize.width = this._origSize.width - tmpX;\r\n            this._currPos.x = this._origPos.x + tmpX;\r\n        }\r\n\r\n        this.checkBounds();\r\n        this.checkSize();\r\n        this.adjustByRatio();\r\n        this.doResize();\r\n    }\r\n\r\n    private doResize() {\r\n        const container = this.el.nativeElement;\r\n        if (!this._direction || this._direction.n || this._direction.s || this._aspectRatio) {\r\n            this.renderer.setStyle(container, 'height', this._currSize.height + 'px');\r\n        }\r\n        if (!this._direction || this._direction.w || this._direction.e || this._aspectRatio) {\r\n            this.renderer.setStyle(container, 'width', this._currSize.width + 'px');\r\n        }\r\n        if (!this.fixedEdge) {\r\n            this.renderer.setStyle(container, 'left', this._currPos.x + 'px');\r\n            this.renderer.setStyle(container, 'top', this._currPos.y + 'px');\r\n        }\r\n    }\r\n\r\n    private adjustByRatio() {\r\n        if (this._aspectRatio && !this._adjusted) {\r\n            if (this._direction.e || this._direction.w) {\r\n                const newHeight = Math.floor(this._currSize.width / this._aspectRatio);\r\n\r\n                if (this._direction.n) {\r\n                    this._currPos.y += this._currSize.height - newHeight;\r\n                }\r\n\r\n                this._currSize.height = newHeight;\r\n            } else {\r\n                const newWidth = Math.floor(this._aspectRatio * this._currSize.height);\r\n\r\n                if (this._direction.n) {\r\n                    this._currPos.x += this._currSize.width - newWidth;\r\n                }\r\n\r\n                this._currSize.width = newWidth;\r\n            }\r\n        }\r\n    }\r\n\r\n    private checkBounds() {\r\n        if (this._containment) {\r\n            const maxWidth = this._bounding.width - this._bounding.pr - this._bounding.deltaL - this._bounding.translateX - this._currPos.x;\r\n            const maxHeight = this._bounding.height - this._bounding.pb - this._bounding.deltaT - this._bounding.translateY - this._currPos.y;\r\n\r\n            if (this._direction.n && (this._currPos.y + this._bounding.translateY < 0)) {\r\n                this._currPos.y = -this._bounding.translateY;\r\n                this._currSize.height = this._origSize.height + this._origPos.y + this._bounding.translateY;\r\n            }\r\n\r\n            if (this._direction.w && (this._currPos.x + this._bounding.translateX) < 0) {\r\n                this._currPos.x = -this._bounding.translateX;\r\n                this._currSize.width = this._origSize.width + this._origPos.x + this._bounding.translateX;\r\n            }\r\n\r\n            if (this._currSize.width > maxWidth) {\r\n                this._currSize.width = maxWidth;\r\n            }\r\n\r\n            if (this._currSize.height > maxHeight) {\r\n                this._currSize.height = maxHeight;\r\n            }\r\n\r\n            /**\r\n             * Fix Issue: Additional check for aspect ratio\r\n             * https://github.com/xieziyu/angular2-draggable/issues/132\r\n             */\r\n            if (this._aspectRatio) {\r\n                this._adjusted = false;\r\n\r\n                if ((this._direction.w || this._direction.e) &&\r\n                    (this._currSize.width / this._aspectRatio) >= maxHeight) {\r\n                    const newWidth = Math.floor(maxHeight * this._aspectRatio);\r\n\r\n                    if (this._direction.w) {\r\n                        this._currPos.x += this._currSize.width - newWidth;\r\n                    }\r\n\r\n                    this._currSize.width = newWidth;\r\n                    this._currSize.height = maxHeight;\r\n                    this._adjusted = true;\r\n                }\r\n\r\n                if ((this._direction.n || this._direction.s) &&\r\n                    (this._currSize.height * this._aspectRatio) >= maxWidth) {\r\n                    const newHeight = Math.floor(maxWidth / this._aspectRatio);\r\n\r\n                    if (this._direction.n) {\r\n                        this._currPos.y += this._currSize.height - newHeight;\r\n                    }\r\n\r\n                    this._currSize.width = maxWidth;\r\n                    this._currSize.height = newHeight;\r\n                    this._adjusted = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private checkSize() {\r\n        const minHeight = !this.rzMinHeight ? 1 : this.rzMinHeight;\r\n        const minWidth = !this.rzMinWidth ? 1 : this.rzMinWidth;\r\n\r\n        if (this._currSize.height < minHeight) {\r\n            this._currSize.height = minHeight;\r\n\r\n            if (this._direction.n) {\r\n                this._currPos.y = this._origPos.y + (this._origSize.height - minHeight);\r\n            }\r\n        }\r\n\r\n        if (this._currSize.width < minWidth) {\r\n            this._currSize.width = minWidth;\r\n\r\n            if (this._direction.w) {\r\n                this._currPos.x = this._origPos.x + (this._origSize.width - minWidth);\r\n            }\r\n        }\r\n\r\n        if (this.rzMaxHeight && this._currSize.height > this.rzMaxHeight) {\r\n            this._currSize.height = this.rzMaxHeight;\r\n\r\n            if (this._direction.n) {\r\n                this._currPos.y = this._origPos.y + (this._origSize.height - this.rzMaxHeight);\r\n            }\r\n        }\r\n\r\n        if (this.rzMaxWidth && this._currSize.width > this.rzMaxWidth) {\r\n            this._currSize.width = this.rzMaxWidth;\r\n\r\n            if (this._direction.w) {\r\n                this._currPos.x = this._origPos.x + (this._origSize.width - this.rzMaxWidth);\r\n            }\r\n        }\r\n    }\r\n\r\n    private getBounding() {\r\n        const el = this._containment;\r\n        const computed = window.getComputedStyle(el);\r\n        if (computed) {\r\n            let p = computed.getPropertyValue('position');\r\n\r\n            const nativeEl = window.getComputedStyle(this.el.nativeElement);\r\n            let transforms = nativeEl.getPropertyValue('transform').replace(/[^-\\d,]/g, '').split(',');\r\n\r\n            this._bounding = {};\r\n            this._bounding.width = el.clientWidth;\r\n            this._bounding.height = el.clientHeight;\r\n            this._bounding.pr = parseInt(computed.getPropertyValue('padding-right'), 10);\r\n            this._bounding.pb = parseInt(computed.getPropertyValue('padding-bottom'), 10);\r\n            this._bounding.deltaL = this.el.nativeElement.offsetLeft - this._currPos.x;\r\n            this._bounding.deltaT = this.el.nativeElement.offsetTop - this._currPos.y;\r\n\r\n            if (transforms.length >= 6) {\r\n                this._bounding.translateX = parseInt(transforms[4], 10);\r\n                this._bounding.translateY = parseInt(transforms[5], 10);\r\n            } else {\r\n                this._bounding.translateX = 0;\r\n                this._bounding.translateY = 0;\r\n            }\r\n\r\n            this._bounding.position = computed.getPropertyValue('position');\r\n\r\n            if (p === 'static') {\r\n                this.renderer.setStyle(el, 'position', 'relative');\r\n            }\r\n        }\r\n    }\r\n\r\n    private resetBounding() {\r\n        if (this._bounding && this._bounding.position === 'static') {\r\n            this.renderer.setStyle(this._containment, 'position', 'relative');\r\n        }\r\n        this._bounding = null;\r\n    }\r\n\r\n    private getGridSize() {\r\n        // set default value:\r\n        this._gridSize = { x: 1, y: 1 };\r\n\r\n        if (this.rzGrid) {\r\n            if (typeof this.rzGrid === 'number') {\r\n                this._gridSize = { x: this.rzGrid, y: this.rzGrid };\r\n            } else if (Array.isArray(this.rzGrid)) {\r\n                this._gridSize = { x: this.rzGrid[0], y: this.rzGrid[1] };\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { AngularDraggableDirective } from './angular-draggable.directive';\r\nimport { AngularResizableDirective } from './angular-resizeable.directive';\r\n\r\n@NgModule({\r\n  imports: [\r\n  ],\r\n  declarations: [\r\n    AngularDraggableDirective,\r\n    AngularResizableDirective\r\n  ],\r\n  exports: [\r\n    AngularDraggableDirective,\r\n    AngularResizableDirective\r\n  ]\r\n})\r\nexport class AngularDraggableModule { }\r\n"]}