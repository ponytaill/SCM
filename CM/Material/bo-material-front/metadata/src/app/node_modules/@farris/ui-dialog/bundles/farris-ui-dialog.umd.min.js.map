{"version":3,"sources":["ng://@farris/ui-dialog/lib/dialog.service.ts","ng://@farris/ui-dialog/lib/dialog/dialog.component.ts","ng://@farris/ui-dialog/lib/dialog.module.ts"],"names":["DialogService","prototype","hasDialogOpened","tags","k","_tags","dlgs","window","document","querySelectorAll","Array","from","filter","n","classList","some","item","forEach","n1","tagName","getComputedStyle","display","querySelector","Injectable","DialogComponent","ngOnInit","_this","this","hostId","Date","getTime","render2","setProperty","el","nativeElement","beforeOpen","beforeClose","modal","onShown","subscribe","opened","emit","onHidden","closed","checkDialogSize","setTimeout","parentElement","appendChild","body","ngOnChanges","changes","ngOnDestroy","destroy","ngAfterViewInit","dlgHeaderLineHeight","getDialogHeaderLineHeight","dialogHeaderHeight","modalHeader","style","height","dialogFooterHeight","footer","modalContent","originalHeight","originalWidth","width","resetPosition","windowResize$","fromEvent","pipe","delay","e","winWidth","innerWidth","winHeight","innerHeight","isMax","maxDialog","toCenter","x","y","dialogEl","getDlgElement","setStyle","draggbar","position","removeChild","unsubscribe","Math","ceil","getBoundingClientRect","getDialogFooterHeight","footerEl","Object","defineProperty","headerHeight","footerHeight","contentHeight","showButtons","contentWidth","header","_checkDialogSize","winSize","offsetWidth","offsetHeight","newSize","widthChange","heightChange","updateModalBodyHeight","contentEl","size","marginLeft","Number","parseInt","marginTop","openDialog","flag","show","closeDialog","canClose","hide","result","Observable","Promise","then","close","$event","stopPropagation","reSize","resized","onResizing","opts","resizing","resizeStop","dropdown","prevWidth","prevHeight","draggable","resizable","maxed","revertDialog","ww","wh","changeDialogSize","Component","args","selector","template","Renderer2","ElementRef","Input","ViewChild","ModalDirective","AngularDraggableDirective","Output","ContentChild","title","iconCls","undefined","minWidth","minHeight","maxWidth","maxHeight","showCloseButton","showMaxButton","showMinButton","buttonAlign","scrollConfig","EventEmitter","enableScroll","FarrisDialogModule","forRoot","ngModule","providers","NgModule","declarations","imports","PerfectScrollbarModule","AngularDraggableModule","ModalModule","CommonModule","exports"],"mappings":"gqBAAA,IAAAA,GAIIA,EAAAC,UAAAC,gBAAA,SAAgBC,OACVC,EAAI,EACJC,EAAQ,8BACRF,IACAE,GAAS,IAAMF,OAEbG,EAAOC,OAAOC,SAASC,iBAAiBJ,GAc9C,OAbiBK,MAAMC,KAAKL,GAAMM,OAAM,SAACC,GAAK,OAACH,MAAMC,KAAKL,EAAK,GAAGQ,WAAWC,KAAI,SAACC,GAAQ,MAAQ,gBAARA,MACjFC,QAAO,SAAEJ,OACVK,EAAK,GAME,MAJPA,EADc,QAAdL,EAAEM,QACGZ,OAAOa,iBAAiBP,GAAGQ,QAE1Bd,OAAOa,iBAAkBP,EAAES,cAAc,QAAQD,UAEnC,UAAPH,GACbd,MAIG,EAAJA,uBAtBZmB,EAAAA,aAwBDvB,GAxBA,SAAAA,YC4GIwB,EAAAvB,UAAAwB,SAAA,WAAA,IAAAC,EAAAC,KACIA,KAAKC,OAAS,kBAAiB,IAAIC,MAAOC,UAC1CH,KAAKI,QAAQC,YAAYL,KAAKM,GAAGC,cAAe,KAAMP,KAAKC,QACtDD,KAAKQ,aACNR,KAAKQ,WAAU,WAAS,OAAA,IAGvBR,KAAKS,cACNT,KAAKS,YAAW,WAAS,OAAA,IAG7BT,KAAKU,MAAMC,QAAQC,UAAS,WAIxBb,EAAKc,OAAOC,SAGhBd,KAAKU,MAAMK,SAASH,UAAS,WAAO,OAAAb,EAAKiB,OAAOF,SAEhDd,KAAKiB,kBACLC,WAAU,WACFnB,EAAKoB,cACLpB,EAAKoB,cAAcC,YAAYrB,EAAKO,GAAGC,eAEvC1B,SAASwC,KAAKD,YAAYrB,EAAKO,GAAGC,gBAEvC,MAGPV,EAAAvB,UAAAgD,YAAA,SAAYC,KAGZ1B,EAAAvB,UAAAkD,YAAA,WAAA,IAAAzB,EAAAC,KACIkB,WAAU,WACNnB,EAAK0B,UACL1B,EAAKO,GAAK,KACNP,EAAKoB,gBACLpB,EAAKoB,cAAgB,OAE1B,MAGPtB,EAAAvB,UAAAoD,gBAAA,WAAA,IAAA3B,EAAAC,KAOI,GANAA,KAAK2B,oBAAsB3B,KAAK4B,4BAE5B5B,KAAK6B,qBACL7B,KAAK8B,YAAYvB,cAAcwB,MAAMC,OAAYhC,KAAK6B,mBAAkB,MAGxE7B,KAAKiC,mBAAoB,KACnBC,EAASlC,KAAKmC,aAAa5B,cAAcZ,cAAc,iBACzDuC,IACAA,EAAOH,MAAMC,OAAYhC,KAAKiC,mBAAkB,MAIxDjC,KAAKoC,eAAiBpC,KAAKgC,OAC3BhC,KAAKqC,cAAgBrC,KAAKsC,MAE1BtC,KAAKuC,gBAELvC,KAAKwC,cAAgBC,EAAAA,UAAU7D,OAAQ,UAAU8D,KAC7CC,EAAAA,MAAM,KACR/B,UAAS,SAAEgC,OACHC,EAAYjE,OAAOkE,WAAY,GAC/BC,EAAYnE,OAAOoE,YAAc,GACnCjD,EAAKkD,MACLlD,EAAKmD,aAGDnD,EAAKuC,MAAQO,GAAY9C,EAAKiC,OAASe,IACvChD,EAAKmD,YAIbnD,EAAKkD,MAAQlD,EAAKkD,OAAUlD,EAAKuC,OAASO,EAC1C9C,EAAKoD,SAAS,EAAG,MAIzBtD,EAAAvB,UAAA6E,SAAA,SAASC,EAAWC,OACVC,EAAWtD,KAAKuD,gBACtBvD,KAAKuC,gBACLvC,KAAKI,QAAQoD,SAASF,EAAU,YAAa,eAAeF,EAAC,OAAOC,EAAC,YACrErD,KAAKI,QAAQoD,SAASF,EAAU,MAAO,OACvCtD,KAAKI,QAAQoD,SAASF,EAAU,OAAQ,OACxCtD,KAAKyD,SAASC,SAAW,CAAEN,EAACA,EAAEC,EAACA,GAC/BrD,KAAKyD,SAASlB,iBAGlB1C,EAAAvB,UAAAmD,QAAA,WACSzB,KAAKmB,cAKFnB,KAAKmB,cAAcxB,cAAc,IAAIK,KAAKC,SAC1CD,KAAKmB,cAAcwC,YAAY3D,KAAKM,GAAGC,eALvC1B,SAASwC,KAAK1B,cAAc,IAAIK,KAAKC,SACrCpB,SAASwC,KAAKsC,YAAY3D,KAAKM,GAAGC,eAQtCP,KAAKwC,gBACLxC,KAAKwC,cAAcoB,cACnB5D,KAAKwC,cAAgB,OAIrB3C,EAAAvB,UAAAiF,cAAR,WACI,OAAOvD,KAAKM,GAAGC,cAAcZ,cAAc,kBAGvCE,EAAAvB,UAAAsD,0BAAR,WACI,OAAOiC,KAAKC,KAAK9D,KAAK8B,YAAYvB,cAAcwD,wBAAwB/B,SAGpEnC,EAAAvB,UAAA0F,sBAAR,eACUC,EAAYjE,KAAKmC,aAAa5B,cAAcZ,cAAc,iBAChE,OAAIsE,EACOJ,KAAKC,KAAKG,EAASF,wBAAwB/B,QAG9C,GAGZkC,OAAAC,eAAItE,EAAAvB,UAAA,OAAI,KAAR,eAEU8F,EAAepE,KAAK4B,4BACpByC,EAAerE,KAAKgE,wBAEtBM,EAAgBtE,KAAKgC,OAASoC,EAIlC,OAHIpE,KAAKuE,cACLD,GAAgCD,GAE7B,CACH/B,MAAOtC,KAAKsC,MACZN,OAAQhC,KAAKgC,OACbsC,cAAaA,EACbE,aAAcxE,KAAKsC,MACnBmC,OAAQL,EACRlC,OAAQmC,oCAIRxE,EAAAvB,UAAAoG,iBAAR,SAAyBpC,EAAeN,OAG9B2C,EAAU,CACZrC,MAAOzD,SAASwC,KAAKuD,YACrB5C,OAAQpD,OAAOoE,aAgBnB,OAbIhD,KAAKmB,gBACLwD,EAAQrC,MAAQtC,KAAKmB,cAAcyD,YACnCD,EAAQ3C,OAAShC,KAAKmB,cAAc0D,cAGpCF,EAAQrC,OAASqC,EAAQrC,MAAQA,IACjCA,EAAQqC,EAAQrC,OAGhBqC,EAAQ3C,QAAU2C,EAAQ3C,OAASA,IACnCA,EAAS2C,EAAQ3C,QAGd,CACHM,MAAKA,EACLN,OAAMA,IAINnC,EAAAvB,UAAA2C,gBAAR,eACU6D,EAAU9E,KAAK0E,iBAAiB1E,KAAKsC,MAAOtC,KAAKgC,QACnDhC,KAAKsC,QAAUwC,EAAQxC,QACvBtC,KAAKsC,MAAQwC,EAAQxC,MAAQ,GAC7BtC,KAAK+E,YAAYjE,KAAKd,KAAKsC,QAG3BtC,KAAKgC,SAAW8C,EAAQ9C,SACxBhC,KAAKgC,OAAS8C,EAAQ9C,OAAS,GAC/BhC,KAAKgF,aAAalE,KAAKd,KAAKgC,UAIpCnC,EAAAvB,UAAA2G,sBAAA,eACUC,EAAYlF,KAAKM,GAAGC,cAAcZ,cAAc,eAChD2E,EAAgBtE,KAAKmF,KAAKb,cAChCtE,KAAKI,QAAQoD,SAAS0B,EAAW,SAAUZ,EAAgB,OAG/DzE,EAAAvB,UAAAiE,cAAA,eACU6C,EAAaC,OAAOC,SAAS,IAAMtF,KAAKsC,MAAQ,GAAK,KACrDiD,EAAYF,OAAOC,SAAS,IAAMtF,KAAKgC,OAAS,GAAK,KAErDsB,EAAWtD,KAAKM,GAAGC,cAAcZ,cAAc,iBAC/CuF,EAAYlF,KAAKM,GAAGC,cAAcZ,cAAc,eACrCK,KAAKM,GAAGC,cAAcZ,cAAc,iBAErDK,KAAKI,QAAQoD,SAASF,EAAU,cAAe8B,GAC/CpF,KAAKI,QAAQoD,SAASF,EAAU,aAAciC,OAExCjB,EAAgBtE,KAAKmF,KAAKb,cAEhCtE,KAAKI,QAAQoD,SAAS0B,EAAW,SAAUZ,EAAgB,MAC3DtE,KAAKI,QAAQoD,SAAS0B,EAAW,WAAY,UAE7ClF,KAAKI,QAAQoD,SAASF,EAAU,YAAa,+BAGzCzD,EAAAvB,UAAAkH,WAAR,SAAmBC,GACXA,IACAzF,KAAKuC,gBACLvC,KAAKyD,SAASlB,gBACdvC,KAAKU,MAAMgF,SAIX7F,EAAAvB,UAAAqH,YAAR,SAAoBC,GACZA,GACA5F,KAAKU,MAAMmF,QAInBhG,EAAAvB,UAAAoH,KAAA,WAAA,IAAA3F,EAAAC,KACU8F,EAAS9F,KAAKQ,aACE,kBAAXsF,EACP9F,KAAKwF,WAAWM,GAEZA,aAAkBC,EAAAA,WAClBD,EAAOlF,UAAS,SAAE6E,GACd1F,EAAKyF,WAAWC,KAGhBK,aAAkBE,SAClBF,EAAOG,KAAI,SAAER,GACT1F,EAAKyF,WAAWC,MAOpC5F,EAAAvB,UAAA4H,MAAA,SAAMC,GAAN,IAAApG,EAAAC,KACQmG,GACAA,EAAOC,sBAELN,EAAS9F,KAAKS,cACE,kBAAXqF,EACP9F,KAAK2F,YAAYG,GAEbA,aAAkBC,EAAAA,WAClBD,EAAOlF,UAAS,SAAE6E,GACd1F,EAAK4F,YAAYF,KAGjBK,aAAkBE,SAClBF,EAAOG,KAAI,SAAER,GACT1F,EAAK4F,YAAYF,MAOrC5F,EAAAvB,UAAA+H,OAAA,SAAOlB,GACCA,EAAK7C,QACLtC,KAAKsC,MAAQ6C,EAAK7C,OAElB6C,EAAKnD,SACLhC,KAAKgC,OAASmD,EAAKnD,QAGvBhC,KAAKuC,gBACLvC,KAAKyD,SAASlB,gBACdvC,KAAK+E,YAAYjE,KAAKd,KAAKsC,OAC3BtC,KAAKgF,aAAalE,KAAKd,KAAKgC,QAC5BhC,KAAKsG,QAAQxF,KAAK,CAAEqE,KAAM,CAAE7C,MAAOtC,KAAKsC,MAAON,OAAQhC,KAAKgC,WAGhEnC,EAAAvB,UAAAiI,WAAA,SAAWC,GACPA,EAAKrB,KAAK7C,MAAQkE,EAAKrB,KAAK7C,MAAQ,IAAM,IAAMkE,EAAKrB,KAAK7C,MAC1DkE,EAAKrB,KAAKnD,OAASwE,EAAKrB,KAAKnD,OAAS,IAAM,IAAMwE,EAAKrB,KAAKnD,OAE5DhC,KAAKsC,MAAQkE,EAAKrB,KAAK7C,MACvBtC,KAAKgC,OAASwE,EAAKrB,KAAKnD,OACxBhC,KAAKyG,SAAS3F,KAAK0F,IAGvB3G,EAAAvB,UAAAoI,WAAA,SAAWF,GACPA,EAAKrB,KAAK7C,MAAQkE,EAAKrB,KAAK7C,MAAQ,IAAM,IAAMkE,EAAKrB,KAAK7C,MAC1DkE,EAAKrB,KAAKnD,OAASwE,EAAKrB,KAAKnD,OAAS,IAAM,IAAMwE,EAAKrB,KAAKnD,OAE5DhC,KAAKsC,MAAQkE,EAAKrB,KAAK7C,MACvBtC,KAAKgC,OAASwE,EAAKrB,KAAKnD,OACxBhC,KAAKiF,wBAELjF,KAAK+E,YAAYjE,KAAKd,KAAKsC,OAC3BtC,KAAKgF,aAAalE,KAAKd,KAAKgC,QAE5BhC,KAAKsG,QAAQxF,KAAK0F,IAGtB3G,EAAAvB,UAAAqI,SAAA,SAASrG,KAcTT,EAAAvB,UAAA4E,UAAA,WACI,GAAKlD,KAAKM,GAAV,CAIAN,KAAK4G,UAAY5G,KAAKsC,MACtBtC,KAAK6G,WAAa7G,KAAKgC,OAIvBhC,KAAKsC,MAAQ1D,OAAOkE,WAAa,GACjC9C,KAAKgC,OAASpD,OAAOoE,YAAc,GAGnChD,KAAK8G,WAAY,EACjB9G,KAAK+G,WAAY,MACXzD,EAAWtD,KAAKM,GAAGC,cAAcZ,cAAc,iBACrDK,KAAKI,QAAQoD,SAASF,EAAU,MAAO,OACvCtD,KAAKI,QAAQoD,SAASF,EAAU,OAAQ,OAExCtD,KAAKiD,OAAQ,EACbjD,KAAKuC,gBACLvC,KAAKsG,QAAQxF,KAAK,CAAEqE,KAAM,CAAE7C,MAAOtC,KAAKsC,MAAON,OAAQhC,KAAKgC,UAC5DhC,KAAKgH,MAAMlG,KAAK,CAAEqE,KAAM,CAAE7C,MAAOtC,KAAKsC,MAAON,OAAQhC,KAAKgC,YAG9DnC,EAAAvB,UAAA2I,aAAA,WACIjH,KAAKiD,OAAQ,MAGPiE,EAAKtI,OAAOkE,WAAa,GACzBqE,EAAKvI,OAAOoE,YAAc,GAEhChD,KAAKsC,MAAQtC,KAAK4G,WAAaM,EAAKlH,KAAKqC,cAAgBrC,KAAK4G,UAC9D5G,KAAKgC,OAAShC,KAAK6G,YAAcM,EAAKnH,KAAKoC,eAAiBpC,KAAK6G,WAE7D7G,KAAKsC,MAAQ4E,IACblH,KAAKsC,MAAQ4E,GAGblH,KAAKgC,OAASmF,IACdnH,KAAKgC,OAASmF,GAIlBnH,KAAK8G,WAAY,EACjB9G,KAAK+G,WAAY,EACjB/G,KAAKuC,gBACLvC,KAAKyD,SAASlB,gBACdvC,KAAKsG,QAAQxF,KAAK,CAAEqE,KAAM,CAAE7C,MAAOtC,KAAKsC,MAAON,OAAQhC,KAAKgC,UAC5DhC,KAAKgH,MAAMlG,KAAK,CAAEqE,KAAM,CAAE7C,MAAOtC,KAAKsC,MAAON,OAAQhC,KAAKgC,WAG9DnC,EAAAvB,UAAA8I,iBAAA,WACQpH,KAAKiD,MACLjD,KAAKiH,eAELjH,KAAKkD,iCA9chBmE,EAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,gBACVC,SAAA,+3EAdqCC,EAAAA,iBACrCC,EAAAA,6CAmBCC,EAAAA,uBAGAA,EAAAA,qBAGAA,EAAAA,sBAEAA,EAAAA,wBAEAA,EAAAA,yBAEAA,EAAAA,wBAEAA,EAAAA,yBACAA,EAAAA,2BAGAA,EAAAA,+BAEAA,EAAAA,6BAEAA,EAAAA,6BAEAA,EAAAA,yBAGAA,EAAAA,yBAEAA,EAAAA,2BAGAA,EAAAA,4BACAA,EAAAA,0BAEAA,EAAAA,2BACAA,EAAAA,qBAEAC,EAAAA,UAASN,KAAA,CAACO,EAAAA,kCACVD,EAAAA,UAASN,KAAA,CAACQ,EAAAA,2CAEVC,EAAAA,uBACAA,EAAAA,wBACAA,EAAAA,yBACAA,EAAAA,sBACAA,EAAAA,4BACAA,EAAAA,6BACAA,EAAAA,6BAEAJ,EAAAA,uBAEAA,EAAAA,kCAGAA,EAAAA,kCAGAA,EAAAA,6BAGAA,EAAAA,4BAGAK,EAAAA,aAAYV,KAAA,CAAC,sCAWbM,EAAAA,UAASN,KAAA,CAAC,qCACVM,EAAAA,UAASN,KAAA,CAAC,aA8XfzH,GA1XI,SAAAA,EAAoBO,EAA2BE,GAA3BN,KAAAI,QAAAA,EAA2BJ,KAAAM,GAAAA,EA/EtCN,KAAAiI,MAAQ,OAGRjI,KAAAkI,QAAkBC,UAGlBnI,KAAAsC,MAAQ,IAERtC,KAAAgC,OAAS,IAEThC,KAAAoI,SAAW,IAEXpI,KAAAqI,UAAY,IAEZrI,KAAAsI,SAAmB,KACnBtI,KAAAuI,UAAoB,KAGpBvI,KAAAuE,aAAc,EAEdvE,KAAAwI,iBAAkB,EAElBxI,KAAAyI,eAAgB,EAEhBzI,KAAA0I,eAAgB,EAGhB1I,KAAA+G,WAAY,EAEZ/G,KAAA8G,WAAY,EAGZ9G,KAAA2I,YAAc,SACd3I,KAAA4I,aAAe,GAQd5I,KAAAa,OAAS,IAAIgI,EAAAA,aACb7I,KAAAgB,OAAS,IAAI6H,EAAAA,aACb7I,KAAAsG,QAAU,IAAIuC,EAAAA,aACd7I,KAAAyG,SAAW,IAAIoC,EAAAA,aACf7I,KAAAgH,MAAQ,IAAI6B,EAAAA,aACZ7I,KAAA+E,YAAc,IAAI8D,EAAAA,aAClB7I,KAAAgF,aAAe,IAAI6D,EAAAA,aAEpB7I,KAAA8I,cAAe,EAKf9I,KAAA6B,mBAAqB,EAGrB7B,KAAAiC,mBAAqB,EAGrBjC,KAAAmB,cAAgB,KAIzBnB,KAAAiD,OAAQ,EASAjD,KAAAC,OAAS,GAITD,KAAAwC,cAA8B,KC1G1C,IAAAuG,GA0BSA,EAAAC,QAAP,WACE,MAAO,CACHC,SAAUF,EACVG,UAAW,CACP7K,yBApBX8K,EAAAA,SAAQ7B,KAAA,CAAC,CACR8B,aAAc,CACZvJ,GAEFwJ,QAAS,CACPC,EAAAA,uBACAC,EAAAA,uBACAC,EAAAA,YACAC,EAAAA,cAEFC,QAAS,CACP7J,EACA2J,EAAAA,iBAYJT,GAxBA,SAAAA","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class DialogService {\r\n    hasDialogOpened(tags?: string): boolean {\r\n      let k = 0;\r\n      let _tags = 'farris-dialog,.overlay-pane';\r\n      if (tags) {\r\n          _tags += ',' + tags ;\r\n      }\r\n      const dlgs = window.document.querySelectorAll(_tags);\r\n      const elements = Array.from(dlgs).filter(n => !Array.from(dlgs[0].classList).some(item => item == 'f-combo-list'));\r\n      elements.forEach((n: any) => {\r\n          let n1 = '';\r\n          if (n.tagName === 'DIV') {\r\n              n1 = window.getComputedStyle(n).display;\r\n          } else {\r\n              n1 =  window.getComputedStyle( n.querySelector('div')).display;\r\n          }\r\n          if (n1 === '' || n1 === 'block') {\r\n              k++;\r\n          }\r\n      });\r\n\r\n      return k > 0;\r\n    }\r\n}\r\n","/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-06 08:31:57\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-08-15 16:06:58\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport {\r\n    Component, OnInit, Input, ViewChild, Renderer2,\r\n    ElementRef, Output, EventEmitter, TemplateRef,\r\n    AfterViewInit, SimpleChanges, OnChanges, OnDestroy\r\n} from '@angular/core';\r\n\r\nimport { fromEvent, Observable, Subscription } from 'rxjs';\r\n\r\nimport { AngularDraggableDirective } from '@farris/ui-draggable';\r\nimport { ModalDirective } from '@farris/ui-modal';\r\nimport { ContentChild } from '@angular/core';\r\nimport { delay, windowWhen } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'farris-dialog',\r\n    templateUrl: './dialog.component.html',\r\n    styleUrls: ['./dialog.component.css']\r\n})\r\nexport class DialogComponent implements OnInit, AfterViewInit, OnChanges, OnDestroy {\r\n\r\n    /** çªå£æ é¢ */\r\n    @Input() title = 'ææ¯æ é¢';\r\n\r\n    /** æ é¢å¾æ  */\r\n    @Input() iconCls: string = undefined;\r\n\r\n    /** å®½åº¦ */\r\n    @Input() width = 300;\r\n    /** é«åº¦ */\r\n    @Input() height = 200;\r\n\r\n    @Input() minWidth = 100;\r\n\r\n    @Input() minHeight = 100;\r\n\r\n    @Input() maxWidth: number = null;\r\n    @Input() maxHeight: number = null;\r\n\r\n    /** æ¾ç¤ºåºé¨æé®åºåï¼é»è®¤æ¾ç¤º */\r\n    @Input() showButtons = true;\r\n    /** æ¾ç¤ºå³ä¸è§å³é­æé®ï¼é»è®¤æ¾ç¤º */\r\n    @Input() showCloseButton = true;\r\n    /** æ¾ç¤ºæå¤§åæé®ï¼é»è®¤æ¾ç¤º */\r\n    @Input() showMaxButton = true;\r\n    /** æ¾ç¤ºæå°åæé®ï¼é»è®¤ä¸æ¾ç¤º, æ¾ç¤ºåºæ¥ä¹æ²¡æç¨ */\r\n    @Input() showMinButton = false;\r\n\r\n    /** å¯ç¨ææ½æ¹åå°ºå¯¸å¤§å° */\r\n    @Input() resizable = true;\r\n    /** å¯ç¨æå¨çªå£ */\r\n    @Input() draggable = true;\r\n\r\n    /** æé®å¯¹é½æ¹å¼ */\r\n    @Input() buttonAlign = 'center';\r\n    @Input() scrollConfig = {};\r\n\r\n    @Input() beforeOpen: () => Observable<any> | Promise<any> | boolean;\r\n    @Input() beforeClose: () => Observable<any> | Promise<any> | boolean;\r\n\r\n    @ViewChild(ModalDirective) modal: ModalDirective;\r\n    @ViewChild(AngularDraggableDirective) draggbar: AngularDraggableDirective;\r\n\r\n    @Output() opened = new EventEmitter();\r\n    @Output() closed = new EventEmitter();\r\n    @Output() resized = new EventEmitter();\r\n    @Output() resizing = new EventEmitter();\r\n    @Output() maxed = new EventEmitter();\r\n    @Output() widthChange = new EventEmitter();\r\n    @Output() heightChange = new EventEmitter();\r\n\r\n    @Input() enableScroll = true;\r\n\r\n    @Input() buttons: TemplateRef<any>;\r\n\r\n    /** æ é¢æ é«åº¦ */\r\n    @Input() dialogHeaderHeight = 0;\r\n\r\n    /** æé®åºé«åº¦ */\r\n    @Input() dialogFooterHeight = 0;\r\n\r\n\r\n    @Input() parentElement = null;\r\n\r\n    /* template */\r\n    @ContentChild('toolTemplate') toolTemplate: TemplateRef<any>;\r\n    isMax = false; // æ¯å¦æå¤§çªå£\r\n    dlgHeaderLineHeight: any;\r\n\r\n    private originalWidth: number;  // è®°å½åå§çå®½åº¦\r\n    private originalHeight: number; // è®°å½åå§çé«åº¦\r\n\r\n    private prevWidth: number; // è®°å½ä¸æ¬¡çå®½åº¦\r\n    private prevHeight: number; // è®°å½ä¸æ¬¡çé«åº¦\r\n\r\n    private hostId = '';\r\n    @ViewChild('modalContent') modalContent: ElementRef;\r\n    @ViewChild('header') modalHeader: ElementRef;\r\n\r\n    private windowResize$: Subscription = null;\r\n\r\n    constructor(private render2: Renderer2, public el: ElementRef) { }\r\n\r\n    ngOnInit() {\r\n        this.hostId = `farris-dialog_${new Date().getTime()}`;\r\n        this.render2.setProperty(this.el.nativeElement, 'id', this.hostId);\r\n        if (!this.beforeOpen) {\r\n            this.beforeOpen = () => true;\r\n        }\r\n\r\n        if (!this.beforeClose) {\r\n            this.beforeClose = () => true;\r\n        }\r\n\r\n        this.modal.onShown.subscribe(() => {\r\n            // const zindex = this.modal.backdrop.location.nativeElement;\r\n            // this.render2.setStyle(this.el.nativeElement, 'position', 'absolute');\r\n            // this.render2.setStyle(this.el.nativeElement, 'z-index', '1041');\r\n            this.opened.emit();\r\n        });\r\n\r\n        this.modal.onHidden.subscribe(() => this.closed.emit());\r\n\r\n        this.checkDialogSize();\r\n        setTimeout(() => {\r\n            if (this.parentElement) {\r\n                this.parentElement.appendChild(this.el.nativeElement);\r\n            } else {\r\n                document.body.appendChild(this.el.nativeElement);\r\n            }\r\n        }, 100);\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        setTimeout(() => {\r\n            this.destroy();\r\n            this.el = null;\r\n            if (this.parentElement) {\r\n                this.parentElement = null;\r\n            }\r\n        }, 150);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.dlgHeaderLineHeight = this.getDialogHeaderLineHeight();\r\n\r\n        if (this.dialogHeaderHeight) {\r\n            this.modalHeader.nativeElement.style.height = `${this.dialogHeaderHeight}px`;\r\n        }\r\n\r\n        if (this.dialogFooterHeight) {\r\n            const footer = this.modalContent.nativeElement.querySelector('.modal-footer');\r\n            if (footer) {\r\n                footer.style.height = `${this.dialogFooterHeight}px`;\r\n            }\r\n        }\r\n\r\n        this.originalHeight = this.height;\r\n        this.originalWidth = this.width;\r\n\r\n        this.resetPosition();\r\n\r\n        this.windowResize$ = fromEvent(window, 'resize').pipe(\r\n            delay(50)\r\n        ).subscribe((e: any) => {\r\n            const winWidth =  window.innerWidth -20;\r\n            const winHeight = window.innerHeight - 20;\r\n            if (this.isMax) {\r\n                this.maxDialog();\r\n               \r\n            } else {\r\n                if (this.width > winWidth || this.height > winHeight) {\r\n                    this.maxDialog();\r\n                }\r\n            }\r\n\r\n            this.isMax = this.isMax &&  this.width == winWidth;\r\n            this.toCenter(0, 0);\r\n        });\r\n    }\r\n\r\n    toCenter(x: number, y: number) {\r\n        const dialogEl = this.getDlgElement();\r\n        this.resetPosition();\r\n        this.render2.setStyle(dialogEl, 'transform', `translate3d(${x}px, ${y}px, 0px)`);\r\n        this.render2.setStyle(dialogEl, 'top', '50%');\r\n        this.render2.setStyle(dialogEl, 'left', '50%');\r\n        this.draggbar.position = { x, y };\r\n        this.draggbar.resetPosition();\r\n    }\r\n\r\n    destroy() {\r\n        if (!this.parentElement) {\r\n            if (document.body.querySelector(`#${this.hostId}`)) {\r\n                document.body.removeChild(this.el.nativeElement);\r\n            }\r\n        } else {\r\n            if (this.parentElement.querySelector(`#${this.hostId}`)) {\r\n                this.parentElement.removeChild(this.el.nativeElement);\r\n            }\r\n        }\r\n\r\n        if (this.windowResize$) {\r\n            this.windowResize$.unsubscribe();\r\n            this.windowResize$ = null;\r\n        }\r\n    }\r\n\r\n    private getDlgElement() {\r\n        return this.el.nativeElement.querySelector('.modal-dialog');\r\n    }\r\n\r\n    private getDialogHeaderLineHeight() {\r\n        return Math.ceil(this.modalHeader.nativeElement.getBoundingClientRect().height);\r\n    }\r\n\r\n    private getDialogFooterHeight() {\r\n        const footerEl =  this.modalContent.nativeElement.querySelector('.modal-footer');\r\n        if (footerEl) {\r\n            return Math.ceil(footerEl.getBoundingClientRect().height);\r\n        }\r\n\r\n        return  0;\r\n    }\r\n\r\n    get size() {\r\n\r\n        const headerHeight = this.getDialogHeaderLineHeight();\r\n        const footerHeight = this.getDialogFooterHeight();\r\n\r\n        let contentHeight = this.height - headerHeight;\r\n        if (this.showButtons) {\r\n            contentHeight = contentHeight - footerHeight;\r\n        }\r\n        return {\r\n            width: this.width,\r\n            height: this.height,\r\n            contentHeight,\r\n            contentWidth: this.width,\r\n            header: headerHeight,\r\n            footer: footerHeight\r\n        };\r\n    }\r\n\r\n    private _checkDialogSize(width: number, height: number) {\r\n\r\n        // å¯è§åºåå°ºå¯¸\r\n        const winSize = {\r\n            width: document.body.offsetWidth,\r\n            height: window.innerHeight\r\n        };\r\n\r\n        if (this.parentElement) {\r\n            winSize.width = this.parentElement.offsetWidth;\r\n            winSize.height = this.parentElement.offsetHeight;\r\n        }\r\n\r\n        if (winSize.width && winSize.width < width) {\r\n            width = winSize.width;\r\n        }\r\n\r\n        if (winSize.height && winSize.height < height) {\r\n            height = winSize.height;\r\n        }\r\n\r\n        return {\r\n            width,\r\n            height\r\n        };\r\n    }\r\n\r\n    private checkDialogSize() {\r\n        const newSize = this._checkDialogSize(this.width, this.height);\r\n        if (this.width !== newSize.width) {\r\n            this.width = newSize.width - 20;\r\n            this.widthChange.emit(this.width);\r\n        }\r\n\r\n        if (this.height !== newSize.height) {\r\n            this.height = newSize.height - 20;\r\n            this.heightChange.emit(this.height);\r\n        }\r\n    }\r\n\r\n    updateModalBodyHeight() {\r\n        const contentEl = this.el.nativeElement.querySelector('.modal-body');\r\n        const contentHeight = this.size.contentHeight;\r\n        this.render2.setStyle(contentEl, 'height', contentHeight + 'px');\r\n    }\r\n\r\n    resetPosition() {\r\n        const marginLeft = Number.parseInt('' + -this.width / 2) + 'px';\r\n        const marginTop = Number.parseInt('' + -this.height / 2) + 'px';\r\n\r\n        const dialogEl = this.el.nativeElement.querySelector('.modal-dialog');\r\n        const contentEl = this.el.nativeElement.querySelector('.modal-body');\r\n        const footerEl = this.el.nativeElement.querySelector('.modal-footer');\r\n\r\n        this.render2.setStyle(dialogEl, 'margin-left', marginLeft);\r\n        this.render2.setStyle(dialogEl, 'margin-top', marginTop);\r\n\r\n        const contentHeight = this.size.contentHeight;\r\n\r\n        this.render2.setStyle(contentEl, 'height', contentHeight + 'px');\r\n        this.render2.setStyle(contentEl, 'overflow', 'hidden');\r\n\r\n        this.render2.setStyle(dialogEl, 'transform', 'translate3d(0px, 0px, 0px)');\r\n    }\r\n\r\n    private openDialog(flag: boolean) {\r\n        if (flag) {\r\n            this.resetPosition();\r\n            this.draggbar.resetPosition();\r\n            this.modal.show();\r\n        }\r\n    }\r\n\r\n    private closeDialog(canClose: boolean) {\r\n        if (canClose) {\r\n            this.modal.hide();\r\n        }\r\n    }\r\n\r\n    show() {\r\n        const result = this.beforeOpen();\r\n        if (typeof result === 'boolean') {\r\n            this.openDialog(result);\r\n        } else {\r\n            if (result instanceof Observable) {\r\n                result.subscribe((flag: boolean) => {\r\n                    this.openDialog(flag);\r\n                });\r\n            } else {\r\n                if (result instanceof Promise) {\r\n                    result.then((flag: boolean) => {\r\n                        this.openDialog(flag);\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    close($event?: MouseEvent) {\r\n        if ($event) {\r\n            $event.stopPropagation();\r\n        }\r\n        const result = this.beforeClose();\r\n        if (typeof result === 'boolean') {\r\n            this.closeDialog(result);\r\n        } else {\r\n            if (result instanceof Observable) {\r\n                result.subscribe((flag: boolean) => {\r\n                    this.closeDialog(flag);\r\n                });\r\n            } else {\r\n                if (result instanceof Promise) {\r\n                    result.then((flag: boolean) => {\r\n                        this.closeDialog(flag);\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    reSize(size: { width?: number, height?: number }) {\r\n        if (size.width) {\r\n            this.width = size.width;\r\n        }\r\n        if (size.height) {\r\n            this.height = size.height;\r\n        }\r\n\r\n        this.resetPosition();\r\n        this.draggbar.resetPosition();\r\n        this.widthChange.emit(this.width);\r\n        this.heightChange.emit(this.height);\r\n        this.resized.emit({ size: { width: this.width, height: this.height } });\r\n    }\r\n\r\n    onResizing(opts: any) {\r\n        opts.size.width = opts.size.width < 100 ? 100 : opts.size.width;\r\n        opts.size.height = opts.size.height < 100 ? 100 : opts.size.height;\r\n\r\n        this.width = opts.size.width;\r\n        this.height = opts.size.height;\r\n        this.resizing.emit(opts);\r\n    }\r\n\r\n    resizeStop(opts: any) {\r\n        opts.size.width = opts.size.width < 100 ? 100 : opts.size.width;\r\n        opts.size.height = opts.size.height < 100 ? 100 : opts.size.height;\r\n\r\n        this.width = opts.size.width;\r\n        this.height = opts.size.height;\r\n        this.updateModalBodyHeight();\r\n\r\n        this.widthChange.emit(this.width);\r\n        this.heightChange.emit(this.height);\r\n\r\n        this.resized.emit(opts);\r\n    }\r\n\r\n    dropdown(el: any) {\r\n        // const rect = el.getBoundingClientRect();\r\n        // this.render2.removeStyle(el, 'margin-top');\r\n        // this.render2.removeStyle(el, 'margin-left');\r\n        // this.render2.setStyle(el, 'top', `${rect.top}px`);\r\n        // this.render2.setStyle(el, 'left', `${rect.left}px`);\r\n\r\n        // this.render2.removeStyle(el, 'transform');\r\n        // this.render2.removeStyle(el, '-webkit-transform');\r\n        // this.render2.removeStyle(el, '-ms-transform');\r\n        // this.render2.removeStyle(el, '-moz-transform');\r\n        // this.render2.removeStyle(el, '-o-transform');\r\n    }\r\n\r\n    maxDialog() {\r\n        if (!this.el) {\r\n            return;\r\n        }\r\n        // console.log(`${document.scrollingElement.clientWidth}`)\r\n        this.prevWidth = this.width;\r\n        this.prevHeight = this.height;\r\n        // this.width = (document.scrollingElement?document.scrollingElement:document.documentElement)['clientWidth']  - 20;\r\n        // this.height = (document.scrollingElement?document.scrollingElement:document.documentElement)['clientHeight'] - 20;\r\n\r\n        this.width = window.innerWidth - 20;\r\n        this.height = window.innerHeight - 20;\r\n\r\n\r\n        this.draggable = false;\r\n        this.resizable = false;\r\n        const dialogEl = this.el.nativeElement.querySelector('.modal-dialog');\r\n        this.render2.setStyle(dialogEl, 'top', '50%');\r\n        this.render2.setStyle(dialogEl, 'left', '50%');\r\n\r\n        this.isMax = true;\r\n        this.resetPosition();\r\n        this.resized.emit({ size: { width: this.width, height: this.height } });\r\n        this.maxed.emit({ size: { width: this.width, height: this.height } });\r\n    }\r\n\r\n    revertDialog() {\r\n        this.isMax = false;\r\n\r\n\r\n        const ww = window.innerWidth - 20;\r\n        const wh = window.innerHeight - 20\r\n\r\n        this.width = this.prevWidth == ww ? this.originalWidth : this.prevWidth;\r\n        this.height = this.prevHeight == wh ? this.originalHeight : this.prevHeight;\r\n       \r\n        if (this.width > ww) {\r\n            this.width = ww;\r\n        }\r\n\r\n        if (this.height > wh) {\r\n            this.height = wh;\r\n        }\r\n\r\n\r\n        this.draggable = true;\r\n        this.resizable = true;\r\n        this.resetPosition();\r\n        this.draggbar.resetPosition();\r\n        this.resized.emit({ size: { width: this.width, height: this.height } });\r\n        this.maxed.emit({ size: { width: this.width, height: this.height } });\r\n    }\r\n\r\n    changeDialogSize() {\r\n        if (this.isMax) {\r\n            this.revertDialog();\r\n        } else {\r\n            this.maxDialog();\r\n        }\r\n    }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule, ModuleWithProviders } from '@angular/core';\r\n\r\nimport { PerfectScrollbarModule } from '@farris/ui-perfect-scrollbar';\r\nimport { AngularDraggableModule } from '@farris/ui-draggable';\r\nimport { ModalModule } from '@farris/ui-modal';\r\n\r\nimport { DialogComponent } from './dialog/dialog.component';\r\nimport { DialogService } from './dialog.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DialogComponent\r\n  ],\r\n  imports: [\r\n    PerfectScrollbarModule,\r\n    AngularDraggableModule,\r\n    ModalModule,\r\n    CommonModule,\r\n  ],\r\n  exports: [\r\n    DialogComponent,\r\n    ModalModule\r\n  ]\r\n})\r\nexport class FarrisDialogModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n        ngModule: FarrisDialogModule,\r\n        providers: [\r\n            DialogService\r\n        ]\r\n    };\r\n  }\r\n}\r\n"]}