/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, HostBinding, Output, Input } from '@angular/core';
import { EnumEditorComponent } from './enum-editor.component';
var EnumEditorFooterComponent = /** @class */ (function () {
    function EnumEditorFooterComponent(grid) {
        this.grid = grid;
        this.cls = 'f-filter-footer';
        this.showSortBtns = true;
        this.addFilter = new EventEmitter();
        this.clearFilter = new EventEmitter();
        this.moveTop = new EventEmitter();
        this.movePrev = new EventEmitter();
        this.moveNext = new EventEmitter();
        this.moveBottom = new EventEmitter();
    }
    /**
     * @return {?}
     */
    EnumEditorFooterComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () { };
    /**
     * @return {?}
     */
    EnumEditorFooterComponent.prototype.onAddFilter = /**
     * @return {?}
     */
    function () {
        this.addFilter.emit();
    };
    /**
     * @return {?}
     */
    EnumEditorFooterComponent.prototype.onClear = /**
     * @return {?}
     */
    function () {
        this.clearFilter.emit();
    };
    /**
     * @return {?}
     */
    EnumEditorFooterComponent.prototype.onMoveTop = /**
     * @return {?}
     */
    function () {
        this.moveTop.emit();
    };
    /**
     * @return {?}
     */
    EnumEditorFooterComponent.prototype.onMovePrev = /**
     * @return {?}
     */
    function () {
        this.movePrev.emit();
    };
    /**
     * @return {?}
     */
    EnumEditorFooterComponent.prototype.onMoveNext = /**
     * @return {?}
     */
    function () {
        this.moveNext.emit();
    };
    /**
     * @return {?}
     */
    EnumEditorFooterComponent.prototype.onMoveBottom = /**
     * @return {?}
     */
    function () {
        this.moveBottom.emit();
    };
    /**
     * @return {?}
     */
    EnumEditorFooterComponent.prototype.canUse = /**
     * @return {?}
     */
    function () {
        if (this.grid.currentEnumData) {
            return this.grid.data.length > 1;
        }
        return false;
    };
    /**
     * @return {?}
     */
    EnumEditorFooterComponent.prototype.canMoveUp = /**
     * @return {?}
     */
    function () {
        if (this.canUse()) {
            return this.grid.currentEnumData.index > 0;
        }
        return false;
    };
    /**
     * @return {?}
     */
    EnumEditorFooterComponent.prototype.canMoveDown = /**
     * @return {?}
     */
    function () {
        if (this.canUse()) {
            return this.grid.currentEnumData.index < this.grid.data.length - 1;
        }
        return false;
    };
    EnumEditorFooterComponent.decorators = [
        { type: Component, args: [{
                    selector: 'enum-editor-footer',
                    template: "\n    <div class=\"footer-container\">\n        <button type=\"button\" (click)=\"onAddFilter()\"\n            class=\"k-button k-button-icontext k-flat \"><span class=\"k-icon k-i-add\"></span> {{ 'enumEditor.addWhere' | locale }}</button>\n        <button type=\"button\" (click)=\"onClear()\" [disabled]=\"!grid.data.length\"\n            class=\"k-button k-button-icontext k-flat \"><span class=\"k-icon k-i-delete\"></span> {{ 'enumEditor.clear' | locale }}</button>\n        <ng-container *ngIf=\"showSortBtns\">\n            <button type=\"button\" [disabled]=\"!canMoveUp()\" (click)=\"onMoveTop()\"\n            class=\"k-button k-button-icontext k-flat \"><span class=\"k-icon k-i-arrow-end-up\"></span>\n            {{'enumEditor.moveTop' | locale }}</button>\n        <button type=\"button\" [disabled]=\"!canMoveUp()\" (click)=\"onMovePrev()\"\n            class=\"k-button k-button-icontext k-flat \"><span class=\"k-icon k-i-arrow-60-up\"></span>\n            {{'enumEditor.moveUp' | locale }}</button>\n        <button type=\"button\" [disabled]=\"!canMoveDown()\" (click)=\"onMoveNext()\"\n            class=\"k-button k-button-icontext k-flat \"><span class=\"k-icon k-i-arrow-60-down\"></span>\n            {{'enumEditor.moveDown' | locale }}</button>\n        <button type=\"button\" [disabled]=\"!canMoveDown()\" (click)=\"onMoveBottom()\"\n            class=\"k-button k-button-icontext k-flat\"><span class=\"k-icon k-i-arrow-end-down\"></span>\n            {{'enumEditor.moveBottom' | locale }}</button>\n            </ng-container>\n    </div>\n    "
                }] }
    ];
    /** @nocollapse */
    EnumEditorFooterComponent.ctorParameters = function () { return [
        { type: EnumEditorComponent }
    ]; };
    EnumEditorFooterComponent.propDecorators = {
        cls: [{ type: HostBinding, args: ['class',] }],
        showSortBtns: [{ type: Input }],
        addFilter: [{ type: Output }],
        clearFilter: [{ type: Output }],
        moveTop: [{ type: Output }],
        movePrev: [{ type: Output }],
        moveNext: [{ type: Output }],
        moveBottom: [{ type: Output }]
    };
    return EnumEditorFooterComponent;
}());
export { EnumEditorFooterComponent };
if (false) {
    /** @type {?} */
    EnumEditorFooterComponent.prototype.cls;
    /** @type {?} */
    EnumEditorFooterComponent.prototype.showSortBtns;
    /** @type {?} */
    EnumEditorFooterComponent.prototype.addFilter;
    /** @type {?} */
    EnumEditorFooterComponent.prototype.clearFilter;
    /** @type {?} */
    EnumEditorFooterComponent.prototype.moveTop;
    /** @type {?} */
    EnumEditorFooterComponent.prototype.movePrev;
    /** @type {?} */
    EnumEditorFooterComponent.prototype.moveNext;
    /** @type {?} */
    EnumEditorFooterComponent.prototype.moveBottom;
    /** @type {?} */
    EnumEditorFooterComponent.prototype.grid;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW51bS1lZGl0b3ItZm9vdGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvdWktZW51bS1lZGl0b3IvIiwic291cmNlcyI6WyJsaWIvZW51bS1lZGl0b3ItZm9vdGVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsV0FBVyxFQUFVLE1BQU0sRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDNUYsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFFOUQ7SUFzQ0ksbUNBQW1CLElBQXlCO1FBQXpCLFNBQUksR0FBSixJQUFJLENBQXFCO1FBWnRCLFFBQUcsR0FBRyxpQkFBaUIsQ0FBQztRQUVyQyxpQkFBWSxHQUFHLElBQUksQ0FBQztRQUVuQixjQUFTLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUMvQixnQkFBVyxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7UUFFakMsWUFBTyxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7UUFDN0IsYUFBUSxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7UUFDOUIsYUFBUSxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7UUFDOUIsZUFBVSxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7SUFFTSxDQUFDOzs7O0lBRWpELDRDQUFROzs7SUFBUixjQUFhLENBQUM7Ozs7SUFFZCwrQ0FBVzs7O0lBQVg7UUFDSSxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksRUFBRSxDQUFDO0lBQzFCLENBQUM7Ozs7SUFFRCwyQ0FBTzs7O0lBQVA7UUFDSSxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksRUFBRSxDQUFDO0lBQzVCLENBQUM7Ozs7SUFFRCw2Q0FBUzs7O0lBQVQ7UUFDSSxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ3hCLENBQUM7Ozs7SUFDRCw4Q0FBVTs7O0lBQVY7UUFDSSxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ3pCLENBQUM7Ozs7SUFDRCw4Q0FBVTs7O0lBQVY7UUFDSSxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ3pCLENBQUM7Ozs7SUFDRCxnREFBWTs7O0lBQVo7UUFDSSxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksRUFBRSxDQUFDO0lBQzNCLENBQUM7Ozs7SUFHRCwwQ0FBTTs7O0lBQU47UUFDSSxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsZUFBZSxFQUFFO1lBQzNCLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQztTQUNwQztRQUVELE9BQU8sS0FBSyxDQUFDO0lBQ2pCLENBQUM7Ozs7SUFFRCw2Q0FBUzs7O0lBQVQ7UUFDSSxJQUFJLElBQUksQ0FBQyxNQUFNLEVBQUUsRUFBRTtZQUNmLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQztTQUM5QztRQUVELE9BQU8sS0FBSyxDQUFDO0lBQ2pCLENBQUM7Ozs7SUFFRCwrQ0FBVzs7O0lBQVg7UUFDSSxJQUFJLElBQUksQ0FBQyxNQUFNLEVBQUUsRUFBRTtZQUNmLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7U0FDdEU7UUFFRCxPQUFPLEtBQUssQ0FBQztJQUNqQixDQUFDOztnQkF0RkosU0FBUyxTQUFDO29CQUNQLFFBQVEsRUFBRSxvQkFBb0I7b0JBQzlCLFFBQVEsRUFBRSx3aURBcUJUO2lCQUNKOzs7O2dCQTFCUSxtQkFBbUI7OztzQkE0QnZCLFdBQVcsU0FBQyxPQUFPOytCQUVuQixLQUFLOzRCQUVMLE1BQU07OEJBQ04sTUFBTTswQkFFTixNQUFNOzJCQUNOLE1BQU07MkJBQ04sTUFBTTs2QkFDTixNQUFNOztJQW1EWCxnQ0FBQztDQUFBLEFBdkZELElBdUZDO1NBOURZLHlCQUF5Qjs7O0lBQ2xDLHdDQUE4Qzs7SUFFOUMsaURBQTZCOztJQUU3Qiw4Q0FBeUM7O0lBQ3pDLGdEQUEyQzs7SUFFM0MsNENBQXVDOztJQUN2Qyw2Q0FBd0M7O0lBQ3hDLDZDQUF3Qzs7SUFDeEMsK0NBQTBDOztJQUU5Qix5Q0FBZ0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSG9zdEJpbmRpbmcsIE9uSW5pdCwgT3V0cHV0LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBFbnVtRWRpdG9yQ29tcG9uZW50IH0gZnJvbSAnLi9lbnVtLWVkaXRvci5jb21wb25lbnQnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgICBzZWxlY3RvcjogJ2VudW0tZWRpdG9yLWZvb3RlcicsXHJcbiAgICB0ZW1wbGF0ZTogYFxyXG4gICAgPGRpdiBjbGFzcz1cImZvb3Rlci1jb250YWluZXJcIj5cclxuICAgICAgICA8YnV0dG9uIHR5cGU9XCJidXR0b25cIiAoY2xpY2spPVwib25BZGRGaWx0ZXIoKVwiXHJcbiAgICAgICAgICAgIGNsYXNzPVwiay1idXR0b24gay1idXR0b24taWNvbnRleHQgay1mbGF0IFwiPjxzcGFuIGNsYXNzPVwiay1pY29uIGstaS1hZGRcIj48L3NwYW4+IHt7ICdlbnVtRWRpdG9yLmFkZFdoZXJlJyB8IGxvY2FsZSB9fTwvYnV0dG9uPlxyXG4gICAgICAgIDxidXR0b24gdHlwZT1cImJ1dHRvblwiIChjbGljayk9XCJvbkNsZWFyKClcIiBbZGlzYWJsZWRdPVwiIWdyaWQuZGF0YS5sZW5ndGhcIlxyXG4gICAgICAgICAgICBjbGFzcz1cImstYnV0dG9uIGstYnV0dG9uLWljb250ZXh0IGstZmxhdCBcIj48c3BhbiBjbGFzcz1cImstaWNvbiBrLWktZGVsZXRlXCI+PC9zcGFuPiB7eyAnZW51bUVkaXRvci5jbGVhcicgfCBsb2NhbGUgfX08L2J1dHRvbj5cclxuICAgICAgICA8bmctY29udGFpbmVyICpuZ0lmPVwic2hvd1NvcnRCdG5zXCI+XHJcbiAgICAgICAgICAgIDxidXR0b24gdHlwZT1cImJ1dHRvblwiIFtkaXNhYmxlZF09XCIhY2FuTW92ZVVwKClcIiAoY2xpY2spPVwib25Nb3ZlVG9wKClcIlxyXG4gICAgICAgICAgICBjbGFzcz1cImstYnV0dG9uIGstYnV0dG9uLWljb250ZXh0IGstZmxhdCBcIj48c3BhbiBjbGFzcz1cImstaWNvbiBrLWktYXJyb3ctZW5kLXVwXCI+PC9zcGFuPlxyXG4gICAgICAgICAgICB7eydlbnVtRWRpdG9yLm1vdmVUb3AnIHwgbG9jYWxlIH19PC9idXR0b24+XHJcbiAgICAgICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgW2Rpc2FibGVkXT1cIiFjYW5Nb3ZlVXAoKVwiIChjbGljayk9XCJvbk1vdmVQcmV2KClcIlxyXG4gICAgICAgICAgICBjbGFzcz1cImstYnV0dG9uIGstYnV0dG9uLWljb250ZXh0IGstZmxhdCBcIj48c3BhbiBjbGFzcz1cImstaWNvbiBrLWktYXJyb3ctNjAtdXBcIj48L3NwYW4+XHJcbiAgICAgICAgICAgIHt7J2VudW1FZGl0b3IubW92ZVVwJyB8IGxvY2FsZSB9fTwvYnV0dG9uPlxyXG4gICAgICAgIDxidXR0b24gdHlwZT1cImJ1dHRvblwiIFtkaXNhYmxlZF09XCIhY2FuTW92ZURvd24oKVwiIChjbGljayk9XCJvbk1vdmVOZXh0KClcIlxyXG4gICAgICAgICAgICBjbGFzcz1cImstYnV0dG9uIGstYnV0dG9uLWljb250ZXh0IGstZmxhdCBcIj48c3BhbiBjbGFzcz1cImstaWNvbiBrLWktYXJyb3ctNjAtZG93blwiPjwvc3Bhbj5cclxuICAgICAgICAgICAge3snZW51bUVkaXRvci5tb3ZlRG93bicgfCBsb2NhbGUgfX08L2J1dHRvbj5cclxuICAgICAgICA8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBbZGlzYWJsZWRdPVwiIWNhbk1vdmVEb3duKClcIiAoY2xpY2spPVwib25Nb3ZlQm90dG9tKClcIlxyXG4gICAgICAgICAgICBjbGFzcz1cImstYnV0dG9uIGstYnV0dG9uLWljb250ZXh0IGstZmxhdFwiPjxzcGFuIGNsYXNzPVwiay1pY29uIGstaS1hcnJvdy1lbmQtZG93blwiPjwvc3Bhbj5cclxuICAgICAgICAgICAge3snZW51bUVkaXRvci5tb3ZlQm90dG9tJyB8IGxvY2FsZSB9fTwvYnV0dG9uPlxyXG4gICAgICAgICAgICA8L25nLWNvbnRhaW5lcj5cclxuICAgIDwvZGl2PlxyXG4gICAgYFxyXG59KVxyXG5leHBvcnQgY2xhc3MgRW51bUVkaXRvckZvb3RlckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcbiAgICBASG9zdEJpbmRpbmcoJ2NsYXNzJykgY2xzID0gJ2YtZmlsdGVyLWZvb3Rlcic7XHJcblxyXG4gICAgQElucHV0KCkgc2hvd1NvcnRCdG5zID0gdHJ1ZTtcclxuXHJcbiAgICBAT3V0cHV0KCkgYWRkRmlsdGVyID0gbmV3IEV2ZW50RW1pdHRlcigpO1xyXG4gICAgQE91dHB1dCgpIGNsZWFyRmlsdGVyID0gbmV3IEV2ZW50RW1pdHRlcigpO1xyXG5cclxuICAgIEBPdXRwdXQoKSBtb3ZlVG9wID0gbmV3IEV2ZW50RW1pdHRlcigpO1xyXG4gICAgQE91dHB1dCgpIG1vdmVQcmV2ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xyXG4gICAgQE91dHB1dCgpIG1vdmVOZXh0ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xyXG4gICAgQE91dHB1dCgpIG1vdmVCb3R0b20gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XHJcblxyXG4gICAgY29uc3RydWN0b3IocHVibGljIGdyaWQ6IEVudW1FZGl0b3JDb21wb25lbnQpIHsgfVxyXG5cclxuICAgIG5nT25Jbml0KCkgeyB9XHJcblxyXG4gICAgb25BZGRGaWx0ZXIoKSB7XHJcbiAgICAgICAgdGhpcy5hZGRGaWx0ZXIuZW1pdCgpO1xyXG4gICAgfVxyXG5cclxuICAgIG9uQ2xlYXIoKSB7XHJcbiAgICAgICAgdGhpcy5jbGVhckZpbHRlci5lbWl0KCk7XHJcbiAgICB9XHJcblxyXG4gICAgb25Nb3ZlVG9wKCkge1xyXG4gICAgICAgIHRoaXMubW92ZVRvcC5lbWl0KCk7XHJcbiAgICB9XHJcbiAgICBvbk1vdmVQcmV2KCkge1xyXG4gICAgICAgIHRoaXMubW92ZVByZXYuZW1pdCgpO1xyXG4gICAgfVxyXG4gICAgb25Nb3ZlTmV4dCgpIHtcclxuICAgICAgICB0aGlzLm1vdmVOZXh0LmVtaXQoKTtcclxuICAgIH1cclxuICAgIG9uTW92ZUJvdHRvbSgpIHtcclxuICAgICAgICB0aGlzLm1vdmVCb3R0b20uZW1pdCgpO1xyXG4gICAgfVxyXG5cclxuXHJcbiAgICBjYW5Vc2UoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuZ3JpZC5jdXJyZW50RW51bURhdGEpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZ3JpZC5kYXRhLmxlbmd0aCA+IDE7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcblxyXG4gICAgY2FuTW92ZVVwKCkge1xyXG4gICAgICAgIGlmICh0aGlzLmNhblVzZSgpKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmdyaWQuY3VycmVudEVudW1EYXRhLmluZGV4ID4gMDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxuXHJcbiAgICBjYW5Nb3ZlRG93bigpIHtcclxuICAgICAgICBpZiAodGhpcy5jYW5Vc2UoKSkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5ncmlkLmN1cnJlbnRFbnVtRGF0YS5pbmRleCA8IHRoaXMuZ3JpZC5kYXRhLmxlbmd0aCAtIDE7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcbn1cclxuIl19