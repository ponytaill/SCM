/*
 * @Author: Witt
 * @Date: 2018-10-12 15:37:11
 * @Last Modified by: aalizzwell
 * @Last Modified time: 2019-09-03 19:10:44
 * @todo 待优化问题
 * 1、apiUrl是否应该在基类中，子类中的api如何传递给基类；
 */
import { DataTypeInfo } from '../entity/index';
import { createEntity, createEntities } from '../entity/index';
import { EntityCollection } from './entity_collection';
import { PaginationManager } from './pagination_manager';
import { DataChangeHistory } from './data_change_history';
export class Repository {
    /**
     * 构造函数
     */
    constructor() {
        /**
         * 用户分页配置信息
         */
        this.paginationInfo = null;
    }
    init() {
        this.entityTypeInfo = new DataTypeInfo(this.entityType);
        this.entityCollection = new EntityCollection(this.entityType);
        this.dataChangeHistory = new DataChangeHistory();
    }
    /**
     * 实体主键
     */
    get primaryKey() {
        return this.entityCollection.primaryKey;
    }
    /**
     * 实体变更集合
     */
    get entityCollectionChange() {
        return this.entityCollection.collectionChanged;
    }
    /**
     * 重置状态
     */
    reset() {
        this.entityCollection.clear();
    }
    /**
     * 创建实体
     */
    buildEntity(data) {
        const entity = createEntity(this.entityType, data);
        return entity;
    }
    /**
     * 批量创建实体
     */
    buildEntities(listData) {
        const entities = createEntities(this.entityType, listData);
        return entities;
    }
    /**
     * 初始化分页配置
     * @param config 用户分页配置
     */
    setPaginationConfig(config) {
        this.paginationManager = new PaginationManager(this.entityType, config);
        const { pageSize = 0 } = this.paginationManager.getPaginationConfigByPath('/') || {};
        // tslint:disable-next-line: max-line-length
        this.entityCollection.paginationInfo = Object.assign({ pageSize }, this.entityCollection.paginationInfo, this.paginationManager.pagination);
        // 无需再单独设置一次pageSize，减少一次变更
        // this.entityCollection.pageSize = pageSize;
    }
    /**
     * 设置分页
     */
    setPaginationInfo(paginationInfo) {
        this.paginationInfo = Object.assign({}, this.paginationInfo, paginationInfo);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVwb3NpdG9yeS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvbW9iaWxlLWRldmtpdC8iLCJzb3VyY2VzIjpbImxpYi9yZXBvc2l0b3J5L3JlcG9zaXRvcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7R0FPRztBQUtILE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUkvQyxPQUFPLEVBQVUsWUFBWSxFQUFFLGNBQWMsRUFBcUIsTUFBTSxpQkFBaUIsQ0FBQztBQUUxRixPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUN6RCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUUxRCxNQUFNLE9BQWdCLFVBQVU7SUF3QzlCOztPQUVHO0lBQ0g7UUFyQkE7O1dBRUc7UUFDSSxtQkFBYyxHQUFRLElBQUksQ0FBQztJQW1CbEMsQ0FBQztJQUVTLElBQUk7UUFDWixJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksWUFBWSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUN4RCxJQUFJLENBQUMsZ0JBQWdCLEdBQUcsSUFBSSxnQkFBZ0IsQ0FBSSxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDakUsSUFBSSxDQUFDLGlCQUFpQixHQUFHLElBQUksaUJBQWlCLEVBQUUsQ0FBQztJQUNuRCxDQUFDO0lBRUQ7O09BRUc7SUFDSCxJQUFXLFVBQVU7UUFDbkIsT0FBTyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsVUFBVSxDQUFDO0lBQzFDLENBQUM7SUFFRDs7T0FFRztJQUNILElBQVcsc0JBQXNCO1FBQy9CLE9BQU8sSUFBSSxDQUFDLGdCQUFnQixDQUFDLGlCQUFpQixDQUFDO0lBQ2pELENBQUM7SUFFRDs7T0FFRztJQUNJLEtBQUs7UUFDVixJQUFJLENBQUMsZ0JBQWdCLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDaEMsQ0FBQztJQUVEOztPQUVHO0lBQ0ksV0FBVyxDQUFDLElBQVM7UUFDMUIsTUFBTSxNQUFNLEdBQUcsWUFBWSxDQUFJLElBQUksQ0FBQyxVQUFVLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDdEQsT0FBTyxNQUFNLENBQUM7SUFDaEIsQ0FBQztJQUVEOztPQUVHO0lBQ0ksYUFBYSxDQUFDLFFBQWU7UUFDbEMsTUFBTSxRQUFRLEdBQVEsY0FBYyxDQUFJLElBQUksQ0FBQyxVQUFVLEVBQUUsUUFBUSxDQUFDLENBQUM7UUFDbkUsT0FBTyxRQUFRLENBQUM7SUFDbEIsQ0FBQztJQUVEOzs7T0FHRztJQUNILG1CQUFtQixDQUFDLE1BQVc7UUFDN0IsSUFBSSxDQUFDLGlCQUFpQixHQUFHLElBQUksaUJBQWlCLENBQUMsSUFBSSxDQUFDLFVBQVUsRUFBRSxNQUFNLENBQUMsQ0FBQztRQUN4RSxNQUFNLEVBQUUsUUFBUSxHQUFHLENBQUMsRUFBRSxHQUFHLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyx5QkFBeUIsQ0FBQyxHQUFHLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDckYsNENBQTRDO1FBQzVDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxjQUFjLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxFQUFFLFFBQVEsRUFBRSxFQUFFLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxjQUFjLEVBQUUsSUFBSSxDQUFDLGlCQUFpQixDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBRTVJLDJCQUEyQjtRQUMzQiw2Q0FBNkM7SUFDL0MsQ0FBQztJQUVEOztPQUVHO0lBQ0ksaUJBQWlCLENBQUMsY0FBbUI7UUFDMUMsSUFBSSxDQUFDLGNBQWMscUJBQVEsSUFBSSxDQUFDLGNBQWMsRUFBSyxjQUFjLENBQUUsQ0FBQztJQUN0RSxDQUFDO0NBRUYiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxyXG4gKiBAQXV0aG9yOiBXaXR0XHJcbiAqIEBEYXRlOiAyMDE4LTEwLTEyIDE1OjM3OjExXHJcbiAqIEBMYXN0IE1vZGlmaWVkIGJ5OiBhYWxpenp3ZWxsXHJcbiAqIEBMYXN0IE1vZGlmaWVkIHRpbWU6IDIwMTktMDktMDMgMTk6MTA6NDRcclxuICogQHRvZG8g5b6F5LyY5YyW6Zeu6aKYXHJcbiAqIDHjgIFhcGlVcmzmmK/lkKblupTor6XlnKjln7rnsbvkuK3vvIzlrZDnsbvkuK3nmoRhcGnlpoLkvZXkvKDpgJLnu5nln7rnsbvvvJtcclxuICovXHJcblxyXG5pbXBvcnQgeyBUeXBlIH0gZnJvbSAnLi4vY29yZS9pbmRleCc7XHJcbmltcG9ydCB7IE9ic2VydmFibGUsIFN1YmplY3QgfSBmcm9tICdyeGpzJztcclxuXHJcbmltcG9ydCB7IERhdGFUeXBlSW5mbyB9IGZyb20gJy4uL2VudGl0eS9pbmRleCc7XHJcbmltcG9ydCB7IEd1aWQgfSBmcm9tICcuLi91dGlscy9pbmRleCc7XHJcbmltcG9ydCB7IE1vZGlmaWNhdGlvbiB9IGZyb20gJy4uL2NoYW5nZXNldC9pbmRleCc7XHJcbmltcG9ydCB7IE1ldGFkYXRhVXRpbCB9IGZyb20gJy4uL2NvcmUvaW5kZXgnO1xyXG5pbXBvcnQgeyBFbnRpdHksIGNyZWF0ZUVudGl0eSwgY3JlYXRlRW50aXRpZXMsIEZpZWxkTWV0YWRhdGFVdGlsIH0gZnJvbSAnLi4vZW50aXR5L2luZGV4JztcclxuaW1wb3J0IHsgUmVwb3NpdG9yeU1ldGEgfSBmcm9tICcuL2RlY29yYXRvcnMnO1xyXG5pbXBvcnQgeyBFbnRpdHlDb2xsZWN0aW9uIH0gZnJvbSAnLi9lbnRpdHlfY29sbGVjdGlvbic7XHJcbmltcG9ydCB7IFBhZ2luYXRpb25NYW5hZ2VyIH0gZnJvbSAnLi9wYWdpbmF0aW9uX21hbmFnZXInO1xyXG5pbXBvcnQgeyBEYXRhQ2hhbmdlSGlzdG9yeSB9IGZyb20gJy4vZGF0YV9jaGFuZ2VfaGlzdG9yeSc7XHJcblxyXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgUmVwb3NpdG9yeTxUIGV4dGVuZHMgRW50aXR5PiB7XHJcblxyXG4gIC8qKlxyXG4gICAqIOWQjeensFxyXG4gICAqL1xyXG4gIGFic3RyYWN0IG5hbWU6IHN0cmluZztcclxuXHJcbiAgLyoqXHJcbiAgICog5a6e5L2T57G75Z6LXHJcbiAgICovXHJcbiAgcHVibGljIGVudGl0eVR5cGU6IFR5cGU8VD47XHJcblxyXG4gIC8qKlxyXG4gICAqIOWunuS9k+exu+Wei+S/oeaBr1xyXG4gICAqL1xyXG4gIHB1YmxpYyBlbnRpdHlUeXBlSW5mbzogRGF0YVR5cGVJbmZvO1xyXG5cclxuICAvKipcclxuICAgKiDlrp7kvZPpm4blkIhcclxuICAgKi9cclxuICBwdWJsaWMgZW50aXR5Q29sbGVjdGlvbjogRW50aXR5Q29sbGVjdGlvbjxUPjtcclxuXHJcbiAgLyoqXHJcbiAgICog55So5oi35YiG6aG16YWN572u5L+h5oGvXHJcbiAgICovXHJcbiAgcHVibGljIHBhZ2luYXRpb25JbmZvOiBhbnkgPSBudWxsO1xyXG5cclxuICAvKipcclxuICAgKiDmlbDmja7lj5jmm7Tljoblj7JcclxuICAgKiBAc3VtbWFyeVxyXG4gICAqIOS7hemSiOWvueS4u+ihqOWinuWKoOOAgeS7juihqOWIoOmZpFxyXG4gICAqL1xyXG4gIHB1YmxpYyBkYXRhQ2hhbmdlSGlzdG9yeTogRGF0YUNoYW5nZUhpc3Rvcnk7XHJcblxyXG5cclxuICAvKipcclxuICAgKiDliIbpobXnrqHnkIblmahcclxuICAgKi9cclxuICBwdWJsaWMgcGFnaW5hdGlvbk1hbmFnZXI6IFBhZ2luYXRpb25NYW5hZ2VyPFQ+O1xyXG5cclxuICAvKipcclxuICAgKiDmnoTpgKDlh73mlbBcclxuICAgKi9cclxuICBjb25zdHJ1Y3RvcigpIHtcclxuICB9XHJcblxyXG4gIHByb3RlY3RlZCBpbml0KCkge1xyXG4gICAgdGhpcy5lbnRpdHlUeXBlSW5mbyA9IG5ldyBEYXRhVHlwZUluZm8odGhpcy5lbnRpdHlUeXBlKTtcclxuICAgIHRoaXMuZW50aXR5Q29sbGVjdGlvbiA9IG5ldyBFbnRpdHlDb2xsZWN0aW9uPFQ+KHRoaXMuZW50aXR5VHlwZSk7XHJcbiAgICB0aGlzLmRhdGFDaGFuZ2VIaXN0b3J5ID0gbmV3IERhdGFDaGFuZ2VIaXN0b3J5KCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDlrp7kvZPkuLvplK5cclxuICAgKi9cclxuICBwdWJsaWMgZ2V0IHByaW1hcnlLZXkoKTogc3RyaW5nIHtcclxuICAgIHJldHVybiB0aGlzLmVudGl0eUNvbGxlY3Rpb24ucHJpbWFyeUtleTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOWunuS9k+WPmOabtOmbhuWQiFxyXG4gICAqL1xyXG4gIHB1YmxpYyBnZXQgZW50aXR5Q29sbGVjdGlvbkNoYW5nZSgpOiBTdWJqZWN0PE1vZGlmaWNhdGlvbj4ge1xyXG4gICAgcmV0dXJuIHRoaXMuZW50aXR5Q29sbGVjdGlvbi5jb2xsZWN0aW9uQ2hhbmdlZDtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOmHjee9rueKtuaAgVxyXG4gICAqL1xyXG4gIHB1YmxpYyByZXNldCgpOiB2b2lkIHtcclxuICAgIHRoaXMuZW50aXR5Q29sbGVjdGlvbi5jbGVhcigpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog5Yib5bu65a6e5L2TXHJcbiAgICovXHJcbiAgcHVibGljIGJ1aWxkRW50aXR5KGRhdGE6IGFueSk6IFQge1xyXG4gICAgY29uc3QgZW50aXR5ID0gY3JlYXRlRW50aXR5PFQ+KHRoaXMuZW50aXR5VHlwZSwgZGF0YSk7XHJcbiAgICByZXR1cm4gZW50aXR5O1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog5om56YeP5Yib5bu65a6e5L2TXHJcbiAgICovXHJcbiAgcHVibGljIGJ1aWxkRW50aXRpZXMobGlzdERhdGE6IGFueVtdKTogVFtdIHtcclxuICAgIGNvbnN0IGVudGl0aWVzOiBUW10gPSBjcmVhdGVFbnRpdGllczxUPih0aGlzLmVudGl0eVR5cGUsIGxpc3REYXRhKTtcclxuICAgIHJldHVybiBlbnRpdGllcztcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOWIneWni+WMluWIhumhtemFjee9rlxyXG4gICAqIEBwYXJhbSBjb25maWcg55So5oi35YiG6aG16YWN572uXHJcbiAgICovXHJcbiAgc2V0UGFnaW5hdGlvbkNvbmZpZyhjb25maWc6IGFueSkge1xyXG4gICAgdGhpcy5wYWdpbmF0aW9uTWFuYWdlciA9IG5ldyBQYWdpbmF0aW9uTWFuYWdlcih0aGlzLmVudGl0eVR5cGUsIGNvbmZpZyk7XHJcbiAgICBjb25zdCB7IHBhZ2VTaXplID0gMCB9ID0gdGhpcy5wYWdpbmF0aW9uTWFuYWdlci5nZXRQYWdpbmF0aW9uQ29uZmlnQnlQYXRoKCcvJykgfHwge307XHJcbiAgICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6IG1heC1saW5lLWxlbmd0aFxyXG4gICAgdGhpcy5lbnRpdHlDb2xsZWN0aW9uLnBhZ2luYXRpb25JbmZvID0gT2JqZWN0LmFzc2lnbih7IHBhZ2VTaXplIH0sIHRoaXMuZW50aXR5Q29sbGVjdGlvbi5wYWdpbmF0aW9uSW5mbywgdGhpcy5wYWdpbmF0aW9uTWFuYWdlci5wYWdpbmF0aW9uKTtcclxuXHJcbiAgICAvLyDml6DpnIDlho3ljZXni6zorr7nva7kuIDmrKFwYWdlU2l6Ze+8jOWHj+WwkeS4gOasoeWPmOabtFxyXG4gICAgLy8gdGhpcy5lbnRpdHlDb2xsZWN0aW9uLnBhZ2VTaXplID0gcGFnZVNpemU7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDorr7nva7liIbpobVcclxuICAgKi9cclxuICBwdWJsaWMgc2V0UGFnaW5hdGlvbkluZm8ocGFnaW5hdGlvbkluZm86IGFueSkge1xyXG4gICAgdGhpcy5wYWdpbmF0aW9uSW5mbyA9IHsgLi4udGhpcy5wYWdpbmF0aW9uSW5mbywgLi4ucGFnaW5hdGlvbkluZm8gfTtcclxuICB9XHJcbiAgXHJcbn1cclxuIl19