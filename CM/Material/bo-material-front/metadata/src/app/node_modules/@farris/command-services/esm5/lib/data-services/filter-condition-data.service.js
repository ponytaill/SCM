import { Injectable } from '@angular/core';
import { ViewModel } from '@farris/devkit';
import { FilterConditionService } from '../filter-condition.service';
import { CommandService } from '../command-service';
var FilterConditionDataService = /** @class */ (function () {
    function FilterConditionDataService(viewModel, filterConditionService, commandService) {
        this.viewModel = viewModel;
        this.filterConditionService = filterConditionService;
        this.commandService = commandService;
    }
    /**
     * 执行过滤
     * @param commandName 命令名称
     * @param frameId 命令所在的frameId
     */
    FilterConditionDataService.prototype.filter = function (commandName, frameId) {
        var self = this;
        var filters = self.context && self.context.eventParam && self.context.eventParam.data || [];
        if (typeof (filters) === 'string') {
            filters = JSON.parse(filters);
        }
        // 查询时重置页码为第一页
        this.viewModel.frameContext.repository.entityCollection.pageIndex = 1;
        this.viewModel.frameContext.repository.filterConditionManager.setConditions(this.viewModel.bindingPath, filters);
        return this.commandService.execute(commandName, frameId);
    };
    FilterConditionDataService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    FilterConditionDataService.ctorParameters = function () { return [
        { type: ViewModel },
        { type: FilterConditionService },
        { type: CommandService }
    ]; };
    return FilterConditionDataService;
}());
export { FilterConditionDataService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsdGVyLWNvbmRpdGlvbi1kYXRhLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL2NvbW1hbmQtc2VydmljZXMvIiwic291cmNlcyI6WyJsaWIvZGF0YS1zZXJ2aWNlcy9maWx0ZXItY29uZGl0aW9uLWRhdGEuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUMzQyxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUNyRSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFFcEQ7SUFFSSxvQ0FDWSxTQUFvQixFQUNwQixzQkFBOEMsRUFDOUMsY0FBOEI7UUFGOUIsY0FBUyxHQUFULFNBQVMsQ0FBVztRQUNwQiwyQkFBc0IsR0FBdEIsc0JBQXNCLENBQXdCO1FBQzlDLG1CQUFjLEdBQWQsY0FBYyxDQUFnQjtJQUN0QyxDQUFDO0lBRUw7Ozs7T0FJRztJQUNJLDJDQUFNLEdBQWIsVUFBYyxXQUFtQixFQUFFLE9BQWU7UUFDOUMsSUFBTSxJQUFJLEdBQVEsSUFBSSxDQUFDO1FBQ3ZCLElBQUksT0FBTyxHQUFHLElBQUksQ0FBQyxPQUFPLElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQyxVQUFVLElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsSUFBSSxJQUFJLEVBQUUsQ0FBQztRQUM1RixJQUFJLE9BQU8sQ0FBQyxPQUFPLENBQUMsS0FBSyxRQUFRLEVBQUU7WUFDL0IsT0FBTyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUM7U0FDakM7UUFDRCxjQUFjO1FBQ2QsSUFBSSxDQUFDLFNBQVMsQ0FBQyxZQUFZLENBQUMsVUFBVSxDQUFDLGdCQUFnQixDQUFDLFNBQVMsR0FBRyxDQUFDLENBQUM7UUFDdEUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxZQUFZLENBQUMsVUFBVSxDQUFDLHNCQUFzQixDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLFdBQVcsRUFBRSxPQUFPLENBQUMsQ0FBQztRQUNqSCxPQUFPLElBQUksQ0FBQyxjQUFjLENBQUMsT0FBTyxDQUFDLFdBQVcsRUFBRSxPQUFPLENBQUMsQ0FBQztJQUM3RCxDQUFDOztnQkF2QkosVUFBVTs7OztnQkFKRixTQUFTO2dCQUNULHNCQUFzQjtnQkFDdEIsY0FBYzs7SUEwQnZCLGlDQUFDO0NBQUEsQUF4QkQsSUF3QkM7QUFDRCxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFZpZXdNb2RlbCB9IGZyb20gJ0BmYXJyaXMvZGV2a2l0JztcbmltcG9ydCB7IEZpbHRlckNvbmRpdGlvblNlcnZpY2UgfSBmcm9tICcuLi9maWx0ZXItY29uZGl0aW9uLnNlcnZpY2UnO1xuaW1wb3J0IHsgQ29tbWFuZFNlcnZpY2UgfSBmcm9tICcuLi9jb21tYW5kLXNlcnZpY2UnO1xuXG5ASW5qZWN0YWJsZSgpXG5jbGFzcyBGaWx0ZXJDb25kaXRpb25EYXRhU2VydmljZSB7XG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIHByaXZhdGUgdmlld01vZGVsOiBWaWV3TW9kZWwsXG4gICAgICAgIHByaXZhdGUgZmlsdGVyQ29uZGl0aW9uU2VydmljZTogRmlsdGVyQ29uZGl0aW9uU2VydmljZSxcbiAgICAgICAgcHJpdmF0ZSBjb21tYW5kU2VydmljZTogQ29tbWFuZFNlcnZpY2VcbiAgICApIHsgfVxuXG4gICAgLyoqXG4gICAgICog5omn6KGM6L+H5rukXG4gICAgICogQHBhcmFtIGNvbW1hbmROYW1lIOWRveS7pOWQjeensFxuICAgICAqIEBwYXJhbSBmcmFtZUlkIOWRveS7pOaJgOWcqOeahGZyYW1lSWRcbiAgICAgKi9cbiAgICBwdWJsaWMgZmlsdGVyKGNvbW1hbmROYW1lOiBzdHJpbmcsIGZyYW1lSWQ6IHN0cmluZykge1xuICAgICAgICBjb25zdCBzZWxmOiBhbnkgPSB0aGlzO1xuICAgICAgICBsZXQgZmlsdGVycyA9IHNlbGYuY29udGV4dCAmJiBzZWxmLmNvbnRleHQuZXZlbnRQYXJhbSAmJiBzZWxmLmNvbnRleHQuZXZlbnRQYXJhbS5kYXRhIHx8IFtdO1xuICAgICAgICBpZiAodHlwZW9mIChmaWx0ZXJzKSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIGZpbHRlcnMgPSBKU09OLnBhcnNlKGZpbHRlcnMpO1xuICAgICAgICB9XG4gICAgICAgIC8vIOafpeivouaXtumHjee9rumhteeggeS4uuesrOS4gOmhtVxuICAgICAgICB0aGlzLnZpZXdNb2RlbC5mcmFtZUNvbnRleHQucmVwb3NpdG9yeS5lbnRpdHlDb2xsZWN0aW9uLnBhZ2VJbmRleCA9IDE7XG4gICAgICAgIHRoaXMudmlld01vZGVsLmZyYW1lQ29udGV4dC5yZXBvc2l0b3J5LmZpbHRlckNvbmRpdGlvbk1hbmFnZXIuc2V0Q29uZGl0aW9ucyh0aGlzLnZpZXdNb2RlbC5iaW5kaW5nUGF0aCwgZmlsdGVycyk7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbW1hbmRTZXJ2aWNlLmV4ZWN1dGUoY29tbWFuZE5hbWUsIGZyYW1lSWQpO1xuICAgIH1cbn1cbmV4cG9ydCB7IEZpbHRlckNvbmRpdGlvbkRhdGFTZXJ2aWNlIH07XG4iXX0=