/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*
 * @Author: 疯狂秀才(Lucas Huang)
 * @Date: 2018-12-04 10:43:42
 * @LastEditors: 疯狂秀才(Lucas Huang)
 * @LastEditTime: 2019-09-26 13:33:30
 * @Company: Inspur
 * @Version: v0.0.1
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { FarrisCommonModule } from '@farris/ui-common';
import { InputGroupModule } from '@farris/ui-input-group';
import { LayoutModule } from '@farris/ui-layout';
import { LocaleModule } from '@farris/ui-locale';
import { FarrisDialogModule } from '@farris/ui-dialog';
import { MessagerModule } from '@farris/ui-messager';
import { DataTableModule, DataTableComponent } from '@farris/ui-datatable';
import { TreeTableModule, TreeTableComponent } from '@farris/ui-treetable';
import { LoadingModule } from '@farris/ui-loading';
import { LookupGridComponent } from './lookup-grid.component';
import { LookupComponent } from './lookup.component';
import { LookupLeftComponent } from './lookup-left.component';
import { LookupTabsComponent } from './lookup-tabs.component';
import { LookupTipDirective } from './lookup-tip.directive';
import { NotifyModule } from '@farris/ui-notify';
import { FarrisContextMenuModule } from '@farris/ui-context-menu';
import { LookupQuickSelectPanelComponent } from './quick-select/quick-select-panel.component';
import { LookupQuickSelectDirective } from './quick-select/lookup-quick-select.directive';
export class LookupModule {
}
LookupModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule,
                    FormsModule,
                    FarrisCommonModule.forRoot(),
                    FarrisDialogModule.forRoot(),
                    MessagerModule.forRoot(),
                    NotifyModule.forRoot(),
                    LoadingModule.forRoot({ delay: 1000 }),
                    InputGroupModule,
                    LayoutModule,
                    DataTableModule,
                    TreeTableModule,
                    FarrisContextMenuModule,
                    LocaleModule.forRoot()
                ],
                exports: [
                    LookupGridComponent, LookupComponent
                ],
                declarations: [
                    LookupGridComponent,
                    LookupComponent,
                    LookupLeftComponent,
                    LookupTabsComponent,
                    LookupTipDirective,
                    LookupQuickSelectPanelComponent,
                    LookupQuickSelectDirective
                ],
                providers: [],
                entryComponents: [DataTableComponent, TreeTableComponent, LookupLeftComponent, LookupTabsComponent, LookupQuickSelectPanelComponent]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9va3VwLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvdWktbG9va3VwLyIsInNvdXJjZXMiOlsibGliL2xvb2t1cC5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBUUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRTdDLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQzFELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNqRCxPQUFPLEVBQUUsWUFBWSxFQUFDLE1BQU0sbUJBQW1CLENBQUM7QUFDaEQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDdkQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxlQUFlLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUMzRSxPQUFPLEVBQUUsZUFBZSxFQUFFLGtCQUFrQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDM0UsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBRW5ELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQzlELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNyRCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUM5RCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUM5RCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUM1RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDakQsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDbEUsT0FBTyxFQUFFLCtCQUErQixFQUFFLE1BQU0sNkNBQTZDLENBQUM7QUFDOUYsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0sOENBQThDLENBQUM7QUFnQzFGLE1BQU0sT0FBTyxZQUFZOzs7WUEvQnhCLFFBQVEsU0FBQztnQkFDTixPQUFPLEVBQUU7b0JBQ0wsWUFBWTtvQkFDWixXQUFXO29CQUNYLGtCQUFrQixDQUFDLE9BQU8sRUFBRTtvQkFDNUIsa0JBQWtCLENBQUMsT0FBTyxFQUFFO29CQUM1QixjQUFjLENBQUMsT0FBTyxFQUFFO29CQUN4QixZQUFZLENBQUMsT0FBTyxFQUFFO29CQUN0QixhQUFhLENBQUMsT0FBTyxDQUFDLEVBQUMsS0FBSyxFQUFFLElBQUksRUFBQyxDQUFDO29CQUNwQyxnQkFBZ0I7b0JBQ2hCLFlBQVk7b0JBQ1osZUFBZTtvQkFDZixlQUFlO29CQUNmLHVCQUF1QjtvQkFDdkIsWUFBWSxDQUFDLE9BQU8sRUFBRTtpQkFDekI7Z0JBQ0QsT0FBTyxFQUFFO29CQUNMLG1CQUFtQixFQUFFLGVBQWU7aUJBQ3ZDO2dCQUNELFlBQVksRUFBRTtvQkFDVixtQkFBbUI7b0JBQ25CLGVBQWU7b0JBQ2YsbUJBQW1CO29CQUNuQixtQkFBbUI7b0JBQ25CLGtCQUFrQjtvQkFDbEIsK0JBQStCO29CQUMvQiwwQkFBMEI7aUJBQzdCO2dCQUNELFNBQVMsRUFBRSxFQUFFO2dCQUNiLGVBQWUsRUFBRSxDQUFDLGtCQUFrQixFQUFFLGtCQUFrQixFQUFFLG1CQUFtQixFQUFFLG1CQUFtQixFQUFFLCtCQUErQixDQUFDO2FBQ3ZJIiwic291cmNlc0NvbnRlbnQiOlsiLypcclxuICogQEF1dGhvcjog55av54uC56eA5omNKEx1Y2FzIEh1YW5nKVxyXG4gKiBARGF0ZTogMjAxOC0xMi0wNCAxMDo0Mzo0MlxyXG4gKiBATGFzdEVkaXRvcnM6IOeWr+eLguengOaJjShMdWNhcyBIdWFuZylcclxuICogQExhc3RFZGl0VGltZTogMjAxOS0wOS0yNiAxMzozMzozMFxyXG4gKiBAQ29tcGFueTogSW5zcHVyXHJcbiAqIEBWZXJzaW9uOiB2MC4wLjFcclxuICovXHJcbmltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XHJcbmltcG9ydCB7IEZvcm1zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xyXG5cclxuaW1wb3J0IHsgRmFycmlzQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1jb21tb24nO1xyXG5pbXBvcnQgeyBJbnB1dEdyb3VwTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1pbnB1dC1ncm91cCc7XHJcbmltcG9ydCB7IExheW91dE1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktbGF5b3V0JztcclxuaW1wb3J0IHsgTG9jYWxlTW9kdWxlfSBmcm9tICdAZmFycmlzL3VpLWxvY2FsZSc7XHJcbmltcG9ydCB7IEZhcnJpc0RpYWxvZ01vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktZGlhbG9nJztcclxuaW1wb3J0IHsgTWVzc2FnZXJNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLW1lc3NhZ2VyJztcclxuaW1wb3J0IHsgRGF0YVRhYmxlTW9kdWxlLCBEYXRhVGFibGVDb21wb25lbnQgfSBmcm9tICdAZmFycmlzL3VpLWRhdGF0YWJsZSc7XHJcbmltcG9ydCB7IFRyZWVUYWJsZU1vZHVsZSwgVHJlZVRhYmxlQ29tcG9uZW50IH0gZnJvbSAnQGZhcnJpcy91aS10cmVldGFibGUnO1xyXG5pbXBvcnQgeyBMb2FkaW5nTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1sb2FkaW5nJztcclxuXHJcbmltcG9ydCB7IExvb2t1cEdyaWRDb21wb25lbnQgfSBmcm9tICcuL2xvb2t1cC1ncmlkLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IExvb2t1cENvbXBvbmVudCB9IGZyb20gJy4vbG9va3VwLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IExvb2t1cExlZnRDb21wb25lbnQgfSBmcm9tICcuL2xvb2t1cC1sZWZ0LmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IExvb2t1cFRhYnNDb21wb25lbnQgfSBmcm9tICcuL2xvb2t1cC10YWJzLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IExvb2t1cFRpcERpcmVjdGl2ZSB9IGZyb20gJy4vbG9va3VwLXRpcC5kaXJlY3RpdmUnO1xyXG5pbXBvcnQgeyBOb3RpZnlNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLW5vdGlmeSc7XHJcbmltcG9ydCB7IEZhcnJpc0NvbnRleHRNZW51TW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1jb250ZXh0LW1lbnUnO1xyXG5pbXBvcnQgeyBMb29rdXBRdWlja1NlbGVjdFBhbmVsQ29tcG9uZW50IH0gZnJvbSAnLi9xdWljay1zZWxlY3QvcXVpY2stc2VsZWN0LXBhbmVsLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IExvb2t1cFF1aWNrU2VsZWN0RGlyZWN0aXZlIH0gZnJvbSAnLi9xdWljay1zZWxlY3QvbG9va3VwLXF1aWNrLXNlbGVjdC5kaXJlY3RpdmUnO1xyXG5ATmdNb2R1bGUoe1xyXG4gICAgaW1wb3J0czogW1xyXG4gICAgICAgIENvbW1vbk1vZHVsZSxcclxuICAgICAgICBGb3Jtc01vZHVsZSxcclxuICAgICAgICBGYXJyaXNDb21tb25Nb2R1bGUuZm9yUm9vdCgpLFxyXG4gICAgICAgIEZhcnJpc0RpYWxvZ01vZHVsZS5mb3JSb290KCksXHJcbiAgICAgICAgTWVzc2FnZXJNb2R1bGUuZm9yUm9vdCgpLFxyXG4gICAgICAgIE5vdGlmeU1vZHVsZS5mb3JSb290KCksXHJcbiAgICAgICAgTG9hZGluZ01vZHVsZS5mb3JSb290KHtkZWxheTogMTAwMH0pLFxyXG4gICAgICAgIElucHV0R3JvdXBNb2R1bGUsXHJcbiAgICAgICAgTGF5b3V0TW9kdWxlLFxyXG4gICAgICAgIERhdGFUYWJsZU1vZHVsZSxcclxuICAgICAgICBUcmVlVGFibGVNb2R1bGUsXHJcbiAgICAgICAgRmFycmlzQ29udGV4dE1lbnVNb2R1bGUsXHJcbiAgICAgICAgTG9jYWxlTW9kdWxlLmZvclJvb3QoKVxyXG4gICAgXSxcclxuICAgIGV4cG9ydHM6IFtcclxuICAgICAgICBMb29rdXBHcmlkQ29tcG9uZW50LCBMb29rdXBDb21wb25lbnRcclxuICAgIF0sXHJcbiAgICBkZWNsYXJhdGlvbnM6IFtcclxuICAgICAgICBMb29rdXBHcmlkQ29tcG9uZW50LFxyXG4gICAgICAgIExvb2t1cENvbXBvbmVudCxcclxuICAgICAgICBMb29rdXBMZWZ0Q29tcG9uZW50LFxyXG4gICAgICAgIExvb2t1cFRhYnNDb21wb25lbnQsXHJcbiAgICAgICAgTG9va3VwVGlwRGlyZWN0aXZlLFxyXG4gICAgICAgIExvb2t1cFF1aWNrU2VsZWN0UGFuZWxDb21wb25lbnQsXHJcbiAgICAgICAgTG9va3VwUXVpY2tTZWxlY3REaXJlY3RpdmVcclxuICAgIF0sXHJcbiAgICBwcm92aWRlcnM6IFtdLFxyXG4gICAgZW50cnlDb21wb25lbnRzOiBbRGF0YVRhYmxlQ29tcG9uZW50LCBUcmVlVGFibGVDb21wb25lbnQsIExvb2t1cExlZnRDb21wb25lbnQsIExvb2t1cFRhYnNDb21wb25lbnQsIExvb2t1cFF1aWNrU2VsZWN0UGFuZWxDb21wb25lbnRdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBMb29rdXBNb2R1bGUge31cclxuIl19