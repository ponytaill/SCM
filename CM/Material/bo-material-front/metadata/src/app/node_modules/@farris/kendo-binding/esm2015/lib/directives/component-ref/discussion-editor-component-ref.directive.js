import { Directive, ElementRef, Injector } from "@angular/core";
import { FrameContext } from "@farris/devkit";
import { DiscussionEditorComponent } from '@farris/discussion-group';
export class DiscussionEditorComponentRefDirective {
    constructor(injector, component, elementRef, frameContext) {
        this.injector = injector;
        this.component = component;
        this.elementRef = elementRef;
        this.frameContext = frameContext;
    }
    ngOnInit() {
        const id = this.elementRef && this.elementRef.nativeElement && this.elementRef.nativeElement.id;
        if (this.frameContext && id) {
            this.frameContext.componentRefManager.add(id, this.component);
        }
    }
    ngOnDestroy() {
    }
}
DiscussionEditorComponentRefDirective.decorators = [
    { type: Directive, args: [{
                selector: '[discussionEditorRef]'
            },] }
];
/** @nocollapse */
DiscussionEditorComponentRefDirective.ctorParameters = () => [
    { type: Injector },
    { type: DiscussionEditorComponent },
    { type: ElementRef },
    { type: FrameContext }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlzY3Vzc2lvbi1lZGl0b3ItY29tcG9uZW50LXJlZi5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL2tlbmRvLWJpbmRpbmcvIiwic291cmNlcyI6WyJsaWIvZGlyZWN0aXZlcy9jb21wb25lbnQtcmVmL2Rpc2N1c3Npb24tZWRpdG9yLWNvbXBvbmVudC1yZWYuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLFFBQVEsRUFBcUIsTUFBTSxlQUFlLENBQUM7QUFDbkYsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzlDLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBS3JFLE1BQU0sT0FBTyxxQ0FBcUM7SUFDaEQsWUFBb0IsUUFBa0IsRUFBVSxTQUFvQyxFQUFVLFVBQXNCLEVBQVUsWUFBMEI7UUFBcEksYUFBUSxHQUFSLFFBQVEsQ0FBVTtRQUFVLGNBQVMsR0FBVCxTQUFTLENBQTJCO1FBQVUsZUFBVSxHQUFWLFVBQVUsQ0FBWTtRQUFVLGlCQUFZLEdBQVosWUFBWSxDQUFjO0lBQUksQ0FBQztJQUM3SixRQUFRO1FBQ04sTUFBTSxFQUFFLEdBQUcsSUFBSSxDQUFDLFVBQVUsSUFBSSxJQUFJLENBQUMsVUFBVSxDQUFDLGFBQWEsSUFBSSxJQUFJLENBQUMsVUFBVSxDQUFDLGFBQWEsQ0FBQyxFQUFFLENBQUM7UUFDaEcsSUFBSSxJQUFJLENBQUMsWUFBWSxJQUFJLEVBQUUsRUFBRTtZQUMzQixJQUFJLENBQUMsWUFBWSxDQUFDLG1CQUFtQixDQUFDLEdBQUcsQ0FBQyxFQUFFLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1NBQy9EO0lBQ0gsQ0FBQztJQUNELFdBQVc7SUFDWCxDQUFDOzs7WUFaRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLHVCQUF1QjthQUNsQzs7OztZQU4rQixRQUFRO1lBRS9CLHlCQUF5QjtZQUZkLFVBQVU7WUFDckIsWUFBWSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgRWxlbWVudFJlZiwgSW5qZWN0b3IsIE9uRGVzdHJveSwgT25Jbml0IH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcclxuaW1wb3J0IHsgRnJhbWVDb250ZXh0IH0gZnJvbSBcIkBmYXJyaXMvZGV2a2l0XCI7XHJcbmltcG9ydCB7IERpc2N1c3Npb25FZGl0b3JDb21wb25lbnQgfSBmcm9tICdAZmFycmlzL2Rpc2N1c3Npb24tZ3JvdXAnO1xyXG5cclxuQERpcmVjdGl2ZSh7XHJcbiAgc2VsZWN0b3I6ICdbZGlzY3Vzc2lvbkVkaXRvclJlZl0nXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBEaXNjdXNzaW9uRWRpdG9yQ29tcG9uZW50UmVmRGlyZWN0aXZlIGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgaW5qZWN0b3I6IEluamVjdG9yLCBwcml2YXRlIGNvbXBvbmVudDogRGlzY3Vzc2lvbkVkaXRvckNvbXBvbmVudCwgcHJpdmF0ZSBlbGVtZW50UmVmOiBFbGVtZW50UmVmLCBwcml2YXRlIGZyYW1lQ29udGV4dDogRnJhbWVDb250ZXh0KSB7IH1cclxuICBuZ09uSW5pdCgpOiB2b2lkIHtcclxuICAgIGNvbnN0IGlkID0gdGhpcy5lbGVtZW50UmVmICYmIHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50ICYmIHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50LmlkO1xyXG4gICAgaWYgKHRoaXMuZnJhbWVDb250ZXh0ICYmIGlkKSB7XHJcbiAgICAgIHRoaXMuZnJhbWVDb250ZXh0LmNvbXBvbmVudFJlZk1hbmFnZXIuYWRkKGlkLCB0aGlzLmNvbXBvbmVudCk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIG5nT25EZXN0cm95KCk6IHZvaWQge1xyXG4gIH1cclxuXHJcbn0iXX0=