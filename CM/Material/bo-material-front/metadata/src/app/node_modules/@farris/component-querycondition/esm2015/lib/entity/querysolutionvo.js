/**
 * @fileoverview added by tsickle
 * Generated from: lib/entity/querysolutionvo.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { QueryConditionConvert } from "./querycondition";
/**
 * 查询方案实体类
 */
export class QuerySolutionVo {
    constructor() {
        /**
         * 是否默认查询方案
         * 初始时，为false
         */
        this.isDefault = false;
        this.isChanged = false;
        this.extendId = 'query-scheme-1';
    }
}
if (false) {
    /**
     * 唯一性标识
     * @type {?}
     */
    QuerySolutionVo.prototype.id;
    /**
     * 所属ID，例如所属表单ID
     * @type {?}
     */
    QuerySolutionVo.prototype.belongId;
    /**
     * 查询方案编号
     * @type {?}
     */
    QuerySolutionVo.prototype.code;
    /**
     * 查询方案名称
     * @type {?}
     */
    QuerySolutionVo.prototype.name;
    /**
     * 查询条件
     * @type {?}
     */
    QuerySolutionVo.prototype.queryConditions;
    /**
     * 是否系统预置查询方案
     * @type {?}
     */
    QuerySolutionVo.prototype.isSystem;
    /**
     * 是否默认查询方案
     * 初始时，为false
     * @type {?}
     */
    QuerySolutionVo.prototype.isDefault;
    /** @type {?} */
    QuerySolutionVo.prototype.isChanged;
    /**
     * 类型： pre是上次查询
     * @type {?}
     */
    QuerySolutionVo.prototype.type;
    /** @type {?} */
    QuerySolutionVo.prototype.extendId;
    /** @type {?} */
    QuerySolutionVo.prototype.extendInfo;
}
/**
 * 查询方案实体类序列化与反序列化器
 */
export class QuerySolutionVoConvertor {
    /**
     * 序列化
     * @param {?} obj 查询方案实体
     * @return {?}
     */
    convertJObject(obj) {
        /** @type {?} */
        let querySolutionVo = (/** @type {?} */ (obj));
        /** @type {?} */
        let jobj = new Object();
        jobj["id"] = querySolutionVo.id;
        jobj["belongId"] = querySolutionVo.belongId;
        jobj["code"] = querySolutionVo.code;
        jobj["name"] = querySolutionVo.name;
        jobj["isSystem"] = querySolutionVo.isSystem;
        jobj["isDefault"] = querySolutionVo.isDefault;
        jobj["type"] = querySolutionVo.type;
        jobj["extendId"] = querySolutionVo.extendId;
        jobj["extendInfo"] = querySolutionVo.extendInfo;
        if (querySolutionVo.queryConditions && querySolutionVo.queryConditions.length > 0) {
            /** @type {?} */
            let jArray = [];
            /** @type {?} */
            let convertor = new QueryConditionConvert();
            querySolutionVo.queryConditions.forEach((/**
             * @param {?} element
             * @return {?}
             */
            element => {
                jArray.push(convertor.convertJObject(element));
            }));
            //向服务端发送数据时，发送query condition list的json string
            jobj["queryConditionString"] = JSON.stringify(jArray);
        }
        return jobj;
    }
    /**
     * 反序列化(初始化)
     * @param {?} jobj 查询方案序列化后的Object
     * @return {?}
     */
    initFromJobject(jobj) {
        /** @type {?} */
        let querySolutionVo = new QuerySolutionVo();
        querySolutionVo.id = jobj["id"];
        querySolutionVo.code = jobj["code"];
        querySolutionVo.name = jobj["name"];
        querySolutionVo.belongId = jobj["belongId"];
        querySolutionVo.isSystem = jobj["isSystem"];
        querySolutionVo.isDefault = jobj["isDefault"];
        querySolutionVo.type = jobj.hasOwnProperty('type') ? jobj["type"] : '';
        querySolutionVo.extendId = jobj.hasOwnProperty('extendId') ? jobj["extendId"] : "";
        querySolutionVo.queryConditions = new Array();
        //服务器端返回的query condition list实际是 json string
        /** @type {?} */
        const queryConditionString = jobj["queryConditionString"];
        if (queryConditionString) {
            /** @type {?} */
            const conditionJarry = JSON.parse(queryConditionString);
            /** @type {?} */
            let convertor = new QueryConditionConvert();
            conditionJarry.forEach((/**
             * @param {?} element
             * @return {?}
             */
            element => {
                querySolutionVo.queryConditions.push(convertor.initFromJobject(element));
            }));
        }
        return querySolutionVo;
    }
    /**
     * 从缓存中取回的JSON数据需要转化
     * 从大写转换到小写条件
     * @param {?} jobj
     * @return {?}
     */
    formatFromJobject(jobj) {
        /** @type {?} */
        let queryConditions = new Array();
        /** @type {?} */
        let conditionJarry;
        if (typeof jobj == 'string') {
            conditionJarry = JSON.parse(jobj);
        }
        else {
            conditionJarry = jobj;
        }
        /** @type {?} */
        let convertor = new QueryConditionConvert();
        conditionJarry.forEach((/**
         * @param {?} element
         * @return {?}
         */
        element => {
            queryConditions.push(convertor.initFromJobject(element));
        }));
        return queryConditions;
    }
    /**
     * 存入缓存中
     * 从大写转换到小写条件
     * @param {?} jobj
     * @return {?}
     */
    formatConvertJObject(jobj) {
        /** @type {?} */
        let queryConditions = [];
        /** @type {?} */
        let convertor = new QueryConditionConvert();
        jobj.forEach((/**
         * @param {?} element
         * @return {?}
         */
        element => {
            queryConditions.push(convertor.convertJObject(element));
        }));
        return queryConditions;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXVlcnlzb2x1dGlvbnZvLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy9jb21wb25lbnQtcXVlcnljb25kaXRpb24vIiwic291cmNlcyI6WyJsaWIvZW50aXR5L3F1ZXJ5c29sdXRpb252by50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBa0IscUJBQXFCLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQzs7OztBQU16RSxNQUFNLE9BQU8sZUFBZTtJQUE1Qjs7Ozs7UUFtQ0ksY0FBUyxHQUFZLEtBQUssQ0FBQztRQUUzQixjQUFTLEdBQVksS0FBSyxDQUFDO1FBTTNCLGFBQVEsR0FBVyxnQkFBZ0IsQ0FBQztJQUd4QyxDQUFDO0NBQUE7Ozs7OztJQTFDRyw2QkFBVzs7Ozs7SUFLWCxtQ0FBaUI7Ozs7O0lBS2pCLCtCQUFhOzs7OztJQUtiLCtCQUFhOzs7OztJQUtiLDBDQUF1Qzs7Ozs7SUFLdkMsbUNBQWtCOzs7Ozs7SUFNbEIsb0NBQTJCOztJQUUzQixvQ0FBMkI7Ozs7O0lBSTNCLCtCQUFhOztJQUViLG1DQUFvQzs7SUFFcEMscUNBQXlDOzs7OztBQU03QyxNQUFNLE9BQU8sd0JBQXdCOzs7Ozs7SUFNakMsY0FBYyxDQUFDLEdBQW9COztZQUMzQixlQUFlLEdBQUcsbUJBQUEsR0FBRyxFQUFtQjs7WUFDeEMsSUFBSSxHQUFHLElBQUksTUFBTSxFQUFFO1FBQ3ZCLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxlQUFlLENBQUMsRUFBRSxDQUFDO1FBQ2hDLElBQUksQ0FBQyxVQUFVLENBQUMsR0FBRyxlQUFlLENBQUMsUUFBUSxDQUFDO1FBQzVDLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxlQUFlLENBQUMsSUFBSSxDQUFDO1FBQ3BDLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxlQUFlLENBQUMsSUFBSSxDQUFDO1FBQ3BDLElBQUksQ0FBQyxVQUFVLENBQUMsR0FBRyxlQUFlLENBQUMsUUFBUSxDQUFDO1FBQzVDLElBQUks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QyxPQUFPOzs7O1FBQUMsT0FBTyxDQUFDLEVBQUU7WUFDN0IsZUFBZSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsZUFBZSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7UUFDN0QsQ0FBQyxFQUFDLENBQUM7UUFDSCxPQUFPLGVBQWUsQ0FBQztJQUMzQixDQUFDOzs7Ozs7O0lBS0Qsb0JBQW9CLENBQUMsSUFBMkI7O1lBQ3hDLGVBQWUsR0FBRSxFQUFFOztZQUNuQixTQUFTLEdBQUcsSUFBSSxxQkFBcUIsRUFBRTtRQUMzQyxJQUFJLENBQUMsT0FBTzs7OztRQUFDLE9BQU8sQ0FBQyxFQUFFO1lBQ25CLGVBQWUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLGNBQWMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO1FBQzVELENBQUMsRUFBQyxDQUFDO1FBQ0gsT0FBTyxlQUFlLENBQUM7SUFDM0IsQ0FBQztDQUNKIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUXVlcnlDb25kaXRpb24sIFF1ZXJ5Q29uZGl0aW9uQ29udmVydCB9IGZyb20gXCIuL3F1ZXJ5Y29uZGl0aW9uXCI7XHJcbmltcG9ydCB7IFF1ZXJ5U29sdXRpb25FeHRlbmRWbyB9IGZyb20gJy4vcXVlcnlzb2x1dGlvbmV4dGVuZHZvJztcclxuXHJcbi8qKlxyXG4gKiDmn6Xor6LmlrnmoYjlrp7kvZPnsbsgXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgUXVlcnlTb2x1dGlvblZvIHtcclxuICAgIC8qKlxyXG4gICAgICog5ZSv5LiA5oCn5qCH6K+GXHJcbiAgICAgKi9cclxuICAgIGlkOiBzdHJpbmc7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDmiYDlsZ5JRO+8jOS+i+WmguaJgOWxnuihqOWNlUlEXHJcbiAgICAgKi9cclxuICAgIGJlbG9uZ0lkOiBzdHJpbmc7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDmn6Xor6LmlrnmoYjnvJblj7dcclxuICAgICAqL1xyXG4gICAgY29kZTogc3RyaW5nO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICog5p+l6K+i5pa55qGI5ZCN56ewXHJcbiAgICAgKi9cclxuICAgIG5hbWU6IHN0cmluZztcclxuXHJcbiAgICAvKipcclxuICAgICAqIOafpeivouadoeS7tlxyXG4gICAgICovXHJcbiAgICBxdWVyeUNvbmRpdGlvbnM6IEFycmF5PFF1ZXJ5Q29uZGl0aW9uPjtcclxuXHJcbiAgICAvKipcclxuICAgICAqIOaYr+WQpuezu+e7n+mihOe9ruafpeivouaWueahiFxyXG4gICAgICovXHJcbiAgICBpc1N5c3RlbTogYm9vbGVhbjtcclxuXHJcbiAgICAvKipcclxuICAgICAqIOaYr+WQpum7mOiupOafpeivouaWueahiFxyXG4gICAgICog5Yid5aeL5pe277yM5Li6ZmFsc2VcclxuICAgICAqL1xyXG4gICAgaXNEZWZhdWx0OiBib29sZWFuID0gZmFsc2U7XHJcblxyXG4gICAgaXNDaGFuZ2VkOiBib29sZWFuID0gZmFsc2U7XHJcbiAgICAvKipcclxuICAgICAqIOexu+Wei++8miBwcmXmmK/kuIrmrKHmn6Xor6JcclxuICAgICAqL1xyXG4gICAgdHlwZTogc3RyaW5nO1xyXG5cclxuICAgIGV4dGVuZElkOiBzdHJpbmcgPSAncXVlcnktc2NoZW1lLTEnO1xyXG5cclxuICAgIGV4dGVuZEluZm86IEFycmF5PFF1ZXJ5U29sdXRpb25FeHRlbmRWbz47XHJcbn1cclxuXHJcbi8qKlxyXG4gKiDmn6Xor6LmlrnmoYjlrp7kvZPnsbvluo/liJfljJbkuI7lj43luo/liJfljJblmahcclxuICovXHJcbmV4cG9ydCBjbGFzcyBRdWVyeVNvbHV0aW9uVm9Db252ZXJ0b3Ige1xyXG5cclxuICAgIC8qKlxyXG4gICAgICog5bqP5YiX5YyWXHJcbiAgICAgKiBAcGFyYW0gb2JqIOafpeivouaWueahiOWunuS9k1xyXG4gICAgICovXHJcbiAgICBjb252ZXJ0Sk9iamVjdChvYmo6IFF1ZXJ5U29sdXRpb25Wbyk6IE9iamVjdCB7XHJcbiAgICAgICAgbGV0IHF1ZXJ5U29sdXRpb25WbyA9IG9iaiBhcyBRdWVyeVNvbHV0aW9uVm87XHJcbiAgICAgICAgbGV0IGpvYmogPSBuZXcgT2JqZWN0KCk7XHJcbiAgICAgICAgam9ialtcImlkXCJdID0gcXVlcnlTb2x1dGlvblZvLmlkO1xyXG4gICAgICAgIGpvYmpbXCJiZWxvbmdJZFwiXSA9IHF1ZXJ5U29sdXRpb25Wby5iZWxvbmdJZDtcclxuICAgICAgICBqb2JqW1wiY29kZVwiXSA9IHF1ZXJ5U29sdXRpb25Wby5jb2RlO1xyXG4gICAgICAgIGpvYmpbXCJuYW1lXCJdID0gcXVlcnlTb2x1dGlvblZvLm5hbWU7XHJcbiAgICAgICAgam9ialtcImlzU3lzdGVtXCJdID0gcXVlcnlTb2x1dGlvblZvLmlzU3lzdGVtO1xyXG4gICAgICAgIGpvYmpbXCJpc0RlZmF1bHRcIl0gPSBxdWVyeVNvbHV0aW9uVm8uaXNEZWZhdWx0O1xyXG4gICAgICAgIGpvYmpbXCJ0eXBlXCJdID0gcXVlcnlTb2x1dGlvblZvLnR5cGU7XHJcbiAgICAgICAgam9ialtcImV4dGVuZElkXCJdID0gcXVlcnlTb2x1dGlvblZvLmV4dGVuZElkO1xyXG4gICAgICAgIGpvYmpbXCJleHRlbmRJbmZvXCJdID0gcXVlcnlTb2x1dGlvblZvLmV4dGVuZEluZm87XHJcbiAgICAgICAgaWYgKHF1ZXJ5U29sdXRpb25Wby5xdWVyeUNvbmRpdGlvbnMgJiYgcXVlcnlTb2x1dGlvblZvLnF1ZXJ5Q29uZGl0aW9ucy5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgIGxldCBqQXJyYXkgPSBbXTtcclxuICAgICAgICAgICAgbGV0IGNvbnZlcnRvciA9IG5ldyBRdWVyeUNvbmRpdGlvbkNvbnZlcnQoKTtcclxuICAgICAgICAgICAgcXVlcnlTb2x1dGlvblZvLnF1ZXJ5Q29uZGl0aW9ucy5mb3JFYWNoKGVsZW1lbnQgPT4ge1xyXG4gICAgICAgICAgICAgICAgakFycmF5LnB1c2goY29udmVydG9yLmNvbnZlcnRKT2JqZWN0KGVsZW1lbnQpKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIC8v5ZCR5pyN5Yqh56uv5Y+R6YCB5pWw5o2u5pe277yM5Y+R6YCBcXVlcnkgY29uZGl0aW9uIGxpc3TnmoRqc29uIHN0cmluZ1xyXG4gICAgICAgICAgICBqb2JqW1wicXVlcnlDb25kaXRpb25TdHJpbmdcIl0gPSBKU09OLnN0cmluZ2lmeShqQXJyYXkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gam9iajtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOWPjeW6j+WIl+WMlijliJ3lp4vljJYpXHJcbiAgICAgKiBAcGFyYW0gam9iaiDmn6Xor6LmlrnmoYjluo/liJfljJblkI7nmoRPYmplY3RcclxuICAgICAqL1xyXG4gICAgaW5pdEZyb21Kb2JqZWN0KGpvYmo6IE9iamVjdCk6IFF1ZXJ5U29sdXRpb25WbyB7XHJcbiAgICAgICAgbGV0IHF1ZXJ5U29sdXRpb25WbyA9IG5ldyBRdWVyeVNvbHV0aW9uVm8oKTtcclxuICAgICAgICBxdWVyeVNvbHV0aW9uVm8uaWQgPSBqb2JqW1wiaWRcIl07XHJcbiAgICAgICAgcXVlcnlTb2x1dGlvblZvLmNvZGUgPSBqb2JqW1wiY29kZVwiXTtcclxuICAgICAgICBxdWVyeVNvbHV0aW9uVm8ubmFtZSA9IGpvYmpbXCJuYW1lXCJdO1xyXG4gICAgICAgIHF1ZXJ5U29sdXRpb25Wby5iZWxvbmdJZCA9IGpvYmpbXCJiZWxvbmdJZFwiXTtcclxuICAgICAgICBxdWVyeVNvbHV0aW9uVm8uaXNTeXN0ZW0gPSBqb2JqW1wiaXNTeXN0ZW1cIl07XHJcbiAgICAgICAgcXVlcnlTb2x1dGlvblZvLmlzRGVmYXVsdCA9IGpvYmpbXCJpc0RlZmF1bHRcIl07XHJcbiAgICAgICAgcXVlcnlTb2x1dGlvblZvLnR5cGUgPSBqb2JqLmhhc093blByb3BlcnR5KCd0eXBlJykgPyBqb2JqW1widHlwZVwiXSA6ICcnO1xyXG4gICAgICAgIHF1ZXJ5U29sdXRpb25Wby5leHRlbmRJZCA9IGpvYmouaGFzT3duUHJvcGVydHkoJ2V4dGVuZElkJykgPyBqb2JqW1wiZXh0ZW5kSWRcIl0gOiBcIlwiO1xyXG4gICAgICAgIHF1ZXJ5U29sdXRpb25Wby5xdWVyeUNvbmRpdGlvbnMgPSBuZXcgQXJyYXk8UXVlcnlDb25kaXRpb24+KCk7XHJcbiAgICAgICAgLy/mnI3liqHlmajnq6/ov5Tlm57nmoRxdWVyeSBjb25kaXRpb24gbGlzdOWunumZheaYryBqc29uIHN0cmluZ1xyXG4gICAgICAgIGNvbnN0IHF1ZXJ5Q29uZGl0aW9uU3RyaW5nID0gam9ialtcInF1ZXJ5Q29uZGl0aW9uU3RyaW5nXCJdO1xyXG4gICAgICAgIGlmIChxdWVyeUNvbmRpdGlvblN0cmluZykge1xyXG4gICAgICAgICAgICBjb25zdCBjb25kaXRpb25KYXJyeSA9IEpTT04ucGFyc2UocXVlcnlDb25kaXRpb25TdHJpbmcpO1xyXG4gICAgICAgICAgICBsZXQgY29udmVydG9yID0gbmV3IFF1ZXJ5Q29uZGl0aW9uQ29udmVydCgpO1xyXG4gICAgICAgICAgICBjb25kaXRpb25KYXJyeS5mb3JFYWNoKGVsZW1lbnQgPT4ge1xyXG4gICAgICAgICAgICAgICAgcXVlcnlTb2x1dGlvblZvLnF1ZXJ5Q29uZGl0aW9ucy5wdXNoKGNvbnZlcnRvci5pbml0RnJvbUpvYmplY3QoZWxlbWVudCkpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHF1ZXJ5U29sdXRpb25WbztcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICog5LuO57yT5a2Y5Lit5Y+W5Zue55qESlNPTuaVsOaNrumcgOimgei9rOWMllxyXG4gICAgICog5LuO5aSn5YaZ6L2s5o2i5Yiw5bCP5YaZ5p2h5Lu2XHJcbiAgICAgKi9cclxuICAgIGZvcm1hdEZyb21Kb2JqZWN0KGpvYmo6IEFycmF5PGFueT4gfCBzdHJpbmcpOiBBcnJheTxRdWVyeUNvbmRpdGlvbj4ge1xyXG4gICAgICAgIGxldCBxdWVyeUNvbmRpdGlvbnMgPSBuZXcgQXJyYXk8UXVlcnlDb25kaXRpb24+KCk7XHJcbiAgICAgICAgbGV0IGNvbmRpdGlvbkphcnJ5O1xyXG4gICAgICAgIGlmICh0eXBlb2Ygam9iaiA9PSAnc3RyaW5nJykge1xyXG4gICAgICAgICAgICBjb25kaXRpb25KYXJyeSA9IEpTT04ucGFyc2Uoam9iaik7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgY29uZGl0aW9uSmFycnkgPSBqb2JqO1xyXG4gICAgICAgIH1cclxuICAgICAgICBsZXQgY29udmVydG9yID0gbmV3IFF1ZXJ5Q29uZGl0aW9uQ29udmVydCgpO1xyXG4gICAgICAgIGNvbmRpdGlvbkphcnJ5LmZvckVhY2goZWxlbWVudCA9PiB7XHJcbiAgICAgICAgICAgIHF1ZXJ5Q29uZGl0aW9ucy5wdXNoKGNvbnZlcnRvci5pbml0RnJvbUpvYmplY3QoZWxlbWVudCkpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHJldHVybiBxdWVyeUNvbmRpdGlvbnM7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIOWtmOWFpee8k+WtmOS4rVxyXG4gICAgICog5LuO5aSn5YaZ6L2s5o2i5Yiw5bCP5YaZ5p2h5Lu2XHJcbiAgICAgKi9cclxuICAgIGZvcm1hdENvbnZlcnRKT2JqZWN0KGpvYmo6IEFycmF5PFF1ZXJ5Q29uZGl0aW9uPik6QXJyYXk8YW55PntcclxuICAgICAgICBsZXQgcXVlcnlDb25kaXRpb25zID1bXTtcclxuICAgICAgICBsZXQgY29udmVydG9yID0gbmV3IFF1ZXJ5Q29uZGl0aW9uQ29udmVydCgpO1xyXG4gICAgICAgIGpvYmouZm9yRWFjaChlbGVtZW50ID0+IHtcclxuICAgICAgICAgICAgcXVlcnlDb25kaXRpb25zLnB1c2goY29udmVydG9yLmNvbnZlcnRKT2JqZWN0KGVsZW1lbnQpKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICByZXR1cm4gcXVlcnlDb25kaXRpb25zO1xyXG4gICAgfVxyXG59Il19