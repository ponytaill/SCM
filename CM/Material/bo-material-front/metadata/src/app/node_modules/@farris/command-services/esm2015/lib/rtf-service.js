import { Injectable } from '@angular/core';
import { EMPTY, Subject } from 'rxjs';
import { UID } from '@farris/devkit';
/*
 * @Author: aalizzwell
 * @Date: 2019-07-23 15:56:11
 * @Last Modified by: aalizzwell
 * @Last Modified time: 2019-11-27 15:31:36
 */
/**
 * RuntimeFrameworkService
 * @scope @FormModule
 */
// tslint:disable: no-string-literal disable: max-line-length
export class RuntimeFrameworkService {
    constructor() {
        this.rtfService = this.getService();
    }
    /**
     * 遍历获取rtf服务
     */
    getService() {
        let env = window;
        while (!env['gspframeworkService'] && env !== window.top && this.isSameOrigin(env)) {
            env = env.parent;
        }
        return env['gspframeworkService'] && env['gspframeworkService']['rtf'] || {};
    }
    // #region 导航服务
    /**
     * 打开菜单或应用
     * @param options options
     */
    openMenu(options) {
        if (this.rtfService && this.rtfService.hasOwnProperty('func') && typeof this.rtfService['func']['openMenu'] === 'function') {
            this.rtfService.func.openMenu(options);
        }
    }
    /**
     * 打开菜单或应用
     * @param options options
     */
    openMenu$(options) {
        if (this.rtfService && this.rtfService.hasOwnProperty('func') && typeof this.rtfService['func']['openMenuByStream'] === 'function') {
            return this.rtfService.func.openMenuByStream(options);
        }
        return EMPTY;
    }
    /**
     * 获取导航实体数据
     * @param tabId tabid
     * @param callback callback
     * @param once once
     */
    getEntityParam(tabId, callback, once = true) {
        if (this.rtfService && this.rtfService.hasOwnProperty('func') && typeof this.rtfService['func']['getEntityParam'] === 'function') {
            this.rtfService.func.getEntityParam(tabId, callback, once);
        }
    }
    /**
     * 尝试关闭菜单或应用
     * @param options optins
     */
    beforeCloseMenu(options) {
        if (this.rtfService && this.rtfService.hasOwnProperty('func') && typeof this.rtfService['func']['beforeClose'] === 'function') {
            this.rtfService.func.beforeClose(options);
        }
    }
    /**
     * 关闭菜单
     * @param options options
     */
    closeMenu(options) {
        if (this.rtfService && this.rtfService.hasOwnProperty('func') && typeof this.rtfService['func']['close'] === 'function') {
            this.rtfService.func.close(options);
        }
    }
    /**
     * 获取菜单静态参数
     * @param funcId 菜单id
     * @param callback 回调
     */
    getMenuParams(funcId, callback) {
        if (this.rtfService && this.rtfService.hasOwnProperty('func') && typeof this.rtfService['func']['getMenuParams'] === 'function') {
            this.rtfService.func.getMenuParams(funcId, callback);
        }
    }
    /**
     * 添加事件监听
     */
    addEventListener(token, handler, options) {
        if (this.rtfService && this.rtfService.hasOwnProperty('frmEvent') && typeof this.rtfService['frmEvent']['eventListener'] === 'function') {
            this.rtfService.frmEvent.eventListener(token, handler, options);
        }
    }
    /**
     * 获取运行框架菜单切换控制事件
     * @returns Observable<any>
     */
    getMenuSwitchControlEvent() {
        const subject = new Subject();
        const frmEvent = this.rtfService && this.rtfService.frmEvent || null;
        if (frmEvent) {
            const tabId = this.tabId;
            const options = this.params;
            window.setTimeout(() => {
                frmEvent.eventListener(tabId, (response) => {
                    const menuSwitchControl = response && response.menuSwitchControl || null;
                    if (menuSwitchControl && menuSwitchControl.key === tabId) {
                        subject.next(menuSwitchControl.value);
                    }
                    else {
                        subject.next(null);
                    }
                }, options);
            }, 0);
        }
        return subject;
    }
    //#endregion
    // #region 适配层属性
    get params() {
        if (this.rtfService && this.rtfService.hasOwnProperty('session') && typeof this.rtfService['session']['getCommonVariable'] === 'function') {
            return this.rtfService['session']['getCommonVariable']();
        }
        return null;
    }
    /**
     * 获取tabId
     */
    get tabId() {
        return this.params && this.params['tabId'] || null;
    }
    /**
     * 获取formToken
     */
    get formToken() {
        return this.params && this.params['formToken'] || null;
    }
    /**
     * 获取funcId
     */
    get funcId() {
        return this.params && this.params['funcId'] || null;
    }
    // #endregion
    // #region 事件通信
    /**
     * 注册主题
     * @param code 主题的标识
     * @param options token生成规则
     * @param subject 自定义主题，默认使用Subject
     * @returns string 注册成功后返回主题的唯一标识
     */
    subjectRegister(code, options, subject) {
        if (this.rtfService && this.rtfService.hasOwnProperty('broadcast') && typeof this.rtfService['broadcast']['subjectRegister'] === 'function') {
            return this.rtfService.broadcast.subjectRegister(code, options, subject);
        }
        return null;
    }
    /**
     * 移除主题
     * @param token 主题唯一标识
     */
    subjectRemove(token) {
        if (this.rtfService && this.rtfService.hasOwnProperty('broadcast') && typeof this.rtfService['broadcast']['subjectRemove'] === 'function') {
            this.rtfService.broadcast.subjectRemove(token);
        }
    }
    /**
     * 给主题发送消息
     * @param token 主题标识
     * @param info 消息
     */
    subjectNotify(token, info) {
        if (this.rtfService && this.rtfService.hasOwnProperty('broadcast') && typeof this.rtfService['broadcast']['notify'] === 'function') {
            this.rtfService.broadcast.notify(token, info);
        }
    }
    /**
     * 注册主题监听器
     * @param token 主题标识
     * @param handler 主题处理器
     * @param observerToken 监听器id(可选)
     * @returns 监听器Id
     * @description 监听主题消息，监听成功返回当前监听者的唯一标识
     */
    subjectResponse(token, handler, observerToken) {
        if (this.rtfService && this.rtfService.hasOwnProperty('broadcast') && typeof this.rtfService['broadcast']['response'] === 'function') {
            let code = observerToken;
            if (typeof observerToken === 'undefined' || !observerToken || observerToken.length < 1) {
                code = UID.create();
            }
            this.rtfService.broadcast.response(token, code, handler);
            return code;
        }
        return null;
    }
    /**
     * 取消对主题的监听
     * @param token 主题标识
     * @param observerToken 监听器标识
     */
    responseUnSubscribe(token, observerToken) {
        if (this.rtfService && this.rtfService.hasOwnProperty('broadcast') && typeof this.rtfService['broadcast']['responseUnSubscribe'] === 'function') {
            this.rtfService.broadcast.responseUnSubscribe(token, observerToken);
        }
    }
    // #endregion
    // #region 工具函数
    /**
     * 是否同源
     * @param environment window
     */
    isSameOrigin(environment) {
        const host = window.location.host;
        try {
            if (environment && environment.location && typeof environment.location.host !== 'undefined') {
                return environment.location.host === host;
            }
        }
        catch (e) {
            return false;
        }
        return false;
    }
}
RuntimeFrameworkService.decorators = [
    { type: Injectable }
];
/** @nocollapse */
RuntimeFrameworkService.ctorParameters = () => [];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicnRmLXNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL2NvbW1hbmQtc2VydmljZXMvIiwic291cmNlcyI6WyJsaWIvcnRmLXNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsS0FBSyxFQUFjLE9BQU8sRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUNsRCxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFckM7Ozs7O0dBS0c7QUFHSDs7O0dBR0c7QUFDSCw2REFBNkQ7QUFFN0QsTUFBTSxPQUFPLHVCQUF1QjtJQUVsQztRQUNFLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO0lBQ3RDLENBQUM7SUFDRDs7T0FFRztJQUNLLFVBQVU7UUFDaEIsSUFBSSxHQUFHLEdBQVcsTUFBTSxDQUFDO1FBQ3pCLE9BQU8sQ0FBQyxHQUFHLENBQUMscUJBQXFCLENBQUMsSUFBSSxHQUFHLEtBQUssTUFBTSxDQUFDLEdBQUcsSUFBSSxJQUFJLENBQUMsWUFBWSxDQUFDLEdBQUcsQ0FBQyxFQUFFO1lBQ2xGLEdBQUcsR0FBRyxHQUFHLENBQUMsTUFBTSxDQUFDO1NBQ2xCO1FBQ0QsT0FBTyxHQUFHLENBQUMscUJBQXFCLENBQUMsSUFBSSxHQUFHLENBQUMscUJBQXFCLENBQUMsQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDL0UsQ0FBQztJQUNELGVBQWU7SUFDZjs7O09BR0c7SUFDSCxRQUFRLENBQUMsT0FBWTtRQUNuQixJQUFJLElBQUksQ0FBQyxVQUFVLElBQUksSUFBSSxDQUFDLFVBQVUsQ0FBQyxjQUFjLENBQUMsTUFBTSxDQUFDLElBQUksT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDLFVBQVUsQ0FBQyxLQUFLLFVBQVUsRUFBRTtZQUMxSCxJQUFJLENB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QVUsQ0FBQyxXQUFXLENBQUMsQ0FBQyxxQkFBcUIsQ0FBQyxLQUFLLFVBQVUsRUFBRTtZQUMvSSxJQUFJLENBQUMsVUFBVSxDQUFDLFNBQVMsQ0FBQyxtQkFBbUIsQ0FBQyxLQUFLLEVBQUUsYUFBYSxDQUFDLENBQUM7U0FDckU7SUFDSCxDQUFDO0lBQ0QsYUFBYTtJQUViLGVBQWU7SUFDZjs7O09BR0c7SUFDSyxZQUFZLENBQUMsV0FBbUI7UUFDdEMsTUFBTSxJQUFJLEdBQUcsTUFBTSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUM7UUFDbEMsSUFBSTtZQUNGLElBQUksV0FBVyxJQUFJLFdBQVcsQ0FBQyxRQUFRLElBQUksT0FBTyxXQUFXLENBQUMsUUFBUSxDQUFDLElBQUksS0FBSyxXQUFXLEVBQUU7Z0JBQzNGLE9BQU8sV0FBVyxDQUFDLFFBQVEsQ0FBQyxJQUFJLEtBQUssSUFBSSxDQUFDO2FBQzNDO1NBQ0Y7UUFBQyxPQUFPLENBQUMsRUFBRTtZQUNWLE9BQU8sS0FBSyxDQUFDO1NBQ2Q7UUFFRCxPQUFPLEtBQUssQ0FBQztJQUNmLENBQUM7OztZQXZORixVQUFVIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRU1QVFksIE9ic2VydmFibGUsIFN1YmplY3QgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IFVJRCB9IGZyb20gJ0BmYXJyaXMvZGV2a2l0JztcbmltcG9ydCB7IHN3aXRjaE1hcCB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcbi8qXG4gKiBAQXV0aG9yOiBhYWxpenp3ZWxsIFxuICogQERhdGU6IDIwMTktMDctMjMgMTU6NTY6MTEgXG4gKiBATGFzdCBNb2RpZmllZCBieTogYWFsaXp6d2VsbFxuICogQExhc3QgTW9kaWZpZWQgdGltZTogMjAxOS0xMS0yNyAxNTozMTozNlxuICovXG5cblxuLyoqXG4gKiBSdW50aW1lRnJhbWV3b3JrU2VydmljZVxuICogQHNjb3BlIEBGb3JtTW9kdWxlXG4gKi9cbi8vIHRzbGludDpkaXNhYmxlOiBuby1zdHJpbmctbGl0ZXJhbCBkaXNhYmxlOiBtYXgtbGluZS1sZW5ndGhcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBSdW50aW1lRnJhbWV3b3JrU2VydmljZSB7XG4gIHByaXZhdGUgcnRmU2VydmljZTogYW55O1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLnJ0ZlNlcnZpY2UgPSB0aGlzLmdldFNlcnZpY2UoKTtcbiAgfVxuICAvKipcbiAgICog6YGN5Y6G6I635Y+WcnRm5pyN5YqhXG4gICAqL1xuICBwcml2YXRlIGdldFNlcnZpY2UoKSB7XG4gICAgbGV0IGVudjogV2luZG93ID0gd2luZG93O1xuICAgIHdoaWxlICghZW52Wydnc3BmcmFtZXdvcmtTZXJ2aWNlJ10gJiYgZW52ICE9PSB3aW5kb3cudG9wICYmIHRoaXMuaXNTYW1lT3JpZ2luKGVudikpIHtcbiAgICAgIGVudiA9IGVudi5wYXJlbnQ7XG4gICAgfVxuICAgIHJldHVybiBlbnZbJ2dzcGZyYW1ld29ya1NlcnZpY2UnXSAmJiBlbnZbJ2dzcGZyYW1ld29ya1NlcnZpY2UnXVsncnRmJ10gfHwge307XG4gIH1cbiAgLy8gI3JlZ2lvbiDlr7zoiKrmnI3liqFcbiAgLyoqXG4gICAqIOaJk+W8gOiPnOWNleaIluW6lOeUqFxuICAgKiBAcGFyYW0gb3B0aW9ucyBvcHRpb25zXG4gICAqL1xuICBvcGVuTWVudShvcHRpb25zOiBhbnkpIHtcbiAgICBpZiAodGhpcy5ydGZTZXJ2aWNlICYmIHRoaXMucnRmU2VydmljZS5oYXNPd25Qcm9wZXJ0eSgnZnVuYycpICYmIHR5cGVvZiB0aGlzLnJ0ZlNlcnZpY2VbJ2Z1bmMnXVsnb3Blbk1lbnUnXSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgdGhpcy5ydGZTZXJ2aWNlLmZ1bmMub3Blbk1lbnUob3B0aW9ucyk7XG4gICAgfVxuICB9XG4gIC8qKlxuICAgKiDmiZPlvIDoj5zljZXmiJblupTnlKhcbiAgICogQHBhcmFtIG9wdGlvbnMgb3B0aW9uc1xuICAgKi9cbiAgb3Blbk1lbnUkKG9wdGlvbnM6IGFueSkge1xuICAgIGlmICh0aGlzLnJ0ZlNlcnZpY2UgJiYgdGhpcy5ydGZTZXJ2aWNlLmhhc093blByb3BlcnR5KCdmdW5jJykgJiYgdHlwZW9mIHRoaXMucnRmU2VydmljZVsnZnVuYyddWydvcGVuTWVudUJ5U3RyZWFtJ10gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHJldHVybiB0aGlzLnJ0ZlNlcnZpY2UuZnVuYy5vcGVuTWVudUJ5U3RyZWFtKG9wdGlvbnMpO1xuICAgIH1cbiAgICByZXR1cm4gRU1QVFk7XG4gIH1cbiAgLyoqXG4gICAqIOiOt+WPluWvvOiIquWunuS9k+aVsOaNrlxuICAgKiBAcGFyYW0gdGFiSWQgdGFiaWRcbiAgICogQHBhcmFtIGNhbGxiYWNrIGNhbGxiYWNrXG4gICAqIEBwYXJhbSBvbmNlIG9uY2VcbiAgICovXG4gIGdldEVudGl0eVBhcmFtKHRhYklkOiBzdHJpbmcsIGNhbGxiYWNrOiBhbnksIG9uY2U6IGJvb2xlYW4gPSB0cnVlKSB7XG4gICAgaWYgKHRoaXMucnRmU2VydmljZSAmJiB0aGlzLnJ0ZlNlcnZpY2UuaGFzT3duUHJvcGVydHkoJ2Z1bmMnKSAmJiB0eXBlb2YgdGhpcy5ydGZTZXJ2aWNlWydmdW5jJ11bJ2dldEVudGl0eVBhcmFtJ10gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHRoaXMucnRmU2VydmljZS5mdW5jLmdldEVudGl0eVBhcmFtKHRhYklkLCBjYWxsYmFjaywgb25jZSk7XG4gICAgfVxuICB9XG4gIC8qKlxuICAgKiDlsJ3or5XlhbPpl63oj5zljZXmiJblupTnlKhcbiAgICogQHBhcmFtIG9wdGlvbnMgb3B0aW5zXG4gICAqL1xuICBiZWZvcmVDbG9zZU1lbnUob3B0aW9uczogYW55KSB7XG4gICAgaWYgKHRoaXMucnRmU2VydmljZSAmJiB0aGlzLnJ0ZlNlcnZpY2UuaGFzT3duUHJvcGVydHkoJ2Z1bmMnKSAmJiB0eXBlb2YgdGhpcy5ydGZTZXJ2aWNlWydmdW5jJ11bJ2JlZm9yZUNsb3NlJ10gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHRoaXMucnRmU2VydmljZS5mdW5jLmJlZm9yZUNsb3NlKG9wdGlvbnMpO1xuICAgIH1cbiAgfVxuICAvKipcbiAgICog5YWz6Zet6I+c5Y2VXG4gICAqIEBwYXJhbSBvcHRpb25zIG9wdGlvbnNcbiAgICovXG4gIGNsb3NlTWVudShvcHRpb25zOiBhbnkpIHtcbiAgICBpZiAodGhpcy5ydGZTZXJ2aWNlICYmIHRoaXMucnRmU2VydmljZS5oYXNPd25Qcm9wZXJ0eSgnZnVuYycpICYmIHR5cGVvZiB0aGlzLnJ0ZlNlcnZpY2VbJ2Z1bmMnXVsnY2xvc2UnXSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgdGhpcy5ydGZTZXJ2aWNlLmZ1bmMuY2xvc2Uob3B0aW9ucyk7XG4gICAgfVxuICB9XG4gIC8qKlxuICAgKiDojrflj5boj5zljZXpnZnmgIHlj4LmlbBcbiAgICogQHBhcmFtIGZ1bmNJZCDoj5zljZVpZFxuICAgKiBAcGFyYW0gY2FsbGJhY2sg5Zue6LCDXG4gICAqL1xuICBnZXRNZW51UGFyYW1zKGZ1bmNJZDogc3RyaW5nLCBjYWxsYmFjazogKHBhcmFtcykgPT4gdm9pZCkge1xuICAgIGlmICh0aGlzLnJ0ZlNlcnZpY2UgJiYgdGhpcy5ydGZTZXJ2aWNlLmhhc093blByb3BlcnR5KCdmdW5jJykgJiYgdHlwZW9mIHRoaXMucnRmU2VydmljZVsnZnVuYyddWydnZXRNZW51UGFyYW1zJ10gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHRoaXMucnRmU2VydmljZS5mdW5jLmdldE1lbnVQYXJhbXMoZnVuY0lkLCBjYWxsYmFjayk7XG4gICAgfVxuICB9XG4gIC8qKlxuICAgKiDmt7vliqDkuovku7bnm5HlkKxcbiAgICovXG4gIGFkZEV2ZW50TGlzdGVuZXIodG9rZW46IHN0cmluZywgaGFuZGxlcjogKHZhbHVlOiBhbnkpID0+IHZvaWQsIG9wdGlvbnM6IGFueSkge1xuICAgIGlmICh0aGlzLnJ0ZlNlcnZpY2UgJiYgdGhpcy5ydGZTZXJ2aWNlLmhhc093blByb3BlcnR5KCdmcm1FdmVudCcpICYmIHR5cGVvZiB0aGlzLnJ0ZlNlcnZpY2VbJ2ZybUV2ZW50J11bJ2V2ZW50TGlzdGVuZXInXSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgdGhpcy5ydGZTZXJ2aWNlLmZybUV2ZW50LmV2ZW50TGlzdGVuZXIodG9rZW4sIGhhbmRsZXIsIG9wdGlvbnMpO1xuICAgIH1cbiAgfVxuICAvKipcbiAgICog6I635Y+W6L+Q6KGM5qGG5p626I+c5Y2V5YiH5o2i5o6n5Yi25LqL5Lu2XG4gICAqIEByZXR1cm5zIE9ic2VydmFibGU8YW55PlxuICAgKi9cbiAgcHVibGljIGdldE1lbnVTd2l0Y2hDb250cm9sRXZlbnQoKTogT2JzZXJ2YWJsZTxhbnk+IHtcbiAgICBjb25zdCBzdWJqZWN0ID0gbmV3IFN1YmplY3Q8YW55PigpO1xuICAgIGNvbnN0IGZybUV2ZW50ID0gdGhpcy5ydGZTZXJ2aWNlICYmIHRoaXMucnRmU2VydmljZS5mcm1FdmVudCB8fCBudWxsO1xuICAgIGlmIChmcm1FdmVudCkge1xuICAgICAgY29uc3QgdGFiSWQgPSB0aGlzLnRhYklkO1xuICAgICAgY29uc3Qgb3B0aW9ucyA9IHRoaXMucGFyYW1zO1xuICAgICAgd2luZG93LnNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICBmcm1FdmVudC5ldmVudExpc3RlbmVyKHRhYklkLCAocmVzcG9uc2U6IHsgbWVudVN3aXRjaENvbnRyb2w6IHsga2V5OiBhbnksIHZhbHVlOiBhbnkgfSwgW3Byb3A6IHN0cmluZ106IGFueSB9KSA9PiB7XG4gICAgICAgICAgY29uc3QgbWVudVN3aXRjaENvbnRyb2wgPSByZXNwb25zZSAmJiByZXNwb25zZS5tZW51U3dpdGNoQ29udHJvbCB8fCBudWxsO1xuICAgICAgICAgIGlmIChtZW51U3dpdGNoQ29udHJvbCAmJiBtZW51U3dpdGNoQ29udHJvbC5rZXkgPT09IHRhYklkKSB7XG4gICAgICAgICAgICBzdWJqZWN0Lm5leHQobWVudVN3aXRjaENvbnRyb2wudmFsdWUpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBzdWJqZWN0Lm5leHQobnVsbCk7XG4gICAgICAgICAgfVxuICAgICAgICB9LCBvcHRpb25zKTtcbiAgICAgIH0sIDApO1xuICAgIH1cbiAgICByZXR1cm4gc3ViamVjdDtcbiAgfVxuICAvLyNlbmRyZWdpb25cblxuICAvLyAjcmVnaW9uIOmAgumFjeWxguWxnuaAp1xuICBwdWJsaWMgZ2V0IHBhcmFtcygpIHtcbiAgICBpZiAodGhpcy5ydGZTZXJ2aWNlICYmIHRoaXMucnRmU2VydmljZS5oYXNPd25Qcm9wZXJ0eSgnc2Vzc2lvbicpICYmIHR5cGVvZiB0aGlzLnJ0ZlNlcnZpY2VbJ3Nlc3Npb24nXVsnZ2V0Q29tbW9uVmFyaWFibGUnXSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgcmV0dXJuIHRoaXMucnRmU2VydmljZVsnc2Vzc2lvbiddWydnZXRDb21tb25WYXJpYWJsZSddKCk7XG4gICAgfVxuICAgIHJldHVybiBudWxsO1xuICB9XG4gIC8qKlxuICAgKiDojrflj5Z0YWJJZFxuICAgKi9cbiAgcHVibGljIGdldCB0YWJJZCgpIHtcbiAgICByZXR1cm4gdGhpcy5wYXJhbXMgJiYgdGhpcy5wYXJhbXNbJ3RhYklkJ10gfHwgbnVsbDtcbiAgfVxuICAvKipcbiAgICog6I635Y+WZm9ybVRva2VuXG4gICAqL1xuICBwdWJsaWMgZ2V0IGZvcm1Ub2tlbigpIHtcbiAgICByZXR1cm4gdGhpcy5wYXJhbXMgJiYgdGhpcy5wYXJhbXNbJ2Zvcm1Ub2tlbiddIHx8IG51bGw7XG4gIH1cbiAgLyoqXG4gICAqIOiOt+WPlmZ1bmNJZFxuICAgKi9cbiAgcHVibGljIGdldCBmdW5jSWQoKSB7XG4gICAgcmV0dXJuIHRoaXMucGFyYW1zICYmIHRoaXMucGFyYW1zWydmdW5jSWQnXSB8fCBudWxsO1xuICB9XG4gIC8vICNlbmRyZWdpb25cblxuICAvLyAjcmVnaW9uIOS6i+S7tumAmuS/oVxuICAvKipcbiAgICog5rOo5YaM5Li76aKYXG4gICAqIEBwYXJhbSBjb2RlIOS4u+mimOeahOagh+ivhlxuICAgKiBAcGFyYW0gb3B0aW9ucyB0b2tlbueUn+aIkOinhOWImVxuICAgKiBAcGFyYW0gc3ViamVjdCDoh6rlrprkuYnkuLvpopjvvIzpu5jorqTkvb/nlKhTdWJqZWN0XG4gICAqIEByZXR1cm5zIHN0cmluZyDms6jlhozmiJDlip/lkI7ov5Tlm57kuLvpopjnmoTllK/kuIDmoIfor4ZcbiAgICovXG4gIHB1YmxpYyBzdWJqZWN0UmVnaXN0ZXIoY29kZTogc3RyaW5nLCBvcHRpb25zOiBhbnksIHN1YmplY3Q/OiBTdWJqZWN0PGFueT4pOiBzdHJpbmcge1xuICAgIGlmICh0aGlzLnJ0ZlNlcnZpY2UgJiYgdGhpcy5ydGZTZXJ2aWNlLmhhc093blByb3BlcnR5KCdicm9hZGNhc3QnKSAmJiB0eXBlb2YgdGhpcy5ydGZTZXJ2aWNlWydicm9hZGNhc3QnXVsnc3ViamVjdFJlZ2lzdGVyJ10gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHJldHVybiB0aGlzLnJ0ZlNlcnZpY2UuYnJvYWRjYXN0LnN1YmplY3RSZWdpc3Rlcihjb2RlLCBvcHRpb25zLCBzdWJqZWN0KTtcbiAgICB9XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgLyoqXG4gICAqIOenu+mZpOS4u+mimFxuICAgKiBAcGFyYW0gdG9rZW4g5Li76aKY5ZSv5LiA5qCH6K+GXG4gICAqL1xuICBwdWJsaWMgc3ViamVjdFJlbW92ZSh0b2tlbjogc3RyaW5nKSB7XG4gICAgaWYgKHRoaXMucnRmU2VydmljZSAmJiB0aGlzLnJ0ZlNlcnZpY2UuaGFzT3duUHJvcGVydHkoJ2Jyb2FkY2FzdCcpICYmIHR5cGVvZiB0aGlzLnJ0ZlNlcnZpY2VbJ2Jyb2FkY2FzdCddWydzdWJqZWN0UmVtb3ZlJ10gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHRoaXMucnRmU2VydmljZS5icm9hZGNhc3Quc3ViamVjdFJlbW92ZSh0b2tlbik7XG4gICAgfVxuICB9XG4gIC8qKlxuICAgKiDnu5nkuLvpopjlj5HpgIHmtojmga9cbiAgICogQHBhcmFtIHRva2VuIOS4u+mimOagh+ivhlxuICAgKiBAcGFyYW0gaW5mbyDmtojmga9cbiAgICovXG4gIHB1YmxpYyBzdWJqZWN0Tm90aWZ5KHRva2VuOiBzdHJpbmcsIGluZm86IGFueSkge1xuICAgIGlmICh0aGlzLnJ0ZlNlcnZpY2UgJiYgdGhpcy5ydGZTZXJ2aWNlLmhhc093blByb3BlcnR5KCdicm9hZGNhc3QnKSAmJiB0eXBlb2YgdGhpcy5ydGZTZXJ2aWNlWydicm9hZGNhc3QnXVsnbm90aWZ5J10gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHRoaXMucnRmU2VydmljZS5icm9hZGNhc3Qubm90aWZ5KHRva2VuLCBpbmZvKTtcbiAgICB9XG4gIH1cbiAgLyoqXG4gICAqIOazqOWGjOS4u+mimOebkeWQrOWZqFxuICAgKiBAcGFyYW0gdG9rZW4g5Li76aKY5qCH6K+GXG4gICAqIEBwYXJhbSBoYW5kbGVyIOS4u+mimOWkhOeQhuWZqFxuICAgKiBAcGFyYW0gb2JzZXJ2ZXJUb2tlbiDnm5HlkKzlmahpZCjlj6/pgIkpXG4gICAqIEByZXR1cm5zIOebkeWQrOWZqElkXG4gICAqIEBkZXNjcmlwdGlvbiDnm5HlkKzkuLvpopjmtojmga/vvIznm5HlkKzmiJDlip/ov5Tlm57lvZPliY3nm5HlkKzogIXnmoTllK/kuIDmoIfor4ZcbiAgICovXG4gIHB1YmxpYyBzdWJqZWN0UmVzcG9uc2UodG9rZW46IHN0cmluZywgaGFuZGxlcjogKGRhdGE6IGFueSkgPT4gdm9pZCwgb2JzZXJ2ZXJUb2tlbj86IHN0cmluZyk6IHN0cmluZyB7XG4gICAgaWYgKHRoaXMucnRmU2VydmljZSAmJiB0aGlzLnJ0ZlNlcnZpY2UuaGFzT3duUHJvcGVydHkoJ2Jyb2FkY2FzdCcpICYmIHR5cGVvZiB0aGlzLnJ0ZlNlcnZpY2VbJ2Jyb2FkY2FzdCddWydyZXNwb25zZSddID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBsZXQgY29kZSA9IG9ic2VydmVyVG9rZW47XG4gICAgICBpZiAodHlwZW9mIG9ic2VydmVyVG9rZW4gPT09ICd1bmRlZmluZWQnIHx8ICFvYnNlcnZlclRva2VuIHx8IG9ic2VydmVyVG9rZW4ubGVuZ3RoIDwgMSkge1xuICAgICAgICBjb2RlID0gVUlELmNyZWF0ZSgpO1xuICAgICAgfVxuICAgICAgdGhpcy5ydGZTZXJ2aWNlLmJyb2FkY2FzdC5yZXNwb25zZSh0b2tlbiwgY29kZSwgaGFuZGxlcik7XG4gICAgICByZXR1cm4gY29kZTtcbiAgICB9XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgLyoqXG4gICAqIOWPlua2iOWvueS4u+mimOeahOebkeWQrFxuICAgKiBAcGFyYW0gdG9rZW4g5Li76aKY5qCH6K+GXG4gICAqIEBwYXJhbSBvYnNlcnZlclRva2VuIOebkeWQrOWZqOagh+ivhlxuICAgKi9cbiAgcHVibGljIHJlc3BvbnNlVW5TdWJzY3JpYmUodG9rZW46IHN0cmluZywgb2JzZXJ2ZXJUb2tlbjogc3RyaW5nKSB7XG4gICAgaWYgKHRoaXMucnRmU2VydmljZSAmJiB0aGlzLnJ0ZlNlcnZpY2UuaGFzT3duUHJvcGVydHkoJ2Jyb2FkY2FzdCcpICYmIHR5cGVvZiB0aGlzLnJ0ZlNlcnZpY2VbJ2Jyb2FkY2FzdCddWydyZXNwb25zZVVuU3Vic2NyaWJlJ10gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHRoaXMucnRmU2VydmljZS5icm9hZGNhc3QucmVzcG9uc2VVblN1YnNjcmliZSh0b2tlbiwgb2JzZXJ2ZXJUb2tlbik7XG4gICAgfVxuICB9XG4gIC8vICNlbmRyZWdpb25cblxuICAvLyAjcmVnaW9uIOW3peWFt+WHveaVsFxuICAvKipcbiAgICog5piv5ZCm5ZCM5rqQXG4gICAqIEBwYXJhbSBlbnZpcm9ubWVudCB3aW5kb3dcbiAgICovXG4gIHByaXZhdGUgaXNTYW1lT3JpZ2luKGVudmlyb25tZW50OiBXaW5kb3cpIHtcbiAgICBjb25zdCBob3N0ID0gd2luZG93LmxvY2F0aW9uLmhvc3Q7XG4gICAgdHJ5IHtcbiAgICAgIGlmIChlbnZpcm9ubWVudCAmJiBlbnZpcm9ubWVudC5sb2NhdGlvbiAmJiB0eXBlb2YgZW52aXJvbm1lbnQubG9jYXRpb24uaG9zdCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgcmV0dXJuIGVudmlyb25tZW50LmxvY2F0aW9uLmhvc3QgPT09IGhvc3Q7XG4gICAgICB9XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICAvLyAjZW5kcmVnaW9uXG59XG4iXX0=