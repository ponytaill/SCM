/*
 * @Author: Witt
 * @Date: 2018-12-27 09:26:41
 * @Last Modified by: Witt
 * @Last Modified time: 2019-01-15 22:00:45
 */
import { DataPathNode } from './data_path_node';
/**
 * 变更路径（简单双向列表）
 */
var DataPath = /** @class */ (function () {
    /**
     * 构造函数
     */
    function DataPath() {
        this.head = new DataPathNode(null, null);
        this.length = 0;
    }
    /**
     * 添加一个节点到头部
     */
    DataPath.prototype.unshift = function (type, data) {
        var newNode = new DataPathNode(type, data);
        newNode.next = this.head.next;
        newNode.prev = this.head;
        this.head.next = newNode;
        if (newNode.next) {
            newNode.next.prev = newNode;
        }
        this.length++;
    };
    /**
     * 在链表最后追加一个节点
     */
    DataPath.prototype.push = function (type, data) {
        var tailNode = this.getTail();
        var newNode = new DataPathNode(type, data);
        tailNode.next = newNode;
        this.length++;
    };
    /**
     * 获取链表尾部节点
     */
    DataPath.prototype.getTail = function () {
        var lastNode = this.head;
        while (lastNode.next) {
            lastNode = lastNode.next;
        }
        return lastNode;
    };
    /**
     * 转换为数组格式
     */
    DataPath.prototype.toArray = function () {
        var pathArray = [];
        var currentNode = this.head.next;
        while (currentNode) {
            pathArray.push(currentNode.type + ":" + currentNode.value);
            currentNode = currentNode.next;
        }
        return pathArray;
    };
    /**
     * 转换为字符串格式
     */
    DataPath.prototype.toString = function () {
        var pathArray = this.toArray();
        var pathString = pathArray.join(', ');
        return "[" + pathString + "]";
    };
    /**
     * 拷贝
     */
    DataPath.prototype.clone = function () {
        var newDataPath = new DataPath();
        var curDataNode = this.head.next;
        while (curDataNode) {
            newDataPath.push(curDataNode.type, curDataNode.value);
            curDataNode = curDataNode.next;
        }
        return newDataPath;
    };
    return DataPath;
}());
export { DataPath };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YV9wYXRoLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy9tb2JpbGUtZGV2a2l0LyIsInNvdXJjZXMiOlsibGliL2VudGl0eS9lbnRpdHktcGF0aC9kYXRhX3BhdGgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7O0dBS0c7QUFFSCxPQUFPLEVBQUUsWUFBWSxFQUFvQixNQUFNLGtCQUFrQixDQUFDO0FBQ2xFOztHQUVHO0FBQ0g7SUFZRTs7T0FFRztJQUNIO1FBQ0UsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLFlBQVksQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDekMsSUFBSSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7SUFDbEIsQ0FBQztJQUVEOztPQUVHO0lBQ0ksMEJBQU8sR0FBZCxVQUFlLElBQXNCLEVBQUUsSUFBUztRQUM5QyxJQUFNLE9BQU8sR0FBRyxJQUFJLFlBQVksQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDN0MsT0FBTyxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQztRQUM5QixPQUFPLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUM7UUFFekIsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLEdBQUcsT0FBTyxDQUFDO1FBQ3pCLElBQUksT0FBTyxDQUFDLElBQUksRUFBRTtZQUNoQixPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksR0FBRyxPQUFPLENBQUM7U0FDN0I7UUFFRCxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7SUFDaEIsQ0FBQztJQUVEOztPQUVHO0lBQ0ksdUJBQUksR0FBWCxVQUFZLElBQXNCLEVBQUUsSUFBUztRQUMzQyxJQUFNLFFBQVEsR0FBRyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDaEMsSUFBTSxPQUFPLEdBQUcsSUFBSSxZQUFZLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQzdDLFFBQVEsQ0FBQyxJQUFJLEdBQUcsT0FBTyxDQUFDO1FBQ3hCLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztJQUNoQixDQUFDO0lBRUQ7O09BRUc7SUFDSSwwQkFBTyxHQUFkO1FBQ0UsSUFBSSxRQUFRLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQztRQUN6QixPQUFPLFFBQVEsQ0FBQyxJQUFJLEVBQUU7WUFDcEIsUUFBUSxHQUFHLFFBQVEsQ0FBQyxJQUFJLENBQUM7U0FDMUI7UUFDRCxPQUFPLFFBQVEsQ0FBQztJQUNsQixDQUFDO0lBRUQ7O09BRUc7SUFDSSwwQkFBTyxHQUFkO1FBQ0UsSUFBTSxTQUFTLEdBQUcsRUFBRSxDQUFDO1FBQ3JCLElBQUksV0FBVyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDO1FBQ2pDLE9BQU8sV0FBVyxFQUFFO1lBQ2xCLFNBQVMsQ0FBQyxJQUFJLENBQUksV0FBVyxDQUFDLElBQUksU0FBSSxXQUFXLENBQUMsS0FBTyxDQUFDLENBQUU7WUFDNUQsV0FBVyxHQUFHLFdBQVcsQ0FBQyxJQUFJLENBQUM7U0FDaEM7UUFDRCxPQUFPLFNBQVMsQ0FBQztJQUNuQixDQUFDO0lBRUQ7O09BRUc7SUFDSSwyQkFBUSxHQUFmO1FBQ0UsSUFBTSxTQUFTLEdBQUcsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQ2pDLElBQU0sVUFBVSxHQUFHLFNBQVMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDeEMsT0FBTyxNQUFJLFVBQVUsTUFBRyxDQUFDO0lBQzNCLENBQUM7SUFFRDs7T0FFRztJQUNJLHdCQUFLLEdBQVo7UUFDRSxJQUFNLFdBQVcsR0FBRyxJQUFJLFFBQVEsRUFBRSxDQUFDO1FBQ25DLElBQUksV0FBVyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDO1FBQ2pDLE9BQU8sV0FBVyxFQUFFO1lBQ2xCLFdBQVcsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksRUFBRSxXQUFXLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDdEQsV0FBVyxHQUFHLFdBQVcsQ0FBQyxJQUFJLENBQUM7U0FDaEM7UUFDRCxPQUFPLFdBQVcsQ0FBQztJQUNyQixDQUFDO0lBQ0gsZUFBQztBQUFELENBQUMsQUEzRkQsSUEyRkM7QUFFRCxPQUFPLEVBQUUsUUFBUSxFQUFFLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxyXG4gKiBAQXV0aG9yOiBXaXR0XHJcbiAqIEBEYXRlOiAyMDE4LTEyLTI3IDA5OjI2OjQxXHJcbiAqIEBMYXN0IE1vZGlmaWVkIGJ5OiBXaXR0XHJcbiAqIEBMYXN0IE1vZGlmaWVkIHRpbWU6IDIwMTktMDEtMTUgMjI6MDA6NDVcclxuICovXHJcblxyXG5pbXBvcnQgeyBEYXRhUGF0aE5vZGUsIERhdGFQYXRoTm9kZVR5cGUgfSBmcm9tICcuL2RhdGFfcGF0aF9ub2RlJztcclxuLyoqXHJcbiAqIOWPmOabtOi3r+W+hO+8iOeugOWNleWPjOWQkeWIl+ihqO+8iVxyXG4gKi9cclxuY2xhc3MgRGF0YVBhdGgge1xyXG5cclxuICAvKipcclxuICAgKiDlpLToioLngrlcclxuICAgKi9cclxuICBwdWJsaWMgaGVhZDogRGF0YVBhdGhOb2RlO1xyXG5cclxuICAvKipcclxuICAgKiDplb/luqZcclxuICAgKi9cclxuICBwdWJsaWMgbGVuZ3RoOiBudW1iZXI7XHJcblxyXG4gIC8qKlxyXG4gICAqIOaehOmAoOWHveaVsFxyXG4gICAqL1xyXG4gIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgdGhpcy5oZWFkID0gbmV3IERhdGFQYXRoTm9kZShudWxsLCBudWxsKTtcclxuICAgIHRoaXMubGVuZ3RoID0gMDtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOa3u+WKoOS4gOS4quiKgueCueWIsOWktOmDqFxyXG4gICAqL1xyXG4gIHB1YmxpYyB1bnNoaWZ0KHR5cGU6IERhdGFQYXRoTm9kZVR5cGUsIGRhdGE6IGFueSkge1xyXG4gICAgY29uc3QgbmV3Tm9kZSA9IG5ldyBEYXRhUGF0aE5vZGUodHlwZSwgZGF0YSk7XHJcbiAgICBuZXdOb2RlLm5leHQgPSB0aGlzLmhlYWQubmV4dDtcclxuICAgIG5ld05vZGUucHJldiA9IHRoaXMuaGVhZDtcclxuXHJcbiAgICB0aGlzLmhlYWQubmV4dCA9IG5ld05vZGU7XHJcbiAgICBpZiAobmV3Tm9kZS5uZXh0KSB7XHJcbiAgICAgIG5ld05vZGUubmV4dC5wcmV2ID0gbmV3Tm9kZTtcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLmxlbmd0aCsrO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog5Zyo6ZO+6KGo5pyA5ZCO6L+95Yqg5LiA5Liq6IqC54K5XHJcbiAgICovXHJcbiAgcHVibGljIHB1c2godHlwZTogRGF0YVBhdGhOb2RlVHlwZSwgZGF0YTogYW55KSB7XHJcbiAgICBjb25zdCB0YWlsTm9kZSA9IHRoaXMuZ2V0VGFpbCgpO1xyXG4gICAgY29uc3QgbmV3Tm9kZSA9IG5ldyBEYXRhUGF0aE5vZGUodHlwZSwgZGF0YSk7XHJcbiAgICB0YWlsTm9kZS5uZXh0ID0gbmV3Tm9kZTtcclxuICAgIHRoaXMubGVuZ3RoKys7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDojrflj5bpk77ooajlsL7pg6joioLngrlcclxuICAgKi9cclxuICBwdWJsaWMgZ2V0VGFpbCgpOiBEYXRhUGF0aE5vZGUge1xyXG4gICAgbGV0IGxhc3ROb2RlID0gdGhpcy5oZWFkO1xyXG4gICAgd2hpbGUgKGxhc3ROb2RlLm5leHQpIHtcclxuICAgICAgbGFzdE5vZGUgPSBsYXN0Tm9kZS5uZXh0O1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGxhc3ROb2RlO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog6L2s5o2i5Li65pWw57uE5qC85byPXHJcbiAgICovXHJcbiAgcHVibGljIHRvQXJyYXkoKSB7XHJcbiAgICBjb25zdCBwYXRoQXJyYXkgPSBbXTtcclxuICAgIGxldCBjdXJyZW50Tm9kZSA9IHRoaXMuaGVhZC5uZXh0O1xyXG4gICAgd2hpbGUgKGN1cnJlbnROb2RlKSB7XHJcbiAgICAgIHBhdGhBcnJheS5wdXNoKGAke2N1cnJlbnROb2RlLnR5cGV9OiR7Y3VycmVudE5vZGUudmFsdWV9YCkgO1xyXG4gICAgICBjdXJyZW50Tm9kZSA9IGN1cnJlbnROb2RlLm5leHQ7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gcGF0aEFycmF5O1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog6L2s5o2i5Li65a2X56ym5Liy5qC85byPXHJcbiAgICovXHJcbiAgcHVibGljIHRvU3RyaW5nKCkge1xyXG4gICAgY29uc3QgcGF0aEFycmF5ID0gdGhpcy50b0FycmF5KCk7XHJcbiAgICBjb25zdCBwYXRoU3RyaW5nID0gcGF0aEFycmF5LmpvaW4oJywgJyk7XHJcbiAgICByZXR1cm4gYFske3BhdGhTdHJpbmd9XWA7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDmi7fotJ1cclxuICAgKi9cclxuICBwdWJsaWMgY2xvbmUoKTogRGF0YVBhdGgge1xyXG4gICAgY29uc3QgbmV3RGF0YVBhdGggPSBuZXcgRGF0YVBhdGgoKTtcclxuICAgIGxldCBjdXJEYXRhTm9kZSA9IHRoaXMuaGVhZC5uZXh0O1xyXG4gICAgd2hpbGUgKGN1ckRhdGFOb2RlKSB7XHJcbiAgICAgIG5ld0RhdGFQYXRoLnB1c2goY3VyRGF0YU5vZGUudHlwZSwgY3VyRGF0YU5vZGUudmFsdWUpO1xyXG4gICAgICBjdXJEYXRhTm9kZSA9IGN1ckRhdGFOb2RlLm5leHQ7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gbmV3RGF0YVBhdGg7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgeyBEYXRhUGF0aCB9O1xyXG4iXX0=