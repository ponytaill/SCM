/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { NgbDropdownModule } from './dropdown/dropdown.module';
import { NgbTooltipModule } from './tooltip/tooltip.module';
import { LocaleModule } from '@farris/ui-locale';
import { FarrisTabsComponent } from './tabs/tabs.component';
import { TabConfig, TabService } from './tabs.config';
import { FarrisTabComponent } from './tab/tab.component';
import { TabTranscludeDirective } from './tab/tab.transclude.directive';
import { TabHeadDirective } from './tab/tab.headtemplate.directive';
import { TabHostDirective } from './tab/tabhost.directive';
import { FarrisTabsExtendDirective } from './tab/extend.directive';
var FarrisTabsModule = /** @class */ (function () {
    function FarrisTabsModule() {
    }
    /**
     * @param {?=} config
     * @return {?}
     */
    FarrisTabsModule.forRoot = /**
     * @param {?=} config
     * @return {?}
     */
    function (config) {
        return {
            ngModule: FarrisTabsModule,
            providers: [{ provide: TabConfig, useValue: config }]
        };
    };
    FarrisTabsModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        CommonModule,
                        LocaleModule,
                        FormsModule,
                        NgbDropdownModule.forRoot(),
                        NgbTooltipModule.forRoot()
                    ],
                    declarations: [FarrisTabsComponent, FarrisTabComponent,
                        TabTranscludeDirective, TabHeadDirective, FarrisTabsExtendDirective, TabHostDirective],
                    exports: [
                        FarrisTabsComponent,
                        FarrisTabComponent,
                        TabTranscludeDirective,
                        TabHeadDirective,
                        TabHostDirective,
                        FarrisTabsExtendDirective,
                        NgbDropdownModule,
                        NgbTooltipModule
                    ],
                    providers: [TabService]
                },] }
    ];
    return FarrisTabsModule;
}());
export { FarrisTabsModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFicy5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL3VpLXRhYnMvIiwic291cmNlcyI6WyJsaWIvdGFicy5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQXVCLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDN0MsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDL0QsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDNUQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ2pELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQzVELE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3RELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3pELE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQ3hFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBQ3BFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQzNELE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBRW5FO0lBQUE7SUE2QkEsQ0FBQzs7Ozs7SUFOVSx3QkFBTzs7OztJQUFkLFVBQWUsTUFBa0I7UUFDN0IsT0FBTztZQUNILFFBQVEsRUFBRSxnQkFBZ0I7WUFDMUIsU0FBUyxFQUFFLENBQUMsRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBRSxNQUFNLEVBQUUsQ0FBQztTQUN4RCxDQUFDO0lBQ04sQ0FBQzs7Z0JBNUJKLFFBQVEsU0FBQztvQkFDTixPQUFPLEVBQUU7d0JBQ0wsWUFBWTt3QkFDWixZQUFZO3dCQUNaLFdBQVc7d0JBQ1gsaUJBQWlCLENBQUMsT0FBTyxFQUFFO3dCQUMzQixnQkFBZ0IsQ0FBQyxPQUFPLEVBQUU7cUJBQzdCO29CQUNELFlBQVksRUFBRSxDQUFDLG1CQUFtQixFQUFFLGtCQUFrQjt3QkFDbEQsc0JBQXNCLEVBQUUsZ0JBQWdCLEVBQUUseUJBQXlCLEVBQUUsZ0JBQWdCLENBQUM7b0JBQzFGLE9BQU8sRUFBRTt3QkFDTCxtQkFBbUI7d0JBQ25CLGtCQUFrQjt3QkFDbEIsc0JBQXNCO3dCQUN0QixnQkFBZ0I7d0JBQ2hCLGdCQUFnQjt3QkFDaEIseUJBQXlCO3dCQUN6QixpQkFBaUI7d0JBQ2pCLGdCQUFnQjtxQkFDbkI7b0JBQ0QsU0FBUyxFQUFFLENBQUMsVUFBVSxDQUFDO2lCQUMxQjs7SUFRRCx1QkFBQztDQUFBLEFBN0JELElBNkJDO1NBUFksZ0JBQWdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUsIE1vZHVsZVdpdGhQcm92aWRlcnMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcclxuaW1wb3J0IHsgRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XHJcbmltcG9ydCB7IE5nYkRyb3Bkb3duTW9kdWxlIH0gZnJvbSAnLi9kcm9wZG93bi9kcm9wZG93bi5tb2R1bGUnO1xyXG5pbXBvcnQgeyBOZ2JUb29sdGlwTW9kdWxlIH0gZnJvbSAnLi90b29sdGlwL3Rvb2x0aXAubW9kdWxlJztcclxuaW1wb3J0IHsgTG9jYWxlTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1sb2NhbGUnO1xyXG5pbXBvcnQgeyBGYXJyaXNUYWJzQ29tcG9uZW50IH0gZnJvbSAnLi90YWJzL3RhYnMuY29tcG9uZW50JztcclxuaW1wb3J0IHsgVGFiQ29uZmlnLCBUYWJTZXJ2aWNlIH0gZnJvbSAnLi90YWJzLmNvbmZpZyc7XHJcbmltcG9ydCB7IEZhcnJpc1RhYkNvbXBvbmVudCB9IGZyb20gJy4vdGFiL3RhYi5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBUYWJUcmFuc2NsdWRlRGlyZWN0aXZlIH0gZnJvbSAnLi90YWIvdGFiLnRyYW5zY2x1ZGUuZGlyZWN0aXZlJztcclxuaW1wb3J0IHsgVGFiSGVhZERpcmVjdGl2ZSB9IGZyb20gJy4vdGFiL3RhYi5oZWFkdGVtcGxhdGUuZGlyZWN0aXZlJztcclxuaW1wb3J0IHsgVGFiSG9zdERpcmVjdGl2ZSB9IGZyb20gJy4vdGFiL3RhYmhvc3QuZGlyZWN0aXZlJztcclxuaW1wb3J0IHsgRmFycmlzVGFic0V4dGVuZERpcmVjdGl2ZSB9IGZyb20gJy4vdGFiL2V4dGVuZC5kaXJlY3RpdmUnO1xyXG5cclxuQE5nTW9kdWxlKHtcclxuICAgIGltcG9ydHM6IFtcclxuICAgICAgICBDb21tb25Nb2R1bGUsXHJcbiAgICAgICAgTG9jYWxlTW9kdWxlLFxyXG4gICAgICAgIEZvcm1zTW9kdWxlLFxyXG4gICAgICAgIE5nYkRyb3Bkb3duTW9kdWxlLmZvclJvb3QoKSxcclxuICAgICAgICBOZ2JUb29sdGlwTW9kdWxlLmZvclJvb3QoKVxyXG4gICAgXSxcclxuICAgIGRlY2xhcmF0aW9uczogW0ZhcnJpc1RhYnNDb21wb25lbnQsIEZhcnJpc1RhYkNvbXBvbmVudCxcclxuICAgICAgICBUYWJUcmFuc2NsdWRlRGlyZWN0aXZlLCBUYWJIZWFkRGlyZWN0aXZlLCBGYXJyaXNUYWJzRXh0ZW5kRGlyZWN0aXZlLCBUYWJIb3N0RGlyZWN0aXZlXSxcclxuICAgIGV4cG9ydHM6IFtcclxuICAgICAgICBGYXJyaXNUYWJzQ29tcG9uZW50LFxyXG4gICAgICAgIEZhcnJpc1RhYkNvbXBvbmVudCxcclxuICAgICAgICBUYWJUcmFuc2NsdWRlRGlyZWN0aXZlLFxyXG4gICAgICAgIFRhYkhlYWREaXJlY3RpdmUsXHJcbiAgICAgICAgVGFiSG9zdERpcmVjdGl2ZSxcclxuICAgICAgICBGYXJyaXNUYWJzRXh0ZW5kRGlyZWN0aXZlLFxyXG4gICAgICAgIE5nYkRyb3Bkb3duTW9kdWxlLFxyXG4gICAgICAgIE5nYlRvb2x0aXBNb2R1bGVcclxuICAgIF0sXHJcbiAgICBwcm92aWRlcnM6IFtUYWJTZXJ2aWNlXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgRmFycmlzVGFic01vZHVsZSB7XHJcbiAgICBzdGF0aWMgZm9yUm9vdChjb25maWc/OiBUYWJDb25maWcpOiBNb2R1bGVXaXRoUHJvdmlkZXJzIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBuZ01vZHVsZTogRmFycmlzVGFic01vZHVsZSxcclxuICAgICAgICAgICAgcHJvdmlkZXJzOiBbeyBwcm92aWRlOiBUYWJDb25maWcsIHVzZVZhbHVlOiBjb25maWcgfV1cclxuICAgICAgICB9O1xyXG4gICAgfVxyXG59XHJcbiJdfQ==