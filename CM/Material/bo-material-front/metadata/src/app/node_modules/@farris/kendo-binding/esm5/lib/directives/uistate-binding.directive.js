import { Directive, Input, HostListener, Self, Host, Optional, Output, EventEmitter, KeyValueDiffers } from '@angular/core';
import { ComboBoxComponent } from '@progress/kendo-angular-dropdowns';
import { LookupGridComponent } from '@farris/ui-lookup';
import { ComboListComponent } from '@farris/ui-combo-list';
import { ComboLookupComponent } from '@farris/ui-combo-lookup';
var UIStateBindingDirective = /** @class */ (function () {
    function UIStateBindingDirective(hostComboComponent, hostHelpComponent, differs, hostComboListComponent, hostComboLookupComponent) {
        this.hostComboComponent = hostComboComponent;
        this.hostHelpComponent = hostHelpComponent;
        this.differs = differs;
        this.hostComboListComponent = hostComboListComponent;
        this.hostComboLookupComponent = hostComboLookupComponent;
        this.differ = null;
        this.UIStateBindingChange = new EventEmitter();
    }
    Object.defineProperty(UIStateBindingDirective.prototype, "bindingObject", {
        get: function () {
            return this._bindingObject;
        },
        set: function (value) {
            this._bindingObject = value;
            if (!this.differ && value && this.differs && typeof (value) === 'object') {
                this.differ = this.differs.find(value).create();
            }
        },
        enumerable: true,
        configurable: true
    });
    UIStateBindingDirective.prototype.onValueChange = function (val) {
        // host is combobox
        if (this.hostComboComponent && this.bindingObject) {
            if (val) {
                this.bindingObject.key = val.value;
                this.bindingObject.value = val.name;
            }
            else {
                this.bindingObject.key = null;
                this.bindingObject.value = null;
            }
        }
    };
    UIStateBindingDirective.prototype.ngOnInit = function () {
        if (this.hostComboComponent) {
            this.hostComboComponent.valuePrimitive = false;
        }
        else if (this.hostHelpComponent) {
            this.bindObjectToHostLookup();
        }
        else if (this.hostComboListComponent) {
            this.bindObjectToHostComboList();
        }
        else if (this.hostComboLookupComponent) {
            this.bindObjectToHostComboLookup();
        }
    };
    UIStateBindingDirective.prototype.ngDoCheck = function () {
        if (this.differ && typeof (this.bindingObject) === 'object') {
            var changes = this.differ && this.differ.diff(this.bindingObject);
            if (changes) {
                this.bindingChanges();
            }
        }
        else { // 兼容未重新编译工程，differ不存在从情况
            this.bindingChanges();
        }
    };
    UIStateBindingDirective.prototype.bindingChanges = function () {
        var text = this.bindingObject ? this.bindingObject.value : null;
        var key = this.bindingObject ? this.bindingObject.key : null;
        if (this.hostComboComponent) {
            this.hostComboComponent.text = text;
            var vField_1 = this.hostComboComponent.valueField;
            var item = this.hostComboComponent.data.find(function (n) { return n[vField_1] === key; });
            this.hostComboComponent.writeValue(item);
        }
        else if (this.hostHelpComponent) {
            this.hostHelpComponent.writeValue(text);
            this.hostHelpComponent.displayValue = key;
        }
        else if (this.hostComboListComponent) {
            this.hostComboListComponent.writeValue(key);
        }
        else if (this.hostComboLookupComponent) {
            this.hostComboLookupComponent.selectedValues = key;
            this.hostComboLookupComponent.writeValue(text);
        }
    };
    UIStateBindingDirective.prototype.ngOnChanges = function (changes) {
        if (changes.bindingObject && !this.differ) {
            this.bindingChanges();
        }
    };
    // 弹出帮助
    UIStateBindingDirective.prototype.bindObjectToHostLookup = function () {
        var _this = this;
        if (!this.hostHelpComponent) {
            return;
        }
        this.hostHelpComponent.selectedData.subscribe(function (data) { return _this.updateHelpBindingObject(data); });
        this.hostHelpComponent.clear.subscribe(function () {
            // this.bindingObject = {key: null, value: null};
            _this.updateHelpBindingObject(null);
        });
        if (this.hostHelpComponent.nosearch) {
            this.hostHelpComponent.valueChanged.subscribe(function (txt) {
                var _a;
                var idField = _this.hostHelpComponent.idField;
                var textField = _this.hostHelpComponent.textField;
                _this.updateHelpBindingObject((_a = {},
                    _a[idField] = txt,
                    _a[textField] = txt,
                    _a));
            });
        }
    };
    // 下拉列表
    UIStateBindingDirective.prototype.bindObjectToHostComboList = function () {
        var _this = this;
        if (!this.hostComboListComponent) {
            return;
        }
        this.hostComboListComponent.valueChange.subscribe(function (data) { return _this.updateHelpBindingObject(data.selections); });
        this.hostComboListComponent.clear.subscribe(function () {
            _this.updateHelpBindingObject(null);
        });
    };
    // 下拉帮助
    UIStateBindingDirective.prototype.bindObjectToHostComboLookup = function () {
        var _this = this;
        if (!this.hostComboLookupComponent) {
            return;
        }
        if (this.hostComboLookupComponent.multiSelect) {
            this.hostComboLookupComponent.valueChange.subscribe(function (data) { return _this.updateHelpBindingObject(data.selections); });
        }
        else {
            // this.hostComboLookupComponent.selectChange.subscribe((data: any) => this.updateHelpBindingObject(data));
            this.hostComboLookupComponent.selectChange.subscribe(function (e) {
                var data = e;
                if (e.data) {
                    data = e.data;
                }
                _this.updateHelpBindingObject(data);
            });
        }
        this.hostComboLookupComponent.clear.subscribe(function () {
            _this.updateHelpBindingObject(null);
        });
    };
    // 更新UISTATE
    UIStateBindingDirective.prototype.updateHelpBindingObject = function (data) {
        var idField, textField;
        if (this.hostHelpComponent) {
            idField = this.hostHelpComponent.idField;
            textField = this.hostHelpComponent.textField;
        }
        if (this.hostComboListComponent) {
            idField = this.hostComboListComponent.idField;
            textField = this.hostComboListComponent.textField;
        }
        if (this.hostComboLookupComponent) {
            idField = this.hostComboLookupComponent.idField;
            textField = this.hostComboLookupComponent.textField;
        }
        this.emitUiStateBinding(data, idField, textField);
    };
    UIStateBindingDirective.prototype.emitUiStateBinding = function (data, idField, textField) {
        var newObject = { key: null, value: null };
        if (data) {
            // const idField = this.hostHelpComponent.idField;
            // const textField = this.hostHelpComponent.textField;
            if (Array.isArray(data)) {
                newObject.key = data.map(function (d) { return d[idField]; }).join(',');
                newObject.value = data.map(function (d) {
                    if (textField.indexOf('.') > -1) {
                        return textField.split('.').reduce(function (r, c) {
                            return r[c];
                        }, d);
                    }
                    else {
                        return d[textField];
                    }
                }).join(',');
            }
            else {
                if (idField) {
                    newObject.key = data[idField];
                }
                if (textField) {
                    if (textField.indexOf('.') > -1) {
                        newObject.value = textField.split('.').reduce(function (r, c) {
                            return r[c];
                        }, data);
                    }
                    else {
                        newObject.value = data[textField];
                    }
                }
            }
        }
        this.UIStateBindingChange.emit(newObject);
    };
    UIStateBindingDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[UIStateBinding]'
                },] }
    ];
    /** @nocollapse */
    UIStateBindingDirective.ctorParameters = function () { return [
        { type: ComboBoxComponent, decorators: [{ type: Host }, { type: Self }, { type: Optional }] },
        { type: LookupGridComponent, decorators: [{ type: Host }, { type: Self }, { type: Optional }] },
        { type: KeyValueDiffers, decorators: [{ type: Optional }] },
        { type: ComboListComponent, decorators: [{ type: Host }, { type: Self }, { type: Optional }] },
        { type: ComboLookupComponent, decorators: [{ type: Host }, { type: Self }, { type: Optional }] }
    ]; };
    UIStateBindingDirective.propDecorators = {
        bindingObject: [{ type: Input, args: ['UIStateBinding',] }],
        UIStateBindingChange: [{ type: Output }],
        onValueChange: [{ type: HostListener, args: ['valueChange', ['$event'],] }]
    };
    return UIStateBindingDirective;
}());
export { UIStateBindingDirective };
//# sourceMappingURL=data:application/json;base64,