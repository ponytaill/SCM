{"version":3,"file":"farris-ui-view-change.js.map","sources":["ng://@farris/ui-view-change/lib/view-change.service.ts","ng://@farris/ui-view-change/lib/view-change.component.ts","ng://@farris/ui-view-change/lib/view-change.directive.ts","ng://@farris/ui-view-change/lib/view-change.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Subject, BehaviorSubject } from 'rxjs';\r\n\r\ninterface ViewItems {\r\n  items: Array<string>;\r\n}\r\ninterface viewContainer {\r\n  [viewGroupIdId: string]: ViewItems;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ViewChangeService {\r\n  /**é»è®¤è§å¾åæ¢åç»åç§° */\r\n  private readonly defaultId:string = 'default';\r\n  //å½åæ¾ç¤ºè§å¾\r\n  currentViewType:any = {};\r\n\r\n  /**contents */\r\n  viewContainers:viewContainer = {};\r\n\r\n  changeCurrentViewId: BehaviorSubject<any> = new BehaviorSubject<any>(null);\r\n\r\n  constructor() { }\r\n\r\n  addViewItem(itemId:string, viewContainerId = this.defaultId){\r\n    if(this.viewContainers[viewContainerId]){\r\n      if (this.hasElement(itemId, viewContainerId)) {\r\n        return;\r\n      }\r\n      else{\r\n        this.viewContainers[viewContainerId].items.push(itemId);\r\n      }\r\n    }\r\n    else{\r\n      this.viewContainers[viewContainerId] = {\r\n        items: []\r\n      } as ViewItems;\r\n      this.viewContainers[viewContainerId].items.push(itemId);\r\n    }\r\n  }\r\n\r\n  removeViewItem(itemId, viewContainerId = this.defaultId){\r\n    delete this.viewContainers[viewContainerId];\r\n    if(this.viewContainers && this.viewContainers[viewContainerId]){\r\n      const items = this.viewContainers[viewContainerId].items.filter(el=>{\r\n        return el !== itemId;\r\n      })\r\n      if (!items.length) {\r\n        delete this.viewContainers[viewContainerId];\r\n        return;\r\n      }\r\n      this.viewContainers[viewContainerId].items = items;\r\n    }\r\n  }\r\n\r\n  /**å­å¨currentpageid */\r\n  updateCurrentViewId(type:string, viewContainerId = this.defaultId){\r\n    this.currentViewType[viewContainerId] = type ;\r\n    let changeView={};\r\n    changeView[viewContainerId]=type;\r\n    this.changeCurrentViewId.next(changeView);\r\n  }\r\n  getChangeCurrentViewId(){\r\n    return this.changeCurrentViewId;\r\n  }\r\n  private hasElement(itemId: string, groupId: string): boolean {\r\n    return this.viewContainers[groupId].items.some((item): boolean => item === itemId);\r\n  }\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, ElementRef, ViewChild, Renderer2, AfterViewInit, ViewEncapsulation } from '@angular/core';\r\nimport { ViewChangeService } from './view-change.service';\r\n\r\n@Component({\r\n  selector: 'farris-view-change',\r\n  templateUrl: './view-change.component.html',\r\n  styleUrls: ['./view-change.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n  // providers:[ ViewChangeService ]\r\n})\r\nexport class ViewChangeComponent implements OnInit ,AfterViewInit{\r\n\r\n  @Input() toolbarData;\r\n  @Input() viewType: string = 'tile';\r\n  @Input() defaultType: string;\r\n  @Input() viewGroupId:string = 'default';\r\n  activeTypeItem;\r\n\r\n  @Output() toolTypeChange = new EventEmitter();\r\n\r\n  @ViewChild('typelist') typelist: ElementRef;\r\n\r\n  constructor(private _renderer: Renderer2,\r\n    private viewChangeService: ViewChangeService) { }\r\n\r\n  ngOnInit() {\r\n    if (this.toolbarData && this.toolbarData.length) {\r\n      if (this.defaultType) {\r\n        let item = this.toolbarData.find((bar) => {\r\n          return bar['type'] === this.defaultType;\r\n        })\r\n        this.activeTypeItem = item;\r\n        this.toolTypeChange.emit(this.activeTypeItem);\r\n      }\r\n      else {\r\n        this.activeTypeItem = this.toolbarData[0];\r\n        this.toolTypeChange.emit(this.activeTypeItem);\r\n      }\r\n\r\n      \r\n    }\r\n  }\r\n  ngAfterViewInit(): void {\r\n    if(!this.viewChangeService){\r\n      this.viewChangeService = new ViewChangeService();\r\n    }\r\n    this.viewChangeService.updateCurrentViewId(this.activeTypeItem['type'],this.viewGroupId);\r\n  }\r\n\r\n  listItemClick(item) {\r\n    if (item.disable || this.activeTypeItem['type'] === item['type']) {\r\n      return;\r\n    }\r\n    this.activeTypeItem = item;\r\n    if(!this.viewChangeService){\r\n      this.viewChangeService = new ViewChangeService();\r\n    }\r\n    this.viewChangeService.updateCurrentViewId(this.activeTypeItem['type'],this.viewGroupId);\r\n    this.toolTypeChange.emit(item);\r\n    if (this.typelist) {\r\n      this._renderer.setStyle(\r\n        this.typelist.nativeElement,\r\n        'display',\r\n        'none'\r\n      );\r\n    }\r\n  }\r\n\r\n  dropdownMouseEnter() {\r\n    this._renderer.setStyle(\r\n      this.typelist.nativeElement,\r\n      'display',\r\n      'block'\r\n    );\r\n  }\r\n  dropdownMouseLeave() {\r\n    this._renderer.setStyle(\r\n      this.typelist.nativeElement,\r\n      'display',\r\n      'none'\r\n    );\r\n  }\r\n\r\n}\r\n","import { style } from '@angular/animations';\r\nimport { Directive, Injectable, Input, EventEmitter, Output, ElementRef, OnInit, OnDestroy, ChangeDetectorRef, HostBinding, Renderer2, RendererStyleFlags2 } from '@angular/core';\r\nimport { ViewChangeService } from './view-change.service';\r\n//è§å¾åºå\r\n@Directive({\r\n    selector: '[fViewItem]'\r\n})\r\nexport class FarrisViewItemDirective implements OnInit, OnDestroy {\r\n\r\n    @Input('fViewItem') viewItemType: string;\r\n    @Input('fViewGroupId') fViewGroupId: string = 'default';\r\n  \r\n    constructor(\r\n      private elementRef: ElementRef,\r\n      private viewChangeService: ViewChangeService,\r\n      private render : Renderer2\r\n    ) {\r\n        \r\n    }\r\n  \r\n    public ngOnInit(): void {\r\n        this.viewChangeService.addViewItem(this.viewItemType, this.fViewGroupId);\r\n        this.viewChangeService.getChangeCurrentViewId().subscribe((currentViewType: any): void => {\r\n            if(!currentViewType) return;\r\n            if(!currentViewType[this.fViewGroupId]){\r\n                return;\r\n            }\r\n            else if(currentViewType[this.fViewGroupId] == this.viewItemType){\r\n                // this.render.setStyle(this.elementRef.nativeElement,'display','');\r\n                this.render.removeClass(this.elementRef.nativeElement, 'f-viewchange-view-none');\r\n            }\r\n            else{\r\n                // this.render.setStyle(this.elementRef.nativeElement,'display','none',0);\r\n                this.render.addClass(this.elementRef.nativeElement, 'f-viewchange-view-none');\r\n            }\r\n        });\r\n    }\r\n  \r\n    public ngOnDestroy(): void {\r\n        this.viewChangeService.removeViewItem(this.viewItemType, this.fViewGroupId);\r\n    }\r\n  }","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ViewChangeComponent } from './view-change.component';\r\nimport { FarrisViewItemDirective } from './view-change.directive';\r\n\r\n@NgModule({\r\n  declarations: [ViewChangeComponent,FarrisViewItemDirective],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [ViewChangeComponent,FarrisViewItemDirective]\r\n})\r\nexport class ViewChangeModule { }\r\n"],"names":[],"mappings":"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"}
