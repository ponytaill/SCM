{"version":3,"file":"farris-ui-forms.js.map","sources":["ng://@farris/ui-forms/lib/radio/radio-group.component.ts","ng://@farris/ui-forms/lib/radio/radio.component.ts","ng://@farris/ui-forms/lib/radio/radio-button.component.ts","ng://@farris/ui-forms/lib/radio/radiogroup.component.ts","ng://@farris/ui-forms/lib/checkbox/checkbox-group.component.ts","ng://@farris/ui-forms/lib/checkbox/checkbox.component.ts","ng://@farris/ui-forms/lib/checkbox/checkboxgroup.component.ts","ng://@farris/ui-forms/lib/textarea-autosize.directive.ts","ng://@farris/ui-forms/lib/textarea-wordcount.directive.ts","ng://@farris/ui-forms/lib/textarea-zoom.directive.ts","ng://@farris/ui-forms/lib/input-append.directive.ts","ng://@farris/ui-forms/lib/shortcut-tab.directive.ts","ng://@farris/ui-forms/lib/forms.module.ts"],"sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter, forwardRef, HostBinding } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\nimport { IdService } from '@farris/ui-common';\r\n@Component({\r\n    selector: 'farris-radio-group',\r\n    template: `\r\n    <div class=\"farris-radio-group btn-group\"\r\n    [class.farris-input-wrap]=\"type!=='button'\"\r\n    [class.btn-group-toggle]=\"type==='button'\"\r\n    [class.farris-checkradio-hor]=\"horizontal\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  `,\r\n    providers: [{\r\n        provide: NG_VALUE_ACCESSOR,\r\n        useExisting: forwardRef(() => RadioGroupComponent),\r\n        multi: true,\r\n    }],\r\n    styles: [`\r\n    `],\r\n})\r\nexport class RadioGroupComponent implements OnInit, ControlValueAccessor {\r\n    /* radio ç±»å */\r\n    @Input() type: string;\r\n\r\n    /* åå§å radio çå¼ */\r\n    @Input() model: any;\r\n\r\n    @Input() name: string;\r\n\r\n    @Input() horizontal: boolean;\r\n\r\n    @Output() modelChange = new EventEmitter<any>();\r\n\r\n    // tslint:disable-next-line:ban-types\r\n    subscriber: Function[] = [];\r\n\r\n    constructor(private idSer: IdService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.name = this.idSer.generate().replace(/-/g, '_');\r\n    }\r\n\r\n    changeModel(value: any) {\r\n        this.model = value;\r\n        this.modelChange.emit(this.model);\r\n        this.controlChange(value);\r\n    }\r\n\r\n    writeValue(value: any): void {\r\n        this.model = value;\r\n        this.changeModel(this.model);\r\n    }\r\n\r\n    registerOnChange(fn: Function): void {\r\n        this.controlChange = fn\r\n    }\r\n\r\n    registerOnTouched(fn: Function): void {\r\n        this.controlTouch = fn\r\n    }\r\n\r\n    private controlChange: Function = () => { }\r\n    private controlTouch: Function = () => { }\r\n\r\n}\r\n","import { Component, Input, Output, EventEmitter, forwardRef, Optional, ElementRef, HostBinding, ChangeDetectorRef, OnInit } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { RadioGroupComponent } from './radio-group.component';\r\n\r\n@Component({\r\n  selector: 'farris-radio',\r\n  templateUrl: './radio.component.html',\r\n  styleUrls: ['./radio.component.css'],\r\n  providers: [{\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => RadioComponent),\r\n    multi: true,\r\n  }]\r\n  // changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class RadioComponent implements ControlValueAccessor, OnInit {\r\n\r\n  /* radio åçname ç¨äºå¤ä¸ªradioåéä½¿ç¨ */\r\n  // get name() {\r\n  //   if (this.hasParent(this.el.nativeElement)) {\r\n  //     return this.radioGroup.name;\r\n  //   }\r\n  // }\r\n \r\n  /* radio å¼ */\r\n  @Input()\r\n  get model(): any {\r\n    if (this.hasParent(this.el.nativeElement)) {\r\n      return this.radioGroup.model;\r\n    }\r\n    return this.nyModel;\r\n  }\r\n\r\n  set model(model: any) {\r\n    this.nyModel = model;\r\n  }\r\n\r\n\r\n  @Input() id: string;\r\n\r\n  /* radio å¼ */\r\n  @Input() label: any = '';\r\n\r\n  /* ç¦ç¨ */\r\n  @Input() disabled: boolean;\r\n\r\n  nyModel: any;\r\n\r\n  name = '';\r\n\r\n  @Output() modelChange = new EventEmitter<any>();\r\n\r\n  @HostBinding('class.d-block') blockClass = true;\r\n\r\n  constructor(\r\n    @Optional() private radioGroup: RadioGroupComponent,\r\n    private el: ElementRef\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.name = this.radioGroup.name;\r\n  }\r\n\r\n  changeModelHandler() {\r\n    // ç¶åç´ è·ålabel  å­åç´ åä»ç¶åç´ è·åmodel\r\n    if (this.hasParent(this.el.nativeElement)) {\r\n      return this.radioGroup.changeModel(this.label);\r\n    }\r\n    this.model = this.label;\r\n    this.modelChange.emit(this.model);\r\n    this.controlChange(this.label);\r\n  }\r\n\r\n  /* æ¯å¦å­å¨ç¶åç´   å­å¨å³åéç»*/\r\n  hasParent(element: any) {\r\n    return element.parentElement.classList.contains('farris-radio-group');\r\n  }\r\n\r\n  writeValue(value: any): void {\r\n    this.model = value;\r\n  }\r\n\r\n  registerOnChange(fn: Function): void {\r\n    this.controlChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: Function): void {\r\n    this.controlTouch = fn;\r\n  }\r\n\r\n  private controlChange: Function = () => { };\r\n  private controlTouch: Function = () => { };\r\n\r\n}\r\n","import { Component, Input, Output, EventEmitter, forwardRef, Optional, ElementRef, ViewEncapsulation, OnInit } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { RadioGroupComponent } from './radio-group.component';\r\nimport { HostBinding } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'farris-radio-button',\r\n    template: `\r\n    <label [class]=\"'btn btn-'+type\" [class.active]=\"isGroupModel()\" [class.disabled]=\"disabled\">\r\n        <input class=\"custom-control-input\" [name]=\"name\" [value]=\"label\"\r\n        [ngModel]=\"model\" (ngModelChange)=\"changeModelHandler()\" type=\"radio\" [disabled]=\"disabled\">\r\n          <ng-content>\r\n          </ng-content>\r\n    </label>\r\n  `,\r\n    styles: [\r\n        `\r\n        .farris-radio-button>.btn{\r\n            margin-left:-1px\r\n          }\r\n          .farris-radio-button>.btn.active, .farris-radio-button>.btn:hover{\r\n            position: relative;\r\n          }\r\n      `\r\n    ],\r\n    providers: [{\r\n        provide: NG_VALUE_ACCESSOR,\r\n        useExisting: forwardRef(() => RadioButtonComponent),\r\n        multi: true,\r\n    }],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class RadioButtonComponent implements ControlValueAccessor, OnInit {\r\n\r\n    /* radio åçname ç¨äºå¤ä¸ªradioåéä½¿ç¨ */\r\n    // get name() {\r\n\r\n    // }\r\n    name = '';\r\n\r\n    /* æé®ç±»å */\r\n    @Input()\r\n    type = 'secondary';\r\n\r\n    /* radio å¼ */\r\n    @Input()\r\n    get model(): any {\r\n        if (this.hasParent(this.el.nativeElement)) {\r\n            return this.radioGroup.model;\r\n        }\r\n        return this.nyModel;\r\n    }\r\n\r\n    set model(model: any) {\r\n        this.nyModel = model;\r\n    }\r\n\r\n\r\n    @Input()\r\n    id: string;\r\n\r\n    /* radio å¼ */\r\n    @Input()\r\n    label: any = '';\r\n\r\n    /* ç¦ç¨ */\r\n    @Input()\r\n    disabled: boolean;\r\n\r\n    nyModel: any;\r\n\r\n    @Output()\r\n    modelChange = new EventEmitter<any>();\r\n\r\n\r\n    @HostBinding('class.farris-radio-button')\r\n    get farrisRadioButtonClass() { return true; }\r\n\r\n    constructor(\r\n        @Optional() public radioGroup: RadioGroupComponent,\r\n        private el: ElementRef\r\n    ) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.name = this.hasParent(this.el.nativeElement) ? this.radioGroup.name : '';\r\n    }\r\n\r\n    isGroupModel() {\r\n        return this.label === this.radioGroup.model;\r\n    }\r\n\r\n    changeModelHandler() {\r\n        // ç¶åç´ è·ålabel  å­åç´ åä»ç¶åç´ è·åmodel\r\n        if (this.hasParent(this.el.nativeElement)) {\r\n            return this.radioGroup.changeModel(this.label);\r\n        }\r\n        this.model = this.label;\r\n        this.modelChange.emit(this.model);\r\n        this.controlChange(this.label);\r\n    }\r\n\r\n    /* æ¯å¦å­å¨ç¶åç´   å­å¨å³åéç»*/\r\n    hasParent(element: any) {\r\n        return element.parentElement.classList.contains('farris-input-wrap') || element.parentElement.classList.contains('btn-group');\r\n    }\r\n\r\n    writeValue(value: any): void {\r\n        this.model = value;\r\n    }\r\n\r\n    registerOnChange(fn: Function): void {\r\n        this.controlChange = fn\r\n    }\r\n\r\n    registerOnTouched(fn: Function): void {\r\n        this.controlTouch = fn\r\n    }\r\n\r\n    private controlChange: Function = () => { }\r\n    private controlTouch: Function = () => { }\r\n\r\n}\r\n","import { Component, Input, forwardRef, OnInit, EventEmitter, Optional, Injector } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, RadioControlValueAccessor } from '@angular/forms';\r\nimport { IdService, CommonUtils } from '@farris/ui-common';\r\nimport { Radio } from './radio';\r\nimport { Output } from '@angular/core';\r\n@Component({\r\n    selector: 'farris-radiogroup',\r\n    templateUrl: './radiogroup.component.html',\r\n    providers: [{\r\n        provide: NG_VALUE_ACCESSOR,\r\n        useExisting: forwardRef(() => FarrisRadioGroupComponent),\r\n        multi: true,\r\n    }],\r\n    exportAs: 'FarrisRadioGroupComponent'\r\n})\r\nexport class FarrisRadioGroupComponent implements ControlValueAccessor, OnInit {\r\n    @Input('tab-index') tabIndex: number;\r\n    /* radio æ°ç» */\r\n    @Input() data: Radio[] = [];\r\n\r\n    /* radio ç±»å   åçæèæé®ç±»å*/\r\n    @Input() type: string;\r\n\r\n    /* nameæ è¯ */\r\n    @Input() name: string;\r\n\r\n    /* æ°´å¹³æå */\r\n    @Input() horizontal: boolean;\r\n\r\n    /* ç¦ç¨ */\r\n    @Input() disabled: boolean;\r\n\r\n    /* radio å¼ */\r\n    @Input() value: any;\r\n    @Input() textField = 'name';\r\n    @Input() valueField = 'value';\r\n    /* ç¹å»äºä»¶ */\r\n    @Output() changeValue = new EventEmitter<any>();\r\n    private commonUtils: CommonUtils;\r\n    constructor(private idSer: IdService, @Optional() private inject: Injector) {\r\n        if (this.inject) {\r\n            this.commonUtils = this.inject.get(CommonUtils);\r\n        }\r\n    }\r\n\r\n\r\n    ngOnInit() {\r\n        this.name = this.idSer.generate().replace(/-/g, '_');\r\n    }\r\n\r\n    clickHandler(item: any) {\r\n        let val = this._getValue(item);\r\n        if(this.value == val) return;\r\n        // æ´æ¹controlçå¼\r\n        this.value = val;\r\n        this.controlChange(this.value);\r\n        this.controlTouch(this.value);\r\n        this.changeValue.emit(this.value);\r\n    }\r\n\r\n    _getText(item) {\r\n        if (item) {\r\n            if (this.commonUtils && this.commonUtils.getValue) {\r\n                return this.commonUtils.getValue(this.textField, item);\r\n            } else {\r\n                return item[this.textField];\r\n            }\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    _getValue(item) {\r\n        if (item) {\r\n            if (this.commonUtils && this.commonUtils.getValue) {\r\n                return this.commonUtils.getValue(this.valueField, item);\r\n            } else {\r\n                return item[this.valueField];\r\n            }\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n\r\n    writeValue(value: any): void {\r\n        this.value = value;\r\n    }\r\n\r\n    registerOnChange(fn: () => void): void {\r\n        this.controlChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: () => void): void {\r\n        this.controlTouch = fn;\r\n    }\r\n\r\n    private controlChange: (value: any) => void = () => { };\r\n    private controlTouch: (value: any) => void = () => { };\r\n\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, forwardRef } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\nimport { IdService } from '@farris/ui-common';\r\n@Component({\r\n    selector: 'farris-checkbox-group',\r\n    template: `\r\n    <div class=\"farris-input-wrap\" [class.farris-checkradio-hor]=\"horizontal\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  `,\r\n    providers: [{\r\n        provide: NG_VALUE_ACCESSOR,\r\n        useExisting: forwardRef(() => CheckboxGroupComponent),\r\n        multi: true,\r\n    }],\r\n    styles: [],\r\n})\r\nexport class CheckboxGroupComponent implements OnInit, ControlValueAccessor {\r\n\r\n    /* åå§å checkbox çå¼ */\r\n    @Input()\r\n    model = [];\r\n\r\n    /* è®¾ç½®é»è®¤nameå¼ */\r\n    @Input()\r\n    name: string;\r\n\r\n    /* æ§ä»¶æ°´å¹³æå */\r\n    @Input()\r\n    horizontal: boolean;\r\n\r\n    /*  */\r\n    @Output()\r\n    modelChange = new EventEmitter<any>();\r\n\r\n    constructor(private idSer: IdService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.name = this.idSer.generate();\r\n    }\r\n\r\n    changeModel(value: any) {\r\n        const index = this.model.findIndex(ele => {\r\n            return ele === value;\r\n        });\r\n        // å¦æå·²ç»éä¸­  åè®¾ç½®ä¸ºä¸éä¸­\r\n        if (index > -1) {\r\n            this.model.splice(index, 1);\r\n            return this.modelChange.emit(this.model);\r\n        }\r\n        // å¦ææ²¡æéä¸­  è®¾ç½®ä¸ºéä¸­\r\n        this.model.push(value);\r\n        // controlçå¼è®¾ç½®ä¸ºéå·åéçå­ç¬¦ä¸²  ä¾¿äºå­å¨åä¼ é\r\n        this.controlChange(this.model.join());\r\n        this.modelChange.emit(this.model);\r\n    }\r\n    writeValue(value: any): void {\r\n        this.model = value\r\n        this.changeModel(this.model)\r\n    }\r\n\r\n    registerOnChange(fn: Function): void {\r\n        this.controlChange = fn\r\n    }\r\n\r\n    registerOnTouched(fn: Function): void {\r\n        this.controlTouch = fn\r\n    }\r\n\r\n    private controlChange: Function = () => { }\r\n    private controlTouch: Function = () => { }\r\n\r\n}\r\n","import { Component, OnInit, Input, ElementRef, forwardRef, Output, EventEmitter } from '@angular/core';\r\nimport { CheckboxGroupComponent } from './checkbox-group.component';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\n@Component({\r\n  selector: 'farris-checkbox',\r\n  templateUrl: './checkbox.component.html',\r\n  providers: [{\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => CheckboxComponent),\r\n    multi: true,\r\n  }],\r\n  styles: ['./checkbox.component.css']\r\n})\r\nexport class CheckboxComponent implements OnInit, ControlValueAccessor {\r\n\r\n   /* radio åçname ç¨äºå¤ä¸ªradioåéä½¿ç¨ */\r\n   get name() {\r\n    if (this.hasParent(this.el.nativeElement)) {\r\n      return this.checkbox.name;\r\n    }\r\n    return '';\r\n  }\r\n\r\n  /* model */\r\n  @Input()\r\n  get model() {\r\n    if (this.hasParent(this.el.nativeElement)) {\r\n      return this.checkbox.model.find(ele => {\r\n        return ele === this.label;\r\n      });\r\n    }\r\n    return this.nyModel;\r\n  }\r\n\r\n  set model(model: any) {\r\n    this.nyModel = model;\r\n  }\r\n\r\n  /* checkboxå¼ */\r\n  @Input()\r\n  label: any;\r\n\r\n  /* ç¦ç¨ */\r\n  @Input()\r\n  disabled: boolean;\r\n\r\n  @Output()\r\n  modelChange = new EventEmitter<any>();\r\n  nyModel: any;\r\n  constructor(\r\n    private checkbox: CheckboxGroupComponent,\r\n    private el: ElementRef) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  /* å¼ä¼ é */\r\n  changeModelHandler() {\r\n    // ç¶åç´ è·ålabel  å­åç´ åä»ç¶åç´ è·åmodel\r\n    if (this.hasParent(this.el.nativeElement)) {\r\n      return this.checkbox.changeModel(this.label);\r\n    }\r\n    this.model = this.label;\r\n    this.modelChange.emit(this.model);\r\n    this.controlChange(this.label);\r\n  }\r\n\r\n\r\n  /* æ¯å¦å­å¨ç¶åç´   å­å¨å³åéç»*/\r\n  hasParent(element: any) {\r\n    return element.parentElement.classList.contains('farris-input-wrap');\r\n  }\r\n\r\n  writeValue(value: any): void {\r\n    this.model = value;\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.controlChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    this.controlTouch = fn;\r\n  }\r\n  private controlChange: Function = () => { }\r\n  private controlTouch: Function = () => { }\r\n\r\n}\r\n","import { OnDestroy, SimpleChanges, OnChanges, Optional, Injector } from '@angular/core';\r\n/*\r\n * @Author: è¡çæ´(Yuyang)\r\n * @Date: 2019-08-29\r\n * @LastEditors:  è¡çæ´(Yuyang)\r\n * @LastEditTime: 2019-08-29\r\n * @QQ: 664927877\r\n * @Version: v0.0.8\r\n */\r\nimport { Component, Input, forwardRef, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\nimport { IdService, CommonUtils } from '@farris/ui-common';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, Subscription } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'farris-checkboxgroup',\r\n    templateUrl: './checkboxgroup.component.html',\r\n    providers: [{\r\n        provide: NG_VALUE_ACCESSOR,\r\n        useExisting: forwardRef(() => FarrisCheckboxGroupComponent),\r\n        multi: true,\r\n    }],\r\n    exportAs: 'FarrisCheckboxGroupComponent'\r\n})\r\nexport class FarrisCheckboxGroupComponent implements ControlValueAccessor, OnInit, OnDestroy, OnChanges {\r\n\r\n    @Input('tab-index') tabIndex = 0;\r\n\r\n    /* radio æ°ç» */\r\n    @Input() data: any[] = [];\r\n\r\n    /* checkbox ç±»å   åçæèæé®ç±»å*/\r\n    @Input() type: string;\r\n\r\n    /* å¤éæ¡name */\r\n    @Input() name: string;\r\n\r\n    /* æ¯å¦æ°´å¹³åå¸ */\r\n    @Input() horizontal: boolean;\r\n\r\n    /* åéç¬¦ é»è®¤éå·*/\r\n    @Input() separator = ',';\r\n\r\n    /* ç¦ç¨ */\r\n    @Input() disable: boolean;\r\n\r\n    /* å¤éæ¡ç»çå¼ */\r\n    @Input() value: any;\r\n\r\n    /* å¼ç±»åæ¯å¦æ¯string */\r\n    @Input() isStringValue = true;\r\n\r\n    @Input() textField = 'name';\r\n    @Input() valueField = 'value';\r\n\r\n    /** å è½½æ°æ®äºä»¶ */\r\n    @Input() loadData: (emptyData?: any[]) => Observable<any>;\r\n    loadDataSubscription: Subscription;\r\n\r\n    @Output() changeValue = new EventEmitter<any>();\r\n\r\n    /* checkboxèµå¼äºä»¶ */\r\n    @Output() setCheckboxData = new EventEmitter<any>();\r\n\r\n    private commonUtils: CommonUtils;\r\n\r\n    constructor(private idSer: IdService, @Optional() private inject: Injector) {\r\n        if (this.inject) {\r\n            this.commonUtils = this.inject.get(CommonUtils);\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        // åå§åname\r\n        this.name = this.idSer.generate().replace(/-/g, '_');\r\n\r\n        this.setCheckboxData.emit(this);\r\n        // todo åå¼å¯ä»¥å®ç°promise\r\n        if (this.loadData) {\r\n            this.loadDataSubscription = this.loadData().subscribe(res => this.data = res.data);\r\n        }\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.loadDataSubscription) {\r\n            this.loadDataSubscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    _getText(item) {\r\n        if (item) {\r\n            if (this.commonUtils && this.commonUtils.getValue) {\r\n                return this.commonUtils.getValue(this.textField, item);\r\n            } else {\r\n                return item[this.textField];\r\n            }\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    _getValue(item) {\r\n        if (item) {\r\n            if (this.commonUtils && this.commonUtils.getValue) {\r\n                return this.commonUtils.getValue(this.valueField, item);\r\n            } else {\r\n                return item[this.valueField];\r\n            }\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    /* éä¸­inputå¼ */\r\n    clickHandler(item: any, index: number) {\r\n        let arrValue = this.transformToArr(this.value) || [];\r\n\r\n        const val = String(this._getValue(item));\r\n        if (!arrValue || !arrValue.length) {\r\n            arrValue.push(val);\r\n        } else {\r\n            if (arrValue.some(item => item == val)) {\r\n                arrValue = arrValue.filter(n => n !== val);\r\n            } else {\r\n                arrValue.push(val);\r\n            }\r\n        }\r\n\r\n        // æ´æ°valueå¼\r\n        this.value = this.transformToStr(arrValue);\r\n\r\n        // ä¼ å¼formcontrol\r\n        this.controlChange(this.value);\r\n        this.controlTouch(this.value);\r\n        this.changeValue.emit(this.value);\r\n    }\r\n\r\n    /* è¢«éä¸­ */\r\n    checked(item: any) {\r\n        const val = String(this._getValue(item));\r\n        const checkedValue = this.transformToArr(this.value);\r\n        // å¤å¼\r\n        return checkedValue.some(item => item == val);\r\n    }\r\n\r\n    /* å¼å°æ°ç»å¼çè½¬æ¢ */\r\n    transformToArr(value: any): string[] {\r\n        if (!value) {\r\n            return [];\r\n        }\r\n        if (!this.isStringValue) {\r\n            return value;\r\n        }\r\n\r\n        return value.split(this.separator);\r\n    }\r\n\r\n    /* å¼å°å­ç¬¦ä¸²å¼çè½¬æ¢ */\r\n    transformToStr(value: Array<string>) {\r\n\r\n        const allVals = this.data.map(n => this._getValue(n));\r\n        const r = [];\r\n        allVals.forEach(n => {\r\n            if (value.some(item => item == n)) {\r\n                r.push(n);\r\n            }\r\n        });\r\n\r\n        if (!this.isStringValue) {\r\n            return r;\r\n        }\r\n        return r.join(this.separator);\r\n    }\r\n\r\n\r\n    writeValue(value: any): void {\r\n        this.value = value;\r\n    }\r\n\r\n    /* changeæä½å¼åå  æ¹æ³éå*/\r\n    registerOnChange(fn: () => void): void {\r\n        this.controlChange = fn;\r\n    }\r\n\r\n    /* blurå¼åå  æ¹æ³éå*/\r\n    registerOnTouched(fn: () => void): void {\r\n        this.controlTouch = fn;\r\n    }\r\n\r\n    private controlChange: (value: any) => void = () => { };\r\n    private controlTouch: (value: any) => void = () => { };\r\n\r\n}\r\n","import { Directive, Input, Injector, OnInit, ElementRef, HostListener, AfterViewInit, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\n\r\n@Directive({\r\n    selector: '[auto-size]',\r\n})\r\nexport class TextareaAutoSizeDirective implements OnInit, AfterViewInit, OnChanges{\r\n    @Input('auto-size') enable = true;\r\n    @Input() maxHeight: number;\r\n\r\n    private previousValue = null;\r\n    private isUserResized = false;\r\n\r\n    private textarea;\r\n    private document;\r\n    private documentElement;\r\n    private minHeight;\r\n\r\n    constructor(private el: ElementRef, private ngControl: NgControl, private injector: Injector) {\r\n        this.textarea = this.el.nativeElement;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.init();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.enable && !changes.enable.isFirstChange()) {\r\n            this.sizeToFit();\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.minHeight = this.textarea.getBoundingClientRect().height;\r\n    }\r\n\r\n    private init() {\r\n        if (this.enable) {\r\n            this.document = this.textarea.ownerDocument;\r\n            this.documentElement = this.document.documentElement;\r\n            if (this.textarea) {\r\n                if (this.textarea.value) {\r\n                    this.sizeToFit();\r\n                }\r\n            }\r\n\r\n            if (this.ngControl) {\r\n                this.ngControl.valueChanges.subscribe(v => {\r\n                    if (v !== this.previousValue) {\r\n                        this.sizeToFit();\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    @HostListener('input')\r\n    onInput() {\r\n        this.sizeToFit();\r\n    }\r\n\r\n    @HostListener('change')\r\n    onValueChange() {\r\n        this.sizeToFit();\r\n    }\r\n\r\n\r\n    private overflowOffset() {\r\n        let offsetTop = 0;\r\n        let el = this.textarea;\r\n\r\n        while (el !== document.body && el !== null) {\r\n            offsetTop += el.offsetTop || 0;\r\n            el = el.offsetParent;\r\n        }\r\n\r\n        const top = offsetTop - document.defaultView.pageYOffset;\r\n        const bottom = this.documentElement.clientHeight - (top + this.textarea.offsetHeight);\r\n        return { top, bottom };\r\n    }\r\n\r\n    private sizeToFit() {\r\n        if (!this.enable) {\r\n            return;\r\n        }\r\n\r\n        const textarea = this.textarea;\r\n        const viewportMarginBottom = 100;\r\n        if (this.isUserResized) { return; }\r\n        if (this.textarea.value === this.previousValue) { return; }\r\n        if (this.textarea.offsetWidth <= 0 && this.textarea.offsetHeight <= 0) { return; }\r\n\r\n        // const { top, bottom } = this.overflowOffset();\r\n        // if (top < 0 || bottom < 0) {\r\n        //     return;\r\n        // }\r\n\r\n        const textareaStyle = getComputedStyle(textarea);\r\n\r\n        const topBorderWidth = Number(textareaStyle.borderTopWidth.replace(/px/, ''));\r\n        const bottomBorderWidth = Number(textareaStyle.borderBottomWidth.replace(/px/, ''));\r\n\r\n        const isBorderBox = textareaStyle.boxSizing === 'border-box';\r\n        const borderAddOn = isBorderBox ? topBorderWidth + bottomBorderWidth : 0;\r\n\r\n        // const maxHeight = Number(textareaStyle.height.replace(/px/, '')) + bottom;\r\n        // const adjustedViewportMarginBottom = bottom < viewportMarginBottom ? bottom : viewportMarginBottom;\r\n        // textarea.style.maxHeight = `${maxHeight - adjustedViewportMarginBottom}px`;\r\n\r\n        if (this.maxHeight) {\r\n            textarea.style.maxHeight = `${this.maxHeight}px`;\r\n        }\r\n\r\n        const container = textarea.parentElement;\r\n        if (container instanceof HTMLElement) {\r\n            const containerHeight = container.style.height;\r\n            container.style.height = getComputedStyle(container).height;\r\n            textarea.style.height = 'auto';\r\n\r\n            let h = textarea.scrollHeight + borderAddOn;\r\n            if (this.minHeight > h) {\r\n                h = this.minHeight;\r\n            }\r\n            textarea.style.height = `${h}px`;\r\n            container.style.height = containerHeight;\r\n        }\r\n\r\n        this.previousValue = textarea.value;\r\n    }\r\n}\r\n","import { Directive, ElementRef, Injector, Input, Renderer2,\r\n    OnInit, AfterViewInit, OnDestroy, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { EventManager } from '@angular/platform-browser';\r\nimport ResizeObserver from 'resize-observer-polyfill';\r\n@Directive({\r\n    selector: '[word-count]',\r\n    exportAs: 'WordCountRef'\r\n})\r\nexport class TextareaWordcountDirective implements OnInit, AfterViewInit, OnDestroy, OnChanges {\r\n    @Input('word-count') useWordCount = true;\r\n    /**\r\n     * ç»è®¡å­æ°çæ¹å¼ï¼ surplus å©ä½å¯è¾å¥å­æ°; length: å½åå·²è¾å¥å­æ°ï¼\r\n     *\r\n     * é»è®¤ä¸º surplus\r\n     */\r\n    @Input() countType: 'surplus' | 'length' = 'surplus';\r\n\r\n    @Input() onlyShowInDialog = false;\r\n\r\n    wordCountElement = null;\r\n    // å½åå­æ°\r\n    private currentLengthElement = null;\r\n    private eventManager: EventManager;\r\n    private ngControl: NgControl;\r\n    private onInput = null;\r\n    private localeSer: LocaleService;\r\n    private ro: ResizeObserver = null;\r\n    constructor(private el: ElementRef, private render: Renderer2, private injector: Injector) {\r\n        this.eventManager = this.injector.get(EventManager);\r\n        this.localeSer = this.injector.get(LocaleService);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.ngControl = this.injector.get(NgControl, null);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.initWordCount();\r\n        if (this.ngControl && this.useWordCount) {\r\n            this.ngControl.control.valueChanges.subscribe((e) => {\r\n                this.updateWordsCount();\r\n            });\r\n        }\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n\r\n        if (changes.useWordCount && !changes.useWordCount.isFirstChange()) {\r\n            if (this.useWordCount) {\r\n                this.initWordCount();\r\n            } else {\r\n                this.destroy();\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy();\r\n\r\n        if(this.ro) {\r\n            this.ro.disconnect();\r\n            this.ro.unobserve(this.el.nativeElement.parentElement);\r\n        }\r\n    }\r\n\r\n\r\n    private destroy() {\r\n        if (this.onInput) {\r\n            this.onInput();\r\n        }\r\n\r\n        if (this.wordCountElement) {\r\n            this.wordCountElement.remove();\r\n        }\r\n    }\r\n\r\n    initWordCount() {\r\n        if (this.useWordCount && !this.onlyShowInDialog) {\r\n            this.createWordCountElement();\r\n        }\r\n    }\r\n\r\n    private createWordCountID() {\r\n        const tagName = this.el.nativeElement.tagName;\r\n        if (this.ngControl) {\r\n            const ctrlName = this.ngControl.name;\r\n            return `${tagName}_WORDCOUNT_${ctrlName}`;\r\n        } else {\r\n            if (this.el.nativeElement.id) {\r\n                return `${tagName}_WORDCOUNT_${this.el.nativeElement.id}`;\r\n            }\r\n        }\r\n        return '';\r\n    }\r\n\r\n    private createWordCountElement() {\r\n        const max = this.el.nativeElement.maxLength;\r\n        if (!max || max < 0) {\r\n            // console.info('æªè®¾ç½®æå¤§å­ç¬¦æ°ï¼è®¡æ°åè½å¤±æã');\r\n            return;\r\n        }\r\n\r\n        const wordCountSPAN = this.render.createElement('span');\r\n        wordCountSPAN.className = 'textarea-wordcount';\r\n\r\n        const id = this.createWordCountID();\r\n        if (id) {\r\n            wordCountSPAN.id = id;\r\n        }\r\n\r\n        this.render.setStyle(wordCountSPAN, 'position', 'absolute');\r\n        this.render.setStyle(wordCountSPAN, 'bottom', '10px');\r\n\r\n        const { width, right } = this.el.nativeElement.getBoundingClientRect();\r\n        const { width: parentWidth } = this.el.nativeElement.parentElement.getBoundingClientRect();\r\n        if (parentWidth !== width) {\r\n            this.render.setStyle(wordCountSPAN, 'right', `${parentWidth - width + 10}px`);\r\n\r\n            this.ro = new ResizeObserver((entries, observer) => {\r\n                if (entries && entries[0]) {\r\n                    const _pw = entries[0].contentRect.width;\r\n\r\n                    this.render.setStyle(wordCountSPAN, 'right', `${_pw - width + 10}px`);\r\n                }\r\n            });\r\n            this.ro.observe(this.el.nativeElement.parentElement);\r\n\r\n        } else {\r\n            this.render.setStyle(wordCountSPAN, 'right', '10px');\r\n        }\r\n        this.render.setStyle(wordCountSPAN, 'cursor', 'pointer');\r\n\r\n        this.el.nativeElement.after(wordCountSPAN);\r\n        this.wordCountElement = wordCountSPAN;\r\n\r\n        const currentLengthSPAN = this.render.createElement('span');\r\n        wordCountSPAN.appendChild(currentLengthSPAN);\r\n        this.currentLengthElement = currentLengthSPAN;\r\n        currentLengthSPAN.after( ` / ${max}` );\r\n\r\n        this.updateWordsCount();\r\n        this.onInput = this.render.listen(this.el.nativeElement, 'input', () => {\r\n            // value.replace(/\\n|\\r/gi, '') // ç§»é¤æ¢è¡ç¬¦\r\n            this.updateWordsCount();\r\n        });\r\n    }\r\n\r\n    updateWordsCount() {\r\n        if (!this.useWordCount || !this.currentLengthElement) {\r\n            return;\r\n        }\r\n        const max = this.el.nativeElement.maxLength;\r\n        const val = this.countType === 'surplus' ? max - this.el.nativeElement.value.length : this.el.nativeElement.value.length;\r\n        const tip = 'messager.prompt.tips.' + this.countType;\r\n\r\n        this.currentLengthElement.innerText = val;\r\n        this.wordCountElement.title = this.localeSer.getValue(tip).replace('{0}', val);\r\n    }\r\n}\r\n","import { TextareaWordcountDirective } from './textarea-wordcount.directive';\r\nimport { NgControl } from '@angular/forms';\r\nimport { Directive, ElementRef, Renderer2, Injector, OnInit, Input,\r\n            AfterViewInit, OnDestroy, OnChanges, SimpleChanges, Optional } from '@angular/core';\r\nimport { EventManager } from '@angular/platform-browser';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { LocaleService } from '@farris/ui-locale';\r\n@Directive({\r\n    selector: '[textarea-zoom]',\r\n})\r\nexport class TextareaZoomDirective implements OnInit, AfterViewInit, OnDestroy, OnChanges {\r\n    @Input('textarea-zoom') useZoom = true;\r\n    @Input() dialogWidth = 500;\r\n    @Input() dialogHeight = 400;\r\n    @Input() fullscreen = false;\r\n    @Input() title = '';\r\n    @Input() value = '';\r\n\r\n    onMouseEnter = null;\r\n    onMouseLeave = null;\r\n    onClick = null;\r\n    altEnterHandler = null;\r\n\r\n    zoomButtonElement = null;\r\n    private messagerService: MessagerService;\r\n    private eventManager: EventManager;\r\n    private ngControl: NgControl;\r\n    private localeSer: LocaleService\r\n    constructor(private el: ElementRef, private render: Renderer2, private injector: Injector,\r\n                @Optional() private wordCountRef: TextareaWordcountDirective ) {\r\n        this.messagerService = this.injector.get(MessagerService);\r\n        this.eventManager = this.injector.get(EventManager);\r\n        this.localeSer = this.injector.get(LocaleService, null);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.ngControl = this.injector.get(NgControl, null);\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.useZoom && !changes.useZoom.isFirstChange()) {\r\n            if (this.useZoom) {\r\n                this.createZoomButton();\r\n            } else {\r\n                this.destroy();\r\n            }\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        if (this.useZoom) {\r\n            this.createZoomButton();\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy();\r\n    }\r\n\r\n    private destroy() {\r\n        if (this.onMouseEnter) {\r\n            this.onMouseEnter();\r\n        }\r\n        if (this.onMouseLeave) {\r\n            this.onMouseLeave();\r\n        }\r\n\r\n        if (this.onClick) {\r\n            this.onClick();\r\n        }\r\n        if (this.altEnterHandler) {\r\n            this.altEnterHandler();\r\n        }\r\n\r\n        if (this.zoomButtonElement) {\r\n            this.zoomButtonElement.remove();\r\n        }\r\n    }\r\n\r\n    private bindEventHandler() {\r\n        this.altEnterHandler = this.eventManager.addEventListener(this.el.nativeElement, 'keydown.alt.enter',\r\n        (event: KeyboardEvent) => {\r\n            const target = (event.target as any);\r\n            const val = target.value + '\\n';\r\n            target.value = val;\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            return false;\r\n        });\r\n    }\r\n\r\n    private createZoombarID() {\r\n        const tagName = this.el.nativeElement.tagName;\r\n        if (this.ngControl) {\r\n            const ctrlName = this.ngControl.name;\r\n            return `${tagName}_ZOOMBAR_${ctrlName}`;\r\n        } else {\r\n            if (this.el.nativeElement.id) {\r\n                return `${tagName}_ZOOMBAR_${this.el.nativeElement.id}`;\r\n            }\r\n        }\r\n        return '';\r\n    }\r\n\r\n    private createZoomButton() {\r\n        const zoomSPAN = this.render.createElement('span');\r\n        zoomSPAN.className = 'f-icon modal_maximize textarea-zoom';\r\n        zoomSPAN.title =  this.localeSer.getValue('text.zoom') || 'ç¹å»åå¼¹åºè¿è¡ç¼è¾';\r\n\r\n        \r\n\r\n        const id = this.createZoombarID();\r\n        if (id) {\r\n            zoomSPAN.id = id;\r\n        }\r\n\r\n        this.render.setStyle(zoomSPAN, 'position', 'absolute');\r\n        this.render.setStyle(zoomSPAN, 'top', '2px');\r\n\r\n        const { width } = this.el.nativeElement.getBoundingClientRect();\r\n        const { width: parentWidth } = this.el.nativeElement.parentElement.getBoundingClientRect();\r\n        if (parentWidth !== width) {\r\n            this.render.setStyle(zoomSPAN, 'left', `${width - 18}px`);\r\n        } else {\r\n            this.render.setStyle(zoomSPAN, 'right', '2px');\r\n        }\r\n        this.render.setStyle(zoomSPAN, 'cursor', 'pointer');\r\n\r\n        this.el.nativeElement.after(zoomSPAN);\r\n\r\n        this.zoomButtonElement = zoomSPAN;\r\n\r\n        this.onMouseEnter = this.render.listen(zoomSPAN, 'mouseenter', () => {\r\n            this.render.setStyle(zoomSPAN, 'fontSize', '22px');\r\n        });\r\n        this.onMouseLeave = this.render.listen(zoomSPAN, 'mouseleave', () => {\r\n            this.render.setStyle(zoomSPAN, 'fontSize', '1rem');\r\n        });\r\n\r\n        this.onClick = this.render.listen(zoomSPAN, 'click', () => {\r\n            this.zoomTextarea();\r\n        });\r\n    }\r\n\r\n    private zoomTextarea() {\r\n        const opts: any = {\r\n            width: this.dialogWidth || 500,\r\n            height: this.dialogHeight || 400,\r\n            showFontSize: true,\r\n            inputType: 'textarea',\r\n            saveSize: true    // å¯ç¨ä¸ªæ§åå­å¨ï¼localStorage\r\n        };\r\n\r\n        if (window.localStorage) {\r\n            const key = this.messagerService.getKeyString();\r\n            const val = localStorage.getItem(key);\r\n            if (val) {\r\n                const lastSetting = JSON.parse(val);\r\n                opts.fontSize = lastSetting.fontSize || 18;\r\n                opts.width = lastSetting.width || opts.width;\r\n                opts.height = lastSetting.height || opts.height;\r\n            }\r\n        }\r\n\r\n        const tagName = this.el.nativeElement.tagName;\r\n        let showText = this.el.nativeElement.value;\r\n        if (this.ngControl) {\r\n            showText = this.ngControl.value;\r\n        } else {\r\n            showText = this.el.nativeElement.value;\r\n        }\r\n\r\n        showText = this.value || showText;\r\n\r\n\r\n        if (tagName === 'FARRIS-TEXT' || this.el.nativeElement.readOnly || this.el.nativeElement.disabled) {\r\n            opts.readonly = true;\r\n            opts.showOkButton = false;\r\n            this.messagerService.prompt2(this.title, showText, opts).subscribe();\r\n        } else {\r\n            opts.maxLength = this.el.nativeElement.maxLength;\r\n            opts.enableWordCount = this.wordCountRef ? this.wordCountRef.useWordCount : false;\r\n            opts.countType = this.wordCountRef ? this.wordCountRef.countType : 'length';\r\n            this.messagerService.prompt2(this.title, showText, opts).subscribe(v => {\r\n                if (typeof v === 'boolean' && !v) {\r\n                    return;\r\n                } else {\r\n                    this.ngControl.control.setValue(v);\r\n                    if (this.wordCountRef) {\r\n                        this.wordCountRef.updateWordsCount();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n}\r\n","import {\r\n    Directive, ElementRef, Renderer2, Injector, OnInit, Input,\r\n    AfterViewInit, OnDestroy, OnChanges, SimpleChanges, Output, ViewContainerRef, TemplateRef, NgZone\r\n} from '@angular/core';\r\nimport { EventEmitter } from '@angular/core';\r\n\r\n\r\n@Directive({\r\n    selector: '[input-append]',\r\n})\r\nexport class InputAppendDirective implements OnInit, AfterViewInit, OnDestroy {\r\n    private _enableAppend = true;\r\n    // ç¸å½äºå¯ç¨ç¦ç¨æ­¤åè½\r\n    @Input('input-append')\r\n    set enableAppend(value: string | boolean) {\r\n        if (value === '' || value) {\r\n            this._enableAppend = true;\r\n            // éè¦\r\n            if (!this.appendWrapElement) {\r\n                this.createStruct();\r\n            }\r\n        } else {\r\n            this._enableAppend = false;\r\n            if (this.appendWrapElement) {\r\n                this.resetStruct();\r\n            }\r\n        }\r\n    }\r\n    get enableAppend() {\r\n        return this._enableAppend;\r\n    }\r\n    // è¿½å å°åªä¸ªç±»åä¸ TextBoxãMultiTextBoxã StaticText\r\n    @Input() inputAppendControlType = 'InputGroup';\r\n    // æ ¹æ®ç±»åä¸ä¸æ ·ï¼å¨æ§ä»¶å¤äºç¦ç¨ãåªè¯»æ¶ï¼å³å®é¢è²æ¯å¦å¯ç¨\r\n    // æä¸¤ç§ï¼æé® button ææ¬ text\r\n    private _appendType = 'button';\r\n    @Input()\r\n    set inputAppendType(value: string) {\r\n        if (value) {\r\n            if (['button', 'text'].findIndex(item => item == value) < 0) {\r\n                // ç±»åå¨æ¯æèå´å\r\n                value = 'button';\r\n            }\r\n            if (value != this._appendType) {\r\n                if (this.appendWrapElement) {\r\n                    // ç§»é¤åæ¥ï¼è¿½å æ°ç\r\n                    this.render.removeClass(this.appendWrapElement, 'input-append-' + this._appendType);\r\n                    this.render.addClass(this.appendWrapElement, 'input-append-' + value);\r\n                    if (this._appendType == 'button') {\r\n                        // åæ¥æ¯æé®\r\n                        if (this.clickHandler) {\r\n                            this.clickHandler();\r\n                            this.clickHandler = null;\r\n                        }\r\n                    } else {\r\n                        this.clickHandler = this.render.listen(this.appendWrapElement, 'click', (ev) => {\r\n                            this.inputAppendClickEvent.emit(ev);\r\n                        });\r\n                    }\r\n                }\r\n                this._appendType = value;\r\n            }\r\n        }\r\n\r\n    }\r\n    get inputAppendType() {\r\n        return this._appendType;\r\n    }\r\n    // è¿½å çææ¬\r\n    private _inputAppendText = '';\r\n    @Input()\r\n    set inputAppendText(value: string) {\r\n        if (value != this._inputAppendText) {\r\n            this._inputAppendText = value;\r\n            if (this.appendWrapElement && this._enableAppend) {\r\n                this.render.removeChild(this.appendWrapElement, this.appendTextElement);\r\n                this.appendTextElement.innerHTML = value;\r\n                this.render.appendChild(this.appendWrapElement, this.appendTextElement);\r\n            } else {\r\n                this.createStruct();\r\n            }\r\n        }\r\n    }\r\n    get inputAppendText() {\r\n        return this._inputAppendText;\r\n    }\r\n    // æ¨¡æ¿\r\n    // @Input() inputAppendTmpl: TemplateRef<any>;\r\n    private _disabled = false;\r\n    @Input()\r\n    set inputAppendDisabled(value) {\r\n        if (value != this._disabled) {\r\n            this._disabled = value;\r\n            if (this.appendWrapElement) {\r\n                value && this.render.addClass(this.appendWrapElement, this.disabledCls);\r\n                !value && this.render.removeClass(this.appendWrapElement, this.disabledCls);\r\n            }\r\n        }\r\n    }\r\n    get inputAppendDisabled() {\r\n        return this._disabled;\r\n    }\r\n\r\n    /*\r\n    * ææ¬ç¹å»äºä»¶\r\n    */\r\n    @Output() inputAppendClickEvent = new EventEmitter();\r\n    // æ è®°nativeçå¤å±\r\n    private elWrapElement = null;\r\n    // æ è®°åç´ \r\n    private appendWrapElement = null;\r\n    // ææ¶ä¸ç¨\r\n    private appendTextElement = null;\r\n    private clickHandler = null;\r\n    private disabledCls = 'f-state-disabled';\r\n    private ngZone: NgZone = null;\r\n    // private ngControl: NgControl;\r\n    constructor(private viewRef: ViewContainerRef, private el: ElementRef, private render: Renderer2, private injector: Injector) {\r\n        this.ngZone = this.injector.get(NgZone);\r\n    }\r\n\r\n    ngOnInit() {\r\n        //this.ngControl = this.injector.get(NgControl, null);\r\n    }\r\n\r\n\r\n    ngAfterViewInit() {\r\n        this.createStruct();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        //this.resetStruct();\r\n        if (this.clickHandler) {\r\n            this.clickHandler();\r\n            this.clickHandler = null;\r\n        }\r\n        if (this.appendWrapElement) {\r\n            this.appendWrapElement.remove();\r\n            this.appendWrapElement = null;\r\n        }\r\n        if (this.elWrapElement) {\r\n            this.elWrapElement.remove();\r\n            this.elWrapElement = null;\r\n        }\r\n    }\r\n    /**\r\n     * éç½®\r\n     */\r\n    private resetStruct() {\r\n        if (this.clickHandler) {\r\n            this.clickHandler();\r\n            this.clickHandler = null;\r\n        }\r\n        // åç±»åç§»é¤ä¸åæ°å¢å çç»æææ ·å¼\r\n        switch (this.inputAppendControlType) {\r\n            case 'StaticText':\r\n                this.render.removeClass(this.el.nativeElement, 'f-cmp-static-text-input-append');\r\n                break;\r\n            case 'TextBox':\r\n            case 'MultiTextBox':\r\n                if (this.elWrapElement) {\r\n                    let wrapParent = this.render.parentNode(this.elWrapElement);\r\n                    this.render.appendChild(wrapParent, this.el.nativeElement);\r\n                    this.elWrapElement.remove();\r\n                    this.elWrapElement = null;\r\n                }\r\n                break;\r\n        }\r\n        if (this.appendWrapElement) {\r\n            this.appendWrapElement.remove();\r\n            this.appendWrapElement = null;\r\n        }\r\n    }\r\n    /**\r\n     * åå»º\r\n     */\r\n    private createStruct() {\r\n        if (!this.inputAppendText || !this.enableAppend || this.appendWrapElement) {\r\n            return;\r\n        }\r\n        const buttonWrap = this.render.createElement('div');\r\n        buttonWrap.className = 'input-group-append input-append-wrapper';\r\n        buttonWrap.className += ' input-append-' + this.inputAppendType;\r\n        if (this._disabled) {\r\n            buttonWrap.className += ' ' + this.disabledCls;\r\n        }\r\n        const buttonTextWrap = this.render.createElement('div');\r\n        buttonTextWrap.className = 'input-group-text';\r\n        buttonTextWrap.innerHTML = this.inputAppendText;\r\n        this.appendTextElement = buttonTextWrap;\r\n        this.appendWrapElement = buttonWrap;\r\n        this.render.appendChild(buttonWrap, buttonTextWrap);\r\n        switch (this.inputAppendControlType) {\r\n            case 'StaticText':\r\n                // æ­¤æ¶è¿æ²¡æçæåé¨çæ ·å¼\r\n                // let textareaEl = this.el.nativeElement.querySelector('.f-form-control-textarea');\r\n                this.render.addClass(this.el.nativeElement, 'f-cmp-static-text-input-append' + (this._disabled ? ' ' + this.disabledCls : ''));\r\n                this.render.appendChild(this.el.nativeElement, buttonWrap);\r\n                break;\r\n            case 'TextBox':\r\n            case 'MultiTextBox':\r\n                let textParent = this.render.parentNode(this.el.nativeElement);\r\n                const inputWrap = this.render.createElement('div');\r\n                inputWrap.className = 'f-cmp-text-input-append' + (this._disabled ? ' ' + this.disabledCls : '');\r\n                if (this.el.nativeElement.outerHTML.indexOf('textarea') > -1) {\r\n                    inputWrap.className = 'f-cmp-textarea-input-append' + (this._disabled ? ' ' + this.disabledCls : '');\r\n                }\r\n                this.elWrapElement = inputWrap;\r\n                this.render.appendChild(inputWrap, this.el.nativeElement);\r\n                this.render.appendChild(inputWrap, buttonWrap);\r\n                this.render.appendChild(textParent, inputWrap);\r\n                break;\r\n            default:\r\n                // å­å¨ç±»ä¼¼ä¸æè¿æ ·çæ§ä»¶ï¼åé¨è°ç¨input-groupç»æè¿æ²¡æåå§å\r\n                let inputGroupEl = this.el.nativeElement.querySelector('.input-group');\r\n                if (inputGroupEl) {\r\n                    this.render.appendChild(inputGroupEl, buttonWrap);\r\n                } else {\r\n                    if (this.ngZone) {\r\n                        this.ngZone.runOutsideAngular(() => {\r\n                            setTimeout(() => {\r\n                                let inputGroupEl2 = this.el.nativeElement.querySelector('.input-group');\r\n                                this.render.appendChild(inputGroupEl2, buttonWrap);\r\n                            });\r\n                        });\r\n                    }\r\n                }\r\n\r\n        }\r\n\r\n        if (this.inputAppendType == 'button') {\r\n            this.clickHandler = this.render.listen(this.appendWrapElement, 'click', (ev) => {\r\n                this.inputAppendClickEvent.emit(ev);\r\n            });\r\n        }\r\n    }\r\n}\r\n","import { EventManager } from '@angular/platform-browser';\r\nimport { Directive, ElementRef, Injector, OnInit, AfterViewInit } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: 'shortcut-tab',\r\n})\r\nexport class ShortCutTabKeyDirective implements OnInit, AfterViewInit {\r\n\r\n    constructor(public el: ElementRef, public injector: Injector, private eventManager: EventManager) {}\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.eventManager.addEventListener(this.el.nativeElement, 'keydown',  (e: KeyboardEvent) => {\r\n            e.stopPropagation();\r\n            if (e.key === 'Tab') {\r\n                this.onTabKeydownHandler(e.target);\r\n            }\r\n        });\r\n    }\r\n\r\n    private onTabKeydownHandler(currentTarget) {\r\n        let allInputs = this.el.nativeElement.querySelectorAll('input,textarea');\r\n        allInputs = Array.from(allInputs);\r\n        const currentInputIndex = allInputs.findIndex(n => n === currentTarget);\r\n        let nextInputIndex = currentInputIndex + 1;\r\n        if (nextInputIndex >= allInputs.length) {\r\n            nextInputIndex = 0;\r\n        }\r\n        const nextInputTarget = allInputs[nextInputIndex];\r\n        if (nextInputTarget) {\r\n            setTimeout(() => {\r\n                nextInputTarget.focus();\r\n            });\r\n        }\r\n    }\r\n}\r\n","\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IdService, FarrisCommonModule } from '@farris/ui-common';\r\n\r\nimport { RadioComponent } from './radio/radio.component';\r\nimport { RadioButtonComponent } from './radio/radio-button.component';\r\nimport { RadioGroupComponent } from './radio/radio-group.component';\r\nimport { FarrisRadioGroupComponent } from './radio/radiogroup.component';\r\nimport { CheckboxComponent } from './checkbox/checkbox.component';\r\nimport { CheckboxGroupComponent } from './checkbox/checkbox-group.component';\r\nimport { FarrisCheckboxGroupComponent } from './checkbox/checkboxgroup.component';\r\nimport { TextareaAutoSizeDirective } from './textarea-autosize.directive';\r\nimport { TextareaZoomDirective } from './textarea-zoom.directive';\r\nimport {InputAppendDirective} from './input-append.directive';\r\nimport { MessagerModule } from '@farris/ui-messager';\r\nimport { ShortCutTabKeyDirective } from './shortcut-tab.directive';\r\nimport { TextareaWordcountDirective } from './textarea-wordcount.directive';\r\nimport { LocaleModule } from '@farris/ui-locale';\r\n@NgModule({\r\n    declarations: [\r\n        RadioComponent,\r\n        RadioGroupComponent,\r\n        CheckboxComponent,\r\n        CheckboxGroupComponent,\r\n        RadioButtonComponent,\r\n        FarrisRadioGroupComponent,\r\n        FarrisCheckboxGroupComponent,\r\n        TextareaAutoSizeDirective,\r\n        TextareaZoomDirective,\r\n        ShortCutTabKeyDirective,\r\n        TextareaWordcountDirective,\r\n        InputAppendDirective\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        MessagerModule.forRoot(),\r\n        FarrisCommonModule.forRoot(),\r\n        LocaleModule\r\n    ],\r\n    exports: [\r\n        RadioComponent,\r\n        RadioGroupComponent,\r\n        CheckboxComponent,\r\n        CheckboxGroupComponent,\r\n        RadioButtonComponent,\r\n        FarrisRadioGroupComponent,\r\n        FarrisCheckboxGroupComponent,\r\n        TextareaAutoSizeDirective,\r\n        TextareaZoomDirective,\r\n        ShortCutTabKeyDirective,\r\n        TextareaWordcountDirective,\r\n        InputAppendDirective\r\n    ],\r\n    providers: [IdService],\r\n})\r\nexport class FarrisFormsModule { }\r\n"],"names":[],"mappings":"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"}
