/**
 * @fileoverview added by tsickle
 * Generated from: lib/ffilepreview-adapt-unifile.directive.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, HostListener, Input } from '@angular/core';
import { FfilepreviewAdaptUnifileService } from './ffilepreview-adapt-unifile.service';
var FFilePreviewAdaptUnifileDirective = /** @class */ (function () {
    function FFilePreviewAdaptUnifileDirective(previewSer) {
        this.previewSer = previewSer;
        /**
         * 处理扩展的服务器端配置
         */
        this._extendServeConfig = null;
    }
    /**
     * 捕获预览事件
     * @param fileInfo
     */
    /**
     * 捕获预览事件
     * @param {?} fileInfo
     * @return {?}
     */
    FFilePreviewAdaptUnifileDirective.prototype.filePreviewEventHandler = /**
     * 捕获预览事件
     * @param {?} fileInfo
     * @return {?}
     */
    function (fileInfo) {
        /** @type {?} */
        var previewOpts = Object.assign(this.extendServerConfig || {}, {
            options: {
                showDownload: !!fileInfo.showDownload,
                showHeader: true,
                showFileList: true
            }
        });
        this.previewSer.previewFile(fileInfo, previewOpts);
    };
    /**
     * 捕获下载事件
     * @param fileInfo
     */
    /**
     * 捕获下载事件
     * @param {?} downloadEv
     * @return {?}
     */
    FFilePreviewAdaptUnifileDirective.prototype.fileDownloadEventHandler = /**
     * 捕获下载事件
     * @param {?} downloadEv
     * @return {?}
     */
    function (downloadEv) {
        // 如果是批量下载, downloadEv={fileInfos:[],name:}
        if (downloadEv && downloadEv['fileInfos'].length > 0) {
            if (downloadEv['fileInfos'].length > 1) {
                this.previewSer.multiDownloadFilesWidthName(downloadEv['fileInfos'], downloadEv['name'], this.extendServerConfig);
            }
            else {
                this.previewSer.downloadFile(downloadEv['fileInfos'][0], this.extendServerConfig);
            }
        }
    };
    Object.defineProperty(FFilePreviewAdaptUnifileDirective.prototype, "extendServerConfig", {
        get: /**
         * @return {?}
         */
        function () {
            return this._extendServeConfig;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._extendServeConfig = value;
            this.previewSer.setPreviwExtendServerConfig(value);
        },
        enumerable: true,
        configurable: true
    });
    FFilePreviewAdaptUnifileDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[fFilePreviewAdaptUnifile]',
                    providers: [FfilepreviewAdaptUnifileService]
                },] }
    ];
    /** @nocollapse */
    FFilePreviewAdaptUnifileDirective.ctorParameters = function () { return [
        { type: FfilepreviewAdaptUnifileService }
    ]; };
    FFilePreviewAdaptUnifileDirective.propDecorators = {
        filePreviewEventHandler: [{ type: HostListener, args: ['filePreviewEvent', ['$event'],] }],
        fileDownloadEventHandler: [{ type: HostListener, args: ['fileDownloadEvent', ['$event'],] }],
        extendServerConfig: [{ type: Input }]
    };
    return FFilePreviewAdaptUnifileDirective;
}());
export { FFilePreviewAdaptUnifileDirective };
if (false) {
    /**
     * 处理扩展的服务器端配置
     * @type {?}
     * @private
     */
    FFilePreviewAdaptUnifileDirective.prototype._extendServeConfig;
    /**
     * @type {?}
     * @private
     */
    FFilePreviewAdaptUnifileDirective.prototype.previewSer;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmZpbGVwcmV2aWV3LWFkYXB0LXVuaWZpbGUuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy9leHRlbmQtZmlsZXVwbG9hZC1hZGFwdC11bmlmaWxlLyIsInNvdXJjZXMiOlsibGliL2ZmaWxlcHJldmlldy1hZGFwdC11bmlmaWxlLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMvRCxPQUFPLEVBQUUsK0JBQStCLEVBQUUsTUFBTSxzQ0FBc0MsQ0FBQztBQUV2RjtJQStDSSwyQ0FBb0IsVUFBMkM7UUFBM0MsZUFBVSxHQUFWLFVBQVUsQ0FBaUM7Ozs7UUFUdkQsdUJBQWtCLEdBQUMsSUFBSSxDQUFDO0lBV2hDLENBQUM7SUE1Q0Q7OztPQUdHOzs7Ozs7SUFFSCxtRUFBdUI7Ozs7O0lBRHZCLFVBQ3dCLFFBQVE7O1lBQ3RCLFdBQVcsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxrQkFBa0IsSUFBSSxFQUFFLEVBQUU7WUFDN0QsT0FBTyxFQUFFO2dCQUNMLFlBQVksRUFBRSxDQUFDLENBQUMsUUFBUSxDQUFDLFlBQVk7Z0JBQ3JDLFVBQVUsRUFBRSxJQUFJO2dCQUNoQixZQUFZLEVBQUUsSUFBSTthQUNyQjtTQUFDLENBQUM7UUFDUCxJQUFJLENBQUMsVUFBVSxDQUFDLFdBQVcsQ0FBQyxRQUFRLEVBQUUsV0FBVyxDQUFDLENBQUM7SUFDdkQsQ0FBQztJQUNEOzs7T0FHRzs7Ozs7O0lBRUgsb0VBQXdCOzs7OztJQUR4QixVQUN5QixVQUFVO1FBQy9CLDJDQUEyQztRQUMzQyxJQUFJLFVBQVUsSUFBRSxVQUFVLENBQUMsV0FBVyxDQUFDLENBQUMsTUFBTSxHQUFDLENBQUMsRUFBRTtZQUM5QyxJQUFJLFVBQVUsQ0FBQyxXQUFXLENBQUMsQ0FBQyxNQUFNLEdBQUMsQ0FBQyxFQUFFO2dCQUNsQyxJQUFJLENBQUMsVUFBVSxDQUFDLDJCQUEyQixDQUFDLFVBQVUsQ0FBQyxXQUFXLENBQUMsRUFBQyxVQUFVLENBQUMsTUFBTSxDQUFDLEVBQUUsSUFBSSxDQUFDLGtCQUFrQixDQUFDLENBQUM7YUFDcEg7aUJBQUk7Z0JBQ0QsSUFBSSxDQUFDLFVBQVUsQ0FBQyxZQUFZLENBQUMsVUFBVSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO2FBQ3JGO1NBQ0o7SUFDTCxDQUFDO0lBTUQsc0JBQ0ksaUVBQWtCOzs7O1FBSXRCO1lBQ0ksT0FBTyxJQUFJLENBQUMsa0JBQWtCLENBQUM7UUFDbkMsQ0FBQzs7Ozs7UUFQRCxVQUN1QixLQUFLO1lBQ3hCLElBQUksQ0FBQyxrQkFBa0IsR0FBQyxLQUFLLENBQUM7WUFDOUIsSUFBSSxDQUFDLFVBQVUsQ0FBQywyQkFBMkIsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUN2RCxDQUFDOzs7T0FBQTs7Z0JBM0NKLFNBQVMsU0FBQztvQkFDUCxRQUFRLEVBQUUsNEJBQTRCO29CQUN0QyxTQUFTLEVBQUMsQ0FBQywrQkFBK0IsQ0FBQztpQkFDOUM7Ozs7Z0JBTFEsK0JBQStCOzs7MENBV25DLFlBQVksU0FBQyxrQkFBa0IsRUFBRSxDQUFDLFFBQVEsQ0FBQzsyQ0FjM0MsWUFBWSxTQUFDLG1CQUFtQixFQUFFLENBQUMsUUFBUSxDQUFDO3FDQWdCNUMsS0FBSzs7SUFZVix3Q0FBQztDQUFBLEFBbkRELElBbURDO1NBL0NZLGlDQUFpQzs7Ozs7OztJQWtDMUMsK0RBQWdDOzs7OztJQVNwQix1REFBbUQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIEhvc3RMaXN0ZW5lciwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgRmZpbGVwcmV2aWV3QWRhcHRVbmlmaWxlU2VydmljZSB9IGZyb20gJy4vZmZpbGVwcmV2aWV3LWFkYXB0LXVuaWZpbGUuc2VydmljZSc7XHJcblxyXG5ARGlyZWN0aXZlKHtcclxuICAgIHNlbGVjdG9yOiAnW2ZGaWxlUHJldmlld0FkYXB0VW5pZmlsZV0nLFxyXG4gICAgcHJvdmlkZXJzOltGZmlsZXByZXZpZXdBZGFwdFVuaWZpbGVTZXJ2aWNlXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgRkZpbGVQcmV2aWV3QWRhcHRVbmlmaWxlRGlyZWN0aXZlIHtcclxuICAgIC8qKlxyXG4gICAgICog5o2V6I636aKE6KeI5LqL5Lu2XHJcbiAgICAgKiBAcGFyYW0gZmlsZUluZm8gXHJcbiAgICAgKi9cclxuICAgIEBIb3N0TGlzdGVuZXIoJ2ZpbGVQcmV2aWV3RXZlbnQnLCBbJyRldmVudCddKVxyXG4gICAgZmlsZVByZXZpZXdFdmVudEhhbmRsZXIoZmlsZUluZm8pIHtcclxuICAgICAgICBjb25zdCBwcmV2aWV3T3B0cyA9IE9iamVjdC5hc3NpZ24odGhpcy5leHRlbmRTZXJ2ZXJDb25maWcgfHwge30sIHtcclxuICAgICAgICAgICAgb3B0aW9uczoge1xyXG4gICAgICAgICAgICAgICAgc2hvd0Rvd25sb2FkOiAhIWZpbGVJbmZvLnNob3dEb3dubG9hZCxcclxuICAgICAgICAgICAgICAgIHNob3dIZWFkZXI6IHRydWUsXHJcbiAgICAgICAgICAgICAgICBzaG93RmlsZUxpc3Q6IHRydWVcclxuICAgICAgICAgICAgfX0pO1xyXG4gICAgICAgIHRoaXMucHJldmlld1Nlci5wcmV2aWV3RmlsZShmaWxlSW5mbywgcHJldmlld09wdHMpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiDmjZXojrfkuIvovb3kuovku7ZcclxuICAgICAqIEBwYXJhbSBmaWxlSW5mbyBcclxuICAgICAqL1xyXG4gICAgQEhvc3RMaXN0ZW5lcignZmlsZURvd25sb2FkRXZlbnQnLCBbJyRldmVudCddKVxyXG4gICAgZmlsZURvd25sb2FkRXZlbnRIYW5kbGVyKGRvd25sb2FkRXYpIHtcclxuICAgICAgICAvLyDlpoLmnpzmmK/mibnph4/kuIvovb0sIGRvd25sb2FkRXY9e2ZpbGVJbmZvczpbXSxuYW1lOn1cclxuICAgICAgICBpZiAoZG93bmxvYWRFdiYmZG93bmxvYWRFdlsnZmlsZUluZm9zJ10ubGVuZ3RoPjApIHtcclxuICAgICAgICAgICAgaWYgKGRvd25sb2FkRXZbJ2ZpbGVJbmZvcyddLmxlbmd0aD4xKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnByZXZpZXdTZXIubXVsdGlEb3dubG9hZEZpbGVzV2lkdGhOYW1lKGRvd25sb2FkRXZbJ2ZpbGVJbmZvcyddLGRvd25sb2FkRXZbJ25hbWUnXSwgdGhpcy5leHRlbmRTZXJ2ZXJDb25maWcpO1xyXG4gICAgICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgICAgIHRoaXMucHJldmlld1Nlci5kb3dubG9hZEZpbGUoZG93bmxvYWRFdlsnZmlsZUluZm9zJ11bMF0sIHRoaXMuZXh0ZW5kU2VydmVyQ29uZmlnKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0gICAgICAgIFxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5aSE55CG5omp5bGV55qE5pyN5Yqh5Zmo56uv6YWN572uXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgX2V4dGVuZFNlcnZlQ29uZmlnPW51bGw7XHJcbiAgICBASW5wdXQoKSBcclxuICAgIHNldCBleHRlbmRTZXJ2ZXJDb25maWcodmFsdWUpe1xyXG4gICAgICAgIHRoaXMuX2V4dGVuZFNlcnZlQ29uZmlnPXZhbHVlO1xyXG4gICAgICAgIHRoaXMucHJldmlld1Nlci5zZXRQcmV2aXdFeHRlbmRTZXJ2ZXJDb25maWcodmFsdWUpO1xyXG4gICAgfSBcclxuICAgIGdldCBleHRlbmRTZXJ2ZXJDb25maWcoKXtcclxuICAgICAgICByZXR1cm4gdGhpcy5fZXh0ZW5kU2VydmVDb25maWc7XHJcbiAgICB9XHJcbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIHByZXZpZXdTZXI6IEZmaWxlcHJldmlld0FkYXB0VW5pZmlsZVNlcnZpY2UpIHtcclxuXHJcbiAgICB9XHJcblxyXG59XHJcbiJdfQ==