import { Injectable, Injector } from "@angular/core";
import { AppContext, FrameContext, Repository } from "@farris/devkit";
import { BindingPathService } from "./binding-path.service";
import { FormControlService } from './form-control.service';
var FrameContextService = /** @class */ (function () {
    function FrameContextService(injector, appContext, frameContext, repository, bindingPathService, formControlService) {
        this.injector = injector;
        this.appContext = appContext;
        this.frameContext = frameContext;
        this.repository = repository;
        this.bindingPathService = bindingPathService;
        this.formControlService = formControlService;
    }
    /**
       * 通过BE表名获取对应的frameContext
       * @param tableName
       * @returns
       */
    FrameContextService.prototype.getFrameContextsByTableName = function (tableName) {
        if (!tableName) {
            throw new Error('tableName 不能为空。');
        }
        var dataTypeInfo = this.repository && this.repository.entityTypeInfo || null;
        if (!dataTypeInfo) {
            return null;
        }
        var bindingPaths = [];
        this.bindingPathService.getBindingPathsByTableName(dataTypeInfo, tableName, bindingPaths);
        var frameContexts = this.appContext && this.appContext.frameContextManager.getFrameContexts() || [];
        if (!frameContexts || frameContexts.length === 0) {
            return null;
        }
        return frameContexts.filter(function (frameContext) { return frameContext && frameContext.viewModel && frameContext.viewModel.bindingPath.split('/').filter(function (p) { return p; }).join('/') === bindingPaths.join('/'); });
    };
    /**
     * 根据字段完整路径获取所在的上下文
     * @param propertyPath
     * @param separtor
     * @returns
     */
    FrameContextService.prototype.getFrameContextsByPropertyPath = function (propertyPath, separtor) {
        if (separtor === void 0) { separtor = '/'; }
        if (!propertyPath) {
            throw new Error('propertyPath 不能为空。');
        }
        var frameContexts = this.appContext && this.appContext.frameContextManager.getFrameContexts() || [];
        return frameContexts.filter(function (frameContext) {
            var formControls = frameContext && frameContext.form && frameContext.form.ngFormControls || {};
            var bindingPath = frameContext && frameContext.viewModel && frameContext.viewModel.bindingPath || '';
            if (formControls && Object.keys(formControls).length > 0) {
                var key = Object.keys(formControls).find(function (key) {
                    var formControl = formControls[key];
                    if (!formControl || !formControl.binding) {
                        return false;
                    }
                    var bindings = formControl.binding.split('.').filter(function (p) { return p; });
                    var bindingPaths = bindingPath.split('/').filter(function (p) { return p; });
                    var fullPath = bindingPaths.concat(bindings);
                    return propertyPath.split(separtor).filter(function (p) { return p; }).join('/') === fullPath.join('/');
                });
                return key ? true : false;
            }
            return false;
        });
    };
    /**
     * 通过BE字段名获取字段的bindingPath
     * @param bindingPaths 绑定路径
     * @param columnName BE字段名
     * @returns
     */
    FrameContextService.prototype.getFrameContextsByColumnName = function (bindingPaths, columnName) {
        var _this = this;
        if (!bindingPaths) {
            throw new Error('bindingPath 不能为空。');
        }
        if (!columnName) {
            throw new Error('columnName 不能为空。');
        }
        bindingPaths = bindingPaths.filter(function (p) { return p; });
        var entityTypeInfo = this.repository && this.repository.entityTypeInfo || null;
        if (!entityTypeInfo) {
            return null;
        }
        var dataTypeInfo = entityTypeInfo.getTypeInfoByPath(bindingPaths);
        var dataPropInfos = dataTypeInfo && dataTypeInfo.getPropInfos() || [];
        var columnPropInfo = dataPropInfos.find(function (dataPropInfo) { return dataPropInfo.metadataInfo && (dataPropInfo.metadataInfo.originalDataField === columnName || dataPropInfo.metadataInfo.dataField === columnName); });
        if (!columnPropInfo || !columnPropInfo.metadataInfo) {
            return null;
        }
        var frameContexts = this.appContext.frameContextManager.getFrameContexts();
        return frameContexts.filter(function (frameContext) {
            var ngFormControls = _this.formControlService.getFormControlsByFrameContext(frameContext);
            if (!ngFormControls || Object.keys(ngFormControls).length < 1) {
                return false;
            }
            var currentBindingPaths = _this.bindingPathService.getBindingPathsByFrameContext(frameContext) || [];
            var isValidFrameContext = currentBindingPaths.join('/') === bindingPaths.join('/');
            if (!isValidFrameContext) {
                return false;
            }
            var ngFormControl = Object.values(frameContext.viewModel.form.ngFormControls).find(function (item) { return item.binding === columnPropInfo.metadataInfo.path; });
            return ngFormControl ? true : false;
        });
    };
    /**
     * 通过绑定路径获取对应的组件上下文数组
     * @param bindingPath bindingPath字符串
     * @param namespace ns,默认为''
     */
    FrameContextService.prototype.getFrameContextsByBindingPath = function (bindingPath, namespace) {
        if (namespace === void 0) { namespace = ''; }
        if (Array.isArray(bindingPath)) {
            bindingPath = bindingPath.join('/');
        }
        var frameContexts = this.appContext && this.appContext.frameContextManager.getFrameContexts() || [];
        return frameContexts.filter(function (frameContext) { return frameContext && frameContext.namespace === namespace && frameContext.viewModel.bindingPath === bindingPath; });
    };
    FrameContextService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    FrameContextService.ctorParameters = function () { return [
        { type: Injector },
        { type: AppContext },
        { type: FrameContext },
        { type: Repository },
        { type: BindingPathService },
        { type: FormControlService }
    ]; };
    return FrameContextService;
}());
export { FrameContextService };
//# sourceMappingURL=data:application/json;base64,