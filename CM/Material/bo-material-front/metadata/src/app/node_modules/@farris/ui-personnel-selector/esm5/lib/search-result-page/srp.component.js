/**
 * @fileoverview added by tsickle
 * Generated from: lib/search-result-page/srp.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, EventEmitter, Output, ChangeDetectorRef, Optional, Injector } from '@angular/core';
import { noDataImg } from '../../assets/resource';
import { NotifyService } from '@farris/ui-notify';
import { FavoritesTool } from '../../utils/favorites.tool';
var SearchResultComponent = /** @class */ (function () {
    function SearchResultComponent(notifyService, favoritesTool, injector) {
        this.notifyService = notifyService;
        this.favoritesTool = favoritesTool;
        this.injector = injector;
        this.selectionsChange = new EventEmitter();
        this.closePanelChange = new EventEmitter();
        this.pageIndexChange = new EventEmitter();
        // 当前搜索页中所有数据已被勾选
        this.allChecked = false;
        // 右侧已选人员数据
        this.selections = [];
        this.cloneSelections = [];
        this.allIndexId = 'allIndexId';
        this.noDataImg = noDataImg;
        // 搜索结果，用于页面展示
        this.items = [];
        this.recentContactsList = [];
        this.favoritesList = [];
        // 搜索结果页索引
        this.pageIndex = 1;
        // 是否显示用户编号
        this.showUserCode = true;
        this.allIndexId = Math.random().toString(16).substring(3, 12);
        this.cdRef = this.injector.get(ChangeDetectorRef);
    }
    Object.defineProperty(SearchResultComponent.prototype, "data", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this.items = value;
            this.loadSearchResult();
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    SearchResultComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        // 兼容老表单
        if (this.favoritesTool) {
            this.favoritesTool.favoritesSubject.subscribe((/**
             * @param {?} data
             * @return {?}
             */
            function (data) {
                _this.favoritesList = data;
                if (_this.enableFavorites) {
                    _this.loadSearchResult();
                }
            }));
        }
    };
    /**
     * @return {?}
     */
    SearchResultComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @param {?} dir
     * @param {?} num
     * @return {?}
     */
    SearchResultComponent.prototype.turnOverPage = /**
     * @param {?} dir
     * @param {?} num
     * @return {?}
     */
    function (dir, num) {
        if ((dir === 'pre' && this.pageIndex === 1) || (dir === 'next' && this.pageIndex === this.pageTotal)) {
            return;
        }
        this.pageIndex = this.pageIndex + num;
        this.switchPage({ pageIndex: this.pageIndex });
    };
    /**
     * @param {?} inputEl
     * @param {?} maxNumber
     * @return {?}
     */
    SearchResultComponent.prototype.beforePageIndexChange = /**
     * @param {?} inputEl
     * @param {?} maxNumber
     * @return {?}
     */
    function (inputEl, maxNumber) {
        /** @type {?} */
        var target = (/** @type {?} */ (inputEl.target));
        /** @type {?} */
        var currentPageNumber = Number(target.value);
        if (currentPageNumber > maxNumber) {
            target.value = maxNumber;
        }
        else {
            if (currentPageNumber < 1) {
                target.value = 1;
            }
        }
        this.pageIndex = Number(target.value);
    };
    /**
     * @param {?} size
     * @return {?}
     */
    SearchResultComponent.prototype.switchPage = /**
     * @param {?} size
     * @return {?}
     */
    function (size) {
        this.pageIndexChange.emit(size);
    };
    /**
     * @return {?}
     */
    SearchResultComponent.prototype.closePanel = /**
     * @return {?}
     */
    function () {
        this.closePanelChange.emit(true);
    };
    // 目前点击触发按钮已被去掉，无法被触发 2022.3.15
    // 目前点击触发按钮已被去掉，无法被触发 2022.3.15
    /**
     * @return {?}
     */
    SearchResultComponent.prototype.toggleAll = 
    // 目前点击触发按钮已被去掉，无法被触发 2022.3.15
    /**
     * @return {?}
     */
    function () {
        if (!this.allChecked) {
            this.checkAll();
        }
        else {
            this.unCheckAll();
        }
        this.emitSelections();
    };
    /**
     * @param {?} data
     * @return {?}
     */
    SearchResultComponent.prototype.toggleOne = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        if (data.checked) {
            this.unSelectLine(data);
        }
        else {
            this.selectLine(data);
        }
        this.emitSelections();
    };
    /**
     * 用于数据展示
     */
    /**
     * 用于数据展示
     * @return {?}
     */
    SearchResultComponent.prototype.loadSearchResult = /**
     * 用于数据展示
     * @return {?}
     */
    function () {
        var _this = this;
        this.items.forEach((/**
         * @param {?} res
         * @return {?}
         */
        function (res) {
            /** @type {?} */
            var indexId = Math.random().toString(16).substring(3, 10);
            res.checked = false;
            res.inFavorites = false;
            res.indexId = indexId;
            if (_this._isInArray(res[_this.idField], _this.idField, _this.selections) !== -1) {
                res.checked = true;
            }
            if (_this._isInArray(res[_this.idField], _this.idField, _this.favoritesList) !== -1) {
                res.inFavorites = true;
            }
            res.displayName = !!_this.showUserCode ? ('[' + res.code + ']' + res.name) : res.name;
        }));
        this.items = this.items.slice();
        this.toggleChecked();
    };
    /**
     * 全选后处理
     * @param dataArr 全选的值
     * 由toggleAll()转调，目前无法被触发 2022.3.15
     */
    /**
     * 全选后处理
     * @return {?}
     */
    SearchResultComponent.prototype.checkAll = /**
     * 全选后处理
     * @return {?}
     */
    function () {
        var _this = this;
        this.items.forEach((/**
         * @param {?} item
         * @return {?}
         */
        function (item) {
            _this._insertOneIntoSelections(item);
            item.checked = true;
        }));
    };
    /**
     * 全部取消
     * @param dataArr 取消的数据
     * @returns void
     * 由toggleAll()转调，目前无法被触发 2022.3.15
     */
    /**
     * 全部取消
     * @return {?} void
     * 由toggleAll()转调，目前无法被触发 2022.3.15
     */
    SearchResultComponent.prototype.unCheckAll = /**
     * 全部取消
     * @return {?} void
     * 由toggleAll()转调，目前无法被触发 2022.3.15
     */
    function () {
        var _this = this;
        this.items.forEach((/**
         * @param {?} item
         * @return {?}
         */
        function (item) {
            _this.selections.forEach((/**
             * @param {?} selection
             * @param {?} index
             * @return {?}
             */
            function (selection, index) {
                if (item[_this.idField] === selection[_this.idField]) {
                    _this.selections.splice(index, 1);
                }
            }));
            item.checked = false;
        }));
    };
    /**
     * 当前行选中
     * @param data 当前行的数据（）
     */
    /**
     * 当前行选中
     * @param {?} data 当前行的数据（）
     * @return {?}
     */
    SearchResultComponent.prototype.selectLine = /**
     * 当前行选中
     * @param {?} data 当前行的数据（）
     * @return {?}
     */
    function (data) {
        if (this.multiSelect) {
            this._insertOneIntoSelections(data);
        }
        else {
            this.selections = [];
            this.items.forEach((/**
             * @param {?} item
             * @return {?}
             */
            function (item) {
                if (item.checked) {
                    item.checked = false;
                }
            }));
            this._insertOneIntoSelections(data);
        }
        if (this.isAllChecked()) {
            this.allChecked = true;
        }
    };
    /**
     * 单选取消选中
     * @param data 取消选中行
     */
    /**
     * 单选取消选中
     * @param {?} data 取消选中行
     * @return {?}
     */
    SearchResultComponent.prototype.unSelectLine = /**
     * 单选取消选中
     * @param {?} data 取消选中行
     * @return {?}
     */
    function (data) {
        /** @type {?} */
        var index = this._isInArray(data[this.idField], this.idField, this.selections);
        if (index > -1) {
            this.selections.splice(index, 1);
        }
        if (this.allChecked) {
            this.allChecked = false;
        }
    };
    /**
     * @private
     * @return {?}
     */
    SearchResultComponent.prototype.emitSelections = /**
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var emitObj = {
            selections: this.selections,
            token: 'recent'
        };
        this.selectionsChange.emit(emitObj);
    };
    /**
     * @param {?} e
     * @param {?} item
     * @return {?}
     */
    SearchResultComponent.prototype.toggleFavorites = /**
     * @param {?} e
     * @param {?} item
     * @return {?}
     */
    function (e, item) {
        this.favoritesTool.toggleFavorites(e, item);
    };
    /**
     *  取消选中
     * @param $event 取消勾选的数据
     */
    /**
     *  取消选中
     * @param {?} $event 取消勾选的数据
     * @return {?}
     */
    SearchResultComponent.prototype.cancelSelections = /**
     *  取消选中
     * @param {?} $event 取消勾选的数据
     * @return {?}
     */
    function ($event) {
        var _this = this;
        if (this.items.findIndex((/**
         * @param {?} item
         * @return {?}
         */
        function (item) { return item[_this.idField] === $event.id; })) === -1) {
            return;
        }
        this.items.forEach((/**
         * @param {?} item
         * @return {?}
         */
        function (item) {
            if (item[_this.idField] === $event.id) {
                item.checked = false;
            }
        }));
        this.selections.forEach((/**
         * @param {?} selection
         * @param {?} index
         * @return {?}
         */
        function (selection, index) {
            if ($event.id === selection[_this.idField]) {
                _this.selections.splice(index, 1);
            }
        }));
        this.allChecked = false;
    };
    /**
     * 全部取消勾选
     */
    /**
     * 全部取消勾选
     * @return {?}
     */
    SearchResultComponent.prototype.clearCheckeds = /**
     * 全部取消勾选
     * @return {?}
     */
    function () {
        this.items.forEach((/**
         * @param {?} item
         * @return {?}
         */
        function (item) {
            item.checked = false;
        }));
        this.allChecked = false;
        this.selections = [];
    };
    /**
     * 选中并插入当前行数据到右侧
     * @param data 当前行的数据
     * @param collection 暂存当前数据的集合
     */
    /**
     * 选中并插入当前行数据到右侧
     * @param {?} data 当前行的数据
     * @return {?}
     */
    SearchResultComponent.prototype._insertOneIntoSelections = /**
     * 选中并插入当前行数据到右侧
     * @param {?} data 当前行的数据
     * @return {?}
     */
    function (data) {
        // 如果当前数据已经移入右侧数据，则返回。
        if (this._isInArray(data[this.idField], this.idField, this.selections) > -1) {
            return;
        }
        this.selections.push(data);
        this.selections = this.selections.slice();
    };
    /**
     * 判断是否在内
     * @param value value
     * @param field field
     * @param array array
     * @returns 位置索引
     */
    /**
     * 判断是否在内
     * @param {?} value value
     * @param {?} field field
     * @param {?} array array
     * @return {?} 位置索引
     */
    SearchResultComponent.prototype._isInArray = /**
     * 判断是否在内
     * @param {?} value value
     * @param {?} field field
     * @param {?} array array
     * @return {?} 位置索引
     */
    function (value, field, array) {
        if (!field || !value) {
            throw new Error(this.validElementsInfo);
        }
        return array.findIndex((/**
         * @param {?} item
         * @return {?}
         */
        function (item) { return value === item[field]; }));
    };
    /**
     * 翻页检查：人员展示区的勾选状态与已选人员区是否对应
     */
    /**
     * 翻页检查：人员展示区的勾选状态与已选人员区是否对应
     * @return {?}
     */
    SearchResultComponent.prototype.toggleChecked = /**
     * 翻页检查：人员展示区的勾选状态与已选人员区是否对应
     * @return {?}
     */
    function () {
        var _this = this;
        this.items.forEach((/**
         * @param {?} item
         * @return {?}
         */
        function (item) {
            if (_this._isInArray(item[_this.idField], _this.idField, _this.selections) > -1) {
                item.checked = true;
            }
            else {
                item.checked = false;
            }
        }));
        if (this.isAllChecked()) {
            this.allChecked = true;
        }
        else {
            this.allChecked = false;
        }
    };
    /**
     * @private
     * @return {?}
     */
    SearchResultComponent.prototype.isAllChecked = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var count = 0;
        /** @type {?} */
        var allChecked = false;
        this.items.forEach((/**
         * @param {?} item
         * @return {?}
         */
        function (item) {
            _this.selections.forEach((/**
             * @param {?} selection
             * @return {?}
             */
            function (selection) {
                if (item[_this.idField] === selection[_this.idField]) {
                    count += 1;
                }
            }));
        }));
        if (this.items.length === count && count > 0) {
            allChecked = true;
        }
        return allChecked;
    };
    /**
     * @param {?} index
     * @param {?} item
     * @return {?}
     */
    SearchResultComponent.prototype.trackByFn = /**
     * @param {?} index
     * @param {?} item
     * @return {?}
     */
    function (index, item) {
        return index;
    };
    SearchResultComponent.decorators = [
        { type: Component, args: [{
                    selector: 'lib-search-result',
                    template: "<div class=\"candidate\">\r\n    <div class=\"candidate-title\">\r\n        <span>{{'personnelSelector.searchPage.firstResultText' | locale}}{{itemTotalCount}}{{'personnelSelector.searchPage.lastResultText' | locale}}</span>\r\n        <!-- <div class=\"custom-control custom-checkbox mb-2\" *ngIf=\"multiSelect && items.length > 0\">\r\n            <input class=\"custom-control-input\" [id]=\"allIndexId\" type=\"checkbox\" [(ngModel)]=\"allChecked\">\r\n            <label class=\"custom-control-label\" [for]=\"allIndexId\" (click)=\"toggleAll()\">\u5168\u9009</label>\r\n        </div> -->\r\n        <span class=\"f-icon modal_close\" (click)=\"closePanel()\" title=\"{{'personnelSelector.searchPage.close' | locale}}\"></span>\r\n    </div>\r\n    <perfect-scrollbar>\r\n        <div class=\"candidate-content\">\r\n            <div *ngFor=\"let data of items; let i = index;trackBy: trackByFn\" class=\"s-selectedPerson\">\r\n                <div class=\"custom-control custom-checkbox mb-2\">\r\n                    <input class=\"custom-control-input\" [id]=\"data.indexId\" type=\"checkbox\" [(ngModel)]=\"data.checked\">\r\n                    <label class=\"custom-control-label\" [for]=\"data.indexId\" (click)=\"toggleOne(data)\">\r\n                        <div style=\"display: flex; height: 32px; margin: -21px 0 0 24px;\">\r\n                            <farris-avatar [avatarWidth]=\"35\" [avatarHeight]=\"35\" [cover]=\"data.ext1\" [readonly]=\"true\">\r\n                            </farris-avatar>\r\n                            <div style=\"margin-left: 11px; margin-top: -2px;  padding-right: 10px; overflow: hidden;\">\r\n                                <p class=\"candidate-content-title\" title=\"{{data.displayName}}\">\r\n                                    {{data.displayName}}</p>\r\n                                <p class=\"candidate-content-orgpath\" title=\"{{data.orgAllPath}}\">\r\n                                    {{data.orgAllPath}}</p>\r\n                            </div>\r\n                        </div>\r\n                    </label>\r\n                </div>\r\n                <span class=\"f-icon f-icon-star\" *ngIf=\"enableFavorites\" [class.default-light-color]=\"data.inFavorites\"\r\n                    [class.default-dark-color]=\"!data.inFavorites\" (click)=\"toggleFavorites($event, data)\"></span>\r\n            </div>\r\n            <div *ngIf=\"items.length===0\" [ngStyle]=\"{'background-image': noDataImg}\" class=\"fp-candidate-nodata\">\r\n                {{'personnelSelector.tabCommon.noUserData' | locale}}</div>\r\n        </div>\r\n    </perfect-scrollbar>\r\n    <div class=\"pagination-container\" *ngIf=\"items.length!==0\">\r\n        <ul class=\"ngx-pagination pagination pager-viewmode-simple\">\r\n            <li class=\"page-item d-flex flex-fill\"></li>\r\n            <li class=\"page-item\" [class.disabled]=\"pageIndex === 1\" (click)=\"turnOverPage('pre', -1)\">\r\n                <span class=\"page-link border-0\">\r\n                    <span class=\"f-icon f-page-pre\"></span>\r\n                </span>\r\n            </li>\r\n            <li class=\"page-item\">\r\n                <input id=\"farris-datagrid-gotopagenumber\" min=\"1\" type=\"number\" max=\"{{pageTotal}}\"\r\n                    [(ngModel)]=\"pageIndex\" style=\"width: 38px;\" (keyup.enter)=\"switchPage({pageIndex: pageIndex})\"\r\n                    (input)=\"beforePageIndexChange($event, pageTotal)\">\r\n            </li>\r\n            <li class=\"page-item page-separator\" style=\"margin-left: 10px\"> / </li>\r\n            <li class=\"page-item page-total\" style=\"margin-left: 5px\">\r\n                <span style=\"font-size: 16px; font-weight: 600;\"> {{pageTotal}}</span>\r\n            </li>\r\n            <li class=\"page-item\" [class.disabled]=\"pageIndex === pageTotal\" (click)=\"turnOverPage('next', 1)\">\r\n                <a class=\"page-link border-0\">\r\n                    <span class=\"f-icon f-page-next\"></span>\r\n                </a>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</div>",
                    styles: [":host{position:absolute;z-index:100;background:#fff;top:44px;right:0;left:0;bottom:0;display:-webkit-box;display:flex}.candidate{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;-webkit-box-flex:1;flex:1;overflow:hidden}.candidate .s-selectedPerson:hover{background:#eef5ff;border-radius:5px}.candidate .candidate-content{padding-top:3px;clear:both}.candidate .s-selectedPerson{min-width:240px;float:left;width:calc(50% - 6px);position:relative;height:40px;padding:5px 12px;margin:0 3px 1px}.candidate .s-selectedPerson .f-icon-star{position:absolute;top:13px;right:15px;font-size:14px}.candidate .s-selectedPerson .default-light-color{color:#f7b500}.candidate .s-selectedPerson .default-dark-color{color:#d8dce6}.candidate .k-checkbox-label::after,.candidate .k-checkbox-label::before{top:10px;font-size:16px;width:14px;height:14px}.candidate .fp-candidate-nodata{width:100px;height:100px;text-align:center;background-repeat:no-repeat;background-size:contain;color:#b4bccc;padding-top:110px;position:absolute;left:50%;top:50%;margin:-70px 0 0 -50px}.candidate .candidate-content-title{margin:0;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;font-size:13px}.candidate .candidate-content-orgpath{margin:0;font-size:12px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;color:#c7ccd7}.candidate .candidate-title{display:-webkit-box;display:flex;-webkit-box-pack:justify;justify-content:space-between;padding:15px;font-size:14px}.candidate .candidate-title .custom-control{margin:10px 0 0 15px;line-height:35px}.candidate .candidate-title .title-clearall{margin:10px 15px 0 0;color:#2a87ff;cursor:pointer;line-height:35px}.candidate .s-selectedPerson .custom-control-label::before{top:8px}.candidate .candidate-title .f-icon{color:#878d99;cursor:pointer}"]
                }] }
    ];
    /** @nocollapse */
    SearchResultComponent.ctorParameters = function () { return [
        { type: NotifyService, decorators: [{ type: Optional }] },
        { type: FavoritesTool, decorators: [{ type: Optional }] },
        { type: Injector }
    ]; };
    SearchResultComponent.propDecorators = {
        idField: [{ type: Input }],
        multiSelect: [{ type: Input }],
        enableFavorites: [{ type: Input }],
        data: [{ type: Input }],
        validElementsInfo: [{ type: Input }],
        selectionsChange: [{ type: Output }],
        closePanelChange: [{ type: Output }],
        pageIndexChange: [{ type: Output }]
    };
    return SearchResultComponent;
}());
export { SearchResultComponent };
if (false) {
    /** @type {?} */
    SearchResultComponent.prototype.idField;
    /** @type {?} */
    SearchResultComponent.prototype.multiSelect;
    /** @type {?} */
    SearchResultComponent.prototype.enableFavorites;
    /** @type {?} */
    SearchResultComponent.prototype.validElementsInfo;
    /** @type {?} */
    SearchResultComponent.prototype.selectionsChange;
    /** @type {?} */
    SearchResultComponent.prototype.closePanelChange;
    /** @type {?} */
    SearchResultComponent.prototype.pageIndexChange;
    /**
     * @type {?}
     * @private
     */
    SearchResultComponent.prototype.cdRef;
    /** @type {?} */
    SearchResultComponent.prototype.allChecked;
    /** @type {?} */
    SearchResultComponent.prototype.columns;
    /** @type {?} */
    SearchResultComponent.prototype.selections;
    /** @type {?} */
    SearchResultComponent.prototype.cloneSelections;
    /** @type {?} */
    SearchResultComponent.prototype.allIndexId;
    /** @type {?} */
    SearchResultComponent.prototype.noDataImg;
    /** @type {?} */
    SearchResultComponent.prototype.items;
    /** @type {?} */
    SearchResultComponent.prototype.recentContactsList;
    /** @type {?} */
    SearchResultComponent.prototype.favoritesList;
    /** @type {?} */
    SearchResultComponent.prototype.pageIndex;
    /** @type {?} */
    SearchResultComponent.prototype.pageTotal;
    /** @type {?} */
    SearchResultComponent.prototype.itemTotalCount;
    /** @type {?} */
    SearchResultComponent.prototype.showUserCode;
    /**
     * @type {?}
     * @private
     */
    SearchResultComponent.prototype.notifyService;
    /**
     * @type {?}
     * @private
     */
    SearchResultComponent.prototype.favoritesTool;
    /**
     * @type {?}
     * @private
     */
    SearchResultComponent.prototype.injector;
}
//# sourceMappingURL=data:application/json;base64,