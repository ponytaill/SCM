/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectorRef, Component, EventEmitter, HostBinding, Injector, Input, Output, ViewEncapsulation, HostListener, ViewChild, ElementRef } from '@angular/core';
import { LocaleService } from '@farris/ui-locale';
import { MessagerService } from '@farris/ui-messager';
import { getMultilingualValue } from '../getValueWithLocaleId';
export class SimpleColumnsComponent {
    /**
     * @param {?} injector
     * @param {?} cd
     */
    constructor(injector, cd) {
        this.injector = injector;
        this.cd = cd;
        this.enableScheme = false;
        this.seartTypes = [];
        /**
         * 所有列
         */
        this.columns = [];
        /**
         * 显示的列
         */
        this.fields = [];
        /**
         * 点击侧边样式以外的区域隐藏面板。默认为 true
         */
        this.clickToHidden = true;
        this.top = 0;
        this._schemeList = [];
        this.cls = 'f-datagrid-settings-simple-host';
        this.formatChange = new EventEmitter();
        this.fieldsChange = new EventEmitter();
        this.submit = new EventEmitter();
        this.closed = new EventEmitter();
        this.advanced = new EventEmitter();
        this.addNewScheme = new EventEmitter();
        this.showSchemeList = new EventEmitter();
        this.activeItemChange = new EventEmitter();
        this.allCols = [];
        this.columnType = 'all';
        this.isEn = false;
        this.showSchemePanel = false;
        this.switchValue = false;
        // 当前方案
        this.currentSchemeItem = null;
        this.searchResultIsVisibleAll = false;
        this.defaultSchemeName = '系统预制';
        this.settings = {};
        this.localeSer = this.injector.get(LocaleService, null);
        this.messager = this.injector.get(MessagerService, null);
    }
    /**
     * @return {?}
     */
    get schemeList() {
        return this._schemeList;
    }
    /**
     * @param {?} val
     * @return {?}
     */
    set schemeList(val) {
        if (val && val.length) {
            val.forEach((/**
             * @param {?} n
             * @return {?}
             */
            n => {
                n['_title_'] = getMultilingualValue(JSON.parse(n.name), this.localeSer.localeId);
            }));
        }
        this._schemeList = val || [];
    }
    /**
     * @param {?} $event
     * @return {?}
     */
    onClick($event) {
        // console.log($event);
        $event.stopPropagation();
        /** @type {?} */
        const clsname = $event.target['className'] || '';
        if (clsname.indexOf('f-datagrid-settings-simple-host') > -1) {
            // 隐藏侧边栏；
            if (this.clickToHidden) {
                this.close();
            }
        }
        this.showSchemePanel = false;
    }
    /**
     * @param {?} $event
     * @return {?}
     */
    onEscKeydown($event) {
        $event.stopPropagation();
        if (!document.querySelector('modal-container')) {
            this.close();
        }
    }
    /**
     * @param {?} $event
     * @return {?}
     */
    onEnterKeydown($event) {
        $event.stopPropagation();
        if (!document.querySelector('modal-container')) {
            this.onSubmitClick();
        }
    }
    /**
     * @param {?} $event
     * @return {?}
     */
    onControlGKeydown($event) {
        if ($event.ctrlKey && !document.querySelector('modal-container')) {
            $event.preventDefault();
            $event.stopPropagation();
            if ($event.key.toLowerCase() === 'g') {
                this.showAdvanced($event);
            }
            else if ($event.key.toLowerCase() === 'r') {
                this.onSettingReset();
            }
            else if ($event.key.toLowerCase() === 's') {
                this.searchInput.nativeElement.focus();
            }
        }
    }
    /**
     * @private
     * @return {?}
     */
    getCurrentSchemeSettings() {
        if (this.currentSchemeItem) {
            /** @type {?} */
            const schemeSettings = JSON.parse(this.currentSchemeItem.queryConditionString);
            return (/** @type {?} */ (schemeSettings[this.localeSer.localeId]));
        }
        return null;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.allCols = this.columns[0];
        if (this.gridInstance.enableScheme && this.currentSchemeItem) {
            this.settings = this.getCurrentSchemeSettings() || {};
        }
        if (this.settings && this.settings.viewColumns && this.settings.viewColumns.length) {
            this.fields = this.settings.viewColumns;
            this.dirtySettings(true);
        }
        else {
            this.fields = this.getViewColumns();
        }
        this.container.nativeElement.focus();
        this.defaultSchemeName = this.localeSer.getValue('datagrid.scheme.syspreset') || this.gridInstance.defaultSchemeName;
    }
    /**
     * @private
     * @return {?}
     */
    getViewColumns() {
        // 多表头
        /** @type {?} */
        let visibleCls = [];
        if (this.columns.length > 1) {
            this.columns.forEach((/**
             * @param {?} cols
             * @return {?}
             */
            cols => {
                visibleCls = visibleCls.concat(this._getViewColumns(cols));
            }));
        }
        else {
            visibleCls = this.columns[0].filter((/**
             * @param {?} n
             * @return {?}
             */
            n => (n.visible || n.visible === undefined)));
        }
        return visibleCls.map((/**
         * @param {?} n
         * @return {?}
         */
        n => n.field));
    }
    /**
     * @private
     * @param {?} cols
     * @return {?}
     */
    _getViewColumns(cols) {
        return cols.filter((/**
         * @param {?} c
         * @return {?}
         */
        c => !c.colspan && (c.visible || c.visible === undefined)));
    }
    // 根据列的类型进行筛选过滤，
    // all 所有列
    // visible 可见列
    // hidden 隐藏列
    // group 分组列
    /**
     * @param {?=} searchWords
     * @return {?}
     */
    filterColumns(searchWords = '') {
        /** @type {?} */
        let cols = [];
        if (this.switchValue) {
            cols = this.columns[0].filter((/**
             * @param {?} n
             * @return {?}
             */
            n => this.fields.indexOf(n.field) > -1));
        }
        else {
            cols = this.columns[0];
        }
        if (searchWords) {
            cols = cols.filter((/**
             * @param {?} c
             * @return {?}
             */
            c => c.title.toLowerCase().indexOf(searchWords.toLowerCase()) > -1));
        }
        this.allCols = cols;
    }
    /**
     * @private
     * @return {?}
     */
    onFieldsChanged() {
        if (!this.gridInstance.enableScheme) {
            this.fieldsChange.emit(this.fields);
        }
    }
    /**
     * @param {?} $event
     * @param {?} col
     * @return {?}
     */
    onDblClick($event, col) {
        // console.log('显示与隐藏切换事件', col);
        this.onCheckboxClick($event, col);
    }
    /**
     * @param {?} $event
     * @param {?} col
     * @return {?}
     */
    onCheckboxClick($event, col) {
        // console.log('显示与隐藏切换事件', col);
        $event.stopPropagation();
        this.showSchemePanel = false;
        /** @type {?} */
        let checked = false;
        /** @type {?} */
        const index = this.fields.indexOf(col.field);
        if (index === -1) {
            this.fields.push(col.field);
            checked = true;
        }
        else {
            this.fields.splice(index, 1);
            checked = false;
        }
        /** @type {?} */
        const item = this.columns[0].find((/**
         * @param {?} n
         * @return {?}
         */
        n => n.field === col.field));
        if (item) {
            item.visible = checked;
        }
        // this.columns[0].forEach(f => {
        //     f.visible = this.fields.indexOf(f.field) > -1;
        // });
        this.fields = this.columns[0].filter((/**
         * @param {?} n
         * @return {?}
         */
        n => n.visible)).map((/**
         * @param {?} n
         * @return {?}
         */
        n => n.field));
        this.searchResultIsVisibleAll = this.allCols.filter((/**
         * @param {?} n
         * @return {?}
         */
        n => n.visible)).length === this.allCols.length;
        this.dirtySettings(true);
        this.onFieldsChanged();
    }
    /**
     * @param {?} $event
     * @return {?}
     */
    searchColumn($event) {
        /** @type {?} */
        const txt = $event.target.value;
        this.filterColumns(txt);
    }
    /**
     * @param {?} fieldInfo
     * @param {?} txt
     * @param {?} ulElRef
     * @return {?}
     */
    onFieldDrop(fieldInfo, txt, ulElRef) {
        this.showSchemePanel = false;
        // console.log('drop', fieldInfo);
        const { removedIndex, addedIndex } = fieldInfo;
        /** @type {?} */
        const moveItem = this.allCols[removedIndex];
        /** @type {?} */
        const targetItem = this.allCols[addedIndex];
        /** @type {?} */
        const moveItemIndex = this.columns[0].findIndex((/**
         * @param {?} n
         * @return {?}
         */
        n => n.field === moveItem.field));
        /** @type {?} */
        const targetItemIndex = this.columns[0].findIndex((/**
         * @param {?} n
         * @return {?}
         */
        n => n.field === targetItem.field));
        /** @type {?} */
        const removedItem = this.columns[0].splice(moveItemIndex, 1);
        this.columns[0].splice(targetItemIndex, 0, ...removedItem);
        this.fields = this.columns[0].filter((/**
         * @param {?} n
         * @return {?}
         */
        n => n.visible)).map((/**
         * @param {?} n
         * @return {?}
         */
        n => n.field));
        this.onFieldsChanged();
        this.filterColumns(txt);
    }
    /**
     * 0: 1个也没有选中； 1: 全部选中； 2: 有选中的也有没选中的
     * @private
     * @return {?}
     */
    getCheckAllState() {
        if (!this.searchInput.nativeElement.value) {
            if (this.fields.length === 0) {
                return 0;
            }
            else {
                if (this.fields.length === this.columns[0].length) {
                    return 1;
                }
                return 2;
            }
        }
        else {
            /** @type {?} */
            const visibleLen = this.allCols.filter((/**
             * @param {?} n
             * @return {?}
             */
            n => n.visible)).length;
            if (visibleLen === this.allCols.length) {
                return 1;
            }
            else {
                if (visibleLen < this.allCols.length) {
                    if (visibleLen === 0) {
                        return 0;
                    }
                    return 1;
                }
            }
        }
    }
    // 全选
    /**
     * @param {?} $event
     * @param {?} txt
     * @return {?}
     */
    onCheckAllClick($event, txt) {
        $event.stopPropagation();
        this.showSchemePanel = false;
        /** @type {?} */
        const state = this.getCheckAllState();
        /** @type {?} */
        const isCheckAll = state === 0 || state === 2;
        if (!txt) {
            this.columns[0].forEach((/**
             * @param {?} n
             * @return {?}
             */
            n => n.visible = isCheckAll));
        }
        else {
            this.columns[0].forEach((/**
             * @param {?} n
             * @return {?}
             */
            n => {
                /** @type {?} */
                const item = this.allCols.find((/**
                 * @param {?} a
                 * @return {?}
                 */
                a => n.field == a.field));
                if (item) {
                    n.visible = isCheckAll;
                    item.visible = isCheckAll;
                }
            }));
        }
        this.fields = this.columns[0].filter((/**
         * @param {?} n
         * @return {?}
         */
        n => n.visible)).map((/**
         * @param {?} n
         * @return {?}
         */
        n => n.field));
        this.searchResultIsVisibleAll = this.allCols.filter((/**
         * @param {?} n
         * @return {?}
         */
        n => n.visible)).length === this.allCols.length;
        this.dirtySettings(true);
        this.onFieldsChanged();
        this.filterColumns(txt);
    }
    /**
     * @param {?=} $event
     * @return {?}
     */
    close($event) {
        if ($event) {
            $event.stopPropagation();
        }
        this.closed.emit();
    }
    // 打开高级设置窗口
    /**
     * @param {?} $event
     * @return {?}
     */
    showAdvanced($event) {
        this.close($event);
        this.advanced.emit({ viewFields: this.fields });
    }
    // 恢复默认
    /**
     * @param {?=} $event
     * @return {?}
     */
    onSettingReset($event) {
        if ($event) {
            $event.stopPropagation();
        }
        this.showSchemePanel = false;
        /** @type {?} */
        const restorDefaultText = this.localeSer.getValue('datagrid.settings.restoreDefaultSettingsText') || '确认要恢复默认设置吗？';
        this.messager.confirm(restorDefaultText).subscribe((/**
         * @param {?} t
         * @return {?}
         */
        (t) => {
            if (t) {
                this.reset2Default();
                this.dirtySettings(true);
            }
        }));
    }
    /**
     * @private
     * @return {?}
     */
    reset2Default() {
        /** @type {?} */
        const options = this.gridInstance.dfs['_state'].initialOptions;
        if (options.columnFields && options.columnFields.length) {
            /** @type {?} */
            const newColumns = [];
            options.columnFields.forEach((/**
             * @param {?} c
             * @return {?}
             */
            c => {
                if (c.field !== '_datagrid-setting-control_') {
                    /** @type {?} */
                    const col = this.gridInstance.columns[0].find((/**
                     * @param {?} n
                     * @return {?}
                     */
                    (n) => n.field === c.field));
                    if (col) {
                        col.visible = c.visible;
                        col.halign = c.halign;
                        col.align = c.align;
                        col.width = c.width;
                        col.footer = Object.assign({}, c.footer || {});
                        col.groupFooter = Object.assign({}, c.groupFooter || {});
                        newColumns.push(col);
                    }
                }
            }));
            this.columns = [newColumns];
        }
        this.allCols = this.columns[0];
        this.settings = {};
        this.fields = this.getViewColumns();
        this.settings.viewColumns = this.fields;
        this.settings.columnFormat = [...this.columns[0]];
        if (options.sort) {
            /** @type {?} */
            const sortOrders = options.sort.sortOrder ? options.sort.sortOrder.split(',') : [];
            /** @type {?} */
            const sortNames = options.sort.sortName ? options.sort.sortName.split(',') : [];
            this.settings.sortInfo = { sortName: sortNames, sortOrder: sortOrders };
        }
        else {
            this.settings.sortInfo = {};
        }
        this.settings.groupField = options.groupField ? options.groupField.split(',') : [];
    }
    // 确定按钮点击事件
    /**
     * @param {?=} $event
     * @return {?}
     */
    onSubmitClick($event) {
        if ($event) {
            $event.stopPropagation();
        }
        this.showSchemePanel = false;
        this.settings.viewColumns = this.fields;
        if (!this.enableScheme || !this.currentSchemeItem) {
            if (!this.settings.columnFormat) {
                this.settings.columnFormat = [...this.columns[0]];
            }
            if (!this.settings.sortInfo) {
                this.settings.sortInfo = {
                    sortName: this.gridInstance.sortName ? this.gridInstance.sortName.split(',') : [],
                    sortOrder: this.gridInstance.sortOrder ? this.gridInstance.sortOrder.split(',') : []
                };
            }
            if (this.settings.groupField === undefined) {
                this.settings.groupField = this.gridInstance.groupField ? this.gridInstance.groupField.split(',') : [];
            }
        }
        else {
            /** @type {?} */
            const _settings = this.getCurrentSchemeSettings();
            if (_settings) {
                this.settings = Object.assign(_settings || {}, this.settings);
            }
        }
        // this.activeItemChange.emit(this.activeSchemeItem);
        this.submit.emit({ content: this.settings, close: this.close.bind(this), target: this.btnOk.nativeElement, currentScheme: this.currentSchemeItem });
    }
    // 显示下拉方案列表
    /**
     * @param {?} $event
     * @return {?}
     */
    onChooseScheme($event) {
        if ($event) {
            $event.stopPropagation();
        }
        this.showSchemePanel = !this.showSchemePanel;
        setTimeout((/**
         * @return {?}
         */
        () => {
            if (this.schemeitemsEleRef && this.currentSchemeItem) {
                /** @type {?} */
                const itemEl = this.schemeitemsEleRef.nativeElement.querySelector(`#schemeitem_${this.currentSchemeItem.id}`);
                if (itemEl) {
                    if (itemEl.scrollIntoViewIfNeeded) {
                        itemEl.scrollIntoViewIfNeeded();
                    }
                    else {
                        itemEl.scrollIntoView();
                    }
                }
            }
        }));
    }
    // 仅显示可见列
    /**
     * @param {?} $event
     * @return {?}
     */
    onlySeeVisibleColumns($event) {
        this.switchValue = $event;
        this.filterColumns();
    }
    // 新增方案
    /**
     * @param {?} $event
     * @return {?}
     */
    onNewSchemeClick($event) {
        if ($event) {
            $event.stopPropagation();
        }
        this.showSchemePanel = false;
        this.addNewScheme.emit();
    }
    // 显示方案列表管理窗口
    /**
     * @param {?} $event
     * @return {?}
     */
    onShowSchemeList($event) {
        if ($event) {
            $event.stopPropagation();
        }
        this.showSchemePanel = false;
        this.showSchemeList.emit();
    }
    // 方案点击
    /**
     * @param {?} $event
     * @param {?} item
     * @return {?}
     */
    onSchemeItemClick($event, item) {
        setTimeout((/**
         * @return {?}
         */
        () => {
            this.currentSchemeItem = item;
            this.showSchemePanel = false;
            /** @type {?} */
            let schemeSettings = null;
            if (item) {
                schemeSettings = JSON.parse(item.queryConditionString);
                schemeSettings = schemeSettings[this.localeSer.localeId];
                if (!schemeSettings) {
                    this.reset2Default();
                }
                else {
                    this.settings = schemeSettings;
                    this.fields = schemeSettings.viewColumns;
                }
            }
            else {
                this.reset2Default();
            }
            this.cd.detectChanges();
        }));
    }
    /**
     * @param {?} flag
     * @return {?}
     */
    dirtySettings(flag) {
        // this.isChanged = flag;
    }
}
SimpleColumnsComponent.decorators = [
    { type: Component, args: [{
                selector: 'datagrid-settings-simple',
                template: "<div class=\"d-flex flex-column f-datagrid-settings-simple\" tabindex=\"0\" #colcontainer\r\n    [style.top.px]=\"top\" [style.height]=\"'calc(100vh - ' +  top + 'px)'\" >\r\n\r\n    <div class=\"header d-flex\">\r\n        <div class=\"f-utils-fill title d-flex flex-row\"> {{ 'datagrid.settings.simple.title' | locale }} \r\n            <button #btnSchemeName class=\"btn ml-3 px-2 scheme-name d-flex flex-row\"  *ngIf=\"enableScheme\" (click)=\"onChooseScheme($event)\">\r\n                <!-- <span *ngIf=\"isChanged\">*</span> -->\r\n                <span>{{ currentSchemeItem? currentSchemeItem._title_ : defaultSchemeName }}</span>\r\n                <span class=\"f-icon f-icon-arrow-s ml-2\" style=\"font-size: 12px;\"></span>\r\n            </button>\r\n        </div>\r\n        <div class=\"closed\" (click)=\"close($event)\">\r\n            <span class=\"f-icon f-icon-close\" style=\"font-size: 20px;\"></span>\r\n        </div>\r\n    </div>\r\n    <div class=\"scheme-manager-dropdown\" [style.display]=\"showSchemePanel? '': 'none'\" [style.left.px]=\"btnRef? btnRef.nativeElement.offsetLeft : 97\"  (click)=\"$event.stopPropagation()\">\r\n        <div class=\"f-utils-fill f-utils-flex-column m-2\">\r\n            <div class=\"pb-2\" style=\"max-height: calc(100vh - 300px);overflow: auto\">\r\n                <ul #schemeitems>\r\n                    <li class=\"scheme-manager__item\" [class.active]=\"!currentSchemeItem\" (click)=\"onSchemeItemClick($event, null)\"> \r\n                        <!-- <span *ngIf=\"isChanged && !activeSchemeItem\">*</span> -->\r\n                        {{'datagrid.scheme.syspreset' | locale}}\r\n                    </li>\r\n                    <li [attr.id]=\"'schemeitem_'+ item.id\" class=\"scheme-manager__item d-flex flex-row\" \r\n                        [class.active]=\"currentSchemeItem && currentSchemeItem?.id === item.id\"  \r\n                        *ngFor=\"let item of schemeList\" (click)=\"onSchemeItemClick($event, item)\" title=\"{{item._title_}}\">\r\n                        <!-- <span *ngIf=\"isChanged && activeSchemeItem?.id==item.id\">*</span> -->\r\n                        <span class=\"f-utils-fill mr-1\" style=\"text-overflow: ellipsis;\">{{item._title_}}</span>\r\n                        <span class=\"scheme-manager__label default\" *ngIf=\"item.isDefault\">{{'datagrid.scheme.isDefault' | locale}}</span>\r\n                        <span class=\"scheme-manager__label public\" *ngIf=\"item.type === 'public'\">{{'datagrid.scheme.isPublic' | locale}}</span>\r\n                        <span class=\"scheme-manager__label private\" *ngIf=\"!item.isDefault && item.type === 'private'\">{{'datagrid.scheme.isPrivate' | locale}}</span>\r\n                        <span class=\"scheme-manager__label org\" *ngIf=\"item.type === 'org'\">{{'datagrid.scheme.isOrg' | locale}}</span>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n            <div class=\"d-flex scheme-manager__button-add\">\r\n                <button (click)=\"onNewSchemeClick($event)\">\r\n                    <span class=\"f-icon f-icon-plus\"></span>{{'datagrid.scheme.newScheme' | locale}}\r\n                </button>\r\n            </div>\r\n\r\n            <div class=\"p-2 mt-2\">\r\n                <div class=\"btn-toolbar\" style=\"justify-content: flex-end;\">\r\n                    <button class=\"btn btn-link mr-3\" (click)=\"onShowSchemeList($event)\">{{'datagrid.scheme.mgrScheme' | locale}}</button>\r\n                    <button class=\"btn btn-primary mr-1\" (click)=\"onNewSchemeClick($event)\">{{'datagrid.scheme.saveas' | locale}} </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"f-utils-fill content d-flex flex-column\">\r\n        <div>\r\n            <div class=\"d-flex flex-row mb-2\" style=\"align-items: center;\">\r\n                <h5 class=\"count f-utils-fill m-0\" [innerHTML]=\"'datagrid.settings.simple.count' | locale | replaceX: fields.length\"></h5>\r\n                <div class=\"d-flex flex-row\">{{'datagrid.scheme.onlyshowcolumns' | locale}} \r\n                    <farris-switch style=\"position: relative;\r\n                    top: 2px;\r\n                    margin-left: 5px;\"\r\n                    id=\"only-visible-columns\"\r\n                    [square]=\"false\" [size]=\"'small'\"\r\n                    [ngModel]=\"switchValue\" \r\n                    (valueChange)=\"onlySeeVisibleColumns($event)\"\r\n                    ></farris-switch></div>\r\n            </div>\r\n\r\n            <div class=\"tip\">\r\n                {{ 'datagrid.settings.simple.tip' | locale }}\r\n            </div>\r\n            <div class=\"input-group mb-2 scheme-manager__search-box\">\r\n                <input #inputWord type=\"text\" class=\"form-control\" placeholder=\"{{'datagrid.settings.searchPlaceholder' | locale}}\"\r\n                (input)=\"searchColumn($event)\" style=\"height: 26px;\">\r\n                <div  class=\"input-group-append\">\r\n                    <span  class=\"fa f-icon-search\"></span>\r\n                </div>\r\n            </div>\r\n            \r\n\r\n            <div style=\"padding: 5px 0px;\">\r\n                <button class=\"btn btn-link \" style=\"height: 32px;padding-left: 4px;\" (click)=\"onCheckAllClick($event,inputWord.value)\">\r\n                    <span class=\"f-icon f-icon-minus-outline checkall\" [class.f-icon-checkbox]=\"!fields.length\"\r\n                        [class.f-icon-checkbox-checked]=\" searchInput.nativeElement.value ?  searchResultIsVisibleAll : fields.length === allCols.length\"></span>\r\n                    {{ 'datagrid.settings.checkall' | locale }}\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <div style=\"overflow: auto;padding-right:3px\" class=\"f-utils-fill\">\r\n            <ul class=\"list-group list-group-flush\" #ul column-visible-drag (drop)=\"onFieldDrop($event, inputWord.value, ul)\">\r\n                <li class=\"list-group-item list-group-item-action smooth-dnd-draggable-wrapper format-setting-column\" *ngFor=\"let col of allCols\" \r\n                    (click)=\"onDblClick($event, col)\">\r\n                    <span class=\"f-icon checkbox\"\r\n                        [class.f-icon-checkbox-checked]=\"fields.indexOf(col.field) > -1\"\r\n                        [class.f-icon-checkbox]=\"fields.indexOf(col.field) == -1\"\r\n                        (click)=\"onCheckboxClick($event, col)\"></span>\r\n                    {{ col.title}} \r\n\r\n                    <span class=\"f-icon f-icon-drag-vertical field-drag-handle\"></span>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n\r\n    </div>\r\n    <div class=\"footer\">\r\n\r\n        <div class=\"buttons\">\r\n            <button class=\"btn btn-link advanced\" (click)=\"showAdvanced($event)\">{{ 'datagrid.settings.advancedMode' | locale: '\u9AD8\u7EA7\u6A21\u5F0F' }}</button>\r\n            <button class=\"btn btn-link reset\" (click)=\"onSettingReset($event)\">{{ 'datagrid.settings.reset' | locale: '\u6062\u590D\u9ED8\u8BA4' }}</button>\r\n            <button class=\"btn btn-secondary cancel\"\r\n                (click)=\"close($event)\">{{'datagrid.settings.cancel' | locale}}</button>\r\n            <button class=\"btn btn-primary ok\" #okbtn\r\n                (click)=\"onSubmitClick($event)\">{{'datagrid.settings.ok' | locale}}</button>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n\r\n",
                encapsulation: ViewEncapsulation.None,
                styles: [".f-datagrid-settings-simple{position:fixed;top:100px;right:-500px;z-index:10000;height:calc(100vh - 100px);width:468px;background:#fff;border:1px solid #e6e9f0;border-radius:10px 0 0 10px;transition:right .3s}.f-datagrid-settings-simple:focus{outline:0}.f-datagrid-settings-simple .header{height:50px;line-height:50px;border-bottom:1px solid #eaedf3;font-size:18px;color:#2d2f33}.f-datagrid-settings-simple .header .scheme-name{border-radius:6px;color:#2a87ff;background:#ebf4ff;height:28px;align-items:center}.f-datagrid-settings-simple .header .title{padding-left:21px;font-weight:700;align-items:center}.f-datagrid-settings-simple .header .closed{width:50px;text-align:center;cursor:pointer}.f-datagrid-settings-simple .content .count{font-size:14px;color:#2d2f33}.f-datagrid-settings-simple .content .tip{background:#f7faff;border-radius:6px;line-height:20px;margin-bottom:10px;min-height:42px;align-items:center;display:flex;padding:5px}.f-datagrid-settings-simple .content .checkall{margin-left:5px;font-size:14px;color:#0089ff;margin-right:5px}.f-datagrid-settings-simple .content{margin:20px 24px}.f-datagrid-settings-simple .footer{height:32px;margin:20px}.smooth-dnd-ghost.format-setting-column{z-index:999999999!important;padding:4px 8px;background-color:#e7f1ff;border:1px solid #2a87ff}.smooth-dnd-ghost.format-setting-column .field-drag-handle{float:right}.f-datagrid-settings-simple .smooth-dnd-drop-preview-constant-class{background-color:#dee1ea}.f-datagrid-settings-simple .format-setting-column{background:#fafbfd;padding:4px 8px;margin-bottom:5px;border:1px solid #f2f4f8;border-radius:5px;color:#000}.f-datagrid-settings-simple .format-setting-column.active{border:1px solid #2a87ff;background:#e7f1ff;border-top:1px solid #2a87ff!important;border-bottom:1px solid #2a87ff!important}.format-setting-column .checkbox{font-size:14px;color:#0089ff;margin-right:5px;cursor:pointer}.f-datagrid-settings-simple .format-setting-column .field-drag-handle{float:right;cursor:-webkit-grab;cursor:grab}.f-datagrid-settings-simple .format-setting-column .field-drag-handle:active{cursor:-webkit-grabbing;cursor:grabbing}.f-datagrid-settings-simple .list-group-flush:last-child .list-group-item:last-child{border-bottom:1px solid #f2f4f8}.f-datagrid-settings-simple .list-group-flush:first-child .list-group-item:first-child{border-top:1px solid #f2f4f8}.f-datagrid-settings-simple .buttons{text-align:right}.f-datagrid-settings-simple .buttons button{width:66px;height:32px}.f-datagrid-settings-simple .buttons .cancel{margin-left:12px;margin-right:8px}.f-datagrid-settings-simple .buttons .ok{width:100px}.f-datagrid-settings-simple .buttons .advanced{width:66px;height:32px;float:left}.f-datagrid-settings-simple-host{width:100%;height:100%;position:absolute;top:0;left:0;z-index:1000}.f-datagrid-settings-simple .visible-cols-count{font-size:18px;font-weight:500}.scheme-manager-dropdown{z-index:1000;position:absolute;top:50px;width:230px;border-radius:10px;background-color:#fff;border:1px solid #eaedf3;left:95px;box-shadow:0 2px 12px 0 #d8dce6}.scheme-manager-dropdown::before{content:\"\";position:absolute;border:10px solid #0000;bottom:100%;left:20px;border-bottom-color:#e3e3e3}.scheme-manager-dropdown::after{content:\"\";position:absolute;border:10px solid #0000;bottom:100%;left:20px;border-bottom-color:#fff;margin-bottom:-1px}.scheme-manager__button-add{align-items:center;justify-content:center}.scheme-manager__button-add>button{background:#fff;width:100%;height:32px;border:1px dashed #2a87ff40;border-radius:6px;cursor:pointer}.scheme-manager__button-add>button:focus{outline:0}.scheme-manager__button-add>button>span.f-icon{position:relative;top:2px}.scheme-manager__button-add>button:hover{background:#2a87ff;color:#fff}.scheme-manager__search-box{border-radius:5px}.scheme-manager__search-box .input-group-append{width:30px;background:0 0;color:#b4bccc;display:flex;align-items:center;justify-content:center}.scheme-manager__item{line-height:30px;padding:2px 10px;font-size:13px;border-radius:6px;cursor:pointer;align-items:center}.scheme-manager__item:hover{background-color:#f7f8fb}.scheme-manager__item.active{background:#cbe1ff;color:#1564cb}#only-visible-columns .switch-small{min-width:1.88rem;height:.85rem}#only-visible-columns .switch-small small{width:.775rem;height:.775rem;left:1px;top:0}#only-visible-columns .switch.switch-small.checked small{right:1px;left:auto}.f-datagrid-save-scheme .header{height:50px;align-items:center;cursor:move;border-bottom:0}.f-datagrid-save-scheme .header .title{font-size:17px;color:#2d2f33;font-weight:500;margin-left:20px}.f-datagrid_scheme-switch .switch-medium{min-width:1.88rem!important;height:.85rem!important}.scheme-manager__label{border-radius:4px;font-size:12px;height:18px;min-width:32px;align-items:end;line-height:16px;text-align:center}.scheme-manager__label.default{border:1px solid green;color:green;background:#f0f9f2}.scheme-manager__label.public{border:1px solid #4075fa;color:#4075fa;background:#ecf2ff}.scheme-manager__label.private{border:1px solid #d8dce6;color:#878d99;background:#f7f8fb}.scheme-manager__label.org{border:1px solid #f4883e;color:#e46700;background:#fff9eb}.scheme-org-tip{padding-left:5px;color:#878d99;font-size:12px}"]
            }] }
];
/** @nocollapse */
SimpleColumnsComponent.ctorParameters = () => [
    { type: Injector },
    { type: ChangeDetectorRef }
];
SimpleColumnsComponent.propDecorators = {
    enableScheme: [{ type: Input }],
    seartTypes: [{ type: Input }],
    columns: [{ type: Input }],
    fields: [{ type: Input }],
    clickToHidden: [{ type: Input }],
    top: [{ type: Input }],
    schemeList: [{ type: Input }],
    cls: [{ type: HostBinding, args: ['class',] }],
    container: [{ type: ViewChild, args: ['colcontainer',] }],
    btnOk: [{ type: ViewChild, args: ['okbtn',] }],
    searchInput: [{ type: ViewChild, args: ['inputWord',] }],
    schemeitemsEleRef: [{ type: ViewChild, args: ['schemeitems',] }],
    btnRef: [{ type: ViewChild, args: ['btnSchemeName',] }],
    formatChange: [{ type: Output }],
    fieldsChange: [{ type: Output }],
    submit: [{ type: Output }],
    closed: [{ type: Output }],
    advanced: [{ type: Output }],
    addNewScheme: [{ type: Output }],
    showSchemeList: [{ type: Output }],
    activeItemChange: [{ type: Output }],
    onClick: [{ type: HostListener, args: ['click', ['$event'],] }],
    onEscKeydown: [{ type: HostListener, args: ['window:keydown.esc', ['$event'],] }],
    onEnterKeydown: [{ type: HostListener, args: ['window:keydown.enter', ['$event'],] }],
    onControlGKeydown: [{ type: HostListener, args: ['keydown', ['$event'],] }]
};
if (false) {
    /** @type {?} */
    SimpleColumnsComponent.prototype.enableScheme;
    /** @type {?} */
    SimpleColumnsComponent.prototype.seartTypes;
    /**
     * 所有列
     * @type {?}
     */
    SimpleColumnsComponent.prototype.columns;
    /**
     * 显示的列
     * @type {?}
     */
    SimpleColumnsComponent.prototype.fields;
    /**
     * 点击侧边样式以外的区域隐藏面板。默认为 true
     * @type {?}
     */
    SimpleColumnsComponent.prototype.clickToHidden;
    /** @type {?} */
    SimpleColumnsComponent.prototype.top;
    /**
     * @type {?}
     * @private
     */
    SimpleColumnsComponent.prototype._schemeList;
    /** @type {?} */
    SimpleColumnsComponent.prototype.cls;
    /** @type {?} */
    SimpleColumnsComponent.prototype.container;
    /** @type {?} */
    SimpleColumnsComponent.prototype.btnOk;
    /** @type {?} */
    SimpleColumnsComponent.prototype.searchInput;
    /** @type {?} */
    SimpleColumnsComponent.prototype.schemeitemsEleRef;
    /** @type {?} */
    SimpleColumnsComponent.prototype.btnRef;
    /** @type {?} */
    SimpleColumnsComponent.prototype.formatChange;
    /** @type {?} */
    SimpleColumnsComponent.prototype.fieldsChange;
    /** @type {?} */
    SimpleColumnsComponent.prototype.submit;
    /** @type {?} */
    SimpleColumnsComponent.prototype.closed;
    /** @type {?} */
    SimpleColumnsComponent.prototype.advanced;
    /** @type {?} */
    SimpleColumnsComponent.prototype.addNewScheme;
    /** @type {?} */
    SimpleColumnsComponent.prototype.showSchemeList;
    /** @type {?} */
    SimpleColumnsComponent.prototype.activeItemChange;
    /** @type {?} */
    SimpleColumnsComponent.prototype.allCols;
    /** @type {?} */
    SimpleColumnsComponent.prototype.columnType;
    /** @type {?} */
    SimpleColumnsComponent.prototype.gridInstance;
    /** @type {?} */
    SimpleColumnsComponent.prototype.localeSer;
    /** @type {?} */
    SimpleColumnsComponent.prototype.isEn;
    /** @type {?} */
    SimpleColumnsComponent.prototype.showSchemePanel;
    /** @type {?} */
    SimpleColumnsComponent.prototype.switchValue;
    /** @type {?} */
    SimpleColumnsComponent.prototype.currentSchemeItem;
    /** @type {?} */
    SimpleColumnsComponent.prototype.searchResultIsVisibleAll;
    /** @type {?} */
    SimpleColumnsComponent.prototype.defaultSchemeName;
    /**
     * @type {?}
     * @private
     */
    SimpleColumnsComponent.prototype.messager;
    /** @type {?} */
    SimpleColumnsComponent.prototype.settings;
    /**
     * @type {?}
     * @private
     */
    SimpleColumnsComponent.prototype.injector;
    /** @type {?} */
    SimpleColumnsComponent.prototype.cd;
}
//# sourceMappingURL=data:application/json;base64,