import { empty } from 'rxjs';
import { map } from 'rxjs/operators';
/**
 * 权限
 */
var Authority = /** @class */ (function () {
    function Authority() {
        this.operationLabelMap = new Map();
        this.authOfLabel = new Map();
    }
    /**
     * 设置label到operation id的映射
     * @param labelMap
     */
    Authority.prototype.setLabelMap = function (labelMap) {
        var _this = this;
        for (var i in labelMap) {
            this.operationLabelMap.set(i, labelMap[i]);
        }
        this.operationLabelMap.forEach(function (opId, label) {
            _this[label] = false;
        });
    };
    /**
     * 初始化权限的值
     */
    Authority.prototype.initialize = function (authorityService) {
        var _this = this;
        if (this.operationLabelMap && this.operationLabelMap.size > 0) {
            return authorityService.queryOperationAuthority(Array.from(this.operationLabelMap.values())).pipe(map(function (operationAuth) {
                _this.operationLabelMap.forEach(function (opId, label) {
                    _this.authOfLabel.set(label, operationAuth.has(opId) ? operationAuth.get(opId) : false);
                });
            }));
        }
        else {
            return empty();
        }
    };
    /**
     * 返回操作权限，即用户是否拥有Label所对应的权限
     * @param label 标签，可以是button id等
     */
    Authority.prototype.hasOperation = function (label) {
        return this.authOfLabel.has(label) && this.authOfLabel.get(label);
    };
    return Authority;
}());
export { Authority };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0aG9yaXR5LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy9jb21tYW5kLXNlcnZpY2VzLyIsInNvdXJjZXMiOlsibGliL2F1dGhvcml0eS9hdXRob3JpdHkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFhLEtBQUssRUFBQyxNQUFNLE1BQU0sQ0FBQztBQUN2QyxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFckM7O0dBRUc7QUFDSDtJQUVJO1FBQ0ksSUFBSSxDQUFDLGlCQUFpQixHQUFHLElBQUksR0FBRyxFQUFrQixDQUFDO1FBQ25ELElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxHQUFHLEVBQW1CLENBQUM7SUFDbEQsQ0FBQztJQVlEOzs7T0FHRztJQUNPLCtCQUFXLEdBQXJCLFVBQXNCLFFBQWdCO1FBQXRDLGlCQU9DO1FBTkcsS0FBSSxJQUFJLENBQUMsSUFBSSxRQUFRLEVBQUU7WUFDbkIsSUFBSSxDQUFDLGlCQUFpQixDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUUsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7U0FDOUM7UUFDRCxJQUFJLENBQUMsaUJBQWlCLENBQUMsT0FBTyxDQUFDLFVBQUMsSUFBSSxFQUFFLEtBQUs7WUFDdkMsS0FBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLEtBQUssQ0FBQztRQUN4QixDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFRDs7T0FFRztJQUNILDhCQUFVLEdBQVYsVUFBVyxnQkFBa0M7UUFBN0MsaUJBWUM7UUFYRyxJQUFHLElBQUksQ0FBQyxpQkFBaUIsSUFBSSxJQUFJLENBQUMsaUJBQWlCLENBQUMsSUFBSSxHQUFDLENBQUMsRUFBRTtZQUN4RCxPQUFPLGdCQUFnQixDQUFDLHVCQUF1QixDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQzdGLEdBQUcsQ0FBQyxVQUFDLGFBQWE7Z0JBQ2QsS0FBSSxDQUFDLGlCQUFpQixDQUFDLE9BQU8sQ0FBQyxVQUFDLElBQUksRUFBRSxLQUFLO29CQUN2QyxLQUFJLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FBQyxLQUFLLEVBQUUsYUFBYSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsYUFBYSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUM7Z0JBQzNGLENBQUMsQ0FBQyxDQUFDO1lBQ1AsQ0FBQyxDQUFDLENBQ0wsQ0FBQztTQUNMO2FBQUk7WUFDRCxPQUFPLEtBQUssRUFBRSxDQUFDO1NBQ2xCO0lBQ0wsQ0FBQztJQUVEOzs7T0FHRztJQUNILGdDQUFZLEdBQVosVUFBYSxLQUFZO1FBQ3JCLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLElBQUksSUFBSSxDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDdEUsQ0FBQztJQUlMLGdCQUFDO0FBQUQsQ0FBQyxBQXpERCxJQXlEQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEF1dGhvcml0eVNlcnZpY2UgfSBmcm9tICcuL2F1dGhvcml0eS5zZXJ2aWNlJztcbmltcG9ydCB7T2JzZXJ2YWJsZSwgZW1wdHl9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgbWFwIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuXG4vKipcbiAqIOadg+mZkFxuICovXG5leHBvcnQgY2xhc3MgQXV0aG9yaXR5IHtcbiAgICBcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5vcGVyYXRpb25MYWJlbE1hcCA9IG5ldyBNYXA8c3RyaW5nLCBzdHJpbmc+KCk7XG4gICAgICAgIHRoaXMuYXV0aE9mTGFiZWwgPSBuZXcgTWFwPHN0cmluZywgYm9vbGVhbj4oKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDku45sYWJlbOWIsOaTjeS9nOadg+mZkElE55qE5pig5bCE77yMbGFiZWzlj6/ku6XmmK9idXR0b24gaWTnrYlcbiAgICAgKi9cbiAgICBwcml2YXRlIG9wZXJhdGlvbkxhYmVsTWFwOiBNYXA8c3RyaW5nLCBzdHJpbmc+O1xuXG4gICAgLyoqXG4gICAgICog6K6w5b2VbGFiZWzlr7nkuo7nmoTmk43kvZzmnYPpmZDvvIzmmK/lkKbpgJrov4dcbiAgICAgKi9cbiAgICBwcml2YXRlIGF1dGhPZkxhYmVsOiBNYXA8c3RyaW5nLCBib29sZWFuPjtcblxuICAgIC8qKlxuICAgICAqIOiuvue9rmxhYmVs5Yiwb3BlcmF0aW9uIGlk55qE5pig5bCEXG4gICAgICogQHBhcmFtIGxhYmVsTWFwIFxuICAgICAqL1xuICAgIHByb3RlY3RlZCBzZXRMYWJlbE1hcChsYWJlbE1hcDogT2JqZWN0KSB7XG4gICAgICAgIGZvcih2YXIgaSBpbiBsYWJlbE1hcCkge1xuICAgICAgICAgICAgdGhpcy5vcGVyYXRpb25MYWJlbE1hcC5zZXQoaSwgbGFiZWxNYXBbaV0pO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMub3BlcmF0aW9uTGFiZWxNYXAuZm9yRWFjaCgob3BJZCwgbGFiZWwpID0+IHtcbiAgICAgICAgICAgIHRoaXNbbGFiZWxdID0gZmFsc2U7XG4gICAgICAgIH0pOyAgICAgICAgXG4gICAgfVxuICAgIFxuICAgIC8qKlxuICAgICAqIOWIneWni+WMluadg+mZkOeahOWAvFxuICAgICAqL1xuICAgIGluaXRpYWxpemUoYXV0aG9yaXR5U2VydmljZTogQXV0aG9yaXR5U2VydmljZSk6IE9ic2VydmFibGU8dm9pZD4ge1xuICAgICAgICBpZih0aGlzLm9wZXJhdGlvbkxhYmVsTWFwICYmIHRoaXMub3BlcmF0aW9uTGFiZWxNYXAuc2l6ZT4wKSB7XG4gICAgICAgICAgICByZXR1cm4gYXV0aG9yaXR5U2VydmljZS5xdWVyeU9wZXJhdGlvbkF1dGhvcml0eShBcnJheS5mcm9tKHRoaXMub3BlcmF0aW9uTGFiZWxNYXAudmFsdWVzKCkpKS5waXBlKFxuICAgICAgICAgICAgICAgIG1hcCgob3BlcmF0aW9uQXV0aCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLm9wZXJhdGlvbkxhYmVsTWFwLmZvckVhY2goKG9wSWQsIGxhYmVsKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmF1dGhPZkxhYmVsLnNldChsYWJlbCwgb3BlcmF0aW9uQXV0aC5oYXMob3BJZCkgPyBvcGVyYXRpb25BdXRoLmdldChvcElkKSA6IGZhbHNlKTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICk7XG4gICAgICAgIH1lbHNle1xuICAgICAgICAgICAgcmV0dXJuIGVtcHR5KCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDov5Tlm57mk43kvZzmnYPpmZDvvIzljbPnlKjmiLfmmK/lkKbmi6XmnIlMYWJlbOaJgOWvueW6lOeahOadg+mZkFxuICAgICAqIEBwYXJhbSBsYWJlbCDmoIfnrb7vvIzlj6/ku6XmmK9idXR0b24gaWTnrYlcbiAgICAgKi9cbiAgICBoYXNPcGVyYXRpb24obGFiZWw6c3RyaW5nKSB7ICAgICAgICBcbiAgICAgICAgcmV0dXJuIHRoaXMuYXV0aE9mTGFiZWwuaGFzKGxhYmVsKSAmJiB0aGlzLmF1dGhPZkxhYmVsLmdldChsYWJlbCk7XG4gICAgfVxuXG4gICAgLy8g6L+U5Zue5a2X5q615p2D6ZmQXG4gICAgLy8gaGFzRmllbGQoZmllbGQ6c3RyaW5nKVxufSJdfQ==