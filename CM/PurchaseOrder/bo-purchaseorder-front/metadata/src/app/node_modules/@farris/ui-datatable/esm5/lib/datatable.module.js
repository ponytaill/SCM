/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { PerfectScrollbarModule } from '@farris/ui-perfect-scrollbar';
import { PaginationModule } from '@farris/ui-pagination';
import { FarrisCommonModule } from '@farris/ui-common';
import { DataColumnModule } from '@farris/ui-common/column';
import { InputGroupModule } from '@farris/ui-input-group';
import { DataTableComponent } from './datatable.component';
import { DataTableHeaderComponent } from './table/datatable-header.component';
import { ColumnDirective } from './datatable-column.component';
import { DataTableBodyComponent, DTDblClickRowDirective } from './table/datatable-body.component';
import { DTCheckboxComponent } from './datatable-checkbox.component';
import { DatatableFooterComponent } from './table/datatable-footer.component';
import { DragColumnDirective } from './utils/drag.directive';
var DataTableModule = /** @class */ (function () {
    function DataTableModule() {
    }
    DataTableModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        CommonModule,
                        FormsModule,
                        PerfectScrollbarModule,
                        PaginationModule,
                        FarrisCommonModule.forRoot(),
                        InputGroupModule,
                        DataColumnModule.forRoot()
                    ],
                    exports: [
                        DataTableComponent, DataTableHeaderComponent,
                        ColumnDirective, DataTableBodyComponent,
                        FarrisCommonModule, DatatableFooterComponent,
                        DragColumnDirective
                    ],
                    declarations: [
                        DataTableComponent, DataTableHeaderComponent,
                        ColumnDirective, DragColumnDirective,
                        DataTableBodyComponent, DTCheckboxComponent,
                        DatatableFooterComponent, DTDblClickRowDirective
                    ],
                    providers: [],
                },] }
    ];
    return DataTableModule;
}());
export { DataTableModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YXRhYmxlLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvdWktZGF0YXRhYmxlLyIsInNvdXJjZXMiOlsibGliL2RhdGF0YWJsZS5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUU3QyxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUN0RSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUN6RCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUM1RCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUUxRCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUMzRCxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUM5RSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDL0QsT0FBTyxFQUFFLHNCQUFzQixFQUFFLHNCQUFzQixFQUFFLE1BQU0sa0NBQWtDLENBQUM7QUFDbEcsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDckUsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sb0NBQW9DLENBQUM7QUFFOUUsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFLN0Q7SUFBQTtJQTBCK0IsQ0FBQzs7Z0JBMUIvQixRQUFRLFNBQUM7b0JBQ04sT0FBTyxFQUFFO3dCQUNMLFlBQVk7d0JBQ1osV0FBVzt3QkFDWCxzQkFBc0I7d0JBQ3RCLGdCQUFnQjt3QkFDaEIsa0JBQWtCLENBQUMsT0FBTyxFQUFFO3dCQUM1QixnQkFBZ0I7d0JBQ2hCLGdCQUFnQixDQUFDLE9BQU8sRUFBRTtxQkFDN0I7b0JBQ0QsT0FBTyxFQUFFO3dCQUNMLGtCQUFrQixFQUFFLHdCQUF3Qjt3QkFDNUMsZUFBZSxFQUFFLHNCQUFzQjt3QkFDdkMsa0JBQWtCLEVBQUUsd0JBQXdCO3dCQUM1QyxtQkFBbUI7cUJBQ3RCO29CQUNELFlBQVksRUFBRTt3QkFDVixrQkFBa0IsRUFBRSx3QkFBd0I7d0JBQzVDLGVBQWUsRUFBRSxtQkFBbUI7d0JBQ3BDLHNCQUFzQixFQUFFLG1CQUFtQjt3QkFDM0Msd0JBQXdCLEVBQUUsc0JBQXNCO3FCQUNuRDtvQkFDRCxTQUFTLEVBQUUsRUFFVjtpQkFDSjs7SUFDOEIsc0JBQUM7Q0FBQSxBQTFCaEMsSUEwQmdDO1NBQW5CLGVBQWUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xyXG5pbXBvcnQgeyBGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcclxuXHJcbmltcG9ydCB7IFBlcmZlY3RTY3JvbGxiYXJNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLXBlcmZlY3Qtc2Nyb2xsYmFyJztcclxuaW1wb3J0IHsgUGFnaW5hdGlvbk1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktcGFnaW5hdGlvbic7XHJcbmltcG9ydCB7IEZhcnJpc0NvbW1vbk1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktY29tbW9uJztcclxuaW1wb3J0IHsgRGF0YUNvbHVtbk1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktY29tbW9uL2NvbHVtbic7XHJcbmltcG9ydCB7IElucHV0R3JvdXBNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWlucHV0LWdyb3VwJztcclxuXHJcbmltcG9ydCB7IERhdGFUYWJsZUNvbXBvbmVudCB9IGZyb20gJy4vZGF0YXRhYmxlLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IERhdGFUYWJsZUhlYWRlckNvbXBvbmVudCB9IGZyb20gJy4vdGFibGUvZGF0YXRhYmxlLWhlYWRlci5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBDb2x1bW5EaXJlY3RpdmUgfSBmcm9tICcuL2RhdGF0YWJsZS1jb2x1bW4uY29tcG9uZW50JztcclxuaW1wb3J0IHsgRGF0YVRhYmxlQm9keUNvbXBvbmVudCwgRFREYmxDbGlja1Jvd0RpcmVjdGl2ZSB9IGZyb20gJy4vdGFibGUvZGF0YXRhYmxlLWJvZHkuY29tcG9uZW50JztcclxuaW1wb3J0IHsgRFRDaGVja2JveENvbXBvbmVudCB9IGZyb20gJy4vZGF0YXRhYmxlLWNoZWNrYm94LmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IERhdGF0YWJsZUZvb3RlckNvbXBvbmVudCB9IGZyb20gJy4vdGFibGUvZGF0YXRhYmxlLWZvb3Rlci5jb21wb25lbnQnO1xyXG5cclxuaW1wb3J0IHsgRHJhZ0NvbHVtbkRpcmVjdGl2ZSB9IGZyb20gJy4vdXRpbHMvZHJhZy5kaXJlY3RpdmUnO1xyXG5pbXBvcnQgeyBEYXRhVGFibGVTZXJ2aWNlIH0gZnJvbSAnLi9kYXRhdGFibGUuc2VydmljZSc7XHJcblxyXG5cclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgICBpbXBvcnRzOiBbXHJcbiAgICAgICAgQ29tbW9uTW9kdWxlLFxyXG4gICAgICAgIEZvcm1zTW9kdWxlLFxyXG4gICAgICAgIFBlcmZlY3RTY3JvbGxiYXJNb2R1bGUsXHJcbiAgICAgICAgUGFnaW5hdGlvbk1vZHVsZSxcclxuICAgICAgICBGYXJyaXNDb21tb25Nb2R1bGUuZm9yUm9vdCgpLFxyXG4gICAgICAgIElucHV0R3JvdXBNb2R1bGUsXHJcbiAgICAgICAgRGF0YUNvbHVtbk1vZHVsZS5mb3JSb290KClcclxuICAgIF0sXHJcbiAgICBleHBvcnRzOiBbXHJcbiAgICAgICAgRGF0YVRhYmxlQ29tcG9uZW50LCBEYXRhVGFibGVIZWFkZXJDb21wb25lbnQsXHJcbiAgICAgICAgQ29sdW1uRGlyZWN0aXZlLCBEYXRhVGFibGVCb2R5Q29tcG9uZW50LFxyXG4gICAgICAgIEZhcnJpc0NvbW1vbk1vZHVsZSwgRGF0YXRhYmxlRm9vdGVyQ29tcG9uZW50LFxyXG4gICAgICAgIERyYWdDb2x1bW5EaXJlY3RpdmVcclxuICAgIF0sXHJcbiAgICBkZWNsYXJhdGlvbnM6IFtcclxuICAgICAgICBEYXRhVGFibGVDb21wb25lbnQsIERhdGFUYWJsZUhlYWRlckNvbXBvbmVudCxcclxuICAgICAgICBDb2x1bW5EaXJlY3RpdmUsIERyYWdDb2x1bW5EaXJlY3RpdmUsXHJcbiAgICAgICAgRGF0YVRhYmxlQm9keUNvbXBvbmVudCwgRFRDaGVja2JveENvbXBvbmVudCxcclxuICAgICAgICBEYXRhdGFibGVGb290ZXJDb21wb25lbnQsIERURGJsQ2xpY2tSb3dEaXJlY3RpdmVcclxuICAgIF0sXHJcbiAgICBwcm92aWRlcnM6IFtcclxuXHJcbiAgICBdLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgRGF0YVRhYmxlTW9kdWxlIHsgfVxyXG4iXX0=