/*
 * @Author: Witt
 * @Date: 2018-12-27 09:26:41
 * @Last Modified by: Witt
 * @Last Modified time: 2019-01-15 22:00:45
 */
import { DataPathNode } from './data_path_node';
/**
 * 变更路径（简单双向列表）
 */
class DataPath {
    /**
     * 构造函数
     */
    constructor() {
        this.head = new DataPathNode(null, null);
        this.length = 0;
    }
    /**
     * 添加一个节点到头部
     */
    unshift(type, data) {
        const newNode = new DataPathNode(type, data);
        newNode.next = this.head.next;
        newNode.prev = this.head;
        this.head.next = newNode;
        if (newNode.next) {
            newNode.next.prev = newNode;
        }
        this.length++;
    }
    /**
     * 在链表最后追加一个节点
     */
    push(type, data) {
        const tailNode = this.getTail();
        const newNode = new DataPathNode(type, data);
        tailNode.next = newNode;
        this.length++;
    }
    /**
     * 获取链表尾部节点
     */
    getTail() {
        let lastNode = this.head;
        while (lastNode.next) {
            lastNode = lastNode.next;
        }
        return lastNode;
    }
    /**
     * 转换为数组格式
     */
    toArray() {
        const pathArray = [];
        let currentNode = this.head.next;
        while (currentNode) {
            pathArray.push(`${currentNode.type}:${currentNode.value}`);
            currentNode = currentNode.next;
        }
        return pathArray;
    }
    /**
     * 转换为字符串格式
     */
    toString() {
        const pathArray = this.toArray();
        const pathString = pathArray.join(', ');
        return `[${pathString}]`;
    }
    /**
     * 拷贝
     */
    clone() {
        const newDataPath = new DataPath();
        let curDataNode = this.head.next;
        while (curDataNode) {
            newDataPath.push(curDataNode.type, curDataNode.value);
            curDataNode = curDataNode.next;
        }
        return newDataPath;
    }
}
export { DataPath };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YV9wYXRoLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy9tb2JpbGUtZGV2a2l0LyIsInNvdXJjZXMiOlsibGliL2VudGl0eS9lbnRpdHktcGF0aC9kYXRhX3BhdGgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7O0dBS0c7QUFFSCxPQUFPLEVBQUUsWUFBWSxFQUFvQixNQUFNLGtCQUFrQixDQUFDO0FBQ2xFOztHQUVHO0FBQ0gsTUFBTSxRQUFRO0lBWVo7O09BRUc7SUFDSDtRQUNFLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxZQUFZLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQ3pDLElBQUksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDO0lBQ2xCLENBQUM7SUFFRDs7T0FFRztJQUNJLE9BQU8sQ0FBQyxJQUFzQixFQUFFLElBQVM7UUFDOUMsTUFBTSxPQUFPLEdBQUcsSUFBSSxZQUFZLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQzdDLE9BQU8sQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUM7UUFDOUIsT0FBTyxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDO1FBRXpCLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxHQUFHLE9BQU8sQ0FBQztRQUN6QixJQUFJLE9BQU8sQ0FBQyxJQUFJLEVBQUU7WUFDaEIsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLEdBQUcsT0FBTyxDQUFDO1NBQzdCO1FBRUQsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO0lBQ2hCLENBQUM7SUFFRDs7T0FFRztJQUNJLElBQUksQ0FBQyxJQUFzQixFQUFFLElBQVM7UUFDM0MsTUFBTSxRQUFRLEdBQUcsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQ2hDLE1BQU0sT0FBTyxHQUFHLElBQUksWUFBWSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztRQUM3QyxRQUFRLENBQUMsSUFBSSxHQUFHLE9BQU8sQ0FBQztRQUN4QixJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7SUFDaEIsQ0FBQztJQUVEOztPQUVHO0lBQ0ksT0FBTztRQUNaLElBQUksUUFBUSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUM7UUFDekIsT0FBTyxRQUFRLENBQUMsSUFBSSxFQUFFO1lBQ3BCLFFBQVEsR0FBRyxRQUFRLENBQUMsSUFBSSxDQUFDO1NBQzFCO1FBQ0QsT0FBTyxRQUFRLENBQUM7SUFDbEIsQ0FBQztJQUVEOztPQUVHO0lBQ0ksT0FBTztRQUNaLE1BQU0sU0FBUyxHQUFHLEVBQUUsQ0FBQztRQUNyQixJQUFJLFdBQVcsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQztRQUNqQyxPQUFPLFdBQVcsRUFBRTtZQUNsQixTQUFTLENBQUMsSUFBSSxDQUFDLEdBQUcsV0FBVyxDQUFDLElBQUksSUFBSSxXQUFXLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBRTtZQUM1RCxXQUFXLEdBQUcsV0FBVyxDQUFDLElBQUksQ0FBQztTQUNoQztRQUNELE9BQU8sU0FBUyxDQUFDO0lBQ25CLENBQUM7SUFFRDs7T0FFRztJQUNJLFFBQVE7UUFDYixNQUFNLFNBQVMsR0FBRyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDakMsTUFBTSxVQUFVLEdBQUcsU0FBUyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN4QyxPQUFPLElBQUksVUFBVSxHQUFHLENBQUM7SUFDM0IsQ0FBQztJQUVEOztPQUVHO0lBQ0ksS0FBSztRQUNWLE1BQU0sV0FBVyxHQUFHLElBQUksUUFBUSxFQUFFLENBQUM7UUFDbkMsSUFBSSxXQUFXLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUM7UUFDakMsT0FBTyxXQUFXLEVBQUU7WUFDbEIsV0FBVyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxFQUFFLFdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUN0RCxXQUFXLEdBQUcsV0FBVyxDQUFDLElBQUksQ0FBQztTQUNoQztRQUNELE9BQU8sV0FBVyxDQUFDO0lBQ3JCLENBQUM7Q0FDRjtBQUVELE9BQU8sRUFBRSxRQUFRLEVBQUUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXHJcbiAqIEBBdXRob3I6IFdpdHRcclxuICogQERhdGU6IDIwMTgtMTItMjcgMDk6MjY6NDFcclxuICogQExhc3QgTW9kaWZpZWQgYnk6IFdpdHRcclxuICogQExhc3QgTW9kaWZpZWQgdGltZTogMjAxOS0wMS0xNSAyMjowMDo0NVxyXG4gKi9cclxuXHJcbmltcG9ydCB7IERhdGFQYXRoTm9kZSwgRGF0YVBhdGhOb2RlVHlwZSB9IGZyb20gJy4vZGF0YV9wYXRoX25vZGUnO1xyXG4vKipcclxuICog5Y+Y5pu06Lev5b6E77yI566A5Y2V5Y+M5ZCR5YiX6KGo77yJXHJcbiAqL1xyXG5jbGFzcyBEYXRhUGF0aCB7XHJcblxyXG4gIC8qKlxyXG4gICAqIOWktOiKgueCuVxyXG4gICAqL1xyXG4gIHB1YmxpYyBoZWFkOiBEYXRhUGF0aE5vZGU7XHJcblxyXG4gIC8qKlxyXG4gICAqIOmVv+W6plxyXG4gICAqL1xyXG4gIHB1YmxpYyBsZW5ndGg6IG51bWJlcjtcclxuXHJcbiAgLyoqXHJcbiAgICog5p6E6YCg5Ye95pWwXHJcbiAgICovXHJcbiAgY29uc3RydWN0b3IoKSB7XHJcbiAgICB0aGlzLmhlYWQgPSBuZXcgRGF0YVBhdGhOb2RlKG51bGwsIG51bGwpO1xyXG4gICAgdGhpcy5sZW5ndGggPSAwO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog5re75Yqg5LiA5Liq6IqC54K55Yiw5aS06YOoXHJcbiAgICovXHJcbiAgcHVibGljIHVuc2hpZnQodHlwZTogRGF0YVBhdGhOb2RlVHlwZSwgZGF0YTogYW55KSB7XHJcbiAgICBjb25zdCBuZXdOb2RlID0gbmV3IERhdGFQYXRoTm9kZSh0eXBlLCBkYXRhKTtcclxuICAgIG5ld05vZGUubmV4dCA9IHRoaXMuaGVhZC5uZXh0O1xyXG4gICAgbmV3Tm9kZS5wcmV2ID0gdGhpcy5oZWFkO1xyXG5cclxuICAgIHRoaXMuaGVhZC5uZXh0ID0gbmV3Tm9kZTtcclxuICAgIGlmIChuZXdOb2RlLm5leHQpIHtcclxuICAgICAgbmV3Tm9kZS5uZXh0LnByZXYgPSBuZXdOb2RlO1xyXG4gICAgfVxyXG5cclxuICAgIHRoaXMubGVuZ3RoKys7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDlnKjpk77ooajmnIDlkI7ov73liqDkuIDkuKroioLngrlcclxuICAgKi9cclxuICBwdWJsaWMgcHVzaCh0eXBlOiBEYXRhUGF0aE5vZGVUeXBlLCBkYXRhOiBhbnkpIHtcclxuICAgIGNvbnN0IHRhaWxOb2RlID0gdGhpcy5nZXRUYWlsKCk7XHJcbiAgICBjb25zdCBuZXdOb2RlID0gbmV3IERhdGFQYXRoTm9kZSh0eXBlLCBkYXRhKTtcclxuICAgIHRhaWxOb2RlLm5leHQgPSBuZXdOb2RlO1xyXG4gICAgdGhpcy5sZW5ndGgrKztcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOiOt+WPlumTvuihqOWwvumDqOiKgueCuVxyXG4gICAqL1xyXG4gIHB1YmxpYyBnZXRUYWlsKCk6IERhdGFQYXRoTm9kZSB7XHJcbiAgICBsZXQgbGFzdE5vZGUgPSB0aGlzLmhlYWQ7XHJcbiAgICB3aGlsZSAobGFzdE5vZGUubmV4dCkge1xyXG4gICAgICBsYXN0Tm9kZSA9IGxhc3ROb2RlLm5leHQ7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gbGFzdE5vZGU7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDovazmjaLkuLrmlbDnu4TmoLzlvI9cclxuICAgKi9cclxuICBwdWJsaWMgdG9BcnJheSgpIHtcclxuICAgIGNvbnN0IHBhdGhBcnJheSA9IFtdO1xyXG4gICAgbGV0IGN1cnJlbnROb2RlID0gdGhpcy5oZWFkLm5leHQ7XHJcbiAgICB3aGlsZSAoY3VycmVudE5vZGUpIHtcclxuICAgICAgcGF0aEFycmF5LnB1c2goYCR7Y3VycmVudE5vZGUudHlwZX06JHtjdXJyZW50Tm9kZS52YWx1ZX1gKSA7XHJcbiAgICAgIGN1cnJlbnROb2RlID0gY3VycmVudE5vZGUubmV4dDtcclxuICAgIH1cclxuICAgIHJldHVybiBwYXRoQXJyYXk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDovazmjaLkuLrlrZfnrKbkuLLmoLzlvI9cclxuICAgKi9cclxuICBwdWJsaWMgdG9TdHJpbmcoKSB7XHJcbiAgICBjb25zdCBwYXRoQXJyYXkgPSB0aGlzLnRvQXJyYXkoKTtcclxuICAgIGNvbnN0IHBhdGhTdHJpbmcgPSBwYXRoQXJyYXkuam9pbignLCAnKTtcclxuICAgIHJldHVybiBgWyR7cGF0aFN0cmluZ31dYDtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOaLt+i0nVxyXG4gICAqL1xyXG4gIHB1YmxpYyBjbG9uZSgpOiBEYXRhUGF0aCB7XHJcbiAgICBjb25zdCBuZXdEYXRhUGF0aCA9IG5ldyBEYXRhUGF0aCgpO1xyXG4gICAgbGV0IGN1ckRhdGFOb2RlID0gdGhpcy5oZWFkLm5leHQ7XHJcbiAgICB3aGlsZSAoY3VyRGF0YU5vZGUpIHtcclxuICAgICAgbmV3RGF0YVBhdGgucHVzaChjdXJEYXRhTm9kZS50eXBlLCBjdXJEYXRhTm9kZS52YWx1ZSk7XHJcbiAgICAgIGN1ckRhdGFOb2RlID0gY3VyRGF0YU5vZGUubmV4dDtcclxuICAgIH1cclxuICAgIHJldHVybiBuZXdEYXRhUGF0aDtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCB7IERhdGFQYXRoIH07XHJcbiJdfQ==