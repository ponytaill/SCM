import { Injectable, ElementRef } from '@angular/core';
import { Repository, FrameContext } from '@farris/devkit';
import { FrameContextService } from './frame-context.service';
import { FormControlService } from './form-control.service';
var FIXED_COLUMN_START_INDEX = 5000;
var GRID_COLUMN_START_INDEX = 10000;
/**
 * 表单验证服务
 * @scope FrameComponent
 */
var FocusInvalidService = /** @class */ (function () {
    /**
     * 构造函数
     */
    function FocusInvalidService(repository, frameContext, frameContextService, formControlService) {
        this.repository = repository;
        this.frameContext = frameContext;
        this.frameContextService = frameContextService;
        this.formControlService = formControlService;
    }
    /**
     * 向第一个验证不通过的字段设置焦点
     */
    FocusInvalidService.prototype.focusInvalidInput = function (verifyInformations, rootElement) {
        // 无验证不通过信息时，直接返回。
        if (!verifyInformations || !verifyInformations.length) {
            return;
        }
        var targetField = null;
        var firstVerifyInformation = this.selectFirstVerifyInformation(verifyInformations, rootElement);
        if (firstVerifyInformation) {
            targetField = firstVerifyInformation.targetField;
            if (targetField) {
                var canFocus = this.focusElement(targetField, rootElement);
                if (canFocus) {
                    verifyInformations['focused'] = true;
                }
            }
        }
    };
    /**
     * 设置DataGrid单元格焦点
     */
    FocusInvalidService.prototype.focusGridCell = function (verifyInformations, focusableDataGrid) {
        if (!verifyInformations || !verifyInformations.length || verifyInformations['focused'] == true || focusableDataGrid.disabled === true) {
            return;
        }
        var targetField = null;
        var targetId = null;
        var firstVerifyInformation = this.selectFirstVerifyInformation(verifyInformations);
        if (firstVerifyInformation) {
            targetField = firstVerifyInformation.targetField;
            targetId = firstVerifyInformation.id;
            verifyInformations['focused'] = true;
            focusableDataGrid.editCell(targetId, targetField);
        }
    };
    FocusInvalidService.prototype.updateVerifyInformationsIndex = function (verifyInformations, rootElement) {
        var _this = this;
        verifyInformations = verifyInformations.filter(function (verifyInformation) {
            var frameContexts = _this.getFrameContextsByPropertyPath(verifyInformation.fullPath, '/');
            var frameContext = frameContexts && frameContexts.filter(function (frameContext) { return frameContext && frameContext.frameId === _this.frameContext.frameId; });
            return frameContext ? true : false;
        });
        return verifyInformations.map(function (verifyInformation) {
            var tabIndex = -1;
            if (verifyInformation) {
                if (rootElement && verifyInformation.targetField) {
                    var input = _this.getInputElementById(verifyInformation.targetField, rootElement);
                    tabIndex = input && input.getAttribute('tabindex') || -1;
                    tabIndex = Number(tabIndex);
                }
                // const frameContexts = this.getFrameContextsByPropertyPath(verifyInformation.fullPath, '/');
                var frameContext = _this.frameContext; //frameContexts && frameContexts[0] || null;
                var frameIndex = frameContext.index + 1;
                verifyInformation.tabIndex = tabIndex;
                verifyInformation.domIndex = -1;
                verifyInformation.frameIndex = -1;
                verifyInformation.position = tabIndex;
                if (frameContext) {
                    var domIndex = verifyInformation.fullPath && _this.getFieldIndex(frameContext, verifyInformation.fullPath) || 0;
                    if (domIndex > 0) {
                        var rowIndex = verifyInformation.index || 0;
                        verifyInformation.domIndex = domIndex;
                        verifyInformation.frameIndex = frameContext.index;
                        verifyInformation.position = tabIndex > 0 ? tabIndex : (frameIndex * 1000 + rowIndex * 1000 + domIndex);
                    }
                }
            }
            return verifyInformation;
        });
    };
    FocusInvalidService.prototype.isGridComponent = function (frameContext) {
        if (frameContext) {
            var dataGridColumnsName = frameContext.viewModel['dataGridColumnsName'] || null;
            return dataGridColumnsName ? true : false;
        }
        return undefined;
    };
    FocusInvalidService.prototype.getColumnIndex = function (frameContext, binding) {
        binding = binding.split('/').filter(function (p) { return p; }).join('/');
        var bindingPaths = frameContext.viewModel.bindingPath.split('/').filter(function (p) { return p; });
        var dataGridColumnsName = frameContext.viewModel['dataGridColumnsName'] || null;
        var frameIndex = frameContext.index + 1;
        if (!dataGridColumnsName) {
            return undefined;
        }
        var columns = frameContext.viewModel[dataGridColumnsName];
        if (!columns || columns.length < 1) {
            return undefined;
        }
        // 打平columns
        columns = columns.reduce(function (results, item) {
            if (Array.isArray(item)) {
                return results.concat(item);
            }
            return results.concat([item]);
        }, []);
        var position = -1;
        var _loop_1 = function (index) {
            var column = columns[index];
            var fields = column && column.field && column.field.split('.').filter(function (p) { return p; }) || null;
            if (!fields) {
                return "continue";
            }
            if (bindingPaths.concat(fields).join('/') === binding) {
                var fixed_1 = column.fixed;
                if (fixed_1) {
                    var fixedColumns = columns.filter(function (item) { return item.fixed === fixed_1; });
                    var fixedColumnIndex = this_1.getIndexFromColumns(fixedColumns, binding);
                    if (fixed_1 === 'left') {
                        position = frameIndex * FIXED_COLUMN_START_INDEX + fixedColumnIndex;
                    }
                    else {
                        position = frameIndex * GRID_COLUMN_START_INDEX + 1000 + fixedColumnIndex;
                    }
                }
                else {
                    position = frameIndex * GRID_COLUMN_START_INDEX + index;
                }
                return "break";
            }
        };
        var this_1 = this;
        for (var index = 0; index < columns.length; index++) {
            var state_1 = _loop_1(index);
            if (state_1 === "break")
                break;
        }
        return position;
    };
    FocusInvalidService.prototype.getIndexFromColumns = function (columns, binding) {
        var bindingPaths = this.frameContext.viewModel.bindingPath.split('/').filter(function (p) { return p; });
        return columns.findIndex(function (column) {
            var fields = column && column.field && column.field.split('.').filter(function (p) { return p; }) || null;
            if (!fields) {
                return false;
            }
            if (bindingPaths.concat(fields).join('/') === binding) {
                return true;
            }
            return false;
        });
    };
    FocusInvalidService.prototype.selectFirstVerifyInformation = function (verifyInformations, rootElement) {
        verifyInformations = this.updateVerifyInformationsIndex(verifyInformations, rootElement);
        verifyInformations.sort(function (v1, v2) { return Number(v1.position) - Number(v2.position); });
        return verifyInformations && verifyInformations.length > 0 && verifyInformations[0] || null;
    };
    FocusInvalidService.prototype.getInputElementById = function (targetField, rootElement) {
        var element = rootElement.nativeElement.ownerDocument.getElementById(targetField) || null;
        if (element && element.tagName !== 'INPUT') {
            var inputs = element.getElementsByTagName('input');
            if (inputs.length) {
                element = inputs[0];
            }
        }
        return element;
    };
    FocusInvalidService.prototype.getFrameContextsByPropertyPath = function (propertyPath, separtor) {
        if (separtor === void 0) { separtor = '/'; }
        if (!propertyPath) {
            return [];
        }
        var frameContexts = this.frameContext && this.frameContext.appContext.frameContextManager.getFrameContexts() || [];
        return frameContexts.filter(function (frameContext) {
            var formControls = frameContext && frameContext.form && frameContext.form.ngFormControls || {};
            var bindingPath = frameContext && frameContext.viewModel && frameContext.viewModel.bindingPath || '';
            if (formControls && Object.keys(formControls).length > 0) {
                var key = Object.keys(formControls).find(function (key) {
                    var formControl = formControls[key];
                    if (!formControl || !formControl.binding) {
                        return false;
                    }
                    var bindings = formControl.binding.split('.').filter(function (p) { return p; });
                    var bindingPaths = bindingPath.split('/').filter(function (p) { return p; });
                    var fullPath = bindingPaths.concat(bindings);
                    return propertyPath.split(separtor).filter(function (p) { return p; }).join('/') === fullPath.join('/');
                });
                return key ? true : false;
            }
            return false;
        });
    };
    FocusInvalidService.prototype.getFormControlIndexByBindingPath = function (frameContext, binding) {
        var ngFormControls = this.getFormControlsByFrameContext(frameContext);
        if (!ngFormControls) {
            return null;
        }
        var bindings = binding.split('/').filter(function (p) { return p; });
        return Object.values(ngFormControls).findIndex(function (ngFormControl) {
            if (!ngFormControl) {
                return false;
            }
            var bindingPath = frameContext.viewModel.bindingPath;
            var bindingPaths = bindingPath.split('/').filter(function (p) { return p; });
            var formControlBindingPaths = ngFormControl.binding.split('.').filter(function (p) { return p; });
            var fullPath = bindingPaths.concat(formControlBindingPaths);
            return fullPath.join('/') === bindings.join('/');
        });
    };
    FocusInvalidService.prototype.getFieldIndex = function (frameContext, binding) {
        var isGridComponent = this.isGridComponent(frameContext);
        if (isGridComponent) {
            return this.getColumnIndex(frameContext, binding);
        }
        else {
            return this.getFormControlIndexByBindingPath(frameContext, binding);
        }
    };
    FocusInvalidService.prototype.getFormControlsByFrameContext = function (frameContext) {
        return frameContext && frameContext.form && frameContext.form.ngFormControls || null;
    };
    FocusInvalidService.prototype.focusElement = function (elementId, rootElement) {
        var focused = false;
        var elementToFocus = rootElement.nativeElement.ownerDocument.getElementById(elementId);
        // 未获取到指定字段时，返回，不再设置焦点。
        if (elementToFocus) {
            // 如果有多个id重复的元素，则不定位
            var elements = rootElement.nativeElement.ownerDocument.querySelectorAll("#" + elementId);
            if (elements && elements.length > 1) {
                return focused;
            }
            // 如果绑定目标字段的控件不是Input元素，则查找其下级节点。
            if (elementToFocus.tagName !== 'INPUT') {
                var subElements = elementToFocus.getElementsByTagName('input');
                if (subElements.length) {
                    elementToFocus = subElements[0];
                }
            }
            elementToFocus.focus();
            focused = true;
        }
        return focused;
    };
    /**
     * 设置焦点
     * @param verifyInformation 错误信息
     * @param frameContext 上下文
     * @returns
     */
    FocusInvalidService.prototype.focus = function (verifyInformation, frameContext) {
        if (!verifyInformation) {
            return;
        }
        var isGridValidation = verifyInformation.index !== null;
        if (isGridValidation) {
            var grid_1 = this.getGridRef(frameContext);
            if (grid_1) {
                setTimeout(function () {
                    grid_1.editCell(verifyInformation.id, verifyInformation.targetField);
                }, 0);
            }
        }
        else {
            var frameElement_1 = this.getComponentRef(frameContext);
            var elementId = verifyInformation.targetField;
            this.focusById(elementId, frameElement_1);
        }
    };
    /**
     * 通过控件id设置焦点
     * @param elementId
     * @param elementRef
     */
    FocusInvalidService.prototype.focusById = function (elementId, elementRef) {
        var document = elementRef && elementRef.nativeElement.ownerDocument || window.document;
        if (document) {
            var element = document.getElementById(elementId);
            if (element.tagName !== 'INPUT') {
                var subElements = element.getElementsByTagName('input');
                if (subElements.length) {
                    var input = subElements[0];
                    if (input && typeof input.focus === 'function') {
                        input.focus();
                    }
                }
            }
            else {
                element.focus();
            }
        }
    };
    /**
     * 获取组件实例
     * @param frameContext
     * @returns
     */
    FocusInvalidService.prototype.getComponentRef = function (frameContext) {
        return this.frameContext && this.frameContext.injector.get(ElementRef, null) || null;
    };
    /**
     * 获取grid实例
     * @param frameContext frameContext
     * @returns
     */
    FocusInvalidService.prototype.getGridRef = function (frameContext) {
        var _this = this;
        var namespace = frameContext.namespace;
        var bindingPath = frameContext.viewModel.bindingPath;
        var frameContexts = this.frameContext.appContext.frameContextManager.getFrameContextsByNamespace(namespace) || [];
        var matchedFrameContexts = frameContexts.filter(function (frameContext) { return frameContext.viewModel && frameContext.viewModel.bindingPath.split('/').filter(function (p) { return p; }).toString() === bindingPath.split('/').filter(function (p) { return p; }).toString(); });
        var result = null;
        if (matchedFrameContexts) {
            matchedFrameContexts.every(function (frameContext) {
                var frameId = frameContext.frameId;
                var componentsMap = _this.frameContext.appContext.componentManager.getComponentsByFrameId(frameId);
                if (!componentsMap) {
                    return true;
                }
                var datagridComponent = Array.from(componentsMap.values()).find(function (component) { return component && component['__component_type__'] === 'DatagridComponent'; });
                if (datagridComponent) {
                    result = datagridComponent;
                    return false;
                }
                else {
                    return true;
                }
            });
        }
        return result;
    };
    FocusInvalidService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    FocusInvalidService.ctorParameters = function () { return [
        { type: Repository },
        { type: FrameContext },
        { type: FrameContextService },
        { type: FormControlService }
    ]; };
    return FocusInvalidService;
}());
export { FocusInvalidService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9jdXMtaW52YWxpZC5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy9jb21tYW5kLXNlcnZpY2VzLyIsInNvdXJjZXMiOlsibGliL2ZvY3VzLWludmFsaWQuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN2RCxPQUFPLEVBQUUsVUFBVSxFQUFFLFlBQVksRUFBaUIsTUFBTSxnQkFBZ0IsQ0FBQztBQUN6RSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUM5RCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUU1RCxJQUFNLHdCQUF3QixHQUFHLElBQUksQ0FBQztBQUN0QyxJQUFNLHVCQUF1QixHQUFHLEtBQUssQ0FBQztBQU10Qzs7O0dBR0c7QUFDSDtJQUVFOztPQUVHO0lBQ0gsNkJBQ1UsVUFBMkIsRUFDM0IsWUFBMEIsRUFDMUIsbUJBQXdDLEVBQ3hDLGtCQUFzQztRQUh0QyxlQUFVLEdBQVYsVUFBVSxDQUFpQjtRQUMzQixpQkFBWSxHQUFaLFlBQVksQ0FBYztRQUMxQix3QkFBbUIsR0FBbkIsbUJBQW1CLENBQXFCO1FBQ3hDLHVCQUFrQixHQUFsQixrQkFBa0IsQ0FBb0I7SUFFaEQsQ0FBQztJQUVEOztPQUVHO0lBQ0ksK0NBQWlCLEdBQXhCLFVBQXlCLGtCQUF5QixFQUFFLFdBQTRCO1FBQzlFLGtCQUFrQjtRQUNsQixJQUFJLENBQUMsa0JBQWtCLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxNQUFNLEVBQUU7WUFDckQsT0FBTztTQUNSO1FBQ0QsSUFBSSxXQUFXLEdBQUcsSUFBSSxDQUFDO1FBQ3ZCLElBQU0sc0JBQXNCLEdBQUcsSUFBSSxDQUFDLDRCQUE0QixDQUFDLGtCQUFrQixFQUFFLFdBQVcsQ0FBQyxDQUFDO1FBQ2xHLElBQUksc0JBQXNCLEVBQUU7WUFDMUIs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QUFHLFlBQVksQ0FBQyxPQUFPLENBQUM7Z0JBQ3JDLElBQU0sYUFBYSxHQUFHLEtBQUksQ0FBQyxZQUFZLENBQUMsVUFBVSxDQUFDLGdCQUFnQixDQUFDLHNCQUFzQixDQUFDLE9BQU8sQ0FBQyxDQUFDO2dCQUNwRyxJQUFJLENBQUMsYUFBYSxFQUFFO29CQUNsQixPQUFPLElBQUksQ0FBQztpQkFDYjtnQkFDRCxJQUFNLGlCQUFpQixHQUFHLEtBQUssQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQUMsU0FBYyxJQUFLLE9BQUEsU0FBUyxJQUFJLFNBQVMsQ0FBQyxvQkFBb0IsQ0FBQyxLQUFLLG1CQUFtQixFQUFwRSxDQUFvRSxDQUFDLENBQUM7Z0JBQzVKLElBQUksaUJBQWlCLEVBQUU7b0JBQ3JCLE1BQU0sR0FBRyxpQkFBaUIsQ0FBQztvQkFDM0IsT0FBTyxLQUFLLENBQUM7aUJBQ2Q7cUJBQU07b0JBQ0wsT0FBTyxJQUFJLENBQUM7aUJBQ2I7WUFDSCxDQUFDLENBQUMsQ0FBQztTQUNKO1FBQ0QsT0FBTyxNQUFNLENBQUM7SUFDaEIsQ0FBQzs7Z0JBalVGLFVBQVU7Ozs7Z0JBZkYsVUFBVTtnQkFBRSxZQUFZO2dCQUN4QixtQkFBbUI7Z0JBQ25CLGtCQUFrQjs7SUErVTNCLDBCQUFDO0NBQUEsQUFsVUQsSUFrVUM7QUFFRCxPQUFPLEVBQTZCLG1CQUFtQixFQUFFLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlLCBFbGVtZW50UmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBSZXBvc2l0b3J5LCBGcmFtZUNvbnRleHQsIE5nRm9ybUNvbnRyb2wgfSBmcm9tICdAZmFycmlzL2RldmtpdCc7XG5pbXBvcnQgeyBGcmFtZUNvbnRleHRTZXJ2aWNlIH0gZnJvbSAnLi9mcmFtZS1jb250ZXh0LnNlcnZpY2UnO1xuaW1wb3J0IHsgRm9ybUNvbnRyb2xTZXJ2aWNlIH0gZnJvbSAnLi9mb3JtLWNvbnRyb2wuc2VydmljZSc7XG5cbmNvbnN0IEZJWEVEX0NPTFVNTl9TVEFSVF9JTkRFWCA9IDUwMDA7XG5jb25zdCBHUklEX0NPTFVNTl9TVEFSVF9JTkRFWCA9IDEwMDAwO1xuaW50ZXJmYWNlIEZvY3VzYWJsZUludmFsaWRhdGlvbkdyaWQge1xuICBlZGl0Q2VsbChyb3dJZDogYW55LCBmaWVsZDogc3RyaW5nKTogdm9pZDtcbiAgZGlzYWJsZWQ6IGJvb2xlYW47XG59XG5cbi8qKlxuICog6KGo5Y2V6aqM6K+B5pyN5YqhXG4gKiBAc2NvcGUgRnJhbWVDb21wb25lbnRcbiAqL1xuQEluamVjdGFibGUoKVxuY2xhc3MgRm9jdXNJbnZhbGlkU2VydmljZSB7XG4gIC8qKlxuICAgKiDmnoTpgKDlh73mlbBcbiAgICovXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgcmVwb3NpdG9yeTogUmVwb3NpdG9yeTxhbnk+LFxuICAgIHByaXZhdGUgZnJhbWVDb250ZXh0OiBGcmFtZUNvbnRleHQsXG4gICAgcHJpdmF0ZSBmcmFtZUNvbnRleHRTZXJ2aWNlOiBGcmFtZUNvbnRleHRTZXJ2aWNlLFxuICAgIHByaXZhdGUgZm9ybUNvbnRyb2xTZXJ2aWNlOiBGb3JtQ29udHJvbFNlcnZpY2VcbiAgKSB7XG4gIH1cblxuICAvKipcbiAgICog5ZCR56ys5LiA5Liq6aqM6K+B5LiN6YCa6L+H55qE5a2X5q616K6+572u54Sm54K5XG4gICAqL1xuICBwdWJsaWMgZm9jdXNJbnZhbGlkSW5wdXQodmVyaWZ5SW5mb3JtYXRpb25zOiBhbnlbXSwgcm9vdEVsZW1lbnQ6IEVsZW1lbnRSZWY8YW55Pikge1xuICAgIC8vIOaXoOmqjOivgeS4jemAmui/h+S/oeaBr+aXtu+8jOebtOaOpei/lOWbnuOAglxuICAgIGlmICghdmVyaWZ5SW5mb3JtYXRpb25zIHx8ICF2ZXJpZnlJbmZvcm1hdGlvbnMubGVuZ3RoKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGxldCB0YXJnZXRGaWVsZCA9IG51bGw7XG4gICAgY29uc3QgZmlyc3RWZXJpZnlJbmZvcm1hdGlvbiA9IHRoaXMuc2VsZWN0Rmlyc3RWZXJpZnlJbmZvcm1hdGlvbih2ZXJpZnlJbmZvcm1hdGlvbnMsIHJvb3RFbGVtZW50KTtcbiAgICBpZiAoZmlyc3RWZXJpZnlJbmZvcm1hdGlvbikge1xuICAgICAgdGFyZ2V0RmllbGQgPSBmaXJzdFZlcmlmeUluZm9ybWF0aW9uLnRhcmdldEZpZWxkO1xuICAgICAgaWYgKHRhcmdldEZpZWxkKSB7XG4gICAgICAgIGNvbnN0IGNhbkZvY3VzID0gdGhpcy5mb2N1c0VsZW1lbnQodGFyZ2V0RmllbGQsIHJvb3RFbGVtZW50KTtcbiAgICAgICAgaWYgKGNhbkZvY3VzKSB7XG4gICAgICAgICAgdmVyaWZ5SW5mb3JtYXRpb25zWydmb2N1c2VkJ10gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIOiuvue9rkRhdGFHcmlk5Y2V5YWD5qC854Sm54K5XG4gICAqL1xuICBwdWJsaWMgZm9jdXNHcmlkQ2VsbCh2ZXJpZnlJbmZvcm1hdGlvbnM6IGFueVtdLCBmb2N1c2FibGVEYXRhR3JpZDogRm9jdXNhYmxlSW52YWxpZGF0aW9uR3JpZCkge1xuICAgIGlmICghdmVyaWZ5SW5mb3JtYXRpb25zIHx8ICF2ZXJpZnlJbmZvcm1hdGlvbnMubGVuZ3RoIHx8IHZlcmlmeUluZm9ybWF0aW9uc1snZm9jdXNlZCddID09IHRydWUgfHwgZm9jdXNhYmxlRGF0YUdyaWQuZGlzYWJsZWQgPT09IHRydWUpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgbGV0IHRhcmdldEZpZWxkID0gbnVsbDtcbiAgICBsZXQgdGFyZ2V0SWQgPSBudWxsO1xuICAgIGNvbnN0IGZpcnN0VmVyaWZ5SW5mb3JtYXRpb24gPSB0aGlzLnNlbGVjdEZpcnN0VmVyaWZ5SW5mb3JtYXRpb24odmVyaWZ5SW5mb3JtYXRpb25zKTtcbiAgICBpZiAoZmlyc3RWZXJpZnlJbmZvcm1hdGlvbikge1xuICAgICAgdGFyZ2V0RmllbGQgPSBmaXJzdFZlcmlmeUluZm9ybWF0aW9uLnRhcmdldEZpZWxkO1xuICAgICAgdGFyZ2V0SWQgPSBmaXJzdFZlcmlmeUluZm9ybWF0aW9uLmlkO1xuICAgICAgdmVyaWZ5SW5mb3JtYXRpb25zWydmb2N1c2VkJ10gPSB0cnVlO1xuICAgICAgZm9jdXNhYmxlRGF0YUdyaWQuZWRpdENlbGwodGFyZ2V0SWQsIHRhcmdldEZpZWxkKTtcbiAgICB9XG4gIH1cbiAgcHJpdmF0ZSB1cGRhdGVWZXJpZnlJbmZvcm1hdGlvbnNJbmRleCh2ZXJpZnlJbmZvcm1hdGlvbnM6IGFueVtdLCByb290RWxlbWVudD86IEVsZW1lbnRSZWY8YW55Pikge1xuICAgIHZlcmlmeUluZm9ybWF0aW9ucyA9IHZlcmlmeUluZm9ybWF0aW9ucy5maWx0ZXIoKHZlcmlmeUluZm9ybWF0aW9uOiBhbnkpID0+IHtcbiAgICAgIGNvbnN0IGZyYW1lQ29udGV4dHMgPSB0aGlzLmdldEZyYW1lQ29udGV4dHNCeVByb3BlcnR5UGF0aCh2ZXJpZnlJbmZvcm1hdGlvbi5mdWxsUGF0aCwgJy8nKTtcbiAgICAgIGNvbnN0IGZyYW1lQ29udGV4dCA9IGZyYW1lQ29udGV4dHMgJiYgZnJhbWVDb250ZXh0cy5maWx0ZXIoZnJhbWVDb250ZXh0ID0+IGZyYW1lQ29udGV4dCAmJiBmcmFtZUNvbnRleHQuZnJhbWVJZCA9PT0gdGhpcy5mcmFtZUNvbnRleHQuZnJhbWVJZCk7XG4gICAgICByZXR1cm4gZnJhbWVDb250ZXh0ID8gdHJ1ZSA6IGZhbHNlO1xuICAgIH0pO1xuICAgIHJldHVybiB2ZXJpZnlJbmZvcm1hdGlvbnMubWFwKCh2ZXJpZnlJbmZvcm1hdGlvbjogYW55KSA9PiB7XG4gICAgICBsZXQgdGFiSW5kZXggPSAtMTtcbiAgICAgIGlmICh2ZXJpZnlJbmZvcm1hdGlvbikge1xuICAgICAgICBpZiAocm9vdEVsZW1lbnQgJiYgdmVyaWZ5SW5mb3JtYXRpb24udGFyZ2V0RmllbGQpIHtcbiAgICAgICAgICBjb25zdCBpbnB1dCA9IHRoaXMuZ2V0SW5wdXRFbGVtZW50QnlJZCh2ZXJpZnlJbmZvcm1hdGlvbi50YXJnZXRGaWVsZCwgcm9vdEVsZW1lbnQpO1xuICAgICAgICAgIHRhYkluZGV4ID0gaW5wdXQgJiYgaW5wdXQuZ2V0QXR0cmlidXRlKCd0YWJpbmRleCcpIHx8IC0xO1xuICAgICAgICAgIHRhYkluZGV4ID0gTnVtYmVyKHRhYkluZGV4KTtcbiAgICAgICAgfVxuICAgICAgICAvLyBjb25zdCBmcmFtZUNvbnRleHRzID0gdGhpcy5nZXRGcmFtZUNvbnRleHRzQnlQcm9wZXJ0eVBhdGgodmVyaWZ5SW5mb3JtYXRpb24uZnVsbFBhdGgsICcvJyk7XG4gICAgICAgIGNvbnN0IGZyYW1lQ29udGV4dCA9IHRoaXMuZnJhbWVDb250ZXh0Oy8vZnJhbWVDb250ZXh0cyAmJiBmcmFtZUNvbnRleHRzWzBdIHx8IG51bGw7XG4gICAgICAgIGNvbnN0IGZyYW1lSW5kZXggPSBmcmFtZUNvbnRleHQuaW5kZXggKyAxO1xuICAgICAgICB2ZXJpZnlJbmZvcm1hdGlvbi50YWJJbmRleCA9IHRhYkluZGV4O1xuICAgICAgICB2ZXJpZnlJbmZvcm1hdGlvbi5kb21JbmRleCA9IC0xO1xuICAgICAgICB2ZXJpZnlJbmZvcm1hdGlvbi5mcmFtZUluZGV4ID0gLTE7XG4gICAgICAgIHZlcmlmeUluZm9ybWF0aW9uLnBvc2l0aW9uID0gdGFiSW5kZXg7XG4gICAgICAgIGlmIChmcmFtZUNvbnRleHQpIHtcbiAgICAgICAgICBjb25zdCBkb21JbmRleCA9IHZlcmlmeUluZm9ybWF0aW9uLmZ1bGxQYXRoICYmIHRoaXMuZ2V0RmllbGRJbmRleChmcmFtZUNvbnRleHQsIHZlcmlmeUluZm9ybWF0aW9uLmZ1bGxQYXRoKSB8fCAwO1xuICAgICAgICAgIGlmIChkb21JbmRleCA+IDApIHtcbiAgICAgICAgICAgIGNvbnN0IHJvd0luZGV4ID0gdmVyaWZ5SW5mb3JtYXRpb24uaW5kZXggfHwgMDtcbiAgICAgICAgICAgIHZlcmlmeUluZm9ybWF0aW9uLmRvbUluZGV4ID0gZG9tSW5kZXg7XG4gICAgICAgICAgICB2ZXJpZnlJbmZvcm1hdGlvbi5mcmFtZUluZGV4ID0gZnJhbWVDb250ZXh0LmluZGV4O1xuICAgICAgICAgICAgdmVyaWZ5SW5mb3JtYXRpb24ucG9zaXRpb24gPSB0YWJJbmRleCA+IDAgPyB0YWJJbmRleCA6IChmcmFtZUluZGV4ICogMTAwMCArIHJvd0luZGV4ICogMTAwMCArIGRvbUluZGV4KTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiB2ZXJpZnlJbmZvcm1hdGlvbjtcbiAgICB9KTtcbiAgfVxuICBwcml2YXRlIGlzR3JpZENvbXBvbmVudChmcmFtZUNvbnRleHQ6IEZyYW1lQ29udGV4dCkge1xuICAgIGlmIChmcmFtZUNvbnRleHQpIHtcbiAgICAgIGNvbnN0IGRhdGFHcmlkQ29sdW1uc05hbWUgPSBmcmFtZUNvbnRleHQudmlld01vZGVsWydkYXRhR3JpZENvbHVtbnNOYW1lJ10gfHwgbnVsbDtcbiAgICAgIHJldHVybiBkYXRhR3JpZENvbHVtbnNOYW1lID8gdHJ1ZSA6IGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG4gIHByaXZhdGUgZ2V0Q29sdW1uSW5kZXgoZnJhbWVDb250ZXh0OiBGcmFtZUNvbnRleHQsIGJpbmRpbmc6IHN0cmluZykge1xuICAgIGJpbmRpbmcgPSBiaW5kaW5nLnNwbGl0KCcvJykuZmlsdGVyKHAgPT4gcCkuam9pbignLycpO1xuICAgIGNvbnN0IGJpbmRpbmdQYXRocyA9IGZyYW1lQ29udGV4dC52aWV3TW9kZWwuYmluZGluZ1BhdGguc3BsaXQoJy8nKS5maWx0ZXIocCA9PiBwKTtcbiAgICBjb25zdCBkYXRhR3JpZENvbHVtbnNOYW1lID0gZnJhbWVDb250ZXh0LnZpZXdNb2RlbFsnZGF0YUdyaWRDb2x1bW5zTmFtZSddIHx8IG51bGw7XG4gICAgY29uc3QgZnJhbWVJbmRleCA9IGZyYW1lQ29udGV4dC5pbmRleCArIDE7XG4gICAgaWYgKCFkYXRhR3JpZENvbHVtbnNOYW1lKSB7XG4gICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBsZXQgY29sdW1uczogYW55W10gPSBmcmFtZUNvbnRleHQudmlld01vZGVsW2RhdGFHcmlkQ29sdW1uc05hbWVdO1xuICAgIGlmICghY29sdW1ucyB8fCBjb2x1bW5zLmxlbmd0aCA8IDEpIHtcbiAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIC8vIOaJk+W5s2NvbHVtbnNcbiAgICBjb2x1bW5zID0gY29sdW1ucy5yZWR1Y2UoKHJlc3VsdHM6IGFueVtdLCBpdGVtKSA9PiB7XG4gICAgICBpZiAoQXJyYXkuaXNBcnJheShpdGVtKSkge1xuICAgICAgICByZXR1cm4gcmVzdWx0cy5jb25jYXQoaXRlbSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gcmVzdWx0cy5jb25jYXQoW2l0ZW1dKTtcbiAgICB9LCBbXSk7XG4gICAgbGV0IHBvc2l0aW9uID0gLTE7XG4gICAgZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IGNvbHVtbnMubGVuZ3RoOyBpbmRleCsrKSB7XG4gICAgICBjb25zdCBjb2x1bW46IGFueSB8IGFueVtdID0gY29sdW1uc1tpbmRleF07XG4gICAgICBjb25zdCBmaWVsZHMgPSBjb2x1bW4gJiYgY29sdW1uLmZpZWxkICYmIGNvbHVtbi5maWVsZC5zcGxpdCgnLicpLmZpbHRlcihwID0+IHApIHx8IG51bGw7XG4gICAgICBpZiAoIWZpZWxkcykge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIGlmIChiaW5kaW5nUGF0aHMuY29uY2F0KGZpZWxkcykuam9pbignLycpID09PSBiaW5kaW5nKSB7XG4gICAgICAgIGNvbnN0IGZpeGVkID0gY29sdW1uLmZpeGVkO1xuICAgICAgICBpZiAoZml4ZWQpIHtcbiAgICAgICAgICBjb25zdCBmaXhlZENvbHVtbnMgPSBjb2x1bW5zLmZpbHRlcihpdGVtID0+IGl0ZW0uZml4ZWQgPT09IGZpeGVkKTtcbiAgICAgICAgICBjb25zdCBmaXhlZENvbHVtbkluZGV4ID0gdGhpcy5nZXRJbmRleEZyb21Db2x1bW5zKGZpeGVkQ29sdW1ucywgYmluZGluZyk7XG4gICAgICAgICAgaWYgKGZpeGVkID09PSAnbGVmdCcpIHtcbiAgICAgICAgICAgIHBvc2l0aW9uID0gZnJhbWVJbmRleCAqIEZJWEVEX0NPTFVNTl9TVEFSVF9JTkRFWCArIGZpeGVkQ29sdW1uSW5kZXg7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHBvc2l0aW9uID0gZnJhbWVJbmRleCAqIEdSSURfQ09MVU1OX1NUQVJUX0lOREVYICsgMTAwMCArIGZpeGVkQ29sdW1uSW5kZXg7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHBvc2l0aW9uID0gZnJhbWVJbmRleCAqIEdSSURfQ09MVU1OX1NUQVJUX0lOREVYICsgaW5kZXg7XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBwb3NpdGlvbjtcbiAgfVxuICBwcml2YXRlIGdldEluZGV4RnJvbUNvbHVtbnMoY29sdW1uczogYW55W10sIGJpbmRpbmc6IHN0cmluZykge1xuICAgIGNvbnN0IGJpbmRpbmdQYXRocyA9IHRoaXMuZnJhbWVDb250ZXh0LnZpZXdNb2RlbC5iaW5kaW5nUGF0aC5zcGxpdCgnLycpLmZpbHRlcihwID0+IHApO1xuICAgIHJldHVybiBjb2x1bW5zLmZpbmRJbmRleChjb2x1bW4gPT4ge1xuICAgICAgY29uc3QgZmllbGRzID0gY29sdW1uICYmIGNvbHVtbi5maWVsZCAmJiBjb2x1bW4uZmllbGQuc3BsaXQoJy4nKS5maWx0ZXIocCA9PiBwKSB8fCBudWxsO1xuICAgICAgaWYgKCFmaWVsZHMpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgICAgaWYgKGJpbmRpbmdQYXRocy5jb25jYXQoZmllbGRzKS5qb2luKCcvJykgPT09IGJpbmRpbmcpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfSk7XG4gIH1cbiAgcHJpdmF0ZSBzZWxlY3RGaXJzdFZlcmlmeUluZm9ybWF0aW9uKHZlcmlmeUluZm9ybWF0aW9uczogYW55W10sIHJvb3RFbGVtZW50PzogRWxlbWVudFJlZjxhbnk+KSB7XG4gICAgdmVyaWZ5SW5mb3JtYXRpb25zID0gdGhpcy51cGRhdGVWZXJpZnlJbmZvcm1hdGlvbnNJbmRleCh2ZXJpZnlJbmZvcm1hdGlvbnMsIHJvb3RFbGVtZW50KTtcbiAgICB2ZXJpZnlJbmZvcm1hdGlvbnMuc29ydCgodjE6IGFueSwgdjI6IGFueSkgPT4gTnVtYmVyKHYxLnBvc2l0aW9uKSAtIE51bWJlcih2Mi5wb3NpdGlvbikpO1xuICAgIHJldHVybiB2ZXJpZnlJbmZvcm1hdGlvbnMgJiYgdmVyaWZ5SW5mb3JtYXRpb25zLmxlbmd0aCA+IDAgJiYgdmVyaWZ5SW5mb3JtYXRpb25zWzBdIHx8IG51bGw7XG4gIH1cbiAgcHJpdmF0ZSBnZXRJbnB1dEVsZW1lbnRCeUlkKHRhcmdldEZpZWxkOiBzdHJpbmcsIHJvb3RFbGVtZW50OiBFbGVtZW50UmVmPGFueT4pIHtcbiAgICBsZXQgZWxlbWVudCA9IHJvb3RFbGVtZW50Lm5hdGl2ZUVsZW1lbnQub3duZXJEb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0YXJnZXRGaWVsZCkgfHwgbnVsbDtcbiAgICBpZiAoZWxlbWVudCAmJiBlbGVtZW50LnRhZ05hbWUgIT09ICdJTlBVVCcpIHtcbiAgICAgIGNvbnN0IGlucHV0cyA9IGVsZW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2lucHV0Jyk7XG4gICAgICBpZiAoaW5wdXRzLmxlbmd0aCkge1xuICAgICAgICBlbGVtZW50ID0gaW5wdXRzWzBdO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZWxlbWVudDtcbiAgfVxuICBwdWJsaWMgZ2V0RnJhbWVDb250ZXh0c0J5UHJvcGVydHlQYXRoKHByb3BlcnR5UGF0aDogc3RyaW5nLCBzZXBhcnRvcjogc3RyaW5nID0gJy8nKTogRnJhbWVDb250ZXh0W10ge1xuICAgIGlmICghcHJvcGVydHlQYXRoKSB7XG4gICAgICByZXR1cm4gW107XG4gICAgfVxuICAgIGNvbnN0IGZyYW1lQ29udGV4dHMgPSB0aGlzLmZyYW1lQ29udGV4dCAmJiB0aGlzLmZyYW1lQ29udGV4dC5hcHBDb250ZXh0LmZyYW1lQ29udGV4dE1hbmFnZXIuZ2V0RnJhbWVDb250ZXh0cygpIHx8IFtdO1xuICAgIHJldHVybiBmcmFtZUNvbnRleHRzLmZpbHRlcigoZnJhbWVDb250ZXh0OiBGcmFtZUNvbnRleHQpID0+IHtcbiAgICAgIGNvbnN0IGZvcm1Db250cm9scyA9IGZyYW1lQ29udGV4dCAmJiBmcmFtZUNvbnRleHQuZm9ybSAmJiBmcmFtZUNvbnRleHQuZm9ybS5uZ0Zvcm1Db250cm9scyB8fCB7fTtcbiAgICAgIGNvbnN0IGJpbmRpbmdQYXRoID0gZnJhbWVDb250ZXh0ICYmIGZyYW1lQ29udGV4dC52aWV3TW9kZWwgJiYgZnJhbWVDb250ZXh0LnZpZXdNb2RlbC5iaW5kaW5nUGF0aCB8fCAnJztcbiAgICAgIGlmIChmb3JtQ29udHJvbHMgJiYgT2JqZWN0LmtleXMoZm9ybUNvbnRyb2xzKS5sZW5ndGggPiAwKSB7XG4gICAgICAgIGNvbnN0IGtleSA9IE9iamVjdC5rZXlzKGZvcm1Db250cm9scykuZmluZCgoa2V5OiBzdHJpbmcpID0+IHtcbiAgICAgICAgICBjb25zdCBmb3JtQ29udHJvbCA9IGZvcm1Db250cm9sc1trZXldO1xuICAgICAgICAgIGlmICghZm9ybUNvbnRyb2wgfHwgIWZvcm1Db250cm9sLmJpbmRpbmcpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICB9XG4gICAgICAgICAgY29uc3QgYmluZGluZ3MgPSBmb3JtQ29udHJvbC5iaW5kaW5nLnNwbGl0KCcuJykuZmlsdGVyKHAgPT4gcCk7XG4gICAgICAgICAgY29uc3QgYmluZGluZ1BhdGhzID0gYmluZGluZ1BhdGguc3BsaXQoJy8nKS5maWx0ZXIocCA9PiBwKTtcbiAgICAgICAgICBjb25zdCBmdWxsUGF0aCA9IGJpbmRpbmdQYXRocy5jb25jYXQoYmluZGluZ3MpO1xuICAgICAgICAgIHJldHVybiBwcm9wZXJ0eVBhdGguc3BsaXQoc2VwYXJ0b3IpLmZpbHRlcihwID0+IHApLmpvaW4oJy8nKSA9PT0gZnVsbFBhdGguam9pbignLycpO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIGtleSA/IHRydWUgOiBmYWxzZTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9KTtcbiAgfVxuICBwdWJsaWMgZ2V0Rm9ybUNvbnRyb2xJbmRleEJ5QmluZGluZ1BhdGgoZnJhbWVDb250ZXh0OiBGcmFtZUNvbnRleHQsIGJpbmRpbmc6IHN0cmluZyk6IG51bWJlciB7XG4gICAgY29uc3QgbmdGb3JtQ29udHJvbHMgPSB0aGlzLmdldEZvcm1Db250cm9sc0J5RnJhbWVDb250ZXh0KGZyYW1lQ29udGV4dCk7XG4gICAgaWYgKCFuZ0Zvcm1Db250cm9scykge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIGNvbnN0IGJpbmRpbmdzID0gYmluZGluZy5zcGxpdCgnLycpLmZpbHRlcihwID0+IHApO1xuICAgIHJldHVybiBPYmplY3QudmFsdWVzKG5nRm9ybUNvbnRyb2xzKS5maW5kSW5kZXgoKG5nRm9ybUNvbnRyb2w6IE5nRm9ybUNvbnRyb2wpID0+IHtcbiAgICAgIGlmICghbmdGb3JtQ29udHJvbCkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgICBjb25zdCBiaW5kaW5nUGF0aCA9IGZyYW1lQ29udGV4dC52aWV3TW9kZWwuYmluZGluZ1BhdGg7XG4gICAgICBjb25zdCBiaW5kaW5nUGF0aHMgPSBiaW5kaW5nUGF0aC5zcGxpdCgnLycpLmZpbHRlcihwID0+IHApO1xuICAgICAgY29uc3QgZm9ybUNvbnRyb2xCaW5kaW5nUGF0aHMgPSBuZ0Zvcm1Db250cm9sLmJpbmRpbmcuc3BsaXQoJy4nKS5maWx0ZXIocCA9PiBwKTtcbiAgICAgIGNvbnN0IGZ1bGxQYXRoID0gYmluZGluZ1BhdGhzLmNvbmNhdChmb3JtQ29udHJvbEJpbmRpbmdQYXRocyk7XG4gICAgICByZXR1cm4gZnVsbFBhdGguam9pbignLycpID09PSBiaW5kaW5ncy5qb2luKCcvJyk7XG4gICAgfSk7XG4gIH1cbiAgcHVibGljIGdldEZpZWxkSW5kZXgoZnJhbWVDb250ZXh0OiBGcmFtZUNvbnRleHQsIGJpbmRpbmc6IHN0cmluZykge1xuICAgIGNvbnN0IGlzR3JpZENvbXBvbmVudCA9IHRoaXMuaXNHcmlkQ29tcG9uZW50KGZyYW1lQ29udGV4dCk7XG4gICAgaWYgKGlzR3JpZENvbXBvbmVudCkge1xuICAgICAgcmV0dXJuIHRoaXMuZ2V0Q29sdW1uSW5kZXgoZnJhbWVDb250ZXh0LCBiaW5kaW5nKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHRoaXMuZ2V0Rm9ybUNvbnRyb2xJbmRleEJ5QmluZGluZ1BhdGgoZnJhbWVDb250ZXh0LCBiaW5kaW5nKTtcbiAgICB9XG4gIH1cbiAgcHVibGljIGdldEZvcm1Db250cm9sc0J5RnJhbWVDb250ZXh0KGZyYW1lQ29udGV4dDogRnJhbWVDb250ZXh0KTogeyBbcHJvcGVydHlOYW1lOiBzdHJpbmddOiBOZ0Zvcm1Db250cm9sIH0gfCBudWxsIHtcbiAgICByZXR1cm4gZnJhbWVDb250ZXh0ICYmIGZyYW1lQ29udGV4dC5mb3JtICYmIGZyYW1lQ29udGV4dC5mb3JtLm5nRm9ybUNvbnRyb2xzIHx8IG51bGw7XG4gIH1cbiAgcHVibGljIGZvY3VzRWxlbWVudChlbGVtZW50SWQ6IHN0cmluZywgcm9vdEVsZW1lbnQ6IEVsZW1lbnRSZWY8YW55Pik6IGJvb2xlYW4ge1xuICAgIGxldCBmb2N1c2VkID0gZmFsc2U7XG4gICAgbGV0IGVsZW1lbnRUb0ZvY3VzID0gcm9vdEVsZW1lbnQubmF0aXZlRWxlbWVudC5vd25lckRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGVsZW1lbnRJZCk7XG4gICAgLy8g5pyq6I635Y+W5Yiw5oyH5a6a5a2X5q615pe277yM6L+U5Zue77yM5LiN5YaN6K6+572u54Sm54K544CCXG4gICAgaWYgKGVsZW1lbnRUb0ZvY3VzKSB7XG4gICAgICAvLyDlpoLmnpzmnInlpJrkuKppZOmHjeWkjeeahOWFg+e0oO+8jOWImeS4jeWumuS9jVxuICAgICAgY29uc3QgZWxlbWVudHMgPSByb290RWxlbWVudC5uYXRpdmVFbGVtZW50Lm93bmVyRG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChgIyR7ZWxlbWVudElkfWApO1xuICAgICAgaWYgKGVsZW1lbnRzICYmIGVsZW1lbnRzLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgcmV0dXJuIGZvY3VzZWQ7XG4gICAgICB9XG4gICAgICAvLyDlpoLmnpznu5Hlrprnm67moIflrZfmrrXnmoTmjqfku7bkuI3mmK9JbnB1dOWFg+e0oO+8jOWImeafpeaJvuWFtuS4i+e6p+iKgueCueOAglxuICAgICAgaWYgKGVsZW1lbnRUb0ZvY3VzLnRhZ05hbWUgIT09ICdJTlBVVCcpIHtcbiAgICAgICAgY29uc3Qgc3ViRWxlbWVudHMgPSBlbGVtZW50VG9Gb2N1cy5nZXRFbGVtZW50c0J5VGFnTmFtZSgnaW5wdXQnKTtcbiAgICAgICAgaWYgKHN1YkVsZW1lbnRzLmxlbmd0aCkge1xuICAgICAgICAgIGVsZW1lbnRUb0ZvY3VzID0gc3ViRWxlbWVudHNbMF07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGVsZW1lbnRUb0ZvY3VzLmZvY3VzKCk7XG4gICAgICBmb2N1c2VkID0gdHJ1ZTtcbiAgICB9XG4gICAgcmV0dXJuIGZvY3VzZWQ7XG4gIH1cbiAgLyoqXG4gICAqIOiuvue9rueEpueCuVxuICAgKiBAcGFyYW0gdmVyaWZ5SW5mb3JtYXRpb24g6ZSZ6K+v5L+h5oGvXG4gICAqIEBwYXJhbSBmcmFtZUNvbnRleHQg5LiK5LiL5paHXG4gICAqIEByZXR1cm5zIFxuICAgKi9cbiAgcHVibGljIGZvY3VzKHZlcmlmeUluZm9ybWF0aW9uOiBhbnksIGZyYW1lQ29udGV4dDogRnJhbWVDb250ZXh0KSB7XG4gICAgaWYgKCF2ZXJpZnlJbmZvcm1hdGlvbikge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCBpc0dyaWRWYWxpZGF0aW9uID0gdmVyaWZ5SW5mb3JtYXRpb24uaW5kZXggIT09IG51bGw7XG4gICAgaWYgKGlzR3JpZFZhbGlkYXRpb24pIHtcbiAgICAgIGNvbnN0IGdyaWQgPSB0aGlzLmdldEdyaWRSZWYoZnJhbWVDb250ZXh0KTtcbiAgICAgIGlmIChncmlkKSB7XG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgIGdyaWQuZWRpdENlbGwodmVyaWZ5SW5mb3JtYXRpb24uaWQsIHZlcmlmeUluZm9ybWF0aW9uLnRhcmdldEZpZWxkKTtcbiAgICAgICAgfSwgMCk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnN0IGZyYW1lRWxlbWVudCA9IHRoaXMuZ2V0Q29tcG9uZW50UmVmKGZyYW1lQ29udGV4dCk7XG4gICAgICBjb25zdCBlbGVtZW50SWQgPSB2ZXJpZnlJbmZvcm1hdGlvbi50YXJnZXRGaWVsZDtcbiAgICAgIHRoaXMuZm9jdXNCeUlkKGVsZW1lbnRJZCwgZnJhbWVFbGVtZW50KTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICog6YCa6L+H5o6n5Lu2aWTorr7nva7nhKbngrlcbiAgICogQHBhcmFtIGVsZW1lbnRJZCBcbiAgICogQHBhcmFtIGVsZW1lbnRSZWYgXG4gICAqL1xuICBwcml2YXRlIGZvY3VzQnlJZChlbGVtZW50SWQ6IHN0cmluZywgZWxlbWVudFJlZj86IEVsZW1lbnRSZWYpIHtcbiAgICBjb25zdCBkb2N1bWVudDogYW55ID0gZWxlbWVudFJlZiAmJiBlbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQub3duZXJEb2N1bWVudCB8fCB3aW5kb3cuZG9jdW1lbnQ7XG4gICAgaWYgKGRvY3VtZW50KSB7XG4gICAgICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoZWxlbWVudElkKTtcbiAgICAgIGlmIChlbGVtZW50LnRhZ05hbWUgIT09ICdJTlBVVCcpIHtcbiAgICAgICAgY29uc3Qgc3ViRWxlbWVudHMgPSBlbGVtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdpbnB1dCcpO1xuICAgICAgICBpZiAoc3ViRWxlbWVudHMubGVuZ3RoKSB7XG4gICAgICAgICAgY29uc3QgaW5wdXQgPSBzdWJFbGVtZW50c1swXTtcbiAgICAgICAgICBpZiAoaW5wdXQgJiYgdHlwZW9mIGlucHV0LmZvY3VzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICBpbnB1dC5mb2N1cygpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZWxlbWVudC5mb2N1cygpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICAvKipcbiAgICog6I635Y+W57uE5Lu25a6e5L6LXG4gICAqIEBwYXJhbSBmcmFtZUNvbnRleHQgXG4gICAqIEByZXR1cm5zIFxuICAgKi9cbiAgcHJpdmF0ZSBnZXRDb21wb25lbnRSZWYoZnJhbWVDb250ZXh0OiBGcmFtZUNvbnRleHQpIHtcbiAgICByZXR1cm4gdGhpcy5mcmFtZUNvbnRleHQgJiYgdGhpcy5mcmFtZUNvbnRleHQuaW5qZWN0b3IuZ2V0PEVsZW1lbnRSZWY+KEVsZW1lbnRSZWYsIG51bGwpIHx8IG51bGw7XG4gIH1cbiAgLyoqXG4gICAqIOiOt+WPlmdyaWTlrp7kvotcbiAgICogQHBhcmFtIGZyYW1lQ29udGV4dCBmcmFtZUNvbnRleHRcbiAgICogQHJldHVybnMgXG4gICAqL1xuICBwcml2YXRlIGdldEdyaWRSZWYoZnJhbWVDb250ZXh0OiBGcmFtZUNvbnRleHQpOiBGb2N1c2FibGVJbnZhbGlkYXRpb25HcmlkIHtcbiAgICBjb25zdCBuYW1lc3BhY2UgPSBmcmFtZUNvbnRleHQubmFtZXNwYWNlO1xuICAgIGNvbnN0IGJpbmRpbmdQYXRoID0gZnJhbWVDb250ZXh0LnZpZXdNb2RlbC5iaW5kaW5nUGF0aDtcbiAgICBjb25zdCBmcmFtZUNvbnRleHRzOiBGcmFtZUNvbnRleHRbXSA9IHRoaXMuZnJhbWVDb250ZXh0LmFwcENvbnRleHQuZnJhbWVDb250ZXh0TWFuYWdlci5nZXRGcmFtZUNvbnRleHRzQnlOYW1lc3BhY2UobmFtZXNwYWNlKSB8fCBbXTtcbiAgICBjb25zdCBtYXRjaGVkRnJhbWVDb250ZXh0cyA9IGZyYW1lQ29udGV4dHMuZmlsdGVyKChmcmFtZUNvbnRleHQ6IEZyYW1lQ29udGV4dCkgPT4gZnJhbWVDb250ZXh0LnZpZXdNb2RlbCAmJiBmcmFtZUNvbnRleHQudmlld01vZGVsLmJpbmRpbmdQYXRoLnNwbGl0KCcvJykuZmlsdGVyKHAgPT4gcCkudG9TdHJpbmcoKSA9PT0gYmluZGluZ1BhdGguc3BsaXQoJy8nKS5maWx0ZXIocCA9PiBwKS50b1N0cmluZygpKTtcbiAgICBsZXQgcmVzdWx0ID0gbnVsbDtcbiAgICBpZiAobWF0Y2hlZEZyYW1lQ29udGV4dHMpIHtcbiAgICAgIG1hdGNoZWRGcmFtZUNvbnRleHRzLmV2ZXJ5KChmcmFtZUNvbnRleHQ6IEZyYW1lQ29udGV4dCkgPT4ge1xuICAgICAgICBjb25zdCBmcmFtZUlkID0gZnJhbWVDb250ZXh0LmZyYW1lSWQ7XG4gICAgICAgIGNvbnN0IGNvbXBvbmVudHNNYXAgPSB0aGlzLmZyYW1lQ29udGV4dC5hcHBDb250ZXh0LmNvbXBvbmVudE1hbmFnZXIuZ2V0Q29tcG9uZW50c0J5RnJhbWVJZChmcmFtZUlkKTtcbiAgICAgICAgaWYgKCFjb21wb25lbnRzTWFwKSB7XG4gICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgZGF0YWdyaWRDb21wb25lbnQgPSBBcnJheS5mcm9tKGNvbXBvbmVudHNNYXAudmFsdWVzKCkpLmZpbmQoKGNvbXBvbmVudDogYW55KSA9PiBjb21wb25lbnQgJiYgY29tcG9uZW50WydfX2NvbXBvbmVudF90eXBlX18nXSA9PT0gJ0RhdGFncmlkQ29tcG9uZW50Jyk7XG4gICAgICAgIGlmIChkYXRhZ3JpZENvbXBvbmVudCkge1xuICAgICAgICAgIHJlc3VsdCA9IGRhdGFncmlkQ29tcG9uZW50O1xuICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cbn1cblxuZXhwb3J0IHsgRm9jdXNhYmxlSW52YWxpZGF0aW9uR3JpZCwgRm9jdXNJbnZhbGlkU2VydmljZSB9O1xuIl19