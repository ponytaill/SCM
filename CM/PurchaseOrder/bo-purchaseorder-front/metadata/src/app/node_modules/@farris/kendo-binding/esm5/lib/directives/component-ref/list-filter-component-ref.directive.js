import { Directive, ElementRef, Injector } from "@angular/core";
import { FrameContext } from "@farris/devkit";
import { ListFilterComponent } from '@farris/ui-list-filter';
var ListFilterComponentRefDirective = /** @class */ (function () {
    function ListFilterComponentRefDirective(injector, component, elementRef, frameContext) {
        this.injector = injector;
        this.component = component;
        this.elementRef = elementRef;
        this.frameContext = frameContext;
    }
    ListFilterComponentRefDirective.prototype.ngOnInit = function () {
        var id = this.elementRef && this.elementRef.nativeElement && this.elementRef.nativeElement.id;
        if (this.frameContext && id) {
            this.frameContext.componentRefManager.add(id, this.component);
        }
    };
    ListFilterComponentRefDirective.prototype.ngOnDestroy = function () {
    };
    ListFilterComponentRefDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[listFilterRef]'
                },] }
    ];
    /** @nocollapse */
    ListFilterComponentRefDirective.ctorParameters = function () { return [
        { type: Injector },
        { type: ListFilterComponent },
        { type: ElementRef },
        { type: FrameContext }
    ]; };
    return ListFilterComponentRefDirective;
}());
export { ListFilterComponentRefDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdC1maWx0ZXItY29tcG9uZW50LXJlZi5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL2tlbmRvLWJpbmRpbmcvIiwic291cmNlcyI6WyJsaWIvZGlyZWN0aXZlcy9jb21wb25lbnQtcmVmL2xpc3QtZmlsdGVyLWNvbXBvbmVudC1yZWYuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLFFBQVEsRUFBcUIsTUFBTSxlQUFlLENBQUM7QUFDbkYsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzlDLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQzdEO0lBSUUseUNBQW9CLFFBQWtCLEVBQVUsU0FBOEIsRUFBVSxVQUFzQixFQUFVLFlBQTBCO1FBQTlILGFBQVEsR0FBUixRQUFRLENBQVU7UUFBVSxjQUFTLEdBQVQsU0FBUyxDQUFxQjtRQUFVLGVBQVUsR0FBVixVQUFVLENBQVk7UUFBVSxpQkFBWSxHQUFaLFlBQVksQ0FBYztJQUFJLENBQUM7SUFDdkosa0RBQVEsR0FBUjtRQUNFLElBQU0sRUFBRSxHQUFHLElBQUksQ0FBQyxVQUFVLElBQUksSUFBSSxDQUFDLFVBQVUsQ0FBQyxhQUFhLElBQUksSUFBSSxDQUFDLFVBQVUsQ0FBQyxhQUFhLENBQUMsRUFBRSxDQUFDO1FBQ2hHLElBQUksSUFBSSxDQUFDLFlBQVksSUFBSSxFQUFFLEVBQUU7WUFDM0IsSUFBSSxDQUFDLFlBQVksQ0FBQyxtQkFBbUIsQ0FBQyxHQUFHLENBQUMsRUFBRSxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztTQUMvRDtJQUNILENBQUM7SUFDRCxxREFBVyxHQUFYO0lBQ0EsQ0FBQzs7Z0JBWkYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxpQkFBaUI7aUJBQzVCOzs7O2dCQUwrQixRQUFRO2dCQUUvQixtQkFBbUI7Z0JBRlIsVUFBVTtnQkFDckIsWUFBWTs7SUFlckIsc0NBQUM7Q0FBQSxBQWJELElBYUM7U0FWWSwrQkFBK0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIEVsZW1lbnRSZWYsIEluamVjdG9yLCBPbkRlc3Ryb3ksIE9uSW5pdCB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XHJcbmltcG9ydCB7IEZyYW1lQ29udGV4dCB9IGZyb20gXCJAZmFycmlzL2RldmtpdFwiO1xyXG5pbXBvcnQgeyBMaXN0RmlsdGVyQ29tcG9uZW50IH0gZnJvbSAnQGZhcnJpcy91aS1saXN0LWZpbHRlcic7XHJcbkBEaXJlY3RpdmUoe1xyXG4gIHNlbGVjdG9yOiAnW2xpc3RGaWx0ZXJSZWZdJ1xyXG59KVxyXG5leHBvcnQgY2xhc3MgTGlzdEZpbHRlckNvbXBvbmVudFJlZkRpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGluamVjdG9yOiBJbmplY3RvciwgcHJpdmF0ZSBjb21wb25lbnQ6IExpc3RGaWx0ZXJDb21wb25lbnQsIHByaXZhdGUgZWxlbWVudFJlZjogRWxlbWVudFJlZiwgcHJpdmF0ZSBmcmFtZUNvbnRleHQ6IEZyYW1lQ29udGV4dCkgeyB9XHJcbiAgbmdPbkluaXQoKTogdm9pZCB7XHJcbiAgICBjb25zdCBpZCA9IHRoaXMuZWxlbWVudFJlZiAmJiB0aGlzLmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudCAmJiB0aGlzLmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudC5pZDtcclxuICAgIGlmICh0aGlzLmZyYW1lQ29udGV4dCAmJiBpZCkge1xyXG4gICAgICB0aGlzLmZyYW1lQ29udGV4dC5jb21wb25lbnRSZWZNYW5hZ2VyLmFkZChpZCwgdGhpcy5jb21wb25lbnQpO1xyXG4gICAgfVxyXG4gIH1cclxuICBuZ09uRGVzdHJveSgpOiB2b2lkIHtcclxuICB9XHJcbn0iXX0=