{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@farris/ui-datagrid/lib/types/data-column.ts","ng://@farris/ui-datagrid/lib/types/constant.ts","ng://@farris/ui-datagrid/lib/services/state.ts","ng://@farris/ui-datagrid/lib/utils/utils.ts","ng://@farris/ui-datagrid/lib/services/datagrid-columns.helper.ts","ng://@farris/ui-datagrid/lib/services/datagrid-facade.service.ts","ng://@farris/ui-datagrid/lib/services/datagrid.service.ts","ng://@farris/ui-datagrid/lib/services/rest.service.ts","ng://@farris/ui-datagrid/lib/types/datagrid-validator.ts","ng://@farris/ui-datagrid/lib/services/validator-messager.service.ts","ng://@farris/ui-datagrid/lib/services/domhandler.ts","ng://@farris/ui-datagrid/lib/services/datagrid-filter.service.ts","ng://@farris/ui-datagrid/lib/pagination/ngx-pagination.module.ts","ng://@farris/ui-datagrid/lib/pagination/pagination.service.ts","ng://@farris/ui-datagrid/lib/scrollbar/scrollbar.interfaces.ts","ng://@farris/ui-datagrid/lib/scrollbar/scrollbar.directive.ts","ng://@farris/ui-datagrid/lib/scrollbar/scrollbar.component.ts","ng://@farris/ui-datagrid/lib/scrollbar/arrow/scrollbar-arrows.component.ts","ng://@farris/ui-datagrid/lib/scrollbar/scrollbar.module.ts","ng://@farris/ui-datagrid/lib/components/columns/column-cell-edit.directive.ts","ng://@farris/ui-datagrid/lib/components/columns/datagrid-column.directive.ts","ng://@farris/ui-datagrid/lib/components/filter-toolbar/smart-filter-toolbar.component.ts","ng://@farris/ui-datagrid/lib/plugins/smart-filter/controlData/filter-control.options.ts","ng://@farris/ui-datagrid/lib/services/datagrid-smart-filter.service.ts","ng://@farris/ui-datagrid/lib/services/selection-mode.service.ts","ng://@farris/ui-datagrid/lib/datagrid.component.ts","ng://@farris/ui-datagrid/lib/plugins/smart-filter/datagrid-smart-filter.component.ts","ng://@farris/ui-datagrid/lib/plugins/smart-filter/datagrid-smart-filter.module.ts","ng://@farris/ui-datagrid/lib/utils/format-cell-data.pipe.ts","ng://@farris/ui-datagrid/lib/components/body/datagrid-body.component.ts","ng://@farris/ui-datagrid/lib/components/body/datagrid-row-hover.directive.ts","ng://@farris/ui-datagrid/lib/components/body/datagrid-row.directive.ts","ng://@farris/ui-datagrid/lib/components/editors/cell-editor.directive.ts","ng://@farris/ui-datagrid/lib/utils/safe.pipe.ts","ng://@farris/ui-datagrid/lib/components/body/datagrid-cell.component.ts","ng://@farris/ui-datagrid/lib/components/body/datagrid-cell-editable.directive.ts","ng://@farris/ui-datagrid/lib/components/body/datagrid-rows.component.ts","ng://@farris/ui-datagrid/lib/components/editors/text-editor.component.ts","ng://@farris/ui-datagrid/lib/components/header/datagrid-header.component.ts","ng://@farris/ui-datagrid/lib/components/header/datagrid-resize-column.directive.ts","ng://@farris/ui-datagrid/lib/components/footer/datagrid-footer.component.ts","ng://@farris/ui-datagrid/lib/components/pager/pager.component.ts","ng://@farris/ui-datagrid/lib/components/loading.component.ts","ng://@farris/ui-datagrid/lib/components/pager/selected-list/selected-list.component.ts","ng://@farris/ui-datagrid/lib/components/pager/selected-item.pipe.ts","ng://@farris/ui-datagrid/lib/datagrid-error-handler.ts","ng://@farris/ui-datagrid/lib/components/checkbox/datagrid-checkbox.component.ts","ng://@farris/ui-datagrid/lib/components/checkbox/datagrid-header-checkbox.component.ts","ng://@farris/ui-datagrid/lib/utils/rowid.pipe.ts","ng://@farris/ui-datagrid/lib/utils/format-group-row.pipe.ts","ng://@farris/ui-datagrid/lib/components/body/fixed-left-rows.component.ts","ng://@farris/ui-datagrid/lib/utils/rexplaceX.pipe.ts","ng://@farris/ui-datagrid/lib/components/body/datagrid-grouprow.directive.ts","ng://@farris/ui-datagrid/lib/utils/show-required-label.pipe.ts","ng://@farris/ui-datagrid/lib/utils/disable-row.pipe.ts","ng://@farris/ui-datagrid/lib/utils/select-row.pipe.ts","ng://@farris/ui-datagrid/lib/utils/field-value.pipe.ts","ng://@farris/ui-datagrid/lib/components/tooltip/cell-tooltip.directive.ts","ng://@farris/ui-datagrid/lib/components/tooltip/tip-message.pipe.ts","ng://@farris/ui-datagrid/lib/components/filter-toolbar/filter-toolbar.component.ts","ng://@farris/ui-datagrid/lib/components/header/header-style.directive.ts","ng://@farris/ui-datagrid/lib/components/auto-height/auto-height.component.ts","ng://@farris/ui-datagrid/lib/utils/row-is-selected.pipe.ts","ng://@farris/ui-datagrid/lib/utils/row-is-checked.pipe.ts","ng://@farris/ui-datagrid/lib/components/auto-height/auto-height.directive.ts","ng://@farris/ui-datagrid/lib/components/body/datagrid-row-dblclick.directive.ts","ng://@farris/ui-datagrid/lib/components/footer/datagrid-footer-cell.styler.directive.ts","ng://@farris/ui-datagrid/lib/components/header/drag-drop-column.service.ts","ng://@farris/ui-datagrid/lib/components/header/datagrid-drag-column.directive.ts","ng://@farris/ui-datagrid/lib/components/header/datagrid-drop-column.directive.ts","ng://@farris/ui-datagrid/lib/components/body/datagrid-group-footer-styler.directive.ts","ng://@farris/ui-datagrid/lib/utils/cell-readonly.pipe.ts","ng://@farris/ui-datagrid/lib/datagrid.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","__spread","concat","string","number","boolean","date","time","datetime","enum","fromdata","none","max","min","sum","average","count","GRID_EDITORS","InjectionToken","GRID_VALIDATORS","GRID_FILTER_ROW","GRID_SETTINGS_PANEL","GRID_SETTINGS_SERVICE","GRID_SETTINGS_HTTP","SCROLL_X_ACTION","SCROLL_X_REACH_END_ACTION","SCROLL_X_REACH_START_ACTION","FIXED_LEFT_SHADOW_CLS","CELL_SELECTED_CLS","CELL_EDITING_CLS","SIZE_TYPE","sm","row","header","pager","md","lg","xl","ALLOW_EDIT_CELL_HIGHLIGHT_CLS","datagrid","textarea","textbox","checkbox","datepicker","input-group","select","lookup","numberbox","combolist","combo-lookup","switch","timepicker","language-textbox","enum-editor","initDataGridState","idField","showLineNumber","selections","checkedRows","currentRow","columnsGroup","columns","fitColumns","onlySelectSelf","selectOnCheck","checkOnSelect","pageIndex","pageSize","pagerHeight","checkboxColumnWidth","pagination","virtual","rowIndex","scrollTop","topHideHeight","bottomHideHeight","isScrollChange","sortName","undefined","sortOrder","multiSort","remoteSort","changes","showGroupColumn","ROW_INDEX_FIELD","IS_GROUP_ROW_FIELD","GROUP_ROW_FIELD","IS_GROUP_FOOTER_ROW_FIELD","GROUP_VISIBLE_FIELD","GROUP_LEVEL_FIELD","IgnoreProperties","Utils","uuid","S4","Math","random","toString","substring","getValue","field","data","safe","resultVal","indexOf","split","reduce","obj","key","escapeValue","setValue","val","nest","lastObj_1","_fields","c","pop","getMultilingualValue","valObj","localeId","keys","replace","eventPath","evt","path","composedPath","target","window","getParents","node","memo","parentNode","hasDialogOpen","document","body","className","on","el","fn","opts","delegatorFn","matches","addEventListener","options","removeEventListener","off","getBLen","str","getWhenEmptyText","col","EMPTY_INPUT_TEXT","zh-CHS","zh-CHT","en","editor","type","DatagridColumnsHelper","getColumnTotal","firstCols","total","forEach","colspan","findUndefinedItem","arr","getColumnFields","aa","colTotal","Array","k","id","rowspan","columnIsVisible","ins","visible","instance","column","getFields","_cols","map","cols","filter","gridInstance","fields","getFilterEnumOptions","enumSetting","ColumnFilterType","fmt","getEnumText","enumOpts","value1","valueField","textField","v","find","d","join","columnVisibleAsObservable","bindCallback","visibleAsObservable","of","getParentColumns","allCols","_getParents","parentId","parentCol","getChildColumns","_getChilds","childs","splice","child","checkGroupHeaderColumnVisible","_col","_childs","onlyOneColumn","DatagridFacadeService","http","localId","store","BehaviorSubject","virtualRowSubject","gridSizeSubject","Subject","errorSubject","selectRowSubject","unSelectRowSubject","columnResizeSubject","clearSelectionSubject","checkRowSubject","unCheckRowSubject","clearCheckedsSubject","clearAllSubject","checkAllSubject","unCheckAllSubject","selectAllSubject","selectCellSubject","error$","asObservable","selectRow$","unSelectRow$","columnResize$","clearSelections$","checkRow$","unCheckRow$","clearCheckeds$","clearAll$","checkAll$","unCheckAll$","selectAll$","currentCell$","editCell$","EventEmitter","clientSort$","rowAppend$","rowUpdate$","rowDelete$","updateCheckboxState$","state$","pipe","state","columnGroup$","switchMap","colgroup","distinctUntilChanged","gridSize$","_a","headerHeight","width","height","rowHeight","data$","vs","index","startIndex","rows","virtualRows","top","bottom","scrolling","difference","first","second","item","includes","differenceBy","a","b","Set","has","_state","cloneDeep","updateVirthualRows","scrolltop","getVirthualRows","updateState","autoHeight","groupRows","flatColumns","groupRows2","mergeCell","enableClientSortForMergeCell","sort","getData","original","originalData","getState","getVirtualState","getPageInfo","initState","initColumns","loadData","updateOriginalData","sortable","sortedData","resetRow","rowId","_this","origData","origRowData","primaryId","getCurrentRow","updateRow","fetchData","url","get","setTotal","updateProperty","property","setPagination","setScrollTop","isMultiSelect","multiSelect","_isRowSelected","isRowSelected","flag","_canCancelSelectWhenMulti","findIndex","sr","isRowChecked","checkeds","getCheckeds","isCheckAll","allRows","getAllRowsForLive","checkIds","getCurrentPageCheckeds","getSelections","temp_1","getCheckedRowsFromSource","findRow","fromDataSource","updateCheckedData","rowid","rowData","item_1","setCheckedRows","ids","checked","checkeds_1","srow","enableMorePageSelect","_clearCheckeds","checkRecord","checkRow","unCheckRow","grid","beforeSelect","subscribe","selectRow","emit","beforeUnselect","unSelectRow","setCurrentPageData","currentPageData","getCurrentPageData","allData","pagerOnServer","disableRow","checkAll","allCheckeds","_checkeds_1","element","selectAll","index_1","findRowIndex","setSelectRow","selectRowForMulti","unSelectRowForMulti","_sr","selectRecord","gridOpts","showCheckbox","beforeCheck","_clearSelections","keepSelect","excludeIds","clearSelections","unCheckRows","t1","clearCheckeds","clearAll","_rows","setMultiSelect","setCheckOnSelect","setSelectOnCheck","setCurrentCell","dr","cellElement","cellRef","currentCell","ControlPanelFeild","getColumn","isLastRow","cancelSelectCell","getCurrentCell","editCell","isEditing","cei","endEditCell","appendRow","Error","pid","newData","refresh","deleteRow","removeRow","isCellSelected","cellInfo","cc","newState","resize","newSize","resetColumnsSize","fit","useUserSetColumnSize","autoFitColumns","gridWidth","originalTotalWidth","setFitColumnsWidth","updateColumns","restitute","resizeColumns","getGroupColumns","getAllFlatColumns","restColumnWidth","leftFixed","rightFixed","normalColumns","leftFixedCols","getFixedCols","rightFixedCols","normalCols","originalWidth","initColumnsWidth","leftFixedWidth","rightFixedWidth","normalWidth","totalWidth","getColumnIndex","fixed","fast","columnResizeEnd","flatten","fieldName","minWidth_1","Number","toFixed","direction","newcols_1","f","offset","lineNumberWidth","getColsWidth","reset","left","isShow","hideCheckbox","hideLineNumber","setSortInfo","orders","updateFieldOrder","order","orderBy","props","colObj","tslib_1.__spread","acc","prop","valA","valB","p1","p2","localeCompare","mergeFields","newOrders_1","newFields_1","clientSort","clearSort","loadFilterData","filterData","hasRowChanges","_changes","appendChanges","_id","acceptChanges","rejectChanges","orgiRow_1","getChanges","getFooterData","footerRow","footer","text","typ","calculation","arrToGroup","items","first_1","shift","g1","groupBy","toGroup","fieldArr","_nextFields","_f","groupRows2Flat","initLevel","parent","results","idfield","groupFieldArr","groupField","expandGroupRows","groupItem","expanded","isPlainObject","level","groupFooter","footerItem","_b","updateGroupFooterData","groupFooterRow","columns_1","groupData","result_1","k_1","showGroupFooter","updateGroupFooter","groupRowId","groupRow","groupFooterRows","columns_2","rows_1","CalculationType","BigNumber","div","setinitialOptions","initialOptions","halign","align","Injectable","HttpClient","DatagridService","scorllSubject","scrollX","rowHoverSubject","rowSelectSubject","dataSourceChangedSubject","editCellSubject","endCellEdit","changeCheckedRows","scorll$","scrollX$","x","debounceTime","scrollY$","rowHover$","rowClick$","onDataSourceChange","cellEdit$","endCellEdit$","checkedRowsTotalChanged$","updateEmptyStyle$","showGridHeader","uncheckAll","columnResized","rowHeightChanged","loadVirtualData","showFixedShadow","setSelecedRow","scrollToCurrentRow","columnsChanged","cellContentWrapChanged","onFilterChanged","clearFilter","filterTextChange","toggleFilterRow","refreshFooterData","disableHeader","changeCheckAllStatus","setScrollbarPosition","smartFilterBarExpand","smartFilterDataChange","scrollbarUpdate","footerPositionChanged","styleElement","commonUtils","idService","cellEditorCreated","cellEditorDestory","focusRowChanged","onScrollMove","action","dataSourceChanged","onRowHover","mouseEnter","mouseenter","onRowClick","onCellEdit","tdElement","onEndCellEdit","cell","onSelectCell","onCheckedRowsCountChange","onRowHeightChange","onLoadVirtualData","onClearFilter","onFilterTextChange","txt","restoreScrollbarPosition","updateEmptyStyle","getMergeCellInfo","currVal","result","firstVal","j","show","_item","strIndex","getMergeCellInfo0","getMergeCellInfo2","groupKeys","startRowIndex","getMergeCellInfo3","firstField","prevItem_1","getMergeInfo","mergeCellInfo","removeStyleSheet","remove","createStyleElement","styleSheetId","_createStyleSheet","appendCssRules","rules","_appendCssRules","sheet","removeCssRule","ruleName","_removeCssRule","isArray","htmlHead","querySelector","styleEleId","innerText","createElement","appendChild","styleSheet","rules_1","tslib_1.__values","rules_1_1","rule","slice","trim","removedCssRule","addRule","cssText","insertRule","cssRules","ii","cssRule","selectorText","toLowerCase","deleteRule","removeRule","createConfigKey","gridID","location","host","hash","pathname","href","formCode","menuId","_searchArr","searchObj_1","catchFuncIdKEY","funcId","localStorage","setItem","getItem","IdService","encrypt","getCustomStyle","styler","args","findNextTr","nextTr","dir","getNextElement","getEle","DATAGRID_REST_SERVICEE","DefaultDatagridValidatorMessager","required","minlength","maxlength","email","requriedtrue","pattern","ValidatorMessagerService","getValidatorErrorMessage","validatorName","validators","validator","messager","ddvm","DomHandler","hasClass","classList","from","removeClass","RegExp","findSingle","selector","getOffset","rect","getBoundingClientRect","scrollLeft","getOuterHeight","margin","offsetHeight","style","getComputedStyle","parseFloat","marginTop","marginBottom","getOuterWidth","offsetWidth","marginLeft","marginRight","DatagridFilterService","dfs","localeSer","inject","removeField","validateRowData","conditions","checkAllFieldInRowData","executeFilter","enableSmartFilter","executeSmartFilter","getCompareResult","fieldDataValue","operator","targetValue","parseInt","Compare","Equal","NotEqual","Greater","GreaterOrEqual","Less","LessOrEqual","Like","NotLike","In","getRelationResult","result1","relation","result2","checkAllFieldResult","resultObj","values","fieldValue","columnObj","isMultilingualField","where","operator1","operator2","value2","removeFilterField","convertFilterCondition2String","andText","orText","and","and2","or","lastANDidx","title","getCompareString","txt2","s2","lbracket","lastIndexOf","resultStr","substr","op","code","convert2FilterArray","condition","filterArr","filterField","rbracket","compare","conditionVal","obj2","op2","checkEnumTypeFilters","enumFilters","enumFilterArr","convertEnumTypeFilter","createColumnFilterOptions","filterTypeOptions","enableOperator","dateFormat","returnFormat","formatter","tye","returnFmt","format","convertSmartFilter2EntityFilter","validateRowData2","checkRowDataWithCondition","FilterField","Value","Relation","_filters","LocaleService","Injector","NgxPaginationModule","NgModule","declarations","imports","CommonModule","exports","providers","PaginationService","SCROLLBAR_CONFIG","Geometry","y","w","h","Position","ScrollbarEvents","ScrollbarConfig","config","ScrollbarDirective","zone","differs","elementRef","platformId","defaults","ro","timeout","animation","configDiff","ngDestroy","disabled","psScrollY","psScrollX","psScrollUp","psScrollDown","psScrollLeft","psScrollRight","psYReachEnd","psYReachStart","psXReachEnd","psXReachStart","ngOnInit","isPlatformBrowser","config_1","runOutsideAngular","setTimeout","PerfectScrollbar","nativeElement","create","diff","ResizeObserver","update","children","observe","eventName","eventType","fromEvent","event","takeUntil","auditTime","ngAfterViewInit","ngOnDestroy","complete","disconnect","clearTimeout","destroy","ngDoCheck","ngOnChanges","isFirstChange","currentValue","previousValue","ps","geometry","prefix","position","absolute","reach","scrollable","contains","scrollTo","speed","animateScrolling","scrollToX","scrollToY","scrollToTop","scrollToLeft","scrollToRight","scrollWidth","clientWidth","scrollToBottom","scrollHeight","clientHeight","scrollToElement","qs","elementPos","scrollerPos","currentPos","cancelAnimationFrame","newValue_1","scrollCount_1","oldTimestamp_1","performance","now","oldValue_1","cosParameter_1","step_1","newTimestamp","PI","round","cos","requestAnimationFrame","Directive","exportAs","NgZone","KeyValueDiffers","ElementRef","Inject","PLATFORM_ID","Optional","Input","Output","ScrollbarComponent","cdRef","states","indicatorX","indicatorY","interaction","scrollPositionX","scrollPositionY","scrollDirectionX","scrollDirectionY","usePropagationX","usePropagationY","allowPropagationX","allowPropagationY","stateTimeout","stateUpdate","usePSClass","autoPropagation","scrollIndicators","right","markForCheck","detectChanges","directiveRef","scrollDeltaX","deltaX","scrollDeltaY","deltaY","checkPropagation","touches","clientX","clientY","merge","mapTo","unsubscribe","preventDefault","stopPropagation","Component","template","encapsulation","ViewEncapsulation","None","ChangeDetectorRef","HostBinding","ViewChild","ScrollbarArrowsComponent","reachX","reachY","scrollbarXActive","scrollbarYActive","hasXScrollbar","hasYScrollbar","scrollMoveTo","$event","ScrollbarModule","DatagridCellEditorDirective","TemplateRef","DatagridColumnDirective","readonly","editable","ngAfterContentInit","ContentChild","SmartFilterToolbarComponent","render","padding","clearFilters","removeFilter","filterChange","sk","destory$","dg","DatagridComponent","dgs","onQuery","filterItem","JSON","parse","onResetFilter","onRemoveFilter","onResize","smartFilterWrapper","Renderer2","EnumFilterControl","enumopts","controltype","enumValues","name","DatagridSmartFilterService","controlData","filterChanged","clearAllFilter","getColumnFilterData","filterControlData","single","showType","showTime","DateFilterControl","filterConditionChanged","ctrlIdx","labelCode","removeCondition","emitRemove","SelectionModeService","dgRef","oldSettings","selectStartEvent","events","selectionMode","removeEvents","registerStopSelectionEvent","toggleMode","enableWindowsSelectionMode","restoreSettings","render2","listen","ctrlKey","shiftKey","unselectable","keyCode","enableSelectable","setAttribute","dgContainer","setStyle","removeAttribute","removeStyle","beforRowClick","param","isSelected","isCtrlKey","isShiftKey","endEditing","focusIndex","focusRowIndex","endIndex","start","end","willCheckIds","getRows","checkRows","currentPagerIds_1","unCheckIDs","checkValues","unSelectIds","delay","canSelect","selectedRow","rowClick","dblclick","selected","endRowClick","cd","app","domSanitizer","auther","version","__component_type__","pos","hostCls","useThemes","useHtmlTable","showBorder","striped","showHeader","headerWrap","showFooter","footerHeight","footerDataFrom","footerPosition","_sizeType","_fit","_fitColumns","_autoFitColumns","scrollBarShowMode","scrollBarOptions","showScrollArrow","resizeColumn","lineNumberTitle","rowHover","clickToEdit","_lockPagination","__pagination","pagerContentTemplate","pagerPos","pagerViewMode","pageList","showPageList","showPageInfo","showPageNumber","pagerLabelSize","showGotoInput","showSelectedList","cellTipTimer","controlPaginationState","_total","enableSelectRow","showAllCheckbox","emptyDataHeight","emptyMessage","emptyTemplate","_footerData","endEditByInvalid","_columns","nowrap","virtualized","virtualizedAsyncLoad","editMode","_editable","enableEditCellStyle","selectOnEditing","editorHeight","hoverRowCls","enableDragColumn","rowGroupPanelHeight","groupSummaryPosition","groupCellColSpan","_groupField","groupFields$","_showRowGroupPanel","AutoColumnWidthUseDblclick","useDefaultFilter","enableFilterRow","remoteFilter","showFilterBar","filterBarHeight","filterRowHeight","selectValue","selectValues","useControlPanel","enableSimpleMode","controlPanelMode","enableScheme","defaultSchemeName","closeOtherGridEditor","clearSelectionsWhenDataIsEmpty","enableContextMenu","contextMenus","selectValueChange","checkValuesChange","selectValuesChange","beginEdit","endEdit","cancelEdited","scrollY","pageSizeChanged","pageChanged","loadSuccess","enableHighlightCell","checkedRowsDataFromSource","editcellWhenTabKeydwon","beforeClickCell","dblclickRow","selectChanged","unSelect","unSelectAll","scrollYLoad","unChecked","unCheckAll","checkedChange","columnSorted","rowAppended","rowDeleted","rowUpdated","dataChange","lastCellEnterHandle","groupFieldChange","columnMoved","cellClick","_loading","_selectedRow","ds","pagerOpts","editors","footerWidth","clickDelay","resizeColumnInfo","proxyLineEdge","startWidth","startX","subscriptions","realHeaderHeight","modalClickEvent","pending","scrollInstance","ignoreTarget","clientFilterService","_isResized","gridSize","clientFilterChanged","groupRowPanelPlaceholder","smartFilterService","smartFilterResult","smartFilterBarHeight","_active_datagrid_cls","_blured_datagrid_cls","_custom_datagrid_cls","documentBodyMouseDown","farrisInstances","currentPagerData","resizeTimer","debugSer","trackByRows","onDocumentMouseDown","closest","activeDataGrid","indlg","inDialog","currentTargetInDialog","closeEdit","unbindDocumentEditListener","localeService","restService","colFormatSer","ColumnFormatService","CommonUtils","FarrisComponentInstanceService","DebugService","useDebugMode","settingService","settingsHttp","httpRestService","dataSubscription","dataSource","cleanDom","setPagerTotal","updateFooterData","columnGroupSubscription","cg","colGroup","initEditorAndValidator","currentCellSubscription","unbindMoveSelectRowEvent","bindDocumentEditListener","bindDocumentMoveSelectRowEvent","filterChangedSubscription","footerDataSubscription","defineProperty","setFitColumns","dgPager","totalItems","itemsPerPage","setFooterHeight","correctColumns","chkeds","initSelectOrChecked","setCurrentPagerData","$data","writeConsole","msg","console","footerData","sms","checkFilterStyle","_checkSize","checkOptions","stringify","onFilterBarResize","setHeaderHeight","setPagerHeight","initBeforeEvents","setGridNewSizeWhenFit","add","res","addClass","display","_w","contentRect","_h","_floowW","floor","_roundW","_floorH","_roundH","calculateGridSize","parentElement","footerTemplate","setCellStyle","dgColumns","dgc","checkNowrap","setRowHeight","isSingleClick","headerHeightChange","fh","remote","currentPage","sizeType","uncheckIds","updateAllCheckboxStatus","toggleVisibleColumn","checkDragColumns","showRowGroupPanel","st","isMultiHeader","registerGridInstance","checkSortInfo","checkMergeCell","setCheckboxBehavior","initPaginationOptions","checkGroupHeaderColumns","checkGroupRowSetting","checkColumnsType","_defaultSetting","_flatColumns","settings$","getSettings","sets","userProfileSetting","err","refreshSelectedData","rd","unsubscribes","unobserve","documentRowKeydownHandler","onClick","closeSelectedList","nodeName","_editorClickEvent","updatePagerOptions","customStyleKey","useSizeType","_rowHeight","key1","key2","rowHeightCSS","_data","chkids","diffIds","checkAllStatus","allDataIDs","newCheckValues","isSame","addControlCol","controlCol","cp","columnsIndex","valign","bind","gridHeaderEl","trs","querySelectorAll","reloadData","useColumnSettingWidth","_useColumnSettingWidth","Editors","ed","_validators","outerHeight","sta","cmpRect","getElementPadding","border","getElementBorderWidth","beforeUncheck","beforeSortColumn","beforeEdit","afterEdit","isActived","targetName","selectNextRow","selectPrevRow","bindEditListenerInModal","modalElement","_fmodal","documentCellKeydownHandler","onKeyDownEvent","documentCellKeydownEvents","documentCellClickHandler","docuemntCellClickEvents","onSpaceHandler","onEnterHandler","selectNextCell","ss","isRowEditing","isCellEditing","editorTemplate","endRowEdit","getEditors","trId","trDom","tdDom","trDomL","trDomR","cellEditorRef","hideCover","stopEdit","editRow","beforeEditEvent","click","cells_1","cells","toArray","cellEditor","componentRef","inputElement","focus","bindRowEditorKeydownEvent","canEnd","currentEditor","rowForm","markAsTouched","invalid","afterEditEvent","closeAllCellEditor","form","formControl","cancelEdit","unbindRowEditorKeydownEvent","rowEditTabKeydwonEvent","which","td","tr_1","nextTd_1","nextElementSibling","hasNoEditor","_td","editNextRow","nextRowid","getAttribute","tds","tdIdx_1","nextTrEdit","documentRowEditKeydownHanlder","documentClickEndRowEditHandler","_clientFilter","excuteLocaleFilter","allClientData","smartFilterData","entityFilters","onClearSmartFilters","onRemoveSmartFilterItem","fieldCode","smartFilterEl","onSmartFilterChange","clearCondition","keepSortState","keepScrollPosition","loading","closeLoading","lst","lastScrollTop","lsl","lastScrollLeft","showLoading","params","reload","setPageIndex","setPageList","onPageChange","lockPagination","onPageSizeChange","onRemoveSelectedItem","onClearSelectedItem","replacePX2Empty","strNum","renderCustomCls","cls","dom","renderCustomStyle","cs","cssRuleText","paddingTop","paddingLeft","paddingBottom","paddingRight","borderTopWidth","borderBottomWidth","borderRightWidth","borderLeftWidth","formatData","getFieldValue","canOperateCheckbox","findNextCell","cellIndex","currCellEl","prevTr","previousElementSibling","nextTd","selectCell","tr","_next","tagName","firstEditor","removeCellSelectedCls","selectedCell","toCurrentPosition","selectAllRows","cancelSelected","checkAllRows","emitUnCheckAll","getResizeProxyPosLeft","dgRect","tdLeft","deltaEdge","pageX","toggleResizeProxy","resizeProxyBg","resizeProxy","onColumnResizeBegin","proxy","proxyPosLeft","top_1","bottomH","onColumnResize","onColumnResizeEnd","newColWidth","moveLeft","saveUserConfig","updateFixedColumnCssForFastMode","restituteColumnsSize","sizeToContent","th","longestText","longTextArea","innerHTML","w1","maxWidth","thMinWidth","refreshRow","validateRow","insertRow","_setColumnReadonly","setColumnReadonly","allCols_1","origianlColSpan","parents","_colspan_1","showColumn","hideColumn","updateColumn","columnObject","detectChange","setColumnFormatter","updateColumnFormatterOptions","formatterOptions","colFormatter","setColumnTitle","onColumnSorted","orders_1","updateSortInfo","newSortName","newSortOrder","sortFields","sortOrders","_sortFields","_sortOrders","nField","nIndex","colOrder","newOrder","_order","showControlPanel","checkSettingHttp","befRepository","settings","_sortName","_sortOrder","sortInfo","viewColumns","columnFormat","updateColumnFormat","newVisibleOrderColumns","tips","cellIsReadOnly","readOnly","groupFieldChanged","newGroupField","removeGroupField","delIdx","clearAllGrouppingField","setGroupFields","groupFields","active","grids","onDatagridContainerFocus","setShadowColumnForFastMode","fixedLeft_1","fixedRight","leftWidthTotal_1","rightWidthTotal_1","cssarr","css","va","verticalAlign","ha","horizontalAlign","colIndex","nextColumn","stylecss","changeDetection","ChangeDetectionStrategy","OnPush","ApplicationRef","DomSanitizer","ContentChildren","HostListener","DatagridSmartFilterComponent","filterPanelService","smartFilterSer","smartFilterDataChanged$","removeFilter$","clearAllFilter$","smartFilterEvents","control","filterPanelRef","hidePanel","getFilterData","placeHolder","getPanelPosition","pageY","targetRect","moveArrow","innerWidth","hideFilterPanel","valueText","clearColumnFilter","showFilterPanel","showPanel","panelExtendTemplate","sortTmp","localStorageKey","arrowEl","filterSubmit","onSort","FilterPanelService","decorators","DatagridSmartFilterModule","FilterPanelModule","LocaleModule","forRoot","FormatCellDataPipe","cfs","injector","LOCALE_ID","transform","isPassword","formatterFn","thousand","precision","dateRange","dateRangeDatesDelimiter","getDatagridInstance","dataGrid","utils","setPlaceHolderWhenEnableEditCellStyle","resoultStr","isFooter","elRef","span","Pipe","pure","DatagridBodyComponent","psConfig","swipeEasing","minScrollbarLength","handlers","suppressScrollY","deltaTopHeight","wheelWidth","_fixedRightScrollLeft","maxScrollLeft","showRightShadow","scrollBarMode","visibleContextMenus","currentRowId","_hoverRowIndex","minRowBuffer","vScrollDir","rowsCache","lastRenderedScrollTop","lastRenderedScrollLeft","prevScrollTop","prevScrollLeft","blankTopHeight","blankBottomHeight","cellContentFormatter","__triggerBodyClickEvent","destroy$","_onMouseClick","_scrollTimer","_scrollXTimer","resizeObserverTimer","onBeforeShowContextMenu","contextMenuDom","rowID","focusTargetWidth","viewportW","ngZone","columnFormatService","rowIdx","listenSubjects","s1","updateContainerSize","s10","s3","checkScrollbarPosition","s5","viewScrollContainer","onMouseClick","hh","setPositionTop","bodyStyle","getBodyStyle","isDiffrentDataSource","onDataChanged","destroySubscriptions","offsetParent","updateCanvasHeight","scrollbarRef","rightWidth","ngAfterViewChecked","toTop","scrollBar","scrollElRef","viewportH","getViewPortHeight","scrollInfo","renderData","updateRowHeight","sub","gridSizeSubscribe","oldWidth_1","canvasHeight","getCanvasHeight","updateColumnSize","fixedRightScrollLeft","keepScrollbarPosition","columnResizeSubscribe","selectRowSubscribe","unselectRowSubscribe","prevRow","selectAllSubscribe","checkRowSubscribe","checkedRowsChanged","clearSelectionsSubscribe","uncheckRowSubscribe","checkAllSubscribe","clearCheckedsSubscribe","updateScrollPosition","trID","buildCustomCellStyle","oldWidth","scrollReach","colsWidth","dgContainerWidth","allColsWidth","canvasWidth","rightRowsCmp","rightTrs","leftTrs","fixedRightEl","fixedLeftEl","mainArea","updateCellStyle","_rd","getTrDomHeight","list","trdoms","t2","ceil","t3","trDomId","dgBody","cssTextArr","domSel","_arr","rtr","ltr","leftTrId","rightTrId","key3","fd","onScrollToX","onScrollToY","handleScroll","onPsXReachStart","onPsXReachEnd","isChecked","toggleGroupRow","open","viewPortHeight","allRowsHeight","itemsCount","getRowFromPosition","getVisibleRange","viewportTop","viewportLeft","leftPx","rightPx","getRenderedRange","range","buffer","minBuffer","renderRows","dataLength","rowNode","cellColSpans","cellNodesByColumnIdx","cellRenderQueue","removeRowFromCache","cleanupRows","rangeToKeep","showYscrollbar","onClickScrollArrow","detectchanges","rendered","_handleScroll","viewportContainer","maxScrollDistanceY","maxScrollDistanceX","vScrollDist","abs","hScrollDist","_scrollTo","dx","dy","newScrollTop","gridCellData","edit","DatagridRowHoverDirective","dgb","_mouseenter","_mouseleave","onmouseenter","capture","onmouseleave","setRowHoverCls","hover","leftTableDom","rightTableDom","centerTableDom","method","trSelector","forwardRef","DatagridRowDirective","fb","drHover","clickHandler","FormGroup","documentRowDblclickEvent","columnsChangedSubscription","datasourceChangedSubscription","createControl","s$","s1$","updateCellEmptyStyle","s2$","getRowPosition","drl","drr","rowStyler","trStyle","beforEventParam","canUnselect","trCLS","canendedit","initFormControl","group","controls","createFormControl","addControl","bindValidations","validations","validation","Validators","minLength","maxLength","requiredTrue","vfn","vr","centerTr","leftTrDom","rightTrDom","heightSizeList","maxHeight","rowIsDisabled","emptyicon_cls","colVal","fmtVal","updateCellEmptyText","FormBuilder","Self","DatagridCellComponent","descendants","GridCellEditorDirective","resolver","container","timer","createCellEditor","editorRef","editorType","factory","resolveComponentFactory","createComponent","controlId","updateControlValue","changeDetectorRef","changeDetector","destroyed","emitEvent","hide","ComponentFactoryResolver","ViewContainerRef","SafePipe","sanitizer","dangerWords","bypassSecurityTrustHtml","bypassSecurityTrustStyle","bypassSecurityTrustScript","bypassSecurityTrustUrl","bypassSecurityTrustResourceUrl","hasDanger","lastColumn","_isEditing","controlHeight","_cellEditorTemplate","cellDblClick","cellContext","cellStyler","safePipe","canEdit","formGroup","input","templateRef","initCellTemplateContext","tools","cellSubscription","rowUpdateSubscription","updateValue","rowid_1","Default","read","DatagridCellEditableDirective","cellEditorCreatedSubscription","cellEditorDestorySubscription","emitBeginEdit","bindEditorInputEvent","unBindEditorInputEvent","setCellClsWithEditorType","initCellEvent","celldblclick","onDblClickCell","onClickCell","openCellEditor","clickTimer","closeEditingCell","cellclick","bindCellEventSubscription","noop","isDifferentCell","isReadonly","observers","getReadonlyValue","dc","_cellEditorRef","editType","showDialog","domName","blurFn","onBlur","blur","_col_","cellEndEdit","cancelCellEditing","ceRef","editorInputKeydownEvent","onKeyDownForInput","altKey","updateChecked","enterParam","gird","lastRow","movePrevCellAndEdit","moveNextCellAndEdit","selectNextRowAndEditCell","clearCellSelectedClass","moveScrollbar","tdPosLeft","offsetLeft","containerWidth","tdRect","scrollContainer","psContainer","scrollbarXLeft","tdPosTop","fieldIndex","cellFieldName","cleanOtherEditorIcon","DatagridRowsComponent","hasFixedColumns","isGroupRow","isGroupFooter","groupLevelField","filterConditions","listenEvent","_s3","_s4","_s5","scrollToCurrentRowSubscription","scrollToFirstSelectedRow","unSubscriptions","getGroupColumn","trackByField","isElementInViewport","box","scrollIntoViewIfNeeded","scrollIntoView","block","inline","currentTrTop","setGroupRowsVisible","footerRows","mergeInfo","showCell","getRowSpan","getGroupSummaryData","groupId","TextboxEditorComponent","DatagridHeaderComponent","wrapHeader","scrollbarMode","rightFixedColumnWidth","normalColumnWidth","showOverlay","disableSort","showShadowCls","hasFixedLeftColumns","cfr","dfrs","headerColumnsTable","fixedLeft","setFixedColumnPosition","_chkall","checkedsCount","isIndeterminate","chk","indeterminate","_checked","updateStatus","rw","getRightFixedColWidth","setHeaderPosition","getLineNumberTitle","isShowShadow","fixedLeftWidth","isColspan","isdatafield","realWidth","l","onRowNumerColumnDblClick","rntd","maxRowNumber","onSortColumnClick","FilterRowCreateDirective","vc","filterRowType","filterRowRef","clearFilterValue","createFilterRow","rebuild","_createFilterRow","columnsData","cf","conditionChange","DatagridResizeColumnDirective","dh","ngzone","isEnable","resizer","mouseUp$","resizerMouseDownListener","onMouseDown","onDblClickHandler","thRef","resizable","bindDocumentEvents","documentMouseMoveListener","onMouseMove","documentMouseUpListener","onMouseUp","unbindDocumentEvents","dblclickListener","DatagridFooterComponent","scrollEvents","renderFooterStyle","setFooterPosition","scrollXSubscription","footerBody2","footerBody","positionBottom","footerContainer","positionTop","footerStyler","trStyleAndCls","cssRuleID","cssRuleId2","cssRuleId3","DatagridPagerComponent","maxSize","directionLinks","autoHide","responsive","previousLabel","nextLabel","locked","selectedData","viewMode","contentTemplate","pageChange","pageSizeChange","removeSelectedItem","clearSelectedItem","styles","opacity","mouseInSelectedList","openSelectedList","selectionDataChange$","notifySer","NotifyService","paginationDirective","getPageSize","getTotalItems","pc","listenCheckDataChanged","lockedStyles","lock","unlock","onMouseEnter","onDelSelectedItem","onClearSelected","onSelectListPanelClose","DataGridLoadingComponent","PagerSelectedListComponent","close","clear","trackByFn","onClose","onRemoveClick","onClearClick","SelectedItemPipe","DatagridErrorHandler","handleError","ɵs","DatagridCheckboxComponent","checked$","changeCheckedStatus","rid","_setcheckrows","handleClick","canUncheck","canCheck","status","DatagridHeaderCheckboxComponent","RowDataIdPipe","FormatGroupRowPipe","valueField_1","enumItem","FixedLeftRowsComponent","toggle","selectedRows","groupRowIndex","listenSubject","_setselectrow","ReplaceXPipe","_i","DatagridGroupRowDirective","groupStyler","ShowRequiredStarPipe","DisableRowPipe","disableRowFn","SelectedRowPipe","FieldValuePipe","rowdata","DatagridCellTooltipDirective","tipMode","showTipTimer","_mouseclick","onMouseLeave","cellTiptimer","getTextContainer","donotShowTips","tdWidth","tagetSty","txtWidth","getTextWidth","message","font","_width","removeChild","cellEl","enable","tipWidth","tipHeight","boxEl","elSize","getBoxSizeObj","minWidth","targetTop","targetLeft","changeTooltipPosition","arrow","tooltipSize","getTooltipSize","innerHeight","textContainer","overflow","updateArrowPosition","zIndex","elOffset","halfHeight","styleClass","tooltipCls","tooltipStyleClass","tooltipArrow","tooltipText","wordBreak","textAlign","positionStyle","getThemeCls","getWindowSize","boxSize","tooltip","winSize","elLeft","elRight","toolTipTextWidth","CellTootipMessagePipe","showTips","getCellTooltipContent","tipContent","DatagridFilterToolbarComponent","empty","filterText","openFilterPanel","showExpand","enableFilterSetting","windowResizeHandler","filterToolbarRef","actionW","toolbarWidth","filterPanelTextRef","filterChangeSubscription","updateExpandState","bindEvent","filterFields","bindFilterFieldHandler","dropdownFilterFields","ff","isShowExpand","filterTextContainerWidth","filterTextRealWidth","refreshFilter","showFilterTextPanel","HeaderStyleDirective","renderCss2Element","headerStyler","renderStyle","targetEl","styleObj","AutoHeightComponent","RowIsSelectedPipe","RowIsCheckedPipe","AutoHeightDirective","_timer","updateDatagridHeight","wheelHeight","wh","dgHeight","DatagridRowDblClickDirective","dblclickRowEvent","FooterCellStylerDirective","setGroupFooterCellStyle","_customStyles_1","DragDropColumnService","moveItem","newIndex","removedIndex","removedItem","backupColumns","providedIn","smoothDnd","constants","wrapperClass","animationClass","SmoothDnDForHeader","dropHandler","dropHandlers","reactDropHandler","handler","wrapChild","DragColumnDirective","dndSer","enableDrag","groupName","orientation","behaviour","dragHandleSelector","dragClass","dropPlaceholder","getGhostParent","getChildPayload","shouldAcceptDrop","sourceContainerOptions","payload","onDropReady","dropResult","run","onDrop","onDragEnter","onDragStart","info","onDragEnd","initDnD","disposeDnd","dispose","groupColumns","middle","addedIndex","currIndex","targetColumn_1","realTagetIndex","moveColumn","newColumns","smoothDnD","DropColumnDirective","getGroupFields","allowGrouping","newGroupFields","some","GroupFooterRowStylerDirective","buildCustomGroupFooterRowStyle","groupFooterStyler","cs_1","CellIsReadonlyPipe","DatagridModule","ngModule","FormsModule","ReactiveFormsModule","HttpClientModule","PaginationModule","DataColumnModule","NotifyModule","SimpleFilterModule","FarrisContextMenuModule","provide","ErrorHandler","useClass","useValue","ɵ0","entryComponents"],"mappings":"wrDA6BO,IAAIA,EAAW,WAQlB,OAPAA,EAAWC,OAAOC,QAAU,SAAkBC,GAC1C,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAII,KADTL,EAAIG,UAAUF,GACOJ,OAAOS,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,IAE9E,OAAON,IAEKU,MAAMC,KAAMP,YAkFzB,SAASQ,EAAOC,EAAGV,GACtB,IAAIW,EAAsB,mBAAXC,QAAyBF,EAAEE,OAAOC,UACjD,IAAKF,EAAG,OAAOD,EACf,IAAmBI,EAAYC,EAA3BhB,EAAIY,EAAEL,KAAKI,GAAOM,EAAK,GAC3B,IACI,WAAc,IAANhB,GAAgBA,KAAM,MAAQc,EAAIf,EAAEkB,QAAQC,MAAMF,EAAGG,KAAKL,EAAEM,OAExE,MAAOC,GAASN,EAAI,CAAEM,MAAOA,GACjC,QACQ,IACQP,IAAMA,EAAEI,OAASP,EAAIZ,EAAU,YAAIY,EAAEL,KAAKP,GAE1D,QAAkB,GAAIgB,EAAG,MAAMA,EAAEM,OAE7B,OAAOL,EAGJ,SAASM,IACZ,IAAK,IAAIN,EAAK,GAAIjB,EAAI,EAAGA,EAAIE,UAAUC,OAAQH,IAC3CiB,EAAKA,EAAGO,OAAOd,EAAOR,UAAUF,KACpC,OAAOiB,SCnCPQ,OAAA,EACAC,OAAA,EACAC,QAAA,EACAC,KAAA,EACAC,KAAA,EACAC,SAAA,EACAC,OAAA,EACAC,SAAA,mLAsDAC,MAAA,EAEAC,IAAA,EAEAC,IAAA,EAEAC,IAAA,EAEAC,QAAA,EAEAC,MAAA,2GAsBJ,IC3LaC,EAAe,IAAIC,EAAAA,eAAe,4BAClCC,EAAkB,IAAID,EAAAA,eAAe,+BACrCE,EAAkB,IAAIF,EAAAA,eAAe,yCAErCG,EAAsB,IAAIH,EAAAA,eAAe,4CACzCI,EAAwB,IAAIJ,EAAAA,eAAe,oCAC3CK,EAAqB,IAAIL,EAAAA,eAAe,kCAGxCM,EAAkB,YAOlBC,EAA4B,cAC5BC,EAA8B,gBAK9BC,EAAwB,+BAOxBC,EAAoB,2BAEpBC,EAAmB,0BAGnBC,EAAY,CACrBC,GAAI,CACAC,IAAK,GACLC,OAAQ,GACRC,MAAQ,IAEZC,GAAI,CACAH,IAAK,GACLC,OAAQ,GACRC,MAAQ,IAEZE,GAAI,CACAJ,IAAK,GACLC,OAAQ,GACRC,MAAQ,IAEZG,GAAI,CACAL,IAAK,GACLC,OAAQ,GACRC,MAAQ,KAKHI,EAAgC,CACzCC,SAAU,2BACVC,SAAU,gBACVC,QAAS,eACTC,SAAU,gBACVC,WAAY,kBACZC,cAAe,mBACfC,OAAQ,iBACRC,OAAQ,cACRC,UAAW,iBACXC,UAAW,iBACXC,eAAgB,iBAChBC,SAAQ,cACRC,WAAY,kBACZC,mBAAoB,wBACpBC,cAAe,oBCmBNC,EAAyC,CAClDC,QAAS,KACTC,gBAAgB,EAChBC,WAAY,GACZC,YAAa,GACbC,WAAY,KACZC,aAAc,KACdC,QAAS,GACTC,YAAY,EACZC,gBAAgB,EAChBC,eAAe,EACfC,eAAe,EACfC,UAAW,EACXC,SAAU,GACVC,YAAa,GACbC,oBAAqB,GACrBC,YAAY,EACZC,QAAS,CACLC,SAAU,EACVC,UAAW,EACXC,cAAe,EACfC,iBAAkB,EAClBC,gBAAgB,GAEpBC,SAAUC,UACVC,UAAWD,UACXE,WAAW,EACXC,YAAY,EACZC,QAAS,KACTC,iBAAiB,GAyBRC,EAAkB,gBAElBC,EAAqB,YAErBC,EAAkB,sBAElBC,EAA4B,mBAC5BC,EAAsB,oBACtBC,EAAoB,kBA4BpBC,EAAmB,CAC5B,YACA,MACA,cACA,kBACA,aACA,eACA,mBACA,gBACA,iBACA,YACA,eACA,KACA,YACA,WACA,oBACA,UACA,gBACA,sBACA,eACA,cACA,eACA,aACA,cACA,WACA,MACA,YACA,cACA,UACA,MACA,eACA,UACA,KACA,UACA,kBACA,gBACA,iBACA,mBACA,eACA,SACA,sBACA,cACA,gBACA,eACA,cACA,WACA,aACA,UACA,kBACA,sBACA,cACA,cACA,gBACA,KACA,aACA,iBACA,UACA,cACA,YACA,gBACA,MACA,oBACA,qBACA,iBACA,qBACA,gBACA,cACA,aACA,YACA,WACA,cACA,OACA,qBACA,eACA,uBACA,kBACA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AAAA,KAmHA,OANWA,EAAAjsB,QAAP,SAAezc,GACX,MAAO,CACH2oC,SAAUD,EACVzgD,UAAW+X,GAAW,yBAhHjCpY,EAAAA,SAAQvI,KAAA,CAAC,CACNyI,QAAS,CACLC,EAAAA,aACA6gD,EAAAA,YACAC,EAAAA,oBACAC,EAAAA,iBACAC,EAAAA,iBACAphD,GACA4K,GACAiqB,EAAAA,aAAaC,UACbusB,EAAAA,iBAAiBvsB,UACjBwsB,EAAAA,aAAaxsB,UACbysB,EAAAA,mBACA5sB,GACA6sB,EAAAA,yBAEJthD,aAAc,CACV8lC,GACAjR,GACA2gB,GACAC,GACAa,GACAI,GACAR,GACAK,GACAE,GACAmK,GACA3G,GACAtuC,GACAshC,GACAgE,GACAlB,GACApI,GACAlD,GACAhD,GACAvL,GACA8b,GACArnC,GACAE,GACAsgC,GACAyK,GACAlV,GACAwT,GACAY,GACAS,GACA5Q,GACAqI,GACAoJ,GACAQ,GACAyD,GACAuB,GACAS,GACAH,GACAC,GACAC,GACA1H,GACAP,GACAwI,GACAE,GACAoB,GACAkC,GACA/Q,GACAlkC,GACAs1C,IAEJpgD,UAAW,CACP,CAAEmhD,QAASC,EAAAA,aAAcC,SAAU9M,IACnC,CACI4M,QAASjhD,GACTohD,SAAQC,IAEZrpD,IAEJ6H,QAAS,CACL2lC,GACAn6B,GACAshC,GACApiC,GACAF,GACAg9B,GACAjH,GACAqP,GACA/C,GACAnY,GACA2gB,GACAU,GACAQ,GACAuD,GACA3D,GACAM,GACAyD,GACA8B,GACAC,GACAO,GACAE,GACAoB,GACAkC,GACA/Q,GACAlkC,GACAupB,GACA+rB,GACAc,EAAAA,wBACAV,IAEJgB,gBAAiB,OAWrBf,EAnHA,0MvE1D0C,01BAIJ,yZAET,0CAEG,sFAhBE,oCACA,qCACC,mCAHH,iHAFD,wCAMU,4CACE,uMA+Df,oBADH,yFD8G4B,CACjDhJ,QAAQ,EACRjoE,UAAW,EACXC,SAAU","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-06 07:43:07\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-11-11 09:52:46\r\n * @Company: Inspur\r\n * @Version: v0.0.1\r\n */\r\nimport { TemplateRef } from '@angular/core';\r\nimport { ColumnFormatter } from '@farris/ui-common/column';\r\nimport { DatagridValidator } from './datagrid-validator';\r\nimport { Compare } from '@farris/ui-common/types';\r\n\r\nexport interface CustomStyle {\r\n    cls?: string;\r\n    style?: {\r\n        [key: string]: string;\r\n    };\r\n}\r\n\r\nexport type MoveDirection = 'left' | 'right' | 'up' | 'down';\r\ntype TooltipContentFn = (value: any, rowData: any, column: any) => string;\r\ntype TooltipContent = string | TooltipContentFn;\r\nexport type HeaderStyleFn = (column: DataColumn) => CustomStyle;\r\ntype HeaderStyle = string | { [cssKey: string]: string } | HeaderStyleFn;\r\n\r\ntype ColumnFormatterFn = (value, rowData, rowIndex) => any;\r\ntype ColumnFormatterType = ColumnFormatterFn | ColumnFormatter;\r\nexport interface DataColumn {\r\n    dataType?: string;\r\n    id?: string;\r\n    parentId?: any;\r\n    field: string;\r\n    title: string;\r\n    width: number;\r\n    /** è®°å½åå§å®ä¹å®½åº¦ */\r\n    originalWidth?: number;\r\n    /** æ é¢å¯¹é½æ¹å¼ */\r\n    halign?: 'left' | 'center' | 'right';\r\n    /** ææ¬å¯¹é½æ¹å¼ */\r\n    align?: 'left' | 'center' | 'right';\r\n    /** åç´å¯¹é½æ¹å¼ */\r\n    valign?: 'top' | 'middle' | 'bottom';\r\n\r\n    formatter?: ColumnFormatterType;\r\n    styler?: (value, rowData, rowIndex) => CustomStyle;\r\n    /** è¡¨å¤´èªå®ä¹æ ·å¼ */\r\n    headerStyler?: HeaderStyle;\r\n    /** å·¦ä¾§è¾¹è· */\r\n    left?: number;\r\n    /** å³ä¾§è¾¹è· */\r\n    right?: number;\r\n    /** æ¯å¦åºå® */\r\n    fixed?: 'left' | 'right' | 'center';\r\n    /** æ¯å¦æ¾ç¤º */\r\n    visible?: boolean | any;\r\n    /** åªè¯» */\r\n    readonly?: boolean | any;\r\n\r\n    editor?: GridEditor;\r\n    /** ååæ ¼èªå®ä¹æ¨¡æ¿ */\r\n    template?: TemplateRef<any>;\r\n    /** è¡¨å³æ¨¡æ¿ */\r\n    headerTemplate?: TemplateRef<any>;\r\n    /** ç¼è¾å¨æ¨¡æ¿ */\r\n    editorTemplate?: TemplateRef<any>;\r\n    /** é¼ æ ç§»å¨è³ååæ ¼åï¼æ¾ç¤ºæ¬æµ®æ¶æ¯ */\r\n    showTips?: boolean;\r\n    /** ååæ ¼æç¤ºæ¨¡å¼ï¼\r\n     *  allwaysï¼ é¼ æ æ»è¿å³æ¾ç¤º\r\n     *  auto: ååæ ¼å®½åº¦ä¸å¤æ¶æä¼æ¾ç¤º\r\n     */\r\n    tipMode?: 'allways' | 'auto';\r\n    tipContent?: TooltipContent;\r\n    tipOptions?: any;\r\n    /** True to allow the column can be sorted. */\r\n    sortable?: boolean;\r\n    order?: 'asc' | 'desc';\r\n    sorter?: (r1: any, r2: any) => 0 | 1 | -1;\r\n    /** True to allow the column can be resized. */\r\n    resizable?: boolean;\r\n    rowspan?: number;\r\n    /** ååå¹¶ */\r\n    colspan?: number;\r\n    /** ååå¹¶åå§å¼  */\r\n    origianlColSpan?: number;\r\n    index?: number;\r\n    footer?: GridFooterRow;\r\n    /** åè®¸åç»ï¼é»è®¤ä¸º true */\r\n    allowGrouping?: boolean;\r\n    groupFooter?: GridFooterRow;\r\n    validators?: DatagridValidator[];\r\n    // è¿æ»¤è¡\r\n    filter?: ColumnFilter | any;\r\n    /** æ¯å¦å¤è¯­å­æ®µ */\r\n    isMultilingualField?: boolean;\r\n\r\n    /** ç©ºæ ¼é®ååºåè°å½æ° */\r\n    onSpaceHandler?: (e) => any;\r\n    /** åè½¦ååºåè°å½æ° */\r\n    onEnterHandler?: (e) => any;\r\n}\r\n\r\nexport enum ColumnFilterType {\r\n    string = 0,\r\n    number = 1,\r\n    boolean = 2,\r\n    date = 3,\r\n    time = 4,\r\n    datetime = 5,\r\n    enum = 6,\r\n    fromdata = 7\r\n}\r\n/** Client Filter Type */\r\nexport interface FilterCondition {\r\n    operator1?: Compare;\r\n    value1?: any;\r\n    relation?: 'and' | 'or' | '';\r\n    operator2?: Compare;\r\n    value2?: any;\r\n}\r\n\r\nexport interface ColumnFilter {\r\n    type?: ColumnFilterType;\r\n    enableOperator?: boolean;\r\n    options?: any;\r\n}\r\n\r\nexport interface GridEditor {\r\n    type: string;\r\n    options?: any;\r\n    validators?: DatagridValidator[];\r\n}\r\n\r\nexport interface ColumnGroup {\r\n    /** å·¦ä¾§åºå®åæ»å®½åº¦ */\r\n    leftFixedWidth?: number;\r\n    /** å·¦ä¾§åºå®åéå */\r\n    leftFixed?: DataColumn[];\r\n    /** éåºå®åéå */\r\n    normalColumns?: DataColumn[];\r\n    /** å³ä¾§åºå®åéå */\r\n    rightFixed?: DataColumn[];\r\n\r\n    columns?: DataColumn[];\r\n    /** å³ä¾§åºå®åå®½åº¦ */\r\n    rightFixedWidth?: number;\r\n    /** æ­£å¸¸å®½åº¦ */\r\n    normalWidth?: number;\r\n    /** ææåå®½åº¦ä¹å */\r\n    totalWidth?: number;\r\n    /** ç¨æ·è®¾ç½®çåå®½ä¹å */\r\n    originalTotalWidth?: number;\r\n}\r\n\r\nexport interface PaginationInfo {\r\n    enable?: boolean;\r\n    pageList?: number[];\r\n    pageSize?: number;\r\n    pageIndex?: number;\r\n    total?: number;\r\n}\r\n\r\nexport enum CalculationType {\r\n    /** æ  */\r\n    none = -1,\r\n    /** æå¤§å¼ */\r\n    max = 0,\r\n    /** æå°å¼ */\r\n    min,\r\n    /** æ±å */\r\n    sum,\r\n    /** å¹³åæ° */\r\n    average,\r\n    /** æ»è®°å½æ° */\r\n    count\r\n}\r\n\r\nexport interface GridFooterRow {\r\n    options?: {\r\n        /** è®¡ç®ç±»å */\r\n        calculationType?: CalculationType,\r\n        /** éæææ¬ï¼ç´æ¥éå å°TD ä¸­ */\r\n        text?: string;\r\n    };\r\n    /** ææ¬å¯¹é½æ¹å¼ */\r\n    align?: 'left' | 'center' | 'right';\r\n    /** æ°æ®æ ¼å¼å */\r\n    formatter?: (value, rowData, rowIndex) => any | ColumnFormatter;\r\n    /** ååæ ¼æ ·å¼ */\r\n    styler?: (value, rowData, rowIndex) => CustomStyle;\r\n    rowspan?: number;\r\n    colspan?: number;\r\n    visible?: boolean;\r\n}\r\n\r\n\r\nexport const defaultPaginationInfo: PaginationInfo = {\r\n    enable: true,\r\n    pageIndex: 1,\r\n    pageSize: 10\r\n};\r\n","/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-06 07:43:07\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-11-11 10:48:38\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\n\r\nimport { InjectionToken } from '@angular/core';\r\nexport const GRID_EDITORS = new InjectionToken('Farris DataGrid Editors.');\r\nexport const GRID_VALIDATORS = new InjectionToken('Farris DataGrid Validators.');\r\nexport const GRID_FILTER_ROW = new InjectionToken('Farris DataGrid Filter-Row Component.');\r\n\r\nexport const GRID_SETTINGS_PANEL = new InjectionToken('Farris DataGrid Setting Panel Component.');\r\nexport const GRID_SETTINGS_SERVICE = new InjectionToken('Farris DataGrid Setting Service.');\r\nexport const GRID_SETTINGS_HTTP = new InjectionToken(' Datagrid Settings HttpClient.');\r\n\r\nexport const SCROLL_Y_ACTION = 'psScrollY';\r\nexport const SCROLL_X_ACTION = 'psScrollX';\r\nexport const SCROLL_UP_ACTION = 'psScrollUp';\r\nexport const SCROLL_DOWN_ACTION = 'psScrollDown';\r\nexport const SCROLL_LEFT_ACTION = 'psScrollLeft';\r\nexport const SCROLL_RIGHT_ACTION = 'psScrollRight';\r\nexport const SCROLL_Y_REACH_END_ACTION = 'psYReachEnd';\r\nexport const SCROLL_Y_REACH_START_ACTION = 'psYReachStart';\r\nexport const SCROLL_X_REACH_END_ACTION = 'psXReachEnd';\r\nexport const SCROLL_X_REACH_START_ACTION = 'psXReachStart';\r\n\r\nexport const DATAGRID_SETTING_FIELDNAME = '_DATAGRID_CONTROL_PANEL_';\r\n\r\n/** å·¦ä¾§åºå®åé´å½±æ ·å¼åç§° */\r\nexport const FIXED_LEFT_SHADOW_CLS = 'f-datagrid-fixed-left-shadow';\r\nexport const FIXED_RIGHT_SHADOW_CLS = 'f-datagrid-fixed-right-shadow';\r\n\r\nexport const ROW_HOVER_CLS = 'f-datagrid-row-hover';\r\n\r\nexport const ROW_SELECTED_CLS = 'f-datagrid-row-selected';\r\n\r\nexport const CELL_SELECTED_CLS = 'f-datagrid-cell-selected';\r\n\r\nexport const CELL_EDITING_CLS = 'f-datagrid-cell-editing';\r\n\r\n/** è¡é«å°ºå¯¸å®ä¹ */\r\nexport const SIZE_TYPE = {\r\n    sm: {\r\n        row: 29,      // è¡é«\r\n        header: 34,   // è¡¨å¤´è¡é«\r\n        pager:  40    // åé¡µæ¡é«åº¦\r\n    },\r\n    md: {\r\n        row: 36,\r\n        header: 40,\r\n        pager:  44\r\n    },\r\n    lg: {\r\n        row: 46,\r\n        header: 40,\r\n        pager:  44\r\n    },\r\n    xl: {\r\n        row: 60,\r\n        header: 40,\r\n        pager:  44\r\n    },\r\n};\r\n\r\n/** åè®¸ç¼è¾æ¶ï¼éç®æ¾ç¤ºå¯ç¼è¾ååæ ¼çæ ·å¼ */\r\nexport const ALLOW_EDIT_CELL_HIGHLIGHT_CLS = {\r\n    datagrid: 'highlight-allowedit-cell',\r\n    textarea: 'cell-textarea',\r\n    textbox: 'cell-textbox',\r\n    checkbox: 'cell-checkbox',\r\n    datepicker: 'cell-datepicker',\r\n    'input-group': 'cell-input-group',\r\n    select: 'cell-combolist',\r\n    lookup: 'cell-lookup',\r\n    numberbox: 'cell-numberbox',\r\n    combolist: 'cell-combolist',\r\n    'combo-lookup': 'cell-combolist',\r\n    switch: 'cell-switch',\r\n    timepicker: 'cell-timepicker',\r\n    'language-textbox': 'cell-language-textbox',\r\n    'enum-editor': 'cell-enum-editor'\r\n};\r\n\r\n\r\nexport const TR_PREFIX = 'row_';\r\nexport const TR_ID_PREFIX = '#row_';\r\n","/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-12 07:47:12\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-11-19 20:30:44\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { ColumnGroup, DataColumn, FilterCondition} from './../types';\r\nimport { EntityFilter } from '@farris/ui-common/types';\r\n\r\nexport interface RowDataChanges {[id: string]: any; }\r\n\r\nexport interface FarrisDatagridState {\r\n    [key: string]: any;\r\n    width?: number;\r\n    height?: number;\r\n    rowHeight?: number;\r\n    idField?: string;\r\n    data?: any;\r\n    /** å½åé¡µæ°æ® */\r\n    currentPageData?: any;\r\n    originalData?: any;\r\n    showHeader?: boolean;\r\n    headerHeight?: number;\r\n    pageIndex?: number;\r\n    pageSize?: number;\r\n    pagerHeight?: number;\r\n    pagination?: boolean;\r\n    columns: Array<DataColumn> | Array<DataColumn>[];\r\n    flatColumns?: Array<DataColumn>;\r\n    fitColumns: boolean;\r\n    autoFitColumns?: boolean;\r\n    showLineNumber?: boolean;\r\n    showCheckbox?: boolean;\r\n    checkboxColumnWidth: number;\r\n    multiSelect?: boolean;\r\n    /** å½å¯ç¨å¤éæ¶ï¼ç¹å»è¡éä¸­ï¼åªåè®¸ä¸åªæä¸è¡è¢«éä¸­ã */\r\n    onlySelectSelf: boolean;\r\n    selectOnCheck: boolean;\r\n    checkOnSelect: boolean;\r\n    selections?: SelectedRow[];\r\n    checkedRows?: SelectedRow[];\r\n    currentRow?: SelectedRow;\r\n    currentCell?: CellInfo;\r\n    columnsGroup: ColumnGroup;\r\n    virtualized?: boolean;\r\n    showFooter?: boolean;\r\n    /** æ¯å¦å¯ç¨å¼æ­¥èæå è½½æ°æ®: false - å®¢æ·ç«¯åå­ä¸­åæ°ï¼true - è¿ç«¯æå¡å¨å è½½æ°æ®, é»è®¤å¼ä¸º false */\r\n    virtualizedAsyncLoad?: boolean;\r\n    virtual?: VirtualizedState;\r\n    sortName?: string;\r\n    sortOrder?: string;\r\n    multiSort?: boolean;\r\n    remoteSort?: boolean;\r\n    /** æå¡å¨ç«¯è¿æ»¤ */\r\n    remoteFilter?: boolean;\r\n    /** è¿æ»¤æ¡ä»¶ */\r\n    conditions?: EntityFilter | FilterCondition;\r\n    changes: RowDataChanges;\r\n    // å¯ç¨è¡åç»\r\n    groupRows?: boolean;\r\n    // åç»å­æ®µ\r\n    groupField?: string;\r\n    // åç»åè®¡è¡\r\n    groupFooter?: boolean;\r\n    /** æ¾ç¤ºåç»å */\r\n    showGroupColumn?: boolean;\r\n    mergeCell?: boolean;\r\n    enableClientSortForMergeCell?: boolean;\r\n    /** å­å¨ç»ä»¶åå§æ¶çç¸å³å±æ§è®¾ç½® */\r\n    initialOptions?: any;\r\n}\r\n\r\nexport interface VirtualizedState {\r\n    /** èæå è½½ä¸ä¸æ¾ç¤ºåé¡µæ¡æ¶ï¼è®°å½å è½½æ°è®°å½æ¶çç´¢å¼å¼ */\r\n    rowIndex: number;\r\n    /** æ°æ®æ¾ç¤ºçç´¢å¼å¼ */\r\n    startIndex?: number;\r\n    scrollTop?: number;\r\n    virtualRows?: any;\r\n    topHideHeight?: number;\r\n    bottomHideHeight?: number;\r\n    /** é¡µèæ°æ® */\r\n    footer?: any[];\r\n    /** æ¯å¦ç±æ»å¨æ¡è§¦å */\r\n    isScrollChange?: boolean;\r\n}\r\n\r\nexport interface SelectedRow {\r\n    index: number;\r\n    id: any;\r\n    data: any;\r\n    /** ä¸­é´ä½ç½®è¡å¼ç¨ */\r\n    dr?: any;\r\n    /** å·¦ä¾§ä½ç½®è¡å¼ç¨ */\r\n    drl?: any;\r\n    /** å³ä¾§ä½ç½®è¡å¼ç¨ */\r\n    drr?: any;\r\n    editors?: any[];\r\n}\r\n\r\nexport const initDataGridState: FarrisDatagridState = {\r\n    idField: 'id',\r\n    showLineNumber: false,\r\n    selections: [],\r\n    checkedRows: [],\r\n    currentRow: null,\r\n    columnsGroup: null,\r\n    columns: [],\r\n    fitColumns: false,\r\n    onlySelectSelf: true,\r\n    selectOnCheck: true,\r\n    checkOnSelect: true,\r\n    pageIndex: 1,\r\n    pageSize: 20,\r\n    pagerHeight: 40,\r\n    checkboxColumnWidth: 36,\r\n    pagination: false,\r\n    virtual: {\r\n        rowIndex: 0,\r\n        scrollTop: 0,\r\n        topHideHeight: 0,\r\n        bottomHideHeight: 0,\r\n        isScrollChange: false\r\n    },\r\n    sortName: undefined,\r\n    sortOrder: undefined,\r\n    multiSort: false,\r\n    remoteSort: true,\r\n    changes: null,\r\n    showGroupColumn: false\r\n};\r\n\r\nexport interface CellInfo {\r\n    isEditing?: boolean;\r\n    rowData?: any;\r\n    rowId?: any;\r\n    rowIndex?: number;\r\n    field?: string;\r\n    cellElement?: any;\r\n    cellRef?: any;\r\n    editor?: any;\r\n    column?: any;\r\n    cellEditorRef?: any;   //  GridCellEditorDirective\r\n    lastRow?: boolean;\r\n}\r\n\r\nexport interface DataResult {\r\n    footer?: any[];\r\n    items: any[];\r\n    total?: number;\r\n    pageIndex?: number;\r\n    pageSize?: number;\r\n}\r\n/** è¡ç´¢å¼ */\r\nexport const ROW_INDEX_FIELD = '__row_index__';\r\n/** æ¯å¦ä¸ºåç»è¡ */\r\nexport const IS_GROUP_ROW_FIELD = '__group__';\r\n/** å¼ç¨çåç»è¡å±æ§ */\r\nexport const GROUP_ROW_FIELD = '__group_parent_id__';\r\n/** æ¯å¦ä¸ºåç»åè®¡è¡ */\r\nexport const IS_GROUP_FOOTER_ROW_FIELD = '__group_footer__';\r\nexport const GROUP_VISIBLE_FIELD = '__group_visible__';\r\nexport const GROUP_LEVEL_FIELD = '__group_level__';\r\n\r\n\r\nexport interface DatagridGroupRow {\r\n    /** æ è¯æ­¤æ°æ®è¡ä¸ºåç»è¡ */\r\n    [IS_GROUP_ROW_FIELD]: boolean;\r\n    /** åç»ç­çº§ */\r\n    level: number;\r\n    /** æå¨è¡æ°æ® */\r\n    data: any;\r\n    /** åç»å­æ®µå¼ */\r\n    value: any;\r\n    /** åç»è¡æ¯å¦å¯è§ */\r\n    [GROUP_VISIBLE_FIELD]: boolean;\r\n    /** æ¯å¦å±å¼åç»è¡ */\r\n    expanded: boolean;\r\n    /** åç»å­æ®µ */\r\n    field: string;\r\n    colspan: number;\r\n    /** åç»æ»è®°å½æ° */\r\n    total: number;\r\n    /** åç»æ°æ®è¡ */\r\n    rows: any;\r\n    /** ç¶çº§åç»è¡ */\r\n    [GROUP_ROW_FIELD]: any;\r\n}\r\n\r\n\r\nexport const IgnoreProperties = [\r\n    'afterEdit',\r\n    'app',\r\n    'beforeCheck',\r\n    'beforeClickCell',\r\n    'beforeEdit',\r\n    'beforeSelect',\r\n    'beforeSortColumn',\r\n    'beforeUncheck',\r\n    'beforeUnselect',\r\n    'beginEdit',\r\n    'cancelEdited',\r\n    'cd',\r\n    'cellClick',\r\n    'checkAll',\r\n    'checkValuesChange',\r\n    'checked',\r\n    'checkedChange',\r\n    'clientFilterService',\r\n    'colFormatSer',\r\n    'columnMoved',\r\n    'columnSorted',\r\n    'dataChange',\r\n    'dblclickRow',\r\n    'destroy$',\r\n    'dfs',\r\n    'dgColumns',\r\n    'dgContainer',\r\n    'dgPager',\r\n    'dgs',\r\n    'domSanitizer',\r\n    'editors',\r\n    'el',\r\n    'endEdit',\r\n    'farrisInstances',\r\n    'filterChanged',\r\n    'footerTemplate',\r\n    'groupFieldChange',\r\n    'groupFields$',\r\n    'inject',\r\n    'lastCellEnterHandle',\r\n    'loadSuccess',\r\n    'localeService',\r\n    'longTextArea',\r\n    'rowAppended',\r\n    'rowClick',\r\n    'rowDeleted',\r\n    'render2',\r\n    'pageSizeChanged',\r\n    'onDocumentMouseDown',\r\n    'pageChanged',\r\n    'resizeProxy',\r\n    'resizeProxyBg',\r\n    'ro',\r\n    'rowUpdated',\r\n    'scrollInstance',\r\n    'scrollY',\r\n    'scrollYLoad',\r\n    'selectAll',\r\n    'selectChanged',\r\n    'sms',\r\n    'selectValueChange',\r\n    'selectValuesChange',\r\n    'settingService',\r\n    'smartFilterService',\r\n    'subscriptions',\r\n    'trackByRows',\r\n    'unCheckAll',\r\n    'unChecked',\r\n    'unSelect',\r\n    'unSelectAll',\r\n    'zone',\r\n    '__component_type__',\r\n    '__pagination',\r\n    '_active_datagrid_cls',\r\n    '_autoFitColumns',\r\n    '_blured_datagrid_cls',\r\n    '_columns',\r\n    '_custom_datagrid_cls',\r\n    '_editable',\r\n    '_fields',\r\n    '_fit',\r\n    '_fitColumns',\r\n    '_footerData',\r\n    '_groupField',\r\n    '_isResized',\r\n    '_loading',\r\n    '_lockPagination',\r\n    '_selectedRow',\r\n    '_showRowGroupPanel',\r\n    '_sizeType',\r\n    '_total',\r\n];\r\n","/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-06 07:43:53\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-11-19 20:31:27\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nexport class Utils {\r\n\r\n    static uuid() {\r\n        function S4() {\r\n            // tslint:disable-next-line: no-bitwise\r\n            return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n        }\r\n        return (S4() + S4() + '-' + S4() + '-' + S4() + '-' + S4() + '-' + S4() + S4() + S4());\r\n    }\r\n\r\n\r\n    /**\r\n     * è·åå¯¹è±¡ä¸­æå®å­æ®µçå¼ã field: å¯ä»¥ä¸ºå¸¦æå±çº§ç»æçè·¯å¾ï¼å¦ï¼ user.firstName | name ç­\r\n     */\r\n    static getValue(field: string, data: any, safe = false) {\r\n        if (!data) {\r\n            return  '';\r\n        }\r\n        let resultVal = '';\r\n        if (field.indexOf('.') === -1 || data.hasOwnProperty(field)) {\r\n            resultVal = data[field];\r\n        } else {\r\n            resultVal = field.split('.').reduce((obj, key) => {\r\n                if (obj) {\r\n                    return obj[key];\r\n                } else {\r\n                    return null;\r\n                }\r\n            }, data);\r\n        }\r\n\r\n        if (safe) {\r\n            return this.escapeValue(resultVal);\r\n        }\r\n        return resultVal;\r\n    }\r\n\r\n    static setValue( field: string, val: any, obj: { [key: string]: any }, nest = true) {\r\n        if (field) {\r\n            if (field.indexOf('.') > -1 && nest) {\r\n                let lastObj = null;\r\n                const _fields = field.split('.');\r\n                _fields.reduce( (c, p) => {\r\n                    lastObj = c;\r\n                    return c[p];\r\n                }, obj);\r\n\r\n                if (lastObj) {\r\n                    lastObj[_fields.pop()] = val;\r\n                }\r\n            } else {\r\n                obj[field] = val;\r\n            }\r\n        }\r\n    }\r\n\r\n    /** è·åå¤è¯­å¼ */\r\n    static getMultilingualValue(valObj, localeId) {\r\n        if (valObj && typeof valObj === 'object' && Object.keys(valObj).length > 0) {\r\n            localeId = localeId || 'zh-CHS';\r\n            const val = valObj[localeId];\r\n            if (val !== undefined) {\r\n                return val;\r\n            } else {\r\n                return '';\r\n            }\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n\r\n    static escapeValue(val: any) {\r\n        if (val === null || val === undefined || val === '') {\r\n            return '';\r\n        }\r\n\r\n        const escapeHTML = (unsafe_str) => {\r\n            return unsafe_str\r\n                .replace(/&/g, '&amp;')\r\n                .replace(/</g, '&lt;')\r\n                .replace(/>/g, '&gt;')\r\n                .replace(/\\\"/g, '&quot;')\r\n                .replace(/\\'/g, '&#39;')\r\n                .replace(/\\//g, '&#x2F;');\r\n                // .replace('src','drc');\r\n        };\r\n\r\n        if (typeof val === 'string') {\r\n            return escapeHTML(val);\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    static eventPath(evt: any) {\r\n        const path = (evt.composedPath && evt.composedPath()) || evt.path;\r\n        const target = evt.target;\r\n\r\n        if (path != null) {\r\n            return (path.indexOf(window) < 0) ? path.concat(window) : path;\r\n        }\r\n\r\n        if (target === window) {\r\n            return [window];\r\n        }\r\n\r\n        const getParents = (node, memo = undefined) => {\r\n            memo = memo || [];\r\n            const parentNode = node.parentNode;\r\n\r\n            if (!parentNode) {\r\n                return memo;\r\n            } else {\r\n                return getParents(parentNode, memo.concat(parentNode));\r\n            }\r\n        };\r\n\r\n        return [target].concat(getParents(target), window);\r\n    }\r\n\r\n    static hasDialogOpen() {\r\n        // return document.body.classList.value.indexOf('modal-open') > -1;\r\n        // å¼å®¹IE 11\r\n        return document.body.className.indexOf('modal-open') > -1;\r\n    }\r\n\r\n    static on(el, evt, fn, opts: any = {}) {\r\n        const delegatorFn = e => e.target.matches(opts.target) && fn.call(e.target, e);\r\n        el.addEventListener(evt, opts.target ? delegatorFn : fn, opts.options || false);\r\n        return () => {\r\n            el.removeEventListener(evt, delegatorFn, opts);\r\n        };\r\n    }\r\n\r\n    static off(el, evt, fn= () => {}, opts: any = {}) {\r\n        el.removeEventListener(evt, fn, opts);\r\n    }\r\n    /** è·åå­ç¬¦é¿åº¦ï¼ä¸­ææ±å­å 2ä¸ªå­ç¬¦ */\r\n    static getBLen(str) {\r\n        if (str == null) {\r\n            return 0;\r\n        }\r\n        if (typeof str !== 'string') {\r\n          str += '';\r\n        }\r\n        return str.replace(/[^\\x00-\\xff]/g, '01').length;\r\n    }\r\n\r\n    // static difference(first: any[], second: any[]): any[] {\r\n    //     return first.filter(item => !second.includes(item));\r\n    // }\r\n\r\n    // static getDiffItems(arr1, arr2) {\r\n    //     const diff1 = Utils.difference(arr1, arr2);\r\n    //     const diff2 = Utils.difference(arr2, arr1);\r\n\r\n    //     return diff1.concat(diff2);\r\n    // }\r\n\r\n    static getWhenEmptyText(col: any, localeId) {\r\n\r\n        const EMPTY_INPUT_TEXT = {\r\n            'zh-CHS': 'è¯·è¾å¥',\r\n            'zh-CHT': 'è«è¼¸å¥',\r\n            en: 'Please input'\r\n        };\r\n\r\n        const EMPTY_SELECT_TEXT = {\r\n            'zh-CHS': 'è¯·éæ©',\r\n            'zh-CHT': 'è«é¸æ',\r\n            en: 'Please select'\r\n        };\r\n\r\n\r\n        if (col.editor) {\r\n            switch (col.editor.type) {\r\n                case 'datepicker':\r\n                case 'select':\r\n                case 'lookup':\r\n                case 'combolist':\r\n                case 'combo-lookup':\r\n                    return  EMPTY_SELECT_TEXT[localeId];\r\n                default:\r\n                    return EMPTY_INPUT_TEXT[localeId];\r\n            }\r\n        }\r\n\r\n        // æ§å¶é¢æ¿å\r\n        if (col.field === '_datagrid-setting-control_') {\r\n            return '';\r\n        }\r\n\r\n        return EMPTY_INPUT_TEXT[localeId];\r\n    }\r\n}\r\n\r\n","import { DataColumn, ColumnFilterType } from './../types/data-column';\r\nimport { bindCallback, of } from 'rxjs';\r\n\r\nexport class DatagridColumnsHelper {\r\n\r\n    static gridInstance = null;\r\n\r\n    /** è·åæ»åæ° */\r\n    private static getColumnTotal(firstCols: any[]) {\r\n        let total = 0;\r\n        firstCols.forEach(n => {\r\n            total += (n.colspan || 1);\r\n        });\r\n        return total;\r\n    }\r\n\r\n    // æ¥æ¾æªèµå¼é¡¹çç´¢å¼\r\n    private static findUndefinedItem(arr) {\r\n        for (let i = 0; i < arr.length; i++) {\r\n            if (arr[i] == undefined) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    private static getColumnFields(columns) {\r\n        const aa = [];\r\n        // æ ¹æ®ç¬¬ä¸è¡è®¡ç®æ»åæ°\r\n        const colTotal = DatagridColumnsHelper.getColumnTotal(columns[0]);\r\n        // åå»ºç©ºæ°ç»\r\n        for (let i = 0; i < columns.length; i++) {\r\n            aa[i] = new Array(colTotal);\r\n        }\r\n        for (let i = 0; i < columns.length; i++) {\r\n            columns[i].forEach(col => {\r\n                let k = DatagridColumnsHelper.findUndefinedItem(aa[i]);\r\n                if (k >= 0) {\r\n                    const field = col.field || col.id || '';\r\n                    for (let c = 0; c < (col.colspan || 1); c++) {\r\n                        for (let r = 0; r < (col.rowspan || 1); r++) {\r\n                            aa[i + r][k] = field;\r\n                        }\r\n                        k++;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return aa;\r\n    }\r\n\r\n    static columnIsVisible(col: any, ins: any) {\r\n        if (col.visible === undefined) {\r\n            col.visible = true;\r\n        }\r\n\r\n        const t = typeof col.visible;\r\n        if (t === 'boolean') {\r\n            return col.visible;\r\n        } else if ( t === 'function') {\r\n            return col.visible({instance: ins, column: col});\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    static getFields(columns) {\r\n        // ç§»é¤éèçå\r\n        const _cols = columns.map(cols => {\r\n            cols = cols.filter(col => DatagridColumnsHelper.columnIsVisible(col, DatagridColumnsHelper.gridInstance));\r\n            return cols;\r\n        });\r\n\r\n        const fields =  DatagridColumnsHelper.getColumnFields(_cols);\r\n        return fields.length ? fields[fields.length - 1] : fields;\r\n    }\r\n\r\n    static getFilterEnumOptions(column: DataColumn) {\r\n        let enumSetting = null;\r\n        if (column.filter.type === ColumnFilterType.enum) {\r\n            const fmt = column.formatter as any;\r\n            if (fmt) {\r\n                enumSetting = fmt.options;\r\n            } else {\r\n                if (column.filter.options) {\r\n                    enumSetting = column.filter.options;\r\n                }\r\n            }\r\n        }\r\n\r\n        return enumSetting;\r\n    }\r\n\r\n    static getEnumText(enumOpts: any, value1: any) {\r\n        if (!enumOpts) {\r\n            return  '';\r\n        }\r\n        const { valueField, textField, data } = enumOpts;\r\n        let str = '';\r\n        if (value1) {\r\n            str += ` ${value1.map(v => {\r\n                const enumItem = data.find(d => d[valueField] === v);\r\n                return enumItem[textField];\r\n            }).join(',')}`;\r\n        }\r\n        return str;\r\n    }\r\n\r\n    static columnVisibleAsObservable(col: DataColumn) {\r\n        if (typeof col.visible === 'function') {\r\n            const visibleAsObservable = bindCallback(col.visible);\r\n            return visibleAsObservable();\r\n        }\r\n        return of(col.visible);\r\n    }\r\n\r\n    static getParentColumns(col: DataColumn, allCols) {\r\n        const arr = [];\r\n        const _getParents = (c) => {\r\n            if (c && c.parentId) {\r\n                const parentCol = allCols.find(n => n.id === c.parentId);\r\n                // arr.splice(0, 0, parentCol);\r\n                arr.push(parentCol);\r\n                _getParents(parentCol);\r\n            }\r\n        };\r\n        _getParents(col);\r\n        return arr;\r\n    }\r\n\r\n    static getChildColumns(col: DataColumn, allCols) {\r\n        const arr = [];\r\n        const _getChilds = (c) => {\r\n            if (c && c.parentId) {\r\n                const childs = allCols.filter(n => n.parentId === c.id);\r\n                arr.splice(0, 0, ...childs);\r\n                childs.forEach(child => {\r\n                    _getChilds(child);\r\n                });\r\n            }\r\n        };\r\n        _getChilds(col);\r\n        return arr;\r\n    }\r\n\r\n    // æ£æ¥å¤è¡¨å¤´æ¶ï¼è®¾è®¡å¨ä¸­å°åè®¾ä¸ºéè\r\n    static checkGroupHeaderColumnVisible(allCols) {\r\n        const hiddenFields = allCols.filter(n => n.visible === false).map(n => n.field);\r\n        hiddenFields.forEach(field => {\r\n            const _col = allCols.find(col => col.field === field || col.id === field);\r\n            if (_col) {\r\n                const parents = DatagridColumnsHelper.getParentColumns(_col, allCols);\r\n\r\n                parents.forEach(p => {\r\n                    const _childs = allCols.filter(n => n.parentId === p.id && (n.visible || n.visible === undefined) );\r\n                    p.colspan = _childs.reduce(( r, c ) => {\r\n                        r = r + (c.colspan || 1);\r\n                        return r;\r\n                    }, 0);\r\n                    p.visible = !!p.colspan;\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    // å¤è¡¨å¤´ä¸ä»æä¸åæ¾ç¤º\r\n    static onlyOneColumn() {\r\n\r\n    }\r\n}\r\n","/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-06 07:43:53\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-11-20 07:39:45\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\n\r\nimport { Injectable, EventEmitter } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, merge, Subject } from 'rxjs';\r\nimport { map, distinctUntilChanged, filter, switchMap, auditTime, debounceTime, debounce } from 'rxjs/operators';\r\nimport { DataColumn, ColumnGroup, CalculationType } from '../types';\r\nimport { FarrisDatagridState, initDataGridState, DataResult, CellInfo, VirtualizedState, SelectedRow,\r\n        RowDataChanges, ROW_INDEX_FIELD, IS_GROUP_ROW_FIELD, GROUP_ROW_FIELD, IS_GROUP_FOOTER_ROW_FIELD, GROUP_VISIBLE_FIELD, GROUP_LEVEL_FIELD } from './state';\r\nimport { VirtualizedLoaderService } from './virtualized-loader.service';\r\nimport { DatagridRow } from '../types/datagrid-row';\r\nimport { cloneDeep, groupBy, sumBy, maxBy, minBy, meanBy, isPlainObject, flatten } from 'lodash-es';\r\nimport { Utils } from '../utils/utils';\r\nimport { DatagridColumnsHelper } from './datagrid-columns.helper';\r\nimport { BigNumber } from 'bignumber.js';\r\n@Injectable()\r\nexport class DatagridFacadeService {\r\n\r\n    localId = 'zh-CHS';\r\n\r\n    protected _state: FarrisDatagridState;\r\n    // public virtualizedService: VirtualizedLoaderService;\r\n\r\n    store = new BehaviorSubject<FarrisDatagridState>(null);\r\n\r\n    virtualRowSubject = new BehaviorSubject<any>(null);\r\n    gridSizeSubject = new Subject<any>();\r\n    errorSubject = new Subject();\r\n    private selectRowSubject = new Subject<any>();\r\n    private unSelectRowSubject = new Subject<any>();\r\n    private columnResizeSubject = new Subject<any>();\r\n    private clearSelectionSubject = new Subject();\r\n    private checkRowSubject = new Subject<any>();\r\n    private unCheckRowSubject = new Subject<any>();\r\n    private clearCheckedsSubject = new Subject<any>();\r\n    private clearAllSubject = new Subject<any>();\r\n    private checkAllSubject = new Subject();\r\n    private unCheckAllSubject =  new Subject();\r\n    private selectAllSubject = new Subject();\r\n    private selectCellSubject = new Subject();\r\n\r\n    error$ = this.errorSubject.asObservable();\r\n    selectRow$ = this.selectRowSubject.asObservable();\r\n    unSelectRow$ =  this.unSelectRowSubject.asObservable();\r\n    columnResize$ = this.columnResizeSubject.asObservable();\r\n    clearSelections$ = this.clearSelectionSubject.asObservable();\r\n    checkRow$ = this.checkRowSubject.asObservable();\r\n    unCheckRow$ = this.unCheckRowSubject.asObservable();\r\n    clearCheckeds$ = this.clearCheckedsSubject.asObservable();\r\n    clearAll$ = this.clearAllSubject.asObservable();\r\n    checkAll$ = this.checkAllSubject.asObservable();\r\n    unCheckAll$ = this.unCheckAllSubject.asObservable();\r\n    selectAll$ = this.selectAllSubject.asObservable();\r\n    currentCell$ = this.selectCellSubject.asObservable();\r\n    editCell$ = new EventEmitter();\r\n    clientSort$ = new EventEmitter();\r\n    rowAppend$ = new EventEmitter();\r\n    rowUpdate$ = new EventEmitter();\r\n    rowDelete$ = new EventEmitter();\r\n\r\n    updateCheckboxState$ = new EventEmitter();\r\n\r\n    readonly state$ = this.store.asObservable().pipe(\r\n        filter( (state: any) => state)\r\n    );\r\n\r\n    readonly columnGroup$ = this.gridSizeSubject.asObservable().pipe(\r\n        filter( (state: any) => state),\r\n        map((state: FarrisDatagridState) => state.columnsGroup),\r\n        switchMap((colgroup: any) => {\r\n            return of( colgroup);\r\n        }),\r\n        distinctUntilChanged()\r\n    );\r\n\r\n    gridSize$ = this.gridSizeSubject.asObservable().pipe(\r\n        filter( (state: any) => state),\r\n        map((state: FarrisDatagridState) => {\r\n            const { headerHeight, pagerHeight, width, columnsGroup, height, rowHeight } = {...state};\r\n            return { headerHeight, pagerHeight, width, columnsGroup, height, rowHeight };\r\n        }),\r\n        distinctUntilChanged()\r\n    );\r\n\r\n    readonly data$ = this.virtualRowSubject.pipe(\r\n        filter(vs => vs),\r\n        switchMap((vs: VirtualizedState) => {\r\n            return of({\r\n                index: vs.startIndex || 0,\r\n                rows: vs.virtualRows || [],\r\n                top: vs.topHideHeight,\r\n                bottom: vs.bottomHideHeight,\r\n                scrolling: vs.isScrollChange\r\n            });\r\n        }),\r\n        distinctUntilChanged()\r\n    );\r\n\r\n    difference = (first: any[], second: any[]) => first.filter(item => !second.includes(item));\r\n    differenceBy = (a, b, fn) => {\r\n        const s = new Set(b.map(fn));\r\n        return a.map(fn).filter(el => !s.has(el));\r\n    }\r\n\r\n    constructor(private http: HttpClient) {\r\n        this._state =  cloneDeep(initDataGridState);\r\n    }\r\n\r\n    updateVirthualRows(scrolltop: number, isScrollChange = false) {\r\n        const virtual = this.getVirthualRows(scrolltop);\r\n        virtual.isScrollChange = isScrollChange;\r\n        this.updateState({virtual}, false);\r\n        this.virtualRowSubject.next(virtual);\r\n    }\r\n\r\n    getVirthualRows(scrolltop): VirtualizedState {\r\n        if (scrolltop === undefined) {\r\n            scrolltop = 0;\r\n        }\r\n\r\n        const data =  this._state.data || [];\r\n        const virtual = {rowIndex: 0, virtualRows: data, topHideHeight: 0, bottomHideHeight: 0 };\r\n\r\n        if (data.length === 0 || (this._state.autoHeight && !this._state.groupRows)) {\r\n            virtual.virtualRows = data;\r\n            return virtual;\r\n        }\r\n\r\n        if (this._state.flatColumns && this._state.flatColumns.length) {\r\n            // data = this._state.data;\r\n\r\n            // if (!this._state.groupRows) {\r\n            //     if (this._state.virtual && this._state.virtualized) {\r\n            //         this.virtualizedService.state = this._state;\r\n            //         const rows = this.virtualizedService.getRows(scrolltop);\r\n            //         virtual = { ...this._state.virtual, ...rows };\r\n            //     } else {\r\n            //         virtual.virtualRows = data;\r\n            //     }\r\n            // } else {\r\n            //     // è¡åç»æ°æ®å¤ç\r\n            //     const groupRows = this.groupRows2(cloneDeep(data));\r\n            //     virtual.virtualRows = groupRows;\r\n            // }\r\n            if (this._state.groupRows) {\r\n                // è¡åç»æ°æ®å¤ç\r\n                const groupRows = this.groupRows2(cloneDeep(data));\r\n                virtual.virtualRows = groupRows;\r\n            }\r\n        }\r\n\r\n        if (this._state.mergeCell && this._state.enableClientSortForMergeCell) {\r\n            virtual.virtualRows = this.sort(virtual.virtualRows);\r\n        }\r\n\r\n        return virtual;\r\n    }\r\n\r\n    // getDeltaTopHeight(scrolTop, firstIndex) {\r\n    //     const {rowsLength: viewRowsCount, top, bottom} = this.virtualizedService.getRowsCount(scrolTop, this._state.pageSize, firstIndex);\r\n    //     const gridContainerRowsCount = this.virtualizedService.displayRowsCount();\r\n    //     let deltaTopHeight = 0;\r\n    //     if (viewRowsCount < gridContainerRowsCount) {\r\n    //         deltaTopHeight = (gridContainerRowsCount - viewRowsCount) * this._state.rowHeight - this._state.headerHeight;\r\n    //     }\r\n\r\n    //     return deltaTopHeight;\r\n    // }\r\n\r\n    getData(original = false) {\r\n        if (original) {\r\n            return this._state.originalData || [];\r\n        }\r\n        return this._state.data || [];\r\n    }\r\n\r\n    getState() {\r\n        return this._state;\r\n    }\r\n\r\n    getVirtualState() {\r\n        return this._state.virtual;\r\n    }\r\n\r\n    getPageInfo() {\r\n        const { pageIndex, pageSize } = {...this._state};\r\n        return { pageIndex, pageSize };\r\n\r\n    }\r\n\r\n    initState(state: Partial<FarrisDatagridState>) {\r\n        this.updateState(state, false);\r\n        this._state.originalData = cloneDeep(this._state.data);\r\n        this.initColumns();\r\n\r\n        this.gridSizeSubject.next(this._state);\r\n        this.updateVirthualRows(0);\r\n    }\r\n\r\n\r\n    /** å è½½æ°æ®\r\n     * @param data: æ°æ®åè¡¨\r\n     * @param updateOriginalData æ¯å¦æ´æ°åå§æ°æ®, é»è®¤ä¸º true\r\n     */\r\n    loadData(data: any, updateOriginalData = true, sortable = false) {\r\n        data = data || [];\r\n        this.updateState({ data }, false);\r\n\r\n        if (updateOriginalData) {\r\n            this._state.originalData = cloneDeep(this._state.data);\r\n        }\r\n        if (sortable && this._state.sortName) {\r\n            const sortedData = this.sort(this._state.data);\r\n            this.updateState({ data: sortedData }, false);\r\n        } else {\r\n            // this.updateState({ data: this._state.originalData }, false);\r\n        }\r\n\r\n        this.updateVirthualRows(this._state.virtual.scrollTop || 0);\r\n    }\r\n\r\n    /** å¤åæå®è¡çæ°æ® */\r\n    resetRow(rowId: any) {\r\n        const origData = this._state.originalData;\r\n        if (origData) {\r\n            const origRowData = origData.find(r => this.primaryId(r) === rowId);\r\n            this.getCurrentRow().data = cloneDeep(origRowData);\r\n            this.updateRow(rowId, origRowData);\r\n        }\r\n    }\r\n\r\n    // loadDataForVirtual(data: any) {\r\n    //     this.updateState({ data }, false);\r\n    //     // this.virtualizedService.state = this._state;\r\n    //     const virtual = { ...this._state.virtual, ...this.virtualizedService.reload() };\r\n    //     this.virtualRowSubject.next(virtual);\r\n    //     this.updateState({virtual});\r\n    // }\r\n\r\n    fetchData(url: string): Observable<DataResult> {\r\n        return this.http.get(url).pipe(\r\n            map( r => r as DataResult )\r\n        );\r\n    }\r\n\r\n    setTotal(total: number) {\r\n        this.updateState( {total}, false );\r\n    }\r\n\r\n    updateProperty(property: string, value: any) {\r\n        this.updateState({ [property]: value }, false);\r\n    }\r\n\r\n    setPagination(pageIndex: number, pageSize: number, total: number) {\r\n        this.updateState( { pageIndex, pageSize, total }, false);\r\n    }\r\n\r\n    setScrollTop(scrollTop: number) {\r\n        const virtual = { ...this._state.virtual, scrollTop};\r\n        this.updateState({virtual}, false);\r\n    }\r\n\r\n    isMultiSelect() {\r\n        return this._state.multiSelect;\r\n    }\r\n\r\n    private _isRowSelected(id: any) {\r\n        if (!id || !this._state.currentRow) {\r\n            return false;\r\n        } else {\r\n            return this._state.currentRow.id.toString() === id.toString();\r\n        }\r\n    }\r\n\r\n    isRowSelected(id: any, selections = null) {\r\n        const flag = this._isRowSelected(id);\r\n        if (!this.isMultiSelect() || this._state.onlySelectSelf) {\r\n           return flag;\r\n        } else {\r\n            if (!selections) {\r\n                selections = this._state.selections;\r\n            }\r\n\r\n            if (this._canCancelSelectWhenMulti()) {\r\n                return flag;\r\n            }\r\n\r\n            if (!selections || selections.length === 0) {\r\n                return false;\r\n            } else {\r\n                return selections.findIndex(sr => sr.id == id) > -1;\r\n            }\r\n        }\r\n    }\r\n\r\n    isRowChecked(id: any, checkeds = null) {\r\n        if (!checkeds) {\r\n            checkeds = this.getCheckeds();\r\n        }\r\n        if (!id || !checkeds.length) {\r\n            return false;\r\n        }\r\n\r\n        return checkeds.findIndex(sr => sr.id.toString() === id.toString()) > -1;\r\n    }\r\n\r\n    isCheckAll() {\r\n        const allRows = this.getAllRowsForLive().map(r => this.primaryId(r));\r\n        const checkIds = this._state.checkedRows.map(r => r.id);\r\n        if (this.difference(allRows, checkIds).length) {\r\n            return false; // this._state.checkedRows.length === allRows.length;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    getCurrentPageCheckeds() {\r\n        const allRows = this.getAllRowsForLive().map(r => this.primaryId(r));\r\n        return this._state.checkedRows.filter(n => allRows.indexOf(n.id) > -1);\r\n    }\r\n\r\n    getCurrentRow() {\r\n        return this._state.currentRow || undefined;\r\n    }\r\n\r\n    getSelections() {\r\n        // å¦ææ°æ®æºåäºï¼éè¦éæ°è®¡ç®\r\n        const data = this._state.data;\r\n        if (this._state.selections && this._state.selections.length) {\r\n            if (!data || !data.length) {\r\n                this._state.selections = [];\r\n            } else {\r\n                const temp: any[] = data.map(n => this.primaryId(n));\r\n                this._state.selections = this._state.selections.filter(n => {\r\n                    return temp.includes(n.id);\r\n                });\r\n            }\r\n        }\r\n        return this._state.selections || [];\r\n    }\r\n\r\n    private getCheckedRowsFromSource() {\r\n        return (this._state.checkedRows || []).map(n => {\r\n            const d = this.findRow(n.id);\r\n            if (d && d.data) {\r\n                n.data = d.data;\r\n            }\r\n            return n;\r\n        });\r\n    }\r\n\r\n    getCheckeds(fromDataSource = false) {\r\n        if (fromDataSource) {\r\n            this._state.checkedRows = this.getCheckedRowsFromSource();\r\n        }\r\n\r\n        return this._state.checkedRows || [];\r\n    }\r\n\r\n    updateCheckedData(rowid: any, rowData: { [key: string]: string }) {\r\n        const checkeds = this.getCheckeds();\r\n        if (checkeds.length) {\r\n            const item = checkeds.find(n => this.primaryId(n) == rowid);\r\n            if (item) {\r\n                Object.keys(rowData).forEach(k => {\r\n                    Utils.setValue(k, rowData[k], item.data);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    setCheckedRows(ids: string[], checked = true) {\r\n        if (ids && ids.length) {\r\n            let checkeds = this._state.checkedRows || [];\r\n\r\n            ids.forEach(id => {\r\n                const row = this.findRow(id);\r\n                if (checked && row) {\r\n                    if ( !this.isRowChecked(id, checkeds)) {\r\n                        const srow = { id: this.primaryId(row.data), data: row.data, index: row.index };\r\n                        checkeds.push(srow);\r\n                    }\r\n                } else {\r\n                    if (!this._state.enableMorePageSelect || !checked) {\r\n                        checkeds = checkeds.filter(sr => sr.id !== id);\r\n                    }\r\n                }\r\n            });\r\n            this._state.checkedRows = checkeds;\r\n        } else {\r\n            this._clearCheckeds();\r\n        }\r\n    }\r\n\r\n    checkRecord(id: any, checked = true) {\r\n        if (id) {\r\n            const row = this.findRow(id);\r\n            if (row) {\r\n                const {index: rowIndex, data: rowData} = {...row};\r\n                if (checked) {\r\n                    this.checkRow(rowIndex, rowData);\r\n                } else {\r\n                    this.unCheckRow(rowIndex, rowData);\r\n                }\r\n            } else {\r\n                this.errorSubject.next(`æªæ¾å°IDä¸º${id}çæ°æ®ã`);\r\n            }\r\n        } else {\r\n            this.errorSubject.next(`åæ°id ä¸è½ä¸ºç©ºã`);\r\n        }\r\n    }\r\n\r\n    checkRow(rowIndex: number, rowData: any, grid: any = null) {\r\n        if (!this._state.multiSelect) {\r\n            this._clearCheckeds();\r\n        }\r\n\r\n        const id = this.primaryId(rowData);\r\n        const checkeds = this._state.checkedRows || [];\r\n\r\n        const srow = { id, data: rowData, index: rowIndex };\r\n        if (id && !this.isRowChecked(id, checkeds)) {\r\n            checkeds.push(srow);\r\n            this._state.checkedRows = checkeds;\r\n\r\n            if (this._state.selectOnCheck) {\r\n                if (grid && grid.instance && grid.instance.beforeSelect) {\r\n                    grid.instance.beforeSelect({ rowIndex, rowData, gridInstance: grid.instance }).subscribe((e) => {\r\n                        if (e) {\r\n                            this.selectRow(rowIndex, rowData);\r\n                        }\r\n                    });\r\n                } else {\r\n                    this.selectRow(rowIndex, rowData);\r\n                }\r\n            }\r\n\r\n            this.checkRowSubject.next(srow);\r\n        }\r\n\r\n        this.updateCheckboxState$.emit({...srow, checked: true});\r\n    }\r\n\r\n    unCheckRow(rowIndex: number, rowData: any, grid: any = null) {\r\n        const id = this.primaryId(rowData);\r\n        let checkeds = this._state.checkedRows || [];\r\n        const srow = { id, data: rowData, index: rowIndex };\r\n        if (this.isRowChecked(id, checkeds)) {\r\n            checkeds = checkeds.filter(sr => '' + sr.id !== '' + id);\r\n            this._state.checkedRows = checkeds;\r\n\r\n            if (this._state.selectOnCheck) {\r\n                if (grid && grid.instance && grid.instance.beforeUnselect) {\r\n                    grid.instance.beforeUnselect({ rowIndex, rowData, gridInstance: grid.instance }).subscribe((e) => {\r\n                        if (e) {\r\n                            this.unSelectRow(rowIndex, rowData);\r\n                        }\r\n                    });\r\n                } else  {\r\n                    this.unSelectRow(rowIndex, rowData);\r\n                }\r\n            }\r\n\r\n            this.unCheckRowSubject.next(srow);\r\n        }\r\n\r\n        this.updateCheckboxState$.emit({...srow, checked: false});\r\n    }\r\n\r\n    setCurrentPageData(data: any) {\r\n        this._state.currentPageData = data;\r\n    }\r\n\r\n    getCurrentPageData() {\r\n        return this._state.currentPageData || [];\r\n    }\r\n\r\n\r\n    /** è·åææå¯ä»¥æä½çè¡ */\r\n    private getAllRowsForLive() {\r\n        let allData = this._state.data || [];\r\n\r\n        if (this._state.pagination && !this._state.pagerOnServer) {\r\n            // è·åå½åé¡µæ°æ®\r\n            allData = this.getCurrentPageData();\r\n        }\r\n\r\n        // æé¤æç¦ç¨çè¡\r\n        if (this._state.disableRow) {\r\n            allData = allData.filter((n, i) => !this._state.disableRow(n, i));\r\n        }\r\n        return allData;\r\n    }\r\n\r\n    checkAll() {\r\n        this._state.checkedRows = this._state.checkedRows || [];\r\n        const allData = this.getAllRowsForLive();\r\n        const allCheckeds = allData.map( (r, i) => {\r\n            return {\r\n                id: this.primaryId(r),\r\n                index: i,\r\n                data: r\r\n            };\r\n        });\r\n\r\n        if (!this._state.checkedRows.length) {\r\n            this._state.checkedRows = allCheckeds;\r\n        } else {\r\n            const _checkeds = [];\r\n            allCheckeds.forEach(element => {\r\n                if (!this._state.checkedRows.find(n => n.id == element.id)) {\r\n                    _checkeds.push(element);\r\n                }\r\n            });\r\n\r\n            this._state.checkedRows = this._state.checkedRows.concat(_checkeds);\r\n        }\r\n\r\n\r\n        if (this._state.selectOnCheck && !this._state.onlySelectSelf) {\r\n            this._state.selections = [];\r\n            this._state.selections = allData.map( (r, i) => {\r\n                return {\r\n                    id: this.primaryId(r),\r\n                    index: i,\r\n                    data: r\r\n                };\r\n            });\r\n        }\r\n\r\n        this.checkAllSubject.next(this._state.checkedRows);\r\n    }\r\n\r\n    selectAll() {\r\n        this._state.selections = [];\r\n\r\n        const allData = this.getAllRowsForLive();\r\n\r\n        this._state.selections = allData.map( (r, i) => {\r\n            return {\r\n                id: this.primaryId(r),\r\n                index: i,\r\n                data: r\r\n            };\r\n        });\r\n\r\n        if (this._state.checkOnSelect) {\r\n            this._state.checkedRows = [];\r\n            this._state.checkedRows = allData.map( (r, i) => {\r\n                return {\r\n                    id: this.primaryId(r),\r\n                    index: i,\r\n                    data: r\r\n                };\r\n            });\r\n        }\r\n\r\n        this.selectAllSubject.next(this._state.selections);\r\n    }\r\n\r\n    findRow(id): {index: number, data: any} {\r\n        if (this._state.data && this._state.data.length) {\r\n            let index = -1;\r\n            const data = this._state.data.find( (n, i) => {\r\n                const r = this.primaryId(n) == id;\r\n                if (r) {\r\n                    index = i;\r\n                }\r\n                return r;\r\n            });\r\n            if (index === -1) {\r\n                return null;\r\n            }\r\n            return {index, data};\r\n        }\r\n        return null;\r\n    }\r\n\r\n    findRowIndex(id) {\r\n        if (this._state.data && this._state.data.length) {\r\n            return this._state.data.findIndex(n => this.primaryId(n) === id);\r\n        }\r\n        return -1;\r\n    }\r\n    /**\r\n     * è®¾ç½®éä¸­è¡ï¼ä¸è§¦ågrid éä¸­äºä»¶ï¼åæ¶éä¸­äºä»¶\r\n     */\r\n    setSelectRow(id: string, select = true) {\r\n        const row = this.findRow(id);\r\n        const {index: rowIndex, data: rowData} = {...row};\r\n        const srow = { id, data: rowData, index: rowIndex };\r\n\r\n        if (this.isMultiSelect()) {\r\n            if (select) {\r\n                this.selectRowForMulti(srow, false);\r\n            } else {\r\n                this.unSelectRowForMulti(srow, false);\r\n            }\r\n        }\r\n\r\n        const _sr = select ? srow : null;\r\n        this.updateState({ currentRow: _sr}, false);\r\n    }\r\n\r\n    selectRecord(id: any, select = true) {\r\n        if (id) {\r\n            const row = this.findRow(id);\r\n            if (row) {\r\n                const {index: rowIndex, data: rowData} = {...row};\r\n                if (select) {\r\n                    this.selectRow(rowIndex, rowData);\r\n                } else {\r\n                    this.unSelectRow(rowIndex, rowData);\r\n                }\r\n            } else {\r\n                this.errorSubject.next(`æªæ¾å°IDä¸º${id}çæ°æ®ã`);\r\n            }\r\n        } else {\r\n            this.errorSubject.next(`åæ°id ä¸è½ä¸ºç©ºã`);\r\n        }\r\n    }\r\n\r\n    selectRow(rowIndex: number, rowData: any, gridOpts = null) {\r\n        const isMultiSelect = this.isMultiSelect();\r\n        const id = this.primaryId(rowData);\r\n        const srow = { id, data: rowData, index: rowIndex };\r\n\r\n        if (!this.isRowSelected(id) || !this._state.currentRow) {\r\n            if (!isMultiSelect) {\r\n                this.updateState({ currentRow: srow }, false);\r\n                this.selectRowSubject.next(this._state.currentRow);\r\n\r\n                if (this._state.showCheckbox && this._state.checkOnSelect) {\r\n                    this._state.checkedRows = [ srow ];\r\n\r\n                    if (gridOpts && gridOpts.instance && gridOpts.instance.beforeCheck) {\r\n                        gridOpts.instance.beforeCheck({ rowIndex, rowData, gridInstance: gridOpts.instance }).subscribe(() => {\r\n                            this.checkRowSubject.next(srow);        \r\n                        })\r\n                    } else {\r\n                        this.checkRowSubject.next(srow);\r\n                    }\r\n                }\r\n            } else {\r\n                this.selectRowForMulti(srow, true, gridOpts);\r\n            }\r\n        }\r\n    }\r\n\r\n    private selectRowForMulti(srow: { id: any, data: any, index: any }, emit = true, gridOpts = null) {\r\n        if (this._state.onlySelectSelf) {\r\n            this._clearSelections();\r\n            this.updateState({ currentRow: srow, selections: [srow] }, false);\r\n        } else {\r\n            this._state.selections = this._state.selections || [];\r\n            this._state.selections = this._state.selections.filter(sr => sr.id !== srow.id);\r\n            this._state.selections.push(srow);\r\n        }\r\n        if (emit) {\r\n            this.selectRowSubject.next(srow);\r\n        }\r\n\r\n        if (this._state.checkOnSelect) {\r\n            this.checkRow(srow.index, srow.data, gridOpts);        \r\n        }\r\n    }\r\n\r\n    private unSelectRowForMulti(srow: { id: any, data: any, index: any }, emit = true, gridOpts = null) {\r\n        this._state.selections = this._state.selections.filter(sr => sr.id !== srow.id);\r\n\r\n        if (this._canCancelSelectWhenMulti() || (this._state.currentRow && this._state.currentRow.id === srow.id)) {\r\n            this.updateState({ currentRow: null });\r\n        }\r\n\r\n        if (this._state.checkOnSelect) {\r\n            this.unCheckRow(srow.index, srow.data, gridOpts);\r\n        }\r\n\r\n        if (emit) {\r\n            this.unSelectRowSubject.next(srow);\r\n        }\r\n\r\n    }\r\n\r\n    unSelectRow(rowIndex: number, rowData: any, gridOpts = null) {\r\n        const id = this.primaryId(rowData);\r\n        const isMultiSelect = this.isMultiSelect();\r\n        const srow = {id, index: rowIndex, data: rowData};\r\n        if (!isMultiSelect) {\r\n            if (this._state.currentRow) {\r\n                this.updateState({ currentRow: null });\r\n                this.unSelectRowSubject.next(srow);\r\n                if (this._state.showCheckbox) {\r\n                    this.unCheckRow(srow.index, srow.data, gridOpts);\r\n                }\r\n            }\r\n        } else {\r\n            this.unSelectRowForMulti(srow, true, gridOpts);\r\n        }\r\n    }\r\n\r\n    private _canCancelSelectWhenMulti() {\r\n        return !this._state.keepSelect && this._state.onlySelectSelf;\r\n    }\r\n\r\n    private _clearSelections(excludeIds?: string[]) {\r\n        this._state.currentRow = null;\r\n\r\n        if (!excludeIds || !excludeIds.length ) {\r\n            this._state.selections = [];\r\n        } else {\r\n            this._state.selections = this._state.selections.filter(n => {\r\n                return excludeIds.findIndex(i => i == n.id) > -1;\r\n            });\r\n        }\r\n    }\r\n\r\n    private _clearCheckeds(rows = []) {\r\n        if (!rows.length) {\r\n            this._state.checkedRows = [];\r\n        } else {\r\n            this._state.checkedRows = this._state.checkedRows.filter(n => rows.findIndex(r => this.primaryId(r) === n.id) == -1);\r\n        }\r\n    }\r\n\r\n    clearSelections(excludeIds?: string[]) {\r\n        const rows = this._state.selections;\r\n        excludeIds = excludeIds || [];\r\n        this._clearSelections(excludeIds);\r\n        const unCheckRows = rows.filter(n => excludeIds.findIndex(i => i == n.id) == -1);\r\n        if (this._state.checkOnSelect || (!this._state.multiSelect && this._state.showCheckbox)) {\r\n            // this._state.checkedRows = [];\r\n            // this.clearCheckedsSubject.next(rows);\r\n            this._state.checkedRows = this._state.checkedRows.filter(n => {\r\n                return !rows.find(t1 => t1.id == n.id && excludeIds.findIndex(i => i == n.id) == -1);\r\n            });\r\n            this.clearCheckedsSubject.next(unCheckRows);\r\n        }\r\n        this.clearSelectionSubject.next(unCheckRows);\r\n    }\r\n\r\n    clearCheckeds(clearAll = true) {\r\n        const rows = this.getAllRowsForLive();\r\n        const _rows = clearAll ? [] : rows;\r\n        this._clearCheckeds(_rows);\r\n        if (this._state.selectOnCheck) {\r\n           this._clearSelections();\r\n        }\r\n        this.clearCheckedsSubject.next(rows);\r\n    }\r\n\r\n    clearAll() {\r\n        this._clearCheckeds();\r\n        this._clearSelections();\r\n        this.clearAllSubject.next();\r\n    }\r\n\r\n    setMultiSelect(flag: boolean) {\r\n        this._state.multiSelect = flag;\r\n    }\r\n\r\n    setCheckOnSelect(flag: boolean) {\r\n        this._state.checkOnSelect = flag;\r\n    }\r\n\r\n    setSelectOnCheck(flag: boolean) {\r\n        this._state.selectOnCheck = flag;\r\n    }\r\n\r\n    setCurrentCell(dr: DatagridRow, field: string, cellElement?: any, cellRef?: any ) {\r\n        const { rowIndex, rowData } = {...dr};\r\n        let currentCell = {...this._state.currentCell, rowIndex, rowData, field, rowId: this.primaryId(rowData), cellElement };\r\n\r\n        if (field !== this._state.ControlPanelFeild) {\r\n            if (cellRef) {\r\n                currentCell.cellRef = cellRef;\r\n            }\r\n\r\n            if (field) {\r\n                currentCell.column = this.getColumn(field);\r\n            }\r\n\r\n            const isLastRow = rowIndex === this.getData().length - 1;\r\n            currentCell['lastRow'] = isLastRow;\r\n        } else {\r\n            currentCell = null;\r\n        }\r\n        this._state.currentCell = null;\r\n        this.updateState({currentCell}, false);\r\n        this.selectRow(rowIndex, rowData);\r\n        if (this._state.currentRow) {\r\n            this._state.currentRow.dr = dr;\r\n        }\r\n        this.selectCellSubject.next(currentCell);\r\n    }\r\n\r\n    cancelSelectCell() {\r\n        if (this._state.currentCell) {\r\n            this._state.currentCell = null;\r\n            this.updateState({currentCell: null}, false);\r\n            this.selectCellSubject.next(null);\r\n        }\r\n    }\r\n\r\n    primaryId(rowData: any) {\r\n        return rowData[this._state.idField];\r\n    }\r\n\r\n    getCurrentCell() {\r\n        return this._state.currentCell;\r\n    }\r\n\r\n    editCell() {\r\n        if (this._state.currentCell) {\r\n            if (!this._state.currentCell.isEditing) {\r\n                const cei = { ...this._state.currentCell, isEditing: true };\r\n                this.updateState({ currentCell: cei }, false);\r\n                this.selectCellSubject.next(cei);\r\n                // this.editCell$.next(cei);\r\n            }\r\n        }\r\n    }\r\n\r\n    endEditCell() {\r\n        if (this._state.currentCell && this._state.currentCell.isEditing) {\r\n            const cei = { ...this._state.currentCell, isEditing: false };\r\n            this.updateState({ currentCell: cei }, false);\r\n            this.selectCellSubject.next(cei);\r\n            // this.editCell$.next(cei);\r\n        }\r\n    }\r\n\r\n    appendRow(rowData: any) {\r\n        if (rowData && this.primaryId(rowData)) {\r\n            const pid = this.primaryId(rowData);\r\n            if (this.findRowIndex(pid) === -1) {\r\n                this._state.data.push(rowData);\r\n                const newData = [...this._state.data];\r\n                this.updateState({data: newData}, false);\r\n                this._state.originalData = cloneDeep(this._state.data);\r\n                this.refresh();\r\n                this.rowAppend$.emit(rowData);\r\n            } else {\r\n                throw new Error(`ä¸»é®ID å·²å­å¨ï¼ID: ${pid}`);\r\n            }\r\n        } else {\r\n            throw new Error(`ä¸»é®æ è¯å­æ®µä¸è½ä¸ºç©ºã`);\r\n        }\r\n    }\r\n\r\n    updateRow(rowid: any, rowData: any) {\r\n        const row = this.findRow(rowid);\r\n        if (row && row.data) {\r\n            if (rowData) {\r\n                const keys = Object.keys(rowData);\r\n                keys.forEach(field => {\r\n                    Utils.setValue(field, rowData[field], row.data);\r\n                });\r\n                // æ´æ°å·²å¾éçæ°æ®\r\n                this.updateCheckedData(rowid, rowData);\r\n                this.rowUpdate$.emit(row);\r\n            }\r\n        }\r\n    }\r\n\r\n    deleteRow(rowid) {\r\n        const row = this.findRow(rowid);\r\n        if (row) {\r\n            const newData = this.removeRow(this._state.data, rowid);\r\n            this.updateState({data: newData}, false);\r\n            this._state.originalData = cloneDeep(this._state.data);\r\n            this.refresh();\r\n            this.rowDelete$.emit(rowid);\r\n            return row;\r\n        }\r\n    }\r\n    /**\r\n     * ä»æ°ç»ä¸­å é¤æå®çID\r\n     * @param data æ°ç»\r\n     * @param rowId è¦å é¤çID\r\n     */\r\n    removeRow(data, rowId) {\r\n        const newData = data.filter(n => {\r\n            const id = this.primaryId(n);\r\n            return rowId !== id;\r\n        });\r\n\r\n        return newData;\r\n    }\r\n\r\n    isCellSelected(cellInfo: CellInfo) {\r\n        const cc = this.getCurrentCell();\r\n        if (!cc) {\r\n            return false;\r\n        } else {\r\n            if ( this._state.currentRow.index === cc.rowIndex) {\r\n                return cc.field === cellInfo.field;\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n\r\n    protected updateState(state: Partial<FarrisDatagridState>, emit = true) {\r\n        const newState = { ...this._state, ...state };\r\n        this._state = newState;\r\n        if (emit) {\r\n            this.store.next(this._state);\r\n        }\r\n    }\r\n\r\n    resize(newSize?: {width: number, height: number, [key: string]: any}) {\r\n        if (newSize) {\r\n            this.updateState(newSize, false);\r\n        }\r\n        this.resetColumnsSize();\r\n        if (!this._state.groupRows) {\r\n            this.updateVirthualRows(this._state.virtual.scrollTop);\r\n        }\r\n    }\r\n\r\n    fitColumns(fit) {\r\n        this.updateState({fitColumns: fit}, false);\r\n        // const r = this.useUserSetColumnSize();\r\n        // this.setFitColumnsWidth(this._state.columnsGroup, true, r);\r\n        // this.gridSizeSubject.next(this._state);\r\n        this.resetColumnsSize();\r\n    }\r\n\r\n    private useUserSetColumnSize() {\r\n        if (this._state.autoFitColumns) {\r\n            const gridWidth = this._state.width;\r\n            const userSetColumnWidth = this._state.columnsGroup.originalTotalWidth;\r\n            return userSetColumnWidth > gridWidth;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private resetColumnsSize() {\r\n        if (this._state.fitColumns) {\r\n            // 20200421\r\n            const r = this.useUserSetColumnSize();\r\n            this.setFitColumnsWidth(this._state.columnsGroup, r, r);\r\n        }\r\n        this.gridSizeSubject.next(this._state);\r\n    }\r\n\r\n    /**\r\n     * æ´æ°åè®¾ç½®\r\n     * @param columns æ°çåéå\r\n     * @param restitute æ¯å¦è¿ååå§å®½åº¦ é»è®¤ä¸º false\r\n     */\r\n    updateColumns(columns, restitute = false, emit = false) {\r\n        this._state.columns = columns;\r\n        this.initColumns(emit, restitute);\r\n        this.resizeColumns(restitute);\r\n    }\r\n\r\n\r\n    getGroupColumns(columns) {\r\n        let arr = [];\r\n        const allCols = this.getAllFlatColumns();\r\n        columns.forEach(c => {\r\n            if (!c.colspan || c.colspan == 1)            {\r\n                if (!arr.find(n => n.field === c.field)) {\r\n                    arr.push(c);\r\n                }\r\n            } else {\r\n                 arr = arr.concat(this.getGroupColumns(allCols.filter(n => n.parentId == c.id\t)));\r\n            }\r\n        });\r\n        return arr;\r\n    }\r\n\r\n\r\n\r\n    initColumns(emit = false, restColumnWidth = false) {\r\n        const columns = this._state.flatColumns;\r\n        let colgroup: any = {\r\n            leftFixed: [],\r\n            rightFixed: [],\r\n            normalColumns: [],\r\n            columns: []\r\n        };\r\n        if (columns && columns.length) {\r\n            const leftFixedCols = this.getFixedCols('left');\r\n            const rightFixedCols = this.getFixedCols('right');\r\n            const normalCols = this.getFixedCols();\r\n\r\n            columns.forEach(c => {\r\n                if (!c.originalWidth) {\r\n                    c.originalWidth = c.width;\r\n                }\r\n            });\r\n\r\n            colgroup = {\r\n                leftFixed: leftFixedCols,\r\n                rightFixed: rightFixedCols,\r\n                normalColumns: normalCols,\r\n                columns: leftFixedCols.concat(normalCols).concat(rightFixedCols)\r\n            };\r\n\r\n            this.initColumnsWidth(colgroup, restColumnWidth);\r\n\r\n            if (this._state.fitColumns) {\r\n                this.setFitColumnsWidth(colgroup, true);\r\n            }\r\n\r\n            this.updateState({ columnsGroup: colgroup }, emit);\r\n        } else {\r\n            colgroup.leftFixedWidth = 0;\r\n            colgroup.rightFixedWidth = 0;\r\n            colgroup.normalWidth = 0;\r\n            colgroup.totalWidth = 0;\r\n            this.updateState({ columnsGroup: colgroup }, emit);\r\n        }\r\n    }\r\n\r\n    getColumnIndex(field: string, fixed: 'right'| '' | 'left' | 'center' = '') {\r\n        const colgroup = this._state.columnsGroup;\r\n        if (!fixed || this._state.fast) {\r\n            return colgroup.normalColumns.findIndex(n => n.field === field);\r\n        } else {\r\n            if (fixed === 'left') {\r\n                return colgroup.leftFixed.findIndex(n => n.field === field);\r\n            } else if (fixed === 'right') {\r\n                return colgroup.rightFixed.findIndex(n => n.field === field);\r\n            }\r\n        }\r\n    }\r\n\r\n    columnResizeEnd() {\r\n        // const colgroup = this._state.columnsGroup;\r\n        // this.initColumnsWidth(colgroup, false);\r\n        // this.updateState({ columnsGroup:  {...colgroup} }, false);\r\n        // this.gridSizeSubject.next(this._state);\r\n        this.resizeColumns();\r\n    }\r\n\r\n\r\n    resizeColumns(restitute = false) {\r\n        const colgroup = this._state.columnsGroup;\r\n        this.initColumnsWidth(colgroup, restitute);\r\n        if (this._state.fitColumns) {\r\n            const r = this.useUserSetColumnSize();\r\n            if (r) {\r\n                this.setFitColumnsWidth(colgroup, restitute, r);\r\n            } else {\r\n                this.setFitColumnsWidth(colgroup, restitute);\r\n            }\r\n        }\r\n        this.updateState({ columnsGroup:  {...colgroup} }, false);\r\n        this.gridSizeSubject.next(this._state);\r\n    }\r\n\r\n    getAllFlatColumns() {\r\n        return flatten<DataColumn>(this._state.columns);\r\n    }\r\n\r\n    getColumn(fieldName: string) {\r\n        return this.getAllFlatColumns().find(n => n.field === fieldName);\r\n    }\r\n\r\n    setFitColumnsWidth(colgroup: ColumnGroup, restitute = false, useUserSetColumnSize = false) {\r\n        if (!colgroup) {\r\n            return;\r\n        }\r\n        colgroup.normalWidth = this._state.width - colgroup.leftFixedWidth - colgroup.rightFixedWidth;\r\n\r\n        if (!colgroup.normalWidth || colgroup.normalWidth < 0 ) {\r\n            return;\r\n        }\r\n\r\n\r\n        if (useUserSetColumnSize) {\r\n            colgroup.totalWidth = colgroup.originalTotalWidth;\r\n            if (restitute) {\r\n                colgroup.normalColumns.forEach( col => {\r\n                    col.width = col.originalWidth;\r\n                });\r\n            }\r\n            // æ´æ° normalColumns width\r\n            colgroup.normalWidth = colgroup.normalColumns.reduce((totalWidth, col) => {\r\n                if (!restitute && col.width) {\r\n                    return totalWidth += col.width;\r\n                } else {\r\n                    return totalWidth += col.originalWidth;\r\n                }\r\n            }, 0);\r\n\r\n            colgroup.totalWidth = colgroup.leftFixedWidth + colgroup.rightFixedWidth + colgroup.normalWidth;\r\n        } else {\r\n            const minWidth = colgroup.normalColumns.reduce((totalWidth, col) => {\r\n                if (!restitute) {\r\n                    return totalWidth += col.width;\r\n                } else {\r\n                    return totalWidth += col.originalWidth;\r\n                }\r\n            }, 0);\r\n\r\n            colgroup.normalWidth = colgroup.normalWidth - 2;\r\n\r\n            colgroup.normalColumns.forEach( col => {\r\n                if (!restitute) {\r\n                    // col.width = Math.floor( col.width / minWidth * colgroup.normalWidth );\r\n                    col.width = Number((col.width / minWidth * colgroup.normalWidth ).toFixed(2));\r\n                } else {\r\n                    // col.width = Math.floor( col.originalWidth / minWidth * colgroup.normalWidth );\r\n                    col.width =  Number(( col.originalWidth / minWidth * colgroup.normalWidth ).toFixed(2));\r\n                }\r\n            });\r\n            colgroup.totalWidth = colgroup.leftFixedWidth + colgroup.rightFixedWidth + colgroup.normalWidth;\r\n        }\r\n\r\n    }\r\n\r\n    private getFixedCols(direction: 'left' | 'right' | '' = '') {\r\n        let cols = [];\r\n        if (!direction) {\r\n            cols = this._state.flatColumns.filter(col => !col.fixed);\r\n        } else {\r\n            cols = this._state.flatColumns.filter(col => col.fixed === direction);\r\n        }\r\n\r\n        // å¤è¡¨å¤´ï¼éæ°è®¡ç®åçé¡ºåº\r\n        if (this._state.columns.length > 1 && cols.length) {\r\n            const fields = DatagridColumnsHelper.getFields(this._state.columns);\r\n            const newcols = [];\r\n            fields.forEach(f => {\r\n                const c =  cols.find(col => (col.field || '' ) === f);\r\n                if (c) {\r\n                    newcols.push(c);\r\n                }\r\n            });\r\n            return newcols;\r\n        }\r\n\r\n        return cols;\r\n    }\r\n\r\n    // restitute: è¿ååå§å®½åº¦ï¼é»è®¤ false\r\n    private initColumnsWidth(colgroup: ColumnGroup,  restitute = false) {\r\n        let offset = 0;\r\n        offset = this._state.showLineNumber ? offset + this._state.lineNumberWidth : offset;\r\n        offset = this._state.showCheckbox ? offset + this._state.checkboxColumnWidth : offset;\r\n\r\n        const getColsWidth = (cols, val, reset) => {\r\n            return cols.reduce((r, c) => {\r\n                c.left = r;\r\n                if (!reset) {\r\n                    return r + c.width;\r\n                } else {\r\n                    return r + c.originalWidth;\r\n                }\r\n            }, val);\r\n        };\r\n\r\n        colgroup.leftFixedWidth = offset;\r\n        if (colgroup.leftFixed && colgroup.leftFixed.length) {\r\n            colgroup.leftFixedWidth = getColsWidth(colgroup.leftFixed, offset, restitute);\r\n        }\r\n\r\n        colgroup.rightFixedWidth = 0;\r\n        if (colgroup.rightFixed && colgroup.rightFixed.length) {\r\n            colgroup.rightFixedWidth = getColsWidth(colgroup.rightFixed, 0, restitute);\r\n        }\r\n\r\n        colgroup.normalWidth = 0;\r\n        if (this._state.columns && this._state.columns.length) {\r\n            colgroup.normalWidth = getColsWidth(colgroup.normalColumns, 0, restitute);\r\n            colgroup.originalTotalWidth = getColsWidth(colgroup.normalColumns, 0, true);\r\n        }\r\n\r\n        colgroup.totalWidth = colgroup.leftFixedWidth + colgroup.rightFixedWidth + colgroup.normalWidth;\r\n\r\n    }\r\n\r\n    showCheckbox(isShow = true) {\r\n        const colgroup = this._state.columnsGroup;\r\n        this.updateState({showCheckbox: isShow}, false);\r\n        if (isShow) {\r\n            colgroup.leftFixedWidth = colgroup.leftFixedWidth + this._state.checkboxColumnWidth;\r\n        } else {\r\n            colgroup.leftFixedWidth = colgroup.leftFixedWidth - this._state.checkboxColumnWidth;\r\n        }\r\n\r\n        this.columnResizeSubject.next(colgroup);\r\n    }\r\n\r\n    hideCheckbox() {\r\n        this.showCheckbox(false);\r\n    }\r\n\r\n    showLineNumber(isShow = true) {\r\n        const colgroup = this._state.columnsGroup;\r\n        this.updateState({showLineNumber: isShow}, false);\r\n        if (isShow) {\r\n            colgroup.leftFixedWidth = colgroup.leftFixedWidth + this._state.lineNumberWidth;\r\n        } else {\r\n            colgroup.leftFixedWidth = colgroup.leftFixedWidth - this._state.lineNumberWidth;\r\n        }\r\n\r\n        this.columnResizeSubject.next(colgroup);\r\n    }\r\n\r\n    hideLineNumber() {\r\n        this.showLineNumber(false);\r\n    }\r\n\r\n    setSortInfo(sortName, sortOrder) {\r\n        sortName = sortName || '';\r\n        sortOrder = sortOrder || '';\r\n        const fields = sortName.split(',');\r\n        const orders = sortOrder.split(',');\r\n        // if (!this._state.multiSort) {\r\n        const colgroup = this._state.columnsGroup;\r\n\r\n        const updateFieldOrder = (cols: DataColumn[]) => {\r\n            if (!cols || !cols.length) {\r\n                return;\r\n            }\r\n            cols.forEach( col => {\r\n                col.order = undefined;\r\n                const i = fields.findIndex(f => f === col.field);\r\n                if (i > -1) {\r\n                    col.order = orders[i];\r\n                }\r\n            });\r\n        };\r\n\r\n        updateFieldOrder(colgroup.normalColumns);\r\n        updateFieldOrder(colgroup.leftFixed);\r\n        updateFieldOrder(colgroup.rightFixed);\r\n        // }\r\n\r\n        this.updateState({sortName, sortOrder}, false);\r\n    }\r\n\r\n    orderBy(arr, props: any[], orders: any[]) {\r\n        const colObj = props.reduce((c, n) => {\r\n            c[n] = this.getColumn(n);\r\n            return c;\r\n        }, {});\r\n\r\n        return [...arr].sort((a, b) =>\r\n            props.reduce((acc, prop, i) => {\r\n                if (acc === 0) {\r\n                    let valA = Utils.getValue(prop, a);\r\n                    let valB = Utils.getValue(prop, b);\r\n\r\n                    if (colObj[prop] && colObj[prop]['isMultilingualField']) {\r\n                        valA = Utils.getMultilingualValue(valA, this.localId);\r\n                        valB = Utils.getMultilingualValue(valB, this.localId);\r\n                    }\r\n\r\n                    if (valA === undefined || valA === null) {\r\n                        valA = '';\r\n                    }\r\n                    if (valB === undefined || valB === null) {\r\n                        valB = '';\r\n                    }\r\n\r\n                    const [p1, p2] = orders && orders[i] === 'desc' ? [valB, valA] : [valA, valB];\r\n                    if (typeof p1 === 'string') {\r\n                        acc = p1.localeCompare(p2);\r\n                    } else {\r\n                        acc = p1 > p2 ? 1 : p1 < p2 ? -1 : 0;\r\n                    }\r\n                }\r\n                return acc;\r\n            }, 0)\r\n        );\r\n    }\r\n\r\n    sort(data: any) {\r\n        const orders = this._state.sortOrder.split(',');\r\n        const fields = this._state.sortName.split(',');\r\n\r\n        if (this._state.mergeCell && this._state.mergeFields && this._state.mergeFields.length) {\r\n            const newOrders = [];\r\n            const newFields = [...this._state.mergeFields];\r\n            fields.forEach((f, i) => {\r\n                let k = newFields.indexOf(f);\r\n                if (k == -1) {\r\n                    newFields.push(f);\r\n                    k = newFields.length - 1;\r\n                }\r\n                newOrders[k] = orders[i];\r\n            });\r\n\r\n            return this.orderBy(data, newFields, newOrders);\r\n        }\r\n\r\n        return this.orderBy(data, fields, orders);\r\n    }\r\n\r\n\r\n    clientSort(data?: any) {\r\n        if (this._state.sortName) {\r\n            if (data) {\r\n                this.updateState({ data }, false);\r\n            }\r\n            const sortedData = this.sort(this._state.data);\r\n            this.loadData(sortedData, false);\r\n        } else {\r\n            this.clearSort();\r\n        }\r\n\r\n        this.clientSort$.emit({sortName: this._state.sortName, sortOrder: this._state.sortOrder});\r\n    }\r\n\r\n    clearSort() {\r\n        this.loadData(this._state.originalData, false);\r\n    }\r\n\r\n    loadFilterData(filterData: any[]) {\r\n        this.loadData(filterData, false);\r\n    }\r\n\r\n\r\n    //#region åæ´é\r\n\r\n    private hasRowChanges(rowid: any) {\r\n        const _changes = this._state.changes;\r\n        if (!_changes) {\r\n            return false;\r\n        }\r\n        return _changes[rowid];\r\n    }\r\n\r\n    appendChanges(changes: RowDataChanges) {\r\n        if (!changes) {\r\n            return;\r\n        }\r\n        const id = changes[this._state.idField];\r\n        if (!id) {\r\n            return;\r\n        }\r\n        const _id = '' + id;\r\n        if (!this.hasRowChanges(_id)) {\r\n            this._state.changes = this._state.changes || {};\r\n            this._state.changes[_id] = changes;\r\n        } else {\r\n            this._state.changes[_id] = Object.assign(this._state.changes[_id], changes);\r\n        }\r\n    }\r\n\r\n    acceptChanges() {\r\n        const changes = this._state.changes;\r\n        if (changes) {\r\n            const keys = Object.keys(changes);\r\n            keys.forEach(id => {\r\n                this.updateRow(id, changes[id]);\r\n            });\r\n            this._state.originalData = cloneDeep(this._state.data);\r\n        }\r\n    }\r\n    rejectChanges(rowid = null) {\r\n        const changes = this._state.changes;\r\n        if (changes) {\r\n            if (!rowid) {\r\n                this._state.data = cloneDeep(this._state.originalData);\r\n                this._state.changes = null;\r\n            } else {\r\n                const rowChanges =  this._state.changes['' + rowid];\r\n                if (rowChanges) {\r\n                    const orgiRow = this._state.originalData.find(r => this.primaryId(r) === rowid);\r\n                    this._state.data.forEach(r => {\r\n                        if (this.primaryId(r) === rowid) {\r\n                            r = cloneDeep(orgiRow);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            this.refresh();\r\n        }\r\n    }\r\n\r\n    getChanges() {\r\n        return this._state.changes;\r\n    }\r\n\r\n    refresh() {\r\n        const data = cloneDeep(this._state.data);\r\n        this.loadData(data);\r\n    }\r\n\r\n    //#endregion\r\n\r\n    /**\r\n     * æé åè®¡è¡\r\n     * @param data æ°æ®éå\r\n     */\r\n    getFooterData(data) {\r\n        if (!data || !data.length) {\r\n            return [];\r\n        }\r\n\r\n        // const columns = this._state.flatColumns;\r\n        const columns = flatten<DataColumn>(this._state.columns).filter((col: DataColumn) => !col.colspan);\r\n        const footerRow = {};\r\n\r\n        columns.forEach(col => {\r\n            if (col.footer && col.footer.options) {\r\n                const options = col.footer.options;\r\n                const text = options.text;\r\n                const typ = options.calculationType as CalculationType;\r\n\r\n                if (typ !== undefined && typ != -1) {\r\n                    const val = this.calculation(data, typ, col);\r\n                    footerRow[col.field] = val;\r\n                } else {\r\n                    footerRow[col.field] = text || '';\r\n                }\r\n            } else {\r\n                footerRow[col.field] = '';\r\n            }\r\n        });\r\n\r\n        return [footerRow];\r\n    }\r\n\r\n    private arrToGroup(items, fields: string[]) {\r\n        if (fields.length) {\r\n            const first = fields.shift();\r\n            const g1 = groupBy(items, (n) => Utils.getValue(first, n));\r\n            this.toGroup(g1, fields);\r\n            return g1;\r\n        }\r\n    }\r\n\r\n    private toGroup(g1, fieldArr) {\r\n        if (fieldArr.length) {\r\n            Object.keys(g1).forEach((k) => {\r\n                const items = g1[k];\r\n                const _nextFields = fieldArr.map((n) => n);\r\n                const _f = _nextFields.shift();\r\n                g1[k] = groupBy(items, (n) => Utils.getValue(_f, n));\r\n                if (_nextFields.length) {\r\n                    this.toGroup(g1[k], _nextFields);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private groupRows2Flat(groupRows, initLevel, parent) {\r\n        let results = [];\r\n        if (initLevel === undefined) {\r\n            initLevel = 0;\r\n        }\r\n        const idfield = this._state.idField;\r\n        const columns = this._state.flatColumns;\r\n        const data = this._state.data;\r\n        const groupFieldArr = this._state.groupField.split(',');\r\n        const pid = parent ? parent[idfield] : null;\r\n        const colspan = this._state.columnsGroup.normalColumns.length;\r\n\r\n        const expandGroupRows = this._state.expandGroupRows;\r\n\r\n        Object.keys(groupRows).forEach((k, m) => {\r\n\r\n            const groupItem = { [idfield]: Utils.uuid(),\r\n                                [IS_GROUP_ROW_FIELD]: true, [GROUP_LEVEL_FIELD]: initLevel, data: { }, value: k,\r\n                                [GROUP_VISIBLE_FIELD]: true, expanded: expandGroupRows, field: groupFieldArr[initLevel],\r\n                                colspan, total: 0, rows: [], [GROUP_ROW_FIELD]: pid};\r\n\r\n            // TFS: 356955\r\n            if (parent) {\r\n                groupItem.rows = parent.rows.filter(n => !n[IS_GROUP_ROW_FIELD] &&\r\n                    !n[IS_GROUP_FOOTER_ROW_FIELD] &&  Utils.getValue(groupFieldArr[initLevel], n) === k);\r\n            } else {\r\n                groupItem.rows = data.filter(n => '' + Utils.getValue(groupFieldArr[initLevel], n) === k);\r\n            }\r\n\r\n            if (parent) {\r\n                parent.rows.push(groupItem);\r\n            }\r\n\r\n            groupItem.total = groupItem.rows.filter(n => !n[IS_GROUP_ROW_FIELD] && !n[IS_GROUP_FOOTER_ROW_FIELD]).length;\r\n\r\n            results.push(groupItem);\r\n            const items = groupRows[k];\r\n            if (isPlainObject(items)) {\r\n                const level = initLevel + 1;\r\n                results = results.concat(this.groupRows2Flat(items, level, groupItem));\r\n            } else {\r\n                groupItem.total = items.length;\r\n                items.map(n => {\r\n                    n[GROUP_ROW_FIELD] = groupItem[idfield];\r\n                    n[GROUP_VISIBLE_FIELD] = expandGroupRows;\r\n                    n[GROUP_LEVEL_FIELD] = groupItem[GROUP_LEVEL_FIELD] + 1;\r\n                    return n;\r\n                });\r\n                groupItem.rows = items;\r\n                results = results.concat(items);\r\n            }\r\n\r\n            if (this._state.groupFooter) {\r\n                const footerItem = {\r\n                    [IS_GROUP_FOOTER_ROW_FIELD]: true,\r\n                    [GROUP_ROW_FIELD]: groupItem[idfield],\r\n                    [GROUP_VISIBLE_FIELD]: expandGroupRows,\r\n                    [GROUP_LEVEL_FIELD]: initLevel,\r\n                    data: {}\r\n                };\r\n                groupItem.rows.push(footerItem);\r\n                results.push(footerItem);\r\n            }\r\n        });\r\n        return results;\r\n    }\r\n\r\n    /** æ´æ°åç»åè®¡è¡æ°æ® */\r\n    private updateGroupFooterData(groupFooterRow: any, columns: any, groupRows: any) {\r\n        columns.forEach(col => {\r\n            if (col.groupFooter && col.groupFooter.options) {\r\n                const options = col.groupFooter.options;\r\n                const text = options.text;\r\n                const typ = options.calculationType as CalculationType;\r\n\r\n                if (typ !== undefined && typ != -1) {\r\n                    const val = this.calculation(groupRows, typ, col);\r\n                    groupFooterRow.data[col.field] = val;\r\n                } else {\r\n                    groupFooterRow.data[col.field] = text || '';\r\n                }\r\n            } else {\r\n                groupFooterRow.data[col.field] = '';\r\n            }\r\n        });\r\n    }\r\n\r\n    /** å¤å­æ®µåç»\r\n     * groupField ä»¥éå·åéï¼ä»å·¦å°å³ä¾æ¬¡è¿è¡åç»\r\n     */\r\n    private groupRows2(data: any[]) {\r\n        if (data && data.length) {\r\n            const columns = this._state.flatColumns;\r\n            const groupField = this._state.groupField || '';\r\n\r\n            if (!groupField) {\r\n                return data;\r\n            }\r\n\r\n            const groupData = this.arrToGroup(data, groupField.split(','));\r\n            const result = this.groupRows2Flat(groupData, 0, null);\r\n\r\n            let k = 0;\r\n\r\n            const prow = (pid) => result.find(n => n[this._state.idField] === pid);\r\n\r\n            result.map((n, i) => {\r\n                if (!n[IS_GROUP_ROW_FIELD] && !n[IS_GROUP_FOOTER_ROW_FIELD]) {\r\n                    n[ROW_INDEX_FIELD] = k;\r\n                    k++;\r\n                }\r\n\r\n                // æ´æ°åè®¡è¡æ°æ®\r\n                if (n[IS_GROUP_FOOTER_ROW_FIELD]) {\r\n                    const rows = prow(n[GROUP_ROW_FIELD]).rows.filter((r: any) => !r[IS_GROUP_ROW_FIELD] && !r[IS_GROUP_FOOTER_ROW_FIELD]);\r\n                    this.updateGroupFooterData(n, columns, rows);\r\n                }\r\n\r\n                return n;\r\n            });\r\n            return result;\r\n        }\r\n\r\n        return [];\r\n    }\r\n\r\n    showGroupFooter(groupFooter) {\r\n        this.updateState({groupFooter}, false);\r\n        this.updateVirthualRows(0);\r\n    }\r\n\r\n    updateGroupFooter(groupRowId: string) {\r\n        const groupRow = this._state.virtual.virtualRows.find((n: any) => {\r\n            return n['id'] === groupRowId;\r\n        });\r\n\r\n        if (groupRow) {\r\n            const groupRows = groupRow.rows;\r\n            const groupFooterRows = groupRows.filter((n: any) => n['__group_footer__']);\r\n            const columns = this._state.flatColumns;\r\n\r\n            const rows = groupRows.filter((n: any) => !n['__group_footer__']);\r\n\r\n            groupFooterRows.forEach((n: any) => {\r\n                this.updateGroupFooterData(n, columns, rows);\r\n            });\r\n        }\r\n    }\r\n\r\n    private calculation(data: any, typ: CalculationType, col: any) {\r\n        let val: any = '';\r\n        // TFS: 357000\r\n        // http://10.24.1.11:8080/tfs/GSP/GSPCloud/web/_queries?id=357000&triage=true&fullScreen=false&_a=edit\r\n        if (!data || !data.length) {\r\n            return '';\r\n        }\r\n        const field = col.field;\r\n        const arr = data.map((o) => Utils.getValue(field, o) || 0);\r\n        switch (typ) {\r\n            case CalculationType.sum:\r\n                // val = sumBy(data, (o) => Utils.getValue(field, o));\r\n                val = BigNumber.sum.apply(null, arr).toFixed();\r\n                break;\r\n            case CalculationType.max:\r\n                // const maxObj = maxBy(data, (o) => Utils.getValue(field, o));\r\n                // val = Utils.getValue(field, maxObj);\r\n                val = BigNumber.max.apply(null, arr).toFixed();\r\n                break;\r\n            case CalculationType.min:\r\n                // const minObj = minBy(data, (o) => Utils.getValue(field, o));\r\n                // val = Utils.getValue(field, minObj);\r\n                val = BigNumber.min.apply(null, arr).toFixed();\r\n                break;\r\n            case CalculationType.average:\r\n                // val = meanBy(data, (o) => Utils.getValue(field, o));\r\n                val = BigNumber.sum.apply(null, arr).div(arr.length).toFixed();\r\n                break;\r\n            case CalculationType.count:\r\n                val = data.length;\r\n                break;\r\n        }\r\n        return val;\r\n    }\r\n\r\n    //#region ç»ä»¶åå§å±æ§\r\n\r\n    setinitialOptions(opts: {[key: string]: any}) {\r\n        this._state.initialOptions = {};\r\n        // åç»\r\n        this._state.initialOptions['groupField'] = opts.groupField;\r\n\r\n        // æåº\r\n        this._state.initialOptions['sort'] = {\r\n            sortName: opts.sortName,\r\n            sortOrder: opts.sortOrder\r\n        };\r\n        // åæ¾ç¤ºéèãå¯¹é½æ¹å¼\r\n        if (opts.columns && opts.columns[0]) {\r\n            this._state.initialOptions['columnFields'] = (opts.columns[0] as any).map(n => {\r\n                return {\r\n                    width: n.width || 100,\r\n                    field: n.field,\r\n                    halign: n.halign,\r\n                    align: n.align,\r\n                    visible: n.visible,\r\n                    footer: cloneDeep(n.footer || {}),\r\n                    groupFooter: cloneDeep(n.groupFooter || {})\r\n                };\r\n            });\r\n        }\r\n    }\r\n\r\n    //#endregion\r\n}\r\n","import { Utils } from './../utils/utils';\r\nimport { EventEmitter } from '@angular/core';\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-06 07:43:53\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-11-09 20:44:54\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { CellInfo } from './state';\r\nimport { Injectable } from '@angular/core';\r\nimport { Subject, BehaviorSubject } from 'rxjs';\r\nimport { RowEventParam, RowHoverEventParam } from '../types/event-params';\r\nimport { filter, map, debounceTime } from 'rxjs/operators';\r\nimport { CommonUtils, IdService } from '@farris/ui-common';\r\n\r\nexport type ScrollAction =\r\n    | 'psScrollY'\r\n    | 'psScrollX'\r\n    | 'psScrollUp'\r\n    | 'psScrollDown'\r\n    | 'psScrollLeft'\r\n    | 'psScrollRight'\r\n    | 'psYReachEnd'\r\n    | 'psYReachStart'\r\n    | 'psXReachEnd'\r\n    | 'psXReachStart';\r\n\r\nexport class DatagridService {\r\n    private scorllSubject = new Subject();\r\n    private scrollX = new BehaviorSubject(0);\r\n\r\n    private rowHoverSubject = new Subject<RowHoverEventParam>();\r\n    private rowSelectSubject = new Subject<Partial<RowHoverEventParam>>();\r\n\r\n    private dataSourceChangedSubject = new Subject();\r\n    /** ç¼è¾ååæ ¼ */\r\n    private editCellSubject = new Subject();\r\n    /** éä¸­ååæ ¼ */\r\n    private selectCellSubject = new Subject();\r\n    /** ç»æååç¼è¾ */\r\n    private endCellEdit = new Subject();\r\n    private changeCheckedRows = new Subject();\r\n    /** ç»æè¡ç¼è¾ */\r\n    // private endRowEdit = new BehaviorSubject(true);\r\n\r\n    public scorll$ = this.scorllSubject.asObservable();\r\n    public scrollX$ = this.scorll$.pipe(\r\n        filter((p: any) => p.type === 'psScrollX'),\r\n        map(t => t.x),\r\n        debounceTime(50)\r\n    );\r\n    public scrollY$ = this.scorll$.pipe(\r\n        filter((p: any) => p.type === 'psScrollY'),\r\n        map(t => t.x),\r\n        debounceTime(50)\r\n    );\r\n    public rowHover$ = this.rowHoverSubject.asObservable();\r\n    public rowClick$ = this.rowSelectSubject.asObservable();\r\n    public onDataSourceChange = this.dataSourceChangedSubject.asObservable();\r\n    public cellEdit$ = this.editCellSubject.asObservable();\r\n    public endCellEdit$ = this.endCellEdit.asObservable();\r\n    public checkedRowsTotalChanged$ = this.changeCheckedRows.asObservable();\r\n    public updateEmptyStyle$ = new EventEmitter();\r\n\r\n    public showGridHeader = new EventEmitter();\r\n    // åæ¶å¨é\r\n    public uncheckAll = new EventEmitter();\r\n    // å¨é¨éä¸­\r\n    public checkAll = new EventEmitter();\r\n\r\n    public columnResized = new EventEmitter();\r\n\r\n    public rowHeightChanged = new EventEmitter();\r\n\r\n    public loadVirtualData = new EventEmitter();\r\n    /** æ¾ç¤ºåºå®åéå½± */\r\n    public showFixedShadow = new EventEmitter();\r\n    // public endRowEdit$ = this.endRowEdit.asObservable();\r\n\r\n    public setSelecedRow = new EventEmitter();\r\n    public setCheckedRows = new EventEmitter();\r\n\r\n    public scrollToCurrentRow = new EventEmitter();\r\n\r\n    public columnsChanged = new EventEmitter();\r\n\r\n    public cellContentWrapChanged = new EventEmitter();\r\n\r\n    public onFilterChanged = new EventEmitter();\r\n    public clearFilter = new EventEmitter();\r\n    public filterTextChange = new EventEmitter();\r\n    public toggleFilterRow = new EventEmitter();\r\n\r\n    public refreshFooterData = new EventEmitter();\r\n\r\n    public disableHeader = new EventEmitter();\r\n    /** æ´æ°å¨éå¤éæ¡ç¶æ */\r\n    public changeCheckAllStatus = new EventEmitter();\r\n\r\n    public setScrollbarPosition = new EventEmitter();\r\n\r\n    public smartFilterBarExpand = new EventEmitter();\r\n    public smartFilterDataChange = new EventEmitter();\r\n\r\n    public scrollbarUpdate = new EventEmitter();\r\n\r\n    footerPositionChanged = new EventEmitter();\r\n\r\n    styleElement: HTMLStyleElement = null;\r\n    commonUtils: CommonUtils = null;\r\n\r\n    idService: IdService = null;\r\n\r\n    // ååæ ¼ç¼è¾å¨åå»ºå®æ\r\n    cellEditorCreated = new EventEmitter();\r\n    // ååæ ¼ç¼è¾å¨éæ¯\r\n    cellEditorDestory = new EventEmitter();\r\n    // ç¦ç¹è¡åæ¢\r\n    focusRowChanged = new EventEmitter();\r\n\r\n    constructor() { }\r\n\r\n    onScrollMove(x: number, action: ScrollAction) {\r\n        this.scorllSubject.next({ x, type: action });\r\n    }\r\n\r\n    dataSourceChanged() {\r\n        this.dataSourceChangedSubject.next();\r\n    }\r\n\r\n    onRowHover(rowIndex: number, rowData: any, mouseEnter: boolean) {\r\n        this.rowHoverSubject.next({ index: rowIndex, data: rowData, mouseenter: mouseEnter });\r\n    }\r\n\r\n    onRowClick(rowIndex: number, rowData: any) {\r\n        this.rowSelectSubject.next({ index: rowIndex, data: rowData });\r\n    }\r\n\r\n    onCellEdit(tdElement: any) {\r\n        this.editCellSubject.next(tdElement);\r\n    }\r\n\r\n    onEndCellEdit(cell: CellInfo) {\r\n        this.endCellEdit.next(cell);\r\n    }\r\n\r\n    onSelectCell(cell: CellInfo) {\r\n        this.selectCellSubject.next(cell);\r\n    }\r\n\r\n    onCheckedRowsCountChange() {\r\n        this.changeCheckedRows.next();\r\n    }\r\n\r\n    onRowHeightChange(rowHeight: number) {\r\n        this.rowHeightChanged.emit(rowHeight);\r\n    }\r\n\r\n    onLoadVirtualData(data: any) {\r\n        this.loadVirtualData.emit({ data });\r\n    }\r\n\r\n    onClearFilter() {\r\n        this.clearFilter.emit();\r\n        this.filterTextChange.emit('');\r\n    }\r\n\r\n    onFilterTextChange(txt: string) {\r\n        this.filterTextChange.emit(txt);\r\n    }\r\n\r\n    restoreScrollbarPosition() {\r\n        this.setScrollbarPosition.emit();\r\n    }\r\n\r\n    updateEmptyStyle() {\r\n        this.updateEmptyStyle$.emit();\r\n    }\r\n\r\n    groupBy = (arr, fn) => arr.map(typeof fn === 'function' ? fn : val => Utils.getValue(fn, val)).reduce((acc, val, i) => {\r\n        acc[val] = (acc[val] || []).concat(arr[i]);\r\n        return acc;\r\n    }, {})\r\n\r\n    getMergeCellInfo(data, mergeFields) {\r\n        const result = {};\r\n        let firstVal = null;\r\n        let currVal;\r\n\r\n        mergeFields.forEach((f, i) => {\r\n            if (i === 0) {\r\n                data.forEach((d, j) => {\r\n                    const item = { [f]: { show: true, rowspan: 1 } };\r\n                    if (!result[j]) {\r\n                        result[j] = item;\r\n                    } else {\r\n                        if (!result[j][f]) {\r\n                            result[j] = Object.assign(result[j], item);\r\n                        }\r\n                    }\r\n\r\n                    const _item = result[j];\r\n\r\n                    currVal = d[f];\r\n                    if (firstVal === null || firstVal !== currVal) {\r\n                        firstVal = currVal;\r\n                        _item[f].show = true;\r\n                        _item[f].startIndex = j;\r\n                    } else {\r\n                        const strIndex = result[j - 1][f].startIndex;\r\n                        _item[f].startIndex = strIndex;\r\n                        _item[f].show = false;\r\n                        result[strIndex][f].rowspan++;\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    getMergeCellInfo0(data, field) {\r\n        const result = {};\r\n        let firstVal;\r\n        let currVal;\r\n        data.forEach((d, j) => {\r\n            const item = { [field]: { show: true, rowspan: 1, value: '' } };\r\n            if (!result[j]) {\r\n                result[j] = item;\r\n            }\r\n\r\n            const _item = result[j];\r\n            currVal = Utils.getValue(field, d);\r\n            _item[field].value = currVal;\r\n            if (firstVal === undefined || firstVal !== currVal) {\r\n                firstVal = currVal;\r\n                _item[field].show = true;\r\n                _item[field].startIndex = j;\r\n            } else {\r\n                const strIndex = result[j - 1][field].startIndex;\r\n                _item[field].startIndex = strIndex;\r\n                _item[field].show = false;\r\n                result[strIndex][field].rowspan++;\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    getMergeCellInfo2(data, mergeFields) {\r\n        let result = {};\r\n        let firstVal = null;\r\n        result = this.getMergeCellInfo0(data, mergeFields.splice(0, 1)[0]);\r\n\r\n        const groupData = this.groupBy(data, mergeFields[0]);\r\n        const groupKeys = Object.keys(groupData);\r\n        let startRowIndex = 0;\r\n        mergeFields.forEach((f, i) => {\r\n            groupKeys.forEach((k, j) => {\r\n                let currVal;\r\n                groupData[k].forEach((d, n) => {\r\n                    if (result[startRowIndex] && !result[startRowIndex][f]) {\r\n                        result[startRowIndex] = Object.assign(result[startRowIndex], { [f]: { show: true, rowspan: 1, value: '' } });\r\n                    }\r\n\r\n                    const _item = result[startRowIndex];\r\n                    currVal = Utils.getValue(f, d);\r\n                    _item[f].value = currVal;\r\n                    if (firstVal === null || firstVal !== currVal) {\r\n                        firstVal = currVal;\r\n                        _item[f].show = true;\r\n                        _item[f].startIndex = startRowIndex;\r\n                    } else {\r\n                        const strIndex = result[startRowIndex - 1][f].startIndex;\r\n                        _item[f].startIndex = strIndex;\r\n                        _item[f].show = false;\r\n                        result[strIndex][f].rowspan++;\r\n                    }\r\n\r\n                    startRowIndex++;\r\n                });\r\n            });\r\n        });\r\n        return result;\r\n    }\r\n\r\n\r\n    getMergeCellInfo3(data, mergeFields) {\r\n        let result = {};\r\n        const firstField = mergeFields.splice(0, 1)[0];\r\n        result = this.getMergeCellInfo0(data, firstField);\r\n        let prevGroupField = firstField;\r\n        // const groupData = this.groupBy(data, firstField);\r\n        // const groupKeys = Object.keys(groupData);\r\n        mergeFields.forEach((f, i) => {\r\n            let startRowIndex = 0;\r\n\r\n            let firstVal;\r\n            let currVal;\r\n\r\n            if (i > 0) {\r\n                prevGroupField = mergeFields[i - 1];\r\n            }\r\n\r\n            data.forEach((d, n) => {\r\n                if (result[startRowIndex] && !result[startRowIndex][f]) {\r\n                    result[startRowIndex] = Object.assign(result[startRowIndex], { [f]: { show: true, rowspan: 1, value: '' } });\r\n                }\r\n\r\n                const _item = result[startRowIndex];\r\n                currVal = Utils.getValue(f, d);\r\n                _item[f].value = currVal;\r\n\r\n                if (startRowIndex > 0) {\r\n                    const prevItem = result[startRowIndex - 1];\r\n                    const _c = Object.keys(_item).map(c => '' + _item[c].value).join(',');\r\n                    const _p = Object.keys(prevItem).map(p => '' + prevItem[p].value).join(',');\r\n\r\n                    if (_c !== _p) {\r\n                        firstVal = undefined;\r\n                    }\r\n                }\r\n\r\n                if ((firstVal === undefined || firstVal !== currVal)) {\r\n                    firstVal = currVal;\r\n                    _item[f].show = true;\r\n                    _item[f].startIndex = startRowIndex;\r\n                } else {\r\n                    const startIndex = result[startRowIndex - 1][f].startIndex;\r\n                    _item[f].startIndex = startIndex;\r\n                    _item[f].show = false;\r\n                    result[startIndex][f].rowspan++;\r\n                }\r\n\r\n                if (data.length - 1 > startRowIndex) {\r\n                    startRowIndex++;\r\n                }\r\n            });\r\n        });\r\n        return result;\r\n    }\r\n\r\n\r\n    getMergeInfo(rowIndex: number, field: string, mergeCellInfo: any) {\r\n        if (field && mergeCellInfo && mergeCellInfo[rowIndex] && mergeCellInfo[rowIndex][field]) {\r\n            return mergeCellInfo[rowIndex][field];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    removeStyleSheet() {\r\n        if (this.styleElement) {\r\n            this.styleElement.remove();\r\n            this.styleElement = null;\r\n        }\r\n    }\r\n\r\n    createStyleElement(styleSheetId: string) {\r\n        this.styleElement = this._createStyleSheet(styleSheetId);\r\n    }\r\n\r\n    appendCssRules(rules: string[]) {\r\n        if (this.styleElement) {\r\n            this._appendCssRules(rules, this.styleElement.sheet);\r\n        }\r\n    }\r\n\r\n    removeCssRule(ruleName: string | Array<string>) {\r\n        if (this.styleElement) {\r\n            if (typeof ruleName === 'string') {\r\n                this._removeCssRule(ruleName, this.styleElement.sheet);\r\n            } else {\r\n                if (Array.isArray(ruleName)) {\r\n                    ruleName.forEach(n => {\r\n                        this._removeCssRule(n, this.styleElement.sheet);\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private _createStyleSheet(styleSheetId: string): HTMLStyleElement {\r\n        const htmlHead = document.querySelector('head');\r\n\r\n        const styleEleId = styleSheetId;\r\n        let styleElement = null;\r\n        if (document.querySelector('#' + styleEleId)) {\r\n            styleElement = document.querySelector('#' + styleEleId);\r\n            styleElement.innerText = '';\r\n        } else {\r\n            styleElement = document.createElement('style');\r\n            styleElement.id = styleEleId;\r\n            styleElement.type = 'text/css';\r\n            // styleElement.sheet = new CSSStyleSheet();\r\n            htmlHead.appendChild(styleElement);\r\n        }\r\n\r\n        return styleElement;\r\n    }\r\n\r\n    private _appendCssRules(rules: string[], styleSheet) {\r\n        for (const rule of rules) {\r\n            const ruleName = rule.slice(0, rule.indexOf('{')).trim();\r\n            const removedCssRule = this._removeCssRule(ruleName, styleSheet);\r\n            if (styleSheet.addRule) {\r\n                let cssText = '';\r\n                if (removedCssRule) {\r\n                    cssText += removedCssRule.cssText.slice(removedCssRule.cssText.indexOf('{') + 1, removedCssRule.cssText.indexOf('}'));\r\n                }\r\n                cssText += rule.slice(rule.indexOf('{') + 1, rule.indexOf('}')).replace(/\"/g, '').replace(/,/g, ';') + ';';\r\n                styleSheet.addRule(ruleName, cssText, 0);\r\n            } else {\r\n                styleSheet.insertRule(rule, 0);\r\n            }\r\n        }\r\n    }\r\n\r\n    private _removeCssRule(ruleName: string, styleSheet) {\r\n\r\n        if (!styleSheet) {\r\n            return;\r\n        }\r\n\r\n        const cssRules = (styleSheet.cssRules || styleSheet.rules) as any;\r\n        let ii = 0;\r\n        let cssRule: any = false;\r\n\r\n        do {\r\n            cssRule = cssRules[ii];\r\n            if (cssRule) {\r\n                if (cssRule.selectorText.toLowerCase() == ruleName.toLowerCase()) {\r\n                    if (styleSheet.cssRules) {\r\n                        styleSheet.deleteRule(ii);\r\n                    } else {\r\n                        styleSheet.removeRule(ii);\r\n                    }\r\n\r\n                    return cssRule;\r\n                }\r\n            }\r\n            ii++;\r\n        } while (cssRule);\r\n    }\r\n\r\n    createConfigKey(gridID: string) {\r\n        const { host, hash, href, pathname } = location;\r\n        let formCode = '';\r\n        let menuId = '';\r\n        if (hash) {\r\n            const _searchArr = hash.split('?');\r\n            formCode = _searchArr[0];\r\n\r\n            const searchObj: any = {};\r\n            if (_searchArr[1]) {\r\n                _searchArr[1].split('&').map(n => {\r\n                    searchObj[n.split('=')[0]] = n.split('=')[1];\r\n                });\r\n            }\r\n\r\n            const catchFuncIdKEY = `${pathname}`;\r\n            if (searchObj && Object.keys(searchObj).length) {\r\n                menuId = searchObj.funcId || '';\r\n                if (menuId) {\r\n                    localStorage.setItem(catchFuncIdKEY, menuId);\r\n                }\r\n            }\r\n\r\n            if (!menuId) {\r\n                menuId = localStorage.getItem(catchFuncIdKEY);\r\n            }\r\n        }\r\n        const key = formCode + '_' + menuId + '_' + gridID;\r\n\r\n        if (!this.idService) {\r\n            this.idService = new IdService();\r\n        }\r\n\r\n        return this.idService.encrypt(key);\r\n    }\r\n\r\n\r\n    getCustomStyle(styler: any, args: any): { cls?: any, style?: any } {\r\n        if (typeof styler === 'object') {\r\n            return styler;\r\n        } else {\r\n            if (typeof styler === 'function') {\r\n                const p = args || [];\r\n                return styler(...p);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    findNextTr(nextTr, dir) {\r\n        const getNextElement = (target) => {\r\n            if (target && target.className.indexOf('f-datagrid-disable-row') == -1) {\r\n                return target;\r\n            }\r\n            return false;\r\n        };\r\n\r\n        const m = dir === 'down' ? 'nextElementSibling' : 'previousElementSibling';\r\n\r\n        const getEle = (t) => {\r\n            let n = null;\r\n            let next = true;\r\n            while (next) {\r\n                n = getNextElement(t);\r\n                if (n) {\r\n                    next = false;\r\n                } else {\r\n                    if (t && t[m]) {\r\n                        n = getNextElement(t[m]);\r\n                        if (n) {\r\n                            break;\r\n                        }\r\n                    } else {\r\n                        next = false;\r\n                    }\r\n                }\r\n            }\r\n            return n;\r\n        };\r\n\r\n        return getEle(nextTr);\r\n    }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { DataResult } from './state';\r\nimport { Observable } from 'rxjs';\r\nimport { InjectionToken } from '@angular/core';\r\n\r\nexport const DATAGRID_REST_SERVICEE = new InjectionToken<RestService>('DataGrid Request Data Service.');\r\n\r\nexport abstract class RestService {\r\n    abstract getData(url: string, param?: any): Observable<DataResult>;\r\n}\r\n\r\nexport class DefaultRestService implements RestService {\r\n    constructor(private http: HttpClient) {}\r\n    getData(url: string, param?: any): Observable<DataResult> {\r\n        return this.http.get<DataResult>(url, { params: param });\r\n    }\r\n}\r\n","/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-21 10:37:53\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-08-22 19:15:49\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\n\r\nexport type DatagridValidatorType = 'required' | 'min' | 'max' |'minLength' |'maxLength' | 'email' | 'requriedTrue' | 'pattern' | string;\r\n\r\nexport interface DatagridValidator {\r\n    type: DatagridValidatorType;\r\n    value?: any;\r\n    messager?: string;\r\n}\r\n\r\nexport const DefaultDatagridValidatorMessager = {\r\n    required: 'æ­¤å­æ®µä¸è½ä¸ºç©ºã',\r\n    min: 'æå°å¼ä¸è½å°äº${0}',\r\n    max: 'æå¤§å¼ä¸è½å¤§äº${0}',\r\n    minlength: 'è³å°è¾å¥${0}ä¸ªå­ç¬¦',\r\n    maxlength: 'å­ç¬¦é¿åº¦ä¸è½å¤§äº${0}',\r\n    email: 'Email æ ¼å¼ä¸æ­£ç¡®',\r\n    requriedtrue: 'å¡å¿éä¸­',\r\n    pattern: 'è¾å¥çæ ¼å¼ä¸æ­£ç¡®ã'\r\n};\r\n\r\n\r\n","/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-21 15:44:21\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-08-22 19:19:49\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { Injectable } from '@angular/core';\r\nimport { DatagridValidator } from '../types/datagrid-validator';\r\nimport { DefaultDatagridValidatorMessager as ddvm } from '../types/datagrid-validator';\r\n@Injectable()\r\nexport class ValidatorMessagerService {\r\n\r\n    getValidatorErrorMessage(validatorName: string, validators: DatagridValidator[]) {\r\n        validatorName = validatorName.toLowerCase();\r\n        const validator = validators.find(v => v.type.toLowerCase() === validatorName);\r\n        if (validator && validator.messager) {\r\n            return validator.messager;\r\n        } else {\r\n            return ddvm[validatorName] ? ddvm[validatorName] : 'éªè¯ä¸éè¿ï¼';\r\n        }\r\n    }\r\n\r\n}\r\n","/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-06 07:43:07\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-08-21 15:13:50\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nexport class DomHandler {\r\n    public static hasClass(element: any, className: string): boolean {\r\n        if (element.classList) {\r\n            return Array.from(element.classList).filter(n => n === className).length > 0;\r\n        } else {\r\n            return element.className.indexOf(className) > -1;\r\n        }\r\n    }\r\n\r\n    public static removeClass(element: any, className: string): void {\r\n        if (element.classList) {\r\n            element.classList.remove(className);\r\n        } else {\r\n            element.className = element.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\r\n        }\r\n    }\r\n\r\n    public static findSingle(element: any, selector: string): any {\r\n        if (element) {\r\n            return element.querySelector(selector);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public static getOffset(el) {\r\n        const rect = el.getBoundingClientRect();\r\n\r\n        return {\r\n            top: rect.top + document.body.scrollTop,\r\n            left: rect.left + document.body.scrollLeft\r\n        };\r\n    }\r\n\r\n    public static getOuterHeight(el, margin?) {\r\n        let height = el.offsetHeight;\r\n\r\n        if (margin) {\r\n            const style = getComputedStyle(el);\r\n            height += parseFloat(style.marginTop) + parseFloat(style.marginBottom);\r\n        }\r\n\r\n        return height;\r\n    }\r\n\r\n    public static getOuterWidth(el, margin?) {\r\n        let width = el.offsetWidth;\r\n\r\n        if (margin) {\r\n            const style = getComputedStyle(el);\r\n            width += parseFloat(style.marginLeft) + parseFloat(style.marginRight);\r\n        }\r\n\r\n        return width;\r\n    }\r\n}\r\n","import { LocaleService } from '@farris/ui-locale';\r\nimport { Injectable, Injector, EventEmitter, Optional } from '@angular/core';\r\nimport { Compare, FilterCondition } from '@farris/ui-common/types';\r\nimport { DatagridFacadeService } from './datagrid-facade.service';\r\nimport { Utils } from './../utils/utils';\r\nimport { DataColumn, ColumnFilterType, ColumnFilter, FilterCondition as ClientFilterCondition } from '../types/data-column';\r\nimport { DatagridColumnsHelper } from './datagrid-columns.helper';\r\n\r\n@Injectable()\r\nexport class DatagridFilterService {\r\n    removeField = new EventEmitter<string>();\r\n\r\n    constructor(private dfs: DatagridFacadeService, private localeSer: LocaleService, private inject: Injector) {\r\n    }\r\n\r\n    validateRowData(rowData: any, conditions: { [field: string]: ClientFilterCondition }) {\r\n        if (!conditions || Object.keys(conditions).length === 0) {\r\n            return true;\r\n        }\r\n        return this.checkAllFieldInRowData(rowData, conditions);\r\n    }\r\n\r\n    executeFilter(data: [], conditions: any): any[] {\r\n        if ( this.dfs.getState().enableSmartFilter) {\r\n            return this.executeSmartFilter(data, conditions);\r\n        }\r\n\r\n        if (data && data.length) {\r\n            return data.filter(n => this.validateRowData(n, conditions));\r\n        }\r\n        return data;\r\n    }\r\n\r\n    private getCompareResult(fieldDataValue: any, operator: Compare, targetValue: any) {\r\n        const op = parseInt('' + operator, 10);\r\n        switch (op) {\r\n            case Compare.Equal:\r\n                return fieldDataValue == targetValue;\r\n            case Compare.NotEqual:\r\n                return ('' + fieldDataValue).toLowerCase() !== ('' + targetValue).toLowerCase();\r\n            case Compare.Greater:\r\n                return fieldDataValue > targetValue;\r\n            case Compare.GreaterOrEqual:\r\n                return fieldDataValue >= targetValue;\r\n            case Compare.Less:\r\n                return fieldDataValue < targetValue;\r\n            case Compare.LessOrEqual:\r\n                return fieldDataValue <= targetValue;\r\n            case Compare.Like:\r\n                return ('' + fieldDataValue).toLowerCase().indexOf(targetValue.toLowerCase()) > -1;\r\n            case Compare.NotLike:\r\n                return ('' + fieldDataValue).toLowerCase().indexOf(targetValue.toLowerCase()) === -1;\r\n            case Compare.In:\r\n                targetValue = targetValue || [];\r\n                return targetValue.findIndex( n => n == fieldDataValue) > -1;\r\n            case 1001: // Empty\r\n                return fieldDataValue === '' || fieldDataValue === null;\r\n            case 1002:  // NotEmpty\r\n                return fieldDataValue !== '' && fieldDataValue !== null;\r\n            case 1003: // Null\r\n                return fieldDataValue === null;\r\n            case 1004: // NotNull\r\n                return fieldDataValue !== null;\r\n        }\r\n    }\r\n\r\n    private getRelationResult(result1: boolean, relation: 'and' | 'or', result2: boolean) {\r\n        const _relation = relation.toLowerCase();\r\n        if (_relation === 'and') {\r\n            return result1 && result2;\r\n        } else {\r\n            return result1 || result2;\r\n        }\r\n    }\r\n\r\n    private checkAllFieldResult(resultObj: { [key: string]: boolean }) {\r\n        if (!resultObj) {\r\n            return true;\r\n        }\r\n\r\n        return Object.values(resultObj).reduce((c, n) => {\r\n            return c && n;\r\n        }, true);\r\n    }\r\n\r\n    private checkAllFieldInRowData(rowData: any, conditions: { [field: string]: ClientFilterCondition }) {\r\n        // this.state = conditions;\r\n        let resultObj = null;\r\n        if (conditions) {\r\n            const fields = Object.keys(conditions);\r\n            resultObj = {};\r\n            fields.forEach(field => {\r\n                let fieldValue = Utils.getValue(field, rowData);\r\n                const columnObj = this.dfs.getColumn(field);\r\n                if (columnObj && columnObj.isMultilingualField) {\r\n                    fieldValue = Utils.getMultilingualValue(fieldValue, this.localeSer.localeId);\r\n                }\r\n\r\n                const where = conditions[field];\r\n                const { value1, operator1, relation, operator2, value2 } = where;\r\n                if (where) {\r\n                    const result = this.getCompareResult(fieldValue, operator1, value1);\r\n                    resultObj[field] = result;\r\n                    if (relation) {\r\n                        const result2 = this.getCompareResult(fieldValue, operator2, value2);\r\n                        resultObj[field] = this.getRelationResult(result, relation, result2);\r\n                    }\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n        return this.checkAllFieldResult(resultObj);\r\n    }\r\n\r\n    removeFilterField(field) {\r\n        this.removeField.emit(field);\r\n    }\r\n\r\n    convertFilterCondition2String(conditions: any) {\r\n        if (!conditions) {\r\n            return '';\r\n        }\r\n        let str = '';\r\n        const andText = this.localeSer.getValue('datagrid.filter.and');\r\n        const orText = this.localeSer.getValue('datagrid.filter.or');\r\n        const and = `<span class='badge badge-success'>${andText}</span>`;\r\n        const and2 = `<span class='badge badge-info'>${andText}</span>`;\r\n        const or = `<span class='badge badge-warning'>${orText}</span>`;\r\n        const lbracket = `<b>ã</b>`;\r\n        const rbracket = `<b>ã</b>`;\r\n        const ellipsis = `[ <span class=\"ellipsis\" title=\"$title$\">  $value$<i class=\"f-icon f-icon-lookup\"></i></span> ]`;\r\n\r\n        str = Object.keys(conditions).reduce((c, r) => {\r\n            const filter = conditions[r];\r\n            const col = this.dfs.getColumn(r);\r\n            const t = `<b>${col.title}</b>`;\r\n\r\n            let s = ` ${t} ${this.getCompareString(filter.operator1)} ${Utils.escapeValue(filter.value1)}  `;\r\n            if (filter.operator1 == Compare.In) {\r\n                let txt = filter.value1;\r\n                let txt2 = txt;\r\n                if (col.filter.type === ColumnFilterType.enum) {\r\n                    const enumOpts = DatagridColumnsHelper.getFilterEnumOptions(col);\r\n                    txt = DatagridColumnsHelper.getEnumText(enumOpts, filter.value1);\r\n                    txt2 = txt.split(',').slice(0, 2).join(',');\r\n                } else {\r\n                    txt2 = txt.slice(0, 2).join(',');\r\n                }\r\n\r\n                s = ` ${t} ${this.getCompareString(filter.operator1)} [ ${txt} ]  `;\r\n                if (filter.value1.length > 2) {\r\n                    s = ` ${t} ${this.getCompareString(filter.operator1)} ${ellipsis.replace('$title$', txt).replace('$value$', txt2)}  `;\r\n                }\r\n            } else {\r\n                if (filter.operator1 == Compare.Equal && Array.isArray(filter.value1)) {\r\n                    if (!filter.value1.length) {\r\n                        s = ` ${t} ${this.getCompareString(filter.operator1)} ''  `;\r\n                    }\r\n                }\r\n            }\r\n            if (filter.relation) {\r\n                const s2 = `${t} ${this.getCompareString(filter.operator2)} ${filter.value2}`;\r\n                s = `${lbracket} ${s} ${filter.relation === 'and' ? and2 : or} ${s2} ${rbracket}`;\r\n            }\r\n            return `${c} <span class=\"filter-field filter-column-${r}\"> ${s} AND </span>`;\r\n        }, '');\r\n        const lastANDidx = str.lastIndexOf('AND');\r\n        let resultStr = str.substr(0, lastANDidx);\r\n        resultStr += str.substr(lastANDidx + 3);\r\n        return resultStr.replace(/AND/g, and).replace(/OR/g, or);\r\n    }\r\n\r\n    private getCompareString(operator: Compare) {\r\n        const op = parseInt('' + operator, 10);\r\n        let code = '';\r\n        switch (op) {\r\n            case Compare.Equal:\r\n            case Compare.NotEqual:\r\n            case Compare.Greater:\r\n            case Compare.GreaterOrEqual:\r\n            case Compare.Less:\r\n            case Compare.LessOrEqual:\r\n            case Compare.Like:\r\n            case Compare.NotLike:\r\n            case Compare.In:\r\n                code = Compare[op];\r\n                code = code[0].toLowerCase() + code.substr(1);\r\n                return this.localeSer.getValue('datagrid.filter.operators.' + code);\r\n            case 1001: // Empty\r\n                return ' ' + this.localeSer.getValue('datagrid.filter.operators.empty');\r\n            case 1002:  // NotEmpty\r\n                return ' ' + this.localeSer.getValue('datagrid.filter.operators.notEmpty');\r\n            case 1003: // Null\r\n                return ' ' + this.localeSer.getValue('datagrid.filter.operators.null');\r\n            case 1004: // NotNull\r\n                return ' ' + this.localeSer.getValue('datagrid.filter.operators.notNull');\r\n        }\r\n    }\r\n\r\n\r\n    convert2FilterArray(condition: { [field: string]: any }): FilterCondition[] {\r\n        const filterArr = [];\r\n        if (condition) {\r\n            const fields = Object.keys(condition);\r\n            if (fields && fields.length) {\r\n                fields.forEach(field => {\r\n                    const obj = { filterField: field, value: '', lbracket: '', rbracket: '', relation: 1, compare: 0 };\r\n                    const conditionVal = condition[field];\r\n                    if (typeof conditionVal === 'object') {\r\n                        obj.compare = conditionVal.operator1;\r\n                        obj.value = conditionVal.value1;\r\n                        filterArr.push(obj);\r\n                        if (conditionVal.value2) {\r\n                            obj.lbracket = '(';\r\n                            obj.relation = conditionVal.relation === 'and' ? 1 : 2;\r\n\r\n                            const obj2 = { filterField: field, value: '', lbracket: '', rbracket: ')', relation: 1, compare: 0 };\r\n                            obj2.compare = conditionVal.operator2;\r\n                            obj2.value = conditionVal.value2;\r\n\r\n                            filterArr.push(obj2);\r\n                        } else {\r\n                            if (conditionVal.operator2) {\r\n                                const op2 = parseInt('' + conditionVal.operator2, 10); //  Empty: 1001, NotEmpty: 1002\r\n                                if (op2 === 1001 || op2 === 1002) {\r\n                                    obj.lbracket = '(';\r\n                                    obj.relation = conditionVal.relation === 'and' ? 1 : 2;\r\n\r\n                                    const obj2 = { filterField: field, value: '', lbracket: '', rbracket: ')', relation: 1, compare: 0 };\r\n                                    obj2.compare = op2 === 1001 ? Compare.Equal : Compare.NotEqual;\r\n                                    obj2.value = '';\r\n\r\n                                    filterArr.push(obj2);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    return obj;\r\n                });\r\n            }\r\n        }\r\n\r\n        if (filterArr.length) {\r\n            this.checkEnumTypeFilters(filterArr);\r\n            filterArr[filterArr.length - 1].relation = 0;\r\n        }\r\n\r\n        return filterArr;\r\n    }\r\n\r\n    private checkEnumTypeFilters(filterArr: FilterCondition[]) {\r\n        const enumFilters:{[key:string]: any[]} = { };\r\n        filterArr.forEach((f, i) => {\r\n            const enumFilterArr = this.convertEnumTypeFilter(f);\r\n            if (enumFilterArr && enumFilterArr.length) {\r\n                enumFilters[f.filterField] = enumFilterArr\r\n            }\r\n        });\r\n\r\n        const keys = Object.keys(enumFilters);\r\n        if (keys.length) {\r\n            keys.forEach((k) => {\r\n                const i = filterArr.findIndex(n => n.filterField === k);\r\n                filterArr.splice(i, 1, ...enumFilters[k]);\r\n            })\r\n        }\r\n\r\n        return filterArr;\r\n    }\r\n\r\n    // å°enum ç±»åçæ¡ä»¶è½¬æ¢å¤ä¸ªæ¡ä»¶\r\n    private convertEnumTypeFilter(filter: FilterCondition) : FilterCondition[] {\r\n        if (filter) {\r\n            const col = this.dfs.getColumn(filter.filterField) as DataColumn;\r\n            if (col && col.filter && col.filter.type ===  ColumnFilterType.enum)  {\r\n                if (Array.isArray(filter.value) && filter.value.length) {\r\n                    if (filter.value.length === 1) {\r\n                        filter.compare = Compare.Equal;\r\n                        filter.value = filter.value[0];\r\n                        return [];\r\n                    } else {\r\n                        // > 1\r\n                        let filterArr = filter.value.map((val: any) => {\r\n                            return {\r\n                                filterField: filter.filterField, \r\n                                value: val, \r\n                                lbracket: '',\r\n                                rbracket: '',\r\n                                relation: 2,  // or\r\n                                compare: 0\r\n                            }\r\n                        });\r\n                        filterArr[0].lbracket = '(';\r\n                        filterArr[filter.value.length -1].rbracket = ')';\r\n                        filterArr[filter.value.length -1].relation = 1;\r\n                        return filterArr;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return [];\r\n    }\r\n\r\n    createColumnFilterOptions(col: DataColumn) {\r\n        let filterTypeOptions: ColumnFilter = {\r\n            type: ColumnFilterType.string,\r\n            enableOperator: true\r\n        };\r\n        if (col.editor) {\r\n            switch (col.editor.type) {\r\n                case 'textarea':\r\n                case 'textbox':\r\n                case 'language-textbox':\r\n                    filterTypeOptions = {\r\n                        type: ColumnFilterType.string,\r\n                        enableOperator: true\r\n                    };\r\n                    break;\r\n                case 'checkbox':\r\n                case 'switch':\r\n                    filterTypeOptions = {\r\n                        type: ColumnFilterType.boolean,\r\n                        enableOperator: false\r\n                    };\r\n                    break;\r\n                case 'numberbox':\r\n                    filterTypeOptions = {\r\n                        type: ColumnFilterType.number,\r\n                        enableOperator: true\r\n                    };\r\n                    break;\r\n                case 'combolist':\r\n                case 'select':\r\n                    filterTypeOptions = {\r\n                        type: ColumnFilterType.enum,\r\n                        enableOperator: true,\r\n                        options: col.editor.options\r\n                    };\r\n                    break;\r\n                case 'datepicker':\r\n                    filterTypeOptions = {\r\n                        type: col['dataType'] === 'datetime' ? ColumnFilterType.datetime : ColumnFilterType.date,\r\n                        enableOperator: true,\r\n                        options: {\r\n                            dateFormat: col.editor.options.dateFormat,\r\n                            returnFormat: col.editor.options.returnFormat\r\n                        }\r\n                    };\r\n                    break;\r\n                case 'timepicker':\r\n                    filterTypeOptions = {\r\n                        type: ColumnFilterType.time,\r\n                        enableOperator: true\r\n                    };\r\n                    break;\r\n\r\n            }\r\n        } else if (col.formatter) {\r\n            if (typeof col.formatter === 'object' && Object.keys(col.formatter).length) {\r\n                const options: any = col.formatter['options'];\r\n                switch (col.formatter['type']) {\r\n                    case 'number':\r\n                        filterTypeOptions = {\r\n                            type: ColumnFilterType.number,\r\n                            enableOperator: true\r\n                        };\r\n                        break;\r\n                    case 'enum':\r\n                        filterTypeOptions = {\r\n                            type: ColumnFilterType.enum,\r\n                            enableOperator: true,\r\n                            options\r\n                        };\r\n                        break;\r\n                    case 'boolean':\r\n                        filterTypeOptions = {\r\n                            type: ColumnFilterType.boolean,\r\n                            enableOperator: false\r\n                        };\r\n                        break;\r\n                    case 'datetime':\r\n                        let tye = ColumnFilterType.datetime;\r\n                        let fmt = 'yyyy-MM-dd';\r\n                        let returnFmt = 'yyyy-MM-dd';\r\n                        if (options && options.format) {\r\n                            fmt = options.format;\r\n                            if (fmt.indexOf('HH:') == -1) {\r\n                                tye = ColumnFilterType.date;\r\n                            } else {\r\n                                returnFmt += ' HH:mm';\r\n                                if (fmt.indexOf('ss') > -1) {\r\n                                    returnFmt += ':ss';\r\n                                }\r\n                            }\r\n                        } else {\r\n                            tye = ColumnFilterType.date;\r\n                        }\r\n                        filterTypeOptions = {\r\n                            type: tye,\r\n                            enableOperator: true\r\n                        };\r\n\r\n                        filterTypeOptions.options = { dateFormat: fmt, returnFormat: returnFmt };\r\n                        break;\r\n                    default:\r\n                        filterTypeOptions = {\r\n                            type: ColumnFilterType.string,\r\n                            enableOperator: true\r\n                        };\r\n                }\r\n            }\r\n        } else {\r\n            filterTypeOptions = {\r\n                type: ColumnFilterType.string,\r\n                enableOperator: true\r\n            };\r\n        }\r\n        return filterTypeOptions;\r\n    }\r\n\r\n    //#region  Smart Filter\r\n\r\n    convertSmartFilter2EntityFilter(conditions: any[]) {\r\n        if (conditions && conditions.length) {\r\n            return conditions.map(n => {\r\n                return n;\r\n            });\r\n        }\r\n\r\n        return [];\r\n    }\r\n\r\n    private validateRowData2(rowData: any, conditions: any) {\r\n        if (!conditions || conditions.length === 0) {\r\n            return true;\r\n        }\r\n        return this.checkRowDataWithCondition(rowData, conditions);\r\n    }\r\n\r\n    private checkRowDataWithCondition(rowData: any, conditions) {\r\n        let resultObj = null;\r\n        if (conditions) {\r\n            resultObj = {};\r\n            conditions.forEach(condition => {\r\n                const field = condition.FilterField;\r\n                let fieldValue = Utils.getValue(field, rowData);\r\n                const columnObj = this.dfs.getColumn(field);\r\n                if (columnObj && columnObj.isMultilingualField) {\r\n                    fieldValue = Utils.getMultilingualValue(fieldValue, this.localeSer.localeId);\r\n                }\r\n\r\n                const where = condition;\r\n                const { Value, Relation, Compare: operator1 } = where;\r\n                if (where) {\r\n                    const r = this.getCompareResult(fieldValue, operator1, Value);\r\n                    if (resultObj[field] === undefined) {\r\n                        resultObj[field] = [ r ];\r\n                    } else {\r\n                        resultObj[field].push(r);\r\n                    }\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n        // return this.checkAllFieldResult(resultObj);\r\n        const fields = Object.keys(resultObj);\r\n        const result = [];\r\n        fields.forEach( (f) => {\r\n            const _filters = conditions.filter(n => n.FilterField === f);\r\n            if (resultObj[f].length === 1) {\r\n                result.push(resultObj[f][0]);\r\n            } else {\r\n                if (_filters[0].Relation === 1 && resultObj[f].length === 2) {  // and\r\n                    result.push(resultObj[f][0] && resultObj[f][1]);\r\n                } else {  // or\r\n                    result.push(resultObj[f].indexOf(true) > -1);\r\n                }\r\n            }\r\n        });\r\n\r\n        return result.indexOf(false) === -1;\r\n    }\r\n\r\n    executeSmartFilter(data: [], conditions: any[]) {\r\n        if (data && data.length) {\r\n            return data.filter(n => this.validateRowData2(n, conditions));\r\n        }\r\n        return data;\r\n    }\r\n\r\n    //#endregion\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n/**\r\n * @deprecated åé¨åç»ä»¶å·²åºå¼ï¼åé¡µç»ä»¶ä½¿ç¨farris-ui ä¸­çå¬å±ç»ä»¶\r\n */\r\n@NgModule({\r\n    declarations: [],\r\n    imports: [ CommonModule ],\r\n    exports: [],\r\n    providers: [\r\n    ],\r\n})\r\nexport class NgxPaginationModule {}\r\n","\r\nexport class PaginationService {}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport const SCROLLBAR_CONFIG = new InjectionToken(\r\n    'PERFECT_SCROLLBAR_CONFIG'\r\n);\r\n\r\nexport class Geometry {\r\n    public x: number;\r\n    public y: number;\r\n\r\n    public w: number;\r\n    public h: number;\r\n\r\n    constructor(x: number, y: number, w: number, h: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.w = w;\r\n        this.h = h;\r\n    }\r\n}\r\n\r\nexport class Position {\r\n    public x: number | 'start' | 'end';\r\n    public y: number | 'start' | 'end';\r\n\r\n    constructor(x: number | 'start' | 'end', y: number | 'start' | 'end') {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n}\r\n\r\nexport type ScrollbarEvent =\r\n    | 'psScrollY'\r\n    | 'psScrollX'\r\n    | 'psScrollUp'\r\n    | 'psScrollDown'\r\n    | 'psScrollLeft'\r\n    | 'psScrollRight'\r\n    | 'psYReachEnd'\r\n    | 'psYReachStart'\r\n    | 'psXReachEnd'\r\n    | 'psXReachStart';\r\n\r\nexport const ScrollbarEvents: ScrollbarEvent[] = [\r\n    'psScrollY',\r\n    'psScrollX',\r\n\r\n    'psScrollUp',\r\n    'psScrollDown',\r\n    'psScrollLeft',\r\n    'psScrollRight',\r\n\r\n    'psYReachEnd',\r\n    'psYReachStart',\r\n    'psXReachEnd',\r\n    'psXReachStart'\r\n];\r\n\r\nexport interface ScrollbarConfigInterface {\r\n    handlers?: string[];\r\n\r\n    wheelSpeed?: number;\r\n    swipeEasing?: boolean;\r\n\r\n    suppressScrollX?: boolean;\r\n    suppressScrollY?: boolean;\r\n\r\n    wheelPropagation?: boolean;\r\n    useBothWheelAxes?: boolean;\r\n\r\n    scrollingThreshold?: number;\r\n\r\n    minScrollbarLength?: number;\r\n    maxScrollbarLength?: number;\r\n\r\n    scrollXMarginOffset?: number;\r\n    scrollYMarginOffset?: number;\r\n}\r\n\r\nexport class ScrollbarConfig implements ScrollbarConfigInterface {\r\n    public handlers?: string[];\r\n\r\n    public wheelSpeed?: number;\r\n    public swipeEasing?: boolean;\r\n\r\n    public suppressScrollX?: boolean;\r\n    public suppressScrollY?: boolean;\r\n\r\n    public wheelPropagation?: boolean;\r\n    public useBothWheelAxes?: boolean;\r\n\r\n    public scrollingThreshold?: number;\r\n\r\n    public minScrollbarLength?: number;\r\n    public maxScrollbarLength?: number;\r\n\r\n    public scrollXMarginOffset?: number;\r\n    public scrollYMarginOffset?: number;\r\n\r\n    constructor(config: ScrollbarConfigInterface = {}) {\r\n        this.assign(config);\r\n    }\r\n\r\n    public assign(config: ScrollbarConfigInterface = {}) {\r\n        for (const key in config) {\r\n            this[key as keyof ScrollbarConfig] = config[key as keyof ScrollbarConfigInterface];\r\n        }\r\n    }\r\n}\r\n","import { AfterViewInit } from '@angular/core';\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-07-29 08:14:22\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-10-10 15:11:09\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { PLATFORM_ID } from '@angular/core';\r\nimport { isPlatformBrowser } from '@angular/common';\r\n\r\nimport PerfectScrollbar from 'perfect-scrollbar';\r\n\r\nimport ResizeObserver from 'resize-observer-polyfill';\r\n\r\nimport { Subject, fromEvent, Observable, interval } from 'rxjs';\r\nimport { auditTime, takeUntil, debounceTime, throttle } from 'rxjs/operators';\r\n\r\nimport {\r\n    NgZone, Inject, Optional, ElementRef, Directive,\r\n    OnInit, DoCheck, OnChanges, OnDestroy, Input, Output, EventEmitter,\r\n    SimpleChanges, KeyValueDiffer, KeyValueDiffers\r\n} from '@angular/core';\r\n\r\nimport { Geometry, Position } from './scrollbar.interfaces';\r\n\r\nimport {\r\n    SCROLLBAR_CONFIG, ScrollbarConfig, ScrollbarConfigInterface,\r\n    ScrollbarEvent, ScrollbarEvents\r\n} from './scrollbar.interfaces';\r\n\r\n@Directive({\r\n    selector: '[scrollbar]',\r\n    exportAs: 'ngxScrollbar'\r\n})\r\nexport class ScrollbarDirective implements OnInit, OnDestroy, DoCheck, OnChanges, AfterViewInit {\r\n    instance: PerfectScrollbar | null = null;\r\n\r\n    private ro: ResizeObserver | null = null;\r\n\r\n    private timeout: number | null = null;\r\n    private animation: number | null = null;\r\n\r\n    private configDiff: KeyValueDiffer<string, any> | null = null;\r\n\r\n    private readonly ngDestroy: Subject<void> = new Subject();\r\n\r\n    @Input() disabled = false;\r\n\r\n    @Input('scrollbar') config?: ScrollbarConfigInterface;\r\n\r\n    @Output() psScrollY: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psScrollX: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @Output() psScrollUp: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psScrollDown: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psScrollLeft: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psScrollRight: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @Output() psYReachEnd: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psYReachStart: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psXReachEnd: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psXReachStart: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    constructor(private zone: NgZone, private differs: KeyValueDiffers,\r\n                public elementRef: ElementRef, @Inject(PLATFORM_ID) private platformId: any,\r\n                @Optional() @Inject(SCROLLBAR_CONFIG) private defaults: ScrollbarConfigInterface) { }\r\n\r\n    ngOnInit(): void {\r\n        if (!this.disabled && isPlatformBrowser(this.platformId)) {\r\n            const config = new ScrollbarConfig(this.defaults);\r\n\r\n            config.assign(this.config); // Custom configuration\r\n\r\n            this.zone.runOutsideAngular(() => {\r\n                setTimeout(() => {\r\n                    this.instance = new PerfectScrollbar(this.elementRef.nativeElement, config);\r\n                });\r\n            });\r\n\r\n            if (!this.configDiff) {\r\n                this.configDiff = this.differs.find(this.config || {}).create();\r\n\r\n                this.configDiff.diff(this.config || {});\r\n            }\r\n\r\n            this.zone.runOutsideAngular(() => {\r\n                this.ro = new ResizeObserver(() => {\r\n                    this.update();\r\n                });\r\n\r\n                if (this.elementRef.nativeElement.children[0]) {\r\n                    this.ro.observe(this.elementRef.nativeElement.children[0]);\r\n                }\r\n\r\n                this.ro.observe(this.elementRef.nativeElement);\r\n            });\r\n\r\n            this.zone.runOutsideAngular(() => {\r\n                ScrollbarEvents.forEach((eventName: ScrollbarEvent) => {\r\n                    const eventType = eventName.replace(/([A-Z])/g, (c) => `-${c.toLowerCase()}`);\r\n\r\n                    if (eventName.indexOf('X') > -1 || eventName.indexOf('Left') > -1 || eventName.indexOf('Right') > -1) {\r\n                        fromEvent<Event>(this.elementRef.nativeElement, eventType).subscribe((event: Event) => {\r\n                            this[eventName].emit(event);\r\n                        });\r\n                    } else {\r\n                        fromEvent<Event>(this.elementRef.nativeElement, eventType).pipe(\r\n                            takeUntil(this.ngDestroy)\r\n                        ).pipe(\r\n                            // debounceTime(20),\r\n                            // throttle(ev => interval(20)),\r\n                            auditTime(20),  // auditTime éé»æå®çæ¶é´ï¼å¨æ­¤æ¶é´åå¿½ç¥ææååºçå¼ï¼æ¶é´è¿åï¼ååºææ°çå¼\r\n                        )\r\n                        .subscribe((event: Event) => {\r\n                            this[eventName].emit(event);\r\n                        });\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        // this.zone.runOutsideAngular(() => {\r\n        //     this.instance = new PerfectScrollbar(this.elementRef.nativeElement, this.config);\r\n        // });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (isPlatformBrowser(this.platformId)) {\r\n            this.ngDestroy.next();\r\n            this.ngDestroy.complete();\r\n\r\n            if (this.ro) {\r\n                this.ro.disconnect();\r\n            }\r\n\r\n            if (this.timeout && typeof window !== 'undefined') {\r\n                window.clearTimeout(this.timeout);\r\n            }\r\n\r\n            this.zone.runOutsideAngular(() => {\r\n                if (this.instance) {\r\n                    this.instance.destroy();\r\n                }\r\n            });\r\n\r\n            this.instance = null;\r\n        }\r\n    }\r\n\r\n    ngDoCheck(): void {\r\n        if (!this.disabled && this.configDiff && isPlatformBrowser(this.platformId)) {\r\n            const changes = this.configDiff.diff(this.config || {});\r\n\r\n            if (changes) {\r\n                this.ngOnDestroy();\r\n\r\n                this.ngOnInit();\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (changes['disabled'] && !changes['disabled'].isFirstChange() && isPlatformBrowser(this.platformId)) {\r\n            if (changes['disabled'].currentValue !== changes['disabled'].previousValue) {\r\n                if (changes['disabled'].currentValue === true) {\r\n                    this.ngOnDestroy();\r\n                } else if (changes['disabled'].currentValue === false) {\r\n                    this.ngOnInit();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public ps(): PerfectScrollbar | null {\r\n        return this.instance;\r\n    }\r\n\r\n    public update(): void {\r\n        if (typeof window !== 'undefined') {\r\n            if (this.timeout) {\r\n                window.clearTimeout(this.timeout);\r\n            }\r\n\r\n            this.timeout = window.setTimeout(() => {\r\n                if (!this.disabled && this.configDiff) {\r\n                    try {\r\n                        this.zone.runOutsideAngular(() => {\r\n                            if (this.instance) {\r\n                                this.instance.update();\r\n                            }\r\n                        });\r\n                    } catch (error) {\r\n                        // Update can be finished after destroy so catch errors\r\n                    }\r\n                }\r\n            }, 0);\r\n        }\r\n    }\r\n\r\n    public geometry(prefix: string = 'scroll'): Geometry {\r\n        return new Geometry(\r\n            this.elementRef.nativeElement[prefix + 'Left'],\r\n            this.elementRef.nativeElement[prefix + 'Top'],\r\n            this.elementRef.nativeElement[prefix + 'Width'],\r\n            this.elementRef.nativeElement[prefix + 'Height']\r\n        );\r\n    }\r\n\r\n    public position(absolute: boolean = false): Position {\r\n        if (!absolute && this.instance) {\r\n            return new Position(\r\n                this.instance.reach.x || 0,\r\n                this.instance.reach.y || 0\r\n            );\r\n        } else {\r\n            return new Position(\r\n                this.elementRef.nativeElement.scrollLeft,\r\n                this.elementRef.nativeElement.scrollTop\r\n            );\r\n        }\r\n    }\r\n\r\n    public scrollable(direction: string = 'any'): boolean {\r\n        const element = this.elementRef.nativeElement;\r\n\r\n        if (direction === 'any') {\r\n            return element.classList.contains('ps--active-x') ||\r\n                element.classList.contains('ps--active-y');\r\n        } else if (direction === 'both') {\r\n            return element.classList.contains('ps--active-x') &&\r\n                element.classList.contains('ps--active-y');\r\n        } else {\r\n            return element.classList.contains('ps--active-' + direction);\r\n        }\r\n    }\r\n\r\n    public scrollTo(x: number, y?: number, speed?: number): void {\r\n        if (!this.disabled) {\r\n            if (y == null && speed == null) {\r\n                this.animateScrolling('scrollTop', x, speed);\r\n            } else {\r\n                if (x != null) {\r\n                    this.animateScrolling('scrollLeft', x, speed);\r\n                }\r\n\r\n                if (y != null) {\r\n                    this.animateScrolling('scrollTop', y, speed);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public scrollToX(x: number, speed?: number): void {\r\n        this.animateScrolling('scrollLeft', x, speed);\r\n    }\r\n\r\n    public scrollToY(y: number, speed?: number): void {\r\n        this.animateScrolling('scrollTop', y, speed);\r\n    }\r\n\r\n    public scrollToTop(offset?: number, speed?: number): void {\r\n        this.animateScrolling('scrollTop', (offset || 0), speed);\r\n    }\r\n\r\n    public scrollToLeft(offset?: number, speed?: number): void {\r\n        this.animateScrolling('scrollLeft', (offset || 0), speed);\r\n    }\r\n\r\n    public scrollToRight(offset?: number, speed?: number): void {\r\n        const left = this.elementRef.nativeElement.scrollWidth -\r\n            this.elementRef.nativeElement.clientWidth;\r\n\r\n        this.animateScrolling('scrollLeft', left - (offset || 0), speed);\r\n    }\r\n\r\n    public scrollToBottom(offset?: number, speed?: number): void {\r\n        const top = this.elementRef.nativeElement.scrollHeight -\r\n            this.elementRef.nativeElement.clientHeight;\r\n\r\n        this.animateScrolling('scrollTop', top - (offset || 0), speed);\r\n    }\r\n\r\n    public scrollToElement(qs: string, offset?: number, speed?: number): void {\r\n        const element = this.elementRef.nativeElement.querySelector(qs);\r\n\r\n        if (element) {\r\n            const elementPos = element.getBoundingClientRect();\r\n\r\n            const scrollerPos = this.elementRef.nativeElement.getBoundingClientRect();\r\n\r\n            if (this.elementRef.nativeElement.classList.contains('ps--active-x')) {\r\n                const currentPos = this.elementRef.nativeElement['scrollLeft'];\r\n\r\n                const position = elementPos.left - scrollerPos.left + currentPos;\r\n\r\n                this.animateScrolling('scrollLeft', position + (offset || 0), speed);\r\n            }\r\n\r\n            if (this.elementRef.nativeElement.classList.contains('ps--active-y')) {\r\n                const currentPos = this.elementRef.nativeElement['scrollTop'];\r\n\r\n                const position = elementPos.top - scrollerPos.top + currentPos;\r\n\r\n                this.animateScrolling('scrollTop', position + (offset || 0), speed);\r\n            }\r\n        }\r\n    }\r\n\r\n    private animateScrolling(target: string, value: number, speed?: number): void {\r\n        if (this.animation) {\r\n            window.cancelAnimationFrame(this.animation);\r\n\r\n            this.animation = null;\r\n        }\r\n\r\n        if (!speed || typeof window === 'undefined') {\r\n            this.elementRef.nativeElement[target] = value;\r\n        } else if (value !== this.elementRef.nativeElement[target]) {\r\n            let newValue = 0;\r\n            let scrollCount = 0;\r\n\r\n            let oldTimestamp = performance.now();\r\n            let oldValue = this.elementRef.nativeElement[target];\r\n\r\n            const cosParameter = (oldValue - value) / 2;\r\n\r\n            const step = (newTimestamp: number) => {\r\n                scrollCount += Math.PI / (speed / (newTimestamp - oldTimestamp));\r\n\r\n                newValue = Math.round(value + cosParameter + cosParameter * Math.cos(scrollCount));\r\n\r\n                // Only continue animation if scroll position has not changed\r\n                if (this.elementRef.nativeElement[target] === oldValue) {\r\n                    if (scrollCount >= Math.PI) {\r\n                        this.animateScrolling(target, value, 0);\r\n                    } else {\r\n                        this.elementRef.nativeElement[target] = newValue;\r\n\r\n                        // On a zoomed out page the resulting offset may differ\r\n                        oldValue = this.elementRef.nativeElement[target];\r\n\r\n                        oldTimestamp = newTimestamp;\r\n\r\n                        this.animation = window.requestAnimationFrame(step);\r\n                    }\r\n                }\r\n            };\r\n\r\n            window.requestAnimationFrame(step);\r\n        }\r\n    }\r\n}\r\n","import { Subject, merge, fromEvent } from 'rxjs';\r\nimport { mapTo, takeUntil, distinctUntilChanged } from 'rxjs/operators';\r\n\r\nimport { PLATFORM_ID } from '@angular/core';\r\nimport { isPlatformBrowser } from '@angular/common';\r\nimport {\r\n    NgZone, Inject, Component,\r\n    OnInit, OnDestroy, DoCheck, Input, Output, EventEmitter, HostBinding,\r\n    ViewChild, ViewEncapsulation, ChangeDetectorRef\r\n} from '@angular/core';\r\n\r\nimport { ScrollbarDirective } from './scrollbar.directive';\r\n\r\nimport {\r\n    ScrollbarEvent, ScrollbarEvents,\r\n    ScrollbarConfigInterface\r\n} from './scrollbar.interfaces';\r\n\r\n// styleUrls: [\r\n//     './scrollbar.component.css'\r\n// ],\r\n\r\n@Component({\r\n    selector: 'scrollbar',\r\n    exportAs: 'ngxScrollbar',\r\n    templateUrl: './scrollbar.component.html',\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ScrollbarComponent implements OnInit, OnDestroy, DoCheck {\r\n    public states: any = {};\r\n\r\n    public indicatorX = false;\r\n    public indicatorY = false;\r\n\r\n    public interaction = false;\r\n\r\n    private scrollPositionX = 0;\r\n    private scrollPositionY = 0;\r\n\r\n    private scrollDirectionX = 0;\r\n    private scrollDirectionY = 0;\r\n\r\n    private usePropagationX = false;\r\n    private usePropagationY = false;\r\n\r\n    private allowPropagationX = false;\r\n    private allowPropagationY = false;\r\n\r\n    private stateTimeout: number | null = null;\r\n\r\n    private readonly ngDestroy: Subject<void> = new Subject();\r\n\r\n    private readonly stateUpdate: Subject<string> = new Subject();\r\n\r\n    @Input() disabled = false;\r\n\r\n    @Input() usePSClass = true;\r\n\r\n    @HostBinding('class.ps-show-limits')\r\n    @Input() autoPropagation = false;\r\n\r\n    @HostBinding('class.ps-show-active')\r\n    @Input() scrollIndicators = false;\r\n\r\n    @Input() config?: ScrollbarConfigInterface;\r\n\r\n    @Output() psScrollY: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psScrollX: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @Output() psScrollUp: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psScrollDown: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psScrollLeft: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psScrollRight: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @Output() psYReachEnd: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psYReachStart: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psXReachEnd: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psXReachStart: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @ViewChild(ScrollbarDirective) directiveRef?: ScrollbarDirective;\r\n\r\n    constructor(private zone: NgZone, private cdRef: ChangeDetectorRef,\r\n                @Inject(PLATFORM_ID) private platformId: any) { }\r\n\r\n    ngOnInit(): void {\r\n        if (isPlatformBrowser(this.platformId)) {\r\n            this.stateUpdate\r\n                .pipe( takeUntil(this.ngDestroy))\r\n                .pipe(\r\n                    distinctUntilChanged((a, b) => (a === b && !this.stateTimeout))\r\n                )\r\n                .subscribe((state: string) => {\r\n                    if (this.stateTimeout && typeof window !== 'undefined') {\r\n                        window.clearTimeout(this.stateTimeout);\r\n\r\n                        this.stateTimeout = null;\r\n                    }\r\n\r\n                    if (state === 'x' || state === 'y') {\r\n                        this.interaction = false;\r\n\r\n                        if (state === 'x') {\r\n                            this.indicatorX = false;\r\n\r\n                            this.states.left = false;\r\n                            this.states.right = false;\r\n\r\n                            if (this.autoPropagation && this.usePropagationX) {\r\n                                this.allowPropagationX = false;\r\n                            }\r\n                        } else if (state === 'y') {\r\n                            this.indicatorY = false;\r\n\r\n                            this.states.top = false;\r\n                            this.states.bottom = false;\r\n\r\n                            if (this.autoPropagation && this.usePropagationY) {\r\n                                this.allowPropagationY = false;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        if (state === 'left' || state === 'right') {\r\n                            this.states.left = false;\r\n                            this.states.right = false;\r\n\r\n                            this.states[state] = true;\r\n\r\n                            if (this.autoPropagation && this.usePropagationX) {\r\n                                this.indicatorX = true;\r\n                            }\r\n                        } else if (state === 'top' || state === 'bottom') {\r\n                            this.states.top = false;\r\n                            this.states.bottom = false;\r\n\r\n                            this.states[state] = true;\r\n\r\n                            if (this.autoPropagation && this.usePropagationY) {\r\n                                this.indicatorY = true;\r\n                            }\r\n                        }\r\n\r\n                        if (this.autoPropagation && typeof window !== 'undefined') {\r\n                            this.stateTimeout = window.setTimeout(() => {\r\n                                this.indicatorX = false;\r\n                                this.indicatorY = false;\r\n\r\n                                this.stateTimeout = null;\r\n\r\n                                if (this.interaction && (this.states.left || this.states.right)) {\r\n                                    this.allowPropagationX = true;\r\n                                }\r\n\r\n                                if (this.interaction && (this.states.top || this.states.bottom)) {\r\n                                    this.allowPropagationY = true;\r\n                                }\r\n\r\n                                this.cdRef.markForCheck();\r\n                            }, 500);\r\n                        }\r\n                    }\r\n\r\n                    this.cdRef.markForCheck();\r\n                    this.cdRef.detectChanges();\r\n                });\r\n\r\n            this.zone.runOutsideAngular(() => {\r\n                if (this.directiveRef) {\r\n                    const element = this.directiveRef.elementRef.nativeElement;\r\n\r\n                    fromEvent<WheelEvent>(element, 'wheel')\r\n                        .pipe(\r\n                            takeUntil(this.ngDestroy)\r\n                        )\r\n                        .subscribe((event: WheelEvent) => {\r\n                            if (!this.disabled && this.autoPropagation) {\r\n                                const scrollDeltaX = event.deltaX;\r\n                                const scrollDeltaY = event.deltaY;\r\n\r\n                                this.checkPropagation(event, scrollDeltaX, scrollDeltaY);\r\n                            }\r\n                        });\r\n\r\n                    fromEvent<TouchEvent>(element, 'touchmove')\r\n                        .pipe(\r\n                            takeUntil(this.ngDestroy)\r\n                        )\r\n                        .subscribe((event: TouchEvent) => {\r\n                            if (!this.disabled && this.autoPropagation) {\r\n                                const scrollPositionX = event.touches[0].clientX;\r\n                                const scrollPositionY = event.touches[0].clientY;\r\n\r\n                                const scrollDeltaX = scrollPositionX - this.scrollPositionX;\r\n                                const scrollDeltaY = scrollPositionY - this.scrollPositionY;\r\n\r\n                                this.checkPropagation(event, scrollDeltaX, scrollDeltaY);\r\n\r\n                                this.scrollPositionX = scrollPositionX;\r\n                                this.scrollPositionY = scrollPositionY;\r\n                            }\r\n                        });\r\n\r\n                    merge(\r\n                        fromEvent(element, 'ps-scroll-x')\r\n                            .pipe(mapTo('x')),\r\n                        fromEvent(element, 'ps-scroll-y')\r\n                            .pipe(mapTo('y')),\r\n                        fromEvent(element, 'ps-x-reach-end')\r\n                            .pipe(mapTo('right')),\r\n                        fromEvent(element, 'ps-y-reach-end')\r\n                            .pipe(mapTo('bottom')),\r\n                        fromEvent(element, 'ps-x-reach-start')\r\n                            .pipe(mapTo('left')),\r\n                        fromEvent(element, 'ps-y-reach-start')\r\n                            .pipe(mapTo('top')),\r\n                    )\r\n                        .pipe(\r\n                            takeUntil(this.ngDestroy)\r\n                        )\r\n                        .subscribe((state: string) => {\r\n                            if (!this.disabled && (this.autoPropagation || this.scrollIndicators)) {\r\n                                this.stateUpdate.next(state);\r\n                            }\r\n                        });\r\n                }\r\n            });\r\n\r\n            window.setTimeout(() => {\r\n                ScrollbarEvents.forEach((eventName: ScrollbarEvent) => {\r\n                    if (this.directiveRef) {\r\n                        this.directiveRef[eventName] = this[eventName];\r\n                    }\r\n                });\r\n            }, 0);\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (isPlatformBrowser(this.platformId)) {\r\n            this.ngDestroy.next();\r\n            this.ngDestroy.unsubscribe();\r\n\r\n            if (this.stateTimeout && typeof window !== 'undefined') {\r\n                window.clearTimeout(this.stateTimeout);\r\n            }\r\n        }\r\n    }\r\n\r\n    ngDoCheck(): void {\r\n        if (isPlatformBrowser(this.platformId)) {\r\n            if (!this.disabled && this.autoPropagation && this.directiveRef) {\r\n                const element = this.directiveRef.elementRef.nativeElement;\r\n\r\n                this.usePropagationX = element.classList.contains('ps--active-x');\r\n\r\n                this.usePropagationY = element.classList.contains('ps--active-y');\r\n            }\r\n        }\r\n    }\r\n\r\n    private checkPropagation(event: any, deltaX: number, deltaY: number): void {\r\n        this.interaction = true;\r\n\r\n        const scrollDirectionX = (deltaX < 0) ? -1 : 1;\r\n        const scrollDirectionY = (deltaY < 0) ? -1 : 1;\r\n\r\n        if ((this.usePropagationX && this.usePropagationY) ||\r\n            (this.usePropagationX && (!this.allowPropagationX ||\r\n                (this.scrollDirectionX !== scrollDirectionX))) ||\r\n            (this.usePropagationY && (!this.allowPropagationY ||\r\n                (this.scrollDirectionY !== scrollDirectionY)))) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        if (!!deltaX) {\r\n            this.scrollDirectionX = scrollDirectionX;\r\n        }\r\n\r\n        if (!!deltaY) {\r\n            this.scrollDirectionY = scrollDirectionY;\r\n        }\r\n\r\n        this.stateUpdate.next('interaction');\r\n\r\n        this.cdRef.detectChanges();\r\n    }\r\n}\r\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'scrollbar-arrows',\r\n    styleUrls: [\r\n        './scrollbar-arrows.css'\r\n    ],\r\n    templateUrl: './scrollbar-arrows.component.html',\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class ScrollbarArrowsComponent implements OnInit, OnChanges {\r\n\r\n    @Input() reachX: 'start'|'end' = 'start';\r\n    @Input() reachY: 'start'|'end' = 'start';\r\n\r\n\r\n    @Input() scrollbarXActive = false;\r\n    @Input() scrollbarYActive = false;\r\n\r\n    @Output() hasXScrollbar = new EventEmitter();\r\n    @Output() hasYScrollbar = new EventEmitter();\r\n\r\n    @Output() scrollMoveTo = new EventEmitter();\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit() { }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (changes.scrollbarYActive && !changes.scrollbarYActive.isFirstChange()) {\r\n            this.hasYScrollbar.emit(this.scrollbarYActive);\r\n        }\r\n    }\r\n\r\n\r\n    scrollTo($event: MouseEvent, dir: 'left'|'right'|'top'|'bottom') {\r\n        $event.stopPropagation();\r\n        this.scrollMoveTo.emit({ dir, event: $event });\r\n    }\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ScrollbarComponent } from './scrollbar.component';\r\nimport { ScrollbarDirective } from './scrollbar.directive';\r\nimport { ScrollbarArrowsComponent } from './arrow/scrollbar-arrows.component';\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    declarations: [\r\n        ScrollbarComponent, ScrollbarDirective,\r\n        ScrollbarArrowsComponent,\r\n    ],\r\n    exports: [\r\n        CommonModule, ScrollbarComponent, ScrollbarDirective,\r\n        ScrollbarArrowsComponent,\r\n    ]\r\n})\r\nexport class ScrollbarModule {\r\n}\r\n","import { Directive, TemplateRef } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[grid-cell-editor]',\r\n})\r\nexport class DatagridCellEditorDirective {\r\n    constructor(public template: TemplateRef<any>) {}\r\n}\r\n","import { OnInit, Directive, Input, ContentChild, AfterContentInit } from '@angular/core';\r\nimport { DatagridCellEditorDirective } from './column-cell-edit.directive';\r\n\r\n@Directive({\r\n    selector: 'farris-grid-column',\r\n})\r\nexport class DatagridColumnDirective implements OnInit, AfterContentInit {\r\n\r\n    @Input() field: string;\r\n    @Input() title: string;\r\n    @Input() width: number;\r\n    @Input() halign: 'left' | 'center' |'right' = 'left';\r\n    @Input() align: 'left' | 'center' |'right' = 'left';\r\n    @Input() formatter: (value, rowData, rowIndex) => any;\r\n    @Input() readonly = true;\r\n    @Input() editable = false;\r\n\r\n    @ContentChild(DatagridCellEditorDirective) editor: any;\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit(): void { }\r\n\r\n    ngAfterContentInit() {\r\n    }\r\n}\r\n","import { Subject } from 'rxjs';\r\nimport { Component, EventEmitter, Input, OnInit, Output, ElementRef, Renderer2, Injector, OnChanges, SimpleChanges, ViewChild, Optional, OnDestroy } from '@angular/core';\r\nimport { DatagridComponent } from '../../datagrid.component';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'smart-filter-toolbar',\r\n    templateUrl: './smart-filter-toolbar.component.html',\r\n})\r\nexport class SmartFilterToolbarComponent implements OnInit, OnChanges, OnDestroy {\r\n    @Input() padding = '';\r\n    @Input() height = 40;\r\n    @Input() filterData = [];\r\n    @Output() clearFilters = new EventEmitter();\r\n    @Output() removeFilter = new EventEmitter();\r\n    @Output() filterChange = new EventEmitter();\r\n\r\n    @Output() resize = new EventEmitter();\r\n\r\n    @ViewChild('farrisFilter') filtebar: any;\r\n    sk = '';\r\n    dg: DatagridComponent;\r\n    destory$ = new Subject();\r\n    constructor(private el: ElementRef, private render: Renderer2, private inject: Injector) { }\r\n\r\n    ngOnInit(): void {\r\n        this.dg = this.inject.get<DatagridComponent>(DatagridComponent);\r\n        this.sk =  'smartfilter_' + this.dg.dgs.createConfigKey(this.dg.id);\r\n\r\n\r\n        this.dg.dgs.clearFilter.pipe(takeUntil(this.destory$)).subscribe(() => {\r\n            this.clearFilters.emit(null);\r\n        });\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.destory$.next();\r\n        this.destory$.complete();\r\n    }\r\n\r\n    /** æ¡ä»¶ååäºä»¶ */\r\n    onQuery($event) {\r\n        const { data, filterItem } = $event;\r\n        if (data && data.length) {\r\n            const conditions = JSON.parse(data);\r\n            if (conditions && conditions.length)  {\r\n                this.filterChange.emit({conditions, filterItem});\r\n            }\r\n        }\r\n    }\r\n\r\n    /** æ¸é¤æææ¡ä»¶ */\r\n    onResetFilter($event) {\r\n        this.clearFilters.emit($event);\r\n    }\r\n\r\n    /** ç§»é¤åä¸ªæ¡ä»¶ */\r\n    onRemoveFilter($event) {\r\n        this.removeFilter.emit($event);\r\n    }\r\n\r\n    /** å±å¼æå äºä»¶ */\r\n    onResize($event) {\r\n        setTimeout(() => {\r\n            const smartFilterWrapper = this.el.nativeElement.querySelector('.f-filter-wrapper');\r\n            if (smartFilterWrapper) {\r\n                const h = smartFilterWrapper.offsetHeight;\r\n                if (h) {\r\n                    this.resize.emit(h + 6);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n","export function TextFilterControl(col: any) {\r\n    return {\r\n        controltype: 'text'\r\n    };\r\n}\r\n\r\nexport function BooleanFilterControl(col: any) {\r\n    return {\r\n        controltype: 'bool-check',\r\n        // enumValues: [\r\n        //     {value: true, name: 'true'},\r\n        //     {value: false, name: 'false'}\r\n        // ]\r\n    };\r\n}\r\n\r\nexport function EnumFilterControl(col: any, enumopts: any) {\r\n    const valueField = enumopts.valueField || enumopts.idField;\r\n    const data = enumopts.data.map(n => {\r\n        return {\r\n            value:  n[valueField],\r\n            name: n[enumopts.textField]\r\n        };\r\n    });\r\n\r\n    return {\r\n        controltype: 'checkboxgroup',\r\n        enumValues: data,\r\n    };\r\n}\r\n\r\nexport function DateFilterControl(col, options: any) {\r\n    let tye = 'datetime';\r\n    let fmt = 'yyyy-MM-dd';\r\n    let returnFmt = 'yyyy-MM-dd';\r\n    if (options && options.format) {\r\n        fmt = options.format;\r\n        if (fmt.indexOf('HH:') == -1) {\r\n            tye = 'date';\r\n        } else {\r\n            returnFmt += ' HH:mm';\r\n            if (fmt.indexOf('ss') > -1) {\r\n                returnFmt += ':ss';\r\n            }\r\n        }\r\n    } else {\r\n        tye = 'date';\r\n    }\r\n\r\n    // all = 1, å¹´ææ¥\r\n    // noDate = 2,  å¹´æ\r\n    // noDateAndMonth = 3,  å¹´\r\n\r\n    return {\r\n        controltype: 'flexibleDate',\r\n        dateFormat: fmt,\r\n        single: false,\r\n        showType: 1,\r\n        showTime: tye === 'datetime'\r\n    };\r\n}\r\n\r\nexport function NumberFilterControl(col) {\r\n    return  {\r\n        controltype: 'flexibleNumber',\r\n        single: false\r\n    };\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { ColumnFilterType } from '../types/data-column';\r\n\r\nimport { BooleanFilterControl, DateFilterControl, EnumFilterControl,\r\n        NumberFilterControl, TextFilterControl } from '../plugins/smart-filter/controlData/filter-control.options';\r\n\r\n@Injectable()\r\nexport class DatagridSmartFilterService {\r\n    private conditions: any[] = [];\r\n    controlData: any = [];\r\n\r\n    filterChanged = new Subject();\r\n\r\n    removeFilter = new Subject();\r\n    clearAllFilter = new Subject();\r\n\r\n    constructor() { }\r\n\r\n\r\n    getColumnFilterData(col: any) {\r\n        let filterControlData: any = {\r\n            controltype: 'text',\r\n        };\r\n        if (col.filter !== undefined) {\r\n            if (typeof col.filter === 'boolean') {\r\n                if (col.formatter) {\r\n                    if (typeof col.formatter === 'object' && Object.keys(col.formatter).length) {\r\n                        const options: any = col.formatter['options'];\r\n                        switch (col.formatter['type']) {\r\n                            case 'number':\r\n                                return NumberFilterControl(col);\r\n                            case 'enum':\r\n                                return EnumFilterControl(col, options);\r\n                            case 'boolean':\r\n                                return BooleanFilterControl(col);\r\n                            case 'datetime':\r\n                                let tye = 'datetime';\r\n                                let fmt = 'yyyy-MM-dd';\r\n                                let returnFmt = 'yyyy-MM-dd';\r\n                                if (options && options.format) {\r\n                                    fmt = options.format;\r\n                                    if (fmt.indexOf('HH:') == -1) {\r\n                                        tye = 'date';\r\n                                    } else {\r\n                                        returnFmt += ' HH:mm';\r\n                                        if (fmt.indexOf('ss') > -1) {\r\n                                            returnFmt += ':ss';\r\n                                        }\r\n                                    }\r\n                                } else {\r\n                                    tye = 'date';\r\n                                }\r\n                                filterControlData = {\r\n                                    controltype: 'flexibleDate',\r\n                                    dateFormat: fmt,\r\n                                    single: false,\r\n                                    showType: 3,\r\n                                    showTime: tye === 'datetime'\r\n                                };\r\n                                break;\r\n                            default:\r\n                                return TextFilterControl(col);\r\n                        }\r\n                    }\r\n                }\r\n                return filterControlData;\r\n            } else {\r\n                switch (col.filter.type) {\r\n                    case ColumnFilterType.enum:\r\n                        return EnumFilterControl(col, col.filter.options);\r\n                    case ColumnFilterType.date:\r\n                    case ColumnFilterType.datetime:\r\n                        return DateFilterControl(col, col.filter.options);\r\n                    case ColumnFilterType.number:\r\n                        return NumberFilterControl(col);\r\n                    case ColumnFilterType.boolean:\r\n                        return BooleanFilterControl(col);\r\n                }\r\n            }\r\n        }\r\n\r\n        return filterControlData;\r\n    }\r\n\r\n\r\n\r\n    filterConditionChanged(e: {conditions: any[], controlData: any, from: 'toolbar' | 'panel'}) {\r\n        const items = e.conditions;\r\n\r\n        if (!this.conditions || !this.conditions.length) {\r\n            this.conditions.push(...items);\r\n            this.controlData.push({...e.controlData});\r\n        } else {\r\n            /// TODO, CONTROLDATA çç´¢å¼ä¸conditions çç´¢å¼å¾å¯è½ä¸æ¯1ä¸ª\r\n            if (e.from === 'toolbar') {\r\n                this.conditions = [...items];\r\n            } else {\r\n                this.conditions = this.conditions.filter(n => n.FilterField !== items[0].FilterField);\r\n                if (items.length === 1) {\r\n                    this.conditions.push({ ...items[0] });\r\n                } else {\r\n                    this.conditions.push(...items);\r\n                }\r\n            }\r\n\r\n            if (e.controlData) {\r\n                const ctrlIdx = this.controlData.findIndex(n => n.labelCode === e.controlData.labelCode);\r\n                if (ctrlIdx > -1) {\r\n                    this.controlData[ctrlIdx] = {...e.controlData};\r\n                } else {\r\n                    this.controlData.push({...e.controlData});\r\n                }\r\n            }\r\n        }\r\n\r\n        this.filterChanged.next({conditions: [...this.conditions], controlData: [...this.controlData] });\r\n    }\r\n\r\n    removeCondition(e, emitRemove = false) {\r\n        if (this.conditions && this.conditions.length) {\r\n            this.conditions = this.conditions.filter(n => n.FilterField !== e.labelCode);\r\n            this.controlData = this.controlData.filter(n => n.labelCode !== e.labelCode);\r\n        }\r\n        this.filterChanged.next({conditions: [...this.conditions], controlData: [...this.controlData] });\r\n        if (emitRemove) {\r\n            this.removeFilter.next(e);\r\n        }\r\n    }\r\n\r\n    clearAll() {\r\n        this.conditions = [];\r\n        this.controlData = [];\r\n        this.clearAllFilter.next(null);\r\n    }\r\n}\r\n","import { DatagridComponent } from './../datagrid.component';\r\nimport { Injectable } from '@angular/core';\r\nimport { delay } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class SelectionModeService {\r\n    dgRef: DatagridComponent = null;\r\n    private oldSettings: any = null;\r\n    private selectStartEvent: any = null;\r\n    private events = null;\r\n    constructor(grid: DatagridComponent) {\r\n        this.dgRef = grid;\r\n        if (this.dgRef.selectionMode === 'default') {\r\n            grid.zone.runOutsideAngular(() => {\r\n                this.removeEvents();\r\n                this.events = this.registerStopSelectionEvent();\r\n            });\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.dgRef = null;\r\n        this.removeEvents();\r\n    }\r\n\r\n    removeEvents() {\r\n        if (this.events && this.events.length) {\r\n            this.events.forEach(e => {\r\n                e();\r\n            });\r\n\r\n            this.events = null;\r\n        }\r\n    }\r\n\r\n    public toggleMode() {\r\n        if (this.dgRef) {\r\n            if (this.dgRef.selectionMode === 'default') {\r\n                this.enableWindowsSelectionMode();\r\n            } else {\r\n                this.restoreSettings();\r\n            }\r\n        }\r\n    }\r\n\r\n    public enableWindowsSelectionMode() {\r\n        if (this.dgRef) {\r\n            this.oldSettings = {\r\n                showCheckbox: this.dgRef.showCheckbox,\r\n                keepSelect: this.dgRef.keepSelect,\r\n                onlySelectSelf: this.dgRef.onlySelectSelf,\r\n                selectOnCheck: this.dgRef.selectOnCheck,\r\n                checkOnSelect: this.dgRef.checkOnSelect\r\n            };\r\n\r\n            this.dgRef.showCheckbox = true;\r\n            this.dgRef.keepSelect = true;\r\n            this.dgRef.onlySelectSelf = false;\r\n            this.dgRef.selectOnCheck = true;\r\n            this.dgRef.checkOnSelect = true;\r\n\r\n            this.dgRef.dfs.updateProperty('keepSelect', true);\r\n            this.dgRef.dfs.updateProperty('onlySelectSelf', false);\r\n            this.dgRef.dfs.updateProperty('selectOnCheck', true);\r\n            this.dgRef.dfs.updateProperty('checkOnSelect', true);\r\n        }\r\n    }\r\n\r\n    public restoreSettings() {\r\n        if (this.dgRef && this.oldSettings) {\r\n            this.dgRef.showCheckbox = this.oldSettings.showCheckbox;\r\n            this.dgRef.keepSelect = this.oldSettings.keepSelect;\r\n            this.dgRef.onlySelectSelf = this.oldSettings.onlySelectSelf;\r\n            this.dgRef.selectOnCheck = this.oldSettings.selectOnCheck;\r\n            this.dgRef.checkOnSelect = this.oldSettings.checkOnSelect;\r\n\r\n\r\n            this.dgRef.dfs.updateProperty('keepSelect', this.oldSettings.keepSelect);\r\n            this.dgRef.dfs.updateProperty('onlySelectSelf', this.oldSettings.onlySelectSelf);\r\n            this.dgRef.dfs.updateProperty('selectOnCheck', this.oldSettings.selectOnCheck);\r\n            this.dgRef.dfs.updateProperty('checkOnSelect', this.oldSettings.checkOnSelect);\r\n        }\r\n    }\r\n\r\n\r\n    private registerStopSelectionEvent() {\r\n        const kd = this.dgRef.render2.listen(document, 'keydown', (event: any) => {\r\n            if (event.ctrlKey || event.shiftKey) {\r\n                this.unselectable();\r\n            }\r\n        });\r\n\r\n        const ku = this.dgRef.render2.listen(document, 'keyup', (event: any) => {\r\n            if (event.ctrlKey || event.shiftKey || event.keyCode === 17 || event.keyCode === 16) {\r\n                this.enableSelectable();\r\n            }\r\n        });\r\n\r\n        return [ kd, ku];\r\n    }\r\n\r\n    private unselectable() {\r\n        this.dgRef.render2.setAttribute(this.dgRef.dgContainer.nativeElement, 'unselectable', 'on');\r\n        this.dgRef.render2.setAttribute(this.dgRef.dgContainer.nativeElement, 'onselectstart', 'return false');\r\n        this.dgRef.render2.setStyle(this.dgRef.dgContainer.nativeElement, '-moz-user-select', 'none');\r\n    }\r\n\r\n    private enableSelectable() {\r\n        this.dgRef.render2.removeAttribute(this.dgRef.dgContainer.nativeElement, 'unselectable');\r\n        this.dgRef.render2.removeAttribute(this.dgRef.dgContainer.nativeElement, 'onselectstart');\r\n        this.dgRef.render2.removeStyle(this.dgRef.dgContainer.nativeElement, '-moz-user-select');\r\n    }\r\n\r\n    beforRowClick(param: any) {\r\n        if (this.dgRef && this.dgRef.selectionMode === 'default') {\r\n            const isSelected = this.dgRef.dfs.isRowSelected(param.id);\r\n            const isCtrlKey = param.e.ctrlKey;\r\n            const isShiftKey = param.e.shiftKey;\r\n\r\n            this.dgRef.endEditing();\r\n\r\n            if (!isCtrlKey && !isShiftKey) {\r\n                if (!isSelected) {\r\n                    this.dgRef.clearCheckeds();\r\n                } else {\r\n                    // å¦ææå¤æ¡éï¼ç§»é¤å¶ä»éä¸­è¡\r\n                    const currentPagerIds = this.dgRef.getRows().map(n => n.id);\r\n                    const unCheckIDs = this.dgRef.checkValues.filter(i => currentPagerIds.includes(i) && i != param.id);\r\n                    const unSelectIds = this.dgRef.checkValues.filter(n => !currentPagerIds.includes(n));\r\n                    // const unCheckIDs = this.dgRef.checkValues.filter(n => n != param.id);\r\n                    if (unCheckIDs && unCheckIDs.length) {\r\n                        this.dgRef.unCheckRows(unCheckIDs, true);\r\n                        this.dgRef.clearSelections([param.id, ...unSelectIds]);\r\n                    }\r\n                }\r\n            } else {\r\n                if (isShiftKey) {\r\n                    let focusIndex = this.dgRef.focusRowIndex;\r\n                    if (focusIndex === -1) {\r\n                        focusIndex = 0;\r\n                    }\r\n\r\n                    const endIndex = param.rowIndex;\r\n                    let start = focusIndex;\r\n                    let end = endIndex;\r\n                    if (focusIndex > endIndex) {\r\n                        start = endIndex;\r\n                        end = focusIndex;\r\n                    }\r\n\r\n                    const data = this.dgRef.getRows();\r\n                    const checkedItems = [...data].splice(start, end - start + 1);\r\n                    const willCheckIds = checkedItems.map(n => {\r\n                        return this.dgRef.dfs.primaryId(n);\r\n                    });\r\n\r\n                    if (!isCtrlKey) {\r\n                        this.dgRef.clearCheckeds(false, false);\r\n                    }\r\n                    // this.dgRef.selectValues = willCheckIds;\r\n                    this.dgRef.checkRows(willCheckIds, true);\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            if (isSelected && isCtrlKey) {\r\n                param.e.stopPropagation();\r\n                // æ§è¡åæ¶éæ©\r\n                this.dgRef.unCheckRow(param.id);\r\n                return true;\r\n            }\r\n            this.dgRef.beforeSelect(param).pipe(\r\n                delay(100)\r\n            ).subscribe((canSelect: boolean) => {\r\n                if (canSelect) {\r\n                    this.dgRef.dfs.selectRow(param.rowIndex, param.rowData);\r\n                    if (this.dgRef.selectedRow) {\r\n                        this.dgRef.selectedRow.dr = param.dr;\r\n                    }\r\n                }\r\n                this.dgRef.rowClick.emit({ data: param.rowData, grid: this.dgRef, dblclick: false });\r\n                this.dgRef.dgs.setSelecedRow.emit({ selected: true, id: this.dgRef.dfs.primaryId(param.rowData) });\r\n            });\r\n\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    endRowClick() {\r\n        if (this.dgRef && this.dgRef.selectionMode === 'default') {\r\n            this.dgRef.checkOnSelect = false;\r\n        }\r\n    }\r\n}\r\n\r\n","\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-06 07:43:07\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-11-30 16:42:51\r\n * @QQ: 1055818239\r\n * @Version: v0.8.0\r\n * - 2021/04/07 å¢å  enableHighlightCell å±æ§ï¼æ¯æéä¸­ååæ ¼é«äº®\r\n */\r\n\r\nimport {\r\n    Component, OnInit, Input, ViewEncapsulation,\r\n    ContentChildren, QueryList, Output, EventEmitter, Renderer2, OnDestroy, OnChanges,\r\n    SimpleChanges, ChangeDetectionStrategy, ChangeDetectorRef, Injector, HostBinding,\r\n    AfterContentInit, NgZone, ElementRef, ViewChild, AfterViewInit, ApplicationRef, TemplateRef, HostListener, DoCheck\r\n} from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { FormGroup, ValidatorFn } from '@angular/forms';\r\nimport ResizeObserver from 'resize-observer-polyfill';\r\nimport { of, Subscription, Observable, from, BehaviorSubject } from 'rxjs';\r\nimport { DataColumn, CustomStyle, MoveDirection, ColumnGroup, ColumnFilterType } from './types/data-column';\r\nimport { DatagridFacadeService } from './services/datagrid-facade.service';\r\nimport { DatagridColumnDirective } from './components/columns/datagrid-column.directive';\r\nimport { CellInfo, IgnoreProperties, SelectedRow } from './services/state';\r\nimport { RestService, DATAGRID_REST_SERVICEE } from './services/rest.service';\r\nimport { DatagridService } from './services/datagrid.service';\r\nimport { GRID_EDITORS, CELL_SELECTED_CLS, GRID_VALIDATORS, SIZE_TYPE, GRID_SETTINGS_SERVICE, GRID_SETTINGS_HTTP, CELL_EDITING_CLS, TR_PREFIX } from './types/constant';\r\nimport { DomHandler } from './services/domhandler';\r\nimport { Utils } from './utils/utils';\r\nimport { CommonUtils, DebugService, FarrisComponentInstanceService } from '@farris/ui-common';\r\nimport { ColumnFormatService } from '@farris/ui-common/column';\r\nimport { flatten, cloneDeep } from 'lodash-es';\r\nimport { ScrollbarDirective } from './scrollbar/scrollbar.directive';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { BeforEventParam, RowEditParam } from './types/event-params';\r\nimport { DatagridColumnsHelper } from './services/datagrid-columns.helper';\r\nimport { DatagridFilterService } from './services/datagrid-filter.service';\r\nimport { debounceTime, takeUntil } from 'rxjs/operators';\r\n\r\nimport { SmartFilterToolbarComponent } from './components/filter-toolbar/smart-filter-toolbar.component';\r\nimport { DatagridSmartFilterService } from './services/datagrid-smart-filter.service';\r\nimport { IdService } from '@farris/ui-common';\r\nimport { SelectionModeService } from './services/selection-mode.service';\r\nimport { ContextMenuItem } from '@farris/ui-context-menu';\r\nimport { HttpClient } from '@angular/common/http';\r\n@Component({\r\n    selector: 'farris-datagrid',\r\n    templateUrl: './datagrid.component.html',\r\n    encapsulation: ViewEncapsulation.None,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [\r\n        DatagridFacadeService,\r\n        DatagridService,\r\n        DatagridSmartFilterService\r\n    ],\r\n    exportAs: 'datagrid',\r\n    styles:[\r\n        `.f-datagrid-header table{\r\n            background-color: #F1F3F7;\r\n        }`\r\n    ]\r\n})\r\nexport class DatagridComponent implements OnInit, OnDestroy, OnChanges, AfterContentInit, AfterViewInit, DoCheck {\r\n    private auther = `Lucas Huang - QQ:1055818239`;\r\n    private version = '0.8.x';\r\n    __component_type__ = 'DatagridComponent';\r\n\r\n    /** å¯ç¨æ§è½ä¼åçï¼é»è®¤ä¸º false */\r\n    @Input() fast = false;\r\n\r\n    @HostBinding('style.position') pos = 'relative';\r\n    @HostBinding('class.f-datagrid-full') hostCls = false;\r\n    @HostBinding('class.f-datagrid-auto-height') get autoHeightCls() {\r\n        return this.autoHeight;\r\n    }\r\n    /** ä½¿ç¨ä¸»é¢ */\r\n    @Input() useThemes = true;\r\n    // ç¨äºå­å¨ç¨æ·ä¸ªæ§åè®¾ç½®\r\n    @Input() id = '';\r\n    /** èªå¨é«åº¦ - å¯ç¨æ­¤å±æ§åï¼å°±æ¯ä¸ä¸ªæ®æ®ééç table , ä¸è½ç¼è¾ï¼ä¸è½æåºï¼ä¸è½åé¡µï¼ä¸è½... å°±æ¯ä¸å¡è */\r\n    @Input() useHtmlTable = false;\r\n    /** èªå¨é«åº¦ */\r\n    @Input() autoHeight = false;\r\n    /** æ¾ç¤ºè¾¹æ¡ */\r\n    @Input() showBorder = false;\r\n    /** å¯ç¨æé©¬çº¿  */\r\n    @Input() striped = true;\r\n    /** å®½åº¦ */\r\n    @Input() width = 800;\r\n    /** é«åº¦ */\r\n    @Input() height = 300;\r\n\r\n    /** æ¾ç¤ºè¡¨å¤´ */\r\n    @Input() showHeader = true;\r\n    /** è¡¨å¤´-åè¡é«åº¦ */\r\n    @Input() headerHeight = 35;\r\n    /** è¡¨å¤´æè¡ */\r\n    @Input() headerWrap = false;\r\n    /** æ¾ç¤ºé¡µè */\r\n    @Input() showFooter = false;\r\n    /** é¡µèé»è®¤è¡é« */\r\n    @Input() footerHeight = 29;\r\n    /** é¡µèæ°æ®æ¥æº, é»è®¤ä¸º client */\r\n    @Input() footerDataFrom: 'server' | 'client' = 'client';\r\n    /** é¡µèåè®¡è¡æ¨¡æ¿ */\r\n    @Input() footerTemplate: TemplateRef<any>;\r\n    /** åè®¡è¡æ¾ç¤ºä½ç½®ï¼é»è®¤ä¸ºåºé¨ */\r\n    @Input() footerPosition: 'top' | 'bottom' | 'both' = 'bottom';\r\n    /** é¡µèè¡èªå®ä¹æ ·å¼ */\r\n    @Input() footerStyler: () => { cls?: string, style?: any };\r\n    /** è¡é« */\r\n    @Input() rowHeight = 29;\r\n\r\n    /**\r\n     * è®¾ç½®grid è¡é«å°ºå¯¸\r\n     * sm: å°ï¼md: æ­£å¸¸ï¼ lg: å¤§ï¼xl: è¶å¤§\r\n     */\r\n    private _sizeType: 'sm' | 'md' | 'lg' | 'xl' = 'sm';\r\n    get sizeType() {\r\n        return this._sizeType;\r\n    }\r\n    @Input() set sizeType(val) {\r\n        this._sizeType = val;\r\n    }\r\n\r\n    /** å¡«åå®¹å¨ */\r\n    private _fit = false;\r\n    @Input() get fit() {\r\n        return this._fit;\r\n    }\r\n    set fit(val: boolean) {\r\n        this._fit = val;\r\n        this.hostCls = val;\r\n    }\r\n    /** å¦æä¸ºçï¼åèªå¨å±å¼/æ¶ç¼©åçå¤§å°ä»¥éåç½æ ¼å®½åº¦å¹¶é²æ­¢æ°´å¹³æ»å¨ã */\r\n    private _fitColumns = false;\r\n    @Input() get fitColumns() {\r\n        return this._fitColumns;\r\n    }\r\n    set fitColumns(val: boolean) {\r\n        this._fitColumns = val;\r\n        this.setFitColumns(val);\r\n    }\r\n    /** æ ¹æ®gridçå®½åº¦èªå¨è°æ´åå®½åº¦ */\r\n    private _autoFitColumns = false;\r\n    @Input() get autoFitColumns() {\r\n        return this._autoFitColumns;\r\n    }\r\n    set autoFitColumns(val) {\r\n        this._autoFitColumns = val;\r\n        this.dfs.updateProperty('autoFitColumns', val);\r\n    }\r\n\r\n    /** ç¦ç¨ */\r\n    @Input() disabled = false;\r\n    /**\r\n     * æ»å¨æ¡æ¾ç¤ºæ¨¡å¼ï¼é»è®¤ä¸º auto\r\n     */\r\n    @Input() scrollBarShowMode: 'auto' | 'allways' = 'auto';\r\n    @Input() scrollBarOptions = {\r\n        width: 18,\r\n        height: 18\r\n    };\r\n    /** å½æ»å¨ä¸ç´æ¾ç¤ºæ¶ï¼æ¯å¦æ¾ç¤ºä¸¤ç«¯çç®­å¤´ */\r\n    @Input() showScrollArrow = false;\r\n\r\n    /** å¯æå¨åè®¾ç½®åå®½ */\r\n    @Input() resizeColumn = true;\r\n    /** æ¾ç¤ºè¡å· */\r\n    @Input() showLineNumber = false;\r\n    /** è¡å·è¡¨å¤´å­ç¬¦ */\r\n    @Input() lineNumberTitle = '';\r\n    /** è¡å·å®½åº¦ */\r\n    @Input() lineNumberWidth = 36;\r\n    /** é¼ æ æ»è¿ææå¼å³ï¼é»è®¤å¼å¯ */\r\n    @Input() rowHover = true;\r\n    /** åè®¸ç¼è¾æ¶ï¼åå»è¿å¥ç¼è¾ç¶æ; falseä¸ºåå»è¿å¥ç¼è¾ */\r\n    @Input() clickToEdit = true;\r\n\r\n    private _lockPagination = false;\r\n    /** éå®åé¡µæ¡ï¼éå®åé¡µç ç¹å»æ æ */\r\n    @Input() get lockPagination() {\r\n        return this._lockPagination;\r\n    }\r\n    set lockPagination(val: boolean) {\r\n        this._lockPagination = val;\r\n        if (this.dgPager) {\r\n            this.dgPager[val ? 'lock' : 'unlock']();\r\n        }\r\n    }\r\n\r\n    /** åé¡µä¿¡æ¯ */\r\n    private __pagination = true;\r\n    @Input() set pagination(val) {\r\n        if (this.__pagination !== val) {\r\n            this.__pagination = val;\r\n            this.dfs.updateProperty('pagination', val);\r\n            this.dgs.showGridHeader.emit();\r\n        }\r\n    }\r\n    get pagination() {\r\n        return this.__pagination;\r\n    }\r\n\r\n    /** åé¡µç»ä»¶èªå®ä¹åå®¹åºæ¨¡æ¿ */\r\n    @Input() pagerContentTemplate: TemplateRef<any> = null;\r\n    /** åé¡µæ¡å¯¹é½å±ç¤ºæ¹å¼ï¼ left, right, center   é»è®¤ä¸º right  */\r\n    @Input() pagerPos: 'left'|'center'| 'right' = 'right';\r\n\r\n    /** åé¡µæ¡æ¾ç¤ºæ¨¡å¼ï¼ default, simple */\r\n    @Input() pagerViewMode = 'default';\r\n    /** å¯ç¨æå¡å¨ç«¯åé¡µ */\r\n    @Input() pagerOnServer = true;\r\n    /** æ¯é¡µè®°å½æ° */\r\n    @Input() pageList = [10, 20, 30, 50, 100];\r\n    /** å½åé¡µç  */\r\n    @Input() pageIndex = 1;\r\n    /** æ¯é¡µè®°å½æ° */\r\n    @Input() pageSize = 20;\r\n    /** åé¡µåºé«åº¦ */\r\n    @Input() pagerHeight = 56;\r\n    /** æ¾ç¤ºæ¯é¡µè®°å½æ° */\r\n    @Input() showPageList = false;\r\n    /** æ¾ç¤ºåé¡µä¿¡æ¯ */\r\n    @Input() showPageInfo = true;\r\n    /** æ¾ç¤ºé¡µç  */\r\n    @Input() showPageNumber = true;\r\n    /** æ¾ç¤ºé¡µç æå¤§æ°é */\r\n    @Input() pagerLabelSize = 7;\r\n    /** æ¾ç¤ºè½¬è³æå®é¡µç è¾å¥æ¡ */\r\n    @Input() showGotoInput = false;\r\n    /** å¯ç¨è·¨é¡µå¤é */\r\n    @Input() enableMorePageSelect = false;\r\n    /** æ¾ç¤ºéä¸­åè¡¨ */\r\n    @Input() showSelectedList = false;\r\n    /** éä¸­åè¡¨ä¸­ï¼æ¯æ¡è®°å½æ¾ç¤ºçåå®¹ */\r\n    @Input() selectedItemFormatter: (data) => string;\r\n    /** ååæ ¼ä¿¡æ¯æç¤ºå»¶æ¶ï¼é»è®¤ 1000ms */\r\n    @Input() cellTipTimer = 1000;\r\n    /** grid åé¨å¤çåé¡µç¶æ */\r\n    @Input() controlPaginationState = true;\r\n    /** æ»è®°å½æ° */\r\n    private _total = 0;\r\n    get total() {\r\n        return this._total;\r\n    }\r\n\r\n    @Input() set total(val: number) {\r\n        this._total = val;\r\n        this.pagerOpts.totalItems = val;\r\n        if (!this.pagination) {\r\n            this.pagerOpts.itemsPerPage = val;\r\n        }\r\n        this.dfs.setTotal(val);\r\n    }\r\n    /** å¯ç¨éä¸­è¡ */\r\n    @Input() enableSelectRow = true;\r\n    /** å¯ç¨å¤é */\r\n    @Input() multiSelect = false;\r\n    /** å¯ç¨å¤éæ¶ï¼æ¯å¦æ¾ç¤ºcheckbox */\r\n    @Input() showCheckbox = false;\r\n    /** æ¾ç¤ºå¨écheckbox */\r\n    @Input() showAllCheckbox = false;\r\n    /** å½å¯ç¨å¤éæ¶ï¼ç¹å»è¡éä¸­ï¼åªåè®¸ä¸åªæä¸è¡è¢«éä¸­ã, é»è®¤ä¸º true */\r\n    @Input() onlySelectSelf = true;\r\n    /** å¯ç¨å¤éä¸æ¾ç¤ºcheckbox, éä¸­è¡åæ¶é©é, é»è®¤ä¸º false */\r\n    @Input() checkOnSelect = false;\r\n    /** å¯ç¨å¤éä¸æ¾ç¤ºcheckbox, é©éåéä¸­è¡, é»è®¤ä¸º false */\r\n    @Input() selectOnCheck = false;\r\n    /**\r\n     * è¡éä¸­æ¨¡å¼ï¼custom: èªå®ä¹ï¼ default: é»è®¤ ä»¿Windowsèµæºç®¡çå¨éä¸­\r\n     * æ³¨æï¼ æ­¤å±æ§ä»å¤éï¼æ¾ç¤ºå¤éæ¡ææ\r\n     * addTime: 2021-12-14 by LUCAS HUANG\r\n     */\r\n    @Input() selectionMode: 'custom' | 'default' = 'custom';\r\n    /**\r\n     * åå»è¡éä¸­åï¼å¨æ¬¡ç¹å»ä¸ä¼è¢«åæ¶éä¸­ç¶æ;\r\n     */\r\n    @Input() keepSelect = true;\r\n\r\n    /** æ°æ®ä¸ºç©ºæ¶çé«åº¦ */\r\n    @Input() emptyDataHeight = 240;\r\n    /** ç©ºæ°æ®æ¶ï¼æ¾ç¤ºçæç¤ºææ¬ */\r\n    @Input() emptyMessage = 'ææ æ°æ®';\r\n    /** æ æ°æ®æ¶çæ¨¡æ¿ */\r\n    @Input() emptyTemplate: TemplateRef<any> = null;\r\n\r\n    /** ä¸»é®å­æ®µ */\r\n    @Input() idField = 'id';\r\n    /** è¯·æ±æ°æ®æºçURL */\r\n    @Input() url: string;\r\n    /** æ°æ®æº */\r\n    @Input() data: any[];\r\n\r\n    /** é¡µèæ°æ® */\r\n    private _footerData: Observable<any> = of([]);\r\n    @Input() get footerData() {\r\n        return this._footerData;\r\n    }\r\n    set footerData(rows) {\r\n        if (rows && rows.subscribe) {\r\n            this._footerData = rows;\r\n        } else {\r\n            this._footerData = of(rows || []);\r\n        }\r\n        if (rows) {\r\n            this.setFooterHeight();\r\n        }\r\n        this.cd.detectChanges();\r\n    }\r\n\r\n    /** éªè¯ä¸éè¿æ¶å¯ä»¥ç»æç¼è¾ */\r\n    @Input() endEditByInvalid = true;\r\n\r\n    /** åéå */\r\n    private _columns = [];\r\n    @Input()\r\n    get columns() {\r\n        return this._columns;\r\n    }\r\n    set columns(values) {\r\n        this._columns = this.correctColumns(values);\r\n        this.dfs.updateProperty('columns', this._columns);\r\n    }\r\n\r\n    private _fields = [];\r\n    get fields() {\r\n        return this._fields;\r\n    }\r\n\r\n    @Input() set fields(cols) {\r\n        this._fields = cols;\r\n        this.columns = cols;\r\n        if (this.data) {\r\n            this.columnsChanged(false, true);\r\n        }\r\n    }\r\n    /** æ°æ®æè¡ï¼é»è®¤å¼ï¼true,å³å¨ä¸è¡æ¾ç¤ºï¼ä¸æè¡ã */\r\n    @Input() nowrap = true;\r\n    /** èæå è½½ */\r\n    @Input() virtualized = false;\r\n    /** æ¯å¦å¯ç¨å¼æ­¥å è½½æ°æ® */\r\n    @Input() virtualizedAsyncLoad = false;\r\n    /** è¡æ ·å¼ */\r\n    @Input() rowStyler: (rowData, rowIndex?: number) => { cls?: string, style?: any };\r\n    /** ç¼è¾æ¹å¼ï¼ row(æ´è¡ç¼è¾)ãcell(ååæ ¼ç¼è¾)ï¼é»è®¤ä¸º row */\r\n    @Input() editMode: 'row' | 'cell' = 'row';\r\n    /** ç¼è¾ç¶æ */\r\n    private _editable = false;\r\n    get editable() {\r\n        return this._editable;\r\n    }\r\n    @Input() set editable(v) {\r\n        if (this._editable !== v) {\r\n            this._editable = v;\r\n            this.cd.detectChanges();\r\n            this.dgs.updateEmptyStyle();\r\n        }\r\n    }\r\n    /** å¯ç¨å¯ç¼è¾ååæ ¼æ ·å¼ã */\r\n    @Input() enableEditCellStyle = false;\r\n\r\n    /** è¿å¥ç¼è¾ç¶ææ¶éæ¯å¦éä¸­ææ¬ï¼é»è®¤ä¸º false\r\n     * ä»ææ¬æ¡æ¯ææ­¤ç¹æ§\r\n     */\r\n    @Input() selectOnEditing = false;\r\n\r\n    /** ç¼è¾å¨é«åº¦ */\r\n    @Input() editorHeight = 30;\r\n    /** å¯ç¨è¿ç«¯æåº */\r\n    @Input() remoteSort = false;\r\n    /** æåºå­æ®µ */\r\n    @Input() sortName: string;\r\n    /** æåºæ¹å¼ asc | desc */\r\n    @Input() sortOrder: string;\r\n    /** åè®¸å¤åæåº */\r\n    @Input() multiSort: boolean;\r\n\r\n    @Input() hoverRowCls = 'f-datagrid-row-hover';\r\n\r\n    /** åè®¸ææ½åé¡ºåº */\r\n    @Input() enableDragColumn = false;\r\n\r\n    /** è¡åç»é¢æ¿é«åº¦ï¼é»è®¤ 50PX */\r\n    @Input() rowGroupPanelHeight = 50;\r\n    /** å¯ç¨åç»è¡ */\r\n    @Input() groupRows = false;\r\n    /** å¯ç¨è¡åç»åè®¡è¡ */\r\n    @Input() groupFooter = false;\r\n    /** åç»è¡æ¯å¦å±å¼ï¼é»è®¤ä¸º å±å¼  */\r\n    @Input() expandGroupRows = true;\r\n    /**\r\n     * åç»åè®¡è¡èªå®ä¹æ ·å¼ï¼\r\n     * åè®¸çå¼ä¸º\r\n     * - { cls: 'cssclassname, ', style: { color: 'red', border: 1px solid } }\r\n     * - (groupFooterRowData): { cls: 'cssclassname, ', style: { color: 'red', border: 1px solid } } => {}\r\n     */\r\n    @Input() groupFooterStyler: any;\r\n    /** åè®¡æ°æ®æ¾ç¤ºä½ç½®\r\n     * inGroupRow: ä¸åç»å¨åä¸è¡ï¼åå«ç¸å³åè®¡å­æ®µå¯¹é½\r\n     * groupFooterRow: å¨åç»æ°æ®æåå¢å ä¸è¡\r\n     * é»è®¤ä¸º groupFooterRow\r\n     */\r\n    @Input() groupSummaryPosition: 'inGroupRow' | 'groupFooterRow' = 'groupFooterRow';\r\n    /** åç»ä¿¡æ¯åå¹¶åæ°\r\n     * é»è®¤ä¸º 1\r\n     */\r\n    @Input() groupCellColSpan = 1;\r\n\r\n    /** åç»å­æ®µåç§°, å¤å­æ®µåç»ä»¥è±æéå·åé */\r\n    private _groupField = '';\r\n    groupFields$ = new BehaviorSubject([]);\r\n    get groupField() {\r\n        return this._groupField;\r\n    }\r\n    @Input() set groupField(val) {\r\n        this._groupField = val || '';\r\n\r\n        if (Array.isArray(this._groupField)) {\r\n            this._groupField = this._groupField.join(',');\r\n        }\r\n\r\n        if (this._groupField) {\r\n            this.groupFields$.next(this._groupField.split(','));\r\n        } else {\r\n            this.groupFields$.next([]);\r\n        }\r\n\r\n        this.dfs.updateProperty('groupField', this._groupField);\r\n    }\r\n    /** æ¾ç¤ºåç»å */\r\n    @Input() showGroupColumn = true;\r\n    /** åç»æ ¼å¼å */\r\n    @Input() groupFormatter: (groupRow: any) => any;\r\n    /** åç»è¡æ ·å¼ */\r\n    @Input() groupStyler: (groupRow: any) => { cls?: string, style?: any };\r\n\r\n    /** æ¾ç¤ºåç»åé¢æ¿ãé»è®¤ä¸º false */\r\n    private _showRowGroupPanel = false;\r\n    @Input() set showRowGroupPanel(val) {\r\n        this._showRowGroupPanel = val;\r\n    }\r\n    get showRowGroupPanel() {\r\n        return this.groupRows && this._showRowGroupPanel;\r\n    }\r\n\r\n    /** åå»è¡¨å¤´éåºåå®¹å®½åº¦ */\r\n    @Input() AutoColumnWidthUseDblclick = true;\r\n    /** è¡é©éåéä¸­ç¦ç¨è¡¨è¾¾å¼ */\r\n    @Input() disableRow: (row, index?: any) => boolean;\r\n    /** ä½¿ç¨åé¨è¿æ»¤å¨; é»è®¤ä¸º false */\r\n    @Input() useDefaultFilter = false;\r\n    /** è¿æ»¤å¾æ ä¸æåºå¾æ åå¹¶ï¼æ­¤å±æ§ä¸ enableFilterRow äºæ¥ */\r\n    @Input() enableSmartFilter = false;\r\n    /** æ¾ç¤ºè¿æ»¤è¡ */\r\n    @Input() enableFilterRow = false;\r\n    /** æå¡å¨ç«¯è¿æ»¤ */\r\n    @Input() remoteFilter = false;\r\n    /** å¯ç¨è¿æ»¤æ¡ä»¶æ¾ç¤ºæ¡ */\r\n    @Input() showFilterBar = false;\r\n    /** è¿æ»¤æ¡ä»¶æ±æ»æ¡é«åº¦ï¼é»è®¤ 32px  */\r\n    @Input() filterBarHeight = 32;\r\n    @Input() filterRowHeight = 40;\r\n    @Input() conditions: any = {};\r\n\r\n    @Input() selectValue = null;\r\n    @Input() checkValues = [];\r\n    @Input() selectValues = [];\r\n\r\n    /** åå¹¶ååæ ¼ï¼åæ¯æçºµååå¹¶ */\r\n    @Input() mergeCell = false;\r\n    @Input() mergeFields = [];\r\n    /** åå¹¶ååæ ¼æ°æ®å¯ç¨å®¢æ·ç«¯æåº */\r\n    @Input() enableClientSortForMergeCell = false;\r\n    /** ä½¿ç¨é«çº§æ§å¶é¢æ¿(åè®¾ç½®) */\r\n    @Input() useControlPanel = false;\r\n    /** å¯ç¨ç®æ´æ§å¶é¢æ¿æ¨¡å¼ãé»è®¤ä¸º false */\r\n    @Input() enableSimpleMode = false;\r\n    /** ç¹å»åè®¾ç½®å¾æ ï¼é»è®¤æå¼çæ§å¶é¢æ¿ */\r\n    @Input() controlPanelMode: 'advanced' | 'simple' = 'advanced';\r\n    /** å¯ç¨åè®¾ç½®æ¹æ¡ */\r\n    @Input() enableScheme = false;\r\n    /** ç³»ç»é¢å¶æ¹æ¡åç§° */\r\n    @Input() defaultSchemeName = 'ç³»ç»é¢å¶';\r\n\r\n    /** é»æ­¢click äºä»¶åæ³¡ */\r\n    @Input() stopPropagation = true;\r\n    /**\r\n     * (202105 å¼ç¨)\r\n     * ç¹å»ååæ ¼è¿è¡ç¼è¾ç¶ææ¶ï¼å³é­å¶ä»Gridçç¼è¾å¨ãé»è®¤ falseï¼\r\n     * å¤ä¸ªåè¡¨å­æ¶ï¼ä»æä¸ä¸ªåè¡¨ä¸­æç¼è¾ç¶æï¼å¶ä»åè¡¨ç»æç¼è¾\r\n     */\r\n    @Input() closeOtherGridEditor = false;\r\n    /** å½æ°æ®æºä¸ºç©ºæ¶ï¼æ¸ç©ºå·²éè®°å½ */\r\n    @Input() clearSelectionsWhenDataIsEmpty = true;\r\n    /** å¯ç¨å³é®èåï¼é»è®¤ä¸º false */\r\n    @Input() enableContextMenu = false;\r\n    /** å³é®èåæ°æ® */\r\n    @Input() contextMenus: ContextMenuItem[] = null;\r\n\r\n    @Output() selectValueChange = new EventEmitter();\r\n    @Output() checkValuesChange = new EventEmitter();\r\n    @Output() selectValuesChange = new EventEmitter();\r\n\r\n    @Input() beforeEdit: (param: RowEditParam) => Observable<boolean>;\r\n    @Output() beginEdit = new EventEmitter<RowEditParam>();\r\n    @Input() afterEdit: (rowIndex: number, rowData: any, column?: DataColumn, editor?: any) => Observable<boolean>;\r\n    @Output() endEdit = new EventEmitter<{ rowIndex: number, rowData: any, column?: DataColumn, value?: any }>();\r\n    @Output() cancelEdited = new EventEmitter<string>();\r\n\r\n    @Output() scrollY = new EventEmitter();\r\n\r\n    @Output() pageSizeChanged = new EventEmitter();\r\n    @Output() pageChanged = new EventEmitter();\r\n\r\n    @Output() loadSuccess = new EventEmitter();\r\n\r\n    @Output() filterChanged = new EventEmitter();\r\n\r\n    @Input() beforeSelect: (params: BeforEventParam) => Observable<boolean>;\r\n    @Input() beforeUnselect: (params: BeforEventParam) => Observable<boolean>;\r\n    @Input() beforeCheck: (params: BeforEventParam) => Observable<boolean>;\r\n    @Input() beforeUncheck: (params: BeforEventParam) => Observable<boolean>;\r\n    @Input() beforeSortColumn: (field: string, order: string, instance: DatagridComponent) => Observable<boolean>;\r\n    /** å¯ç¨éä¸­ååæ ¼é«äº®æ¾ç¤º */\r\n    @Input() enableHighlightCell = false;\r\n    /**  éä¸­çæ°æ®å§ç»ä»æ°æ®æºä¸­è·å. é»è®¤ä¸º false */\r\n    @Input() checkedRowsDataFromSource = false;\r\n    /** å½åååæ ¼ä¸ºåªè¯»æ¶ï¼ä½¿ç¨tab é®è·³å°ä¸ä¸ªååæ ¼æ¶ï¼æ¯å¦åè®¸è¿å¥ç¼è¾ç¶æï¼é»è®¤ä¸º false;\r\n     * é»è®¤æåµä¸ï¼å½åååæ ¼åªè¯»ï¼æTABè·³å°ä¸ä¸ªCELL æ¶ï¼éä¸­CELL ï¼åè½¦è¿å¥ç¼è¾ã\r\n     * å¼å¯åï¼ä¸ä¸ªååæ ¼èªå¨è¿å¥ç¼è¾ç¶æã\r\n     */\r\n    @Input() editcellWhenTabKeydwon = false;\r\n\r\n    /** ååæ ¼ç¹å»åäºä»¶ */\r\n    @Output() beforeClickCell = new EventEmitter<RowEditParam>();\r\n\r\n    @Output() dblclickRow = new EventEmitter();\r\n    @Output() selectChanged = new EventEmitter<SelectedRow>();\r\n    @Output() unSelect = new EventEmitter<SelectedRow>();\r\n    @Output() selectAll = new EventEmitter<SelectedRow[]>();\r\n    @Output() unSelectAll = new EventEmitter();\r\n    /** å¼æ­¥è¯·æ±èæå è½½ */\r\n    @Output() scrollYLoad = new EventEmitter<{ pager: number, pageSize: number }>();\r\n\r\n    @Output() checked = new EventEmitter<SelectedRow>();\r\n    @Output() unChecked = new EventEmitter<SelectedRow>();\r\n    @Output() checkAll = new EventEmitter<SelectedRow[]>();\r\n    @Output() unCheckAll = new EventEmitter<SelectedRow[]>();\r\n    @Output() checkedChange = new EventEmitter<SelectedRow[]>();\r\n\r\n    @Output() columnSorted = new EventEmitter<any>();\r\n\r\n    @Output() rowClick = new EventEmitter();\r\n    @Output() rowAppended = new EventEmitter();\r\n    @Output() rowDeleted = new EventEmitter();\r\n    @Output() rowUpdated = new EventEmitter();\r\n\r\n    @Output() dataChange = new EventEmitter();\r\n\r\n    /** æåä¸è¡çæåååæ ¼åè½¦å¤çäºä»¶ */\r\n    @Output() lastCellEnterHandle = new EventEmitter();\r\n\r\n    /** åç»å­æ®µååå */\r\n    @Output() groupFieldChange = new EventEmitter();\r\n    /** æå¨åæ¹ååæ¾ç¤ºä½ç½®åè§¦å */\r\n    @Output() columnMoved = new EventEmitter();\r\n    /** ååæ ¼ç¹å»äºä»¶ */\r\n    @Output() cellClick = new EventEmitter();\r\n\r\n    @ContentChildren(DatagridColumnDirective) dgColumns?: QueryList<DatagridColumnDirective>;\r\n    @ViewChild('dgPager') dgPager: any;\r\n    @ViewChild('resizeProxy') resizeProxy: ElementRef;\r\n    @ViewChild('resizeProxyBg') resizeProxyBg: ElementRef;\r\n    @ViewChild('datagridContainer') dgContainer: ElementRef;\r\n    @ViewChild('longTextArea') longTextArea: ElementRef;\r\n    @ViewChild('smartfiltertoolbar') smartFilterToolbar: SmartFilterToolbarComponent;\r\n    colGroup: ColumnGroup;\r\n\r\n    private _loading = false;\r\n    get loading() {\r\n        return this._loading;\r\n    }\r\n    set loading(val: boolean) {\r\n        this._loading = val;\r\n        if (!this.cd['destroyed']) {\r\n            this.cd.detectChanges();\r\n        }\r\n    }\r\n\r\n    get selections(): SelectedRow[] {\r\n        return this.dfs.getSelections();\r\n    }\r\n\r\n    get checkeds() {\r\n        return this.checkedRows;\r\n    }\r\n\r\n    get checkedRows() {\r\n        const chkeds = this.dfs.getCheckeds();\r\n        if (this.enableMorePageSelect) {\r\n            if (chkeds && chkeds.length) {\r\n                if (!this.checkedRowsDataFromSource) {\r\n                    return [...chkeds];\r\n                }\r\n                // ä»æ°æ®æºä¸­è·åææ°æ°æ®\r\n                return chkeds.map(n => {\r\n                    const d = this.dfs.findRow(n.id);\r\n                    if (d) {\r\n                        n.data = d.data;\r\n                    }\r\n                    return n;\r\n                });\r\n            }\r\n        } else {\r\n            if (this.data && this.data.length) {\r\n                const temp = this.data.map(n => n[this.idField]);\r\n                if (!this.checkedRowsDataFromSource) {\r\n                    return chkeds.filter(n => temp.includes(n.id));\r\n                }\r\n                // ä»æ°æ®æºä¸­è·åææ°æ°æ®\r\n                return chkeds.filter(n => temp.includes(n.id)).map(n => {\r\n                    const d = this.dfs.findRow(n.id);\r\n                    if (d) {\r\n                        n.data = d.data;\r\n                    }\r\n                    return n;\r\n                });\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n\r\n    set checkedRows(rows: any[]) {\r\n        if (rows && rows.length) {\r\n            rows = rows.map(r => {\r\n                if (r.data) {\r\n                    return r;\r\n                }\r\n                return {\r\n                    id: r[this.idField],\r\n                    data: r\r\n                };\r\n            });\r\n        }\r\n\r\n        this.dfs.updateProperty('checkedRows', rows || []);\r\n        this.initSelectOrChecked();\r\n        this.cd.markForCheck();\r\n    }\r\n\r\n    private _selectedRow = null;\r\n    get selectedRow(): SelectedRow {\r\n        return this._selectedRow;\r\n    }\r\n    set selectedRow(row) {\r\n        if (row) {\r\n            if (this.selectValue != row.id) {\r\n                this._selectedRow = row;\r\n                this.selectValue = row.id;\r\n                this.selectValueChange.emit(row.id);\r\n                this.selectChanged.emit(row);\r\n            }\r\n        } else {\r\n            this.unSelect.emit(this._selectedRow);\r\n            this.selectValue = null;\r\n            this.selectValueChange.emit('');\r\n            this._selectedRow = null;\r\n        }\r\n        // this.cd.detectChanges();\r\n    }\r\n\r\n    ds = {\r\n        index: 0,\r\n        rows: [],\r\n        top: 0,\r\n        bottom: 0,\r\n        scrolling: false // æ¯å¦ç±æ»å¨æ¡è§¦å\r\n    };\r\n\r\n    pagerOpts: any = {};\r\n    restService: RestService;\r\n    editors: { [key: string]: any } = {};\r\n\r\n    validators: { name: string, value: ValidatorFn }[] = [];\r\n\r\n    currentCell: CellInfo;\r\n    flatColumns: DataColumn[];\r\n    footerWidth = 0;\r\n\r\n    clickDelay = 150;\r\n    private resizeColumnInfo = {\r\n        proxyLineEdge: 0,\r\n        startWidth: 0,\r\n        startX: 0,\r\n        left: 0\r\n    };\r\n\r\n    private ro: ResizeObserver | null = null;\r\n    subscriptions: Subscription[] = [];\r\n    realHeaderHeight = 0;\r\n    isSingleClick: boolean;\r\n\r\n    docuemntCellClickEvents: any;\r\n    documentCellClickHandler: any;\r\n    documentCellKeydownEvents: any;\r\n    documentCellKeydownHandler: any;\r\n\r\n    // å¼¹çªä¸­ä½¿ç¨æ¶ï¼çªå£ç¹å»äºä»¶å¤ç\r\n    private modalClickEvent = null;\r\n\r\n    // è¡éä¸­é®çäºä»¶\r\n    documentRowKeydownHandler: any;\r\n    // è¡ç¼è¾å¿«æ·é®\r\n    documentRowEditKeydownHanlder: any;\r\n    // document åå»æ¶ç»æè¡ç¼è¾\r\n    documentClickEndRowEditHandler: any;\r\n\r\n    pending = false;\r\n    public colFormatSer: ColumnFormatService;\r\n    scrollInstance: ScrollbarDirective = null;\r\n    // æ¬å°åæå¡\r\n    localeService: LocaleService;\r\n    // åå¹¶ååè¾å©ä¿¡æ¯\r\n    mergeCellInfo = {};\r\n    ignoreTarget = ['INPUT', 'SELECT', 'TEXTAREA'];\r\n    clientFilterService: DatagridFilterService = null;\r\n\r\n    settingService: any; // DatagridSettingsService;\r\n\r\n    /* æ§å¶åå­æ®µåç§°: _datagrid-setting-control_ */\r\n    ControlPanelFeild = '_datagrid-setting-control_';\r\n\r\n    private _isResized = false;\r\n\r\n    gridSize = { width: this.width + 'px', height: this.height + 'px' };\r\n    // å®¢æ·ç«¯è¿æ»¤æ¶ï¼æ¯å¦è¿æ»¤è¡åçåå\r\n    clientFilterChanged = false;\r\n    // style's ID\r\n    styleSheetId = '';\r\n\r\n    groupRowPanelPlaceholder = '';\r\n    commonUtils: CommonUtils = null;\r\n    smartFilterService: DatagridSmartFilterService = null;\r\n    smartFilterResult = { controlData: [], conditions: [] };\r\n    smartFilterBarHeight = 32;\r\n    private idService: IdService;\r\n    private _active_datagrid_cls = 'datagrid-active';\r\n    private _blured_datagrid_cls = 'datagrid-blurred';\r\n\r\n    // èªå®ä¹gridæ ·å¼ï¼åè¡¨åå§åï¼ä¼æ·»å ä¸ä¸ªèªå®ä¹åç§°çæ ·å¼\r\n    _custom_datagrid_cls = 'datagrid';\r\n    // å¤éä»¿ windows éæ©æ¨¡å¼\r\n    sms: SelectionModeService;\r\n    // ç¦ç¹è¡ç´¢å¼ï¼æ¯æ¬¡è¡ç¹å»åæ´æ°\r\n    focusRowIndex = -1;\r\n\r\n    private documentBodyMouseDown = null;\r\n    private farrisInstances: FarrisComponentInstanceService = null;\r\n    private currentPagerData = [];\r\n    private resizeTimer = null;\r\n    private debugSer: DebugService = null;\r\n\r\n    constructor(\r\n        public cd: ChangeDetectorRef,\r\n        public el: ElementRef,\r\n        public inject: Injector, public zone: NgZone,\r\n        public dfs: DatagridFacadeService,\r\n        public dgs: DatagridService,\r\n        private app: ApplicationRef,\r\n        protected domSanitizer: DomSanitizer,\r\n        public render2: Renderer2) {\r\n\r\n        this.styleSheetId = 'DATAGRID-' + Utils.uuid();\r\n\r\n        this.localeService = this.inject.get(LocaleService);\r\n        this.restService = this.inject.get<RestService>(DATAGRID_REST_SERVICEE, null);\r\n        this.colFormatSer = this.inject.get(ColumnFormatService);\r\n        this.commonUtils = this.inject.get(CommonUtils, null);\r\n        this.clientFilterService = new DatagridFilterService(dfs, this.localeService, inject);\r\n        this.farrisInstances = this.inject.get(FarrisComponentInstanceService, null);\r\n        this.debugSer = this.inject.get(DebugService, null);\r\n\r\n        if (!this.debugSer) {\r\n            this.debugSer = new DebugService();\r\n        }\r\n\r\n        if (this.debugSer.useDebugMode) {\r\n            this.debugSer.useDebugMode();\r\n        }\r\n\r\n        this.smartFilterService = this.inject.get(DatagridSmartFilterService, null);\r\n        this.idService = this.inject.get(IdService, null);\r\n        this.dfs.localId = this.localeService.localeId;\r\n\r\n        this.settingService = this.inject.get(GRID_SETTINGS_SERVICE, null);\r\n        if (this.settingService) {\r\n            const settingsHttp = this.inject.get(GRID_SETTINGS_HTTP, null);\r\n            this.settingService.httpRestService = settingsHttp;\r\n        }\r\n\r\n        const dataSubscription = this.dfs.data$.subscribe((dataSource: any) => {\r\n            this.cleanDom();\r\n            const ds = { ...dataSource };\r\n\r\n            if (this.conditions && Object.keys(this.conditions).length && !this.remoteFilter && this.useDefaultFilter) {\r\n                ds.rows = this.clientFilterService.executeFilter(ds.rows, this.conditions);\r\n            }\r\n\r\n            this.ds = ds;\r\n\r\n            if (this.ds.rows && this.ds.rows.length) {\r\n                this.data = this.dfs.getData();\r\n\r\n                if (this.mergeCell && this.mergeFields && this.mergeFields.length) {\r\n                    this.mergeCellInfo = this.dgs.getMergeCellInfo3(this.ds.rows, [...this.mergeFields]);\r\n                }\r\n\r\n                this.setPagerTotal();\r\n                this.loadSuccess.emit(this.ds.rows);\r\n            } else {\r\n                this.data = [];\r\n                if (this.clearSelectionsWhenDataIsEmpty) {\r\n                    this.clearAll();\r\n                }\r\n            }\r\n\r\n            if (!this.ds.scrolling) {\r\n                this.updateFooterData();\r\n            }\r\n            // æ§è½ä¼å\r\n            this.cd.detectChanges();\r\n        });\r\n        this.subscriptions.push(dataSubscription);\r\n\r\n        const columnGroupSubscription = this.dfs.columnGroup$.pipe(\r\n            debounceTime(60)\r\n        ).subscribe(cg => {\r\n            if (cg) {\r\n                this.colGroup = cg;\r\n                this.footerWidth = cg.totalWidth;\r\n\r\n                this.cd.detectChanges();\r\n            }\r\n        });\r\n        this.subscriptions.push(columnGroupSubscription);\r\n\r\n        this.subscriptions.push(\r\n            this.dfs.gridSize$.subscribe((cg: any) => {\r\n                if (cg && cg.columnsGroup) {\r\n                    this.colGroup = cg.columnsGroup;\r\n                    this.cd.detectChanges();\r\n                }\r\n            })\r\n        );\r\n\r\n        this.initEditorAndValidator();\r\n\r\n        const currentCellSubscription = this.dfs.currentCell$.subscribe((cell: any) => {\r\n            this.currentCell = cell;\r\n            if (cell && cell.cellRef) {\r\n                cell.cellRef.isEditing = cell.isEditing;\r\n            }\r\n            this.unbindMoveSelectRowEvent();\r\n            this.bindDocumentEditListener();\r\n        });\r\n\r\n\r\n        this.dfs.selectRow$.subscribe((sr: SelectedRow) => {\r\n            if (!this.currentCell) {\r\n                this.bindDocumentMoveSelectRowEvent();\r\n            }\r\n            this.selectedRow = sr;\r\n            // this.cd.detectChanges();\r\n            // this.selectChanged.emit(sr);\r\n        });\r\n\r\n        this.subscriptions.push(currentCellSubscription);\r\n\r\n        DatagridColumnsHelper.gridInstance = this;\r\n\r\n        const filterChangedSubscription = this.dgs.onFilterChanged.subscribe((conditions: any) => {\r\n            // æ´æ°ç¼å­è¿æ»¤æ¡ä»¶\r\n            this.conditions = conditions;\r\n            this.clientFilterChanged = true;\r\n            this.filterData(conditions);\r\n        });\r\n        this.subscriptions.push(filterChangedSubscription);\r\n        // this.initPaginationOptions();\r\n\r\n        const footerDataSubscription = this.dgs.refreshFooterData.subscribe(() => {\r\n            this.updateFooterData();\r\n            // this.cd.detectChanges();\r\n        });\r\n        this.subscriptions.push(footerDataSubscription);\r\n        this.dgs.commonUtils = this.commonUtils;\r\n\r\n\r\n        this.dgs.focusRowChanged.subscribe((e: any) => {\r\n            if (e) {\r\n                this.focusRowIndex = e.rowIndex;\r\n            }\r\n        });\r\n    }\r\n\r\n    setCurrentPagerData($data) {\r\n        this.currentPagerData = $data;\r\n    }\r\n\r\n    writeConsole(msg, type: 'info'|'log'|'warn'|'error' = 'warn') {\r\n        if (this.debugSer) {\r\n            if (this.debugSer[type]) {\r\n                this.debugSer[type](msg);\r\n            } else {\r\n                console[type](msg)\r\n            }\r\n        }\r\n    }\r\n\r\n    private updateFooterData() {\r\n        if ((this.showFooter || this.pagerContentTemplate ) && this.footerDataFrom === 'client' ) {\r\n            this.footerData = of(this.dfs.getFooterData(this.data));\r\n        }\r\n    }\r\n\r\n    //#region Ng Event\r\n\r\n    ngDoCheck() {\r\n        // if (!this.checkValues) {\r\n        //     this.checkValues = [];\r\n        // }\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        this.sms = new SelectionModeService(this);\r\n\r\n        this.checkFilterStyle();\r\n\r\n        if (this.useThemes) {\r\n            this._checkSize();\r\n        }\r\n        this.checkOptions();\r\n        this.groupRowPanelPlaceholder = this.localeService.getValue('datagrid.groupRow.tips');\r\n        // this._flatColumns();\r\n        // this.setHeaderHeight();\r\n\r\n        if (this.smartFilterService) {\r\n\r\n            if (this.enableSmartFilter && this.showFilterBar) {\r\n                if (this.smartFilterResult && this.smartFilterResult.controlData && this.smartFilterResult.controlData.length) {\r\n                    this.filterBarHeight = this.smartFilterBarHeight;\r\n                } else {\r\n                    this.filterBarHeight = 0;\r\n                }\r\n            }\r\n\r\n            this.smartFilterService.filterChanged.subscribe((e: any) => {\r\n\r\n                if (!this.smartFilterResult && !e) {\r\n                    return;\r\n                }\r\n\r\n                if (JSON.stringify(this.smartFilterResult) !== JSON.stringify(e)) {\r\n                    this.smartFilterResult = e;\r\n                    this.clientFilterChanged = true;\r\n                    this.filterData(e.conditions);\r\n                    if (!this.smartFilterResult || (this.smartFilterResult.controlData && !this.smartFilterResult.controlData.length)) {\r\n                        this.onFilterBarResize(0);\r\n                    } else {\r\n                        if (!this.filterBarHeight) {\r\n                            this.onFilterBarResize(this.smartFilterBarHeight);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n\r\n        // åå»ºèªå®ä¹style å®¹å¨\r\n        // \r\n\r\n        this.setHeaderHeight();\r\n        this.setPagerHeight();\r\n        this.initBeforeEvents();\r\n        if (this.fit) {\r\n            this.setGridNewSizeWhenFit();\r\n        }\r\n\r\n        this.initState();\r\n        if (this.el && this.farrisInstances) {\r\n            this.farrisInstances.add(this.el.nativeElement, this);\r\n        }\r\n        if (!this.data || !this.data.length) {\r\n            this.fetchData(1, this.pageSize).subscribe(res => {\r\n                if (!res) {\r\n                    return;\r\n                }\r\n                this.total = res.total;\r\n\r\n                if (res.footer) {\r\n                    this.footerData = res.footer;\r\n                }\r\n\r\n                this.loadData(res.items);\r\n            });\r\n        }\r\n\r\n        this.zone.runOutsideAngular(() => {\r\n            this.render2.addClass(this.dgContainer.nativeElement, this._custom_datagrid_cls);\r\n            this.ro = new ResizeObserver((e) => {\r\n                const target = e[0].target as any;\r\n                if (target.style.display === 'none') {\r\n                    return;\r\n                }\r\n\r\n                const _w = e[0].contentRect.width;\r\n                if (!_w) {\r\n                    return;\r\n                }\r\n                const _h = e[0].contentRect.height;\r\n                const _floowW = Math.floor(_w);\r\n                const _roundW = Math.floor(_w);\r\n                const _floorH = Math.floor(_h);\r\n                const _roundH = Math.round(_h);\r\n\r\n                if ((this.width === _floowW || this.width === _roundW) && (this.height === _floorH || this.height === _roundH)) {\r\n                    this.dgs.restoreScrollbarPosition();\r\n                    return;\r\n                }\r\n\r\n                if (this.resizeTimer) {\r\n                    clearTimeout(this.resizeTimer);\r\n                }\r\n                this.resizeTimer = setTimeout(() => {\r\n                    this.calculateGridSize(this.fit);\r\n                }, 100);\r\n            });\r\n\r\n            this.ro.observe(this.el.nativeElement.parentElement);\r\n\r\n\r\n            document.body.removeEventListener('mousedown', this.documentBodyMouseDown, true);\r\n            document.body.addEventListener('mousedown', this.documentBodyMouseDown = (e) => {\r\n                if (!this.isEditing()) {\r\n                    return;\r\n                }\r\n                const target = e.target as any;\r\n                if (target.closest('td.f-datagrid-cell') ||\r\n                    target.closest('.date-overlay-container') ||\r\n                    target.closest('.time-picker-overlay') ||\r\n                    target.closest('.language-textbox-panel') ||\r\n                    target.closest('.farris-notify') ||\r\n                    target.closest('.comboPanel')) {\r\n                    return;\r\n                }\r\n                this.onDocumentMouseDown(e);\r\n            }, true);\r\n\r\n        });\r\n\r\n        if (this.showFooter) {\r\n            if (this.footerTemplate) {\r\n                const footerDom = this.el.nativeElement.querySelector('.f-datagrid-footer');\r\n                if (footerDom) {\r\n                    this.footerHeight = this.el.nativeElement.querySelector('.f-datagrid-footer').offsetHeight;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.fit) {\r\n            if (this.el.nativeElement.parentElement) {\r\n                this.el.nativeElement.parentElement.style.position = 'relative';\r\n            }\r\n            this.calculateGridSize(this.fit);\r\n        }\r\n\r\n\r\n        // æ£æ¥æ¯å¦å¯ç¨ä»¿windowsèµæºç®¡çå¨ä¸­çå¤éæ¨¡å¼\r\n        if (this.selectionMode && this.selectionMode === 'default' && this.multiSelect) {\r\n            this.sms.enableWindowsSelectionMode();\r\n        }\r\n\r\n        this.setCellStyle();\r\n    }\r\n\r\n    ngAfterContentInit() {\r\n        if (this.dgColumns && this.dgColumns.length) {\r\n            this.columns = this.dgColumns.map(dgc => {\r\n                return { ...dgc };\r\n            });\r\n        }\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.data && !changes.data.isFirstChange()) {\r\n            this.dfs.loadData(changes.data.currentValue);\r\n            this.dgs.dataSourceChanged();\r\n        }\r\n\r\n        if (changes.showCheckbox !== undefined && !changes.showCheckbox.isFirstChange()) {\r\n            this.dfs.showCheckbox(changes.showCheckbox.currentValue);\r\n        }\r\n\r\n        if (changes.showLineNumber !== undefined && !changes.showLineNumber.isFirstChange()) {\r\n            this.dfs.showLineNumber(changes.showLineNumber.currentValue);\r\n        }\r\n\r\n        if (changes.multiSelect !== undefined && !changes.multiSelect.isFirstChange()) {\r\n            this.dfs.setMultiSelect(changes.multiSelect.currentValue);\r\n        }\r\n\r\n        if (changes.checkOnSelect !== undefined && !changes.checkOnSelect.isFirstChange()) {\r\n            this.dfs.setCheckOnSelect(changes.checkOnSelect.currentValue);\r\n        }\r\n\r\n        if (changes.selectOnCheck !== undefined && !changes.selectOnCheck.isFirstChange()) {\r\n            this.dfs.setSelectOnCheck(changes.selectOnCheck.currentValue);\r\n        }\r\n\r\n        if (changes.onlySelectSelf !== undefined && !changes.onlySelectSelf.isFirstChange()) {\r\n            this.dfs.updateProperty('onlySelectSelf', changes.onlySelectSelf.currentValue);\r\n        }\r\n\r\n        if (changes.keepSelect !== undefined && !changes.keepSelect.isFirstChange()) {\r\n            this.dfs.updateProperty('keepSelect', changes.keepSelect.currentValue);\r\n        }\r\n\r\n        if (changes.headerWrap !== undefined && !changes.headerWrap.isFirstChange()) {\r\n            setTimeout(() => {\r\n                this.setHeaderHeight();\r\n                this.cd.detectChanges();\r\n                this.dfs.columnResizeEnd();\r\n            });\r\n        }\r\n\r\n        if (changes.nowrap !== undefined && !changes.nowrap.isFirstChange()) {\r\n            this.checkNowrap();\r\n            this.setRowHeight(false);\r\n            this.dgs.cellContentWrapChanged.emit();\r\n            this.dfs.updateProperty('nowrap', changes.nowrap.currentValue);\r\n        }\r\n\r\n        if (changes.multiSort !== undefined && !changes.multiSort.isFirstChange()) {\r\n            this.dfs.updateProperty('multiSort', changes.multiSort.currentValue);\r\n        }\r\n\r\n        if (changes.editable !== undefined && !changes.editable.isFirstChange()) {\r\n            this.dfs.updateProperty('editable', changes.editable.currentValue);\r\n            if (!changes.editable.currentValue) {\r\n                this.endCellEdit();\r\n            }\r\n            this.isSingleClick = null;\r\n\r\n            // if (this.editable) {\r\n            //     this.keepSelect = false;\r\n            // } else {\r\n            //     this.keepSelect = this.dfs._state.keepSelect;\r\n            // }\r\n            this.cd.detectChanges();\r\n        }\r\n\r\n        if (changes.showHeader !== undefined && !changes.showHeader.isFirstChange()) {\r\n            this.dfs.updateProperty('showHeader', changes.showHeader.currentValue);\r\n            this.headerHeightChange();\r\n            this.cd.detectChanges();\r\n        }\r\n\r\n        if (changes.showFilterBar !== undefined && !changes.showFilterBar.isFirstChange()) {\r\n            this.dfs.updateProperty('showFilterBar', changes.showFilterBar.currentValue);\r\n            this.dgs.showGridHeader.emit(this.realHeaderHeight);\r\n            // this.dgs.smartFilterBarExpand.emit();\r\n            let fh = 0;\r\n            if (this.conditions && this.conditions.length) {\r\n                fh = 32;\r\n            }\r\n            this.onFilterBarResize(fh);\r\n        }\r\n\r\n\r\n        if (changes.showFooter !== undefined && !changes.showFooter.isFirstChange()) {\r\n            this.dfs.updateProperty('showFooter', changes.showFooter.currentValue);\r\n            // this.cd.detectChanges();\r\n            this.calculateGridSize(this.fit);\r\n        }\r\n\r\n        if (changes.pagerOnServer !== undefined && !changes.pagerOnServer.isFirstChange()) {\r\n            this.dfs.updateProperty('pagerOnServer', changes.pagerOnServer.currentValue);\r\n            this.pagerOpts = Object.assign(this.pagerOpts, {\r\n                remote: this.pagerOnServer\r\n            });\r\n        }\r\n\r\n        if (changes.pageIndex !== undefined && !changes.pageIndex.isFirstChange()) {\r\n            this.dfs.updateProperty('pageIndex', changes.pageIndex.currentValue);\r\n            this.pagerOpts = Object.assign(this.pagerOpts, {\r\n                currentPage: this.pageIndex\r\n            });\r\n        }\r\n\r\n        if (changes.pageSize !== undefined && !changes.pageSize.isFirstChange()) {\r\n            this.dfs.updateProperty('pageSize', changes.pageSize.currentValue);\r\n            this.pagerOpts = Object.assign(this.pagerOpts, {\r\n                itemsPerPage: this.pageSize\r\n            });\r\n        }\r\n\r\n        if (changes.pageList !== undefined && !changes.pageList.isFirstChange()) {\r\n            this.dfs.updateProperty('pageList', changes.pageList.currentValue);\r\n            this.pagerOpts = Object.assign(this.pagerOpts, {\r\n                pageList: this.pageList\r\n            });\r\n        }\r\n\r\n        if (changes.columns !== undefined && !changes.columns.isFirstChange()) {\r\n            this.columnsChanged();\r\n        }\r\n\r\n        if (changes.sizeType !== undefined && !changes.sizeType.isFirstChange()) {\r\n            this._sizeType = changes.sizeType.currentValue;\r\n            this.setRowHeight(true);\r\n            this.dfs.updateProperty('rowHeight', this.rowHeight);\r\n            this.setFooterHeight();\r\n            this.refresh();\r\n            this.dgs.onRowHeightChange(this.rowHeight);\r\n        }\r\n\r\n        if (changes.rowHeight && !changes.rowHeight.isFirstChange()) {\r\n            this.setRowHeight(false);\r\n        }\r\n\r\n        if (changes.selectValue && !changes.selectValue.isFirstChange()) {\r\n            this.selectRow(this.selectValue, false);\r\n        }\r\n\r\n        if (changes.checkValues && !changes.checkValues.isFirstChange()) {\r\n            const checkIds = this.dfs.differenceBy(changes.checkValues.currentValue || [], changes.checkValues.previousValue || [], (v) => v);\r\n            if (checkIds && checkIds.length) {\r\n                this.checkRows(checkIds, false);\r\n            }\r\n\r\n            const uncheckIds = this.dfs.differenceBy(changes.checkValues.previousValue || [], changes.checkValues.currentValue || [], (v) => v);\r\n            if (uncheckIds && uncheckIds.length) {\r\n                this.unCheckRows(uncheckIds, false);\r\n            }\r\n\r\n            this.zone.runOutsideAngular(() => {\r\n                setTimeout(() => {\r\n                    this.checkValues = this.checkeds.map(r => r.id);\r\n                    this.checkValuesChange.emit(this.checkValues);\r\n                    this.checkedChange.emit(this.checkeds);\r\n\r\n                    this.updateAllCheckboxStatus();\r\n                }, 10);\r\n            });\r\n        }\r\n\r\n        if (changes.showGroupColumn && !changes.showGroupColumn.isFirstChange()) {\r\n            this.toggleVisibleColumn(this.groupField.split(','), changes.showGroupColumn.currentValue);\r\n            this.columnsChanged();\r\n        }\r\n\r\n        if (changes.autoFitColumns && !changes.autoFitColumns.isFirstChange()) {\r\n            this.dfs.updateProperty('autoFitColumns', changes.autoFitColumns.currentValue);\r\n        }\r\n\r\n        if (changes.groupRows && !changes.groupRows.isFirstChange()) {\r\n            this.dfs.updateProperty('groupRows', changes.groupRows.currentValue);\r\n            this.refresh();\r\n        }\r\n\r\n        if (changes.mergeCell && !changes.mergeCell.isFirstChange()) {\r\n            this.refresh();\r\n        }\r\n\r\n        if (changes.mergeFields && !changes.mergeFields.isFirstChange()) {\r\n            this.refresh();\r\n        }\r\n\r\n        if (changes.enableFilterRow && !changes.enableFilterRow.isFirstChange()) {\r\n            this.dfs.updateProperty('enableFilterRow', changes.enableFilterRow.currentValue);\r\n            if (this.showHeader) {\r\n                this.setHeaderHeight();\r\n                this.filterBarHeight = 32;\r\n                this.dgs.toggleFilterRow.emit(this.enableFilterRow);\r\n                this.dgs.showGridHeader.emit(this.realHeaderHeight);\r\n                this.cd.detectChanges();\r\n            }\r\n        }\r\n\r\n        if (changes.enableSmartFilter && !changes.enableSmartFilter.isFirstChange()) {\r\n            this.dfs.updateProperty('enableSmartFilter', changes.enableSmartFilter.currentValue);\r\n        }\r\n\r\n        if (changes.enableDragColumn && !changes.enableDragColumn.isFirstChange()) {\r\n            this.checkDragColumns();\r\n        }\r\n\r\n        if (changes.showRowGroupPanel && !changes.showRowGroupPanel.isFirstChange()) {\r\n            this.dgs.smartFilterBarExpand.emit();\r\n            this.dgs.showGridHeader.emit(this.realHeaderHeight);\r\n        }\r\n\r\n        if (changes.selectionMode && !changes.selectionMode.isFirstChange()) {\r\n            this.sms.toggleMode();\r\n        }\r\n    }\r\n\r\n    private checkFilterStyle() {\r\n        // è¿æ»¤è¡ä¸æºè½è¿æ»¤ åæ¶å¯ç¨æ¶ï¼å°è¿æ»¤è¡ç¦ç¨\r\n        if (this.enableFilterRow && this.enableSmartFilter) {\r\n            this.enableFilterRow = false;\r\n        }\r\n    }\r\n\r\n    private _checkSize() {\r\n        const themesKey = localStorage.getItem('gsp_rtf_themSKey');\r\n        let st: any = 'sm';\r\n        switch (themesKey) {\r\n            case 'default':\r\n                st = 'sm';\r\n                break;\r\n            case 'loose':\r\n                st = 'md';\r\n                break;\r\n        }\r\n\r\n        this.sizeType = st;\r\n    }\r\n\r\n    private checkDragColumns() {\r\n        if (this.isMultiHeader()) {\r\n            this.enableDragColumn = false;\r\n            // this.cd.detectChanges();\r\n        }\r\n    }\r\n\r\n    private checkOptions() {\r\n\r\n        this.gridSize = { width: this.width + 'px', height: this.height + 'px' };\r\n\r\n        if (!this.id) {\r\n            this.id = 'FarrisDataGrid' + Utils.uuid().replace(/-/g, '').substr(0, 10);\r\n            if (this.useControlPanel) {\r\n                this.useControlPanel = false;\r\n                this.writeConsole('å¯ç¨åéç½®å±æ§ï¼æªè®¾ç½®IDï¼æ­¤åè½å°ç¦ç¨ã');\r\n            }\r\n            this._custom_datagrid_cls = this.id;\r\n        } else {\r\n            this.styleSheetId = this.id + '_' + Utils.uuid().replace(/-/g, '').substr(0, 10);\r\n            this._custom_datagrid_cls = this.styleSheetId;\r\n        }\r\n        if (this.settingService && this.useControlPanel) {\r\n            this.settingService.registerGridInstance(this);\r\n        }\r\n\r\n        this.dgs.createStyleElement(this.styleSheetId);\r\n\r\n        if (!this.idField) {\r\n            throw new Error('The Datagrid\\'s idField can\\'t be Null. ');\r\n        }\r\n        this.checkNowrap();\r\n        this.checkSortInfo();\r\n        this.checkMergeCell();\r\n        this.setCheckboxBehavior();\r\n        this.initPaginationOptions();\r\n        if (!this.columns) {\r\n            this.columns = this.fields;\r\n        }\r\n\r\n        this.checkGroupHeaderColumns();\r\n\r\n        // TFS: 356956\r\n        this.checkGroupRowSetting();\r\n        this.checkColumnsType();\r\n\r\n        this.checkDragColumns();\r\n\r\n        const _defaultSetting = () => {\r\n            this._flatColumns();\r\n            // this.setHeaderHeight();\r\n            this.setRowHeight();\r\n        };\r\n\r\n\r\n        this.dfs.setinitialOptions({\r\n            columns: this.columns,\r\n            groupField: this.groupField,\r\n            sortName: this.sortName,\r\n            sortOrder: this.sortOrder\r\n        });\r\n\r\n        // å è½½ç¨æ·ä¸ªæ§åè®¾ç½® --ã åæ¾ç¤ºä¸åæåº\r\n        if (this.settingService && this.useControlPanel) {\r\n\r\n            const settings$ = this.settingService.getSettings(this.id);\r\n            if (!settings$) {\r\n                _defaultSetting();\r\n                return;\r\n            }\r\n            settings$.subscribe((sets) => {\r\n                if (sets) {\r\n                    this.userProfileSetting(sets);\r\n                    this.setRowHeight(false);\r\n                }\r\n\r\n                if (this.data && this.data.length) {\r\n                    this.dfs.updateProperty('data', this.data);\r\n                }\r\n\r\n                this.columnsChanged(this.groupRows && (this.data && !!this.data.length));\r\n            }, (err) => {\r\n                _defaultSetting();\r\n                this.writeConsole(err, 'error');\r\n            });\r\n        } else {\r\n            _defaultSetting();\r\n        }\r\n    }\r\n\r\n\r\n    refreshSelectedData() {\r\n        if (this.selectedRow && this.selectedRow.id) {\r\n            if (this.data && this.data.length) {\r\n                const rd = this.data.find(d => d[this.idField] === this.selectedRow.id);\r\n                this.selectedRow.data = rd;\r\n            } else {\r\n                this.selectedRow = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.unsubscribes();\r\n\r\n        if (this.ro) {\r\n            if (this.el.nativeElement.parentElement) {\r\n                this.ro.unobserve(this.el.nativeElement.parentElement);\r\n            }\r\n            this.ro.disconnect();\r\n        }\r\n\r\n        if (this.documentRowKeydownHandler) {\r\n            this.documentRowKeydownHandler();\r\n        }\r\n\r\n        this.currentCell = null;\r\n        this.clientFilterService = null;\r\n\r\n        this.cleanDom();\r\n\r\n        // ç§»é¤å¨æçstyle\r\n        this.dgs.removeStyleSheet();\r\n\r\n        if (this.settingService && this.settingService.destroy) {\r\n            this.settingService.destroy(this.id);\r\n        }\r\n\r\n        if (this.sms) {\r\n            this.sms.destroy();\r\n            this.sms = null;\r\n        }\r\n\r\n        document.body.removeEventListener('mousedown', this.documentBodyMouseDown, true);\r\n\r\n        if (this.farrisInstances) {\r\n            this.farrisInstances.destroy(this.el.nativeElement);\r\n        }\r\n        this._selectedRow = null;\r\n        this.editors = {};\r\n        DatagridColumnsHelper.gridInstance = null;\r\n        this.unbindMoveSelectRowEvent();\r\n        this.unbindDocumentEditListener();\r\n    }\r\n\r\n\r\n    @HostListener('click', ['$event'])\r\n    onClick(event: MouseEvent): void {\r\n        if (this.showSelectedList && this.dgPager) {\r\n            this.dgPager.closeSelectedList();\r\n        }\r\n\r\n        if (this.pending) {\r\n            return;\r\n        }\r\n\r\n        const target = event.target as any;\r\n        if (target.nodeName === 'TEXTAREA' || target.nodeName === 'INPUT') {\r\n            event.stopPropagation();\r\n            return;\r\n        }\r\n        if (this.currentCell && this.currentCell.editor && this.currentCell.editor._editorClickEvent) {\r\n            event.stopPropagation();\r\n            return;\r\n        }\r\n\r\n        /*\r\n        this.endCellEdit(event);\r\n        this.dfs.cancelSelectCell();\r\n        */\r\n        if (this.stopPropagation) {\r\n            event.stopPropagation();\r\n            return;\r\n        }\r\n    }\r\n\r\n    private initPaginationOptions() {\r\n        this.pagerOpts = {\r\n            id: this.id ? this.id + '-pager_' + Utils.uuid() : 'farris-datagrid-pager_' + Utils.uuid(),\r\n            itemsPerPage: this.pagination ? this.pageSize : this.total,\r\n            currentPage: this.pageIndex,\r\n            totalItems: this.total,\r\n            pageList: this.pageList,\r\n            remote: this.pagerOnServer\r\n        };\r\n    }\r\n\r\n    private updatePagerOptions() {\r\n        this.pagerOpts = Object.assign(this.pagerOpts, {\r\n            itemsPerPage: this.pageSize,\r\n            currentPage: this.pageIndex,\r\n            totalItems: this.total\r\n        });\r\n    }\r\n\r\n    private setPagerTotal() {\r\n        const _total = this.data.length;\r\n        if (this.pagination && this.total === 0 && this.virtualized) {\r\n            this.pagerOpts.totalItems = _total;\r\n        } else {\r\n            if (!this.pagination) {\r\n                this.pagerOpts.itemsPerPage = _total;\r\n            }\r\n        }\r\n    }\r\n\r\n    private setFooterHeight(rows?: []) {\r\n        if (this.showFooter && !this.footerTemplate) {\r\n            rows = rows || this._footerData['value'];\r\n            this.footerHeight = rows.length * this.rowHeight;\r\n        }\r\n    }\r\n\r\n    customStyleKey() {\r\n        return `.${this._custom_datagrid_cls}`;\r\n    }\r\n\r\n    private setRowHeight(useSizeType = false) {\r\n        const _rowHeight = SIZE_TYPE[this._sizeType].row;\r\n        const _rh = 29;\r\n        if (useSizeType) {\r\n            this.rowHeight = _rowHeight;\r\n        } else {\r\n            this.rowHeight = _rowHeight > this.rowHeight ? _rowHeight : this.rowHeight;\r\n        }\r\n\r\n        const key1 = `${this.customStyleKey()}.f-datagrid-body-row, ${this.customStyleKey()} .f-datagrid-cell`;\r\n        const key2 = `${this.customStyleKey()} .f-datagrid-cell-content`;\r\n\r\n        this.dgs.removeCssRule(key1);\r\n        this.dgs.removeCssRule(key2);\r\n\r\n        if (this.rowHeight !== _rh && this.nowrap) {\r\n            const rowHeightCSS = [\r\n                `${key1} { height: ${this.rowHeight}px }`,\r\n                `${key2} { height: ${this.rowHeight}px; line-height: ${this.rowHeight}px }`\r\n            ];\r\n\r\n            this.dgs.appendCssRules(rowHeightCSS);\r\n        }\r\n    }\r\n\r\n    initSelectOrChecked() {\r\n        const _data = this.dfs.getCurrentPageData();\r\n        if (!this.enableMorePageSelect && this.multiSelect) {\r\n            // this.clearAll();\r\n            if (this.checkeds && this.checkeds.length) {\r\n                this.checkeds.forEach(r => {\r\n                    if (!_data.find(n => n[this.idField] == r.id)) {\r\n                        this.unCheckRow(r.id, false);\r\n                    }\r\n                });\r\n            } else {\r\n                this.clearCheckeds();\r\n            }\r\n        }\r\n\r\n        if (this.selectValue) {\r\n            if (_data.find(n => n[this.idField] == this.selectValue)) {\r\n                this.selectRow(this.selectValue, false);\r\n                this.refreshSelectedData();\r\n            }\r\n        }\r\n\r\n        if (this.multiSelect) {\r\n            if (this.checkValues && this.checkValues.length) {\r\n                const chkids = this.checkeds.map(r => r.id);\r\n                const diffIds = this.dfs.difference(chkids, this.checkValues);\r\n\r\n                if (diffIds.length) {\r\n                    this.checkRows(diffIds, false);\r\n                } else {\r\n                    this.checkValues = [];\r\n                }\r\n            } else {\r\n                this.checkValues = [];\r\n            }\r\n\r\n            this.checkValues = this.checkeds.map(r => r.id);\r\n\r\n            if (!this._isResized || this.virtualized) {\r\n                this.checkValuesChange.emit(this.checkValues);\r\n                this.checkedChange.emit(this.checkeds);\r\n            }\r\n            this.updateAllCheckboxStatus(_data);\r\n        }\r\n    }\r\n\r\n    private updateAllCheckboxStatus(_data?: any) {\r\n        if (!_data) {\r\n            _data = this.dfs.getCurrentPageData();\r\n        }\r\n\r\n        let checkAllStatus = 0;\r\n        if (this.showAllCheckbox) {\r\n            const allDataIDs = _data.map(r => r[this.idField]);\r\n            const newCheckValues = allDataIDs.filter(n => this.checkValues.includes(n));\r\n\r\n            if (newCheckValues && newCheckValues.length) {\r\n                const isSame = !this.dfs.difference(allDataIDs, this.checkValues).length;\r\n                if (!this.checkValues || !this.checkValues.length) {\r\n                    // æ²¡æéä¸­çæ°æ®\r\n                    checkAllStatus = 0;\r\n\r\n                } else if (isSame) { // this.checkValues.length === this.data.length ||\r\n                    // å¨é¨éä¸­\r\n                    checkAllStatus = 1;\r\n                } else if (!isSame) { // this.checkValues.length !== this.data.length &&\r\n                    // æéä¸­çæ°æ®ï¼ä½ä¸æ¯å¨é¨éä¸­\r\n                    checkAllStatus = 2;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.dgs.changeCheckAllStatus.emit(checkAllStatus);\r\n    }\r\n\r\n    // å½åéå¹¶æ¾ç¤ºå¤éæ¡æ¶ï¼é»è®¤å° checkOnSelect, selectOnCheck è®¾ç½®ä¸º true;\r\n    private setCheckboxBehavior() {\r\n        if (!this.multiSelect && this.showCheckbox) {\r\n            // TFS: 380899\r\n            // this.checkOnSelect = true;\r\n            // this.selectOnCheck = true;\r\n        }\r\n    }\r\n\r\n    private _flatColumns() {\r\n        this.flatColumns = flatten<DataColumn>(this.columns).filter((col: DataColumn) => !col.colspan && this.columnIsVisible(col));\r\n        if (this.isMultiHeader() && this.fast) {\r\n            this.flatColumns = this.dfs.getGroupColumns(this.columns[0]);\r\n        }\r\n    }\r\n\r\n    columnIsVisible(col: DataColumn) {\r\n        return DatagridColumnsHelper.columnIsVisible(col, this);\r\n    }\r\n\r\n    // æ·»å åè®¾ç½®\r\n    private addControlCol() {\r\n        if (this.useControlPanel) {\r\n            const controlCol = this.columns[0].find(n => n.field === this.ControlPanelFeild);\r\n            if (!controlCol) {\r\n                const cp = { field: this.ControlPanelFeild, width: 24, rowspan: this.columns.length, fixed: 'right', visible: true };\r\n\r\n                // 2021-05-24 å¯ç¨è¿æ»¤è¡ååºé\r\n                // if (this.enableFilterRow) {\r\n                //     cp.rowspan += 1;\r\n                // }\r\n\r\n                this.columns[0].push(cp);\r\n            } else {\r\n                controlCol.visible = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    private checkGroupHeaderColumns() {\r\n        if (this.isMultiHeader()) {\r\n            const allCols = flatten<DataColumn>(this.columns);\r\n            DatagridColumnsHelper.checkGroupHeaderColumnVisible(allCols);\r\n        }\r\n    }\r\n\r\n    // æ£æ¥åéå: [] -> [[]]\r\n\r\n    private correctColumns(values) {\r\n        if (values && values.length && !Array.isArray(values[0])) {\r\n            return [values];\r\n        } else {\r\n            return values || [];\r\n        }\r\n    }\r\n\r\n    private checkColumnsType() {\r\n        if (this.columns && this.columns.length) {\r\n            // if (!Array.isArray(this.columns[0])) {\r\n            //     this.columns = [ this.columns ];\r\n            // }\r\n\r\n            this.addControlCol();\r\n\r\n            this.columns.forEach((cols, columnsIndex) => {\r\n                cols.forEach((col: DataColumn, index) => {\r\n                    if (!col.field) {\r\n                        col.field = `farris-datagrid-column_${columnsIndex}_${index}`;\r\n                    }\r\n\r\n                    if (!col.valign) {\r\n                        col.valign = 'middle';\r\n                    }\r\n\r\n                    if (col.width === undefined || col.width === null) {\r\n                        col.width = 100;\r\n                    } else {\r\n                        if (typeof col.width === 'string') {\r\n                            col.width = parseInt(col.width, 10);\r\n                        }\r\n                    }\r\n\r\n                    // è®°å½åå§å®½åº¦\r\n                    if (!col.originalWidth) {\r\n                        col.originalWidth = col.width;\r\n                    }\r\n\r\n                    if (col.formatter && typeof col.formatter !== 'function' && Object.keys(col.formatter).length === 0) {\r\n                        col.formatter = null;\r\n                    }\r\n\r\n                    if (!this.showGroupColumn && this.groupRows) {\r\n                        this.toggleVisibleColumn(this.groupField.split(','), false);\r\n                    }\r\n                    // è¿æ»¤è¡æ£æ¥\r\n                    if (col.filter) {\r\n                        if (typeof col.filter === 'boolean') {\r\n                            if (col.field) {\r\n                                col.filter = this.clientFilterService.createColumnFilterOptions(col);\r\n                            } else {\r\n                                col.filter = false;\r\n                            }\r\n                        } else {\r\n                            if (!col.filter.options || !Object.keys(col.filter.options).length) {\r\n                                switch (col.filter.type) {\r\n                                    case ColumnFilterType.enum:\r\n                                        col.filter.options = col.formatter['options'];\r\n                                        break;\r\n                                    case ColumnFilterType.date:\r\n                                        col.filter.options = { dateFormat: 'yyyy-MM-dd', returnFormat: 'yyyy-MM-dd' };\r\n                                        break;\r\n                                    case ColumnFilterType.datetime:\r\n                                        col.filter.options = { dateFormat: 'yyyy-MM-dd HH:mm:ss', returnFormat: 'yyyy-MM-dd HH:mm:ss' };\r\n                                        break;\r\n                                }\r\n                            }\r\n\r\n                        }\r\n                    }\r\n\r\n                    // å¼å®¹ hidden 2021-05-31\r\n                    if (col['hidden'] !== undefined && col.visible === undefined) {\r\n                        if (typeof col['hidden'] === 'boolean') {\r\n                            col.visible = !col['hidden'];\r\n                        } else {\r\n                            if (typeof col['hidden'] === 'function') {\r\n                                col.visible = () => {\r\n                                    const r = col['hidden'].bind(this);\r\n                                    return !r;\r\n                                };\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    private checkGroupRowSetting() {\r\n        // å¦æå¯ç¨åç»è¡ï¼ä½æªè®¾ç½®åç»å­æ®µæ¶ï¼å°å³é­åç»è¡åè½\r\n        // if (this.groupRows) {\r\n        //     if (!this.groupField) {\r\n        //         this.groupRows = false;\r\n        //     }\r\n        // }\r\n    }\r\n\r\n    private checkMergeCell() {\r\n        if (this.mergeCell) {\r\n            if (!this.mergeFields || !this.mergeFields.length) {\r\n                this.mergeCell = false;\r\n            } else {\r\n                this.virtualized = false;\r\n                this.virtualizedAsyncLoad = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    private checkSortInfo() {\r\n        if (this.sortName) {\r\n            if (!this.sortOrder) {\r\n                this.sortOrder = this.sortName.split(',').map(() => 'asc').join(',');\r\n            }\r\n        }\r\n    }\r\n\r\n    private checkNowrap() {\r\n        // å¯ç¨æè¡åï¼èæå è½½ç¹æ§å¤±æ\r\n        if (!this.nowrap) {\r\n            this.virtualized = false;\r\n        }\r\n    }\r\n\r\n    setHeaderHeight() {\r\n        this.realHeaderHeight = 0;\r\n        if (this.showHeader) {\r\n            if (!this.headerWrap) {\r\n                this.realHeaderHeight = this.columns.length * this.headerHeight;\r\n            } else {\r\n                const gridHeaderEl = this.el.nativeElement.querySelector('.f-datagrid-header');\r\n                if (gridHeaderEl) {\r\n                    // const tables = gridHeaderEl.querySelectorAll('table');\r\n                    const trs = gridHeaderEl.querySelectorAll('table tr:not(.f-datagrid-filter-row)');\r\n                    trs.forEach(n => {\r\n                        n.style.height = 'auto';\r\n                        Array.from(n.children).forEach((a: any) => a.style.height = 'auto');\r\n                    });\r\n\r\n                    const h = Math.max(...Array.from(trs).map((n: any) => n.clientHeight));\r\n                    this.realHeaderHeight = h;\r\n                }\r\n            }\r\n\r\n            if (this.enableFilterRow) {\r\n                this.realHeaderHeight += this.filterRowHeight;\r\n            }\r\n        }\r\n        return this.realHeaderHeight;\r\n    }\r\n\r\n    // åéååå\r\n    columnsChanged(reloadData = true, useColumnSettingWidth = null) {\r\n        const _useColumnSettingWidth = useColumnSettingWidth === null ? this.fitColumns : useColumnSettingWidth;\r\n        this.checkColumnsType();\r\n\r\n        this._flatColumns();\r\n        this.headerHeightChange();\r\n        this.dfs.updateProperty('flatColumns', this.flatColumns);\r\n        this.dfs.updateColumns(this.columns, _useColumnSettingWidth, true);\r\n        // this.colGroup = this.dfs.getState().columnsGroup;\r\n        // å¨æååè®¡è¡\r\n        this.updateFooterData();\r\n        if (reloadData) {\r\n            this.refresh();\r\n        }\r\n\r\n        this.setCellStyle();\r\n\r\n        this.dgs.columnsChanged.emit({ scrollToLeft: reloadData });\r\n    }\r\n\r\n    // åå¤´åå\r\n    private headerHeightChange() {\r\n        this.setHeaderHeight();\r\n        this.dgs.showGridHeader.emit(this.realHeaderHeight);\r\n    }\r\n\r\n    /** å¤æ­æ¯å¦å¨å¼¹åºççªå£ä¸­ï¼è¿åundefind è¯´ææ²¡æå¨å¼¹åºççªå£ï¼å¦åè§ä¸ºå½ååè¡¨å¨å¼¹åºçªå£ä½¿ç¨ */\r\n    inDialog() {\r\n        return this.el.nativeElement.closest('.modal-body');\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region Init\r\n    /** åå§ç¼è¾å¨ä¸éªè¯å¨ */\r\n    private initEditorAndValidator() {\r\n        const Editors = this.inject.get<any[]>(GRID_EDITORS, []);\r\n\r\n        if (Editors.length) {\r\n            Editors.forEach(ed => {\r\n                this.editors[ed.name] = ed.value;\r\n            });\r\n        }\r\n        const _validators = this.inject.get<any[]>(GRID_VALIDATORS, []);\r\n        if (_validators && _validators.length) {\r\n            // _validators.forEach(vr => {\r\n            //     this.validators[vr.name] = vr.value;\r\n            // });\r\n            this.validators = _validators;\r\n        }\r\n    }\r\n\r\n    setPagerHeight() {\r\n        if (!this.useHtmlTable) {\r\n            if (!this.pagination) {\r\n                this.pagerHeight = 0;\r\n            } else {\r\n                this.pagerHeight = this.dgPager && this.dgPager.outerHeight || 40;\r\n            }\r\n        }\r\n    }\r\n\r\n    private initState() {\r\n        this.data = this.data || [];\r\n\r\n        let sta = {};\r\n        Object.keys(this).forEach((k: string) => {\r\n            if (!IgnoreProperties.includes(k)) {\r\n                sta[k] = this[k];\r\n            }\r\n        });\r\n\r\n        this.dfs.initState({ ...sta, fitColumns: this.fitColumns, fit: this.fit, groupField: this._groupField });\r\n        sta = null;\r\n    }\r\n\r\n    private setFitColumns(fitColumns = true) {\r\n        if (this.columns) {\r\n            this.dfs.fitColumns(fitColumns);\r\n        }\r\n    }\r\n\r\n    private setGridNewSizeWhenFit() {\r\n        const parent = this.el.nativeElement.parentElement;\r\n        if (parent) {\r\n            const cmpRect = parent.getBoundingClientRect();\r\n\r\n            const padding = this.getElementPadding(parent);\r\n            const border = this.getElementBorderWidth(parent);\r\n\r\n            this.width = Math.floor(cmpRect.width - border.left - border.right - padding.left - padding.right);\r\n            this.height = Math.floor(cmpRect.height - border.top - border.bottom - padding.top - padding.bottom);\r\n\r\n            if (!this.height) {\r\n                this.height = this.dfs.getState().height || 300;\r\n            }\r\n\r\n            if (!this.width) {\r\n                this.width = this.dfs.getState().width || 800;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    calculateGridSize(fit = true) {\r\n        if (this.useHtmlTable) {\r\n            return;\r\n        }\r\n        if (fit) {\r\n            this.setGridNewSizeWhenFit();\r\n            if (this.width && this.height) {\r\n                this._isResized = true;\r\n                this.gridSize = { width: this.width + 'px', height: this.height + 'px' };\r\n                this.dfs.resize({ width: this.width, height: this.height });\r\n                this._isResized = false;\r\n                if (!this.cd['destroyed']) {\r\n                    this.cd.detectChanges();\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    private initBeforeEvents() {\r\n        if (!this.beforeSelect) {\r\n            this.beforeSelect = () => of(true);\r\n        }\r\n        if (!this.beforeUnselect) {\r\n            this.beforeUnselect = () => of(true);\r\n        }\r\n\r\n        if (!this.beforeCheck) {\r\n            this.beforeCheck = () => of(true);\r\n        }\r\n\r\n        if (!this.beforeUncheck) {\r\n            this.beforeUncheck = () => of(true);\r\n        }\r\n\r\n        if (!this.beforeSortColumn) {\r\n            this.beforeSortColumn = () => of(true);\r\n        }\r\n\r\n        if (!this.beforeEdit) {\r\n            this.beforeEdit = () => of(true);\r\n        }\r\n\r\n        if (!this.afterEdit) {\r\n            this.afterEdit = () => of(true);\r\n        }\r\n    }\r\n\r\n    trackByRows = (index: number, row: any) => {\r\n        if (row) {\r\n            return row[this.idField] || index;\r\n        }\r\n        return index;\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region å¿«æ·é®\r\n\r\n    private unbindMoveSelectRowEvent() {\r\n        if (this.documentRowKeydownHandler) {\r\n            this.documentRowKeydownHandler();\r\n            this.documentRowKeydownHandler = null;\r\n        }\r\n    }\r\n\r\n\r\n    private bindDocumentMoveSelectRowEvent() {\r\n        this.unbindMoveSelectRowEvent();\r\n        this.unbindDocumentEditListener();\r\n        this.documentRowKeydownHandler = this.render2.listen(document, 'keydown', (e: KeyboardEvent) => {\r\n            // e.preventDefault();\r\n            if (!this.isActived()) {\r\n                return;\r\n            }\r\n\r\n            // has loading\r\n            if (document.querySelectorAll('farris-loading').length) {\r\n                return;\r\n            }\r\n\r\n            if (e.target) {\r\n                const targetName = (e.target as any).nodeName;\r\n                if (this.ignoreTarget.indexOf(targetName) > -1) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if (e.keyCode === 40 || e.keyCode === 38) {\r\n                e.preventDefault();\r\n            }\r\n\r\n            switch (e.keyCode) {\r\n                case 40:\r\n                    this.selectNextRow();\r\n                    break;\r\n                case 38:\r\n                    this.selectPrevRow();\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n\r\n    private bindEditListenerInModal() {\r\n        // å¼¹çªä¸­äºä»¶å¤ç\r\n        if (Utils.hasDialogOpen()) {\r\n            const modalElement = this.inDialog();\r\n            if (modalElement) {\r\n                const _fmodal = modalElement.closest('.farris-modal');\r\n                if (_fmodal) {\r\n                    this.modalClickEvent = this.render2.listen(_fmodal, 'click', () => {\r\n                        this.endEditing();\r\n                        this.currentCell = null;\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    onDocumentMouseDown = (event) => {\r\n        if (this.pending) {\r\n            return false;\r\n        }\r\n\r\n        if (!event.target.closest('.f-datagrid')) {\r\n            this.activeDataGrid(false);\r\n        } else {\r\n            if (event.target.closest('.f-datagrid').id === this.id) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        // if (this.editMode === 'row') {\r\n        //     this.endEditing();\r\n        // }\r\n\r\n        if (this.currentCell) {\r\n            if (Utils.hasDialogOpen()) {\r\n                const indlg = this.inDialog();\r\n                const currentTargetInDialog = event.target.closest('.modal-body');\r\n                if (indlg && currentTargetInDialog) {\r\n                    if (indlg != currentTargetInDialog) {\r\n                        return;\r\n                    }\r\n                } else {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if (this.currentCell.isEditing) {\r\n                // this.dfs.endEditCell();\r\n                this.currentCell.cellElement.closeEdit().subscribe(f => {\r\n                    if (f) {\r\n                        if (this.currentCell && this.currentCell.cellElement) {\r\n                            DomHandler.removeClass(this.currentCell.cellElement, CELL_SELECTED_CLS);\r\n                            DomHandler.removeClass(this.currentCell.cellElement, CELL_EDITING_CLS);\r\n                        }\r\n                        this.dfs.cancelSelectCell();\r\n                        this.unbindDocumentEditListener();\r\n                        this.currentCell = null;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    private bindDocumentEditListener() {\r\n        this.unbindDocumentEditListener();\r\n /*\r\n        if (!this.documentCellClickHandler) {\r\n            this.bindEditListenerInModal();\r\n            this.documentCellClickHandler = (event) => {\r\n                if (this.pending) {\r\n                    return false;\r\n                }\r\n                if (this.currentCell) {\r\n                    if (Utils.hasDialogOpen()) {\r\n                        const indlg = this.inDialog();\r\n                        const currentTargetInDialog = event.target.closest('.modal-body');\r\n                        if (indlg && currentTargetInDialog) {\r\n                            if (indlg != currentTargetInDialog) {\r\n                                return;\r\n                            }\r\n                        } else {\r\n                            return;\r\n                        }\r\n                    }\r\n                    // DomHandler.removeClass(this.currentCell.cellElement, CELL_SELECTED_CLS);\r\n\r\n                    // if (this.currentCell.isEditing) {\r\n                    //     // this.dfs.endEditCell();\r\n                    //     this.currentCell.cellElement.closeEdit();\r\n                    // }\r\n                    // this.dfs.cancelSelectCell();\r\n                    // this.unbindDocumentEditListener();\r\n\r\n                    if (this.currentCell.isEditing) {\r\n                        // this.dfs.endEditCell();\r\n                        this.currentCell.cellElement.closeEdit().subscribe(f => {\r\n                            if (f) {\r\n                                DomHandler.removeClass(this.currentCell.cellElement, CELL_SELECTED_CLS);\r\n                                DomHandler.removeClass(this.currentCell.cellElement, CELL_EDITING_CLS);\r\n                                this.dfs.cancelSelectCell();\r\n                                this.unbindDocumentEditListener();\r\n                                this.currentCell = null;\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            };\r\n            this.docuemntCellClickEvents = this.render2.listen(document, 'click', this.documentCellClickHandler);\r\n        }\r\n*/\r\n        if (!this.documentCellKeydownHandler) {\r\n            this.documentCellKeydownHandler = (event) => {\r\n                if (!event.target.closest('.f-datagrid') && event.target.nodeName !== 'BODY') {\r\n                    return;\r\n                }\r\n\r\n                if (this.isActived()) {\r\n                    this.onKeyDownEvent(event);\r\n                }\r\n            };\r\n\r\n            this.documentCellKeydownEvents = this.render2.listen(document, 'keydown', this.documentCellKeydownHandler);\r\n        }\r\n    }\r\n\r\n    private unbindDocumentEditListener() {\r\n        if (this.documentCellClickHandler) {\r\n            this.docuemntCellClickEvents();\r\n            this.documentCellClickHandler = null;\r\n        }\r\n\r\n        if (this.documentCellKeydownHandler) {\r\n            this.documentCellKeydownEvents();\r\n            this.documentCellKeydownHandler = null;\r\n        }\r\n\r\n        if (this.modalClickEvent) {\r\n            this.modalClickEvent();\r\n            this.modalClickEvent = null;\r\n        }\r\n    }\r\n\r\n    private onKeyDownEvent(e: any) {\r\n        // if (e.ctrlKey || e.shiftKey || !this.editable) {\r\n        //     return;\r\n        // }\r\n\r\n        // if (!e.target.closest('.f-datagrid')) {\r\n        //     return;\r\n        // }\r\n\r\n        if (this.disabled) {\r\n            return;\r\n        }\r\n        const keyCode = e.keyCode;\r\n\r\n\r\n        if (this.currentCell && !this.currentCell.isEditing) {\r\n            if ([13, 40, 37, 38, 39, 9].indexOf(keyCode) > -1) {\r\n                e.preventDefault();\r\n            }\r\n            switch (keyCode) {\r\n                case 32: // ç©ºæ ¼\r\n                    if (this.currentCell && this.currentCell.column.onSpaceHandler) {\r\n                        e.stopPropagation();\r\n                        this.currentCell.column.onSpaceHandler({ grid: this, cell: this.currentCell, event: e });\r\n                    }\r\n                    break;\r\n                case 13: // Enter\r\n                    if (this.currentCell) {\r\n                        const fn = this.currentCell.cellElement['editCell'];\r\n                        if (fn) {\r\n                            fn.apply(this.currentCell.cellElement);\r\n                        } else {\r\n                            if (this.currentCell.column.onEnterHandler) {\r\n                                e.stopPropagation();\r\n                                this.currentCell.column.onEnterHandler({ grid: this, cell: this.currentCell, event: e });\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case 40: // â\r\n                    this.selectNextCell('down', e);\r\n                    break;\r\n                case 38: // â\r\n                    this.selectNextCell('up', e);\r\n                    break;\r\n                case 39: // â\r\n                    this.selectNextCell('right', e);\r\n                    break;\r\n                case 37: // â\r\n                    this.selectNextCell('left', e);\r\n                    break;\r\n                case 9: // Tab\r\n                    if (e.shiftKey) {\r\n                        this.selectNextCell('left', e);\r\n                    } else {\r\n                        this.selectNextCell('right', e);\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private unsubscribes() {\r\n        this.subscriptions.forEach(ss => {\r\n            if (ss) {\r\n                ss.unsubscribe();\r\n                ss = null;\r\n            }\r\n        });\r\n\r\n        this.subscriptions = [];\r\n\r\n        if (this.docuemntCellClickEvents) {\r\n            this.docuemntCellClickEvents();\r\n        }\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region Editing\r\n\r\n    isRowEditing() {\r\n        if (!this.selectedRow || this.selectedRow.index === -1) {\r\n            return false;\r\n        } else {\r\n            if (this.editMode === 'row') {\r\n                return this.selectedRow.editors && this.selectedRow.editors.length;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    isCellEditing() {\r\n        if (this.currentCell && this.editMode === 'cell') {\r\n            if (!this.currentCell.editor && !this.currentCell.column.editorTemplate) {\r\n                this.currentCell.isEditing = false;\r\n            }\r\n            return this.currentCell.isEditing;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isEditing() {\r\n        if (this.editMode === 'row') {\r\n            return this.isRowEditing();\r\n        } else {\r\n            return this.isCellEditing();\r\n        }\r\n    }\r\n\r\n    endEditing() {\r\n        if (this.editMode === 'row') {\r\n            this.endRowEdit();\r\n        } else if (this.editMode === 'cell') {\r\n            this.endCellEdit();\r\n        }\r\n    }\r\n\r\n    getEditors() {\r\n        return this.selectedRow.editors;\r\n    }\r\n\r\n    editCell(rowId: any, field: string) {\r\n        this.activeDataGrid();\r\n\r\n        const rowIndex = this.dfs.findRowIndex(rowId);\r\n        if (rowIndex > -1) {\r\n            this.endCellEdit();\r\n            const trId = TR_PREFIX + rowId;\r\n            const trDom = this.el.nativeElement.querySelector('#' + trId);\r\n\r\n            let tdDom = null;\r\n            if (trDom) {\r\n                tdDom = trDom.querySelector(`[field=\"${field}\"]`);\r\n            }\r\n            const col = this.getColumn(field);\r\n            if (!tdDom && col.fixed) {\r\n                if (col.fixed === 'left') {\r\n                    const trDomL = this.el.nativeElement.querySelector('#' + trId + '_fixedleft');\r\n                    tdDom = trDomL && trDomL.querySelector(`[field=\"${field}\"]`);\r\n                } else if (col.fixed === 'right') {\r\n                    const trDomR = this.el.nativeElement.querySelector('#' + trId + '_fixedright');\r\n                    tdDom = trDomR && trDomR.querySelector(`[field=\"${field}\"]`);\r\n                }\r\n            }\r\n\r\n            if (tdDom && tdDom['editCell']) {\r\n                this.currentCell = null;\r\n                tdDom.editCell();\r\n            }\r\n        }\r\n    }\r\n\r\n    endCellEdit(event?: any) {\r\n        // document.body.click();\r\n        if (this.currentCell) {\r\n            DomHandler.removeClass(this.currentCell.cellElement, CELL_SELECTED_CLS);\r\n            if (this.currentCell.isEditing) {\r\n                // this.dfs.endEditCell();\r\n                if (this.currentCell.cellEditorRef) {\r\n                    this.currentCell.cellEditorRef.hideCover();\r\n                }\r\n\r\n                const stopEdit = this.currentCell.cellElement.closeEdit();\r\n                if (stopEdit) {\r\n                    stopEdit.subscribe();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    editRow(rowId?: any) {\r\n        if (!this.editable || this.editMode !== 'row') { return false; }\r\n\r\n        if (rowId) {\r\n            this.selectRow(rowId);\r\n        }\r\n\r\n\r\n        if (!this.selectedRow || this.selectedRow.index === -1) {\r\n            this.writeConsole('Please select a row.');\r\n            return false;\r\n        }\r\n\r\n        const { index: rowIndex, data: rowData } = { ...this.selectedRow };\r\n\r\n        const beforeEditEvent = this.beforeEdit({ rowIndex, rowData, gridInstance: this });\r\n        if (!beforeEditEvent || !beforeEditEvent.subscribe) {\r\n            this.writeConsole('please return an Observable Type.');\r\n            return;\r\n        }\r\n\r\n        const trId = TR_PREFIX + rowId;\r\n        const trDom = this.el.nativeElement.querySelector('#' + trId);\r\n\r\n        if (!this.selectedRow.dr) {\r\n            trDom.click();\r\n        }\r\n\r\n        beforeEditEvent.subscribe((flag: boolean) => {\r\n            if (flag) {\r\n                if (this.selectedRow.dr) {\r\n                    const cells = this.selectedRow.dr.cells.toArray();\r\n                    if (!cells || !cells.length) {\r\n                        return;\r\n                    }\r\n\r\n                    cells.forEach(cell => {\r\n                        if (cell.column.editor) {\r\n                            cell.isEditing = true;\r\n                        }\r\n                    });\r\n                    this.selectedRow.dr.cd.detectChanges();\r\n                    setTimeout(() => {\r\n                        const editors = cells.map(cell => {\r\n                            if (cell.cellEditor) {\r\n                                return cell.cellEditor.componentRef;\r\n                            }\r\n                        }).filter(editor => editor);\r\n                        this.selectedRow.editors = editors;\r\n\r\n                        if (editors && editors.length) {\r\n                            if (editors[0].instance.inputElement) {\r\n                                editors[0].instance.inputElement.focus();\r\n                            }\r\n                        }\r\n\r\n                        // ç»å®é®çäºä»¶\r\n                        this.bindRowEditorKeydownEvent();\r\n                        if (!this.cd['destroyed']) {\r\n                            this.cd.detectChanges();\r\n                        }\r\n                        this.beginEdit.emit({ rowIndex, rowData, gridInstance: this, editor: editors });\r\n                    });\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    endRowEdit() {\r\n        if (!this.isRowEditing()) {\r\n            return { canEnd: true };\r\n        }\r\n\r\n        if (!this.selectedRow || this.selectedRow.index === -1) {\r\n            this.writeConsole('Please select a row.');\r\n            return;\r\n        }\r\n        const { index: rowIndex, data: rowData, dr } = { ...this.selectedRow };\r\n        const { editor: currentEditor, column } = { ...this.currentCell };\r\n        // blur\r\n        document.body.click();\r\n\r\n        if (this.pending) {\r\n            return { canEnd: false };\r\n        }\r\n\r\n        const rowForm = dr.form as FormGroup;\r\n        rowForm.markAsTouched();\r\n        if (rowForm.invalid && !this.endEditByInvalid) {\r\n            return { canEnd: false };\r\n        }\r\n\r\n        // afterEdit è¦ä¼ éç¸å³åæ°ï¼å¨ç¼è¾ç¶ææ¶ï¼ç§»å¨æ»å¨æ¡ä¼åºäº\r\n        const afterEditEvent = this.afterEdit(rowIndex, rowData, column, currentEditor);\r\n        if (!afterEditEvent || !afterEditEvent.subscribe) {\r\n            this.writeConsole('please return an Observable Type.');\r\n            return { canEnd: false };\r\n        }\r\n\r\n        afterEditEvent.subscribe((flag: boolean) => {\r\n            if (flag) {\r\n                this.closeAllCellEditor();\r\n\r\n                if (this.selectedRow.dr.form) {\r\n                    this.selectedRow.dr.rowData = Object.assign(this.selectedRow.dr.rowData, this.selectedRow.dr.form.value);\r\n                    this.dfs.updateRow(this.selectedRow.id, this.selectedRow.dr.rowData);\r\n                    this.cd.detectChanges();\r\n                }\r\n\r\n                let val = '';\r\n                if (currentEditor && currentEditor.formControl) {\r\n                    val = currentEditor.formControl.value;\r\n                }\r\n\r\n                this.endEdit.emit({ rowIndex, rowData, column, value: val });\r\n\r\n                this.dgs.refreshFooterData.emit();\r\n            }\r\n        });\r\n    }\r\n\r\n    cancelEdit(rowId: any, emit = true) {\r\n\r\n        if (!this.isEditing()) {\r\n            return;\r\n        }\r\n\r\n        this.closeAllCellEditor();\r\n        if (rowId) {\r\n            this.dfs.rejectChanges(rowId);\r\n        }\r\n\r\n        this.cd.detectChanges();\r\n        if (emit) {\r\n            this.cancelEdited.emit();\r\n        }\r\n    }\r\n\r\n    closeAllCellEditor() {\r\n        if (this.selectedRow && this.selectedRow.dr) {\r\n            const cells = this.selectedRow.dr.cells;\r\n            if (cells) {\r\n                cells.forEach(cell => cell.isEditing = false);\r\n                if (this.currentCell) {\r\n                    this.currentCell.isEditing = false;\r\n                }\r\n            }\r\n            this.selectedRow.editors = null;\r\n        }\r\n\r\n        // åæ¶é®çäºä»¶\r\n        this.unbindRowEditorKeydownEvent();\r\n    }\r\n\r\n    private rowEditTabKeydwonEvent(e: any) {\r\n        const keyCode = e.which || e.keyCode;\r\n\r\n        if (keyCode === 9) {  // tab\r\n            const td = e.target.closest('td');\r\n            const tr = e.target.closest('tr');\r\n            const nextTd = td.nextElementSibling;\r\n\r\n            const hasNoEditor = (_td: any) => {\r\n                return !_td.querySelector('input') && !_td.querySelector('textarea') && !_td.querySelector('select');\r\n            };\r\n\r\n            const editNextRow = () => {\r\n                const nextTr = tr.nextElementSibling;\r\n                if (nextTr) {\r\n                    nextTr.click();\r\n                    const nextRowid = nextTr.getAttribute('id').replace(TR_PREFIX, '');\r\n                    if (nextRowid) {\r\n                        this.editRow(nextRowid);\r\n                    }\r\n                }\r\n            };\r\n\r\n            if (nextTd) {\r\n                if (hasNoEditor(nextTd)) {\r\n                    const tds = tr.querySelectorAll('td');\r\n                    let tdIdx = -1;\r\n                    tds.forEach((t, i) => {\r\n                        if (t === nextTd) {\r\n                            tdIdx = i;\r\n                        }\r\n                    });\r\n                    let nextTrEdit = true;\r\n                    while (tdIdx < tds.length) {\r\n                        const _ntd = tds[tdIdx];\r\n                        if (hasNoEditor(_ntd)) {\r\n                            tdIdx++;\r\n                        } else {\r\n                            nextTrEdit = false;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    if (nextTrEdit) {\r\n                        editNextRow();\r\n                    }\r\n                }\r\n            } else {\r\n                editNextRow();\r\n            }\r\n        }\r\n\r\n        e.stopPropagation();\r\n    }\r\n\r\n    private bindRowEditorKeydownEvent() {\r\n        if (!this.documentRowEditKeydownHanlder) {\r\n            this.documentRowEditKeydownHanlder = this.render2.listen(document, 'keydown', this.rowEditTabKeydwonEvent.bind(this));\r\n        }\r\n        this.documentClickEndRowEditHandler = this.render2.listen(document, 'click', (e: any) => {\r\n            if (this.pending) {\r\n                return false;\r\n            }\r\n            if (Utils.hasDialogOpen()) {\r\n                return;\r\n            }\r\n\r\n            if (this.isRowEditing()) {\r\n\r\n                // this.endRowEdit();\r\n            }\r\n        });\r\n    }\r\n\r\n    private unbindRowEditorKeydownEvent() {\r\n        // åæ¶é®çäºä»¶\r\n        if (this.documentRowEditKeydownHanlder) {\r\n            this.documentRowEditKeydownHanlder();\r\n            this.documentRowEditKeydownHanlder = null;\r\n        }\r\n\r\n        if (this.documentClickEndRowEditHandler) {\r\n            this.documentClickEndRowEditHandler();\r\n            this.documentClickEndRowEditHandler = null;\r\n        }\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region Load Data\r\n\r\n\r\n    private _clientFilter(conditions: any, excuteLocaleFilter = false) {\r\n        // å®¢æ·ç«¯è¿æ»¤\r\n        if (excuteLocaleFilter) {\r\n            const allClientData = this.dfs.getData(true);\r\n            if (conditions && Object.keys(conditions).length) {\r\n                const _data = this.clientFilterService.executeFilter(allClientData, conditions);\r\n                this.dfs.loadFilterData(_data);\r\n            } else {\r\n                this.loadData(allClientData, false, true);\r\n            }\r\n        }\r\n\r\n        if (!this.virtualized) {\r\n            this.scrollToTop();\r\n        }\r\n\r\n        this.filterChanged.emit(conditions);\r\n    }\r\n\r\n    private smartFilterData(conditions: any) {\r\n        if (this.remoteFilter) { // æå¡å¨ç«¯è¿æ»¤\r\n            const entityFilters = this.clientFilterService.convertSmartFilter2EntityFilter(conditions);\r\n            this.filterChanged.emit(entityFilters);\r\n        } else {\r\n            // å®¢æ·ç«¯è¿æ»¤\r\n            this._clientFilter(conditions, this.useDefaultFilter);\r\n        }\r\n\r\n    }\r\n\r\n    // smart fitler æ¸ç©ºæ¥è¯¢æ¡ä»¶\r\n    onClearSmartFilters($event) {\r\n        this.smartFilterResult = { conditions: [], controlData: [] };\r\n        this.conditions = [];\r\n        this.smartFilterData([]);\r\n        this.smartFilterService.clearAll();\r\n        setTimeout(() => {\r\n            this.onFilterBarResize(0);\r\n        });\r\n    }\r\n\r\n    onRemoveSmartFilterItem($event) {\r\n        if ($event) {\r\n            const e = { ...$event };\r\n            e['labelCode'] = $event.fieldCode;\r\n            this.smartFilterService.removeCondition(e, true);\r\n        }\r\n    }\r\n\r\n    onFilterBarResize($event) {\r\n        this.filterBarHeight = $event;\r\n\r\n        const smartFilterEl = this.el.nativeElement.querySelector('.f-datagrid-column-drop-panel');\r\n        if (smartFilterEl && !$event) {\r\n            smartFilterEl.style.top = '0px';\r\n        }\r\n        this.dgs.showGridHeader.emit(this.realHeaderHeight);\r\n        this.dgs.smartFilterBarExpand.emit();\r\n    }\r\n\r\n    onSmartFilterChange($event) {\r\n        const { conditions, filterItem } = $event;\r\n\r\n        this.smartFilterService.filterConditionChanged({ conditions, controlData: filterItem, from: 'toolbar' });\r\n\r\n        // this.smartFilterData(conditions);\r\n        this.dgs.smartFilterDataChange.emit(filterItem);\r\n    }\r\n\r\n    filterData(conditions?: any) {\r\n        if (!conditions) {\r\n            conditions = this.conditions;\r\n        } else {\r\n            this.conditions = conditions;\r\n        }\r\n\r\n        this.scrollToTop();\r\n\r\n        if (this.enableSmartFilter) {\r\n            this.smartFilterData(conditions);\r\n            return;\r\n        }\r\n\r\n        if (this.remoteFilter) {\r\n            const entityFilters = this.clientFilterService.convert2FilterArray(conditions);\r\n            this.filterChanged.emit(entityFilters);\r\n        } else {\r\n            // å®¢æ·ç«¯è¿æ»¤\r\n            this._clientFilter(conditions, true);\r\n        }\r\n    }\r\n    /** æ¸ç©ºè¿æ»¤æ¡ä»¶ */\r\n    clearCondition() {\r\n        this.dgs.onClearFilter();\r\n    }\r\n\r\n    loadData(data?: any, keepSortState = false, keepScrollPosition = true) {\r\n        if (this.loading) {\r\n            this.closeLoading(!this.pagination);\r\n        }\r\n        data = data || [];\r\n\r\n        if (keepScrollPosition && this.scrollInstance && this.scrollInstance.instance) {\r\n            const lst = this.scrollInstance.instance.lastScrollTop;\r\n            const lsl = this.scrollInstance.instance.lastScrollLeft;\r\n            this.dfs.updateProperty('scrollInfo', { y: lst, x: lsl });\r\n        } else {\r\n            this.dfs.updateProperty('scrollInfo', { y: 0, x: 0 });\r\n        }\r\n\r\n        if (this.pagination) {\r\n            this.dfs.setPagination(this.pageIndex, this.pageSize, this.total);\r\n            this.updatePagerOptions();\r\n\r\n            this.cd.detectChanges();\r\n        }\r\n\r\n        // éæ°å è½½æ°æ®æ¶ï¼ç§»é¤ææç¼è¾å\r\n        // this.closeAllCellEditor();\r\n\r\n        this.data = data;\r\n        if (keepSortState) {\r\n            if (this.remoteSort) {\r\n                this.dfs.loadData(data);\r\n            } else {\r\n                this.dfs.loadData(data, true, true);\r\n            }\r\n        } else {\r\n            this.dfs.loadData(data);\r\n        }\r\n\r\n        this.setPagerHeight();\r\n        this.dgs.dataSourceChanged();\r\n    }\r\n\r\n    loadVirtualData(data: any) {\r\n        if (this.groupRows) {\r\n            this.writeConsole('if you using GROUPROWS, please set [virtualized]=\"false\" [virtualizedAsyncLoad]=\"false\"');\r\n            return;\r\n        }\r\n        if (this.virtualizedAsyncLoad) {\r\n            this.dgs.onLoadVirtualData(data);\r\n        }\r\n    }\r\n\r\n    fetchData(pageIndex, pageSize) {\r\n        if (this.restService) {\r\n            this.showLoading();\r\n            const params = { pageIndex, pageSize };\r\n            if (this.sortName) {\r\n                params['sortName'] = this.sortName;\r\n            }\r\n            if (this.sortOrder) {\r\n                params['sortOrder'] = this.sortOrder;\r\n            }\r\n\r\n            return this.restService.getData(this.url, params);\r\n        }\r\n        return of(undefined);\r\n    }\r\n\r\n    refresh() {\r\n        this.dfs.refresh();\r\n    }\r\n\r\n    reload() {\r\n        this.fetchData(1, this.pageSize).subscribe(res => {\r\n            if (res) {\r\n                this.pageIndex = 1;\r\n                this.total = res.total;\r\n                this.loadData(res.items);\r\n            }\r\n        });\r\n    }\r\n\r\n    /** è·åå½åé¡µæ°æ® */\r\n    getRows() {\r\n        if (this.groupRows || this.virtualized) {\r\n            if (this.pagerOnServer) {\r\n                return this.ds.rows;\r\n            } else {\r\n                return this.currentPagerData;\r\n            }\r\n        } else {\r\n            if (this.pagerOnServer) {\r\n                return this.data;\r\n            } else {\r\n                return this.currentPagerData;\r\n            }\r\n        }\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region Pagination\r\n\r\n    setPageIndex(pageIndex: number, detectChanges = true) {\r\n        this.pageIndex = pageIndex;\r\n        this.pagerOpts.currentPage = pageIndex;\r\n\r\n        if (detectChanges) {\r\n            this.cd.detectChanges();\r\n        }\r\n    }\r\n\r\n    // æ´æ°æ¯é¡µ\r\n    setPageList(pageList: number[], detectChanges = true) {\r\n        this.pageList = pageList;\r\n        this.pagerOpts.pageList = pageList;\r\n        if (detectChanges) {\r\n            this.cd.detectChanges();\r\n        }\r\n    }\r\n\r\n    onPageChange(pageIndex: number) {\r\n        if (this.lockPagination) {\r\n            return;\r\n        }\r\n\r\n        if (this.controlPaginationState) {\r\n            this.setPageIndex(pageIndex, false);\r\n        }\r\n\r\n\r\n        this.fetchData(pageIndex, this.pageSize).subscribe(res => {\r\n            if (res) {\r\n                this.loadData(res.items);\r\n            }\r\n        });\r\n        this.focusRowIndex = -1;\r\n        this.scrollToTop();\r\n        this.pageChanged.emit({ pageIndex, pageSize: this.pageSize });\r\n    }\r\n\r\n    onPageSizeChange(pageSize: number) {\r\n        if (this.lockPagination) {\r\n            return;\r\n        }\r\n        this.focusRowIndex = -1;\r\n        this.scrollToTop();\r\n        this.pageSize = pageSize;\r\n        this.pagerOpts.itemsPerPage = pageSize;\r\n\r\n        this.fetchData(1, pageSize).subscribe(res => {\r\n            if (res) {\r\n                this.pageIndex = 1;\r\n                this.loadData(res.items);\r\n            }\r\n        });\r\n        this.pageSizeChanged.emit({ pageSize, pageIndex: this.pageIndex });\r\n    }\r\n\r\n    onRemoveSelectedItem(id: any) {\r\n        if (this.dfs.findRowIndex(id) > -1) {\r\n            this.unCheckRow(id);\r\n            this.cd.detectChanges();\r\n        } else {\r\n            this.unCheckRow(id, false);\r\n            this.checkValues = this.checkeds.map(r => r.id);\r\n        }\r\n    }\r\n\r\n    onClearSelectedItem($event) {\r\n        // this.clearAll();\r\n        if (this.selectOnCheck) {\r\n            this.selectValue = '';\r\n        }\r\n        this.clearCheckeds(true);\r\n    }\r\n    //#endregion\r\n\r\n    //#region Loading\r\n    showLoading() {\r\n        this.loading = true;\r\n        this.cd.detectChanges();\r\n    }\r\n\r\n    closeLoading(detectChanges = true) {\r\n        this.loading = false;\r\n        if (detectChanges) {\r\n            this.cd.detectChanges();\r\n        }\r\n    }\r\n    //#endregion\r\n\r\n    //#region Dom\r\n\r\n    private replacePX2Empty(strNum: string) {\r\n        if (strNum) {\r\n            return Number.parseInt(strNum.replace('px', ''), 10);\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    renderCustomCls(cls: any, dom: any) {\r\n        if (cls) {\r\n            if (cls[0] === '!') {\r\n                const _cls = cls.slice(1).split(' ').filter(c => c);\r\n                _cls.forEach(c => {\r\n                    if (c) {\r\n                        this.render2.removeClass(dom, c);\r\n                    }\r\n                });\r\n            } else {\r\n                cls.split(' ').filter(c => c).forEach(c => {\r\n                    if (c) {\r\n                        this.render2.addClass(dom, c);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    renderCustomStyle(cs: CustomStyle, dom: any, cssRuleText = null) {\r\n        if (!cs) {\r\n            return;\r\n        }\r\n        if (cs.cls) {\r\n            this.renderCustomCls(cs.cls, dom);\r\n        }\r\n\r\n        if (cs.style) {\r\n            if (!cssRuleText) {\r\n                cssRuleText = `${this.customStyleKey()} #${dom.id} ${JSON.stringify(cs.style)}`;\r\n            }\r\n\r\n            this.dgs.appendCssRules([cssRuleText]);\r\n        }\r\n    }\r\n\r\n    getBoundingClientRect(el: ElementRef) {\r\n        return el.nativeElement.getBoundingClientRect();\r\n    }\r\n\r\n    getElementPadding(el: HTMLElement) {\r\n        const style = getComputedStyle(el);\r\n        return {\r\n            top: this.replacePX2Empty(style.paddingTop),\r\n            left: this.replacePX2Empty(style.paddingLeft),\r\n            bottom: this.replacePX2Empty(style.paddingBottom),\r\n            right: this.replacePX2Empty(style.paddingRight)\r\n        };\r\n    }\r\n\r\n    getElementBorderWidth(el: HTMLElement) {\r\n        const style = getComputedStyle(el);\r\n        return {\r\n            top: this.replacePX2Empty(style.borderTopWidth),\r\n            bottom: this.replacePX2Empty(style.borderBottomWidth),\r\n            right: this.replacePX2Empty(style.borderRightWidth),\r\n            left: this.replacePX2Empty(style.borderLeftWidth)\r\n        };\r\n    }\r\n\r\n    formatData(field: any, data: any, formatter: any) {\r\n        const value = this.getFieldValue(field, data);\r\n        return this.colFormatSer.format(value, data, formatter);\r\n    }\r\n\r\n    getFieldValue(field, rowData) {\r\n        return Utils.getValue(field, rowData);\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region Select\r\n    private canOperateCheckbox() {\r\n        return this.multiSelect && this.showCheckbox;\r\n    }\r\n\r\n\r\n\r\n    private findNextCell(field: string, dir: MoveDirection) {\r\n        let td = null;\r\n        if (this.currentCell && this.currentCell.cellElement) {\r\n            const fixed = this.dfs.getColumn(field).fixed || '';\r\n            let cellIndex = this.dfs.getColumnIndex(field, fixed);\r\n\r\n            if (fixed === 'left' || this.fast) {\r\n                if (this.showCheckbox) {\r\n                    cellIndex += 1;\r\n                }\r\n\r\n                if (this.showLineNumber) {\r\n                    cellIndex += 1;\r\n                }\r\n            }\r\n\r\n            const currCellEl = this.currentCell.cellElement;\r\n            if (dir === 'up') {\r\n                const prevTr = this.dgs.findNextTr(currCellEl.parentElement.previousElementSibling, 'up');\r\n                if (prevTr) {\r\n                    td = prevTr.children[cellIndex];\r\n                }\r\n            } else if (dir === 'down') {\r\n                const nextTr = this.dgs.findNextTr(currCellEl.parentElement.nextElementSibling, 'down');\r\n                if (nextTr) {\r\n                    td = nextTr.children[cellIndex];\r\n                }\r\n            } else if (dir === 'left') {\r\n                td = currCellEl.previousElementSibling;\r\n            } else if (dir === 'right') {\r\n                td = currCellEl.nextElementSibling;\r\n            }\r\n        }\r\n        return td;\r\n    }\r\n\r\n    selectNextCell(dir: MoveDirection, event: Event) {\r\n        const nextTd = this.findNextCell(this.currentCell.field, dir);\r\n\r\n        if (dir === 'up' && !nextTd) {\r\n            return;\r\n        }\r\n\r\n        if (nextTd && nextTd.className.indexOf('f-datagrid-cell-rownumber') == -1 && nextTd.className.indexOf('f-datagrid-cell-checkbox') == -1) {\r\n            if (event['code'] === 'Tab' && this.editable && this.editcellWhenTabKeydwon) {\r\n                nextTd['click'].apply(nextTd, [event]);\r\n            } else {\r\n                if (nextTd.selectCell) {\r\n                    if (this.selectionMode === 'default' ) {\r\n                        this.clearCheckeds();\r\n                    }\r\n                    nextTd['selectCell'](event, nextTd);\r\n                }\r\n            }\r\n            // nextTd['selectCell'](event, nextTd);\r\n            return nextTd;\r\n        } else {\r\n            const tr = this.currentCell.cellElement.parentElement;\r\n            let _next = tr.nextElementSibling;\r\n            if (dir === 'left') {\r\n                _next = tr.previousElementSibling;\r\n            }\r\n\r\n            const nextTr = this.dgs.findNextTr(_next, dir === 'left' ? 'up' : 'down');\r\n            if (nextTr && nextTr.tagName === 'TR') {\r\n                // nextTr.children.find(td => td.editCell).editCell();\r\n                let firstEditor = false;\r\n                let i = 0;\r\n                while (!firstEditor) {\r\n                    firstEditor = !!nextTr.children[i].selectCell;\r\n                    if (!firstEditor) {\r\n                        i++;\r\n                    }\r\n                }\r\n                if (nextTr.children[i] && nextTr.children[i].selectCell) {\r\n                    if (this.selectionMode === 'default' ) {\r\n                        this.clearCheckeds();\r\n                    }\r\n                    nextTr.children[i].selectCell(event, nextTr.children[i]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    selectNextRow() {\r\n        if (this.selectedRow) {\r\n            const tr = this.selectedRow.dr.el.nativeElement;\r\n            if (tr.nextElementSibling) {\r\n                tr.nextElementSibling.click();\r\n            }\r\n        }\r\n    }\r\n    selectPrevRow() {\r\n        if (this.selectedRow) {\r\n            const tr = this.selectedRow.dr.el.nativeElement;\r\n            if (tr.previousElementSibling) {\r\n                tr.previousElementSibling.click();\r\n            }\r\n        }\r\n    }\r\n\r\n    removeCellSelectedCls() {\r\n        if (this.currentCell) {\r\n            DomHandler.removeClass(this.currentCell.cellElement, CELL_SELECTED_CLS);\r\n            this.render2.removeClass(this.currentCell.cellElement, CELL_EDITING_CLS);\r\n        }\r\n\r\n        const selectedCell = this.el.nativeElement.querySelectorAll('.' + CELL_SELECTED_CLS);\r\n        if (selectedCell.length) {\r\n            selectedCell.forEach(n => {\r\n                this.render2.removeClass(n, CELL_SELECTED_CLS);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * éä¸­è¡\r\n     * @param id éä¸­è¡ID\r\n     * @param emit è§¦åselect äºä»¶\r\n     * @param toCurrentPosition æ»å¨æ¡å®ä½å°å½åéæ©ä¸­è¡\r\n     */\r\n    selectRow(id: any, emit = true, toCurrentPosition = false) {\r\n\r\n        this.removeCellSelectedCls();\r\n\r\n        if (!this.multiSelect && this.showCheckbox) {\r\n            this.clearCheckeds(false, false);\r\n        }\r\n\r\n        if (this.multiSelect && this.selectionMode === 'default') {\r\n            this.clearAll();\r\n        }\r\n\r\n        if (id && (!this.selectedRow || this.selectedRow.id != id)) {\r\n\r\n            const row = this.dfs.findRow(id);\r\n            if (row && this.disableRow) {\r\n                if (this.disableRow(row.data, row.index)) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if (emit) {\r\n                this.dfs.selectRecord(id);\r\n            } else {\r\n                this.dfs.setSelectRow(id);\r\n                this.selectedRow = this.dfs.getCurrentRow();\r\n                if (this.checkOnSelect) {\r\n                    this.checkRows([id]);\r\n                }\r\n                this.dgs.setSelecedRow.emit({ id, selected: true });\r\n            }\r\n        } else {\r\n            if (this.checkOnSelect) {\r\n                this.checkRows([id]);\r\n            }\r\n        }\r\n\r\n        if (toCurrentPosition) {\r\n            this.scrollToCurrentRow();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * æ»å¨æ¡æ»å¨å°å½åè¡çä½ç½®\r\n     */\r\n    scrollToCurrentRow() {\r\n        this.dgs.scrollToCurrentRow.next();\r\n    }\r\n\r\n    unSelectRow(id: any, emit = true) {\r\n        if (id) {\r\n            this.closeAllCellEditor();\r\n\r\n            if (this.currentCell && this.currentCell.rowId == id) {\r\n                this.cancelSelectCell();\r\n            }\r\n\r\n            if (emit) {\r\n                this.dfs.selectRecord(id, false);\r\n            } else {\r\n                this.dfs.setSelectRow(id, false);\r\n                this.selectedRow = null;\r\n                this.dgs.setSelecedRow.emit({ id, selected: false });\r\n            }\r\n        }\r\n    }\r\n\r\n    selectAllRows() {\r\n        if (this.multiSelect) {\r\n            this.dfs.selectAll();\r\n        }\r\n    }\r\n\r\n    cancelSelectCell() {\r\n        if (this.currentCell) {\r\n            this.currentCell.cellElement.cancelSelected();\r\n            if (!this.currentCell.isEditing) {\r\n                this.currentCell = null;\r\n                this.dfs.cancelSelectCell();\r\n            }\r\n        }\r\n    }\r\n\r\n    clearSelections(excludeIds?: string[]) {\r\n        this.dfs.clearSelections(excludeIds);\r\n        this.selectedRow = null;\r\n        this.cancelSelectCell();\r\n        this.cd.detectChanges();\r\n    }\r\n\r\n    checkRow(id: any, emit = true) {\r\n        if (this.canOperateCheckbox()) {\r\n            if (emit) {\r\n                this.dfs.checkRecord(id);\r\n            } else {\r\n                this.checkRows([id]);\r\n            }\r\n        }\r\n    }\r\n\r\n    /** é©éè¡ï¼ä¸è§¦åéä¸­äºä»¶ */\r\n    checkRows(ids: any[], emit = false) {\r\n        if (ids && ids.length) {\r\n            this.dfs.setCheckedRows(ids, true);\r\n            this.dgs.setCheckedRows.next({ ids, checked: true });\r\n\r\n            if (this.selectionMode === 'default') {\r\n                this.dfs.updateProperty('selections', this.checkeds);\r\n            }\r\n\r\n            // this.cd.detectChanges();\r\n            if (emit) {\r\n                this.checkValues = this.checkeds.map(r => r.id);\r\n                this.checkValuesChange.emit(this.checkValues);\r\n                this.checkedChange.emit(this.checkeds);\r\n            }\r\n        }\r\n    }\r\n\r\n    /** åæ¶é©éï¼ä¸è§¦åéä¸­äºä»¶ */\r\n    unCheckRows(ids: any[], emit = false) {\r\n        if (ids && ids.length) {\r\n            this.dfs.setCheckedRows(ids, false);\r\n            this.dgs.setCheckedRows.next({ ids, checked: false });\r\n            // this.cd.detectChanges();\r\n            if (emit) {\r\n                this.checkValues = this.checkeds.map(r => r.id);\r\n                this.checkValuesChange.emit(this.checkValues);\r\n                this.checkedChange.emit(this.checkeds);\r\n            }\r\n        }\r\n    }\r\n\r\n    checkAllRows(emit = true) {\r\n        if (this.canOperateCheckbox()) {\r\n            this.dfs.checkAll();\r\n            this.dgs.checkAll.emit();\r\n            if (emit) {\r\n                this.checkAll.emit();\r\n            }\r\n        }\r\n    }\r\n\r\n    unCheckRow(id: any, emit = true) {\r\n        if (this.canOperateCheckbox()) {\r\n            if (this.currentCell && this.currentCell.rowId == id) {\r\n                this.cancelSelectCell();\r\n            }\r\n\r\n            if (emit) {\r\n                this.dfs.checkRecord(id, false);\r\n            } else {\r\n                this.unCheckRows([id]);\r\n            }\r\n        }\r\n    }\r\n    /** æ¸ç©ºé©éè¡ï¼é»è®¤åªæ¸ç©ºå½åé¡µçé©é\r\n     * clearAll: æ¸ç©ºææ é»è®¤ä¸º false; å¦åä»æ¸ç©ºå½åé¡µçé©éæ°æ®ã\r\n     */\r\n    clearCheckeds(clearAll = false, emitUnCheckAll = true) {\r\n        this.dfs.clearCheckeds(clearAll);\r\n        this.checkValues = [];\r\n        this.cancelSelectCell();\r\n        if (emitUnCheckAll) {\r\n            this.dgs.uncheckAll.emit();\r\n        }\r\n    }\r\n\r\n    clearAll() {\r\n        this.selectedRow = null;\r\n        this.checkValues = [];\r\n        this.dfs.clearAll();\r\n        this.dgs.uncheckAll.emit();\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region Resize Column\r\n\r\n    private getResizeProxyPosLeft(e: MouseEvent) {\r\n        const target = e.target as any;\r\n        const dgRect = this.getBoundingClientRect(this.dgContainer);\r\n        const td = target.parentElement;\r\n        const tdLeft = td.getBoundingClientRect().left;\r\n        const deltaEdge = td.offsetWidth - (e.pageX - tdLeft);\r\n        this.resizeColumnInfo.proxyLineEdge = deltaEdge;\r\n        this.resizeColumnInfo.startWidth = td.offsetWidth;\r\n        this.resizeColumnInfo.startX = e.pageX;\r\n        this.resizeColumnInfo.left = tdLeft - dgRect.left - 1 + deltaEdge;\r\n        return e.pageX - dgRect.left - 1 + deltaEdge;\r\n    }\r\n\r\n    private toggleResizeProxy(show = true) {\r\n        let display = 'block';\r\n        if (!show) {\r\n            display = 'none';\r\n        }\r\n        this.render2.setStyle(this.resizeProxyBg.nativeElement, 'display', display);\r\n        this.render2.setStyle(this.resizeProxy.nativeElement, 'display', display);\r\n    }\r\n\r\n    onColumnResizeBegin(e: MouseEvent) {\r\n        if (this.resizeProxy) {\r\n            this.render2.setStyle(document.body, 'cursor', 'e-resize');\r\n            const proxy = this.resizeProxy.nativeElement;\r\n            const proxyPosLeft = this.getResizeProxyPosLeft(e);\r\n            this.render2.setStyle(proxy, 'left', proxyPosLeft + 'px');\r\n\r\n            let top = 0;\r\n            if ((this.enableFilterRow || this.enableSmartFilter) && this.showFilterBar) {\r\n                top += this.filterBarHeight;\r\n            }\r\n\r\n            if (this.showRowGroupPanel) {\r\n                top += this.rowGroupPanelHeight;\r\n            }\r\n\r\n            this.render2.setStyle(proxy, 'top', `${top}px`);\r\n\r\n            if (!this.autoHeight) {\r\n                this.render2.setStyle(proxy, 'height', (this.height - this.pagerHeight) + 'px');\r\n            } else {\r\n                let bottomH = 0;\r\n                if (this.pagination) {\r\n                    bottomH += this.pagerHeight;\r\n                }\r\n                if (this.showFooter) {\r\n                    bottomH += this.footerHeight;\r\n                }\r\n                this.render2.setStyle(proxy, 'height', `calc(100% - ${bottomH}px)`);\r\n            }\r\n            this.toggleResizeProxy();\r\n        }\r\n    }\r\n\r\n    onColumnResize(e: MouseEvent) {\r\n        const proxy = this.resizeProxy.nativeElement;\r\n        const dgRect = this.getBoundingClientRect(this.dgContainer);\r\n        const proxyPosLeft = e.pageX - dgRect.left - 1 + this.resizeColumnInfo.proxyLineEdge;\r\n        if (proxyPosLeft - this.resizeColumnInfo.left > 20) {\r\n            this.render2.setStyle(proxy, 'left', proxyPosLeft + 'px');\r\n        } else {\r\n            this.render2.setStyle(proxy, 'left', (this.resizeColumnInfo.left + 20) + 'px');\r\n        }\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n    }\r\n\r\n    onColumnResizeEnd(e: MouseEvent, col: DataColumn) {\r\n        this.render2.removeStyle(document.body, 'cursor');\r\n        this.toggleResizeProxy(false);\r\n        this.resizeColumnInfo.proxyLineEdge = 0;\r\n\r\n        let newColWidth = this.resizeColumnInfo.startWidth + e.pageX - this.resizeColumnInfo.startX;\r\n\r\n        if (newColWidth < 20) {\r\n            newColWidth = 20;\r\n        }\r\n\r\n        if (col.width > newColWidth) {\r\n            const t = col.width - newColWidth;\r\n            if (!this.fitColumns && this.scrollInstance.elementRef.nativeElement.scrollLeft) {\r\n                const moveLeft = this.scrollInstance.elementRef.nativeElement.scrollLeft - t;\r\n                this.scrollInstance.scrollToX(moveLeft);\r\n            }\r\n        }\r\n        col.width = newColWidth;\r\n\r\n        if (this.useControlPanel && this.settingService) {\r\n            this.settingService.saveUserConfig(this.id).subscribe(() => {\r\n                this.dfs.columnResizeEnd();\r\n                this.dgs.columnResized.emit();\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        this.dfs.columnResizeEnd();\r\n        this.dgs.columnResized.emit();\r\n\r\n        this.updateFixedColumnCssForFastMode(col);\r\n    }\r\n\r\n    /** è¿ååå®½ */\r\n    restituteColumnsSize() {\r\n        this.dfs.resizeColumns(true);\r\n        this.dgs.columnResized.emit();\r\n    }\r\n\r\n    /** ååæ ¼åå®¹èªéåºåå®½ */\r\n    sizeToContent(col: DataColumn, th: ElementRef) {\r\n        if (!this.AutoColumnWidthUseDblclick) {\r\n            return false;\r\n        }\r\n        let longestText = '';\r\n        const items = this.data;\r\n\r\n        for (let i = items.length - 1; i >= 0; i--) {\r\n            // TFS: 356964 20200203\r\n            let value = Utils.getValue(col.field, items[i]);\r\n            if (value !== 0) {\r\n                value = value || '';\r\n            }\r\n            let text = '' + value;\r\n            if (col.formatter && value !== undefined) {\r\n                text = this.colFormatSer.format(value, items[i], col.formatter);\r\n            }\r\n\r\n            if (Utils.getBLen(text) > Utils.getBLen(longestText)) {\r\n                longestText = text;\r\n            } else {\r\n                this.longTextArea.nativeElement.innerHTML = text;\r\n                const w1 = this.longTextArea.nativeElement.offsetWidth;\r\n                this.longTextArea.nativeElement.innerHTML = longestText;\r\n                const w2 = this.longTextArea.nativeElement.offsetWidth;\r\n\r\n                if (w1 > w2) {\r\n                    longestText = text;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.longTextArea.nativeElement.innerHTML = longestText;\r\n        const maxWidth = this.longTextArea.nativeElement.offsetWidth + 26;\r\n\r\n        this.longTextArea.nativeElement.innerHTML = th.nativeElement.innerText;\r\n        let thMinWidth = this.longTextArea.nativeElement.offsetWidth + 26;\r\n\r\n        if (col.sortable) {\r\n            thMinWidth += 24;\r\n        }\r\n\r\n        col.width = (maxWidth > thMinWidth ? maxWidth : thMinWidth);\r\n\r\n        const colIndex = this.flatColumns.findIndex(c => c.field === col.field);\r\n        if (colIndex === this.flatColumns.length - 1) {\r\n            col.width += 6;\r\n        }\r\n        this.dfs.resizeColumns();\r\n        this.dgs.columnResized.emit();\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region Changes\r\n    getChanges() {\r\n        return this.dfs.getChanges();\r\n    }\r\n\r\n    acceptChanges() {\r\n        this.dfs.acceptChanges();\r\n    }\r\n\r\n    rejectChanges() {\r\n        this.dfs.rejectChanges();\r\n    }\r\n    //#endregion\r\n\r\n    //#region CRUD\r\n\r\n    appendRow(row: any) {\r\n        this.cancelEdit(null);\r\n        this.dfs.appendRow(row);\r\n        this.dataChange.emit(this.dfs.getData());\r\n        this.rowAppended.emit();\r\n    }\r\n\r\n    updateRow(rowId, newData: { [key: string]: any }) {\r\n        this.dfs.updateRow(rowId, newData);\r\n        this.dataChange.emit(this.dfs.getData());\r\n        this.rowUpdated.emit();\r\n    }\r\n\r\n    refreshRow(rowId) {\r\n        const row = this.dfs.findRow(rowId);\r\n        if (row && row.data) {\r\n            this.dfs.rowUpdate$.emit(row);\r\n        } else {\r\n            this.writeConsole('Can not found row by id. id: ' + rowId);\r\n        }\r\n    }\r\n\r\n\r\n    deleteRow(rowId?: any) {\r\n        this.cancelEdit(rowId, false);\r\n        if (!rowId) {\r\n            if (this.selectValue) {\r\n                rowId = this.selectValue;\r\n            } else {\r\n                throw new Error(`å é¤è¡æ¶ä¸»é®æ è¯ID ä¸è½ä¸ºç©ºã`);\r\n            }\r\n        }\r\n        const deleteRow = this.dfs.deleteRow(rowId);\r\n        this.dataChange.emit(this.dfs.getData());\r\n        this.currentCell = null;\r\n        this.dfs.updateProperty('currentCell', null);\r\n        this.cd.detectChanges();\r\n        this.rowDeleted.emit(deleteRow);\r\n    }\r\n\r\n    validateRow() { }\r\n\r\n    insertRow() { }\r\n\r\n    //#endregion\r\n\r\n    //#region Scrolling\r\n\r\n    scrollToLeft() {\r\n        if (this.scrollInstance) {\r\n            this.scrollInstance.scrollToLeft(0, 200);\r\n        }\r\n    }\r\n\r\n    scrollToRight() {\r\n        if (this.scrollInstance) {\r\n            this.scrollInstance.scrollToRight(0, 200);\r\n        }\r\n    }\r\n\r\n    scrollToTop() {\r\n        if (this.scrollInstance) {\r\n            this.scrollInstance.scrollToTop(0, 100);\r\n            this.dfs.updateProperty('scrollInfo', { y: 0, x: 0 });\r\n        }\r\n    }\r\n\r\n    scrollToBottom() {\r\n        if (this.scrollInstance) {\r\n            this.scrollInstance.scrollToBottom(0, 100);\r\n        }\r\n    }\r\n\r\n    //#endregion\r\n\r\n    private _setColumnReadonly(cols: DataColumn[], field: string, readonly = true) {\r\n        if (cols && cols.length && field) {\r\n            const col = cols.find(n => n.field === field);\r\n            if (col) {\r\n                col.readonly = readonly;\r\n            }\r\n        }\r\n    }\r\n\r\n    setColumnReadonly(field: string, readonly = true) {\r\n        this._setColumnReadonly(this.colGroup.leftFixed, field, readonly);\r\n        this._setColumnReadonly(this.colGroup.rightFixed, field, readonly);\r\n        this._setColumnReadonly(this.colGroup.normalColumns, field, readonly);\r\n    }\r\n\r\n    // æ¯å¦ä¸ºå¤è¡¨å¤´\r\n    isMultiHeader() {\r\n        return this.columns && this.columns.length > 1 && Array.isArray(this.columns[1]);\r\n    }\r\n\r\n    toggleVisibleColumn(fields: string[], visible = true) {\r\n        if (!this.isMultiHeader()) {\r\n            this.columns.forEach((cols: DataColumn[]) => {\r\n                fields.forEach(field => {\r\n                    const col = cols.find(c => c.field === field || c.id === field);\r\n                    if (col) {\r\n                        col.visible = visible;\r\n                    }\r\n                });\r\n            });\r\n        } else {\r\n            // å¤è¡¨å¤´\r\n            const allCols = flatten<DataColumn>(this.columns);\r\n\r\n            allCols.forEach(p => {\r\n                if (p.origianlColSpan === undefined) {\r\n                    p.origianlColSpan = p.colspan;\r\n                }\r\n            });\r\n\r\n            fields.forEach(field => {\r\n                const _col = allCols.find(col => col.field === field || col.id === field);\r\n                if (_col) {\r\n\r\n                    if (_col.visible === visible) {\r\n                        return;\r\n                    }\r\n\r\n                    _col.visible = visible;\r\n                    const parents = DatagridColumnsHelper.getParentColumns(_col, allCols);\r\n                    const childs = DatagridColumnsHelper.getChildColumns(_col, allCols);\r\n                    childs.forEach(c => {\r\n                        c.visible = visible;\r\n                    });\r\n                    if (visible && childs.length) {\r\n                        _col.colspan = _col.origianlColSpan;\r\n                    }\r\n\r\n                    const _colspan = _col.colspan || 1;\r\n                    parents.forEach(p => {\r\n                        if (!visible) {\r\n                            p.colspan = p.colspan - _colspan;\r\n                        } else {\r\n                            const _childs = allCols.filter(n => n.parentId === p.id && n.visible);\r\n                            p.colspan = _childs.reduce((r, c) => {\r\n                                r = r + (c.colspan || 1);\r\n                                return r;\r\n                            }, 0);\r\n                        }\r\n\r\n                        p.visible = !!p.colspan;\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    getColumn(field: string) {\r\n        const allCols = flatten<DataColumn>(this.columns);\r\n        return allCols.find(n => n.field === field || n.id === field);\r\n    }\r\n\r\n    showColumn(field: string | string[]) {\r\n        if (typeof field === 'string') {\r\n            this.toggleVisibleColumn([field], true);\r\n        } else {\r\n            this.toggleVisibleColumn(field, true);\r\n        }\r\n        this.columnsChanged();\r\n    }\r\n\r\n    hideColumn(field: string | string[]) {\r\n        if (typeof field === 'string') {\r\n            this.toggleVisibleColumn([field], false);\r\n        } else {\r\n            this.toggleVisibleColumn(field, false);\r\n        }\r\n        this.columnsChanged();\r\n    }\r\n\r\n    updateColumn(field: string, columnObject: { [key: string]: any }, detectChange = true) {\r\n        this.columns.forEach((cols: DataColumn[]) => {\r\n            let column = cols.find(col => col.field === field);\r\n            if (column) {\r\n                column = Object.assign(column, columnObject);\r\n            }\r\n        });\r\n\r\n        if (detectChange) {\r\n            this.columnsChanged();\r\n        }\r\n    }\r\n\r\n    setColumnFormatter(field: string, formatter: any) {\r\n        this.columns.forEach((cols: DataColumn[]) => {\r\n            const column = cols.find(col => col.field === field);\r\n            if (column) {\r\n                column.formatter = formatter;\r\n            }\r\n        });\r\n\r\n        this.columnsChanged();\r\n    }\r\n\r\n    updateColumnFormatterOptions(field: string, formatterOptions: any) {\r\n        this.columns.forEach((cols: DataColumn[]) => {\r\n            const column = cols.find(col => col.field === field);\r\n            if (column && column.formatter) {\r\n                const colFormatter = column.formatter as any;\r\n                colFormatter.options = colFormatter.options || {};\r\n                colFormatter.options = Object.assign(colFormatter.options, formatterOptions || {});\r\n            }\r\n        });\r\n\r\n        this.columnsChanged();\r\n    }\r\n\r\n    setColumnTitle(field: string, title: string) {\r\n        this.columns.forEach((cols: DataColumn[]) => {\r\n            const column = cols.find(col => col.field === field);\r\n            if (column) {\r\n                column.title = title;\r\n            }\r\n        });\r\n\r\n        this.columnsChanged();\r\n    }\r\n\r\n    /**\r\n     * æåº\r\n     * @param sortName æåºå­æ®µï¼å¦ï¼ 'name,age'\r\n     * @param sortOrder æåºæ¹å¼ï¼å¦ï¼'desc, asc'\r\n     */\r\n    sort(sortName?: string, sortOrder?: string) {\r\n        if (sortName === null || sortName === '' || sortOrder === null || sortOrder === '') {\r\n            this.clearSort();\r\n        } else {\r\n            if (sortName && sortOrder) {\r\n                // this.updateSortInfo(sortName, sortOrder);\r\n                this.sortName = sortName;\r\n                this.sortOrder = sortOrder;\r\n                this.dfs.setSortInfo(this.sortName, this.sortOrder);\r\n            }\r\n\r\n            if (!this.remoteSort) {\r\n                this.dfs.clientSort();\r\n            }\r\n            this.onColumnSorted();\r\n        }\r\n    }\r\n\r\n    clearSort() {\r\n        this.sortName = '';\r\n        this.sortOrder = '';\r\n        this.dfs.setSortInfo('', '');\r\n        if (!this.remoteSort) {\r\n            if (this.data && this.data.length) {\r\n                this.dfs.clearSort();\r\n            }\r\n        }\r\n        this.onColumnSorted();\r\n    }\r\n\r\n    onColumnSorted() {\r\n        let params = null;\r\n        if (this.sortName && this.sortOrder) {\r\n            const orders = this.sortOrder.split(',');\r\n            params = this.sortName.split(',').reduce((r, n, i) => {\r\n                r[n] = orders[i] || 'asc';\r\n                return r;\r\n            }, {});\r\n        }\r\n\r\n        if (!this.remoteSort) {\r\n            this.dfs.clientSort();\r\n        }\r\n\r\n        this.columnSorted.emit(params);\r\n    }\r\n\r\n    updateSortInfo(newSortName, newSortOrder) {\r\n        const sortName = this.sortName;\r\n        const sortOrder = this.sortOrder;\r\n        let sortFields = [];\r\n        let sortOrders = [];\r\n        if (sortName) {\r\n            sortFields = sortName.split(',');\r\n            sortOrders = sortOrder.split(',');\r\n        }\r\n\r\n        const _sortFields = newSortName.split(',');\r\n        const _sortOrders = newSortOrder.split(',');\r\n\r\n\r\n        _sortFields.forEach((nField, nIndex) => {\r\n            const colOrder = _sortOrders[nIndex] || 'asc';\r\n            let newOrder = colOrder;\r\n            const i = sortFields.findIndex(n => n === nField);\r\n            if (i >= 0) {\r\n                const _order = sortOrders[i] === 'asc' ? 'desc' : 'asc';\r\n                newOrder = _order;\r\n                if (this.multiSort && newOrder === 'asc') {\r\n                    newOrder = undefined;\r\n                    sortFields.splice(i, 1);\r\n                    sortOrders.splice(i, 1);\r\n                } else {\r\n                    sortOrders[i] = _order;\r\n                }\r\n\r\n            } else {\r\n                if (this.multiSort) {\r\n                    sortFields.push(nField);\r\n                    sortOrders.push(colOrder);\r\n                } else {\r\n                    sortFields = [nField];\r\n                    sortOrders = [colOrder];\r\n                }\r\n            }\r\n        });\r\n\r\n        this.sortName = sortFields.join(',');\r\n        this.sortOrder = sortOrders.join(',');\r\n    }\r\n    /** åè®¾ç½® */\r\n    showControlPanel($event: MouseEvent) {\r\n        $event.stopPropagation();\r\n        const self = this;\r\n        if (this.useControlPanel && this.settingService) {\r\n            this.checkSettingHttp();\r\n            this.settingService.show(self);\r\n        }\r\n    }\r\n\r\n    checkSettingHttp() {\r\n        if (!this.settingService.httpRestService || !this.settingService.httpRestService.befRepository) {\r\n            const settingsHttp = this.inject.get(GRID_SETTINGS_HTTP, null);\r\n            this.settingService.httpRestService = settingsHttp;\r\n        }\r\n    }\r\n\r\n    disableHeader(flag = true) {\r\n        this.dgs.disableHeader.emit(flag);\r\n    }\r\n\r\n    /** è·åç¨æ·ä¸ªæ§åè®¾ç½® */\r\n    private userProfileSetting(settings) {\r\n\r\n        const { sortInfo, viewColumns, groupField, columnFormat } = settings;\r\n        let _sortName, _sortOrder;\r\n        if (sortInfo) {\r\n            const { sortName, sortOrder } = sortInfo;\r\n            _sortName = sortName;\r\n            _sortOrder = sortOrder\r\n            if (sortName && sortName.length) {\r\n                this.sortName = sortName.join(',');\r\n                if (sortOrder) {\r\n                    this.sortOrder = sortOrder.join(',');\r\n                }\r\n            }\r\n\r\n            this['__sortInfo'] = sortInfo;\r\n        }\r\n\r\n        if (viewColumns && viewColumns.length) {\r\n            this.columns = this.columns.map(cols => {\r\n                this.settingService.updateColumnFormat(cols, columnFormat, this);\r\n                return this.settingService.newVisibleOrderColumns(cols, viewColumns, columnFormat, this);\r\n            });\r\n\r\n            this.addControlCol();\r\n\r\n            this.columns.forEach(cols => {\r\n                cols.forEach(col => {\r\n                    if (_sortName && _sortName.length) {\r\n                        const i = _sortName.indexOf(col.field);\r\n                        if (i > -1) {\r\n                            col.order = _sortOrder[i];\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n        }\r\n\r\n        if (this.groupRows && (groupField !== null && groupField !== undefined)) {\r\n            this.groupField = groupField;\r\n        }\r\n    }\r\n\r\n    // æ¯å¦ä¸ºå½åæ´»å¨çè¡¨æ ¼\r\n    private isActived() {\r\n        return DomHandler.hasClass(this.dgContainer.nativeElement, this._active_datagrid_cls);\r\n    }\r\n\r\n    // æ¸çæ æçDOM\r\n    private cleanDom() {\r\n        // æ¸ç TOOL-TIP\r\n        const tips = document.querySelectorAll('.datagrid-cell-tooltip');\r\n        if (tips && tips.length) {\r\n            tips.forEach(n => {\r\n                n.remove();\r\n            });\r\n        }\r\n    }\r\n\r\n    cellIsReadOnly(col: DataColumn, rowData) {\r\n        let readOnly = false;\r\n        if (this.disableRow) {\r\n            readOnly = this.disableRow(rowData);\r\n        }\r\n\r\n        if (!readOnly) {\r\n            if (col.readonly !== undefined) {\r\n                if (typeof col.readonly === 'boolean') {\r\n                    readOnly = col.readonly;\r\n                } else if (typeof col.readonly === 'function') {\r\n                    readOnly = col.readonly(rowData);\r\n                }\r\n            }\r\n        }\r\n        return readOnly;\r\n    }\r\n\r\n\r\n    private groupFieldChanged() {\r\n        this.columnsChanged();\r\n        if (this.settingService) {\r\n            this.checkSettingHttp();\r\n            this.settingService.saveUserConfig(this.id).subscribe();\r\n        }\r\n        this.groupFieldChange.emit({ newGroupField: this.groupField, grid: this });\r\n    }\r\n\r\n    removeGroupField(field: string) {\r\n        const fields = this.groupField.split(',');\r\n        const delIdx = fields.indexOf(field);\r\n        if (delIdx > -1) {\r\n            fields.splice(delIdx, 1).join(',');\r\n        }\r\n        this.groupField = fields.join(',');\r\n        this.toggleVisibleColumn([field], true);\r\n        this.groupFieldChanged();\r\n    }\r\n\r\n    clearAllGrouppingField($event) {\r\n        this.showLoading();\r\n        setTimeout(() => {\r\n            const fields = this.groupField.split(',');\r\n            this.groupField = '';\r\n            this.toggleVisibleColumn(fields, true);\r\n            this.groupFieldChanged();\r\n            this.closeLoading();\r\n        });\r\n    }\r\n\r\n    setGroupFields(groupFields) {\r\n        this.groupField = groupFields;\r\n        this.columnsChanged();\r\n    }\r\n\r\n    activeDataGrid(active = true) {\r\n        const grids = document.querySelectorAll('.f-datagrid.datagrid-active');\r\n        if (grids.length) {\r\n            grids.forEach(n => {\r\n                this.render2.removeClass(n, this._active_datagrid_cls);\r\n            });\r\n        }\r\n        if (active) {\r\n            this.render2.addClass(this.dgContainer.nativeElement, this._active_datagrid_cls);\r\n        }\r\n    }\r\n\r\n\r\n    onDatagridContainerFocus($event) {\r\n        if (!this.disabled) {\r\n            this.activeDataGrid();\r\n        }\r\n    }\r\n\r\n\r\n    private setShadowColumnForFastMode() {\r\n        if (this.fast) {\r\n            const fixedLeft = this.flatColumns.filter(n => n.fixed === 'left');\r\n            const fixedRight = this.flatColumns.filter(n => n.fixed === 'right');\r\n\r\n            if (fixedLeft && fixedLeft.length) {\r\n                let leftWidthTotal = 0;\r\n                if (this.showCheckbox) {\r\n                    leftWidthTotal += 36;\r\n                }\r\n                if (this.showLineNumber) {\r\n                    leftWidthTotal += this.lineNumberWidth;\r\n                }\r\n                fixedLeft.forEach((n, index) => {\r\n                    leftWidthTotal += index ? fixedLeft[index - 1].width : 0;\r\n                    n.left = leftWidthTotal;\r\n                });\r\n\r\n                fixedLeft[fixedLeft.length - 1]['leftShadowCol'] = true;\r\n\r\n                this.dfs.getColumn(fixedLeft[fixedLeft.length - 1].field)['leftShadowCol'] = true;\r\n            }\r\n\r\n            if (fixedRight && fixedRight.length) {\r\n                fixedRight[0]['rightShadowCol'] = true;\r\n                let rightWidthTotal = fixedRight.reduce((r, c) => {\r\n                    return r + c.width;\r\n                }, 0);\r\n\r\n                fixedRight.forEach((n, index) => {\r\n                    rightWidthTotal -= n.width;\r\n                    n.right = rightWidthTotal;\r\n                });\r\n\r\n                this.dfs.getColumn(fixedRight[0].field)['rightShadowCol'] = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    // ååå¯¹é½æ¹å¼æ ·å¼å¨æçæ\r\n    private setCellStyle() {\r\n\r\n        if (!this.flatColumns || !this.flatColumns.length) {\r\n            return;\r\n        }\r\n\r\n        const cssarr = [];\r\n\r\n        const  verticalAlign = (column) => {\r\n            let va = 'center';\r\n            switch (column.valign) {\r\n                case 'top':\r\n                    va = 'flex-start';\r\n                    break;\r\n                case 'bottom':\r\n                    va = 'flex-end';\r\n                    break;\r\n                default:\r\n                    va = 'center';\r\n                    break;\r\n            }\r\n            return va;\r\n        };\r\n\r\n        const horizontalAlign = (column) => {\r\n            let ha = 'flex-start';\r\n            if (column.align === 'right') {\r\n                ha = 'flex-end';\r\n            } else if (column.align === 'center') {\r\n                ha = 'center';\r\n            }\r\n            return ha;\r\n        };\r\n\r\n        this.setShadowColumnForFastMode();\r\n\r\n        this.flatColumns.forEach(col => {\r\n            const css = `${this.customStyleKey()} .cell-text-align__${col.field} {align-items: ${verticalAlign(col)}, justify-content: ${horizontalAlign(col)}}`;\r\n            cssarr.push(css);\r\n\r\n            if (this.fast) {\r\n                if (col.fixed === 'left' || col.fixed === 'right') {\r\n                    let fixed = `${this.customStyleKey()} .f-datagrid-fast__fixed-${col.fixed}[field=\"${col.field}\"]{`;\r\n                    if (col.fixed === 'left') {\r\n                        fixed += `left: ${col.left}px}`;\r\n                    }\r\n\r\n                    if (col.fixed === 'right') {\r\n                        fixed += `right: ${col.right}px}`;\r\n                    }\r\n\r\n                    cssarr.push(fixed);\r\n                }\r\n            }\r\n        });\r\n\r\n        this.dgs.appendCssRules(cssarr);\r\n    }\r\n\r\n    private updateFixedColumnCssForFastMode(col: DataColumn) {\r\n        if (this.fast) {\r\n            // update css.\r\n            const colIndex = this.flatColumns.findIndex(n => n.field === col.field);\r\n            const nextColumn = this.flatColumns[colIndex + 1];\r\n            this.setShadowColumnForFastMode();\r\n            if (nextColumn && nextColumn.fixed) {\r\n                const ruleName =  `${this.customStyleKey()} .f-datagrid-fast__fixed-${nextColumn.fixed}[field=\"${nextColumn.field}\"]`;\r\n                const stylecss = ruleName + '{' + nextColumn.fixed + ':' + nextColumn[nextColumn.fixed] + 'px}';\r\n                this.dgs.appendCssRules([stylecss]);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { cloneDeep } from 'lodash-es';\r\nimport { IdService } from '@farris/ui-common';\r\nimport {\r\n    Component, OnInit, ViewChild, TemplateRef, Renderer2, ElementRef,\r\n    NgZone, Injector, Input, OnDestroy, HostListener, Optional\r\n} from '@angular/core';\r\nimport { FilterPanelService, FilterPanelComponent } from '@farris/ui-filter-panel';\r\nimport { DatagridComponent } from '../../datagrid.component';\r\nimport { DatagridSmartFilterService } from '../../services/datagrid-smart-filter.service';\r\n\r\n@Component({\r\n    selector: 'datagrid-smart-filter, [datagrid-smart-filter]',\r\n    templateUrl: 'datagrid-smart-filter.component.html',\r\n    providers: [\r\n        FilterPanelService\r\n    ]\r\n})\r\nexport class DatagridSmartFilterComponent implements OnInit, OnDestroy {\r\n    @Input() column;\r\n    @Input() filterData = null;\r\n    @Input() disabled = false;\r\n\r\n    @ViewChild('sort') sortTmp: TemplateRef<any>;\r\n\r\n    filterPanelRef: FilterPanelComponent;\r\n    private idService: IdService;\r\n    private smartFilterDataChanged$ = null;\r\n    private removeFilter$ = null;\r\n    private clearAllFilter$ = null;\r\n    private smartFilterEvents = [];\r\n    constructor(\r\n        private render: Renderer2, private el: ElementRef,\r\n        private zone: NgZone, private inject: Injector,\r\n        private filterPanelService: FilterPanelService,\r\n        private smartFilterSer: DatagridSmartFilterService,\r\n        @Optional() private dg: DatagridComponent\r\n        ) {\r\n            this.idService = this.inject.get(IdService, null);\r\n        }\r\n\r\n    ngOnInit() {\r\n\r\n        if (!this.removeFilter$) {\r\n            this.removeFilter$ = this.smartFilterSer.removeFilter.subscribe((e: any) => {\r\n                if (e && e.labelCode  === this.column.field) {\r\n                    this.filterData = null;\r\n                    this.render.removeClass(this.el.nativeElement, 'active');\r\n                }\r\n            });\r\n\r\n            this.smartFilterEvents.push(this.removeFilter$);\r\n        }\r\n\r\n        if (!this.clearAllFilter$) {\r\n            this.clearAllFilter$ = this.smartFilterSer.clearAllFilter.subscribe( () => {\r\n                this.filterData = null;\r\n                this.render.removeClass(this.el.nativeElement, 'active');\r\n            });\r\n\r\n            this.smartFilterEvents.push(this.clearAllFilter$);\r\n        }\r\n        if (this.dg && !this.smartFilterDataChanged$) {\r\n            this.smartFilterDataChanged$ = this.dg.dgs['smartFilterDataChange'].subscribe((e: any) => {\r\n                if (e && this.column.field === e.fieldCode) {\r\n                    this.filterData.value = e.value;\r\n                    this.filterData.control.single = e.control.single;\r\n                }\r\n            });\r\n            this.smartFilterEvents.push(this.smartFilterDataChanged$);\r\n        }\r\n\r\n        this.dg.dgs.clearFilter.subscribe(() => {\r\n            this.filterData = null;\r\n            this.render.removeClass(this.el.nativeElement, 'active');\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.filterPanelRef) {\r\n            this.filterPanelService.hidePanel();\r\n            this.filterPanelRef = null;\r\n        }\r\n\r\n        if (this.smartFilterEvents && this.smartFilterEvents.length) {\r\n            this.smartFilterEvents.forEach(n => {\r\n                n.unsubscribe();\r\n                n = null;\r\n            });\r\n\r\n            this.smartFilterEvents = [];\r\n        }\r\n    }\r\n\r\n\r\n\r\n    private getFilterData() {\r\n        const { field, title } = this.column;\r\n        if (!this.filterData) {\r\n            this.filterData = this.smartFilterSer.controlData.find(n => n.id === field);\r\n        }\r\n\r\n        if (!this.filterData) {\r\n            this.filterData = {\r\n                id: field,\r\n                labelCode: field,\r\n                code: field,\r\n                name: title,\r\n                control: this.smartFilterSer.getColumnFilterData(this.column),\r\n                placeHolder: '',\r\n                value: {\r\n                    value: ''\r\n                }\r\n            };\r\n        }\r\n\r\n        return cloneDeep(this.filterData);\r\n    }\r\n\r\n\r\n    private getPanelPosition($event) {\r\n        let x = $event.pageX - 33;\r\n        const y = $event.pageY +  9;\r\n        const targetRect = $event.target.getBoundingClientRect();\r\n        let moveArrow = 0;\r\n        if (window.innerWidth - x < 380) {\r\n            const i = 380 - (window.innerWidth - x);\r\n            x = x - i - 20;\r\n            moveArrow = targetRect.left - x;\r\n        }\r\n\r\n        return { x, y, moveArrow};\r\n    }\r\n\r\n    private hideFilterPanel() {\r\n        if (this.filterPanelRef) {\r\n            this.filterPanelService.hidePanel();\r\n            this.filterPanelRef = null;\r\n            if (!this.filterData ||  (this.filterData.control.controltype === 'bool-check' ? !this.filterData.value.value : !this.filterData.valueText)) {\r\n                this.render.removeClass(this.el.nativeElement, 'active');\r\n            }\r\n        }\r\n    }\r\n\r\n    private clearColumnFilter(e) {\r\n        this.filterData = null;\r\n        this.hideFilterPanel();\r\n        this.smartFilterSer.removeCondition(e);\r\n    }\r\n\r\n    showFilterPanel($event) {\r\n        $event.stopPropagation();\r\n\r\n        this.render.addClass(this.el.nativeElement, 'active');\r\n        const { x, y, moveArrow } = this.getPanelPosition($event);\r\n        this.filterPanelRef = this.filterPanelService.showPanel({\r\n            left: x,\r\n            top: y,\r\n            item: this.getFilterData(),\r\n            panelExtendTemplate: this.column.sortable ? this.sortTmp : null,\r\n            localStorageKey: 'smartfilter_' + this.dg.dgs.createConfigKey(this.dg.id),\r\n            target: $event.target\r\n        });\r\n\r\n        if (moveArrow) {\r\n            const arrowEl = this.filterPanelRef['el'].querySelector('.f-filter-panel-arrow');\r\n            if (arrowEl) {\r\n                this.render.setStyle(arrowEl, 'left', `${moveArrow}px`);\r\n            }\r\n        }\r\n\r\n        this.filterPanelRef.hidePanel.subscribe(e => {\r\n            this.hideFilterPanel();\r\n        });\r\n\r\n        this.filterPanelRef.filterSubmit.subscribe(e => {\r\n            \r\n            if (e.filter && e.filter.length) {\r\n                this.filterData = e.item || null;\r\n                this.hideFilterPanel();\r\n                this.smartFilterSer.filterConditionChanged({ conditions: e.filter, controlData: e.item , from: 'panel'});\r\n            } else {\r\n                this.clearColumnFilter(e.item);\r\n            }\r\n        });\r\n\r\n        this.filterPanelRef.clearFilter.subscribe((e: any) => {\r\n            this.clearColumnFilter(e);\r\n        });\r\n    }\r\n\r\n    @HostListener('click', ['$event'])\r\n    onClick($event) {\r\n        $event.stopPropagation();\r\n        if (this.disabled) {\r\n            return;\r\n        }\r\n        this.showFilterPanel($event);\r\n        return false;\r\n    }\r\n\r\n    onSort($event, order) {\r\n        $event.stopPropagation();\r\n\r\n        if (this.column.order === order) {\r\n            this.column.order = '';\r\n        } else {\r\n            this.column.order = order;\r\n        }\r\n\r\n        const sortName = this.dg.sortName;\r\n        const sortOrder = this.dg.sortOrder;\r\n        let sortFields = [];\r\n        let sortOrders = [];\r\n        if (sortName) {\r\n            sortFields = sortName.split(',');\r\n            sortOrders = sortOrder.split(',');\r\n        }\r\n\r\n        let newOrder =  this.column.order;\r\n        const i = sortFields.findIndex(n => n === this.column.field);\r\n        if (i >= 0) {\r\n            if (newOrder === '') {\r\n                newOrder = undefined;\r\n                sortFields.splice(i, 1);\r\n                sortOrders.splice(i, 1);\r\n            } else {\r\n                sortOrders[i] = newOrder;\r\n            }\r\n        } else {\r\n            if (this.dg.multiSort) {\r\n                sortFields.push(this.column.field);\r\n                sortOrders.push(newOrder);\r\n            } else {\r\n                sortFields = [this.column.field];\r\n                sortOrders = [newOrder];\r\n            }\r\n        }\r\n\r\n        this.hideFilterPanel();\r\n\r\n\r\n        this.dg.sortName = sortFields.join(',');\r\n        this.dg.sortOrder = sortOrders.join(',');\r\n        this.dg.dfs.setSortInfo(this.dg.sortName, this.dg.sortOrder);\r\n\r\n        this.dg.beforeSortColumn(this.dg.sortName, this.dg.sortOrder, this.dg).subscribe(() => {\r\n            this.dg.onColumnSorted();\r\n        });\r\n    }\r\n}\r\n","import { LocaleModule } from '@farris/ui-locale';\r\nimport { NgModule } from '@angular/core';\r\nimport { FilterPanelModule, FilterPanelComponent } from '@farris/ui-filter-panel';\r\nimport { DatagridSmartFilterComponent } from './datagrid-smart-filter.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        DatagridSmartFilterComponent\r\n    ],\r\n    imports: [\r\n        FilterPanelModule,\r\n        LocaleModule.forRoot(),\r\n    ],\r\n    exports: [\r\n        DatagridSmartFilterComponent\r\n    ]\r\n})\r\nexport class DatagridSmartFilterModule { }\r\n","import { DatagridComponent } from './../datagrid.component';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { Pipe, PipeTransform, Injector, Optional, ElementRef, LOCALE_ID } from '@angular/core';\r\nimport { Utils } from './utils';\r\nimport { ColumnFormatService } from '@farris/ui-common/column';\r\nimport { DataColumn } from '../types/data-column';\r\n\r\n@Pipe({name: 'formatCellData', pure: false})\r\nexport class FormatCellDataPipe implements PipeTransform {\r\n\r\n    private localeService: LocaleService;\r\n    private dataGrid: DatagridComponent;\r\n    private elRef: ElementRef;\r\n    private localeId = 'ZH-CHS';\r\n    constructor(private cfs: ColumnFormatService, @Optional() private injector?: Injector) {\r\n        this.localeId = this.injector.get(LOCALE_ID);\r\n    }\r\n\r\n    transform(col: any, rowData: any, groupFooter = false, footer = false): any {\r\n        if (rowData && col && col.field) {\r\n            const value = Utils.getValue(col.field, rowData);\r\n            if (col.editor && col.editor.options && col.editor.options.isPassword && !col.formatter) {\r\n                return  value ? '******' : '';\r\n            }\r\n\r\n            let formatterFn = col.formatter;\r\n            if (groupFooter) {\r\n                formatterFn = col.groupFooter ? col.groupFooter.formatter : undefined;\r\n            } else if (footer) {\r\n                formatterFn = col.footer ? col.footer.formatter : undefined;\r\n                if (typeof formatterFn === 'object') {\r\n                    if (!formatterFn.options) {\r\n                        const opts = { type: formatterFn.type, options: formatterFn };\r\n                        formatterFn = opts;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (!formatterFn) {\r\n                let resoultStr = value;\r\n                if (col.isMultilingualField) {\r\n                    resoultStr = this.getMultilingualValue(value);\r\n                } else {\r\n                    if (value !== null && value !== undefined && value !== '0' && typeof value === 'string') {\r\n                        if (value.indexOf('\\n') > -1) {\r\n                            // return value.replace(/\\n/g, '<br>');\r\n                            this.getDatagridInstance();\r\n                            if (this.dataGrid && this.dataGrid.nowrap) {\r\n                                resoultStr = value.replace(/\\n/g, ' ');\r\n                            }\r\n                        }\r\n                    }\r\n                    // value.replace(/ /g, '&ensp;');\r\n                }\r\n                return this.setPlaceHolderWhenEnableEditCellStyle(col, resoultStr, rowData, groupFooter || footer);\r\n            } else {\r\n                if (formatterFn) {\r\n                    if ( formatterFn.type === 'number') {\r\n                        if (!formatterFn.options || !Object.keys(formatterFn.options).length ) {\r\n                            formatterFn.options = {\r\n                                thousand: ',',\r\n                                precision: 2\r\n                            };\r\n                        }\r\n                    }\r\n                    if ( formatterFn.type === 'datetime') {\r\n                        if (formatterFn.options) {\r\n                            if (col.editor && col.editor.options) {\r\n                                const { dateRange, dateRangeDatesDelimiter } = col.editor.options;\r\n                                formatterFn.options = Object.assign({ dateRange, dateRangeDatesDelimiter }, formatterFn.options);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n\r\n                this.getDatagridInstance();\r\n                if (this.dataGrid) {\r\n                    const r = this.cfs.format(value, rowData, formatterFn, { utils: this.dataGrid.commonUtils });\r\n                    return this.setPlaceHolderWhenEnableEditCellStyle(col, r, rowData, groupFooter || footer);\r\n                } else {\r\n                    return this.cfs.format(value, rowData, formatterFn);\r\n                }\r\n            }\r\n        }\r\n\r\n        return '';\r\n    }\r\n\r\n    // è·åå¤è¯­æ°æ®\r\n    private getMultilingualValue(valObj) {\r\n        if (valObj && typeof valObj === 'object' && Object.keys(valObj).length > 0) {\r\n            if (this.injector) {\r\n                this.localeService = this.injector.get(LocaleService);\r\n            }\r\n            if (this.localeService) {\r\n                const localeId = this.localeService.localeId;\r\n                return Utils.getMultilingualValue(valObj, localeId);\r\n            } else {\r\n                return valObj['zh-CHS'];\r\n            }\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    // å¯ç¨æ è¯å¯ç¼è¾ååæ ¼æ¶ï¼åå®¹ä¸ºç©ºæ¶è®¾ç½®æç¤ºè¯­\r\n    private setPlaceHolderWhenEnableEditCellStyle(col, val, rowData, isFooter) {\r\n        this.getDatagridInstance();\r\n        if (this.dataGrid) {\r\n            /*\r\n            if (!this.dataGrid.editable || (val !== null && val !== undefined && val !== '') || isFooter || this.cellIsReadOnly(col, rowData)) {\r\n                if (this.elRef) {\r\n                    const span = this.elRef.nativeElement.querySelector('.cell-text-box');\r\n                    if (span && span.className.indexOf('cell-empty') > -1) {\r\n                        span.className = span.className.replace('cell-empty', ' ');\r\n                    }\r\n                }\r\n\r\n                return val;\r\n            }\r\n*/\r\n            if (this.dataGrid.enableEditCellStyle ) {\r\n\r\n                if (!this.dataGrid.editable || (val !== null && val !== undefined && val !== '') || isFooter || this.cellIsReadOnly(col, rowData)) {\r\n                    if (this.elRef) {\r\n                        const span = this.elRef.nativeElement.querySelector('.cell-text-box');\r\n                        if (span && span.className.indexOf('cell-empty') > -1) {\r\n                            span.className = span.className.replace('cell-empty', ' ');\r\n                        }\r\n                    }\r\n    \r\n                    return val;\r\n                }\r\n\r\n\r\n                if (this.elRef) {\r\n                    const span = this.elRef.nativeElement.querySelector('.cell-text-box');\r\n                    if (span && span.className.indexOf('cell-empty') === -1) {\r\n                        span.className = span.className + ' cell-empty';\r\n                    }\r\n                }\r\n                return Utils.getWhenEmptyText(col, this.localeId);\r\n            }\r\n\r\n            return val;\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    private getDatagridInstance() {\r\n        if (!this.dataGrid) {\r\n            this.dataGrid = this.injector.get(DatagridComponent, null);\r\n        }\r\n\r\n        if (!this.elRef) {\r\n            this.elRef = this.injector.get(ElementRef, null);\r\n        }\r\n    }\r\n\r\n    cellIsReadOnly(col: DataColumn, rowData) {\r\n        return this.dataGrid.cellIsReadOnly(col, rowData);\r\n    }\r\n}\r\n","\r\nimport { first, switchMap, delay, debounceTime, tap, takeUntil, filter } from 'rxjs/operators';\r\nimport { Subscription, interval, of, Subject } from 'rxjs';\r\nimport ResizeObserver from 'resize-observer-polyfill';\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-12 07:47:12\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-11-26 10:21:25\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport {\r\n    Component, OnInit, Input, ViewChild, Renderer2,\r\n    ElementRef, OnDestroy, ChangeDetectorRef, AfterViewInit, AfterViewChecked,\r\n    OnChanges, SimpleChanges, ChangeDetectionStrategy, NgZone, Injector, forwardRef, Inject, Optional, ApplicationRef, HostListener, Output, EventEmitter\r\n} from '@angular/core';\r\n\r\nimport { DatagridFacadeService } from '../../services/datagrid-facade.service';\r\nimport { ScrollbarDirective } from '../../scrollbar/scrollbar.directive';\r\nimport { ColumnGroup } from '../../types';\r\nimport { SelectedRow, DataResult, ROW_INDEX_FIELD, IS_GROUP_ROW_FIELD, GROUP_ROW_FIELD, IS_GROUP_FOOTER_ROW_FIELD } from '../../services/state';\r\nimport { SCROLL_X_ACTION, SCROLL_Y_ACTION, SCROLL_X_REACH_START_ACTION, SCROLL_X_REACH_END_ACTION, TR_PREFIX } from '../../types/constant';\r\nimport { DatagridService } from '../../services/datagrid.service';\r\nimport { DatagridComponent } from '../../datagrid.component';\r\nimport { FormatCellDataPipe } from '../../utils/format-cell-data.pipe';\r\nimport { ColumnFormatService } from '@farris/ui-common/column';\r\nimport { ContextMenuItem } from '@farris/ui-context-menu';\r\n\r\n@Component({\r\n    selector: 'datagrid-body',\r\n    templateUrl: './body.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DatagridBodyComponent implements OnInit, OnDestroy, OnChanges, AfterViewInit, AfterViewChecked {\r\n    // èªå¨é«åº¦æ¶ï¼ç¦ç¨çºµåæ»å¨æ¡\r\n    psConfig = { swipeEasing: false, minScrollbarLength: 15, handlers: ['click-rail', 'drag-thumb', 'wheel', 'touch'], suppressScrollY: this.dg.autoHeight };\r\n\r\n    top: number;\r\n    height: number;\r\n    width: number;\r\n    colsWidth: number;\r\n    totalWidth: number;\r\n    leftFixedWidth: number;\r\n    rightFixedWidth: number;\r\n    rowHeight: number;\r\n    bodyStyle: any;\r\n    scrollTop = 0;\r\n    scrollLeft = 0;\r\n    deltaTopHeight = 0;\r\n    // wheelHeight = 0;\r\n    wheelWidth = 0;\r\n    private _fixedRightScrollLeft = 0;\r\n    get fixedRightScrollLeft() {\r\n        return this._fixedRightScrollLeft;\r\n    }\r\n    set fixedRightScrollLeft(val) {\r\n        this._fixedRightScrollLeft = val;\r\n    }\r\n\r\n    maxScrollLeft = 0;\r\n    showRightShadow = false;\r\n    @Input() footerHeight = 0;\r\n    @Input() canvasWidth;\r\n    @Input() columnsGroup: ColumnGroup;\r\n    // èæå è½½\r\n    @Input() topHideHeight = 0;\r\n    @Input() bottomHideHeight = 0;\r\n\r\n    @Input() startRowIndex = 0;\r\n    @Input() data: any;\r\n\r\n    @Output() dataChange = new EventEmitter();\r\n\r\n    @Input() scrollBarMode = 'auto';\r\n    @Input() contextMenuItems: ContextMenuItem[];\r\n\r\n    @Input() checkedRows = [];\r\n\r\n    /** æ§è½ä¼åçï¼é»è®¤ä¸º false */\r\n    @Input() fast = false;\r\n\r\n\r\n    @ViewChild('ps') ps?: ScrollbarDirective;\r\n    @ViewChild('mainRows') tableRowsCmp: any;\r\n    @ViewChild('rightRows') rightRowsCmp: any;\r\n    @ViewChild('fixedLeft') fixedLeftEl: ElementRef;\r\n    @ViewChild('fixedRight') fixedRightEl: ElementRef;\r\n    @ViewChild('main') mainArea: ElementRef;\r\n    @ViewChild('viewScrollContainer') viewScrollContainer: ElementRef;\r\n\r\n\r\n    visibleContextMenus = [];\r\n\r\n    currentRowId = undefined;\r\n\r\n    private _hoverRowIndex = -1;\r\n    get hoverRowIndex(): number {\r\n        return this._hoverRowIndex;\r\n    }\r\n    set hoverRowIndex(rowIdx: number) {\r\n        this._hoverRowIndex = rowIdx;\r\n        this.cd.detectChanges();\r\n    }\r\n\r\n    get selectedRows() {\r\n        return this.dg.selections;\r\n    }\r\n\r\n    private gridSizeSubscribe: Subscription;\r\n    private columnResizeSubscribe: Subscription;\r\n    private onDataSourceChangeSubscribe: Subscription;\r\n    private selectRowSubscribe: Subscription;\r\n    private unselectRowSubscribe: Subscription;\r\n    private selectAllSubscribe: Subscription;\r\n    private checkRowSubscribe: Subscription;\r\n    private clearSelectionsSubscribe: Subscription;\r\n    private checkAllSubscribe: Subscription;\r\n    private uncheckRowSubscribe: Subscription;\r\n    private clearCheckedsSubscribe: Subscription;\r\n\r\n    private subscriptions = [];\r\n\r\n    public dfs: DatagridFacadeService;\r\n    public dgs: DatagridService;\r\n    public ngZone: NgZone;\r\n    public render: Renderer2;\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    private viewportH;\r\n    viewportW;\r\n    canvasHeight;\r\n    private minRowBuffer = 3;\r\n    private vScrollDir = 1;\r\n    private rowsCache = {};\r\n    private lastRenderedScrollTop = 0;\r\n    private lastRenderedScrollLeft = 0;\r\n    prevScrollTop = 0;\r\n    prevScrollLeft = 0;\r\n    rows = [];\r\n    blankTopHeight = 0;\r\n    blankBottomHeight = 0;\r\n\r\n    //////////////////////////////////////////////////////////////////////////\r\n\r\n    get scrollbarXHeight() {\r\n        if (this.dg && this.ps && this.ps.instance) {\r\n            const h = this.dg.scrollBarShowMode === 'allways' && this.ps.instance['scrollbarXActive'] ? 22 : 0;\r\n            if (this.ps.instance['scrollbarYActive'] && h) {\r\n                return h + 18; // + (this.dg.showScrollArrow && this.ps.instance['scrollbarYActive'] ? 18 : 0);\r\n            }\r\n\r\n        }\r\n    }\r\n    get scrollbarYWidth() {\r\n        if (this.dg && this.ps && this.ps.instance) {\r\n            return this.dg.scrollBarShowMode === 'allways' && this.ps.instance['scrollbarYActive'] && this.showRightShadow ? 18 : 0;\r\n        }\r\n    }\r\n\r\n    cellContentFormatter: FormatCellDataPipe = null;\r\n\r\n    // å½å¯ç¨å¤éä¸åè®¸å¤éä¸­ï¼åè¡¨ä¸è½ç¼è¾æ¶ï¼åéä¸­åç¦æ­¢è§¦åbody çclick äºä»¶\r\n    private __triggerBodyClickEvent = true;\r\n    private destroy$ = new Subject();\r\n    private _onMouseClick = null;\r\n    private _scrollTimer: any = 0;\r\n    private _scrollXTimer: any = 0;\r\n    private ro: ResizeObserver | null = null;\r\n    private resizeObserverTimer: any = 0;\r\n    constructor(\r\n        private injector: Injector,\r\n        private app: ApplicationRef,\r\n        @Optional() public dg: DatagridComponent,\r\n        private cd: ChangeDetectorRef, private el: ElementRef\r\n    ) {\r\n        this.dfs = this.injector.get(DatagridFacadeService);\r\n        this.dgs = this.injector.get(DatagridService);\r\n        this.ngZone = this.injector.get(NgZone);\r\n        this.render = this.injector.get(Renderer2);\r\n\r\n        const columnFormatService = this.injector.get(ColumnFormatService);\r\n        this.cellContentFormatter = new FormatCellDataPipe(columnFormatService, this.injector);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n        this.listenSubjects();\r\n        this.dg.scrollInstance = this.ps;\r\n        const s1 = this.dgs.showGridHeader.subscribe(headerHeight => {\r\n            this.updateContainerSize(headerHeight);\r\n        });\r\n        this.subscriptions.push(s1);\r\n\r\n        const s10 = this.dgs.footerPositionChanged.subscribe(() => {\r\n            this.updateContainerSize();\r\n        });\r\n        this.subscriptions.push(s10);\r\n\r\n        const s2 = this.dgs.rowHeightChanged.subscribe(() => {\r\n            this.cd.detectChanges();\r\n        });\r\n        this.subscriptions.push(s2);\r\n\r\n        const s3 = this.dfs.clientSort$.subscribe(() => {\r\n            this.checkScrollbarPosition(true);\r\n            this.cd.detectChanges();\r\n            // this.dg.columnSorted.emit();\r\n        });\r\n        this.subscriptions.push(s3);\r\n\r\n        const s5 = this.dg.dgs.columnsChanged.pipe(\r\n            delay(100)\r\n        ).subscribe((e: any) => {\r\n            if (e && e.scrollToLeft) {\r\n                this.ps.elementRef.nativeElement.scrollTo(0, 0);\r\n                this.ps.scrollToLeft(0, 100);\r\n            }\r\n        });\r\n        this.subscriptions.push(s5);\r\n        this.viewScrollContainer.nativeElement.addEventListener('click', this._onMouseClick = (e) => {\r\n            this.onMouseClick(e);\r\n        });\r\n    }\r\n\r\n    private updateContainerSize(headerHeight?: any) {\r\n        const hh = headerHeight || this.dg.realHeaderHeight;\r\n        this.setPositionTop(hh);\r\n        this.height = this.dg.height - this.top;\r\n        this.bodyStyle = this.getBodyStyle();\r\n        this.cd.detectChanges();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.data && !changes.data.isFirstChange()) {\r\n            this.bodyStyle = this.getBodyStyle();\r\n            this.dfs.setCurrentPageData(changes.data.currentValue);\r\n\r\n            const isDiffrentDataSource = !!changes.data.currentValue.map(n => n.id).filter(n => {\r\n                return !changes.data.previousValue.find(p => p.id === n)\r\n            }).length;\r\n\r\n            this.onDataChanged(isDiffrentDataSource);\r\n\r\n            if (!changes.data.currentValue || !changes.data.currentValue.length) {\r\n                setTimeout(() => {\r\n                    this.setPositionTop(this.dg.realHeaderHeight);\r\n                });\r\n            }\r\n        }\r\n\r\n        if (changes.footerHeight !== undefined && !changes.footerHeight.isFirstChange()) {\r\n            this.bodyStyle = this.getBodyStyle();\r\n        }\r\n\r\n        if (changes.scrollBarMode !== undefined && !changes.scrollBarMode.isFirstChange()) {\r\n            if (this.ps && this.ps.instance && this.scrollBarMode === 'allways' && this.ps.instance.scrollbarYActive) {\r\n                this.rightFixedWidth += this.showRightShadow ? 18 : 0;\r\n            } else {\r\n                this.rightFixedWidth = this.columnsGroup.rightFixedWidth;\r\n            }\r\n             \r\n            if (this.dg.scrollBarShowMode === 'allways' && this.ps && this.ps.instance && this.ps.instance.scrollbarXActive) {\r\n                this.blankBottomHeight += 22;\r\n            }\r\n        }\r\n\r\n        if (changes.showScrollArrow && !changes.showScrollArrow.isFirstChange()) {\r\n            this.ps && this.ps.update();\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n        this.cellContentFormatter = null;\r\n        this.dg.scrollInstance = null;\r\n        this.destroySubscriptions();\r\n        this.viewScrollContainer.nativeElement.removeEventListener('click', this._onMouseClick);\r\n\r\n        if (this.ro) {\r\n            this.ro.unobserve(this.viewScrollContainer.nativeElement);\r\n            this.ro.disconnect();\r\n        }\r\n\r\n        if (this.resizeObserverTimer) {\r\n            clearTimeout(this.resizeObserverTimer);\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.ro = new ResizeObserver((e) => {\r\n            if (this.viewScrollContainer.nativeElement.offsetParent) {\r\n                if (this.resizeObserverTimer) {\r\n                    clearTimeout(this.resizeObserverTimer);\r\n                }\r\n                this.resizeObserverTimer = setTimeout(() => {\r\n                    this.updateCanvasHeight();\r\n                    if (this.scrollBarMode === 'allways') {\r\n                        this.ps.update();\r\n                    }\r\n                    this.cd.detectChanges();\r\n                    this.dgs.scrollbarUpdate.emit({ scrollbarRef: this.ps.instance, rightWidth: this.rightFixedWidth });\r\n                }, 100);\r\n            }\r\n        });\r\n\r\n        this.ro.observe(this.viewScrollContainer.nativeElement);\r\n    }\r\n\r\n    ngAfterViewChecked() {\r\n    }\r\n\r\n    private setPositionTop(headerHeight: number) {\r\n        this.top = headerHeight;\r\n        if ((this.dg.enableFilterRow || this.dg.enableSmartFilter) && this.dg.showFilterBar) {\r\n            this.top += this.dg.filterBarHeight;\r\n        }\r\n\r\n        if (this.dg.showRowGroupPanel) {\r\n            this.top += this.dg.rowGroupPanelHeight;\r\n        }\r\n\r\n        if (this.dg.showFooter && (this.dg.footerPosition === 'top' || this.dg.footerPosition === 'both')) {\r\n            this.top += this.dg.footerHeight;\r\n        }\r\n    }\r\n\r\n    private checkScrollbarPosition(toTop = false) {\r\n        if (!this.dg.data || !this.dg.data.length) {\r\n            return;\r\n        }\r\n        const scrollBar: any = this.ps.instance;\r\n        const scrollElRef = this.ps.elementRef.nativeElement;\r\n        // scrollBar.update();\r\n        const lastScrollLeft = scrollBar ? scrollBar.lastScrollLeft : 0;\r\n        const lastScrollTop = scrollBar ? scrollBar.lastScrollTop : 0;\r\n\r\n        // const lastScrollLeft = this.scrollLeft;\r\n        // const lastScrollTop = this.scrollTop;\r\n\r\n        const scrollTop = scrollElRef.scrollTop;\r\n        const scrollLeft = scrollElRef.scrollLeft;\r\n\r\n        if (!toTop) {\r\n            if (scrollTop != lastScrollTop) {\r\n                this.ps.scrollToTop(lastScrollTop);\r\n                this.dgs.onScrollMove(lastScrollTop, SCROLL_Y_ACTION);\r\n            }\r\n        } else {\r\n            this.ps.scrollToTop();\r\n            this.dgs.onScrollMove(lastScrollTop, SCROLL_Y_ACTION);\r\n        }\r\n\r\n        this.scrollLeft = lastScrollLeft;\r\n        if (scrollLeft != lastScrollLeft) {\r\n            this.ps.scrollToX(lastScrollLeft);\r\n            this.dgs.onScrollMove(lastScrollLeft, SCROLL_X_ACTION);\r\n        } else {\r\n            if (lastScrollLeft) {\r\n                this.dgs.onScrollMove(lastScrollLeft, SCROLL_X_ACTION);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * æ°æ®åçååï¼éæ°å è½½æ°æ®æ¶æ§è¡\r\n     * éç½®æ»å¨æ¡ä½ç½®\r\n     */\r\n    private onDataChanged(isDiffrentDataSource = true) {\r\n        this.dg.setPagerHeight();\r\n        this.viewportH = this.getViewPortHeight();\r\n        this.bodyStyle = this.getBodyStyle();\r\n\r\n        /**\r\n         * update:\r\n         * node_modules\\perfect-scrollbar\\types\\perfect-scrollbar.d.ts\r\n         * lastScrollTop: number\r\n         */\r\n        if (this.ps && this.ps.instance && !this.dg.isEditing() && !this.dg.clientFilterChanged && !this.dg.autoHeight ) {\r\n            this.scrollTop = 0;\r\n            this.lastRenderedScrollTop = 0;\r\n            this.ps.scrollToTop();\r\n            this.scrollLeft = 0;\r\n            this.ps.scrollToLeft();\r\n        }\r\n\r\n        this.rowsCache = {};\r\n        const keepscrollPos = () => {\r\n            const scrollInfo = this.dg.dfs.getState().scrollInfo;\r\n            if (scrollInfo) {\r\n                if (scrollInfo.y) {\r\n                    this.scrollTop = scrollInfo.y;\r\n                    this.dg.scrollInstance.scrollToY(scrollInfo.y);\r\n                    this.dgs.onScrollMove(scrollInfo.y, SCROLL_Y_ACTION);\r\n                }\r\n\r\n                if (scrollInfo.x) {\r\n                    this.scrollLeft = scrollInfo.x;\r\n                    this.dg.scrollInstance.scrollToX(scrollInfo.x);\r\n                    this.dg.dgs.onScrollMove(scrollInfo.x, SCROLL_X_ACTION);\r\n                }\r\n            }\r\n        };\r\n\r\n        if (!this.dg.nowrap || this.dg.autoHeight) {\r\n            this.renderData(false);\r\n            setTimeout(() => {\r\n                this.updateRowHeight();\r\n            }, 100);\r\n        } else {\r\n            keepscrollPos();\r\n            this.renderData(false);            \r\n            this.ps.update();\r\n        }\r\n        if (isDiffrentDataSource) {\r\n            this.dg.initSelectOrChecked();\r\n        } else {\r\n            this.dg.refreshSelectedData();\r\n        }\r\n        this.dg.clientFilterChanged = false;\r\n        this.dataChange.emit(this.data);\r\n    }\r\n\r\n    private destroySubscriptions() {\r\n        if (this.subscriptions && this.subscriptions.length) {\r\n            this.subscriptions.forEach((sub: Subscription) => {\r\n                if (sub) {\r\n                    sub.unsubscribe();\r\n                    sub = null;\r\n                }\r\n            });\r\n\r\n            this.subscriptions = [];\r\n        }\r\n    }\r\n\r\n    private listenSubjects() {\r\n        this.destroySubscriptions();\r\n\r\n        this.gridSizeSubscribe = this.dfs.gridSize$.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).pipe(\r\n            debounceTime(50)\r\n        ).subscribe(state => {\r\n            if (state) {\r\n                this.dg.setPagerHeight();\r\n                const hh = this.dg.setHeaderHeight();\r\n                this.setPositionTop(hh);\r\n\r\n                this.height = state.height - this.top;\r\n\r\n                const oldWidth = this.width;\r\n                this.width = Math.floor(state.width);\r\n                this.rowHeight = state.rowHeight;\r\n\r\n                if (this.dg.showBorder) {\r\n                    this.width -= 2;\r\n                }\r\n\r\n                this.viewportW = this.width;\r\n                this.viewportH = this.getViewPortHeight();\r\n                this.canvasHeight = this.getCanvasHeight();\r\n\r\n                this.ngZone.runOutsideAngular(() => {\r\n                    this.columnsGroup = state.columnsGroup;\r\n                    this.checkScrollbarPosition();\r\n                    // this.setFixedRightPosition();\r\n                    this.updateColumnSize(state.columnsGroup);\r\n\r\n                    this.dgs.showFixedShadow.emit({ showRightShadow: this.showRightShadow, x: this.fixedRightScrollLeft });\r\n                    this.renderData(false);\r\n                    \r\n                    if (this._scrollXTimer) {\r\n                        clearTimeout(this._scrollXTimer);\r\n                    }\r\n                    if (!this.dg.nowrap || this.dg.autoHeight) {\r\n                        this._scrollXTimer = setTimeout(() => {\r\n                            this.updateRowHeight();\r\n                            this.keepScrollbarPosition(oldWidth);\r\n                        }, 100);\r\n                    } else {\r\n                        this._scrollXTimer = setTimeout(() => {\r\n                            this.keepScrollbarPosition(oldWidth);\r\n                        }, 100);\r\n                    }\r\n                    // this.ps.update();\r\n                });\r\n\r\n                if (this.scrollBarMode === 'allways') {\r\n                    setTimeout(() => {\r\n                        if (!this.dg.showScrollArrow) {\r\n                            this.dgs.scrollbarUpdate.emit({ scrollbarRef: this.ps.instance, rightWidth: this.rightFixedWidth });\r\n                        }\r\n                        this.keepScrollbarPosition(oldWidth);\r\n                    }, 100);\r\n                }\r\n            }\r\n        });\r\n\r\n        this.subscriptions.push(this.gridSizeSubscribe);\r\n\r\n        this.columnResizeSubscribe = this.dfs.columnResize$.subscribe((cg: ColumnGroup) => {\r\n            this.updateColumnSize(cg);\r\n            this.cd.detectChanges();\r\n        });\r\n        this.subscriptions.push(this.columnResizeSubscribe);\r\n\r\n        this.dgs.setSelecedRow.subscribe((r: any) => {\r\n            if (r && r.selected) {\r\n                this.currentRowId = r.id;\r\n            } else {\r\n                this.currentRowId = undefined;\r\n            }\r\n        });\r\n        this.selectRowSubscribe = this.dfs.selectRow$.subscribe((row: SelectedRow) => {\r\n            if (row) {\r\n                this.currentRowId = row.id;\r\n                // 20210817 æ¹åé®ç§»å¨åå·æ°è§å¾ç¶æ\r\n                this.cd.detectChanges();\r\n            }\r\n        });\r\n        this.subscriptions.push(this.selectRowSubscribe);\r\n\r\n        this.unselectRowSubscribe = this.dfs.unSelectRow$.subscribe((prevRow: SelectedRow) => {\r\n            if (prevRow && prevRow.id === this.currentRowId) {\r\n                this.currentRowId = undefined;\r\n                this.dg.selectedRow = null;\r\n            }\r\n\r\n            if (!this.dg.editable && this.dg.multiSelect) {\r\n                this.__triggerBodyClickEvent = this.dg.selectionMode === 'default';\r\n            }\r\n\r\n            this.cd.detectChanges();\r\n        });\r\n        this.subscriptions.push(this.unselectRowSubscribe);\r\n\r\n        this.selectAllSubscribe = this.dfs.selectAll$.subscribe((rows: SelectedRow[]) => {\r\n            this.dg.selectAll.emit(rows);\r\n            this.cd.detectChanges();\r\n        });\r\n        this.subscriptions.push(this.selectAllSubscribe);\r\n\r\n        this.checkRowSubscribe = this.dfs.checkRow$.subscribe((row: SelectedRow) => {\r\n            this.dg.checked.emit(row);\r\n            this.checkedRowsChanged();\r\n            // this.cd.detectChanges();\r\n        });\r\n        this.subscriptions.push(this.checkRowSubscribe);\r\n\r\n        this.clearSelectionsSubscribe = this.dfs.clearSelections$.subscribe(() => {\r\n            this.currentRowId = undefined;\r\n            if (this.dg.checkOnSelect) {\r\n                this.checkedRowsChanged();\r\n            }\r\n            this.dg.unSelectAll.emit();\r\n        });\r\n        this.subscriptions.push(this.clearSelectionsSubscribe);\r\n\r\n        this.uncheckRowSubscribe = this.dfs.unCheckRow$.subscribe((prevRow: SelectedRow) => {\r\n            this.dg.unChecked.emit(prevRow);\r\n            this.checkedRowsChanged();\r\n            // this.cd.detectChanges();\r\n        });\r\n        this.subscriptions.push(this.uncheckRowSubscribe);\r\n\r\n        this.checkAllSubscribe = this.dfs.checkAll$.subscribe((rows: SelectedRow[]) => {\r\n            this.dg.checkAll.emit(rows);\r\n            this.checkedRowsChanged();\r\n            // this.cd.detectChanges();\r\n        });\r\n        this.subscriptions.push(this.checkAllSubscribe);\r\n\r\n        this.clearCheckedsSubscribe = this.dfs.clearCheckeds$.subscribe((rows: SelectedRow[]) => {\r\n            if (this.dg.selectOnCheck) {\r\n                this.currentRowId = undefined;\r\n            }\r\n            this.dg.unCheckAll.emit(rows);\r\n            this.checkedRowsChanged();\r\n            this.cd.detectChanges();\r\n        });\r\n        this.subscriptions.push(this.clearCheckedsSubscribe);\r\n\r\n        this.subscriptions.push(this.dgs.setScrollbarPosition.subscribe(() => {\r\n            this.checkScrollbarPosition();\r\n            this.updateScrollPosition(this.scrollLeft);\r\n        }));\r\n\r\n        this.dgs.columnResized.pipe(\r\n            delay(100)\r\n        ).subscribe((e: any) => {\r\n            if (!this.dg.nowrap ||\r\n                (this.dg.currentCell && this.dg.currentCell.isEditing && this.dg.currentCell.column &&\r\n                    this.dg.currentCell.column.editor && this.dg.currentCell.column.editor.type === 'textarea')) {\r\n                const trdoms = this.dg.dgContainer.nativeElement.querySelectorAll('.f-datagrid-body-row:not(f-datagrid-footer-row)');\r\n                trdoms.forEach(n => n.style.height = 'auto');\r\n\r\n                let trID = '';\r\n                if (e) {\r\n                    const rowId = e.id;\r\n                    trID = TR_PREFIX + rowId;\r\n                }\r\n\r\n                this.updateRowHeight(trID);\r\n                // trdoms.forEach(n => n.style.height = '');\r\n            }\r\n\r\n            if (this.dg.headerWrap) {\r\n                this.dg.setHeaderHeight();\r\n                this.dfs.columnResizeEnd();\r\n            }\r\n\r\n        });\r\n\r\n        this.dgs.cellContentWrapChanged.pipe(\r\n            delay(100)\r\n        ).subscribe(() => {\r\n            this.updateRowHeight();\r\n        });\r\n\r\n\r\n        this.dg.dfs.rowUpdate$.subscribe((row: { index: number, data: any }) => {\r\n            if (row && row.data) {\r\n                this.buildCustomCellStyle(row);\r\n            }\r\n        });\r\n    }\r\n\r\n    private keepScrollbarPosition(oldWidth: number) {\r\n        if (!this.cd['destroyed']) {\r\n            this.cd.detectChanges();\r\n        }\r\n\r\n        this.ps.update();\r\n\r\n        if (!this.ps.instance) {\r\n            return;   \r\n        }\r\n\r\n        const scrollReach = this.ps.instance.reach;\r\n        let t = this.width - oldWidth;\r\n        let scrollLeft = t;\r\n        if (scrollReach.x === 'start' || !this.ps.instance.lastScrollLeft) {\r\n            scrollLeft = 0;\r\n            this.ps.scrollToX(0);\r\n        } else if (scrollReach.x === 'end') {\r\n            this.ps.scrollToRight(0);\r\n            scrollLeft = this.ps.elementRef.nativeElement.scrollLeft;\r\n        } else {\r\n            scrollLeft = this.ps.instance.lastScrollLeft - t;\r\n            this.ps.elementRef.nativeElement.scrollLeft = scrollLeft;\r\n        }\r\n\r\n        this.updateScrollPosition(scrollLeft);\r\n\r\n    }\r\n\r\n\r\n    private updateColumnSize(cg: ColumnGroup) {\r\n        if (cg) {\r\n            this.columnsGroup = cg;\r\n            this.rightFixedWidth = this.columnsGroup.rightFixedWidth;\r\n            this.leftFixedWidth = this.columnsGroup.leftFixedWidth;\r\n            this.colsWidth = this.columnsGroup.normalWidth;\r\n\r\n            this.scrollLeft = this.ps.elementRef.nativeElement.scrollLeft;\r\n            this.maxScrollLeft = this.colsWidth + this.leftFixedWidth;\r\n            this.fixedRightScrollLeft = this.maxScrollLeft;\r\n            // grid å®¹å¨å®½åº¦\r\n            const dgContainerWidth = this.dg.dgContainer.nativeElement.offsetWidth;\r\n            // ææåå®½ä¹å\r\n            const allColsWidth = Math.floor(this.columnsGroup.totalWidth);\r\n\r\n            this.bodyStyle = this.getBodyStyle();\r\n            if (dgContainerWidth > allColsWidth || dgContainerWidth === allColsWidth) {\r\n                this.showRightShadow = false;\r\n            } else {\r\n                this.showRightShadow = true;\r\n                // å³ä¾§åºå®åçä½ç½®\r\n                this.fixedRightScrollLeft = this.width  + this.scrollLeft;\r\n            }\r\n\r\n\r\n            if (this.ps && this.ps.instance && this.dg.scrollBarShowMode === 'allways' && this.ps.instance.scrollbarYActive) {\r\n                if (this.showRightShadow) {\r\n                    this.rightFixedWidth += 18;\r\n                    this.fixedRightScrollLeft = this.fixedRightScrollLeft - this.rightFixedWidth;\r\n                } else {\r\n                    if (this.canvasWidth > this.totalWidth && this.canvasWidth - this.totalWidth  < 18) {\r\n                        this.rightFixedWidth += 18;\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.totalWidth = this.columnsGroup.totalWidth;\r\n            if (this.scrollBarMode === 'allways' && !this.rightRowsCmp && !this.dg.useControlPanel) {\r\n                this.totalWidth += 18;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n    // private setFixedRightPosition() {\r\n    //     this.rightFixedWidth = this.columnsGroup.rightFixedWidth;\r\n    //     this.leftFixedWidth = this.columnsGroup.leftFixedWidth;\r\n    //     this.colsWidth = this.columnsGroup.normalWidth;\r\n\r\n    //     this.scrollLeft = this.ps.elementRef.nativeElement.scrollLeft;\r\n    //     this.maxScrollLeft = this.colsWidth + this.leftFixedWidth;\r\n    //     // grid å®¹å¨å®½åº¦\r\n    //     const dgContainerWidth = this.dg.dgContainer.nativeElement.offsetWidth;\r\n    //     // ææåå®½ä¹å\r\n    //     const allColsWidth = Math.floor(this.columnsGroup.totalWidth);\r\n\r\n\r\n    //     this.bodyStyle = this.getBodyStyle();\r\n    //     if (dgContainerWidth > allColsWidth || dgContainerWidth === allColsWidth) {\r\n    //         this.showRightShadow = false;\r\n    //         this.fixedRightScrollLeft = this.maxScrollLeft;\r\n    //     } else {\r\n    //         this.showRightShadow = true;\r\n    //         // å³ä¾§åºå®åçä½ç½®\r\n    //         this.fixedRightScrollLeft = this.width - this.rightFixedWidth + this.scrollLeft;\r\n    //     }\r\n    // }\r\n\r\n    private buildCustomCellStyle(row: { index: number, data: any }) {\r\n\r\n        let rightTrs = [];\r\n        let leftTrs = [];\r\n        if (this.fixedRightEl) {\r\n            rightTrs = this.fixedRightEl.nativeElement.querySelectorAll('tr');\r\n        }\r\n\r\n        if (this.fixedLeftEl) {\r\n            leftTrs = this.fixedLeftEl.nativeElement.querySelectorAll('.fixed-left-row');\r\n        }\r\n\r\n        const trs = this.mainArea.nativeElement.querySelectorAll('tr.f-datagrid-body-row');\r\n\r\n        const updateCellStyle = (arr, col, style) => {\r\n            if (arr.length) {\r\n                const td = arr[row.index].querySelector(`[field=\"${col.field}\"]`);\r\n                if (td) {\r\n                    this.dg.renderCustomStyle(style, td);\r\n                }\r\n            }\r\n        };\r\n\r\n        this.dg.flatColumns.forEach(col => {\r\n            if (col.styler) {\r\n                const _rd = row.data;\r\n                const cs = col.styler(_rd[col.field], _rd, row.index);\r\n                if (cs && Object.keys(cs).length) {\r\n                    updateCellStyle(leftTrs, col, cs);\r\n                    updateCellStyle(rightTrs, col, cs);\r\n                    updateCellStyle(trs, col, cs);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private checkedRowsChanged() {\r\n        this.dgs.onCheckedRowsCountChange();\r\n        const checkedRows = this.dg.checkeds;\r\n        this.dg.checkValues = checkedRows.map(r => r.id);\r\n        this.dg.checkValuesChange.emit(this.dg.checkValues);\r\n        this.dg.checkedChange.emit(checkedRows);\r\n    }\r\n\r\n    private getTrDomHeight() {\r\n        const list = [];\r\n        let rightTrs = [];\r\n        let leftTrs = [];\r\n        let trdoms = [];\r\n        if (this.fixedRightEl) {\r\n            rightTrs = this.fixedRightEl.nativeElement.querySelectorAll('tr');\r\n        }\r\n\r\n        if (this.fixedLeftEl) {\r\n            leftTrs = this.fixedLeftEl.nativeElement.querySelectorAll('.fixed-left-row');\r\n        }\r\n\r\n        if (this.mainArea) {\r\n            trdoms = this.mainArea.nativeElement.querySelectorAll('tr.f-datagrid-body-row');\r\n        }\r\n        trdoms.forEach((tr, i) => {\r\n            let t1 = 0;\r\n            const t2 = Math.ceil(tr.offsetHeight);\r\n            let t3 = 0;\r\n            if (leftTrs && leftTrs.length) {\r\n                t1 = Math.ceil(leftTrs[i].offsetHeight);\r\n            }\r\n\r\n            if (rightTrs && rightTrs.length) {\r\n                t3 = Math.ceil(rightTrs[i].offsetHeight);\r\n            }\r\n\r\n            const _h = Math.max(t1, t2, t3, this.dg.rowHeight);\r\n            list.push(_h);\r\n        });\r\n        return list;\r\n    }\r\n    /** åè®¸æ°æ®æè¡æ¶ï¼è®¡ç®è¡å·çè¡é« */\r\n    updateRowHeight(trDomId = null) {\r\n\r\n        if (this.fast) {\r\n            return;\r\n        }\r\n\r\n\r\n        if (!this.mainArea) {\r\n            return;\r\n        }\r\n\r\n        const dgBody = this.el.nativeElement.querySelector('div.f-datagrid-body');\r\n        if (dgBody) {\r\n            if (!this.dg.nowrap || this.dg.autoHeight) {\r\n                this.render.addClass(dgBody, 'data-wrap');\r\n            } else {\r\n                this.render.removeClass(dgBody, 'data-wrap');\r\n            }\r\n        }\r\n\r\n        let cssTextArr = [];\r\n\r\n        if (!trDomId) {\r\n            this.rows.forEach((r, i) => {\r\n                const rowId = this.dfs.primaryId(r);\r\n                const trID = TR_PREFIX + rowId;\r\n                const leftTrId = trID + '_fixedleft';\r\n                const rightTrId = trID + '_fixedright';\r\n\r\n                if (!this.dg.nowrap || this.dg.autoHeight) {\r\n                    const list = this.getTrDomHeight();\r\n                    const h = list[i];\r\n\r\n                    cssTextArr.push(`${this.dg.customStyleKey()} .f-datagrid-body.data-wrap #${leftTrId}{ height: ${h}px }`);\r\n                    cssTextArr.push(`${this.dg.customStyleKey()} .f-datagrid-body.data-wrap #${trID}{ height: ${h}px }`);\r\n                    cssTextArr.push(`${this.dg.customStyleKey()} .f-datagrid-body.data-wrap #${rightTrId}{ height: ${h}px }`);\r\n                } else {\r\n                    // cssTextArr.push(`${this.dg.customStyleKey()} .f-datagrid-body #${leftTrId}{ height: ${list[i]}px }`);\r\n                    // cssTextArr.push(`${this.dg.customStyleKey()} .f-datagrid-body #${trID}{ height: ${list[i]}px }`);\r\n                    // cssTextArr.push(`${this.dg.customStyleKey()} .f-datagrid-body #${rightTrId}{ height: ${list[i]}px }`);\r\n                    const key1 = `${this.dg.customStyleKey()} .f-datagrid-body #${leftTrId}`;\r\n                    const key2 = `${this.dg.customStyleKey()} .f-datagrid-body #${trID}`;\r\n                    const key3 = `${this.dg.customStyleKey()} .f-datagrid-body #${rightTrId}`;\r\n\r\n                    this.dgs.removeCssRule(key1);\r\n                    this.dgs.removeCssRule(key2);\r\n                    this.dgs.removeCssRule(key3);\r\n\r\n                }\r\n            });\r\n\r\n            this.dgs.appendCssRules(cssTextArr);\r\n        } else {\r\n            cssTextArr = [];\r\n            const domSel = '#' + trDomId;\r\n            const _arr = [];\r\n            if (this.fixedRightEl) {\r\n                const rtr = this.fixedRightEl.nativeElement.querySelector(domSel);\r\n                if (rtr) {\r\n                    _arr.push(Math.ceil(rtr.offsetHeight));\r\n                }\r\n            }\r\n\r\n            if (this.fixedLeftEl) {\r\n                const ltr = this.fixedLeftEl.nativeElement.querySelector(domSel);\r\n                if (ltr) {\r\n                    _arr.push(Math.ceil(ltr.offsetHeight));\r\n                }\r\n            }\r\n\r\n            if (this.mainArea) {\r\n                const tr = this.mainArea.nativeElement.querySelector(domSel);\r\n                if (tr) {\r\n                    _arr.push(Math.ceil(tr.offsetHeight));\r\n                }\r\n            }\r\n\r\n            const _h = Math.max(..._arr);\r\n\r\n            const leftTrId = trDomId + '_fixedleft';\r\n            const rightTrId = trDomId + '_fixedright';\r\n            if (!this.dg.nowrap || this.dg.autoHeight) {\r\n                cssTextArr.push(`${this.dg.customStyleKey()} .f-datagrid-body.data-wrap #${leftTrId}{ height: ${_h}px;}`);\r\n                cssTextArr.push(`${this.dg.customStyleKey()} .f-datagrid-body.data-wrap #${trDomId}{ height: ${_h}px;}`);\r\n                cssTextArr.push(`${this.dg.customStyleKey()} .f-datagrid-body.data-wrap #${rightTrId}{ height: ${_h}px;}`);\r\n            } else {\r\n                cssTextArr.push(`${this.dg.customStyleKey()} .f-datagrid-body #${leftTrId}{ height: ${_h}px }`);\r\n                cssTextArr.push(`${this.dg.customStyleKey()} .f-datagrid-body #${trDomId}{ height: ${_h}px }`);\r\n                cssTextArr.push(`${this.dg.customStyleKey()} .f-datagrid-body #${rightTrId}{ height: ${_h}px }`);\r\n            }\r\n\r\n            this.dgs.appendCssRules(cssTextArr);\r\n        }\r\n\r\n        this.updateCanvasHeight();\r\n\r\n        // ç§»é¤height: auto\r\n        const trdoms = this.dg.dgContainer.nativeElement.querySelectorAll('.f-datagrid-body-row:not(f-datagrid-footer-row)');\r\n        trdoms.forEach(n => n.style.height = '');\r\n\r\n        if (!this.cd['destroyed']) {\r\n            this.cd.detectChanges();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    private getBodyStyle() {\r\n        let h = this.getViewPortHeight();\r\n        if (!this.data.length) {\r\n            if (this.dg.autoHeight) {\r\n                h = this.dg.emptyDataHeight;\r\n            }\r\n\r\n            if (this.dg.footerData && this.dg.showFooter) {\r\n                let fd = this.dg.footerData;\r\n                if (this.dg.footerData.subscribe) {\r\n                    fd = this.dg.footerData['value'];\r\n                }\r\n\r\n                if (fd && Array.isArray(fd) && fd.length) {\r\n                    h = h - this.dg.footerHeight;\r\n\r\n                    if (this.dg.footerPosition === 'both') {\r\n                        h = h - this.dg.footerHeight;\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (this.dg.showFooter && this.dg.footerPosition === 'both') {\r\n                h = h - this.dg.footerHeight;\r\n            }\r\n        }\r\n        return {\r\n            height: `${Math.floor(h)}px`\r\n        };\r\n    }\r\n\r\n    private updateScrollPosition(scrollLeft: any) {\r\n        this.scrollLeft = scrollLeft;\r\n\r\n        this.fixedRightScrollLeft = this.scrollLeft + this.width - this.rightFixedWidth;\r\n        if (this.fixedRightScrollLeft === this.maxScrollLeft || this.fixedRightScrollLeft > this.maxScrollLeft) {\r\n            this.fixedRightScrollLeft = this.maxScrollLeft;\r\n            this.showRightShadow = false;\r\n        } else {\r\n            this.showRightShadow = true;\r\n        }\r\n\r\n        if (this.fixedLeftEl) {\r\n            this.render.setStyle(this.fixedLeftEl.nativeElement, 'transform', `translate3d(${this.scrollLeft}px, 0px, 0px)`);\r\n        }\r\n\r\n        if (this.fixedRightEl) {\r\n            this.render.setStyle(this.fixedRightEl.nativeElement, 'transform', `translate3d(${this.fixedRightScrollLeft}px, 0px, 0px)`);\r\n        }\r\n    }\r\n\r\n    onScrollToX($event: any) {\r\n        const x = $event.target.scrollLeft;\r\n        this.updateScrollPosition(x);\r\n        // this.cd.detectChanges();\r\n        this.dgs.onScrollMove(x, SCROLL_X_ACTION);\r\n        this.dgs.showFixedShadow.emit({ showRightShadow: this.showRightShadow, x: this.fixedRightScrollLeft });\r\n    }\r\n\r\n    onScrollToY($event: any) {\r\n\r\n        if (this._scrollTimer) {\r\n            clearTimeout(this._scrollTimer);\r\n        }\r\n\r\n        this._scrollTimer = setTimeout(() => {\r\n            const y = $event.target.scrollTop;\r\n\r\n            if (this.dg.virtualized) {\r\n                this.handleScroll();\r\n            }\r\n\r\n            this.scrollTop = y;\r\n\r\n            this.dg.scrollY.emit(y);\r\n            this.dgs.onScrollMove(y, SCROLL_Y_ACTION);\r\n        }, 100);\r\n    }\r\n\r\n    onPsXReachStart($event: any) {\r\n        const x = $event.target.scrollLeft;\r\n        this.updateScrollPosition(x);\r\n        this.dgs.onScrollMove(x, SCROLL_X_REACH_START_ACTION);\r\n    }\r\n\r\n    onPsXReachEnd($event: any) {\r\n        this.showRightShadow = false;\r\n        // const x = $event.target.scrollLeft;\r\n        // this.updateScrollPosition(x);\r\n        // this.cd.detectChanges();\r\n        // // this.dgs.onShowFixedShadow(this.showRightShadow);\r\n        // this.dgs.onScrollMove(x, SCROLL_X_REACH_END_ACTION);\r\n    }\r\n\r\n    isChecked(rowData: any) {\r\n        if (rowData) {\r\n            return this.dfs.isRowChecked(rowData[this.dg.idField]);\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    isSelected(rowData: any) {\r\n        if (rowData) {\r\n            return this.dfs.isRowSelected(rowData[this.dg.idField]);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    toggleGroupRow(row, open = true) {\r\n        row.expanded = open;\r\n        this.ps.update();\r\n    }\r\n\r\n\r\n\r\n    /** =================================== å ====== é ====== çº¿ =================================== */\r\n\r\n    /** è·åå¯è§åºåé«åº¦ */\r\n    private getViewPortHeight() {\r\n        let viewPortHeight = this.dg.height;\r\n        if (this.dg.showHeader) {\r\n            viewPortHeight = viewPortHeight - this.dg.realHeaderHeight;\r\n        }\r\n\r\n        if ((this.dg.enableFilterRow || this.dg.enableSmartFilter) && this.dg.showFilterBar) {\r\n            viewPortHeight -= this.dg.filterBarHeight;\r\n        }\r\n\r\n        if (this.dg.showRowGroupPanel) {\r\n            viewPortHeight -= this.dg.rowGroupPanelHeight;\r\n        }\r\n\r\n        if (this.dg.showFooter && this.data.length) {\r\n            viewPortHeight = viewPortHeight - this.dg.footerHeight;\r\n        }\r\n\r\n        if (this.dg.pagination) {\r\n            viewPortHeight = viewPortHeight - this.dg.pagerHeight - 2;\r\n        }\r\n\r\n        if (this.dg.showBorder) {\r\n            viewPortHeight -= 2;\r\n        }\r\n\r\n        this.viewportH = viewPortHeight;\r\n        return viewPortHeight;\r\n    }\r\n\r\n    // ä¸æè¡æ¶ï¼æææ°æ®çé«åº¦\r\n    private allRowsHeight() {\r\n        const rowHeightpatch = 1;  // this.dg.autoHeight ? 2 : 1;\r\n        const rowHeight = this.dg.rowHeight + rowHeightpatch;\r\n\r\n        let itemsCount = 0;\r\n        if (this.dg.groupSummaryPosition === 'inGroupRow') {\r\n            itemsCount = this.data.filter(n => !n['__group_footer__']).length;\r\n        } else {\r\n            itemsCount = this.data.length;\r\n        }\r\n\r\n        let h = itemsCount * rowHeight;\r\n\r\n        if (this.dg.autoHeight) {\r\n            h += itemsCount;\r\n        } else {\r\n            h += 2;\r\n        }\r\n\r\n        return h;\r\n    }\r\n\r\n    private getCanvasHeight() {\r\n        let canvasHeight = 0;\r\n\r\n        if (!this.data || !this.data.length) {\r\n            this.canvasHeight = 0;\r\n            return 0;\r\n        }\r\n\r\n        if (this.dg.nowrap) {\r\n            canvasHeight = this.allRowsHeight();\r\n        } else {\r\n            canvasHeight = this.getTrDomHeight().reduce((r, c) => r + c, 0);\r\n        }\r\n\r\n        if (!canvasHeight) {\r\n            canvasHeight = this.viewportH;\r\n        }\r\n\r\n        canvasHeight = canvasHeight + (this.dg.scrollBarShowMode === 'allways' && this.ps.instance['scrollbarXActive'] ? 18 : 0);\r\n\r\n        this.canvasHeight = canvasHeight;\r\n        return canvasHeight;\r\n    }\r\n\r\n    updateCanvasHeight() {\r\n        this.canvasHeight = this.getCanvasHeight();\r\n    }\r\n\r\n\r\n    private getRowFromPosition(y) {\r\n        return Math.floor(y / (this.dg.rowHeight + 1));\r\n    }\r\n\r\n    getVisibleRange(viewportTop?: number, viewportLeft?: number) {\r\n        if (viewportTop == null) {\r\n            viewportTop = this.scrollTop;\r\n        }\r\n        if (viewportLeft == null) {\r\n            viewportLeft = this.scrollLeft;\r\n        }\r\n\r\n        return {\r\n            top: this.getRowFromPosition(viewportTop),\r\n            bottom: this.getRowFromPosition(viewportTop + this.viewportH) + 1,\r\n            leftPx: viewportLeft,\r\n            rightPx: viewportLeft + this.viewportW\r\n        };\r\n    }\r\n\r\n    private getRenderedRange(viewportTop?: number, viewportLeft?: number) {\r\n        const range = this.getVisibleRange(viewportTop, viewportLeft);\r\n        const buffer = Math.round(this.viewportH / (this.dg.rowHeight + 1));\r\n        const minBuffer = this.minRowBuffer;\r\n\r\n        if (this.vScrollDir == -1) {\r\n            range.top -= buffer;\r\n            range.bottom += minBuffer;\r\n        } else if (this.vScrollDir == 1) {\r\n            range.top -= minBuffer;\r\n            range.bottom += buffer;\r\n        } else {\r\n            range.top -= minBuffer;\r\n            range.bottom += minBuffer;\r\n        }\r\n\r\n        range.top = Math.max(0, range.top);\r\n        range.bottom = Math.min(this.data.length - 1, range.bottom);\r\n\r\n        range.leftPx -= this.viewportW;\r\n        range.rightPx += this.viewportW;\r\n\r\n        range.leftPx = Math.max(0, range.leftPx);\r\n        range.rightPx = Math.min(this.canvasWidth, range.rightPx);\r\n\r\n        return range;\r\n    }\r\n\r\n    private renderRows(range) {\r\n        const rows = [];\r\n        const dataLength = this.data.length;\r\n\r\n        for (let i = range.top; i <= range.bottom; i++) {\r\n            if (this.rowsCache[i] || (i == dataLength)) {\r\n                continue;\r\n            }\r\n            rows.push(i);\r\n\r\n            // Create an entry right away so that appendRowHtml() can\r\n            // start populatating it.\r\n            this.rowsCache[i] = {\r\n                rowNode: null,\r\n\r\n                // ColSpans of rendered cells (by column idx).\r\n                // Can also be used for checking whether a cell has been rendered.\r\n                cellColSpans: [],\r\n\r\n                // Cell nodes (by column idx).  Lazy-populated by ensureCellNodesInRowsCache().\r\n                cellNodesByColumnIdx: [],\r\n\r\n                // Column indices of cell nodes that have been rendered, but not yet indexed in\r\n                // cellNodesByColumnIdx.  These are in the same order as cell nodes added at the\r\n                // end of the row.\r\n                cellRenderQueue: []\r\n            };\r\n        }\r\n\r\n        for (let i = 0, ii = rows.length; i < ii; i++) {\r\n            this.rowsCache[rows[i]].rowNode = this.data[rows[i]];\r\n        }\r\n\r\n        return Object.keys(this.rowsCache).map(n => this.rowsCache[n].rowNode);\r\n    }\r\n\r\n\r\n    private removeRowFromCache(row) {\r\n        const cacheEntry = this.rowsCache[row];\r\n        if (!cacheEntry) {\r\n            return;\r\n        }\r\n\r\n        delete this.rowsCache[row];\r\n    }\r\n\r\n    private cleanupRows(rangeToKeep) {\r\n        for (const i in this.rowsCache) {\r\n            if (i < rangeToKeep.top || i > rangeToKeep.bottom) {\r\n                this.removeRowFromCache(i);\r\n            }\r\n        }\r\n    }\r\n\r\n    hasYScrollbar(showYscrollbar: boolean) {\r\n        setTimeout(() => {\r\n            this.updateColumnSize(this.columnsGroup);\r\n            if (this.ps) {\r\n                this.ps.update();\r\n                this.cd.detectChanges();\r\n            }\r\n            this.dgs.scrollbarUpdate.emit({ scrollbarRef: this.ps.instance });\r\n        }, 60);\r\n    }\r\n\r\n    onClickScrollArrow($event) {\r\n        const { dir, event } = $event;\r\n        if (this.ps && this.ps.instance) {\r\n            const { x, y } = this.ps.instance.reach;\r\n    \r\n            switch(dir) {\r\n                case 'left':\r\n                    if (x!== 'start') {\r\n                        this.viewScrollContainer.nativeElement.scrollLeft = this.viewScrollContainer.nativeElement.scrollLeft - 40;\r\n                    }\r\n                    break;\r\n                case 'right':\r\n                    if (x!== 'end') {\r\n                        this.viewScrollContainer.nativeElement.scrollLeft = this.viewScrollContainer.nativeElement.scrollLeft + 40;\r\n                    }\r\n                    break;\r\n                case 'top':\r\n                    if (y !== 'start') {\r\n                        this.viewScrollContainer.nativeElement.scrollTop = this.viewScrollContainer.nativeElement.scrollTop - 40;\r\n                    }\r\n                    break;\r\n                case 'bottom':\r\n                    if (y !== 'end') {\r\n                        this.viewScrollContainer.nativeElement.scrollTop = this.viewScrollContainer.nativeElement.scrollTop + 40;\r\n                    }\r\n                    break;\r\n            }\r\n\r\n            this.ps.update();\r\n        }\r\n    }\r\n\r\n    private renderData(detectchanges = true) {\r\n        this.canvasHeight = this.getCanvasHeight();\r\n        if (!this.dg.virtualized || this.dg.autoHeight) {\r\n            this.rows = this.data;\r\n        } else {\r\n            const visible = this.getVisibleRange();\r\n            const rendered = this.getRenderedRange();\r\n\r\n            // remove rows no longer in the viewport\r\n            this.cleanupRows(rendered);\r\n\r\n            // render missing rows\r\n            this.rows = this.renderRows(rendered);\r\n            this.startRowIndex = rendered.top;\r\n           \r\n            this.lastRenderedScrollTop = this.scrollTop;\r\n            this.lastRenderedScrollLeft = this.scrollLeft;\r\n\r\n\r\n            \r\n            this.blankTopHeight = this.startRowIndex * (this.dg.rowHeight + 1);\r\n            this.blankBottomHeight = this.canvasHeight - this.blankTopHeight - (this.rows.length * (this.dg.rowHeight + 1));\r\n            if (this.dg.scrollBarShowMode === 'allways' && this.ps && this.ps.instance && this.ps.instance.scrollbarXActive) {\r\n                this.blankBottomHeight += 22;\r\n            }\r\n\r\n\r\n            if (detectchanges) {\r\n                this.cd.detectChanges();\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    private handleScroll() {\r\n        this.scrollTop = this.ps.elementRef.nativeElement.scrollTop;\r\n        this.scrollLeft = this.ps.elementRef.nativeElement.scrollLeft;\r\n        return this._handleScroll();\r\n    }\r\n\r\n    private _handleScroll() {\r\n        const viewportContainer = this.viewScrollContainer.nativeElement;\r\n        let maxScrollDistanceY = viewportContainer.scrollHeight - viewportContainer.clientHeight;\r\n        let maxScrollDistanceX = viewportContainer.scrollWidth - viewportContainer.clientWidth;\r\n\r\n        // Protect against erroneous clientHeight/Width greater than scrollHeight/Width.\r\n        // Sometimes seen in Chrome.\r\n        maxScrollDistanceY = Math.max(0, maxScrollDistanceY);\r\n        maxScrollDistanceX = Math.max(0, maxScrollDistanceX);\r\n\r\n        // Ceiling the max scroll values\r\n        if (this.scrollTop > maxScrollDistanceY) {\r\n            this.scrollTop = maxScrollDistanceY;\r\n        }\r\n        if (this.scrollLeft > maxScrollDistanceX) {\r\n            this.scrollLeft = maxScrollDistanceX;\r\n        }\r\n\r\n        const vScrollDist = Math.abs(this.scrollTop - this.prevScrollTop);\r\n        const hScrollDist = Math.abs(this.scrollLeft - this.prevScrollLeft);\r\n\r\n        if (hScrollDist) {\r\n            this.prevScrollLeft = this.scrollLeft;\r\n\r\n            // $viewportScrollContainerX[0].scrollLeft = scrollLeft;\r\n            // if (hasFrozenColumns()) {\r\n            //     if (hasFrozenRows) {\r\n            //         $viewportTopR[0].scrollLeft = scrollLeft;\r\n            //     }\r\n            // } else {\r\n            //     if (hasFrozenRows) {\r\n            //         $viewportTopL[0].scrollLeft = scrollLeft;\r\n            //     }\r\n            // }\r\n        }\r\n\r\n        const lastScrollTop = this.lastRenderedScrollTop;\r\n\r\n        if (vScrollDist) {\r\n            this.vScrollDir = this.prevScrollTop < this.scrollTop ? 1 : -1;\r\n            this.prevScrollTop = this.scrollTop;\r\n\r\n            // if (hasFrozenColumns()) {\r\n            //     if (hasFrozenRows && !options.frozenBottom) {\r\n            //         $viewportBottomL[0].scrollTop = scrollTop;\r\n            //     } else {\r\n            //         $viewportTopL[0].scrollTop = scrollTop;\r\n            //     }\r\n            // }\r\n\r\n            // switch virtual pages if needed\r\n            if (vScrollDist < this.viewportH) {\r\n                this._scrollTo(this.scrollTop);\r\n            }\r\n        }\r\n\r\n        if (hScrollDist || vScrollDist) {\r\n            const dx = Math.abs(this.lastRenderedScrollLeft - this.scrollLeft);\r\n            const dy = Math.abs(lastScrollTop - this.scrollTop);\r\n            if (dx > 20 || dy > 20) {\r\n                // if rendering is forced or scrolling is small enough to be \"easy\", just render\r\n                if (dy < this.viewportH && dx < this.viewportW) {\r\n                    this.renderData();\r\n                } else {\r\n                    this.renderData();\r\n                }\r\n            }\r\n        }\r\n\r\n        if (hScrollDist || vScrollDist) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private _scrollTo(y) {\r\n        const $viewportScrollContainerY = this.viewScrollContainer.nativeElement;\r\n        y = Math.max(y, 0);\r\n        y = Math.min(y, this.canvasHeight - this.viewportH);\r\n\r\n        const newScrollTop = y;\r\n\r\n        if (this.prevScrollTop != newScrollTop) {\r\n            this.vScrollDir = (this.prevScrollTop < newScrollTop) ? 1 : -1;\r\n            this.lastRenderedScrollTop = (this.scrollTop = this.prevScrollTop = newScrollTop);\r\n\r\n            // if (hasFrozenColumns()) {\r\n            //     $viewportTopL[0].scrollTop = newScrollTop;\r\n            // }\r\n\r\n            // if (hasFrozenRows) {\r\n            //     $viewportBottomL[0].scrollTop = $viewportBottomR[0].scrollTop = newScrollTop;\r\n            // }\r\n\r\n            // $viewportScrollContainerY.scrollTop = newScrollTop;\r\n        }\r\n    }\r\n\r\n    onMouseClick($event: MouseEvent) {\r\n        // document.body.click();\r\n        const target = $event.target as any;\r\n\r\n        if (target.nodeName === 'TEXTAREA' || target.nodeName === 'INPUT' ) {\r\n            return;\r\n        }\r\n\r\n\r\n        let td = target;\r\n        if (target.nodeName !== 'TD') {\r\n            td = target.closest('TD');\r\n        }\r\n\r\n        if (!this.dg.editable && this.__triggerBodyClickEvent) {\r\n            // è§£å³è¶é¾ç¹å»äºä»¶ï¼è¦åæ§è¡éä¸­è¡\r\n            if (td && td.selectCell ) {\r\n                $event.stopPropagation();\r\n                td.selectCell($event, td);  // æçè¯´å¯ä»¥å é¤çï¼ä½ä¸æ¢å¨å¦o(â§å£â¦)o\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (this.dg.editMode === 'row') {\r\n            return;\r\n        }\r\n        if (!td && this.dg.currentCell) {\r\n            td = this.dg.currentCell.cellElement;\r\n            if (td && td.closeEdit) {\r\n                $event.stopPropagation();\r\n                td.closeEdit();\r\n                return;\r\n            }\r\n        }\r\n\r\n\r\n        if (td) {\r\n            // è¡ç¦ç¨æ¶\r\n            if (this.dg.disableRow && td.gridCellData) {\r\n                const { rowData, rowIndex } = td.gridCellData;\r\n                if (this.dg.disableRow(rowData, rowIndex)) {\r\n                    return;\r\n                }\r\n            }\r\n            $event.stopPropagation();\r\n            if (this.dg.editable && this.dg.editMode === 'cell' && td.edit) {\r\n                td.edit($event);\r\n            } else {\r\n                if (td.selectCell) {\r\n                    if (this.dg.selectionMode === 'default' && this.dg.multiSelect) {\r\n                        this.dg.clearCheckeds();\r\n                    }\r\n                    td.selectCell($event, td);\r\n                } else {\r\n                    this.dg.endCellEdit();\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    onBeforeShowContextMenu = (e: any) => {\r\n        // row_1_fixedleft  row_1  row_1_fixedright\r\n        const { contextMenuDom, event } = e;\r\n\r\n        if (event.target.closest('.datagrid-editor')) {\r\n            return of({show: false});\r\n        }\r\n\r\n\r\n        let rowID = event.target.id;\r\n\r\n        if (contextMenuDom) {\r\n            // æé¤åç»è¡ãåç»åè®¡è¡\r\n            if (contextMenuDom.className.indexOf('f-datagrid-group-row') === -1 && contextMenuDom.className.indexOf('f-datagrid-group-footer') === -1) {\r\n                rowID = contextMenuDom.id.replace('row_', '').replace('_fixedleft', '').replace('_fixedright', '');\r\n                const rowData = this.dfs.findRow(rowID);\r\n                const focusTargetWidth = this.viewportW > this.totalWidth ? this.totalWidth : this.viewportW;\r\n                return of({ show: true, data: { data: rowData.data, grid: this.dg}, focusTargetWidth });\r\n            }\r\n        }\r\n        return of({ show: false });\r\n    }\r\n}\r\n","\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-06 07:43:07\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-09-26 17:17:32\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { Directive, Input, NgZone, OnInit, Renderer2, ElementRef, OnDestroy, Inject, forwardRef, ChangeDetectorRef, HostListener } from '@angular/core';\r\nimport { DatagridBodyComponent } from './datagrid-body.component';\r\nimport { DatagridComponent } from './../../datagrid.component';\r\nimport { Utils } from './../../utils/utils';\r\n@Directive({\r\n    selector: '[row-hover]',\r\n    exportAs: 'rowHover'\r\n})\r\nexport class DatagridRowHoverDirective implements OnInit, OnDestroy {\r\n\r\n    @Input() rowIndex: number;\r\n    @Input('row-hover') rowData: any;\r\n\r\n    private _mouseenter = null;\r\n    private _mouseleave = null;\r\n\r\n    constructor(\r\n        @Inject(forwardRef(() => DatagridComponent)) public dg: DatagridComponent,\r\n        @Inject(forwardRef(() => DatagridBodyComponent)) public dgb: DatagridBodyComponent,\r\n        private cd: ChangeDetectorRef,\r\n        private el: ElementRef, private zone: NgZone, private render: Renderer2) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (this.dg.rowHover && !this.dg.fast) {\r\n            this.zone.runOutsideAngular( () => {\r\n                this._mouseenter = Utils.on(this.el.nativeElement, 'mouseenter', this.onmouseenter.bind(this), { target: '.f-datagrid-body-row', options: { capture: true }});\r\n                this._mouseleave = Utils.on(this.el.nativeElement, 'mouseleave', this.onmouseleave.bind(this), { target: '.f-datagrid-body-row', options: { capture: true }});\r\n            });\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this._mouseenter) {\r\n            this._mouseenter();\r\n        }\r\n\r\n        if (this._mouseleave) {\r\n            this._mouseleave();\r\n        }\r\n    }\r\n\r\n    // @HostListener('mouseenter')\r\n    onmouseenter(event) {\r\n        this.setRowHoverCls(event);\r\n    }\r\n\r\n    // @HostListener('mouseleave')\r\n    onmouseleave(event) {\r\n        this.setRowHoverCls(event, false);\r\n    }\r\n\r\n    setRowHoverCls(event, hover = true) {\r\n        if (!this.dg.rowHover) {\r\n            return;\r\n        }\r\n\r\n        if (!event.target.matches('.f-datagrid-body-row')) {\r\n            return;\r\n        }\r\n\r\n        this.rowIndex = event.target.getAttribute('index');\r\n\r\n        const leftTableCls = 'f-datagrid-body-fixed-left';\r\n        const rightTableCls = 'f-datagrid-body-fixed-right';\r\n        const centerTableCls = 'f-datagrid-body-center';\r\n\r\n        const body = this.dg.el.nativeElement.querySelector('.f-datagrid-body');\r\n\r\n        if (!body) {\r\n            return;\r\n        }\r\n\r\n        const leftTableDom = body.querySelector(`.${leftTableCls}`);\r\n        const rightTableDom = body.querySelector(`.${rightTableCls}`);\r\n        const centerTableDom = body.querySelector(`.${centerTableCls}`);\r\n\r\n        const method = hover ? 'addClass' : 'removeClass';\r\n        const trSelector = `tr[index=\"${this.rowIndex}\"]`;\r\n        const dom = this.el.nativeElement.closest('div');\r\n        if (dom && dom.className) {\r\n            const trDom = centerTableDom.querySelector(trSelector);\r\n\r\n            if (!trDom) {\r\n                return;\r\n            }\r\n\r\n            if (trDom.className.indexOf('f-datagrid-disable-row') > -1) {\r\n                return;\r\n            }\r\n            let ltr = null;\r\n            let rtr = null;\r\n            if (rightTableDom) {\r\n                rtr = rightTableDom.querySelector(trSelector);\r\n            }\r\n            if (leftTableDom) {\r\n                ltr = leftTableDom.querySelector(trSelector);\r\n            }\r\n\r\n            if (leftTableDom && ltr) {\r\n                this.render[method](ltr, this.dg.hoverRowCls);\r\n            }\r\n            if (rightTableDom && rtr) {\r\n                this.render[method](rtr, this.dg.hoverRowCls);\r\n            }\r\n\r\n            this.render[method](trDom, this.dg.hoverRowCls);\r\n\r\n        }\r\n    }\r\n\r\n}\r\n","import { delay, filter, takeUntil } from 'rxjs/operators';\r\n\r\n/*\r\n* @Author: ç¯çç§æ(Lucas Huang)\r\n* @Date: 2019-08-12 07:47:12\r\n* @LastEditors: ç¯çç§æ(Lucas Huang)\r\n* @LastEditTime: 2019-11-27 13:31:43\r\n* @QQ: 1055818239\r\n* @Version: v0.0.1\r\n*/\r\nimport { Renderer2, Self, NgZone, SimpleChanges, OnChanges, ChangeDetectorRef, OnDestroy, Optional, ContentChildren, QueryList, ViewChildren } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport {\r\n    Directive, Input, Output, EventEmitter, HostListener,\r\n    OnInit, ElementRef, AfterViewInit, Injector, Inject, forwardRef\r\n} from '@angular/core';\r\nimport { DatagridFacadeService } from '../../services/datagrid-facade.service';\r\nimport { DatagridComponent } from '../../datagrid.component';\r\nimport { DatagridCellComponent } from './datagrid-cell.component';\r\nimport { DatagridRow } from '../../types/datagrid-row';\r\nimport { DatagridValidator } from '../../types/datagrid-validator';\r\nimport { DatagridRowHoverDirective } from './datagrid-row-hover.directive';\r\nimport { Utils } from '../../utils/utils';\r\nimport { DatagridBodyComponent } from './datagrid-body.component';\r\nimport { FormatCellDataPipe } from '../../utils/format-cell-data.pipe';\r\nimport { ALLOW_EDIT_CELL_HIGHLIGHT_CLS } from '../../types/constant';\r\n\r\n\r\n@Directive({\r\n    selector: '[grid-row]',\r\n    exportAs: 'gridRow'\r\n})\r\nexport class DatagridRowDirective implements OnInit, AfterViewInit, DatagridRow, OnChanges, OnDestroy {\r\n    @Input() editable = false;\r\n    @Input('grid-row') rowData: any;\r\n    @Input() rowIndex: number;\r\n    @Output() clickHandler = new EventEmitter();\r\n    // ç¨äºæ´è¡ç¼è¾ï¼å¿å¨ï¼ï¼ï¼\r\n    @ContentChildren(forwardRef(() => DatagridCellComponent), { descendants: true }) cells: QueryList<DatagridCellComponent>;\r\n\r\n\r\n    get rowId() {\r\n        if (this.rowData) {\r\n            return this.dfs.primaryId(this.rowData);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    get disabled() {\r\n        if (this.dg.disableRow) {\r\n            return this.dg.disableRow(this.rowData, this.rowIndex);\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    form: FormGroup = new FormGroup({});\r\n    private dfs: DatagridFacadeService;\r\n    private documentRowDblclickEvent: any = null;\r\n    private ngZone: NgZone;\r\n    private dgb: DatagridBodyComponent;\r\n    cd: ChangeDetectorRef;\r\n\r\n    columnsChangedSubscription: Subscription = null;\r\n    datasourceChangedSubscription: Subscription = null;\r\n    subscriptions: Subscription[] = [];\r\n    private destroy$ = new Subject();\r\n    constructor(\r\n        @Inject(forwardRef(() => DatagridComponent)) public dg: DatagridComponent,\r\n        private injector: Injector, private fb: FormBuilder, public el: ElementRef,\r\n        private render: Renderer2, @Optional() @Self() public drHover: DatagridRowHoverDirective) {\r\n        this.dfs = this.injector.get(DatagridFacadeService);\r\n        this.ngZone = this.injector.get(NgZone);\r\n        this.cd = this.injector.get(ChangeDetectorRef);\r\n        this.dgb = this.injector.get(DatagridBodyComponent);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.datasourceChangedSubscription = this.dg.dgs.onDataSourceChange.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).subscribe(() => {\r\n            this.renderCustomStyle();\r\n        });\r\n\r\n        this.columnsChangedSubscription = this.dg.dgs.columnsChanged.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).subscribe(() => {\r\n            this.createControl();\r\n        });\r\n\r\n        const s$ = this.dg.dfs.rowUpdate$.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).subscribe((row: { index: number, data: any }) => {\r\n            if (row && row.data) {\r\n                // this.rowData = cloneDeep(row.data);\r\n                if (this.dfs.primaryId(row.data) === this.rowId) {\r\n                    this.renderCustomStyle(row.data);\r\n                }\r\n                // this.cd.detectChanges();\r\n            }\r\n        });\r\n        this.subscriptions.push(s$);\r\n\r\n        const s1$ = this.dg.dgs.updateEmptyStyle$.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).subscribe(() => {\r\n            this.updateCellEmptyStyle();\r\n        });\r\n        this.subscriptions.push(s1$);\r\n\r\n        const s2$ = this.dg.dfs.selectRow$.pipe(takeUntil(this.destroy$)).pipe(\r\n            filter((r: any) => {\r\n                return r.id === this.rowId;\r\n            })\r\n        ).subscribe(() => {\r\n            if (this.dg.selectedRow && !this.dg.selectedRow.dr) {\r\n                const p = this.getRowPosition();\r\n                if (p === 'left') {\r\n                    this.dg.selectedRow.drl = this;\r\n                } else if (p === 'right') {\r\n                    this.dg.selectedRow.drr = this;\r\n                } else {\r\n                    this.dg.selectedRow.dr = this;\r\n                }\r\n            }\r\n        });\r\n\r\n        this.subscriptions.push(s2$);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n        if (this.columnsChangedSubscription) {\r\n            this.columnsChangedSubscription.unsubscribe();\r\n            this.columnsChangedSubscription = null;\r\n        }\r\n\r\n        if (this.datasourceChangedSubscription) {\r\n            this.datasourceChangedSubscription.unsubscribe();\r\n            this.datasourceChangedSubscription = null;\r\n        }\r\n\r\n        if (this.subscriptions && this.subscriptions.length) {\r\n            this.subscriptions.forEach(n => n.unsubscribe());\r\n            this.subscriptions = [];\r\n        }\r\n\r\n        if (this.form) {\r\n            this.form = null;\r\n        }\r\n\r\n        this.cells = null;\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.rowData && !changes.rowData.isFirstChange()) {\r\n            this.updateCellEmptyStyle();\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.renderCustomStyle();\r\n        this.updateCellEmptyStyle();\r\n    }\r\n\r\n    private getRowPosition() {\r\n        const id = this.el.nativeElement.id;\r\n        if (id.indexOf('fixedleft') > -1) {\r\n            return 'left';\r\n        } else if (id.indexOf('fixedright') > -1) {\r\n            return 'right';\r\n        } else {\r\n            return 'center';\r\n        }\r\n    }\r\n\r\n\r\n    renderCustomStyle(rowData = null) {\r\n        if (this.dg.rowStyler) {\r\n            const _rd = rowData || this.rowData;\r\n            const trStyle = this.dg.rowStyler(_rd, this.rowIndex);\r\n            if (trStyle && Object.keys(trStyle).length) {\r\n                this.dg.renderCustomStyle(trStyle, this.el.nativeElement);\r\n            } else {\r\n                this.dg.dgs.removeCssRule(`#${this.dg.id} #${this.el.nativeElement.id}`);\r\n            }\r\n        }\r\n    }\r\n\r\n    @HostListener('click', ['$event'])\r\n    onRowClick(event: MouseEvent) {\r\n\r\n        if (event.target['className'] && event.target['className'].indexOf('checkbox-column') > -1) {\r\n            return;\r\n        }\r\n\r\n        if (!this.dg.enableSelectRow) {\r\n            return;\r\n        }\r\n\r\n        if (this.dg.disabled) {\r\n            return;\r\n        }\r\n\r\n        if (this.dg.currentCell && this.dg.currentCell.isEditing && this.rowId !== this.dg.currentCell.rowId ) {\r\n            return;\r\n        }\r\n\r\n\r\n        if (this.dg.disableRow) {\r\n            if (this.dg.disableRow(this.rowData, this.rowIndex)) {\r\n                event.stopPropagation();\r\n                return false;\r\n            }\r\n        }\r\n\r\n        // if (!this.dg.editable) {\r\n        //     event.stopPropagation();\r\n        // }\r\n\r\n        const rowId = this.dfs.primaryId(this.rowData);\r\n\r\n        if (!rowId) {\r\n            this.dg.writeConsole(`å¨ç¬¬ ${this.rowIndex + 1} è¡ï¼ä¸»é®å­æ®µ[${this.dg.idField}]çå¼ä¸º ç©ºï¼è¯·æ£æ¥ç¸å³æ°æ®ã`);\r\n        }\r\n\r\n        const beforEventParam = {\r\n            rowIndex: this.rowIndex,\r\n            rowData: this.rowData,\r\n            gridInstance: this.dg\r\n        };\r\n\r\n        if (!event.shiftKey) {\r\n            this.dg.dgs.focusRowChanged.emit({\r\n                rowIndex: this.rowIndex,\r\n                rowData: this.rowData\r\n            });\r\n        }\r\n        const useNewSelectionMode = this.dg.sms.beforRowClick({ ...beforEventParam, e: event, id: rowId, dr: this });\r\n        if (useNewSelectionMode) {\r\n            return;\r\n        }\r\n\r\n        if (!this.dfs.isRowSelected(rowId)) {\r\n            const canendedit = this.dg.endRowEdit();\r\n\r\n            if (!canendedit || canendedit.canEnd) {\r\n                this.dg.beforeSelect(beforEventParam).pipe( takeUntil(this.destroy$)).pipe(\r\n                    delay(100)\r\n                ).subscribe((canSelect: boolean) => {\r\n                    if (canSelect) {\r\n                        this.dg.removeCellSelectedCls();\r\n                        this.dfs.selectRow(this.rowIndex, this.rowData, {instance: this.dg});\r\n                        if (this.dg.selectedRow) {\r\n                            this.dg.selectedRow.dr = this;\r\n                        }\r\n                        const trCLS = this.el.nativeElement.className;\r\n                        if (trCLS.indexOf('f-datagrid-row-selected') === -1) {\r\n                            this.el.nativeElement.className = trCLS + ' f-datagrid-row-selected';\r\n                        }\r\n                        // this.drHover.setRowHoverCls(false);\r\n                        // this.dg.selectChanged.emit(this.dg.selectedRow);\r\n                        this.clickHandler.emit();\r\n                    }\r\n                    this.dg.rowClick.emit({ data: this.rowData, grid: this.dg, dblclick: false });\r\n                    this.dg.dgs.setSelecedRow.emit({ selected: true, id: this.dfs.primaryId(this.rowData) });\r\n                });\r\n            }\r\n        } else {\r\n            if (this.dg.selectedRow && !this.dg.selectedRow.dr) {\r\n                this.dg.selectedRow.dr = this;\r\n            }\r\n\r\n            if (!this.dg.keepSelect) {\r\n                this.dg.beforeUnselect(beforEventParam).pipe(\r\n                    takeUntil(this.destroy$),\r\n                ).subscribe((canUnselect: boolean) => {\r\n                    if (canUnselect) {\r\n                        // this.dg.unSelect.emit(this.dg.selectedRow);\r\n                        this.dfs.unSelectRow(this.rowIndex, this.rowData, {instance: this.dg});\r\n\r\n                        const trCLS = this.el.nativeElement.className;\r\n                        if (trCLS.indexOf('f-datagrid-row-selected') > -1) {\r\n                            this.el.nativeElement.className = trCLS.replace('f-datagrid-row-selected', '');\r\n                        }\r\n                    }\r\n                    this.dg.rowClick.emit({ data: this.rowData, grid: this.dg, dblclick: false });\r\n                    this.dg.dgs.setSelecedRow.emit();\r\n                });\r\n            } else {\r\n                this.dg.rowClick.emit({ data: this.rowData, grid: this.dg, dblclick: false });\r\n            }\r\n        }\r\n    }\r\n\r\n    initFormControl() {\r\n        this.form = this.fb.group({});\r\n        this.createControl();\r\n        this.form['bindingData'] = this.rowData;\r\n    }\r\n\r\n    createControl() {\r\n        if (this.dg && this.dg.flatColumns) {\r\n            this.dg.flatColumns.forEach(col => {\r\n                if (!col.editor && !col.editorTemplate) { return; }\r\n                if (!this.form.controls[col.field]) {\r\n                    const control = this.createFormControl(col);\r\n                    this.form.addControl(col.field, control);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private createFormControl(col) {\r\n        return this.fb.control(\r\n            Utils.getValue(col.field, this.rowData),\r\n            {\r\n                validators: col.editor ? this.bindValidations(col.editor.validators) : null\r\n            }\r\n        );\r\n    }\r\n\r\n    private bindValidations(validators: DatagridValidator[]) {\r\n        const validations = [];\r\n        if (validators && validators.length) {\r\n\r\n            validators.forEach((v: DatagridValidator) => {\r\n                let validation = null;\r\n                switch (v.type) {\r\n                    case 'required':\r\n                        validation = Validators.required;\r\n                        break;\r\n                    case 'min':\r\n                        validation = Validators.min(v.value);\r\n                        break;\r\n                    case 'max':\r\n                        validation = Validators.max(v.value);\r\n                        break;\r\n                    case 'minLength':\r\n                        validation = Validators.minLength(v.value);\r\n                        break;\r\n                    case 'maxLength':\r\n                        validation = Validators.maxLength(v.value);\r\n                        break;\r\n                    case 'email':\r\n                        validation = Validators.email;\r\n                        break;\r\n                    case 'requiredTrue':\r\n                        validation = Validators.requiredTrue;\r\n                        break;\r\n                    case 'pattern':\r\n                        validation = Validators.pattern(v.value);\r\n                        break;\r\n                }\r\n                if (validation) {\r\n                    validations.push(validation);\r\n                } else {\r\n                    if (this.dg.validators && this.dg.validators.length) {\r\n                        const vfn = this.dg.validators.find(vr => vr.name === v.type);\r\n                        if (vfn) {\r\n                            validation = vfn.value(this.rowData);\r\n                            validations.push(validation);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return validations;\r\n    }\r\n\r\n\r\n    refresh() {\r\n        this.updateRowHeight();\r\n        this.updateCellEmptyStyle();\r\n    }\r\n\r\n    updateRowHeight() {\r\n        if (!this.dg.nowrap) {\r\n            const centerTr = this.dgb.mainArea.nativeElement.querySelector('tr[index=\"' + this.rowIndex + '\"]');\r\n            centerTr.style.height = 'auto';\r\n            const trHeight = centerTr.offsetHeight;\r\n            let leftTrDom = null;\r\n            let rightTrDom = null;\r\n            const heightSizeList = [trHeight];\r\n            if (this.dgb) {\r\n                if (this.dgb.fixedLeftEl) {\r\n                    leftTrDom = this.dgb.fixedLeftEl.nativeElement.querySelector('tr[index=\"' + this.rowIndex + '\"]');\r\n                    if (leftTrDom) {\r\n                        leftTrDom.style.height = 'auto';\r\n                        heightSizeList.push(leftTrDom.offsetHeight);\r\n                    }\r\n                }\r\n                if (this.dgb.fixedRightEl) {\r\n                    rightTrDom = this.dgb.fixedRightEl.nativeElement.querySelector('tr[index=\"' + this.rowIndex + '\"]');\r\n                    if (rightTrDom) {\r\n                        rightTrDom.style.height = 'auto';\r\n                        heightSizeList.push(rightTrDom.offsetHeight);\r\n                    }\r\n                }\r\n\r\n                const maxHeight = Math.max(...heightSizeList);\r\n\r\n                centerTr.style.height = `${maxHeight}px`;\r\n                if (leftTrDom) {\r\n                    leftTrDom.style.height = `${maxHeight}px`;\r\n                }\r\n\r\n                if (rightTrDom) {\r\n                    rightTrDom.style.height = `${maxHeight}px`;\r\n                }\r\n\r\n                this.cd.markForCheck();\r\n                this.dgb.updateCanvasHeight();\r\n            }\r\n        }\r\n    }\r\n\r\n    private updateCellEmptyStyle() {\r\n\r\n        if (!this.dg.enableEditCellStyle) {\r\n            return;\r\n        }\r\n\r\n        let rowIsDisabled = false;\r\n        if (this.dg.disableRow) {\r\n            rowIsDisabled = this.dg.disableRow(this.rowData, this.rowIndex);\r\n        }\r\n\r\n        const updateCellEmptyText = (cells) => {\r\n            if (cells.length) {\r\n\r\n                for (let k = 0; k < cells.length; k++) {\r\n                    const field = cells[k].getAttribute('field');\r\n                    if (field) {\r\n                        const col = this.dfs.getColumn(field);\r\n                        if (col) {\r\n\r\n                            if (!col.editor) {\r\n                                continue;\r\n                            }\r\n                            const cls = col.align === 'right' ? 'allow-edit-cell-left' : 'allow-edit-cell';\r\n                            const emptyicon_cls = ALLOW_EDIT_CELL_HIGHLIGHT_CLS[col.editor.type];\r\n                            const span = cells[k].querySelector('.cell-text-box');\r\n                            const colVal = Utils.getValue(field, this.rowData);\r\n                            const fmtVal = this.dg.colFormatSer.format(colVal, this.rowData, col.formatter);\r\n                            if (!this.dg.editable || rowIsDisabled || this.dg.cellIsReadOnly(col, this.rowData)) {\r\n                                cells[k].className = cells[k].className.replace(cls, '');\r\n                                cells[k].className = cells[k].className.replace(emptyicon_cls, '');\r\n                                if (span) {\r\n                                    if (span.className.indexOf('cell-empty') > -1) {\r\n                                        span.className = span.className.replace('cell-empty', '');\r\n                                    }\r\n\r\n                                    if (colVal === '' || colVal === null || colVal === undefined) {\r\n                                        span.innerHTML = '';\r\n                                    } else {\r\n                                        span.innerHTML = fmtVal;\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                if (span) {\r\n                                    if (colVal === '' || colVal === null || colVal === undefined) {\r\n                                        if (span.className.indexOf('cell-empty') === -1) {\r\n                                            span.className = span.className + ' cell-empty';\r\n                                        }\r\n\r\n                                        span.innerHTML = Utils.getWhenEmptyText(col, this.dg.localeService.localeId);\r\n                                    } else {\r\n                                        span.innerHTML = fmtVal;\r\n                                    }\r\n                                }\r\n\r\n                                if (cells[k].className.indexOf('cell-readonly') > -1) {\r\n                                    cells[k].className = cells[k].className.replace('cell-readonly', '');\r\n                                }\r\n\r\n                                if (cells[k].className.indexOf(cls) === -1) {\r\n                                    this.render.addClass(cells[k], cls);\r\n                                }\r\n\r\n                                if (cells[k].className.indexOf(emptyicon_cls) === -1) {\r\n                                    this.render.addClass(cells[k], emptyicon_cls);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n\r\n        // if (this.dgb.fixedLeftEl) {\r\n        //     const leftTrDom = this.dgb.fixedLeftEl.nativeElement.querySelector('tr[index=\"' + this.rowIndex + '\"]');\r\n        //     if (leftTrDom) {\r\n        //         updateCellEmptyText(leftTrDom.querySelectorAll('td[field]'));\r\n        //     }\r\n        // }\r\n\r\n        const cells = this.el.nativeElement.querySelectorAll('td[field]:not([field=\"_datagrid-setting-control_\"])');\r\n        updateCellEmptyText(cells);\r\n    }\r\n}\r\n","import { ColumnFormatService } from '@farris/ui-common/column';\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-07-29 08:14:22\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-10-11 11:38:58\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { DatagridComponent } from './../../datagrid.component';\r\nimport {\r\n    ComponentFactoryResolver,\r\n    ComponentRef,\r\n    Directive,\r\n    Input,\r\n    OnInit,\r\n    AfterViewInit,\r\n    ViewContainerRef,\r\n    Injector,\r\n    OnDestroy,\r\n    Inject,\r\n    forwardRef,\r\n    ApplicationRef\r\n} from '@angular/core';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { DataColumn } from '../../types';\r\n\r\n@Directive({\r\n    selector: '[cell-editor]',\r\n})\r\nexport class GridCellEditorDirective implements OnInit, AfterViewInit, OnDestroy {\r\n    @Input() column: DataColumn;\r\n    @Input() group: FormGroup;\r\n    @Input() rowData: any;\r\n    @Input() value: any;\r\n    @Input() height: any;\r\n    componentRef: ComponentRef<any>;\r\n    private cfs: ColumnFormatService = null;\r\n    private timer = null;\r\n    constructor(\r\n        private resolver: ComponentFactoryResolver,\r\n        private container: ViewContainerRef,\r\n        private app: ApplicationRef,\r\n        private fb: FormBuilder,\r\n        @Inject(forwardRef(() => DatagridComponent)) public dg: DatagridComponent\r\n    ) {\r\n        this.cfs = this.dg.inject.get(ColumnFormatService);\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (this.column.editor) {\r\n            this.createCellEditor();\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.dg.dgs.cellEditorCreated.emit({ editorRef: this.componentRef, column: this.column, cellEditorRef: this});\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.dg.dgs.cellEditorDestory.emit({ editorRef: this.componentRef, column: this.column, cellEditorRef: this});\r\n        if (this.componentRef) {\r\n            this.componentRef.destroy();\r\n        }\r\n        this.componentRef = null;\r\n        if (this.timer) {\r\n            clearTimeout(this.timer);\r\n        }\r\n    }\r\n\r\n    private createCellEditor() {\r\n\r\n        const editorType = this.column.editor.type;\r\n\r\n        if (!this.dg.editors[editorType]) {\r\n            this.dg.writeConsole(`æ¾ä¸å°åç§°ä¸º ${editorType} å¯¹åºçç±»ã`, 'error');\r\n            return;\r\n        }\r\n\r\n        const factory = this.resolver.resolveComponentFactory(\r\n            this.dg.editors[editorType]\r\n        );\r\n        this.componentRef = this.container.createComponent(factory);\r\n\r\n        // this.componentRef.instance.dg = this.dg;\r\n        // this.app.attachView(this.componentRef.hostView);\r\n        this.componentRef.instance.column = this.column;\r\n        this.componentRef.instance.group = this.group;\r\n        this.componentRef.instance.height = this.height;\r\n        this.componentRef.instance.controlId = (this.dg.id || 'DATAGRID_EDITOR') + '_' + this.column.field;\r\n\r\n        this.updateControlValue();\r\n        this.componentRef.changeDetectorRef.markForCheck();\r\n        this.componentRef.changeDetectorRef.detectChanges();\r\n        // this.app.tick();\r\n        if (this.timer) {\r\n            clearTimeout(this.timer);\r\n        }\r\n        this.timer = setTimeout(() => {\r\n            if (this.componentRef.instance.instance) {\r\n                if (editorType === 'lookup') {\r\n                    if (!this.componentRef.instance.instance.changeDetector.destroyed) {\r\n                        this.componentRef.instance.instance.changeDetector.detectChanges();\r\n                    }\r\n                    // this.componentRef.instance['bindingData'] = this.rowData;\r\n                }\r\n                // if (editorType === 'textarea') {\r\n                //     const textareaEl = this.componentRef.instance.inputElement;\r\n                //     textareaEl.style.height = textareaEl.closest('tr').style.height;\r\n                // }\r\n            }\r\n        });\r\n    }\r\n\r\n    private updateControlValue() {\r\n        if (this.group) {\r\n            this.group['bindingData'] = this.rowData;\r\n            if (this.group.controls[this.column.field]) {\r\n                // if (this.column.editor.type === 'datepicker') {\r\n                //     const dateRef = this.componentRef.instance.instance;\r\n                //     if (dateRef) {\r\n                //         setTimeout(() => {\r\n                //             const { dateFormat } = dateRef.dateOpts;\r\n                //             const val = this.cfs.format(this.value, this.rowData, {type: 'datetime', options: { format: dateFormat}});\r\n                //             this.group.controls[this.column.field].setValue(val, { emitEvent: true });\r\n                //         });\r\n                //     }\r\n                // } else {\r\n                //     this.group.controls[this.column.field].setValue(this.value, { emitEvent: true });\r\n                // }\r\n\r\n                this.group.controls[this.column.field].setValue(this.value, { emitEvent: true });\r\n            }\r\n        }\r\n    }\r\n\r\n    hideCover() {\r\n        if (this.column.editor && (this.column.editor.type === 'combolist' || this.column.editor.type === 'combo-lookup')) {\r\n            this.componentRef.instance.hide(!1);\r\n        }\r\n    }\r\n}\r\n","/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-12 10:11:59\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-08-12 10:12:05\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\n\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer, SafeHtml, SafeStyle, SafeScript, SafeUrl, SafeResourceUrl } from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n    name: 'safe'\r\n})\r\nexport class SafePipe implements PipeTransform {\r\n\r\n    private dangerWords = ['<script', 'onerror', 'alert('];\r\n\r\n    constructor(protected sanitizer: DomSanitizer) { }\r\n\r\n    public transform(value: any, type: string): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\r\n        switch (type) {\r\n            case 'html': {\r\n                if (value === '' || value === null || value === undefined) {\r\n                    return value;\r\n                }\r\n                // if (!this.hasDanger(value)) {\r\n                //     return value;\r\n                // }\r\n                return this.sanitizer.bypassSecurityTrustHtml(value);\r\n            }\r\n            case 'style': return this.sanitizer.bypassSecurityTrustStyle(value);\r\n            case 'script': return this.sanitizer.bypassSecurityTrustScript(value);\r\n            case 'url': return this.sanitizer.bypassSecurityTrustUrl(value);\r\n            case 'resourceUrl': return this.sanitizer.bypassSecurityTrustResourceUrl(value);\r\n            default: throw new Error(`Invalid safe type specified: ${type}`);\r\n        }\r\n    }\r\n\r\n    private hasDanger(value) {\r\n        if (typeof value  === 'number' || typeof value === 'boolean') {\r\n            return false;\r\n        }\r\n\r\n        let r = 0;\r\n\r\n        this.dangerWords.forEach(n => {\r\n            if (value.indexOf(n) > -1) {\r\n                r++;\r\n            }\r\n        });\r\n\r\n        return r !== 0;\r\n    }\r\n\r\n}\r\n","import { FormGroup } from '@angular/forms';\r\n\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-06 07:43:53\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-10-31 09:11:02\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { Component, OnInit, Input, Output, EventEmitter, OnChanges,\r\n    ViewChild, ElementRef, ChangeDetectionStrategy, ChangeDetectorRef, ViewContainerRef,\r\n    OnDestroy, Injector, Inject, forwardRef, AfterViewInit, SimpleChanges, Renderer2} from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\nimport { ColumnFormatService } from '@farris/ui-common/column';\r\nimport { DataColumn } from '../../types/data-column';\r\nimport { Utils } from '../../utils/utils';\r\nimport { DatagridFacadeService } from '../../services/datagrid-facade.service';\r\nimport { DatagridComponent } from '../../datagrid.component';\r\nimport { DatagridRowDirective } from './datagrid-row.directive';\r\nimport { CellInfo } from '../../services/state';\r\nimport { GridCellEditorDirective } from '../editors/cell-editor.directive';\r\nimport { DatagridService } from '../../services/datagrid.service';\r\nimport { SafePipe } from './../../utils/safe.pipe';\r\nimport { TR_PREFIX } from '../../types/constant';\r\n\r\n     // <ng-container *ngIf=\"!isEditing && !column.template\">\r\n        //     <ng-container *ngIf=\"column.formatter\">\r\n        //         <span *ngIf=\"cellFormatterIsFn\" [innerHtml]=\" column | formatCellData: rowData | safe: 'html'\"></span>\r\n        //         <span *ngIf=\"!cellFormatterIsFn\">{{  column | formatCellData: rowData }}</span>\r\n        //     </ng-container>\r\n        //     <span *ngIf=\"!column.formatter\" [class.grid-cell-nowrap]=\"dg.nowrap\" [class.grid-cell-wrap]=\"!dg.nowrap\">{{  column | formatCellData: rowData }}</span>\r\n        // </ng-container>\r\n        // <span *ngIf=\"!isEditing && !column.template\" cell-content [class.grid-cell-nowrap]=\"dg.nowrap\" [class.grid-cell-wrap]=\"!dg.nowrap\"\r\n        //     [rowData]=\"rowData\" [column]=\"column\" [nowrap]=\"dg.nowrap\"></span>\r\n@Component({\r\n    selector: 'grid-body-cell',\r\n    template: `\r\n    <div\r\n     [attr.cell-tooltip]=\"column.showTips && !isEditing\" [attr.tipMode]=\" column.tipMode || 'auto'\"\r\n     [attr.message]=\"column | tipmsg: rowData\"  [attr.position]=\" column?.tipOptions?.position || 'top-left'\"\r\n     [attr.tipWidth]=\"column?.tipOptions?.width\" [attr.tipHeight]=\"column?.tipOptions?.height\"\r\n     class=\"f-datagrid-cell-content cell-text-align__{{column.field}}\" #cellContainer\r\n    >\r\n        <ng-container *ngIf=\"!isEditing && !column.template\">\r\n            <ng-container *ngIf=\"column.formatter\">\r\n                <span class=\"cell-text-box\" *ngIf=\"cellFormatterIsFn\" [innerHtml]=\" column | formatCellData: rowData | safe: 'html'\"></span>\r\n                <span class=\"cell-text-box\" *ngIf=\"!cellFormatterIsFn\">{{  column | formatCellData: rowData }}</span>\r\n            </ng-container>\r\n            <span *ngIf=\"!column.formatter\" class=\"cell-text-box\" [class.grid-cell-nowrap]=\"dg.nowrap\" [class.grid-cell-wrap]=\"!dg.nowrap\">{{  column | formatCellData: rowData }}</span>\r\n        </ng-container>\r\n\r\n        <ng-container #cellTemplate *ngIf=\"!isEditing && column.template\" [ngTemplateOutlet]=\"column.template\" [ngTemplateOutletContext]=\"{$implicit: cellContext}\"></ng-container>\r\n        <ng-container #cellEditorTemplate *ngIf=\"isEditing && column.editorTemplate\" [ngTemplateOutlet]=\"column.editorTemplate\" [ngTemplateOutletContext]=\"{$implicit: cellContext}\"></ng-container>\r\n        <ng-container #editorTemplate *ngIf=\"isEditing && !column.editorTemplate\" cell-editor [height]=\"controlHeight\" [rowData]=\"rowData\" [value]=\"value\" [column]=\"column\" [group]=\"dr.form\"></ng-container>\r\n    </div>\r\n    `,\r\n    changeDetection: ChangeDetectionStrategy.Default\r\n})\r\nexport class DatagridCellComponent implements OnInit, OnDestroy, AfterViewInit, OnChanges {\r\n    @Input() width: number;\r\n    @Input() height: number;\r\n    @Input() cls = '';\r\n    @Input() column: DataColumn;\r\n    @Input() rowData: any;\r\n    @Input() rowIndex: number;\r\n    @Input() lastColumn = false;\r\n    // @ViewChild('celltip') celltip: DatagridCellTooltipDirective;\r\n\r\n    private _isEditing = false;\r\n    controlHeight = 'auto';\r\n    get isEditing() {\r\n        return this._isEditing;\r\n    }\r\n    @Input() set isEditing(v) {\r\n        if (this._isEditing === v) {\r\n            return;\r\n        }\r\n        this._isEditing = v;\r\n\r\n        if (v) {\r\n            if (!this.dr.form || !Object.keys(this.dr.form.controls).length ) {\r\n                this.dr.initFormControl();\r\n            }\r\n\r\n            if (this.column.editorTemplate && this.column.editorTemplate.elementRef) {\r\n                this.cellContext.formGroup = this.dr.form;\r\n\r\n                setTimeout(() => {\r\n\r\n                    if (this.el) {\r\n                        const input = this.el.nativeElement.querySelector('input,textarea');\r\n                        if (input) {\r\n                            input.focus();\r\n                        }\r\n                    }\r\n                }, 10);\r\n            }\r\n        }\r\n        if (this.column.editor && this.column.editor.type === 'textarea') {\r\n            if (!this.dg.nowrap) {\r\n                this.controlHeight = this.dr.el.nativeElement.offsetHeight;\r\n            }\r\n        }\r\n        if (!this.cd['destroyed']) {\r\n            this.cd.detectChanges();\r\n        }\r\n    }\r\n\r\n    @Input() isSelected = false;\r\n\r\n    @ViewChild('cellContainer') cellContainer: ElementRef;\r\n    @ViewChild('cellTemplate', {read: ViewContainerRef }) cellTemplateVcr: ViewContainerRef;\r\n\r\n\r\n    private _cellEditorTemplate = null;\r\n    @ViewChild('cellEditorTemplate', {read: ViewContainerRef })\r\n    get cellEditorTemplate(): ViewContainerRef {\r\n        return this._cellEditorTemplate;\r\n    }\r\n    set cellEditorTemplate(v) {\r\n        this._cellEditorTemplate = v;\r\n        if (v) {\r\n            this.dg.dgs.cellEditorCreated.emit({ editorRef: null, column: this.column, cellEditorRef: null, templateRef: v});\r\n        }\r\n    }\r\n\r\n    @ViewChild(GridCellEditorDirective) cellEditor;\r\n\r\n\r\n    @Output() cellClick = new EventEmitter();\r\n    @Output() cellDblClick = new EventEmitter();\r\n\r\n    cellContext: any = {};\r\n    get value() {\r\n        if (this.rowData && this.column && this.column.field) {\r\n            return Utils.getValue(this.column.field, this.rowData);\r\n        }\r\n        return '';\r\n    }\r\n\r\n    get formControl() {\r\n        if (this.cellEditor) {\r\n            return this.cellEditor.componentRef.instance.formControl;\r\n        } else if (this.column.editorTemplate) {\r\n            return this.dr.form.get(this.column.field);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    // get verticalAlign() {\r\n    //     let va = 'center';\r\n    //     switch (this.column.valign) {\r\n    //         case 'top':\r\n    //             va = 'flex-start';\r\n    //             break;\r\n    //         case 'bottom':\r\n    //             va = 'flex-end';\r\n    //             break;\r\n    //         default:\r\n    //             va = 'center';\r\n    //             break;\r\n    //     }\r\n\r\n    //     return va;\r\n    // }\r\n\r\n    // get horizontalAlign() {\r\n    //     let ha = 'flex-start';\r\n    //     if (this.column.align === 'right') {\r\n    //         ha = 'flex-end';\r\n    //     } else if (this.column.align === 'center') {\r\n    //         ha = 'center';\r\n    //     }\r\n    //     return ha;\r\n    // }\r\n\r\n    // get cellStyle() {\r\n    //     // const w = this.lastColumn ? (this.column.width - 6) + 'px' : '100%';\r\n    //     // const style = {\r\n    //     //     width: w\r\n    //     // };\r\n    //     if (!this.isEditing) {\r\n    //         return Object.assign({}, {\r\n    //             'align-items': this.verticalAlign,\r\n    //             'justify-content': this.horizontalAlign\r\n    //         });\r\n    //     } else {\r\n    //         return Object.assign({}, {\r\n    //             'justify-content': this.horizontalAlign\r\n    //         });\r\n    //     }\r\n    // }\r\n\r\n    get cellFormatterIsFn() {\r\n        return typeof this.column.formatter === 'function' || this.column.formatter.type === 'boolean';\r\n    }\r\n\r\n    cellStyler: any = {};\r\n\r\n    private dfs: DatagridFacadeService;\r\n    private dgs: DatagridService;\r\n    private cellSubscription: Subscription;\r\n    private rowUpdateSubscription: Subscription;\r\n    private safePipe: SafePipe = null;\r\n    private render: Renderer2;\r\n    private ro: ResizeObserver = null;\r\n    canEdit = () => this.dg.editable && this.dg.editMode === 'cell' && this.column.editor;\r\n    constructor(\r\n        @Inject(forwardRef(() => DatagridComponent)) public dg: DatagridComponent,\r\n        @Inject(forwardRef(() => DatagridRowDirective)) public dr: DatagridRowDirective,\r\n        public el: ElementRef, public cd: ChangeDetectorRef, private injector: Injector,\r\n        public colFormatSer: ColumnFormatService,\r\n        private domSanitizer: DomSanitizer\r\n    ) {\r\n        this.dfs = this.injector.get(DatagridFacadeService);\r\n        this.dgs = this.injector.get(DatagridService);\r\n        this.safePipe = new SafePipe(this.domSanitizer);\r\n        this.render = this.injector.get(Renderer2);\r\n        // this.cellSubscription = this.dfs.currentCell$.pipe(\r\n        //     filter((cell: CellInfo) => {\r\n        //         return cell && this.column.editor && cell.rowIndex === this.rowIndex && cell.field === this.column.field;\r\n        //     })\r\n        // ).subscribe((cell: CellInfo) => {\r\n        //     if (cell && this.column.editor) {\r\n        //         this.isEditing = cell.isEditing;\r\n        //         cell.cellRef = this;\r\n        //         cell.column = this.column;\r\n\r\n        //         if (!this.cd['destroyed']) {\r\n        //             this.cd.detectChanges();\r\n        //         }\r\n        //     }\r\n        // });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.initCellTemplateContext();\r\n    }\r\n\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.rowData && !changes.rowData.isFirstChange()) {\r\n            this.initCellTemplateContext();\r\n            this.buildCustomCellStyle();\r\n\r\n            if (this.formControl) {\r\n                const val = Utils.getValue(this.column.field, this.rowData);\r\n                this.formControl.setValue(val);\r\n            }\r\n        }\r\n    }\r\n\r\n    private initCellTemplateContext() {\r\n        this.cellContext = {\r\n            field: this.column.field,\r\n            rowIndex: this.rowIndex,\r\n            rowData: this.rowData,\r\n            column: this.column,\r\n            instance: this,\r\n            formGroup: this.dr.form,\r\n            tools: {\r\n                utils: this.dg.commonUtils,\r\n                format: this.dg.colFormatSer,\r\n                number: this.dg.colFormatSer['numberhelper'],\r\n                date: this.dg.colFormatSer['datehelper']\r\n            },\r\n        };\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.buildCustomCellStyle();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.cellSubscription) {\r\n            this.cellSubscription.unsubscribe();\r\n            this.cellSubscription = null;\r\n        }\r\n\r\n        if (this.rowUpdateSubscription) {\r\n            this.rowUpdateSubscription.unsubscribe();\r\n            this.rowUpdateSubscription = null;\r\n        }\r\n\r\n\r\n        this.cellContext = null;\r\n    }\r\n\r\n\r\n    private buildCustomCellStyle(rowData = null) {\r\n        const td = this.el.nativeElement.parentNode;\r\n        if (!td.id) {\r\n            td.id = TR_PREFIX + this.dr.rowId + '_' + this.rowIndex + '-' + this.column.field;\r\n        }\r\n        td.id = td.id.replace(/\\./g, '_');\r\n\r\n        if (this.column.styler) {\r\n            const _rd = rowData || this.rowData;\r\n            const cs = this.column.styler(_rd[this.column.field], _rd, this.rowIndex);\r\n            if (cs && Object.keys(cs).length) {\r\n                this.dg.renderCustomStyle(cs, td);\r\n            }\r\n        } else {\r\n            this.dg.dgs.removeCssRule('#' + td.id);\r\n        }\r\n    }\r\n\r\n    updateValue(val?: any) {\r\n        if (this.dr.form) {\r\n            // this.rowData = Object.assign(this.rowData, this.dr.form.value);\r\n            Utils.setValue(this.column.field, val, this.rowData);\r\n            // this.rowData = {...this.rowData};\r\n            const rowid = this.rowData[this.dg.idField];\r\n            const item = this.dg.data.find(n => n[this.dg.idField] === rowid);\r\n            if (item) {\r\n                Utils.setValue(this.column.field, val, item);\r\n            }\r\n\r\n            this.dfs.updateCheckedData(rowid, { [this.column.field]: val });\r\n\r\n            if (!this.cd['destroyed']) {\r\n                this.cd.detectChanges();\r\n            }\r\n        }\r\n    }\r\n}\r\n","/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-06 07:43:07\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-11-19 15:48:27\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { Directive, Input, ElementRef, Renderer2, OnInit, ContentChild, OnDestroy, Injector, forwardRef, Inject, AfterViewInit, NgZone, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { filter, map, switchMap, takeLast, debounceTime, takeUntil } from 'rxjs/operators';\r\nimport { DatagridService } from './../../services/datagrid.service';\r\nimport { DatagridCellComponent } from './datagrid-cell.component';\r\nimport { DatagridBodyComponent } from './datagrid-body.component';\r\nimport { DatagridRowDirective } from './datagrid-row.directive';\r\nimport { DataColumn } from './../../types/data-column';\r\nimport { DatagridFacadeService } from '../../services/datagrid-facade.service';\r\nimport { DatagridComponent } from '../../datagrid.component';\r\nimport { CELL_SELECTED_CLS, CELL_EDITING_CLS, ALLOW_EDIT_CELL_HIGHLIGHT_CLS } from '../../types/constant';\r\nimport { DomHandler } from '../../services/domhandler';\r\nimport { of, Subscription,  noop, Subject  } from 'rxjs';\r\nimport { Utils } from '../../utils/utils';\r\n\r\n@Directive({\r\n    selector: '[cell-editable]',\r\n    exportAs: 'cellEditable'\r\n})\r\nexport class DatagridCellEditableDirective implements OnInit, OnDestroy, OnChanges, AfterViewInit {\r\n    @Input('cell-editable') rowData: any;\r\n    @Input() column: DataColumn;\r\n\r\n    private clickTimer: any;\r\n\r\n    private cellclick: any;\r\n    private celldblclick: any;\r\n    private bindCellEventSubscription: Subscription;\r\n\r\n    private editorInputKeydownEvent: any;\r\n    editor: any;\r\n    formControl: FormControl;\r\n    cellEditorRef: any;\r\n    // get editor() {\r\n    //     if (this.dc.cellEditor) {\r\n    //         const _editor = this.dc.cellEditor.componentRef.instance;\r\n    //         this.dg.pending = _editor.pending;\r\n    //         return _editor;\r\n    //     }\r\n    //     return null;\r\n    // }\r\n\r\n    // get formControl() {\r\n    //     if (this.editor) {\r\n    //         return this.editor.formControl as FormControl;\r\n    //     }\r\n    //     return null;\r\n    // }\r\n\r\n    @ContentChild(DatagridCellComponent) dc: DatagridCellComponent;\r\n    private dgb: DatagridBodyComponent;\r\n    private dr: DatagridRowDirective;\r\n    private dfs: DatagridFacadeService;\r\n    private dgs: DatagridService;\r\n\r\n    // private _readonly$ = null;\r\n    private cellEditorCreatedSubscription = null;\r\n    private cellEditorDestorySubscription = null;\r\n    private destroy$ = new Subject();\r\n    constructor(\r\n        private injector: Injector, public el: ElementRef, private render: Renderer2,\r\n        @Inject(forwardRef(() => DatagridComponent)) public dg: DatagridComponent, public ngZone: NgZone) {\r\n        this.dgb = this.injector.get(DatagridBodyComponent);\r\n        this.dr = this.injector.get(DatagridRowDirective);\r\n        this.dfs = this.injector.get(DatagridFacadeService);\r\n        this.dgs = this.injector.get(DatagridService);\r\n\r\n\r\n        if (!this.cellEditorCreatedSubscription) {\r\n            this.cellEditorCreatedSubscription = this.dgs.cellEditorCreated.pipe(\r\n                takeUntil(this.destroy$)\r\n            ).pipe(\r\n                filter(({ column, editorRef, cellEditorRef, templateRef }) => {\r\n                    return column.field === this.column.field && this.dg.selectedRow.id === this.dr.rowId;\r\n                })\r\n            ).subscribe(({ editorRef, cellEditorRef, templateRef }) => {\r\n                if (editorRef) {\r\n                    this['editor'] = editorRef.instance;\r\n                    this['formControl'] = this.editor.formControl as FormControl;\r\n                    this.cellEditorRef = cellEditorRef;\r\n                    this.emitBeginEdit();\r\n                } else {\r\n                    this['formControl'] = this.dr.form.get(this.column.field) as FormControl;\r\n                    this.bindEditorInputEvent();\r\n                    this.dg.beginEdit.emit({ editor: null, column: this.column, rowData: this.rowData, gridInstance: this.dg, template: templateRef });\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n\r\n        this.dg.dgs.cellEditorDestory.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).pipe(\r\n            filter(({ column }) => {\r\n                return this.dg.selectedRow && column.field === this.column.field && this.dg.selectedRow.id === this.dr.rowId;\r\n            })\r\n        ).subscribe((e: any) => {\r\n            if (this.dg.editMode === 'cell') {\r\n                this.dg.selectedRow.editors = [];\r\n                if (this.dg.currentCell) {\r\n                    this.dg.currentCell.editor = null;\r\n                    this.dg.currentCell.cellEditorRef = null;\r\n                }\r\n            }\r\n            this.unBindEditorInputEvent();\r\n            this.cellEditorRef = null;\r\n            this.formControl = null;\r\n            this.editor = null;\r\n        });\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.rowData && !changes.rowData.isFirstChange()) {\r\n            this.setCellClsWithEditorType();\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.initCellEvent();\r\n        this.setCellClsWithEditorType();\r\n    }\r\n\r\n    private initCellEvent() {\r\n        // this.cellclick = this.render.listen(this.el.nativeElement, 'click', (e) => this.onClickCell(e));\r\n        if (this.column && (this.column.editor || this.column.editorTemplate)) {\r\n            if (!this.dg.clickToEdit) {\r\n                this.celldblclick = this.render.listen(this.el.nativeElement, 'dblclick', (e) => {\r\n                    this.onDblClickCell(e);\r\n                });\r\n            }\r\n            this.el.nativeElement.edit = (e) => this.onClickCell(e);\r\n            this.el.nativeElement.editCell = (e) => {\r\n                this.openCellEditor();\r\n            };\r\n        } else {\r\n            this.clickTimer = 0;\r\n        }\r\n        this.el.nativeElement.gridCellData = { rowData: this.rowData, rowIndex: this.dr.rowIndex };\r\n        this.el.nativeElement.closeEdit = () => this.closeEditingCell();\r\n        this.el.nativeElement.selectCell = (e, el) => {\r\n            if (this.dg.disableRow && this.dg.disableRow(this.rowData, this.dr.rowIndex)) {\r\n                return;\r\n            }\r\n\r\n            if (this.dg.currentCell && this.dg.currentCell.cellElement.id === el.id && !this.dg.keepSelect) {\r\n                this.dg.cancelSelectCell();\r\n            } else {\r\n                this.selectCell(this.column.field, el);\r\n                this.dg.cellClick.emit({ column: this.column, rowData: this.rowData, gridInstance: this.dg, event: e });\r\n            }\r\n        };\r\n        this.el.nativeElement.cancelSelected = () => {\r\n            // DomHandler.removeClass(this.el.nativeElement, CELL_SELECTED_CLS);\r\n            // DomHandler.removeClass(this.el.nativeElement, CELL_EDITING_CLS);\r\n            this.render.removeClass(this.el.nativeElement, CELL_SELECTED_CLS);\r\n            this.render.removeClass(this.el.nativeElement, CELL_EDITING_CLS);\r\n        };\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n\r\n        if (this.cellclick) {\r\n            this.cellclick();\r\n        }\r\n\r\n        if (this.celldblclick) {\r\n            this.celldblclick();\r\n        }\r\n\r\n        this.unBindEditorInputEvent();\r\n\r\n        if (this.bindCellEventSubscription) {\r\n            this.bindCellEventSubscription.unsubscribe();\r\n            this.bindCellEventSubscription = null;\r\n        }\r\n\r\n        if (this.cellEditorCreatedSubscription) {\r\n            this.cellEditorCreatedSubscription.unsubscribe();\r\n            this.cellEditorCreatedSubscription = null;\r\n        }\r\n\r\n        if (this.cellEditorDestorySubscription) {\r\n            this.cellEditorDestorySubscription.unsubscribe();\r\n            this.cellEditorDestorySubscription = null;\r\n        }\r\n\r\n        this.editor = null;\r\n        this.cellEditorRef = null;\r\n        this.formControl = null;\r\n\r\n        if (this.el) {\r\n            this.el.nativeElement.cancelSelected = noop;\r\n            this.el.nativeElement.selectCell = noop;\r\n            this.el.nativeElement.closeEdit = noop;\r\n            this.el.nativeElement.gridCellData = noop;\r\n            this.el.nativeElement.edit = noop;\r\n            this.el.nativeElement.selectCell = noop;\r\n            this.el = null;\r\n        }\r\n    }\r\n\r\n    private isDifferentCell() {\r\n        if (!this.dg.currentCell) {\r\n            return true;\r\n        } else {\r\n            if (!this.dg.selectedRow || this.dg.selectedRow.index !== this.dr.rowIndex) {\r\n                return true;\r\n            } else {\r\n                if (this.dr.rowIndex !== this.dg.currentCell.rowIndex) {\r\n                    return true;\r\n                } else {\r\n                    return this.dg.currentCell.field !== this.column.field;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private onClickCell(event: any) {\r\n        // å³é­å¶ä»Grid çç¼è¾å¨\r\n        document.body.click();\r\n\r\n        this.dg.beforeClickCell.emit({ rowIndex: this.dr.rowIndex, rowData: this.rowData, column: this.column, gridInstance: this.dg });\r\n\r\n        if (this.dr.disabled) {\r\n            return;\r\n        }\r\n\r\n        // 20210422\r\n        // if (this.dg.closeOtherGridEditor) {\r\n        //     document.body.click();\r\n        // }\r\n\r\n        if (this.dg.disabled) {\r\n            return;\r\n        } else {\r\n            if (!this.dg.editable || this.isReadonly()) {\r\n                if (this.dg.enableHighlightCell) {\r\n                    event.stopPropagation();\r\n                    this.dg.endEditing();\r\n                    this.selectCell(this.column.field);\r\n                }\r\n                return;\r\n            } else {\r\n                if (this.dg.editMode === 'row') {\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.dg.selectionMode === 'default' && event) {\r\n            if (event.ctrlKey || event.shiftKey) {\r\n                return;\r\n            }\r\n        }\r\n\r\n\r\n        event.stopPropagation();\r\n        if (event.target['nodeName'] === 'INPUT') {\r\n            return;\r\n        }\r\n\r\n\r\n        if (this.dg.clickToEdit && !this.dg.dblclickRow.observers.length) {\r\n            this.dg.clickDelay = 0;\r\n        }\r\n\r\n\r\n        this.render.addClass(this.dg.el.nativeElement, 'f-datagrid-unselect');\r\n\r\n        if (!this.dg.isSingleClick && this.dg.editMode) {\r\n            this.dg.isSingleClick = true;\r\n            this.clickTimer = setTimeout(() => {\r\n                if (this.dg.isSingleClick && this.dg.editable && this.dg.editMode === 'cell') {\r\n                    this.dg.isSingleClick = false;\r\n                    clearTimeout(this.clickTimer);\r\n                    // if (!this.closeEditingCell()) {\r\n                    //     return;\r\n                    // }\r\n                    this.closeEditingCell().pipe(takeUntil(this.destroy$)).subscribe((f: any) => {\r\n                        if (f) {\r\n                            if (this.dg.clickToEdit) {\r\n                                this.openCellEditor();\r\n                            } else {\r\n                                this.selectCell(this.column.field);\r\n                            }\r\n                            this.render.removeClass(this.dg.el.nativeElement, 'f-datagrid-unselect');\r\n                            event.preventDefault();\r\n                        }\r\n                    });\r\n                }\r\n            }, this.dg.clickDelay);\r\n        }\r\n    }\r\n\r\n    private onDblClickCell(event: MouseEvent) {\r\n        if (this.dg.disabled || this.isReadonly()) {\r\n            return;\r\n        }\r\n\r\n        if (event.target['nodeName'] === 'INPUT' || event.target['nodeName'] === 'TEXTAREA') {\r\n            return;\r\n        }\r\n        if (this.dg.editable && this.dg.editMode === 'cell') {\r\n            // if (!this.closeEditingCell()) {\r\n            //     return;\r\n            // }\r\n            this.closeEditingCell().pipe(takeUntil(this.destroy$)).subscribe(f => {\r\n                if (f) {\r\n                    setTimeout(() => {\r\n                        this.openCellEditor();\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        if (this.clickTimer) {\r\n            this.dg.isSingleClick = false;\r\n            clearTimeout(this.clickTimer);\r\n            this.clickTimer = null;\r\n        }\r\n    }\r\n\r\n    isReadonly(col = this.column) {\r\n        if (this.dg.editable) {\r\n            // åä¸åå¹¶çååæ ¼ä¸åè®¸ç¼è¾\r\n            if (this.dg.mergeCell && this.dg.mergeFields.indexOf(col.field) > -1) {\r\n                return true;\r\n            }\r\n            return this.getReadonlyValue(col);\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    private getReadonlyValue(col = this.column) {\r\n        if (col.readonly !== undefined) {\r\n            if (typeof col.readonly === 'boolean') {\r\n                return col.readonly;\r\n            } else if (typeof col.readonly === 'function') {\r\n                return col.readonly(this.rowData);\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    openCellEditor() {\r\n        // å½åè¡ç¦ç¨ï¼ä¸åè®¸ç¼è¾ã\r\n        if (this.dr.disabled) {\r\n            return;\r\n        }\r\n\r\n        if ((!this.column.editor && !this.column.editorTemplate) || !this.dg.editable || this.isReadonly()) {\r\n            if (this.dg.selectionMode === 'default' && this.dg.multiSelect) {\r\n                this.dg.clearCheckeds();\r\n            }\r\n            this.selectCell(this.column.field);\r\n            return;\r\n        }\r\n\r\n        const beforeEditEvent = this.dg.beforeEdit({ rowIndex: this.dr.rowIndex, rowData: this.rowData, column: this.column, gridInstance: this.dg });\r\n        if (!beforeEditEvent || !beforeEditEvent.subscribe) {\r\n            this.dg.writeConsole('please return an Observable Type.');\r\n            return;\r\n        }\r\n\r\n        if (this.dg.currentCell) {\r\n            if (!this.dg.currentCell.cellRef || this.dg.currentCell.cellRef.column.field !== this.column.field) {\r\n                this.dg.currentCell.cellRef = this.dc;\r\n            }\r\n        }\r\n\r\n\r\n        beforeEditEvent.pipe(takeUntil(this.destroy$)).subscribe((flag) => {\r\n            if (flag) {\r\n                if (this.isDifferentCell()) {\r\n\r\n                    if (this.dg.selectionMode === 'default' && this.dg.multiSelect) {\r\n                        this.dg.clearCheckeds();\r\n                    }\r\n\r\n                    this.selectCell(this.column.field);\r\n                }\r\n\r\n                this.dfs.editCell();\r\n                // this.emitBeginEdit();\r\n            } else {\r\n                this.selectCell(this.column.field);\r\n            }\r\n        });\r\n    }\r\n\r\n    private emitBeginEdit() {\r\n\r\n        const _cellEditorRef = this.cellEditorRef || this.dc.cellEditor;\r\n\r\n        this.render.removeClass(this.dg.el.nativeElement, 'f-datagrid-unselect');\r\n\r\n        if (this.dg.editMode === 'cell') {\r\n            this.dg.selectedRow.editors = [this.editor];\r\n            this.dg.currentCell.editor = this.editor;\r\n            this.dg.currentCell.cellEditorRef = _cellEditorRef;\r\n            this.bindEditorInputEvent();\r\n\r\n            this.render.addClass(this.el.nativeElement, CELL_EDITING_CLS);\r\n\r\n            // this.formControl.setValue(this.dc.value);\r\n            this.dg.beginEdit.emit({ editor: _cellEditorRef, column: this.column, rowData: this.rowData, gridInstance: this.dg });\r\n\r\n            if (this.column.editor.type === 'textarea' && this.column.editor.options && this.column.editor.options.editType === 'dialog') {\r\n                this.editor.showDialog();\r\n            }\r\n        }\r\n\r\n        if (this.dr && !this.dg.nowrap) {\r\n            this.dr.updateRowHeight();\r\n        }\r\n    }\r\n\r\n    closeEditingCell() {\r\n        if (!this.dg.isCellEditing()) {\r\n            return of(true);\r\n        }\r\n\r\n        let currentCell = null;\r\n        let editor: any = null;\r\n        if (this.dg.currentCell) {\r\n            // this.dg.currentCell.isEditing = false;\r\n            // this.dfs.getCurrentCell().isEditing = false;\r\n\r\n            currentCell = this.dg.currentCell.cellRef as DatagridCellComponent;\r\n            if (currentCell) {\r\n                if (!currentCell.isEditing) {\r\n                    return of(true);\r\n                }\r\n\r\n                if (currentCell.cellEditor && currentCell.cellEditor.componentRef && !currentCell.column.editorTemplate) {\r\n                    editor = currentCell.cellEditor.componentRef.instance;\r\n\r\n                    if (editor) {\r\n                        // æ§è¡blur äºä»¶\r\n                        if (editor.inputElement) {\r\n                            const domName = editor.inputElement.nodeName;\r\n                            const blurFn =  editor.options && editor.options.onBlur;\r\n                            if (blurFn) {\r\n                                if ((domName === 'INPUT' || domName === 'TEXTAREA') &&  this.dg['focusElement'] === editor.inputElement) {\r\n                                    blurFn({ editorRef: editor, rowData: currentCell.rowData});\r\n                                }\r\n                            }\r\n                            if (editor.inputElement.blur) {\r\n                                editor.inputElement.blur();\r\n                            }\r\n\r\n                            this.dg['focusElement'] = null;\r\n                        }\r\n\r\n                        if (editor.blur) {\r\n                            editor.blur();\r\n                        }\r\n\r\n                        if (editor.pending) {\r\n                            return of(false);\r\n                        }\r\n\r\n                        if (editor.formControl) {\r\n                            if (editor.formControl.pending) {\r\n                                return of(false);\r\n                            }\r\n\r\n                            if (editor.formControl && editor.formControl.invalid && !this.dg.endEditByInvalid) {\r\n                                return of(false);\r\n                            }\r\n                        } else {\r\n                            return of(true);\r\n                        }\r\n                    } else {\r\n                        return of(true);\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            return of(true);\r\n        }\r\n\r\n        this.dg.isSingleClick = false;\r\n        const _col_ = (editor || currentCell).column;\r\n        const afterEditEvent = this.dg.afterEdit(currentCell.rowIndex, currentCell.rowData, _col_, editor);\r\n        if (!afterEditEvent || !afterEditEvent.subscribe) {\r\n            this.dg.writeConsole('please return an Observable Type.');\r\n            return;\r\n        }\r\n\r\n        let cellEndEdit = of(undefined);\r\n\r\n        afterEditEvent.pipe(takeUntil(this.destroy$)).subscribe((flag: boolean) => {\r\n            if (flag) {\r\n                let val = currentCell.value;\r\n                if (currentCell && currentCell.formControl && val !== currentCell.formControl.value) {\r\n                    val = currentCell.formControl.value;\r\n                    currentCell.isEditing = false;\r\n                    currentCell.updateValue(val);\r\n                }\r\n                this.dfs.endEditCell();\r\n                this.dgs.onEndCellEdit(this.dfs.getCurrentCell());\r\n                this.unBindEditorInputEvent();\r\n                // ç§»é¤ç¼è¾æ ·å¼\r\n                this.render.removeClass(this.el.nativeElement, CELL_EDITING_CLS);\r\n\r\n                if (this.dg.selectedRow) {\r\n                    this.dg.selectedRow.editors = [];\r\n                }\r\n                // this.dg.selectedRow.data = this.rowData;\r\n                // æ´æ°è¡æ ·å¼æèååæ ¼æ ·å¼\r\n                this.dfs.rowUpdate$.next({ index: currentCell.rowIndex, data: currentCell.rowData, cellRef: currentCell });\r\n                this.dg.endEdit.emit({ rowIndex: currentCell.rowIndex, rowData: currentCell.rowData, column: _col_, value: val });\r\n\r\n                // æ´æ°footerData\r\n                this.dgs.refreshFooterData.emit();\r\n                cellEndEdit = of(true);\r\n                // å·æ°è¡æ°æ®\r\n                // this.dr.refresh();\r\n                if (this.dg.selectedRow && this.dg.selectedRow.dr) {\r\n                    this.dg.selectedRow.dr.refresh();\r\n                }\r\n\r\n            } else {\r\n                if (currentCell && currentCell.cellEditor) {\r\n                    editor = currentCell.cellEditor.componentRef.instance;\r\n                    editor.inputElement.focus();\r\n                    cellEndEdit = of(false);\r\n                } else {\r\n                    cellEndEdit = of(true);\r\n                }\r\n            }\r\n        });\r\n        return cellEndEdit;\r\n    }\r\n\r\n    cancelCellEditing() {\r\n        if (this.dg.currentCell && this.dg.currentCell.isEditing && this.dg.selectedRow.index > -1) {\r\n            // this.dfs.resetRow(this.dg.selectedRow.id);\r\n            this.dc.rowData = this.dg.selectedRow.data;\r\n            this.formControl.reset(Utils.getValue(this.column.field, this.dc.rowData));\r\n            this.closeEditingCell();\r\n        }\r\n    }\r\n\r\n\r\n    bindEditorInputEvent() {\r\n        const ceRef = this.cellEditorRef || this.dc.cellEditor;\r\n        let input = null;\r\n        if (ceRef) {\r\n            input = ceRef.componentRef.instance.inputElement;\r\n        } else {\r\n            if (this.column.editorTemplate) {\r\n                input = this.dc.el.nativeElement.querySelector('input,textarea');\r\n            }\r\n        }\r\n        if (input) {\r\n            input.focus();\r\n            if (this.dg.selectOnEditing && this.column.editorTemplate) {\r\n                setTimeout(() => {\r\n                    if (input.select) { input.select(); }\r\n                });\r\n            }\r\n\r\n            this.editorInputKeydownEvent = this.render.listen(input, 'keydown', (e) => {\r\n                this.onKeyDownForInput(e);\r\n            });\r\n        }\r\n    }\r\n\r\n    unBindEditorInputEvent() {\r\n        if (this.editorInputKeydownEvent) {\r\n            this.editorInputKeydownEvent();\r\n            this.editorInputKeydownEvent = null;\r\n        }\r\n    }\r\n\r\n    onKeyDownForInput(e: KeyboardEvent) {\r\n        const keyCode = e.keyCode;\r\n        if (e.altKey || e.ctrlKey) {\r\n            return;\r\n        }\r\n        if ((this.editor && this.editor.stopPropagation) || keyCode === 13 || this.column.editorTemplate) {\r\n            e.stopPropagation();\r\n        }\r\n\r\n        switch (keyCode) {\r\n            case 32:  // SPACE\r\n                if (this.column.editor.type === 'switch') {\r\n                    e.preventDefault();\r\n                    this.editor.instance.updateChecked(e, false);\r\n                }\r\n                break;\r\n            case 13:  // Enter\r\n                this.closeEditingCell().pipe(takeUntil(this.destroy$)).pipe(\r\n                    debounceTime(100)\r\n                ).subscribe(f => {\r\n                    if (f) {\r\n                        this.dg.dgContainer.nativeElement.focus();\r\n                        const enterParam = { gird: this.dg, cell: this.dg.currentCell, event: e };\r\n                        if (this.column.onEnterHandler) {\r\n                            this.column.onEnterHandler(enterParam);\r\n                        } else {\r\n                            const nextTd = this.dg.currentCell.cellElement.nextElementSibling;\r\n                            if (this.dg.currentCell.lastRow && !nextTd) {\r\n                                this.dg.lastCellEnterHandle.emit(enterParam);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n                break;\r\n            case 27: // ESC\r\n                this.cancelCellEditing();\r\n                break;\r\n            case 9: // Tab\r\n                e.stopPropagation();\r\n                this.dg.clickDelay = 0;\r\n                if (e.shiftKey) {\r\n                    this.closeEditingCell().pipe(takeUntil(this.destroy$)).subscribe(f => {\r\n                        if (f) {\r\n                            this.movePrevCellAndEdit();\r\n                        }\r\n                    });\r\n                } else {\r\n                    this.closeEditingCell().pipe(takeUntil(this.destroy$)).subscribe(f => {\r\n                        if (f) {\r\n                            this.moveNextCellAndEdit(e);\r\n                        }\r\n                    });\r\n                    e.preventDefault();\r\n                }\r\n                break;\r\n            case 40: // â\r\n                /** éä¸­ä¸ä¸è¡ï¼ä¸å½ååè¿å¥ç¼è¾æ; ä»æ®éææ¬è¾å¥æ¡æ¯æ */\r\n                if (this.column.editor.type === 'textbox') {\r\n                    this.closeEditingCell().pipe(takeUntil(this.destroy$)).subscribe(f => {\r\n                        if (f) {\r\n                            this.selectNextRowAndEditCell(this.column.field, 'down');\r\n                        }\r\n                    });\r\n                    e.preventDefault();\r\n                }\r\n                break;\r\n            case 38: // â\r\n                /** éä¸­ä¸ä¸è¡ï¼ä¸å½ååè¿å¥ç¼è¾æ; ä»æ®éææ¬è¾å¥æ¡æ¯æ */\r\n                if (this.column.editor.type === 'textbox') {\r\n                    this.closeEditingCell().pipe(takeUntil(this.destroy$)).subscribe(f => {\r\n                        if (f) {\r\n                            this.selectNextRowAndEditCell(this.column.field, 'up');\r\n                        }\r\n                    });\r\n                    e.preventDefault();\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    private selectCell(field: string, tdElement?: any) {\r\n        this.closeEditingCell().subscribe(t => {\r\n            if (!t) {\r\n                return;\r\n            }\r\n            tdElement = tdElement || this.el.nativeElement;\r\n            this.clearCellSelectedClass();\r\n\r\n            if (field !== this.dg.ControlPanelFeild) {\r\n                this.render.addClass(tdElement, CELL_SELECTED_CLS);\r\n            }\r\n\r\n            // this.dr.drHover.setRowHoverCls(false);\r\n            this.dfs.setCurrentCell(this.dr, field, tdElement, this.dc);\r\n            if (!this.dg.fast) {\r\n                this.moveScrollbar(tdElement);\r\n            }\r\n        });\r\n    }\r\n\r\n    private moveScrollbar(td: any) {\r\n        const tdPosLeft = td.offsetLeft + td.offsetWidth;\r\n        const containerWidth = this.dg.width - this.dgb.columnsGroup.leftFixedWidth;\r\n        const tdRect = td.getBoundingClientRect();\r\n        const scrollContainer = this.dgb.ps.elementRef.nativeElement;\r\n        const psContainer = scrollContainer.getBoundingClientRect();\r\n        const scrollTop = scrollContainer.scrollTop;\r\n        const scrollLeft = scrollContainer.scrollLeft;\r\n        const scrollbarXLeft = this.dgb.ps.elementRef.nativeElement.scrollLeft;\r\n        if (tdPosLeft > containerWidth) {\r\n            const x = tdPosLeft - containerWidth + 2;\r\n            if (x > scrollbarXLeft) {\r\n                this.dgb.ps.scrollToX(x);\r\n            }\r\n        } else {\r\n            if (tdRect.x < psContainer.x) {\r\n                const x = scrollLeft - tdRect.x;\r\n                this.dgb.ps.scrollToX(x);\r\n            }\r\n        }\r\n\r\n        const tdPosTop = tdRect.top - psContainer.top + tdRect.height;\r\n        if (tdPosTop > psContainer.height) {\r\n            const y = tdPosTop - psContainer.height;\r\n            this.dgb.ps.scrollToY(scrollTop + y);\r\n        } else {\r\n            if (tdRect.y < psContainer.y) {\r\n                this.dgb.ps.scrollToY(scrollTop - (psContainer.y - tdRect.y));\r\n            }\r\n        }\r\n    }\r\n\r\n    private moveNextCellAndEdit(event?: any) {\r\n        // if (!this.closeEditingCell()) {\r\n        //     return;\r\n        // }\r\n        const fieldIndex = this.dfs.getColumnIndex(this.column.field);\r\n        if (fieldIndex + 1 < this.dgb.columnsGroup.normalColumns.length) {\r\n            const nextColumn = this.dgb.columnsGroup.normalColumns[fieldIndex + 1];\r\n\r\n            const nextTd = this.dg.currentCell.cellElement.nextElementSibling;\r\n            if (nextColumn && ((!nextColumn.editor && !nextColumn.editorTemplate) || this.isReadonly(nextColumn))) {\r\n                if (nextTd) {\r\n                    nextTd.selectCell(event, nextTd);\r\n                }\r\n                return;\r\n            }\r\n\r\n            if (nextTd) {\r\n                nextTd.focus();\r\n                if (nextColumn.editor || nextColumn.editorTemplate) {\r\n                    nextTd.editCell();\r\n                    this.dgs.onCellEdit(nextTd);\r\n                }\r\n            }\r\n        } else {\r\n            // next row's first cell to editing\r\n            const nextTr = this.dg.currentCell.cellElement.parentElement.nextElementSibling;\r\n            if (nextTr && nextTr.tagName === 'TR') {\r\n                // nextTr.children.find(td => td.editCell).editCell();\r\n                let firstEditor = false;\r\n                let i = 0;\r\n                while (!firstEditor) {\r\n                    firstEditor = !!nextTr.children[i].editCell;\r\n                    if (!firstEditor) {\r\n                        i++;\r\n                    }\r\n                }\r\n                if (this.dg.selectionMode === 'default') {\r\n                    this.dg.clearCheckeds();\r\n                }\r\n                nextTr.children[i].editCell();\r\n            }\r\n        }\r\n    }\r\n\r\n    private movePrevCellAndEdit() {\r\n        // if (!this.closeEditingCell()) {\r\n        //     return;\r\n        // }\r\n        const fieldIndex = this.dfs.getColumnIndex(this.column.field);\r\n        if (fieldIndex - 1 >= 0) {\r\n            const nextColumn = this.dgb.columnsGroup.normalColumns[fieldIndex - 1];\r\n            if (nextColumn && this.isReadonly(nextColumn)) {\r\n                return;\r\n            }\r\n            const nextTd = this.dg.currentCell.cellElement.previousElementSibling;\r\n            if (nextTd) {\r\n                // this.selectCell(nextColumn.field, nextTd);\r\n                nextTd.focus();\r\n                if (nextColumn.editor) {\r\n                    // this.dfs.editCell();\r\n                    nextTd.click();\r\n                    this.dgs.onCellEdit(nextTd);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private selectNextRowAndEditCell(cellFieldName: string, dir: 'down' | 'up') {\r\n        const p = dir === 'down' ? 'nextElementSibling': 'previousElementSibling';\r\n        const nextTr = this.dg.currentCell.cellElement.parentElement[p];\r\n        if (nextTr && nextTr.tagName === 'TR') {\r\n            const td: any = Array.from(nextTr.children).find((td: any) => td.getAttribute('field') == cellFieldName);\r\n            if (td && td.editCell) {\r\n                if (this.dg.selectionMode === 'default' ) {\r\n                    this.dg.clearCheckeds();\r\n                }\r\n                td.editCell();\r\n            }\r\n        }\r\n    }\r\n\r\n    private clearCellSelectedClass() {\r\n        // if (this.dg.currentCell) {\r\n        //     DomHandler.removeClass(this.dg.currentCell.cellElement, CELL_SELECTED_CLS);\r\n        //     this.render.removeClass(this.dg.currentCell.cellElement, CELL_EDITING_CLS);\r\n\r\n        //     const selectedCell = this.dg.el.nativeElement.querySelectorAll('.' + CELL_SELECTED_CLS);\r\n        //     if (selectedCell.length) {\r\n        //         selectedCell.forEach(n => {\r\n        //             this.render.removeClass(n, CELL_SELECTED_CLS);\r\n        //         });\r\n        //     }\r\n        // }\r\n\r\n        this.dg.removeCellSelectedCls();\r\n    }\r\n\r\n    private setCellClsWithEditorType() {\r\n\r\n        // è®¾ç½®å½åéä¸­ååæ ¼æ ·å¼\r\n        if (this.dg.currentCell && this.dg.enableHighlightCell) {\r\n            if (this.dg.currentCell.field === this.column.field && this.dg.currentCell.rowId === this.rowData[this.dg.idField] && !this.dc.isEditing) {\r\n                this.clearCellSelectedClass();\r\n                this.render.addClass(this.el.nativeElement, CELL_SELECTED_CLS);\r\n            }\r\n        }\r\n\r\n\r\n        if (!this.dg.enableEditCellStyle) {\r\n            return;\r\n        }\r\n\r\n        const td = this.el.nativeElement;\r\n        this.cleanOtherEditorIcon(td);\r\n        // å½åè¡ç¦ç¨ï¼ä¸åè®¸ç¼è¾ã\r\n        if (this.dr.disabled) {\r\n            return;\r\n        }\r\n\r\n        if (!this.column.editor) {\r\n            return;\r\n        }\r\n\r\n        if (this.isReadonly()) {\r\n            return;\r\n        }\r\n\r\n        const editorType = this.column.editor.type;\r\n        const cls = this.column.align === 'right' ? 'allow-edit-cell-left' : 'allow-edit-cell';\r\n        this.render.addClass(td, cls);\r\n        this.render.addClass(td, ALLOW_EDIT_CELL_HIGHLIGHT_CLS[editorType]);\r\n    }\r\n\r\n    private cleanOtherEditorIcon(td) {\r\n        const values = Object.values(ALLOW_EDIT_CELL_HIGHLIGHT_CLS);\r\n        values.forEach(v => {\r\n            if (td.className.indexOf(v) > -1) {\r\n                td.className = td.className.replace('allow-edit-cell-left', '').replace('allow-edit-cell', '');\r\n                td.className = td.className.replace(v, '');\r\n            }\r\n        });\r\n    }\r\n}\r\n","\r\n\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-06 07:43:07\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-11-20 08:19:06\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { Component, OnInit, Input, ViewChild, ElementRef, AfterViewInit, Injector, Inject, forwardRef } from '@angular/core';\r\nimport { ChangeDetectorRef, NgZone, OnDestroy } from '@angular/core';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { DataColumn, SCROLL_X_ACTION, TR_ID_PREFIX } from '../../types';\r\nimport { DatagridComponent } from '../../datagrid.component';\r\nimport { DatagridBodyComponent } from './datagrid-body.component';\r\nimport ResizeObserver from 'resize-observer-polyfill';\r\nimport { IS_GROUP_ROW_FIELD, GROUP_ROW_FIELD, IS_GROUP_FOOTER_ROW_FIELD, GROUP_VISIBLE_FIELD, GROUP_LEVEL_FIELD } from '../../services/state';\r\nimport { takeUntil } from 'rxjs/operators';\r\n@Component({\r\n    selector: 'datagrid-rows',\r\n    templateUrl: './datagrid-rows.component.html',\r\n    // changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DatagridRowsComponent implements OnInit, AfterViewInit, OnDestroy {\r\n\r\n    @Input() startRowIndex: number;\r\n    @Input() data: any;\r\n    @Input() columns: DataColumn[];\r\n    @ViewChild('tableEl') tableEl: ElementRef;\r\n    /** æ¯å¦ä¸ºå³ä¾§åºå®åãé»è®¤ä¸º false */\r\n    @Input() fixedRight = false;\r\n    /** æ¯å¦æå·¦ä¾§åºå®å */\r\n    @Input() hasFixedColumns = false;\r\n\r\n    isGroupRow = IS_GROUP_ROW_FIELD;\r\n    groupRow = GROUP_ROW_FIELD;\r\n    isGroupFooter = IS_GROUP_FOOTER_ROW_FIELD;\r\n    visible = GROUP_VISIBLE_FIELD;\r\n    groupLevelField = GROUP_LEVEL_FIELD;\r\n\r\n    filterConditions = '';\r\n\r\n\r\n    get groupSummaryDataInGroupRow() {\r\n        return this.dg.groupSummaryPosition === 'inGroupRow';\r\n    }\r\n\r\n    checkedRows = [];\r\n\r\n    private ro: ResizeObserver = null;\r\n    private scrollToCurrentRowSubscription: Subscription;\r\n    private subscriptions: Subscription[] = [];\r\n    private destroy$ = new Subject();\r\n    constructor(\r\n        public cd: ChangeDetectorRef,\r\n        @Inject(forwardRef(() => DatagridComponent)) public dg: DatagridComponent,\r\n        @Inject(forwardRef(() => DatagridBodyComponent)) public dgb: DatagridBodyComponent,\r\n        public el: ElementRef, private injector: Injector, private ngZone: NgZone) {\r\n\r\n    }\r\n\r\n    private listenEvent() {\r\n        const _s3 = this.dg.dgs.setSelecedRow.pipe(takeUntil(this.destroy$)).subscribe((r: any) => {\r\n            this.detectChanges();\r\n        });\r\n        this.subscriptions.push(_s3);\r\n\r\n        const _s4 = this.dg.dfs.rowAppend$.pipe(takeUntil(this.destroy$)).subscribe(() => {\r\n            this.detectChanges();\r\n        });\r\n        this.subscriptions.push(_s4);\r\n\r\n        const _s5 = this.dg.dfs.rowUpdate$.pipe(takeUntil(this.destroy$)).subscribe((row: { index: number; data: any; }) => {\r\n            if (row) {\r\n                if (this.dg.groupRows) {\r\n                    if (this.dg.groupFooter) {\r\n                        this.dg.dfs.updateGroupFooter(row.data[this.groupRow]);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        this.subscriptions.push(_s5);\r\n\r\n        this.scrollToCurrentRowSubscription = this.dg.dgs.scrollToCurrentRow.subscribe(() => {\r\n            this.scrollToFirstSelectedRow();\r\n            this.dg.scrollInstance.scrollToLeft();\r\n        });\r\n\r\n\r\n        this.dg.dfs.checkRow$.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).subscribe( () => {\r\n            this.checkedRows = this.dg.dfs.getCheckeds();\r\n            this.detectChanges();\r\n        });\r\n\r\n        this.dg.dfs.clearCheckeds$.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).subscribe( () => {\r\n            this.checkedRows =  this.dg.dfs.getCheckeds();\r\n            this.detectChanges();\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.listenEvent();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.unSubscriptions();\r\n    }\r\n\r\n    private unSubscriptions() {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n        if (this.scrollToCurrentRowSubscription) {\r\n            this.scrollToCurrentRowSubscription.unsubscribe();\r\n            this.scrollToCurrentRowSubscription = null;\r\n        }\r\n\r\n        if (this.subscriptions && this.subscriptions.length) {\r\n            this.subscriptions.forEach(n => n.unsubscribe);\r\n            this.subscriptions = [];\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.ngZone.runOutsideAngular(() => {\r\n            setTimeout(() => {\r\n                if (!this.dg.nowrap) {\r\n                    // this.dgb.updateRowHeight();\r\n                    this.dg.calculateGridSize();\r\n                }\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    getGroupColumn(field) {\r\n        return this.dg.flatColumns.find(col => col.field === field);\r\n    }\r\n\r\n    private detectChanges() {\r\n        if (!this.cd['destroyed']) {\r\n            this.cd.detectChanges();\r\n        }\r\n    }\r\n\r\n    trackByField(index, item) {\r\n        return item.field;\r\n    }\r\n\r\n    isElementInViewport(el) {\r\n        const container = this.dgb.ps.instance.element.getBoundingClientRect();\r\n        const box = el.getBoundingClientRect();\r\n        const top = (box.top <= container.height + container.top);\r\n        const bottom = (box.bottom <= (container.bottom));\r\n\r\n        return (top && bottom);\r\n    }\r\n\r\n    private scrollToFirstSelectedRow() {\r\n        if (this.dg.selectedRow) {\r\n            const rowIndex = this.dg.selectedRow.index;\r\n            const rowId = TR_ID_PREFIX + this.dg.selectedRow.id;\r\n            const tr: any = document.querySelector(rowId);\r\n\r\n            if (rowIndex === 0) {\r\n                if (this.dgb.ps && this.dgb.ps.instance) {\r\n                    if (this.dgb.ps.instance.element.scrollTop === 0) {\r\n                        return;\r\n                    } else {\r\n                        this.dg.scrollInstance.scrollToY(0);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n\r\n            const { top, bottom } = this.dgb.getVisibleRange();\r\n            if (rowIndex === top || rowIndex === bottom) {\r\n                return;\r\n            } else {\r\n\r\n                if (rowIndex > top && rowIndex < bottom && tr && this.isElementInViewport(tr)) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if (tr) {\r\n                if (tr.scrollIntoViewIfNeeded) {\r\n                    tr.scrollIntoViewIfNeeded(false);\r\n                } else {\r\n                    tr.scrollIntoView({ block: 'nearest', inline: 'nearest' });\r\n                }\r\n            } else {\r\n                const currentTrTop = rowIndex * this.dg.rowHeight;\r\n                if (currentTrTop) {\r\n                    this.dg.scrollInstance.scrollToY(currentTrTop);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n    toggleGroupRow(row, index, open) {\r\n        row.expanded = open;\r\n        this.setGroupRowsVisible(row, open);\r\n    }\r\n\r\n    private setGroupRowsVisible(row, open) {\r\n        if (row.rows) {\r\n            const groupRows = row.rows.filter(n => n[IS_GROUP_ROW_FIELD]);\r\n            const footerRows = row.rows.filter(n => n[IS_GROUP_FOOTER_ROW_FIELD]);\r\n\r\n            if (footerRows && footerRows.length) {\r\n                footerRows.forEach(n => {\r\n                    n[this.visible] = open && row.expanded;\r\n                });\r\n            }\r\n\r\n            groupRows.forEach(t => {\r\n                t[this.visible] = open && row.expanded && row[this.visible];\r\n                this.setGroupRowsVisible(t, open);\r\n            });\r\n\r\n            if (!groupRows.length) {\r\n                row.rows.forEach(t => {\r\n                    t[this.visible] = open && row.expanded && row[this.visible];\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    private mergeInfo(field: string, rowIndex: number) {\r\n        return this.dg.dgs.getMergeInfo(rowIndex, field, this.dg.mergeCellInfo);\r\n    }\r\n\r\n    showCell(col: DataColumn, rowIndex: number) {\r\n        const mergeInfo = this.mergeInfo(col.field, rowIndex);\r\n        let show = true;\r\n        if (mergeInfo) {\r\n            show = mergeInfo.show;\r\n        }\r\n\r\n        return show;\r\n    }\r\n\r\n    getRowSpan(col: DataColumn, rowIndex: number) {\r\n        const mergeInfo = this.mergeInfo(col.field, rowIndex);\r\n        if (!mergeInfo) {\r\n            return 1;\r\n        }\r\n        if (this.showCell(col, rowIndex)) {\r\n            col.readonly = true;\r\n            return mergeInfo.rowspan;\r\n        } else {\r\n            return 1;\r\n        }\r\n    }\r\n\r\n    getGroupSummaryData(groupId: string) {\r\n        const row = this.data.find(n =>  n['__group_parent_id__'] === groupId && n['__group_footer__']);\r\n        if (row) {\r\n            return row.data;\r\n        }\r\n        return null;\r\n    }\r\n}\r\n\r\n\r\n","import { Component } from '@angular/core';\r\n\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-09-06 08:30:18\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-09-06 08:34:35\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\n/** å¼å®¹èçæ¬ï¼xxxxxxx */\r\n@Component({\r\n    selector: 'grid-editor-textbox',\r\n    template: ''\r\n})\r\nexport class TextboxEditorComponent {}\r\n","import { QueryList, OnDestroy } from '@angular/core';\r\n/*\r\n* @Author: ç¯çç§æ(Lucas Huang)\r\n* @Date: 2019-08-06 07:43:53\r\n* @LastEditors: ç¯çç§æ(Lucas Huang)\r\n* @LastEditTime: 2019-11-20 20:14:11\r\n* @QQ: 1055818239\r\n* @Version: v0.0.1\r\n*/\r\n\r\nimport { ComponentFactoryResolver, ViewContainerRef, OnChanges, SimpleChanges, ComponentRef, ViewChildren } from '@angular/core';\r\n\r\nimport {\r\n    Component, OnInit, Input, Renderer2, ViewChild, ElementRef,\r\n    AfterViewInit, ViewEncapsulation, Injector, ChangeDetectorRef, Directive, Optional, NgZone\r\n} from '@angular/core';\r\n\r\nimport { DataColumn } from './../../types/data-column';\r\nimport { ColumnGroup } from '../../types/data-column';\r\nimport { DatagridService } from '../../services/datagrid.service';\r\nimport { SCROLL_X_ACTION, FIXED_LEFT_SHADOW_CLS, SCROLL_X_REACH_START_ACTION, FIXED_RIGHT_SHADOW_CLS, SCROLL_X_REACH_END_ACTION, GRID_FILTER_ROW } from '../../types/constant';\r\nimport { DatagridComponent } from '../../datagrid.component';\r\nimport { DatagridHeaderCheckboxComponent } from '../checkbox/datagrid-header-checkbox.component';\r\nimport { DatagridFacadeService } from '../../services/datagrid-facade.service';\r\nimport ResizeObserver from 'resize-observer-polyfill';\r\nimport { DatagridFilterService } from '../../services/datagrid-filter.service';\r\nimport { of, Observable, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'datagrid-header',\r\n    templateUrl: './header.component.html',\r\n    encapsulation: ViewEncapsulation.None,\r\n    exportAs: 'dgHeader'\r\n})\r\nexport class DatagridHeaderComponent implements OnInit, AfterViewInit, OnChanges, OnDestroy {\r\n    @Input() height = 35;\r\n    @Input() columns = [];\r\n    @Input() columnsGroup: ColumnGroup;\r\n    @Input() enableDragColumn = false;\r\n    @Input() wrapHeader = false;\r\n    @Input() enableFilterRow = false;\r\n\r\n    @Input() scrollbarMode = 'auto';\r\n\r\n    /** å¯ç¨æ§è½ä¼åç */\r\n    @Input() fast = false;\r\n\r\n\r\n    @ViewChild('header') header: ElementRef;\r\n    @ViewChild('headerContainer') headerColumnsTable: ElementRef;\r\n    @ViewChild('fixedLeft') fixedLeft: ElementRef;\r\n\r\n    private _chkall: DatagridHeaderCheckboxComponent;\r\n    @ViewChild('chkAll') set chkAll(v) {\r\n        this._chkall = v;\r\n    }\r\n\r\n    private fixedRight: ElementRef;\r\n    @ViewChild('fixedRight') set fr(val) {\r\n        if (val) {\r\n            this.fixedRight = val;\r\n        }\r\n    }\r\n\r\n    private dgs: DatagridService;\r\n    private dfs: DatagridFacadeService;\r\n    private ro: ResizeObserver | null = null;\r\n    private cfr: ComponentFactoryResolver;\r\n    private dfrs: DatagridFilterService;\r\n    private el: ElementRef;\r\n    rightFixedColumnWidth = 0;\r\n    normalColumnWidth = 0;\r\n\r\n    private cd: ChangeDetectorRef;\r\n    showOverlay = false;\r\n    disableSort = false;\r\n    private scrollX = 0;\r\n    showShadowCls = false;\r\n\r\n    top = 0;\r\n\r\n    // è¡å· ã å¤éæ¡ï¼å¨å¤è¡¨å¤´ä¸çåå¹¶è¡æ°\r\n    get rowSpan() {\r\n        // TFS 495872\r\n        // return this.columns.length + (this.dg.enableFilterRow ? 1 : 0);\r\n        return this.columns.length;\r\n    }\r\n\r\n    hasFixedLeftColumns = false;\r\n\r\n    private ps;\r\n    private destroy$ = new Subject();\r\n    lineNumberTitle = 'åºå·';\r\n    constructor(\r\n        private render2: Renderer2, private injector: Injector,\r\n        @Optional() public dg: DatagridComponent, private ngZone: NgZone) {\r\n        this.dfs = this.injector.get(DatagridFacadeService);\r\n        this.dgs = this.injector.get(DatagridService);\r\n        this.cfr = this.injector.get(ComponentFactoryResolver);\r\n        this.cd = this.injector.get(ChangeDetectorRef);\r\n        this.el = this.injector.get(ElementRef);\r\n        this.dfrs = this.dg.clientFilterService;\r\n\r\n\r\n        this.dgs.scorll$.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).subscribe((d: any) => {\r\n\r\n            if (d.type === SCROLL_X_ACTION || d.type === SCROLL_X_REACH_END_ACTION || d.type === SCROLL_X_REACH_START_ACTION) {\r\n                this.scrollX = d.x;\r\n                this.render2.setStyle(this.headerColumnsTable.nativeElement, 'transform', `translate3d(-${d.x}px, 0px, 0px)`);\r\n                if (!this.dg.groupRows) {\r\n                    if (this.fixedLeft) {\r\n                        if (d.x) {\r\n                            this.render2.addClass(this.fixedLeft.nativeElement, FIXED_LEFT_SHADOW_CLS);\r\n                        } else {\r\n                            this.render2.removeClass(this.fixedLeft.nativeElement, FIXED_LEFT_SHADOW_CLS);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (d.type === SCROLL_X_REACH_START_ACTION) {\r\n                if (this.fixedLeft) {\r\n                    this.render2.removeClass(this.fixedLeft.nativeElement, FIXED_LEFT_SHADOW_CLS);\r\n                }\r\n            }\r\n        });\r\n\r\n        this.dgs.showFixedShadow.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).subscribe((e: any) => {\r\n            if (this.fixedRight) {\r\n                this.setFixedColumnPosition(e.showRightShadow, e.x);\r\n            }\r\n        });\r\n\r\n        this.dgs.disableHeader.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).subscribe((flag: any) => {\r\n            this.showOverlay = flag;\r\n            this.disableSort = flag;\r\n            this.cd.detectChanges();\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.dgs.checkedRowsTotalChanged$.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).subscribe(() => {\r\n            if (this._chkall) {\r\n                const checkedsCount = this.dfs.getCurrentPageCheckeds().length;\r\n                const isCheckAll = this.dfs.isCheckAll();\r\n                const isIndeterminate = isCheckAll || !checkedsCount;\r\n                this._chkall.chk.nativeElement.indeterminate = !isIndeterminate;\r\n                const _checked = isCheckAll && checkedsCount > 0;\r\n                this._chkall.updateStatus(_checked);\r\n            }\r\n        });\r\n\r\n        this.dgs.uncheckAll.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).subscribe(() => {\r\n            if (this.dg.showAllCheckbox && this._chkall) {\r\n                this._chkall.chk.nativeElement.indeterminate = false;\r\n                this._chkall.chk.nativeElement.checked = false;\r\n            }\r\n        });\r\n\r\n        this.dgs.checkAll.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).subscribe(() => {\r\n            if (this._chkall) {\r\n                this._chkall.chk.nativeElement.checked = true;\r\n            }\r\n        });\r\n\r\n        this.dgs.scrollbarUpdate.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).subscribe((ps: any) => {\r\n            this.ps = ps.scrollbarRef;\r\n            const rw = ps.rightWidth || 0;\r\n            if (!rw) {\r\n                this.rightFixedColumnWidth = this.getRightFixedColWidth(this.ps);\r\n            } else {\r\n                this.rightFixedColumnWidth = rw;\r\n            }\r\n            if (this.fixedRight) {\r\n                this.setFixedColumnPosition(this.showShadowCls, 0);\r\n            }\r\n            this.cd.detectChanges();\r\n        });\r\n\r\n\r\n        this.dgs.showGridHeader.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).subscribe(() => {\r\n            this.setHeaderPosition();\r\n        });\r\n\r\n        this.dgs.smartFilterBarExpand.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).subscribe(() => {\r\n            this.setHeaderPosition();\r\n        });\r\n\r\n        this.rightFixedColumnWidth = this.getRightFixedColWidth(this.ps);\r\n        this.hasFixedLeftColumns = this.columnsGroup && this.columnsGroup.leftFixed && !!this.columnsGroup.leftFixed.length;\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        setTimeout(() => {\r\n            this.setHeaderPosition();\r\n        });\r\n\r\n        this.lineNumberTitle = this.getLineNumberTitle();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        // if (changes.scrollbarMode && !changes.scrollbarMode.isFirstChange()) {\r\n        //     this.rightFixedColumnWidth = this.getRightFixedColWidth(this.ps);\r\n        //     this.cd.detectChanges();\r\n        // }\r\n\r\n        if (changes.columnsGroup && !changes.columnsGroup.isFirstChange()) {\r\n            this.rightFixedColumnWidth = this.getRightFixedColWidth(this.ps);\r\n            this.hasFixedLeftColumns = this.columnsGroup && this.columnsGroup.leftFixed && !!this.columnsGroup.leftFixed.length;\r\n            // if (!this.dg.useControlPanel) {\r\n            //     this.fixedRight = null;\r\n            // }\r\n            this.cd.detectChanges();\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n\r\n        this.fixedRight = null;\r\n    }\r\n\r\n    private getLineNumberTitle() {\r\n        if (this.dg.lineNumberTitle) {\r\n            return this.dg.lineNumberTitle;\r\n        } else {\r\n            return this.dg.localeService.getValue('datagrid.lineNumberTitle');\r\n        }\r\n    }\r\n\r\n    private getRightFixedColWidth(ps = null) {\r\n        if (!this.columnsGroup) {\r\n            return 0;\r\n        }\r\n\r\n\r\n        let w = this.columnsGroup.rightFixedWidth;\r\n\r\n        if (!ps) {\r\n            ps = this.dg.scrollInstance.instance;\r\n        }\r\n\r\n        if (ps && ps.scrollbarYActive && this.scrollbarMode === 'allways') {\r\n            return w += this.showShadowCls ? 18 : 0;\r\n        }\r\n        return w;\r\n    }\r\n\r\n    private setHeaderPosition() {\r\n        let top = 0;\r\n        if ((this.dg.enableFilterRow || this.dg.enableSmartFilter) && this.dg.showFilterBar) {\r\n            top += this.dg.filterBarHeight;\r\n        }\r\n\r\n        if (this.dg.showRowGroupPanel) {\r\n            top += this.dg.rowGroupPanelHeight;\r\n        }\r\n\r\n        this.top = top;\r\n        this.render2.setStyle(this.el.nativeElement, 'top', `${top}px`);\r\n    }\r\n\r\n    isShowShadow(fixedLeftWidth) {\r\n        const dgContainerWidth = this.dg.dgContainer.nativeElement.offsetWidth;\r\n        return dgContainerWidth < this.dg.colGroup.totalWidth;\r\n\r\n    }\r\n\r\n    isColspan(left, right, col, isdatafield = false) {\r\n        // if (this.fast) {\r\n        //     if (isdatafield) {\r\n        //         return !col.colspan;\r\n        //     } else {\r\n        //         return col.colspan;\r\n        //     }\r\n        // }\r\n        if (!left && !right) {\r\n            if (isdatafield) {\r\n                return !col.colspan && (!col.fixed || col.fixed === 'none');\r\n            } else {\r\n                return col.colspan && (!col.fixed || col.fixed === 'none');\r\n            }\r\n        } else if (left) {\r\n            if (isdatafield) {\r\n                return !col.colspan && col.fixed && col.fixed === 'left';\r\n            } else {\r\n                return col.colspan && col.fixed && col.fixed === 'left';\r\n            }\r\n        } else if (right) {\r\n            if (isdatafield) {\r\n                return !col.colspan && col.fixed && col.fixed === 'right';\r\n            } else {\r\n                return col.colspan && col.fixed && col.fixed === 'right';\r\n            }\r\n        }\r\n    }\r\n\r\n    setFixedColumnPosition(isShow, scrollLeft) {\r\n        this.showShadowCls = isShow;\r\n        const method = isShow ? 'addClass' : 'removeClass';\r\n        this.render2[method](this.fixedRight.nativeElement, FIXED_RIGHT_SHADOW_CLS);\r\n\r\n        const realWidth = this.columnsGroup.leftFixedWidth + this.columnsGroup.normalWidth + this.rightFixedColumnWidth;\r\n        const gridWidth = this.dg.width;\r\n        let l = this.dg.width - (this.dg.showBorder ? 2 : 0) - this.rightFixedColumnWidth;\r\n        if (gridWidth > realWidth) {\r\n            l = this.columnsGroup.leftFixedWidth + this.columnsGroup.normalWidth;\r\n        }\r\n\r\n        this.render2.setStyle(this.fixedRight.nativeElement, 'left', l + 'px');\r\n    }\r\n\r\n    onRowNumerColumnDblClick(e: MouseEvent, rntd: any) {\r\n        let maxRowNumber = this.dg.getRows().length;\r\n        if (this.dg.pagination) {\r\n            const pageSize = this.dg.pageSize;\r\n            const pageIndex = this.dg.pageIndex;\r\n            maxRowNumber = pageSize * pageIndex + pageSize;\r\n        }\r\n\r\n        this.dg.longTextArea.nativeElement.innerHTML = maxRowNumber;\r\n        const w1 = this.dg.longTextArea.nativeElement.offsetWidth;\r\n\r\n        const currentWidth = rntd.offsetWidth;\r\n\r\n        if (w1 > currentWidth) {\r\n            this.dg.lineNumberWidth = w1 + 10;\r\n            this.dfs.updateProperty('lineNumberWidth', this.dg.lineNumberWidth);\r\n            this.dfs.resizeColumns();\r\n        }\r\n    }\r\n\r\n    onSortColumnClick(e: MouseEvent, col: DataColumn) {\r\n        if (this.disableSort) {\r\n            return;\r\n        }\r\n\r\n        if (!col.sortable) {\r\n            return;\r\n        }\r\n        // ç»æç¼è¾\r\n        this.dg.cancelEdit(null);\r\n        const sortName = this.dg.sortName;\r\n        const sortOrder = this.dg.sortOrder;\r\n        let sortFields = [];\r\n        let sortOrders = [];\r\n        if (sortName) {\r\n            sortFields = sortName.split(',');\r\n            sortOrders = sortOrder.split(',');\r\n        }\r\n\r\n        const colOrder = col.order || 'asc';\r\n        let newOrder = colOrder;\r\n        const i = sortFields.findIndex(n => n === col.field);\r\n        if (i >= 0) {\r\n            const _order = sortOrders[i] === 'asc' ? 'desc' : 'asc';\r\n            newOrder = _order;\r\n            // if (this.dg.multiSort && newOrder === 'asc') {\r\n            if (newOrder === 'asc') {\r\n                newOrder = undefined;\r\n                sortFields.splice(i, 1);\r\n                sortOrders.splice(i, 1);\r\n            } else {\r\n                sortOrders[i] = _order;\r\n            }\r\n        } else {\r\n            if (this.dg.multiSort) {\r\n                sortFields.push(col.field);\r\n                sortOrders.push(colOrder);\r\n            } else {\r\n                sortFields = [col.field];\r\n                sortOrders = [colOrder];\r\n            }\r\n        }\r\n\r\n        col.order = newOrder;\r\n\r\n        this.dg.sortName = sortFields.join(',');\r\n        this.dg.sortOrder = sortOrders.join(',');\r\n        this.dfs.setSortInfo(this.dg.sortName, this.dg.sortOrder);\r\n\r\n        this.dg.beforeSortColumn(this.dg.sortName, this.dg.sortOrder, this.dg).subscribe(() => {\r\n            this.dg.onColumnSorted();\r\n        });\r\n    }\r\n}\r\n\r\n@Directive({\r\n    selector: '[filter-row-creator]'\r\n})\r\nexport class FilterRowCreateDirective implements OnInit, OnChanges, OnDestroy {\r\n    @Input() left: boolean;\r\n    @Input() right: boolean;\r\n\r\n    private dgs: DatagridService;\r\n    private dfs: DatagridFacadeService;\r\n    private cfr: ComponentFactoryResolver;\r\n    private dfrs: DatagridFilterService;\r\n    private filterRowType: any;\r\n    private filterRowRef: ComponentRef<any>;\r\n    private cd: ChangeDetectorRef;\r\n    constructor(private vc: ViewContainerRef, private injector: Injector,\r\n        public dg: DatagridComponent, private ngZone: NgZone) {\r\n\r\n        this.dfs = this.injector.get(DatagridFacadeService);\r\n        this.dgs = this.injector.get(DatagridService);\r\n        this.cfr = this.injector.get(ComponentFactoryResolver);\r\n        this.cd = this.injector.get(ChangeDetectorRef);\r\n        this.dfrs = this.dg.clientFilterService;\r\n\r\n        this.filterRowType = this.injector.get(GRID_FILTER_ROW, null);\r\n\r\n        this.dgs.clearFilter.subscribe(() => {\r\n            if (this.filterRowRef) {\r\n                this.filterRowRef.instance.clearFilterValue(false);\r\n            }\r\n        });\r\n        this.dgs.columnsChanged.subscribe(() => {\r\n            this.createFilterRow(true);\r\n        });\r\n\r\n\r\n        if (this.dfrs) {\r\n            this.dfrs.removeField.subscribe((f) => {\r\n                if (this.filterRowRef && f) {\r\n                    let flag = false;\r\n                    let _cols = [];\r\n                    if (this.left) {\r\n                        _cols = this.dg.colGroup.leftFixed || [];\r\n                    } else if (this.right) {\r\n                        _cols = this.dg.colGroup.rightFixed || [];\r\n                    } else {\r\n                        _cols = this.dg.colGroup.normalColumns || [];\r\n                    }\r\n\r\n                    flag = !!_cols.find(n => n.field === f);\r\n                    if (flag) {\r\n                        this.filterRowRef.instance.removeField(f);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.createFilterRow(true);\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n\r\n    }\r\n\r\n    ngOnDestroy() {\r\n    }\r\n\r\n    /** è¿æ»¤è¡ */\r\n    createFilterRow(rebuild = false) {\r\n        if (rebuild && this.filterRowRef) {\r\n            this.filterRowRef.destroy();\r\n            this.filterRowRef = null;\r\n        }\r\n\r\n        setTimeout(() => {\r\n            this._createFilterRow();\r\n            if (rebuild) {\r\n                this.cd.detectChanges();\r\n            }\r\n        });\r\n    }\r\n\r\n    private _createFilterRow() {\r\n        if (this.dg.enableFilterRow) {\r\n            if (!this.filterRowType) {\r\n                return;\r\n            }\r\n\r\n            let columnsData = this.dg.colGroup.normalColumns;\r\n            if (this.left) {\r\n                columnsData = this.dg.colGroup.leftFixed;\r\n            } else if (this.right) {\r\n                columnsData = this.dg.colGroup.rightFixed;\r\n            }\r\n\r\n            if (!this.filterRowRef && this.vc) {\r\n                const cf = this.cfr.resolveComponentFactory(this.filterRowType);\r\n                this.filterRowRef = this.vc.createComponent(cf);\r\n                this.filterRowRef.instance.fixedLeft = this.left;\r\n                this.filterRowRef.instance.columns = columnsData;\r\n                this.filterRowRef.instance.gridInstance = this.dg;\r\n                this.filterRowRef.instance.conditionChange.subscribe(n => {\r\n                    const conditions = n || {};\r\n                    this.dgs.onFilterChanged.emit(conditions);\r\n                });\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n","import { Directive, Input, NgZone, ElementRef, Renderer2, AfterViewInit, OnDestroy, Optional, HostListener } from '@angular/core';\r\nimport { DataColumn } from '../../types/data-column';\r\nimport { DatagridComponent } from './../../datagrid.component';\r\nimport { DatagridHeaderComponent } from './datagrid-header.component';\r\nimport { fromEvent } from 'rxjs';\r\nimport { buffer, debounceTime, map, filter, takeUntil } from 'rxjs/operators';\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-10 09:04:53\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-11-20 17:09:09\r\n * @QQ: 1055818239\r\n * @Version: v0.0.12\r\n */\r\n@Directive({\r\n    selector: '[resize-column]',\r\n})\r\nexport class DatagridResizeColumnDirective implements AfterViewInit, OnDestroy {\r\n    @Input('resize-column') col: DataColumn;\r\n    resizer: HTMLSpanElement;\r\n    resizerMouseDownListener: any;\r\n    documentMouseMoveListener: any;\r\n    documentMouseUpListener: any;\r\n    dblclickListener: any;\r\n    private dg: DatagridComponent;\r\n    constructor(\r\n        @Optional() public dh: DatagridHeaderComponent,\r\n        public ngzone: NgZone, public el: ElementRef, public render: Renderer2\r\n    ) {\r\n        this.dg = this.dh.dg;\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        if (this.isEnable()) {\r\n            this.render.addClass(this.el.nativeElement, 'f-datagrid-header-cell-resize');\r\n\r\n            this.resizer = document.createElement('span');\r\n            this.resizer.className = 'column-resize-bar';\r\n            this.el.nativeElement.appendChild(this.resizer);\r\n\r\n            this.ngzone.runOutsideAngular(() => {\r\n                // this.resizerMouseDownListener = this.onMouseDown.bind(this);\r\n                // this.resizer.addEventListener('mousedown', this.resizerMouseDownListener);\r\n                const mouseUp$ = fromEvent(this.resizer, 'mouseup');\r\n                this.resizerMouseDownListener = fromEvent(this.resizer, 'mousedown').pipe(\r\n                    // debounceTime(260),\r\n                    takeUntil(mouseUp$)\r\n                ).subscribe((e: any) =>\r\n                    this.onMouseDown(e)\r\n                );\r\n            });\r\n\r\n            // const mouse$ = fromEvent(this.resizer, 'click');\r\n            // const buff$ = mouse$.pipe(\r\n            //     debounceTime(250)\r\n            // );\r\n\r\n            // const click$ = mouse$.pipe(\r\n            //     buffer(buff$),\r\n            //     map(list => {\r\n            //         return {event: list[0], count: list.length};\r\n            //     }),\r\n            //     filter(x => x.count === 2),\r\n            //     map(x => x.event),\r\n            //     takeUntil(mouseUp$)\r\n            // );\r\n\r\n            // click$.subscribe((e) => {\r\n            //     this.onDblClickHandler(e);\r\n            //     // this.onMouseUp(e);\r\n            // });\r\n        }\r\n    }\r\n\r\n    @HostListener('dblclick')\r\n    onDblClickHandler() {\r\n        if (this.col.field && this.col.field !== this.dg.ControlPanelFeild) {\r\n            const thRef = this.el;\r\n            this.dg.sizeToContent(this.col, thRef);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private isEnable() {\r\n        if (this.dg.resizeColumn) {\r\n\r\n            if ( this.col.field === this.dg.ControlPanelFeild) {\r\n                this.col.resizable = false;\r\n            }\r\n\r\n            if (this.col.resizable === undefined) {\r\n                this.col.resizable = true;\r\n            }\r\n\r\n            return this.col.resizable;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    bindDocumentEvents() {\r\n        this.ngzone.runOutsideAngular(() => {\r\n            this.documentMouseMoveListener = this.onMouseMove.bind(this);\r\n            document.addEventListener('mousemove', this.documentMouseMoveListener);\r\n\r\n            this.documentMouseUpListener = this.onMouseUp.bind(this);\r\n            document.addEventListener('mouseup', this.documentMouseUpListener);\r\n        });\r\n    }\r\n\r\n    unbindDocumentEvents() {\r\n        if (this.documentMouseMoveListener) {\r\n            document.removeEventListener('mousemove', this.documentMouseMoveListener);\r\n            this.documentMouseMoveListener = null;\r\n        }\r\n\r\n        if (this.documentMouseUpListener) {\r\n            document.removeEventListener('mouseup', this.documentMouseUpListener);\r\n            this.documentMouseUpListener = null;\r\n        }\r\n    }\r\n\r\n    onMouseDown(event: MouseEvent) {\r\n        event.stopPropagation();\r\n        this.dg.onColumnResizeBegin(event);\r\n        this.render.addClass(this.el.nativeElement, 'column-resizeing');\r\n        this.bindDocumentEvents();\r\n    }\r\n\r\n    onMouseMove(event: MouseEvent) {\r\n        this.dg.onColumnResize(event);\r\n    }\r\n\r\n    onMouseUp(event: MouseEvent) {\r\n        this.dg.onColumnResizeEnd(event, this.col);\r\n        this.render.removeClass(this.el.nativeElement, 'column-resizeing');\r\n        this.unbindDocumentEvents();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.resizerMouseDownListener) {\r\n            // this.resizer.removeEventListener('mousedown', this.resizerMouseDownListener);\r\n            this.resizerMouseDownListener.unsubscribe();\r\n        }\r\n\r\n        this.unbindDocumentEvents();\r\n\r\n        if (this.dblclickListener) {\r\n            this.dblclickListener();\r\n        }\r\n\r\n        this.resizer = null;\r\n    }\r\n}\r\n","import { takeUntil } from 'rxjs/operators';\r\nimport { DatagridComponent } from './../../datagrid.component';\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-12 15:01:21\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-11-09 15:24:45\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { Component, OnInit, Input, ElementRef, Renderer2, ViewChild, OnDestroy, Injector, Inject, forwardRef, OnChanges, SimpleChanges, ChangeDetectorRef } from '@angular/core';\r\nimport { DatagridService } from '../../services/datagrid.service';\r\nimport { FIXED_LEFT_SHADOW_CLS, FIXED_RIGHT_SHADOW_CLS, SCROLL_X_ACTION, SCROLL_X_REACH_START_ACTION } from '../../types/constant';\r\nimport { Subscription, Subject } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'datagrid-footer',\r\n    templateUrl: './datagrid-footer.component.html'\r\n})\r\nexport class DatagridFooterComponent implements OnInit, OnChanges, OnDestroy {\r\n    private _footerData = [];\r\n    @Input() get data() {\r\n        return this._footerData;\r\n    }\r\n    set data(val: any[]) {\r\n        this._footerData = val;\r\n    }\r\n\r\n    @Input() height: number;\r\n    @Input() width: number;\r\n    @Input() columns: any[];\r\n    @Input() columnsGroup: any;\r\n\r\n    /** æ¾ç¤ºä½ç½®ï¼é»è®¤ä¸º åºé¨ */\r\n    @Input() position: 'top' | 'bottom' = 'bottom';\r\n    /** æ¯å¦æå·¦ä¾§åºå®å */\r\n    @Input() hasFixedColumns = false;\r\n    @Input() fast = false;\r\n\r\n    @ViewChild('footerContainer') footerContainer: ElementRef;\r\n    @ViewChild('footerBody') footerBody: ElementRef;\r\n    @ViewChild('footerBody2') footerBody2: ElementRef;\r\n    @ViewChild('fixedLeft') fixedLeft: ElementRef;\r\n    private fixedRight: ElementRef;\r\n    @ViewChild('fixedRight') set fr(val) {\r\n        if (val) {\r\n            this.fixedRight = val;\r\n        }\r\n    }\r\n    scrollXSubscription: Subscription;\r\n\r\n    private dgs: DatagridService;\r\n    private scrollX = 0;\r\n    private showShadowCls = false;\r\n    rightFixedColumnWidth = 0;\r\n    private cdRef: ChangeDetectorRef = null;\r\n    private destroy$ = new Subject();\r\n    constructor(\r\n        private render: Renderer2, private injector: Injector,\r\n        @Inject(forwardRef(() => DatagridComponent)) public dg: DatagridComponent\r\n    ) {\r\n        this.dg = this.injector.get(DatagridComponent);\r\n        this.dgs = this.injector.get(DatagridService);\r\n        this.cdRef = this.injector.get(ChangeDetectorRef);\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.scrollEvents();\r\n        this.renderFooterStyle();\r\n        this.setFooterPosition(false);\r\n\r\n        this.rightFixedColumnWidth = this.getRightFixedColWidth();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.position) {\r\n            this.setFooterPosition(true);\r\n        }\r\n\r\n        if (changes.columnsGroup && !changes.columnsGroup.isFirstChange()) {\r\n            this.rightFixedColumnWidth = this.getRightFixedColWidth();\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n\r\n        if (this.scrollXSubscription) {\r\n            this.scrollXSubscription.unsubscribe();\r\n            this.scrollXSubscription = null;\r\n        }\r\n    }\r\n\r\n    private scrollEvents() {\r\n        this.dgs.showGridHeader.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).subscribe(hh => {\r\n            this.setFooterPosition(false);\r\n        });\r\n\r\n        this.scrollXSubscription = this.dgs.scorll$.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).subscribe((d: any) => {\r\n            this.scrollX = d.x;\r\n\r\n            if (this.fast) {\r\n                if (d.type === SCROLL_X_ACTION && this.footerBody2) {\r\n                    this.footerBody2.nativeElement.scrollLeft = d.x;\r\n                }\r\n            } else  {\r\n                if (d.type === SCROLL_X_ACTION) {\r\n                    if (!this.dg.footerTemplate) {\r\n                        this.render.setStyle(this.footerBody.nativeElement,  'transform', `translate3d(-${d.x}px, 0px, 0px)` );\r\n\r\n                        if (this.fixedLeft) {\r\n                            if (d.x) {\r\n                                this.render.addClass(this.fixedLeft.nativeElement, FIXED_LEFT_SHADOW_CLS);\r\n                            } else {\r\n                                this.render.removeClass(this.fixedLeft.nativeElement, FIXED_LEFT_SHADOW_CLS);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (d.type === SCROLL_X_REACH_START_ACTION) {\r\n                    if (this.fixedLeft) {\r\n                        this.render.removeClass(this.fixedLeft.nativeElement, FIXED_LEFT_SHADOW_CLS);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        if (!this.fast) {\r\n\r\n            this.dgs.showFixedShadow.pipe(\r\n                takeUntil(this.destroy$)\r\n            ).subscribe((e: any) => {\r\n                if (this.fixedRight) {\r\n                    this.setFixedColumnPosition(e.showRightShadow, e.x);\r\n                }\r\n            });\r\n\r\n\r\n            this.dgs.scrollbarUpdate.pipe(\r\n                takeUntil(this.destroy$)\r\n            ).subscribe((ps: any) => {\r\n                this.rightFixedColumnWidth = this.getRightFixedColWidth(ps.scrollbarRef);\r\n                if (this.fixedRight) {\r\n                    this.setFixedColumnPosition(this.showShadowCls, 0);\r\n                }\r\n                if (this.cdRef) {\r\n                    this.cdRef.detectChanges();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private getRightFixedColWidth(ps = null) {\r\n        if (!this.columnsGroup) {\r\n            return 0;\r\n        }\r\n\r\n        let w = this.columnsGroup.rightFixedWidth;\r\n\r\n        if (!ps) {\r\n            ps = this.dg.scrollInstance.instance;\r\n        }\r\n\r\n        if (ps && ps.scrollbarYActive && this.dg.scrollBarShowMode === 'allways') {\r\n            // return w += 18;\r\n            return w += this.showShadowCls ? 18 : 0;\r\n        }\r\n        return w;\r\n    }\r\n\r\n    private setFooterPosition(emit = true) {\r\n        if (this.position === 'bottom') {\r\n            let positionBottom = 0;\r\n            if (this.dg.pagination) {\r\n                positionBottom = this.dg.pagerHeight || 40;\r\n            }\r\n            this.render.removeStyle(this.footerContainer.nativeElement, 'top');\r\n            this.render.setStyle(this.footerContainer.nativeElement, 'bottom', `${positionBottom}px`);\r\n        }\r\n        if (this.position === 'top') {\r\n            let positionTop = 0;\r\n            if (this.dg.showHeader) {\r\n                positionTop = this.dg.realHeaderHeight || 35;\r\n            }\r\n\r\n            if (this.dg.showRowGroupPanel) {\r\n                positionTop += this.dg.rowGroupPanelHeight;\r\n            }\r\n\r\n            if (this.dg.showFilterBar) {\r\n                positionTop += this.dg.filterBarHeight;\r\n            }\r\n\r\n            this.render.removeStyle(this.footerContainer.nativeElement, 'bottom');\r\n            this.render.setStyle(this.footerContainer.nativeElement, 'top', `${positionTop}px`);\r\n        }\r\n        if (emit) {\r\n            this.dgs.footerPositionChanged.emit();\r\n        }\r\n    }\r\n\r\n    private renderFooterStyle() {\r\n        if (this.dg.footerStyler) {\r\n\r\n            const trStyleAndCls = this.dgs.getCustomStyle(this.dg.footerStyler, null);\r\n\r\n            const cssRuleID = `${this.dg.customStyleKey()} .f-datagrid-footer`;\r\n            const cssRuleId2 = `${this.dg.customStyleKey()} .f-datagrid-footer .f-datagrid-body-fixed-left,${this.dg.customStyleKey()} .f-datagrid-footer .f-datagrid-body-fixed-right`;\r\n            const cssRuleId3 = `${this.dg.customStyleKey()}.f-datagrid-fast .f-datagrid-cell.f-datagrid-fast__fixed-left,${this.dg.customStyleKey()}.f-datagrid-fast .f-datagrid-cell.f-datagrid-fast__fixed-right`;\r\n\r\n            if (trStyleAndCls && Object.keys(trStyleAndCls).length) {\r\n                const cssRule = [];\r\n                if (trStyleAndCls.style) {\r\n                    cssRule.push(`${cssRuleID} ${JSON.stringify(trStyleAndCls.style)}`);\r\n                    cssRule.push(`${cssRuleId2} ${JSON.stringify(trStyleAndCls.style)}`);\r\n\r\n                    if (this.fast) {\r\n                        cssRule.push(`${cssRuleId3} ${JSON.stringify(trStyleAndCls.style)}`);\r\n                    }\r\n                }\r\n\r\n                this.dgs.appendCssRules(cssRule);\r\n\r\n                // this.dg.renderCustomStyle(trStyleAndCls, this.footerContainer.nativeElement, cssRule);\r\n            } else {\r\n                this.dgs.removeCssRule([cssRuleID, cssRuleId2]);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    setFixedColumnPosition(isShow, scrollLeft) {\r\n        this.showShadowCls = isShow;\r\n        const method = isShow ? 'addClass' : 'removeClass';\r\n        this.render[method](this.fixedRight.nativeElement, FIXED_RIGHT_SHADOW_CLS);\r\n\r\n        const realWidth = this.columnsGroup.leftFixedWidth + this.columnsGroup.normalWidth + this.rightFixedColumnWidth;\r\n        const gridWidth = this.dg.width;\r\n        let l = this.dg.width - (this.dg.showBorder ? 2 : 0) - this.rightFixedColumnWidth;\r\n        if (gridWidth > realWidth) {\r\n            l = this.columnsGroup.leftFixedWidth + this.columnsGroup.normalWidth;\r\n        }\r\n        this.render.setStyle(this.fixedRight.nativeElement, 'left', l + 'px');\r\n    }\r\n}\r\n","import { Subscription } from 'rxjs';\r\nimport { DatagridComponent } from './../../datagrid.component';\r\nimport { NotifyService } from '@farris/ui-notify';\r\nimport { ChangeDetectorRef, Injector, Optional, OnChanges, SimpleChanges, TemplateRef } from '@angular/core';\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-06 07:43:07\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-10-17 20:20:21\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { Component, OnInit, Input, Output, EventEmitter, ElementRef, AfterViewInit, ViewChild, HostBinding } from '@angular/core';\r\nimport { PaginationControlsComponent, PaginationControlsDirective } from '@farris/ui-pagination';\r\n\r\n@Component({\r\n    selector: 'datagrid-pager',\r\n    templateUrl: './page.component.html'\r\n})\r\nexport class DatagridPagerComponent implements OnInit, AfterViewInit, OnChanges {\r\n    @Input() pagerPos = 'right';\r\n    @Input() id = 'farris-datagrid-pager';\r\n    /** æ¾ç¤ºé¡µç çæ°é */\r\n    @Input() maxSize = 7;\r\n    /** æ¯å¦æ¾ç¤ºé¡µç  */\r\n    @Input() directionLinks = true;\r\n\r\n    @Input() autoHide = false;\r\n\r\n    @Input() responsive = false;\r\n    /** ä¸é¡µæ ç­¾ */\r\n    @Input() previousLabel = 'ä¸é¡µ';\r\n    /** ä¸é¡µæ ç­¾ */\r\n    @Input() nextLabel = 'ä¸é¡µ';\r\n    @Input() showPageList = false;\r\n    @Input() showPageInfo = true;\r\n    @Input() showPageNumber = true;\r\n    @Input() locked = false;\r\n\r\n    @Input() selectedData = [];\r\n    @Input() viewMode: 'default' | 'simple' = 'default';\r\n    @Input() listItemFormatter: (data) => string;\r\n\r\n    @Input() showSelectedList = false;\r\n\r\n    @Input() showGotoInput = false;\r\n\r\n    /** åé¡µæ¡èªå®ä¹åå®¹åºæ¨¡æ¿ */\r\n    @Input() contentTemplate: TemplateRef<any> = null;\r\n    @Input() data = null;\r\n\r\n    @Output() pageChange = new EventEmitter();\r\n    @Output() pageSizeChange = new EventEmitter();\r\n\r\n    @Output() removeSelectedItem = new EventEmitter();\r\n    @Output() clearSelectedItem = new EventEmitter();\r\n\r\n    @ViewChild('pagerContainer') pc: ElementRef;\r\n    @ViewChild('pager') pager: PaginationControlsComponent;\r\n\r\n    get pagination(): PaginationControlsDirective {\r\n        return this.pager.paginationDirective;\r\n    }\r\n\r\n\r\n    get pageSize() {\r\n        return this.pagination.getPageSize();\r\n    }\r\n\r\n    get total() {\r\n        return this.pagination.getTotalItems();\r\n    }\r\n\r\n    get outerHeight() {\r\n        if (this.pc) {\r\n            return this.pc.nativeElement.offsetHeight;\r\n        }\r\n        return 40;\r\n    }\r\n    styles = { opacity: 1 };\r\n\r\n    mouseInSelectedList = false;\r\n    openSelectedList = false;\r\n\r\n    private selectionDataChange$: Subscription = null;\r\n\r\n    private notifySer: NotifyService;\r\n\r\n    constructor(public el: ElementRef, private cd: ChangeDetectorRef, @Optional() private inject: Injector) {\r\n        if (this.inject) {\r\n            this.notifySer = this.inject.get<NotifyService>(NotifyService, null);\r\n        }\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.listenCheckDataChanged();\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.lockedStyles();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.selectedData && !changes.selectedData.isFirstChange()) {\r\n            if (!this.selectedData || !this.selectedData.length) {\r\n                this.closeSelectedList();\r\n            }\r\n        }\r\n\r\n        if (changes.showSelectedList && !changes.showSelectedList.isFirstChange()) {\r\n            this.listenCheckDataChanged();\r\n        }\r\n\r\n        if (changes.locked && !changes.locked.isFirstChange()) {\r\n            this.lockedStyles();\r\n        }\r\n    }\r\n\r\n    private listenCheckDataChanged() {\r\n        if (this.showSelectedList) {\r\n            const dg = this.inject.get(DatagridComponent, null);\r\n            if (dg) {\r\n                this.selectionDataChange$ = dg.checkedChange.subscribe((data: any) => {\r\n                    this.selectedData = data;\r\n                    if (!this.cd['destroyed']) {\r\n                        this.cd.detectChanges();\r\n                    }\r\n                });\r\n            }\r\n        } else {\r\n            if (this.selectionDataChange$) {\r\n                this.selectionDataChange$.unsubscribe();\r\n                this.selectionDataChange$ = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    onPageChange(pageIndex: any) {\r\n        if (typeof pageIndex === 'object') {\r\n            pageIndex = pageIndex.pageIndex || 1;\r\n        }\r\n        this.pageChange.emit(Number.parseInt(pageIndex, 10));\r\n    }\r\n\r\n    onPageSizeChange(pageSize: any) {\r\n        this.pageSizeChange.emit(Number.parseInt(pageSize, 10));\r\n    }\r\n\r\n    lock() {\r\n        this.locked = true;\r\n        this.lockedStyles();\r\n    }\r\n    unlock() {\r\n        this.locked = false;\r\n        this.lockedStyles();\r\n    }\r\n\r\n    private lockedStyles() {\r\n        this.styles = { opacity: this.locked? 0.5 : 1 };\r\n        this.cd.detectChanges();\r\n    }\r\n\r\n    onMouseEnter($event) {\r\n        $event.stopPropagation();\r\n\r\n        if (this.locked) {\r\n            return;\r\n        }\r\n\r\n        this.mouseInSelectedList = true;\r\n        if (this.selectedData && this.selectedData.length) {\r\n            this.openSelectedList = !this.openSelectedList;\r\n        } else {\r\n            this.openSelectedList = false;\r\n        }\r\n    }\r\n\r\n\r\n    closeSelectedList() {\r\n        this.openSelectedList = false;\r\n        this.mouseInSelectedList = false;\r\n        if (!this.cd['destroyed']) {\r\n            this.cd.detectChanges();\r\n        }\r\n    }\r\n\r\n    onDelSelectedItem(id: any) {\r\n        this.removeSelectedItem.emit(id);\r\n    }\r\n\r\n    onClearSelected($event) {\r\n        this.clearSelectedItem.emit();\r\n        this.closeSelectedList();\r\n    }\r\n\r\n    onSelectListPanelClose($event) {\r\n        this.closeSelectedList();\r\n    }\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\r\n\r\nconst loading_style_ring =\r\n`<svg width=\"100%\" height=\"100%\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n  <circle cx=\"50\" cy=\"50\" fill=\"none\" r=\"30\" stroke=\"#2c7dff\" stroke-width=\"10\"></circle>\r\n  <circle cx=\"50\" cy=\"50\" fill=\"none\" r=\"30\" stroke=\"#d0eaff\" stroke-width=\"10\" stroke-linecap=\"square\" transform=\"rotate(178.821 50 50)\">\r\n      <animateTransform attributeName=\"transform\" type=\"rotate\"\r\n          calcMode=\"linear\" values=\"0 50 50;180 50 50;720 50 50\" keyTimes=\"0;0.5;1\" dur=\"1.6s\" begin=\"0s\"\r\n          repeatCount=\"indefinite\"></animateTransform>\r\n      <animate attributeName=\"stroke-dasharray\" calcMode=\"linear\"\r\n          values=\"9.42477796076938 179.0707812546182;150.79644737231007 37.6991118430775;9.42477796076938 179.0707812546182\"\r\n          keyTimes=\"0;0.5;1\" dur=\"1.6\" begin=\"0s\" repeatCount=\"indefinite\"></animate>\r\n  </circle>\r\n</svg>`;\r\n\r\n@Component({\r\n    selector: 'datagrid-loading',\r\n    template: `\r\n    <div style=\"width:100%;height:100%;position:absolute;top:0;left: 0;background:rgba(255,255,255,0);z-index: 90000000;pointer-events: unset;\">\r\n        <div style=\"width: 50px;height: 50px;position: relative;top: 50%;margin-top: -25px;left: 50%;margin-left: -25px;\"\r\n        [innerHTML]=\"loading\" >\r\n        </div>\r\n    </div>\r\n    `\r\n})\r\nexport class DataGridLoadingComponent implements OnInit {\r\n\r\n    @Input() loading: any;\r\n\r\n    constructor(private domSanitizer: DomSanitizer) { }\r\n\r\n    ngOnInit(): void {\r\n        if (this.loading) {\r\n            this.loading = this.domSanitizer.bypassSecurityTrustHtml(this.loading);\r\n        } else {\r\n            this.loading = this.domSanitizer.bypassSecurityTrustHtml(loading_style_ring);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { debounce } from 'rxjs/operators';\r\nimport { Component, OnInit, EventEmitter, Output, Input, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { interval } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'pager-selected-list',\r\n    templateUrl: './selected-list.component.html',\r\n})\r\nexport class PagerSelectedListComponent implements OnInit, OnChanges {\r\n\r\n    @Input() data = [];\r\n\r\n    @Output() close = new EventEmitter();\r\n    @Output() remove = new EventEmitter();\r\n    @Output() clear = new EventEmitter();\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit(): void { }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n    }\r\n\r\n    onClose($event: MouseEvent) {\r\n        $event.stopPropagation();\r\n        this.close.emit();\r\n    }\r\n\r\n    onRemoveClick($event: MouseEvent, id: any) {\r\n        $event.stopPropagation();\r\n        this.remove.emit(id);\r\n    }\r\n\r\n    onClearClick($event: MouseEvent) {\r\n        $event.stopPropagation();\r\n        this.clear.emit();\r\n    }\r\n\r\n    onClick($event: MouseEvent) {\r\n        $event.stopPropagation();\r\n        return false;\r\n    }\r\n\r\n    trackByFn = (index, item) => {\r\n        return item.id;\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({name: 'selectedItem'})\r\nexport class SelectedItemPipe implements PipeTransform {\r\n    transform(data: any, formatter: any): any {\r\n        if (data) {\r\n            if (formatter) {\r\n                data = data.map( d => {\r\n                    return {id: d.id, text:  formatter(d.data) };\r\n                });\r\n            } else  {\r\n                data = data.map(d => {\r\n                    const txt = [];\r\n                    const keys = Object.keys(d.data);\r\n                    keys.forEach(k => {\r\n                        txt.push(d.data[k]);\r\n                    });\r\n                    return {id: d.id, text: txt.join(', ') };\r\n                });\r\n            }\r\n\r\n            return data;\r\n        }\r\n    }\r\n}\r\n","import { ErrorHandler, Injector } from '@angular/core';\r\n\r\nexport class DatagridErrorHandler implements ErrorHandler {\r\n    handleError(error: any): void {\r\n        console.error(error);\r\n    }\r\n}\r\n\r\nexport class Éµs implements ErrorHandler {\r\n    handleError(error: any): void {\r\n        console.error(error);\r\n    }\r\n}\r\n","import { Subject, Subscription } from 'rxjs';\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-06 07:43:07\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-10-30 16:08:56\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { DatagridComponent } from './../../datagrid.component';\r\nimport { Component, OnInit, Input, ViewChild, ElementRef, Injector, Inject, forwardRef, ChangeDetectorRef, OnDestroy, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { DatagridFacadeService } from './../../services/datagrid-facade.service';\r\nimport { filter, map, takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'datagrid-checkbox',\r\n    template: ` <div class=\"custom-control custom-checkbox f-checkradio-single\">\r\n        <input type=\"checkbox\" #chk class=\"custom-control-input\" [disabled]=\"disabled\" [checked]=\"checked\">\r\n        <label class=\"custom-control-label\" (click)=\"handleClick($event)\"></label>\r\n    </div>`,\r\n    styles: [\r\n        `\r\n        :host {\r\n            vertical-align: middle;\r\n        }\r\n        :host .custom-checkbox {\r\n            opacity: 1;\r\n            float: none;\r\n            top: 2px;\r\n        }\r\n        `\r\n    ]\r\n})\r\nexport class DatagridCheckboxComponent implements OnInit, OnDestroy, OnChanges {\r\n    @Input() rowData: any;\r\n    @Input() rowIndex: any;\r\n    @Input() checked: boolean;\r\n    @Input() disabled: boolean;\r\n\r\n    @Input() indeterminate = false;\r\n    @ViewChild('chk') chk: ElementRef;\r\n\r\n    private dfs: DatagridFacadeService;\r\n    private cd: ChangeDetectorRef;\r\n\r\n    checked$ = null;\r\n    private destroy$ = new Subject();\r\n    subscriptions: Subscription[] = [];\r\n    constructor(private injector: Injector, @Inject(forwardRef(() => DatagridComponent)) public dg: DatagridComponent) {\r\n        this.dfs = this.injector.get(DatagridFacadeService);\r\n        this.cd = this.injector.get(ChangeDetectorRef);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        if (this.indeterminate) {\r\n            this.chk.nativeElement.indeterminate = true;\r\n        }\r\n        this.listenSubjects();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.checked && !changes.checked.isFirstChange()) {\r\n            this.changeCheckedStatus(changes.checked.currentValue);\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n\r\n        if (this.subscriptions && this.subscriptions.length) {\r\n            this.subscriptions.forEach(n => n.unsubscribe());\r\n            this.subscriptions = [];\r\n        }\r\n    }\r\n\r\n    private listenSubjects() {\r\n        const rid = this.dfs.primaryId(this.rowData);\r\n        this.subscriptions.push(\r\n            this.dg.checkAll.pipe(\r\n                takeUntil(this.destroy$)\r\n            ).subscribe(() => {\r\n                let flag = true;\r\n                if (this.dg.disableRow) {\r\n                    flag = !this.dg.disableRow(this.rowData, this.rowIndex);\r\n                    if (!flag) {\r\n                        flag = this.dg.dfs.isRowChecked(rid);\r\n                    }\r\n                }\r\n                this.changeCheckedStatus(flag);\r\n            })\r\n        );\r\n\r\n        this.subscriptions.push(\r\n            this.dg.unCheckAll.pipe(\r\n                takeUntil(this.destroy$)\r\n            ).subscribe((e: any) => {\r\n                if (e && e.length) {\r\n                    if (e.find(n => n[this.dg.idField] === this.rowData[this.dg.idField])) {\r\n                        this.changeCheckedStatus(false);\r\n                    }\r\n                } else {\r\n                    this.changeCheckedStatus(false);\r\n                }\r\n            })\r\n        );\r\n\r\n        const _setcheckrows = this.dg.dgs.setCheckedRows.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).pipe(\r\n            filter((r: any) => {\r\n                return r.ids.includes(rid) || r.ids.includes('' + rid);\r\n            }),\r\n            map((r: any) => {\r\n                const flag = r.ids.includes(rid) || r.ids.includes('' + rid);\r\n                if (flag) {\r\n                    return flag && r.checked;\r\n                }\r\n                return false;\r\n            }),\r\n        ).subscribe(r => {\r\n            this.checked = r;\r\n            this.changeCheckedStatus(r);\r\n        });\r\n        this.subscriptions.push(_setcheckrows);\r\n\r\n        this.dfs.updateCheckboxState$.pipe(\r\n            takeUntil(this.destroy$),\r\n        ).pipe(\r\n            filter((r: any) => {\r\n                return r.id === rid;\r\n            }),\r\n            map((r: any) => {\r\n                return !!r.checked;\r\n            })\r\n        ).subscribe((r: any) => {\r\n            this.checked = r;\r\n            this.changeCheckedStatus(r);\r\n        });\r\n    }\r\n\r\n    handleClick(event: MouseEvent) {\r\n        if (!this.disabled) {\r\n            const beforEventParam = {\r\n                rowIndex: this.rowIndex,\r\n                rowData: this.rowData,\r\n                gridInstance: this.dg\r\n            };\r\n            this.dg.endCellEdit();\r\n            const _checked = this.chk.nativeElement.checked;\r\n            if (!_checked) {\r\n                this.dg.beforeCheck(beforEventParam).subscribe((canCheck: boolean) => {\r\n                    if (canCheck) {\r\n                        this.dfs.checkRow(this.rowIndex, this.rowData, { instance: this.dg});\r\n                        this.checked = true;\r\n                        this.changeCheckedStatus(true);\r\n                    }\r\n                });\r\n            } else {\r\n                this.dg.beforeUncheck(beforEventParam).subscribe((canUncheck: boolean) => {\r\n                    if (canUncheck) {\r\n                        this.dfs.unCheckRow(this.rowIndex, this.rowData, { instance: this.dg});\r\n                        this.checked = false;\r\n                        this.changeCheckedStatus(false);\r\n                        if (this.dg.showSelectedList) {\r\n                            this.dg.cd.detectChanges();\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            // this.checked = !this.checked;\r\n            // this.cd.detectChanges();\r\n        }\r\n        event.stopPropagation();\r\n    }\r\n\r\n    private changeCheckedStatus(status: boolean) {\r\n        this.chk.nativeElement.checked = status;\r\n    }\r\n\r\n}\r\n","import { takeUntil } from 'rxjs/operators';\r\nimport { DatagridComponent } from './../../datagrid.component';\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-06 07:43:07\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-09-18 10:30:21\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { Component, OnInit, Input, ViewChild, ElementRef, Injector, OnDestroy } from '@angular/core';\r\nimport { DatagridFacadeService } from './../../services/datagrid-facade.service';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'datagrid-header-checkbox',\r\n    template: ` <div class=\"custom-control custom-checkbox f-checkradio-single\">\r\n        <input type=\"checkbox\" #chk class=\"custom-control-input\" [disabled]=\"disabled\" [checked]=\"checked\">\r\n        <label class=\"custom-control-label\" (click)=\"handleClick($event)\"></label>\r\n    </div>`,\r\n    styles: [\r\n        `\r\n        :host {\r\n            vertical-align: middle;\r\n        }\r\n        :host .custom-checkbox {\r\n            opacity: 1;\r\n            float: none;\r\n            top: 2px;\r\n        }\r\n        `\r\n    ]\r\n})\r\nexport class DatagridHeaderCheckboxComponent implements OnInit, OnDestroy {\r\n    @Input() checked: boolean;\r\n    @Input() disabled: boolean;\r\n\r\n    @Input() indeterminate = false;\r\n\r\n    @ViewChild('chk') chk: ElementRef;\r\n    private dfs: DatagridFacadeService;\r\n    private dg: DatagridComponent;\r\n    private destroy$ = new Subject();\r\n    constructor(private injector: Injector) {\r\n        this.dfs = this.injector.get(DatagridFacadeService);\r\n        this.dg = this.injector.get(DatagridComponent);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        if (this.indeterminate) {\r\n            this.chk.nativeElement.indeterminate = true;\r\n        }\r\n\r\n        this.dg.dgs.changeCheckAllStatus.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).subscribe((status: number) => {\r\n            if (status === 2) {\r\n                this.chk.nativeElement.indeterminate = true;\r\n            } else {\r\n                this.chk.nativeElement.indeterminate = false;\r\n                this.updateStatus(!!status);\r\n            }\r\n        });\r\n    }\r\n    ngOnDestroy() {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n    }\r\n\r\n    updateStatus(checked: boolean) {\r\n        this.checked = checked;\r\n        this.chk.nativeElement.checked = checked;\r\n    }\r\n\r\n\r\n    handleClick(event: MouseEvent) {\r\n        if (!this.dg.data || !this.dg.data.length) {\r\n            return;\r\n        }\r\n\r\n        if (!this.disabled) {\r\n            this.checked = !this.checked;\r\n\r\n            this.indeterminate = false;\r\n            this.chk.nativeElement.indeterminate = false;\r\n            if (this.checked) {\r\n                this.dfs.checkAll();\r\n                this.chk.nativeElement.checked = true;\r\n                // this.dg.checkAll.emit();\r\n            } else {\r\n                this.dfs.clearCheckeds(!this.dg.enableMorePageSelect);\r\n\r\n                if (this.dg.selectedRow && this.dg.checkOnSelect && this.dg.selectOnCheck) {\r\n                    this.dg.unSelectRow(this.dg.selectedRow.id);\r\n                }\r\n                this.chk.nativeElement.checked = false;\r\n                // this.dg.unCheckAll.emit();\r\n            }\r\n        }\r\n        event.stopPropagation();\r\n    }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { TR_PREFIX } from './../types/constant';\r\nimport { DatagridFacadeService } from '../services/datagrid-facade.service';\r\n\r\n@Pipe({name: 'rowDataId'})\r\nexport class RowDataIdPipe implements PipeTransform {\r\n\r\n    constructor(private dfs: DatagridFacadeService) {}\r\n\r\n    transform(rowData: any, fixedRight = false, fixedLeft = false): any {\r\n        if (rowData) {\r\n            let rowID = TR_PREFIX + this.dfs.primaryId(rowData);\r\n            if (fixedRight) {\r\n                rowID += '_fixedright';\r\n            } else if (fixedLeft) {\r\n                rowID += '_fixedleft';\r\n            }\r\n            return rowID;\r\n        }\r\n        return null;\r\n    }\r\n}\r\n","import { Optional, Pipe, PipeTransform } from '@angular/core';\r\nimport { DatagridFacadeService } from './../services/datagrid-facade.service';\r\n\r\n@Pipe({name: 'formatGroupRow'})\r\nexport class FormatGroupRowPipe implements PipeTransform {\r\n\r\n    constructor(@Optional() private dfs: DatagridFacadeService) {}\r\n\r\n\r\n    transform(row: any, col: any, fn?: any): any {\r\n        if (row) {\r\n            let val = row['value'];\r\n            if (!col && this.dfs) {\r\n                col = this.dfs.getColumn(row.field);\r\n            }\r\n\r\n            if (col && col.formatter) {\r\n                if (col.formatter.type === 'enum') {\r\n                    const enumOpts: {valueField: string, textField: string, data: any} = col.formatter.options;\r\n                    const { valueField, textField, data } = {...enumOpts};\r\n                    const enumItem = data.find(item => item[valueField] === row['value']);\r\n                    val = enumItem ? enumItem[textField] : '';\r\n                }\r\n            }\r\n\r\n            return fn ? fn(row) : val;\r\n        }\r\n\r\n        return '';\r\n    }\r\n}\r\n","import { takeUntil } from 'rxjs/operators';\r\nimport { Component, OnInit, ChangeDetectorRef, ElementRef, Injector, NgZone, Input, Output, EventEmitter, OnDestroy, OnChanges, SimpleChanges, Renderer2 } from '@angular/core';\r\nimport { Subscription, Subject } from 'rxjs';\r\nimport { DatagridService } from './../../services/datagrid.service';\r\nimport { DatagridComponent } from '../../datagrid.component';\r\nimport { DatagridBodyComponent } from './datagrid-body.component';\r\nimport { ROW_INDEX_FIELD, IS_GROUP_ROW_FIELD, GROUP_ROW_FIELD, IS_GROUP_FOOTER_ROW_FIELD, GROUP_VISIBLE_FIELD } from '../../services/state';\r\nimport { DatagridFacadeService } from '../../services/datagrid-facade.service';\r\n\r\n\r\n@Component({\r\n    selector: 'fixed-left-rows',\r\n    templateUrl: 'fixed-left-rows.component.html'\r\n})\r\n\r\nexport class FixedLeftRowsComponent implements OnInit, OnDestroy {\r\n\r\n    @Input() columns = [];\r\n    @Output() toggle = new EventEmitter();\r\n    @Input() checkedRows = [];\r\n    @Input() selectedRows = [];\r\n    @Input() data = [];\r\n\r\n    /** å¯ç¨åç»æ¶ï¼æ°æ®æºä¸­èªå¨è®¾ç½®è¡ç´¢å¼å­æ®µ */\r\n    groupRowIndex = ROW_INDEX_FIELD;\r\n    isGroupRow = IS_GROUP_ROW_FIELD;\r\n    groupRow = GROUP_ROW_FIELD;\r\n    isGroupFooter = IS_GROUP_FOOTER_ROW_FIELD;\r\n    visible = GROUP_VISIBLE_FIELD;\r\n\r\n    filterConditions = '';\r\n\r\n    subscriptions: Subscription[] = [];\r\n\r\n    dgs: DatagridService = null;\r\n    render2: Renderer2;\r\n    private destroy$ = new Subject();\r\n    constructor(\r\n        private cd: ChangeDetectorRef,\r\n        public dg: DatagridComponent,\r\n        public dgb: DatagridBodyComponent,\r\n        public dfs: DatagridFacadeService,\r\n        public el: ElementRef, private injector: Injector, private ngZone: NgZone) {\r\n            this.dgs = this.injector.get(DatagridService);\r\n            this.render2 = this.injector.get(Renderer2);\r\n        }\r\n\r\n    private listenSubject() {\r\n        // const _selectrow = this.dfs.selectRow$.subscribe(() => {\r\n        //     this.detectChanges();\r\n        // });\r\n        // this.subscriptions.push(_selectrow);\r\n\r\n        // const _unselectrow = this.dfs.unSelectRow$.subscribe(() => {\r\n        //     this.detectChanges();\r\n        // });\r\n        // this.subscriptions.push(_unselectrow);\r\n\r\n        const _setselectrow = this.dgs.setSelecedRow.pipe(\r\n            takeUntil(this.destroy$)\r\n        )\r\n        .subscribe((r: any) => {\r\n            this.detectChanges();\r\n        });\r\n        this.subscriptions.push(_setselectrow);\r\n\r\n        this.dfs.checkRow$.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).subscribe( () => {\r\n            this.checkedRows = this.dfs.getCheckeds();\r\n            this.detectChanges();\r\n        });\r\n\r\n        this.dfs.clearCheckeds$.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).subscribe( () => {\r\n            this.checkedRows = this.dfs.getCheckeds();\r\n            this.detectChanges();\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.listenSubject();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n        if (this.subscriptions && this.subscriptions.length) {\r\n            this.subscriptions.forEach(n => n.unsubscribe());\r\n            this.subscriptions = [];\r\n        }\r\n    }\r\n\r\n\r\n    private detectChanges() {\r\n        if (!this.cd['destroyed']) {\r\n            // this.cd.markForCheck();\r\n            this.cd.detectChanges();\r\n        }\r\n\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n/**\r\n * ä½¿ç¨è¯´æ\r\n * let message = \"ä»å¤©å¤©æ° {0}ï¼å¤å¤å¥½ {1}ã\"\r\n * template:\r\n * <h1>{{ message| replaceX: 'æ´æ', 'é£å' }}</h1>\r\n * resule:\r\n * <h1>ä»å¤©å¤©æ° æ´æï¼å¤å¤å¥½ é£åã</h1>\r\n */\r\n@Pipe({name: 'replaceX'})\r\nexport class ReplaceXPipe implements PipeTransform {\r\n    transform(value: any, ...args: any[]) {\r\n        args.forEach((v, i) => {\r\n            value = value.replace(`{${i}}`, v);\r\n        });\r\n\r\n        return value;\r\n    }\r\n}\r\n","import { Directive, Input, Injector, Renderer2, ElementRef, OnInit } from '@angular/core';\r\nimport { DatagridComponent } from './../../datagrid.component';\r\n\r\n@Directive({\r\n    selector: '[group-row]',\r\n})\r\nexport class DatagridGroupRowDirective implements OnInit {\r\n    @Input('group-row') groupRow;\r\n\r\n    constructor(private injector: Injector, private render: Renderer2, private el: ElementRef, private dg: DatagridComponent) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (this.dg.groupStyler) {\r\n            const styler = this.dg.groupStyler(this.groupRow);\r\n            const tr = this.el.nativeElement;\r\n            if (!tr.id) {\r\n                tr.id = 'group-tr_' + this.groupRow.id;\r\n            }\r\n            this.dg.renderCustomStyle(styler, tr);\r\n        }\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({name: 'showStar'})\r\nexport class ShowRequiredStarPipe implements PipeTransform {\r\n    transform(validators: any): any {\r\n        if (validators && validators.length) {\r\n            const isRequired = validators.find(v => v.type === 'required');\r\n            return isRequired;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({name: 'disableRow'})\r\nexport class DisableRowPipe implements PipeTransform {\r\n    transform(rowData: any, rowIndex: number, disableRowFn: (row, index) => {}): any {\r\n        if (disableRowFn) {\r\n            return disableRowFn(rowData, rowIndex);\r\n        }\r\n\r\n        return false;\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DatagridFacadeService } from './../services/datagrid-facade.service';\r\n\r\n@Pipe({name: 'selectedRow'})\r\nexport class SelectedRowPipe implements PipeTransform {\r\n    constructor(private dfs: DatagridFacadeService) {}\r\n    transform(rowId: any): any {\r\n        return this.dfs.isRowSelected(rowId);\r\n    }\r\n}\r\n","import { Utils } from './utils';\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({name: 'fieldvalue'})\r\nexport class FieldValuePipe implements PipeTransform {\r\n    transform(field: any, rowdata: any, safe = false): any {\r\n        return Utils.getValue(field, rowdata, safe);\r\n    }\r\n}\r\n","import { DatagridComponent } from './../../datagrid.component';\r\nimport { Utils } from './../../utils/utils';\r\nimport { OnDestroy, Input, HostListener, ElementRef, Directive, Injector, OnInit, NgZone, Renderer2 } from '@angular/core';\r\nimport { CommonUtils } from '@farris/ui-common';\r\nimport { DomHandler } from '../../services/domhandler';\r\n\r\n@Directive({\r\n    selector: '[cell-tooltip]',\r\n    exportAs: 'cellTooltip'\r\n})\r\nexport class DatagridCellTooltipDirective implements OnInit, OnDestroy {\r\n    @Input('cell-tooltip') enable: boolean;\r\n    @Input() position: 'top' | 'bottom' | 'left' | 'right' | 'top-left' | 'top-center' | 'top-right' = 'top-left';\r\n    @Input() positionStyle: string;\r\n    @Input() tooltipStyleClass: string;\r\n    @Input() message: string;\r\n    @Input() delay = 1000;\r\n\r\n    @Input() cls = '';\r\n    @Input() type: 'danger' | 'success' | 'info' | 'warning' = 'info';\r\n    @Input() tipMode: 'allways' | 'auto' = 'auto';\r\n\r\n    // @HostBinding('style.width') cmpWidth = '100%';\r\n\r\n    container: any;\r\n    private commonUtils: CommonUtils;\r\n    private showTipTimer = null;\r\n\r\n\r\n    private _mouseenter = null;\r\n    private _mouseleave = null;\r\n    private _mouseclick = null;\r\n    private ngZone: NgZone = null;\r\n    private render: Renderer2 = null;\r\n    private dg: DatagridComponent;\r\n    constructor(private el: ElementRef, private injector: Injector) {\r\n        if (this.injector) {\r\n            this.commonUtils = this.injector.get(CommonUtils, new CommonUtils());\r\n            this.ngZone = this.injector.get(NgZone);\r\n            this.render = this.injector.get(Renderer2);\r\n\r\n            this.dg = this.injector.get(DatagridComponent);\r\n        } else {\r\n            this.commonUtils = new CommonUtils();\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (this.ngZone) {\r\n            this.ngZone.runOutsideAngular(() => {\r\n                this._mouseenter = Utils.on(this.el.nativeElement, 'mouseenter', this.onMouseEnter.bind(this), { target: '.f-datagrid-cell-content', options: { capture: true }});\r\n                this._mouseleave = Utils.on(this.el.nativeElement, 'mouseleave', this.onMouseLeave.bind(this), { target: '.f-datagrid-cell-content', options: { capture: true }});\r\n                this._mouseclick = Utils.on(this.el.nativeElement, 'mousedown', this.onClick.bind(this));\r\n            });\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.hide();\r\n        if (this._mouseenter) {\r\n            this._mouseenter();\r\n        }\r\n\r\n        if (this._mouseleave) {\r\n            this._mouseleave();\r\n        }\r\n\r\n        if (this._mouseclick) {\r\n            this._mouseclick();\r\n        }\r\n\r\n        // this.dg = null;\r\n    }\r\n\r\n    onMouseEnter($event) {\r\n\r\n        const cellTiptimer = this.dg ? this.dg.cellTipTimer : 1000;\r\n\r\n        if (this.showTipTimer) {\r\n            clearTimeout(this.showTipTimer);\r\n            this.showTipTimer = null;\r\n        }\r\n        this.showTipTimer = setTimeout(() => {\r\n            this.show($event);\r\n        }, cellTiptimer);\r\n    }\r\n\r\n    onMouseLeave() {\r\n        this.hide();\r\n    }\r\n\r\n    onClick(e: MouseEvent) {\r\n        // e.stopPropagation();\r\n        this.hide();\r\n    }\r\n\r\n    private getTextContainer() {\r\n        return DomHandler.findSingle(this.container, '.f-tooltip-text');\r\n    }\r\n\r\n    private donotShowTips(target: any) {\r\n        const tdWidth = target.offsetWidth;\r\n        const tagetSty =  window.getComputedStyle(target);\r\n        const txtWidth = this.commonUtils.getTextWidth(this.message, tagetSty.font);\r\n        const { paddingLeft, paddingRight } = tagetSty;\r\n        const _width = tdWidth - (Number(paddingLeft.replace('px', '')) || 0) - (Number(paddingRight.replace('px', '')) || 0);\r\n\r\n        let tr = target.closest('tr');\r\n        if (tr) {\r\n            const trId = tr.id;\r\n            tr = document.querySelector('#'+ trId);\r\n        }\r\n\r\n        if (this.tipMode === 'auto') {\r\n            if (tr) {\r\n                return _width && _width > txtWidth;\r\n            }\r\n            return true;\r\n        } else {\r\n            return tr ? false : true;\r\n        }\r\n    }\r\n\r\n    hide() {\r\n        if (this.showTipTimer) {\r\n            clearTimeout(this.showTipTimer);\r\n            this.showTipTimer = null;\r\n        }\r\n\r\n        if (this.container && this.container.parentElement) {\r\n            document.body.removeChild(this.container);\r\n        }\r\n        this.container = null;\r\n    }\r\n\r\n    show($event: MouseEvent) {\r\n        const cellEl = $event.target as any;\r\n        this.enable = cellEl.getAttribute('cell-tooltip') === 'true';\r\n        this.message = cellEl.getAttribute('message');\r\n        this.tipMode = cellEl.getAttribute('tipMode') || 'auto';\r\n\r\n        if (!this.enable || !this.message) {\r\n            return;\r\n        }\r\n\r\n        const tipWidth = cellEl.getAttribute('tipWidth');\r\n        const tipHeight = cellEl.getAttribute('tipHeight');\r\n        this.position = cellEl.getAttribute('position') || 'top-left';\r\n\r\n        // æ£æ¥ä¸åå®¹å®½åº¦æ¯å¦è¶åºåå®½\r\n        if (this.donotShowTips($event.target)) {\r\n            return;\r\n        }\r\n\r\n        // const boxEl = this.el.nativeElement;\r\n        const boxEl = $event.target;\r\n        const elSize = this.getBoxSizeObj(boxEl);\r\n\r\n\r\n        /** å¦æå­å¨åä¸æ°å»ºï¼åªéè¦ä¿®æ¹éé¢çåå®¹ */\r\n        if (!this.container) {\r\n            this.create(elSize);\r\n        } else {\r\n            DomHandler.findSingle(this.container, '.f-tooltip-text').innerHTML = this.message;\r\n        }\r\n\r\n        this.container.style.maxWidth = `${window.innerWidth - 30}px`;\r\n        this.container.style.minWidth = '35px';\r\n\r\n        if (tipWidth) {\r\n            this.container.style.width = tipWidth;\r\n        }\r\n\r\n        if (tipHeight) {\r\n            this.container.style.height = tipHeight;\r\n        }\r\n\r\n\r\n        const offset = DomHandler.getOffset(boxEl);\r\n        const targetTop = offset.top;\r\n        const targetLeft = offset.left;\r\n        let left: number;\r\n        let top: number;\r\n        this.container.style.display = 'block';\r\n\r\n        this.changeTooltipPosition(boxEl);\r\n        const arrow = DomHandler.findSingle(this.container, '.f-tooltip-arrow');\r\n        const tooltipSize = this.getTooltipSize();\r\n\r\n        // æ£æ¥åå®¹é«åº¦\r\n        if (window.innerHeight - 10 < tooltipSize.height) {\r\n            this.container.style.height = `${window.innerHeight - 20}px`;\r\n\r\n            tooltipSize.height = window.innerHeight - 25;\r\n            const textContainer = this.getTextContainer();\r\n            textContainer.style.height = `${tooltipSize.height}px`;\r\n            textContainer.style.overflow = 'hidden';\r\n        }\r\n\r\n\r\n        const n = this.updateArrowPosition(arrow, offset, $event);\r\n        switch (this.position) {\r\n            case 'right':\r\n                left = targetLeft + elSize.width;\r\n                top = n;\r\n                break;\r\n            case 'left':\r\n                left = targetLeft - tooltipSize.width;\r\n                top = n;\r\n                break;\r\n            case 'top-left':\r\n                top = targetTop - tooltipSize.height - 7;\r\n                left = n;\r\n                break;\r\n        }\r\n\r\n        if (left) {\r\n            this.container.style.left = left + 'px';\r\n        }\r\n\r\n        this.container.style.top = top + 'px';\r\n        this.container.style.zIndex = 999999;\r\n    }\r\n\r\n    private updateArrowPosition(arrow: any, elOffset: { top, left }, $event: any) {\r\n        const tooltipSize = this.getTooltipSize();\r\n        if (this.position === 'left' || this.position === 'right') {\r\n            const targetTop = elOffset.top;\r\n            const halfHeight = tooltipSize.height / 2;\r\n            let top = 10;\r\n            if (targetTop > halfHeight && window.innerHeight - targetTop > halfHeight) {\r\n                top = targetTop - tooltipSize.height / 2;\r\n            }\r\n\r\n            // è°æ´ç®­å¤´çä½ç½®\r\n            if (arrow) {\r\n                arrow.style.top = `${targetTop - top}px`;\r\n            }\r\n\r\n            return top;\r\n        } else if (this.position === 'top-left') {\r\n            let left = $event.pageX - tooltipSize.width / 2;\r\n\r\n            if (left < 10) {\r\n                left = elOffset.left;\r\n            }\r\n\r\n            if (left + tooltipSize.width > window.innerWidth) {\r\n                left = window.innerWidth - tooltipSize.width - 20;\r\n            }\r\n            // è°æ´ç®­å¤´çä½ç½®\r\n            if (arrow) {\r\n                if ($event.pageX - left > 28) {\r\n                    if ($event.pageX - left + 28 > tooltipSize.width) {\r\n                        arrow.style.left = `${tooltipSize.width - 28 }px`;\r\n                    } else {\r\n                        arrow.style.left = `${$event.pageX - left }px`;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return left;\r\n        }\r\n    }\r\n\r\n    create(elSize: any) {\r\n        let styleClass = this.tooltipCls();\r\n        this.container = document.createElement('div');\r\n        if (this.tooltipStyleClass) {\r\n            styleClass += ' ' + this.tooltipStyleClass;\r\n        }\r\n        this.container.className = styleClass;\r\n\r\n        const tooltipArrow = document.createElement('div');\r\n        tooltipArrow.className = 'f-tooltip-arrow ';\r\n        this.container.appendChild(tooltipArrow);\r\n\r\n        const tooltipText = document.createElement('div');\r\n        tooltipText.className = 'f-tooltip-text ';\r\n        tooltipText.innerHTML = this.message;\r\n\r\n        const maxWidth = window.innerWidth - 50;\r\n        tooltipText.style.maxWidth = `${maxWidth}px`;\r\n\r\n        tooltipText.style.wordBreak = 'break-all';\r\n        this.container.style.textAlign = 'center';\r\n\r\n        if (this.positionStyle) {\r\n            this.container.style.position = this.positionStyle;\r\n        }\r\n\r\n        this.container.appendChild(tooltipText);\r\n        document.body.appendChild(this.container);\r\n    }\r\n\r\n    private tooltipCls() {\r\n        return 'datagrid-cell-tooltip f-tooltip ' + this.getThemeCls() + ' f-tooltip-' + this.position + ' ' + this.cls;\r\n    }\r\n\r\n    private getThemeCls() {\r\n        if (this.type) {\r\n            return 'f-tooltip-' + this.type;\r\n        }\r\n        return '';\r\n    }\r\n\r\n    /** è·åå®¿ä¸»å°ºå¯¸ */\r\n    private getBoxSizeObj(boxEl) {\r\n        const p = boxEl.getBoundingClientRect();\r\n        return {\r\n            width: DomHandler.getOuterWidth(boxEl),\r\n            height: DomHandler.getOuterHeight(boxEl),\r\n            left: p.left,\r\n            right: p.right,\r\n            top: p.top,\r\n            bottom: p.bottom\r\n        };\r\n    }\r\n\r\n    /** è·åtooltip å®¹å¨å°ºå¯¸ */\r\n    private getTooltipSize() {\r\n        return {\r\n            width: DomHandler.getOuterWidth(this.container),\r\n            height: DomHandler.getOuterHeight(this.container)\r\n        };\r\n    }\r\n\r\n    /** è·åçªå£å°ºå¯¸ */\r\n    private getWindowSize() {\r\n        return {\r\n            width: window.innerWidth,\r\n            height: window.innerHeight\r\n        };\r\n    }\r\n\r\n    /** æ ¹æ®åå®¹çå¤å°ï¼èªå¨æ´æ¹tooltip çä½ç½® */\r\n    private changeTooltipPosition(boxEl: any) {\r\n        const boxSize = this.getBoxSizeObj(boxEl);\r\n        const tooltip = this.getTooltipSize();\r\n        const winSize = this.getWindowSize();\r\n\r\n        this.container.className = this.tooltipCls();\r\n\r\n        if (tooltip.width < winSize.width && tooltip.height < boxSize.top) {\r\n            // this.position = 'top-left';\r\n            return;\r\n        } else {\r\n            const elOffset = DomHandler.getOffset(boxEl);\r\n            const elLeft = elOffset.left;\r\n            const elRight = winSize.width - elLeft - boxSize.width;\r\n\r\n            if (elLeft > elRight) {\r\n                this.position = 'left';\r\n            } else {\r\n                this.position = 'right';\r\n            }\r\n\r\n            const toolTipTextWidth = elLeft > elRight ? elLeft : elRight;\r\n            const textEl = this.getTextContainer();\r\n            textEl.style.maxWidth = `${toolTipTextWidth - 30}px`;\r\n            this.container.style.maxWidth = `${toolTipTextWidth}px`;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { Pipe, PipeTransform, Injector } from '@angular/core';\r\nimport { ColumnFormatService } from '@farris/ui-common/column';\r\nimport { Utils } from './../../utils/utils';\r\nimport { DataColumn } from './../../types/data-column';\r\n\r\n@Pipe({ name: 'tipmsg' , pure: false})\r\nexport class CellTootipMessagePipe implements PipeTransform {\r\n\r\n    private colFormatSer: ColumnFormatService;\r\n    constructor( private injector: Injector) {\r\n    }\r\n\r\n    transform(col: any, ...args: any[]) {\r\n        if (col.showTips) {\r\n            this.colFormatSer = this.injector.get(ColumnFormatService);\r\n            const msg = this.getCellTooltipContent(col, args[0]);\r\n            return msg;\r\n        }\r\n        return '';\r\n    }\r\n\r\n    private getCellTooltipContent(col: DataColumn, rowData) {\r\n        let txt = Utils.getValue(col.field, rowData);\r\n        if (col.tipContent) {\r\n            if ( typeof col.tipContent === 'string') {\r\n                txt = col.tipContent;\r\n            } else {\r\n                if (typeof col.tipContent === 'function') {\r\n                    txt = col.tipContent(txt, rowData, col);\r\n                }\r\n            }\r\n        } else {\r\n            if (col.formatter && (typeof col.formatter === 'function' ||\r\n                (typeof col.formatter === 'object' && Object.keys(col.formatter).length))) {\r\n                txt = this.colFormatSer.format(txt, rowData, col.formatter);\r\n            } else {\r\n                txt = Utils.escapeValue(txt);\r\n            }\r\n        }\r\n        return txt;\r\n    }\r\n}\r\n","import { takeUntil } from 'rxjs/operators';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { Component, OnInit, ViewEncapsulation, Injector, ChangeDetectorRef, ElementRef, ViewChild, Renderer2, Input, NgZone, OnDestroy, Optional, Host } from '@angular/core';\r\nimport { DatagridService } from './../../services/datagrid.service';\r\nimport { DatagridFilterService } from './../../services/datagrid-filter.service';\r\nimport {  } from './../../services/datagrid-facade.service';\r\nimport ResizeObserver from 'resize-observer-polyfill';\r\nimport { DatagridComponent } from '../../datagrid.component';\r\n\r\n@Component({\r\n    selector: 'filter-toolbar',\r\n    template: `\r\n        <div class=\"f-datagrid-filter-toolbar-panel\" #filterPanel [class.show]=\"openFilterPanel\" style=\"width: auto\">\r\n            <span class=\"filter-text\" #filterPanelText [innerHTML]=\"filterText\"></span>\r\n        </div>\r\n        <div class=\"f-datagrid-filter-toolbar\" #filterToolbar>\r\n            <span class=\"title\">{{'datagrid.filter.title'| locale}}ï¼</span>\r\n            <span #filterbarTxt class=\"filter-text\" [innerHTML]=\"filterText\"> </span>\r\n            <span class=\"filter-action\" *ngIf=\"filterText !== empty \">\r\n                <span *ngIf=\"showExpand\" class=\"f-icon filter-action-item\"\r\n                    [class.f-icon-arrow-chevron-up]=\"openFilterPanel\"\r\n                    [class.f-icon-arrow-chevron-down]=\"!openFilterPanel\"\r\n                (click)=\"showFilterTextPanel()\" title=\"{{'datagrid.filter.more'|locale}}\"></span>\r\n                <span title=\"{{'datagrid.filter.clearAll'|locale}}\" class=\"f-icon f-icon-x filter-action-item filter-clear\" (click)=\"clearFilter($event)\"></span>\r\n                <span title=\"refresh\" class=\"f-icon f-icon-reload-sm filter-action-item filter-refresh\" style=\"color: #388fff\" (click)=\"refreshFilter($event)\"></span>\r\n                <span *ngIf=\"enableFilterSetting\" class=\"f-icon f-icon-cog filter-action-item\" title=\"{{'datagrid.filter.setting'|locale}}\"></span>\r\n            </span>\r\n        </div>\r\n    `,\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class DatagridFilterToolbarComponent implements OnInit, OnDestroy {\r\n    empty = '[ æ  ]';\r\n    filterText = this.empty;\r\n\r\n    openFilterPanel = false;\r\n    showExpand = false;\r\n\r\n    @Input() enableFilterSetting = false;\r\n\r\n    @ViewChild('filterPanel') filterPanelRef: ElementRef;\r\n    @ViewChild('filterPanelText') filterPanelTextRef: ElementRef;\r\n    @ViewChild('filterbarTxt') filterTextRef: ElementRef;\r\n    @ViewChild('filterToolbar') filterToolbarRef: ElementRef;\r\n\r\n    get toolbarWidth() {\r\n        return this.filterToolbarRef.nativeElement.offsetWidth;\r\n    }\r\n\r\n    get filterTextContainerWidth() {\r\n        let actionW = 52;\r\n        if (this.enableFilterSetting) {\r\n            actionW = 65;\r\n        }\r\n        return this.toolbarWidth - 85 - actionW;\r\n    }\r\n\r\n    get filterTextRealWidth() {\r\n        this.render.setStyle(this.filterPanelTextRef.nativeElement, 'white-space', 'nowrap');\r\n        const w = this.filterPanelTextRef.nativeElement.scrollWidth;\r\n        this.render.setStyle(this.filterPanelTextRef.nativeElement, 'white-space', 'normal');\r\n        return w;\r\n    }\r\n\r\n    filterChangeSubscription: Subscription;\r\n    windowResizeHandler = null;\r\n    ro: ResizeObserver = null;\r\n    private destory$ = new Subject();\r\n    private dfrs: DatagridFilterService;\r\n    private dg: DatagridComponent;\r\n    constructor(\r\n        private inject: Injector,\r\n        private el: ElementRef,\r\n        private cd: ChangeDetectorRef,\r\n        private dgs: DatagridService,\r\n        private render: Renderer2,\r\n        private ngZone: NgZone,\r\n        private localeSer: LocaleService,\r\n      ) {\r\n            this.empty = this.localeSer.getValue('datagrid.filter.nofilter');\r\n            this.filterText = this.empty;\r\n        }\r\n\r\n    ngOnInit(): void {\r\n        this.dg = this.inject.get<DatagridComponent>(DatagridComponent);\r\n        this.dfrs = this.dg.clientFilterService;\r\n\r\n        this.dgs.clearFilter.pipe(takeUntil(this.destory$)).subscribe(() => {\r\n            this.filterText = this.empty;\r\n            this.openFilterPanel = false;\r\n            this.dgs.onFilterTextChange(this.filterText);\r\n            this.cd.detectChanges();\r\n        });\r\n\r\n        this.filterChangeSubscription = this.dgs.onFilterChanged.pipe(takeUntil(this.destory$)).subscribe((n) => {\r\n            this.filterText = this.dfrs.convertFilterCondition2String(n);\r\n            if (!this.filterText) {\r\n                this.filterText = this.empty;\r\n            }\r\n\r\n            this.updateExpandState();\r\n            setTimeout(() => {\r\n                this.bindEvent();\r\n            }, 100);\r\n            if (!this.showExpand) {\r\n                this.openFilterPanel = false;\r\n            }\r\n            this.cd.detectChanges();\r\n            this.dgs.onFilterTextChange(this.filterText);\r\n        });\r\n\r\n        this.ngZone.runOutsideAngular(() => {\r\n\r\n            this.ro = new ResizeObserver(() => {\r\n                setTimeout(() => {\r\n                    this.updateExpandState();\r\n                    this.cd.detectChanges();\r\n                }, 100);\r\n            });\r\n\r\n            this.ro.observe(this.el.nativeElement.closest('div.f-datagrid'));\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destory$.next();\r\n        this.destory$.complete();\r\n        this.ro.disconnect();\r\n        if (this.filterChangeSubscription) {\r\n            this.filterChangeSubscription.unsubscribe();\r\n            this.filterChangeSubscription = null;\r\n        }\r\n        if (this.windowResizeHandler) {\r\n            this.windowResizeHandler();\r\n            this.windowResizeHandler = null;\r\n        }\r\n    }\r\n\r\n    private bindEvent() {\r\n        this.ngZone.runOutsideAngular(() => {\r\n            const filterFields = this.filterToolbarRef.nativeElement.querySelectorAll('.filter-field');\r\n            this.bindFilterFieldHandler(filterFields);\r\n\r\n            const dropdownFilterFields = this.filterPanelTextRef.nativeElement.querySelectorAll('.filter-field');\r\n            this.bindFilterFieldHandler(dropdownFilterFields, false);\r\n        });\r\n    }\r\n\r\n    private bindFilterFieldHandler(filterFields: any, hidePanel = true) {\r\n        if (filterFields && filterFields.length) {\r\n            filterFields.forEach(ff => {\r\n                this.render.listen(ff, 'click', () => {\r\n                    this.removeFilterField(ff, hidePanel);\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    private removeFilterField(ff: any, hidePanel = true) {\r\n        const field = ff.classList[1].replace('filter-column-', '');\r\n        delete this.dg.conditions[field];\r\n        this.dfrs.removeFilterField(field);\r\n        ff.remove();\r\n        if (hidePanel) {\r\n            this.openFilterPanel = false;\r\n            this.updateExpandState();\r\n        }\r\n    }\r\n\r\n    private updateExpandState() {\r\n        this.showExpand = this.isShowExpand();\r\n    }\r\n\r\n    isShowExpand() {\r\n\r\n        if (this.filterTextContainerWidth > this.filterTextRealWidth) {\r\n            return false;\r\n        } else if (this.filterTextRealWidth > this.filterTextContainerWidth) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    clearFilter($event) {\r\n        this.filterText = this.empty;\r\n        this.dgs.onClearFilter();\r\n        this.dgs.onFilterChanged.emit({});\r\n        return false;\r\n    }\r\n\r\n    refreshFilter($event) {\r\n        this.dg.filterData();\r\n        return false;\r\n    }\r\n\r\n    showFilterTextPanel() {\r\n        this.openFilterPanel = !this.openFilterPanel;\r\n        this.cd.detectChanges();\r\n    }\r\n}\r\n","import { Directive, ElementRef, Renderer2, Injector, Input, OnInit } from '@angular/core';\r\nimport { DataColumn, HeaderStyleFn } from './../../types/data-column';\r\n\r\n@Directive({\r\n    selector: '[header-style]',\r\n    exportAs: 'HeaderStyler'\r\n})\r\nexport class HeaderStyleDirective implements OnInit {\r\n    @Input('header-style') column: DataColumn;\r\n\r\n    constructor(private el: ElementRef, private render: Renderer2, private inject: Injector) {}\r\n\r\n    ngOnInit() {\r\n        this.renderCss2Element();\r\n    }\r\n\r\n    private renderCss2Element() {\r\n        if (this.column && this.column.headerStyler) {\r\n            const styler = this.column.headerStyler;\r\n            const dom = this.el.nativeElement;\r\n            const st = typeof this.column.headerStyler;\r\n\r\n            if (st === 'string') {\r\n                this.render.addClass(this.el.nativeElement, styler as string);\r\n            } else if (st === 'function') {\r\n                const r = (this.column.headerStyler as HeaderStyleFn)(this.column);\r\n                if (r.cls) {\r\n                    this.render.addClass(this.el.nativeElement, r.cls);\r\n                }\r\n                if (r.style) {\r\n                    this.renderStyle(dom, r.style);\r\n                }\r\n            } else if (st === 'object' && Object.keys(st).length) {\r\n                this.renderStyle(dom, styler);\r\n            }\r\n        }\r\n    }\r\n\r\n    private renderStyle(targetEl: any, styleObj: any) {\r\n        const cssKeys = Object.keys(styleObj);\r\n        cssKeys.forEach(k => {\r\n            this.render.setStyle(targetEl, k, styleObj[k]);\r\n        });\r\n    }\r\n\r\n}\r\n","import { DatagridComponent } from './../../datagrid.component';\r\nimport { Component, OnInit, Injector, Input } from '@angular/core';\r\n\r\n\r\n/**\r\n * èªå¨é«åº¦\r\n * ç¦ç¨åé¡µï¼ç¦ç¨åºå®è¡¨å¤´ï¼ç¦ç¨èæå è½½ï¼ç¦ç¨åºå®å\r\n * æ¯æååæ ¼ç¼è¾, æ¯ææåº, æ¯ææå¨åå®½\r\n */\r\n\r\n@Component({\r\n    selector: 'auto-height',\r\n    templateUrl: './auto-height.component.html'\r\n})\r\nexport class AutoHeightComponent implements OnInit {\r\n\r\n    @Input() columns: any[];\r\n    @Input() columnsGroup: any;\r\n    @Input() data: any;\r\n\r\n    constructor(public dg: DatagridComponent, private inject: Injector) { }\r\n\r\n    ngOnInit(): void { }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DatagridFacadeService } from '../services/datagrid-facade.service';\r\n\r\n@Pipe({name: 'rowIsSelected', pure: false})\r\nexport class RowIsSelectedPipe implements PipeTransform {\r\n    constructor(private dfs: DatagridFacadeService) {}\r\n    transform(rowData: any, selections?: any[]): any {\r\n        if (!rowData) {\r\n            return false;\r\n        }\r\n        const id = this.dfs.primaryId(rowData);\r\n\r\n        if (id) {\r\n            return this.dfs.isRowSelected(id, selections);\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DatagridFacadeService } from './../services/datagrid-facade.service';\r\n\r\n@Pipe({name: 'rowIsChecked', pure: false})\r\nexport class RowIsCheckedPipe implements PipeTransform {\r\n    constructor(private dfs: DatagridFacadeService) {}\r\n    transform(rowData: any, checkeds: any[]): any {\r\n        if (!rowData) {\r\n            return false;\r\n        }\r\n\r\n        const id = this.dfs.primaryId(rowData);\r\n        if (id) {\r\n            return this.dfs.isRowChecked(id, checkeds);\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n","import { DatagridComponent } from '../../datagrid.component';\r\nimport { Component, Directive, OnInit, Injector, Input, ElementRef, AfterViewInit, OnChanges, SimpleChanges, DoCheck } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[auto-height]',\r\n})\r\nexport class AutoHeightDirective implements OnInit, AfterViewInit, OnChanges, DoCheck {\r\n\r\n    @Input('auto-height') autoHeight = false;\r\n    /** æ°æ®åè¡¨æ»é«åº¦ */\r\n    @Input() wheelHeight: number;\r\n\r\n    private _timer = null;\r\n\r\n    constructor(public dg: DatagridComponent, private inject: Injector, private el: ElementRef) { }\r\n\r\n    ngOnInit(): void {\r\n        // this.updateDatagridHeight(this.wheelHeight);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.updateDatagridHeight(this.wheelHeight);\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.wheelHeight) {\r\n            this.updateDatagridHeight(this.wheelHeight);\r\n        }\r\n    }\r\n\r\n    ngDoCheck() {\r\n        // this.checkScrollbarPosition();\r\n    }\r\n\r\n    private updateDatagridHeight(wheelHeight) {\r\n        if (this.el && this.el.nativeElement && this.el.nativeElement.parentElement) {\r\n            if (this.autoHeight) {\r\n                if (!wheelHeight) {\r\n                    wheelHeight = 240;\r\n\r\n                    if (!this.dg.ds || !this.dg.ds.rows || !this.dg.ds.rows.length) {\r\n                        wheelHeight = (!this.dg.emptyDataHeight || this.dg.emptyDataHeight < 0 ) ? 240 : this.dg.emptyDataHeight;\r\n                    }\r\n                }\r\n                let h =  parseInt(wheelHeight, 10);\r\n\r\n                if (this.dg.showHeader) {\r\n\r\n                    if (!this.dg.realHeaderHeight) {\r\n                        h += this.dg.setHeaderHeight();\r\n                    } else {\r\n                        h += this.dg.realHeaderHeight;\r\n                    }\r\n                }\r\n\r\n                if (this.dg.showFooter) {\r\n                    h += this.dg.footerHeight;\r\n                }\r\n\r\n                if (this.dg.pagination) {\r\n                    const ph = this.dg.pagerHeight || 40;\r\n                    h += ph;\r\n                }\r\n\r\n                if (this.dg.showFilterBar) {\r\n                    h += this.dg.filterBarHeight;\r\n                }\r\n\r\n                const wh =  `${wheelHeight}px`;\r\n\r\n                this.el.nativeElement.parentElement.style.height = wh;\r\n                this.el.nativeElement.parentElement.parentElement.style.height = wh;\r\n\r\n\r\n                if (this.dg.dgContainer) {\r\n\r\n                    const dgHeight = `${h}px`;\r\n                    // æ´æ°grid æå¤å±çé«åº¦\r\n                    this.dg.dgContainer.nativeElement.style.height = dgHeight;\r\n                    // farris-datagrid å¢å é«åº¦\r\n                    this.dg.el.nativeElement.style.height = dgHeight;\r\n\r\n                    this.dg.height = h;\r\n                } else {\r\n                    this.dg.el.nativeElement.querySelector('.f-datagrid').style.height = `${h}px`;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n","import { Directive, ElementRef, Injector, OnInit, NgZone, Renderer2, OnDestroy, HostListener } from '@angular/core';\r\nimport { DatagridComponent } from '../../datagrid.component';\r\nimport { TR_PREFIX } from '../../types/constant';\r\nimport { Utils } from '../../utils/utils';\r\n\r\n@Directive({\r\n    selector: '[row-dblclick]',\r\n})\r\nexport class DatagridRowDblClickDirective implements OnInit, OnDestroy {\r\n\r\n\r\n    constructor(private el: ElementRef, private injector: Injector, private ngZone: NgZone, private render: Renderer2,\r\n                public dg: DatagridComponent) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n    }\r\n\r\n    ngOnDestroy() {\r\n\r\n    }\r\n\r\n\r\n    @HostListener('dblclick', ['$event'])\r\n    dblclickRowEvent(event: any) {\r\n\r\n        const tr = event.target.closest('tr');\r\n\r\n        const rowid = tr.id.replace(TR_PREFIX, '').replace('_fixedright', '').replace('_fixedleft', '');\r\n        const rowIndex = tr.getAttribute('index');\r\n        const rowData = this.dg.dfs.findRow(rowid);\r\n\r\n        if (this.dg.disableRow) {\r\n            if (this.dg.disableRow(rowData.data, rowData.index)) {\r\n                event.stopPropagation();\r\n                return false;\r\n            }\r\n        }\r\n\r\n        if (this.dg.editable) {\r\n            if (this.dg.editMode === 'row' && this.dg.clickToEdit) {\r\n                this.dg.editRow(rowid);\r\n            } else {\r\n                this.dg.isSingleClick = false;\r\n                this.dg.dblclickRow.emit({ rowData, id: rowid, index: rowIndex, grid: this.dg, dblclick: true });\r\n            }\r\n        } else {\r\n            this.dg.dblclickRow.emit({ rowData, id: rowid, index: rowIndex, grid: this.dg,  dblclick: true });\r\n        }\r\n\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n    }\r\n}\r\n","import { Directive, ElementRef, Renderer2, Injector, Input, OnInit, AfterViewInit } from '@angular/core';\r\nimport { DatagridComponent } from '../../datagrid.component';\r\n\r\n@Directive({\r\n    selector: '[footer-cell-styler]',\r\n})\r\nexport class FooterCellStylerDirective implements OnInit, AfterViewInit {\r\n    @Input() column: any;\r\n    @Input() rowData: any;\r\n    @Input() rowIndex: any;\r\n    @Input() isGroupFooter = false;\r\n\r\n    constructor(private el: ElementRef, private render: Renderer2, private inject: Injector, public dg: DatagridComponent) { }\r\n\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        if (this.isGroupFooter) {\r\n            this.setGroupFooterCellStyle(this.column);\r\n        } else {\r\n            this.buildCustomCellStyle(this.column, this.rowData);\r\n        }\r\n    }\r\n\r\n    private buildCustomCellStyle(column, rowData) {\r\n\r\n        const tr = this.el.nativeElement.parentNode;\r\n        if (!tr.id) {\r\n            tr.id = 'footer-row-' + this.dg.dfs.primaryId(rowData);\r\n        }\r\n\r\n        if (!this.el.nativeElement.id) {\r\n            this.el.nativeElement.id = 'footer-td_' + this.rowIndex + '_' + this.column.field;\r\n        }\r\n\r\n        if (column && column.footer && column.footer.styler) {\r\n            const _rd = rowData;\r\n            const styler = column.footer.styler;\r\n            const cs = styler(_rd[column.field], _rd);\r\n            if (cs && Object.keys(cs).length) {\r\n                this.dg.renderCustomStyle(cs, this.el.nativeElement);\r\n            } else {\r\n                this.dg.dgs.removeCssRule('#' + this.el.nativeElement.id);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private setGroupFooterCellStyle(col: any) {\r\n        // åç»åè®¡è¡èªå®ä¹æ ·å¼ 20210909\r\n        if (col.groupFooter && col.groupFooter.styler) {\r\n            const val = this.dg.commonUtils.getValue(col.field, this.rowData);\r\n            const _customStyles = this.dg.dgs.getCustomStyle(col.groupFooter.styler, [val, this.rowData]);\r\n            if (_customStyles) {\r\n                this.dg.renderCustomCls(_customStyles.cls, this.el.nativeElement);\r\n                if (_customStyles.style) {\r\n                    Object.keys(_customStyles.style).forEach(n => {\r\n                        this.el.nativeElement.style[n] = _customStyles.style[n];\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class DragDropColumnService {\r\n    private initColumns;\r\n    constructor() {}\r\n\r\n    /** åç´ ä½ç½®è°æ´\r\n     * arr: æ°ç»\r\n     * newIndex: æ°ä½ç½®ç´¢å¼\r\n     * removedIndex: èä½ç½®ç´¢å¼\r\n     */\r\n    moveItem(arr, newIndex, removedIndex) {\r\n        const removedItem = arr.splice(removedIndex, 1);\r\n        arr.splice(newIndex, 0, ...removedItem);\r\n        return arr;\r\n    }\r\n\r\n    backupColumns(columns) {\r\n        this.initColumns = columns.map( cols => {\r\n            return cols.map( n => {\r\n                return {\r\n                    id: n.id,\r\n                    field: n.field\r\n                };\r\n            });\r\n        });\r\n    }\r\n}\r\n","\r\nimport { Directive, NgZone, Injector, Renderer2, ElementRef, AfterViewInit, Input, OnChanges, SimpleChanges, OnDestroy } from '@angular/core';\r\nimport { dropHandlers, smoothDnD as SmoothDnDForHeader, DropResult, ContainerOptions, constants } from '@farris/smooth-dnd';\r\nimport { DatagridComponent } from '../../datagrid.component';\r\nimport { DatagridHeaderComponent } from './datagrid-header.component';\r\nimport { DragDropColumnService } from './drag-drop-column.service';\r\n\r\n\r\nconst { wrapperClass, animationClass } = constants;\r\nSmoothDnDForHeader.dropHandler = dropHandlers.reactDropHandler().handler;\r\nSmoothDnDForHeader.wrapChild = false;\r\n\r\nexport interface DragStartEndInfo {\r\n    isSource: boolean;\r\n    payload: any;\r\n    willAcceptDrop: boolean;\r\n}\r\n\r\n@Directive({\r\n    selector: '[drag-column]',\r\n    providers: [\r\n        DragDropColumnService\r\n    ]\r\n})\r\nexport class DragColumnDirective implements AfterViewInit, OnChanges, OnDestroy {\r\n    private container: any;\r\n    @Input('drag-column') enableDrag = true;\r\n    @Input() groupName = '';\r\n\r\n    @Input() options: ContainerOptions = {\r\n        groupName: this.groupName,\r\n        orientation: 'horizontal',\r\n        behaviour: 'move',\r\n        dragHandleSelector: '.drag-column-bar',\r\n        dragClass: 'drag-column-moving',\r\n        dropPlaceholder: {\r\n            className: 'drop-group-field',\r\n        },\r\n        getGhostParent: () => {\r\n            return document.body;\r\n        },\r\n        getChildPayload: this.getChildPayload.bind(this),\r\n        shouldAcceptDrop: (sourceContainerOptions, payload) => {\r\n            if (typeof payload === 'number') {\r\n                return false;\r\n            }\r\n\r\n            if (sourceContainerOptions.groupName !== this.groupName) {\r\n                return false;\r\n            }\r\n\r\n            return !this.dg.isMultiHeader();\r\n        },\r\n        onDropReady: (dropResult: DropResult) => {\r\n            this.ngzone.run(() => {\r\n                this.onDropReady(dropResult);\r\n            });\r\n        },\r\n        onDrop: (dropResult: DropResult) => {\r\n            this.ngzone.run(() => {\r\n                this.onDrop(dropResult);\r\n            });\r\n        },\r\n        onDragEnter: () => {\r\n            this.ngzone.run(() => {\r\n                this.onDragEnter();\r\n            });\r\n        },\r\n        onDragStart: (info: DragStartEndInfo) => {\r\n            this.ngzone.run(() => {\r\n                this.onDragStart(info);\r\n            });\r\n        },\r\n        onDragEnd: (info: DragStartEndInfo) => {\r\n            this.ngzone.run(() => {\r\n                this.onDragEnd(info);\r\n            });\r\n        }\r\n    };\r\n\r\n    constructor(private ngzone: NgZone, private injector: Injector, private render: Renderer2,\r\n                private el: ElementRef, private header: DatagridHeaderComponent, private dg: DatagridComponent,\r\n                private dndSer: DragDropColumnService) { }\r\n\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.enableDrag && !changes.enableDrag.isFirstChange()) {\r\n            if (this.enableDrag) {\r\n                this.initDnD();\r\n            } else {\r\n                this.disposeDnd();\r\n            }\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.initDnD();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.disposeDnd();\r\n    }\r\n\r\n    private disposeDnd() {\r\n        if (this.container) {\r\n            this.container.dispose();\r\n            this.container = null;\r\n        }\r\n    }\r\n\r\n    private initDnD() {\r\n        if (this.dg.editable) {\r\n            return;\r\n        }\r\n        if (this.groupName === 'left' || this.groupName === 'right') {\r\n            const { left, right } = this.columnsGroup();\r\n            if (!left.length || !right.length || (right.length === 1 && right[0].field === '_datagrid-setting-control_')) {\r\n                return;\r\n            }\r\n        }\r\n\r\n\r\n        this.options.groupName = this.groupName;\r\n        this.disposeDnd();\r\n\r\n\r\n        if (this.enableDrag) {\r\n            this.container = SmoothDnDForHeader(\r\n                this.el.nativeElement,\r\n                this.options\r\n            );\r\n\r\n            this.dndSer.backupColumns(this.header.columns);\r\n        }\r\n    }\r\n\r\n    private getChildPayload(index) {\r\n        if (this.groupName === 'left') {\r\n            if (this.dg.showCheckbox) {\r\n                index--;\r\n            }\r\n            if (this.dg.showLineNumber) {\r\n                index--;\r\n            }\r\n        }\r\n\r\n        const groupColumns = this.columnsGroup();\r\n\r\n        if (this.groupName === 'left') {\r\n            return groupColumns.left.filter((n, i) => this.dg.columnIsVisible(n))[index];\r\n        }\r\n\r\n        return groupColumns.middle.filter((n, i) => this.dg.columnIsVisible(n))[index];\r\n    }\r\n\r\n    onDropReady(dropResult) {\r\n    }\r\n\r\n    private onDrop(dropResult: DropResult) {\r\n        const { addedIndex, payload, removedIndex } = dropResult;\r\n        if (addedIndex === null) {\r\n            return;\r\n        }\r\n\r\n        const groupColumns = this.columnsGroup();\r\n\r\n        const cols = this.dg.columns[0];\r\n        const currIndex = cols.findIndex(n => n.field === payload.field);\r\n\r\n        let newIndex = addedIndex;\r\n\r\n        const moveColumn = (columns: any) => {\r\n            if (columns) {\r\n                const targetColumn = columns.filter(n => n.visible || n.visible === undefined)[newIndex];\r\n                if (targetColumn) {\r\n                    const realTagetIndex = cols.findIndex(n => n.field === targetColumn.field);\r\n                    this.dg.columns[0] = this.dndSer.moveItem(this.dg.columns[0], realTagetIndex, currIndex);\r\n\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        };\r\n\r\n        let columns = [];\r\n        if (this.groupName === 'left') {\r\n            if (this.dg.showCheckbox) {\r\n                newIndex--;\r\n            }\r\n            if (this.dg.showLineNumber) {\r\n                newIndex--;\r\n            }\r\n            columns = groupColumns.left;\r\n        } else if (this.groupName === 'center') {\r\n            columns = groupColumns.middle;\r\n        } else if (this.groupName === 'right') {\r\n            columns = groupColumns.right;\r\n        }\r\n\r\n        if (moveColumn(columns)) {\r\n            this.dg.columnsChanged(false);\r\n\r\n            if (this.dg.useControlPanel && this.dg.settingService) {\r\n                this.dg.settingService.saveUserConfig(this.dg.id);\r\n            }\r\n\r\n            this.dg.columnMoved.emit({ newColumns: this.dg.columns, grid: this.dg });\r\n        }\r\n    }\r\n\r\n    private onDragStart(info) {\r\n    }\r\n\r\n    private onDragEnd(info) {\r\n    }\r\n\r\n\r\n    private onDragEnter() {\r\n    }\r\n\r\n\r\n    private columnsGroup() {\r\n        const leftColumns = this.dg.columns[0].filter(n => n.fixed === 'left');\r\n        const rightColumns = this.dg.columns[0].filter(n => n.fixed === 'right');\r\n        const middleColumns = this.dg.columns[0].filter(n => n.fixed !== 'right' && n.fixed !== 'left');\r\n\r\n        return {\r\n            left: leftColumns,\r\n            right: rightColumns,\r\n            middle: middleColumns\r\n        };\r\n    }\r\n}\r\n\r\n","\r\nimport { Directive, NgZone, Injector, Renderer2, ElementRef, AfterViewInit, Input, OnDestroy } from '@angular/core';\r\nimport { dropHandlers, smoothDnD, DropResult, ContainerOptions, constants } from '@farris/smooth-dnd';\r\nimport { DatagridComponent } from './../../datagrid.component';\r\nimport { DragStartEndInfo } from './datagrid-drag-column.directive';\r\nimport { DragDropColumnService } from './drag-drop-column.service';\r\n\r\n\r\nsmoothDnD.dropHandler = dropHandlers.reactDropHandler().handler;\r\nsmoothDnD.wrapChild = false;\r\nconst { wrapperClass, animationClass } = constants;\r\n\r\n@Directive({\r\n    selector: '[drop-column]',\r\n    providers: [\r\n        DragDropColumnService\r\n    ]\r\n})\r\nexport class DropColumnDirective implements AfterViewInit, OnDestroy {\r\n    @Input() options: ContainerOptions = {\r\n        orientation: 'horizontal',\r\n        behaviour: 'move',\r\n        dragHandleSelector: '.group-field',\r\n        dropPlaceholder: {\r\n            className: 'drop-group-field',\r\n        },\r\n        getGhostParent: () => {\r\n            return document.body;\r\n        },\r\n        shouldAcceptDrop: (sourceContainerOptions, payload) => {\r\n            if (typeof payload === 'number') {\r\n                return true;\r\n            }\r\n\r\n            if (this.getGroupFields().length < 3) {\r\n                return payload.allowGrouping === undefined || payload.allowGrouping;\r\n            }\r\n            return false;\r\n        },\r\n        getChildPayload: (index) => {\r\n            return index;\r\n        },\r\n        // dragClass: 'drag-column-moving',\r\n        onDropReady: (dropResult: DropResult) => {\r\n            this.ngzone.run(() => {\r\n                this.onDropReady(dropResult);\r\n            });\r\n        },\r\n        onDrop: (dropResult: DropResult) => {\r\n            this.ngzone.run(() => {\r\n                this.onDrop(dropResult);\r\n            });\r\n        },\r\n        onDragEnter: () => {\r\n            this.ngzone.run(() => {\r\n                this.onDragEnter();\r\n            });\r\n        },\r\n        onDragStart: (info: DragStartEndInfo) => {\r\n            this.ngzone.run(() => {\r\n                this.onDragStart(info);\r\n            });\r\n        },\r\n        onDragEnd: (info: DragStartEndInfo) => {\r\n            this.ngzone.run(() => {\r\n                this.onDragEnd(info);\r\n            });\r\n        }\r\n    };\r\n\r\n    private container: any;\r\n    constructor(private ngzone: NgZone, private injector: Injector, private render: Renderer2, private el: ElementRef,\r\n                private dg: DatagridComponent, private dndSer: DragDropColumnService) { }\r\n\r\n    ngAfterViewInit() {\r\n        this.initDnD();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.disposeDnd();\r\n    }\r\n\r\n    private disposeDnd() {\r\n        if (this.container) {\r\n            this.container.dispose();\r\n            this.container = null;\r\n        }\r\n    }\r\n\r\n    private initDnD() {\r\n        this.disposeDnd();\r\n        if (this.dg.showRowGroupPanel) {\r\n            this.container = smoothDnD(\r\n                this.el.nativeElement,\r\n                this.options\r\n            );\r\n        }\r\n    }\r\n\r\n    private onDropReady(dropResult) {\r\n    }\r\n\r\n    private getGroupFields() {\r\n        return this.dg.groupField ? this.dg.groupField.split(',') : [];\r\n    }\r\n\r\n\r\n    private onDrop(dropResult: DropResult) {\r\n        const { addedIndex, payload, removedIndex } = dropResult;\r\n\r\n        if (addedIndex === null) {\r\n            return;\r\n        }\r\n\r\n        const newGroupFields = this.getGroupFields();\r\n\r\n        if (removedIndex === null) {\r\n            if (!newGroupFields.some((v) => v === payload.field)) {\r\n                // newGroupFields.splice(0, 0, payload.field);\r\n                newGroupFields.push(payload.field);\r\n            }\r\n        } else {\r\n            this.dndSer.moveItem(newGroupFields, addedIndex, removedIndex);\r\n        }\r\n        this.dg.groupField = newGroupFields.join(',');\r\n        // this.dg.toggleVisibleColumn([this.dg.groupField], false);\r\n\r\n        if (this.dg.useControlPanel && this.dg.settingService) {\r\n            this.dg.checkSettingHttp();\r\n            this.dg.settingService.saveUserConfig(this.dg.id).subscribe( () => {\r\n                this.dg.columnsChanged();\r\n            });\r\n        } else {\r\n            this.dg.columnsChanged();\r\n        }\r\n\r\n        this.dg.groupFieldChange.emit({ newGroupField: this.dg.groupField, grid: this.dg });\r\n    }\r\n\r\n    private onDragStart(info) {\r\n    }\r\n\r\n    private onDragEnd(info) {\r\n    }\r\n\r\n\r\n    private onDragEnter() {\r\n    }\r\n}\r\n","import { Directive, ElementRef, Renderer2, Injector, Input, OnInit, AfterViewInit } from '@angular/core';\r\nimport { DatagridComponent } from '../../datagrid.component';\r\n\r\n@Directive({\r\n    selector: '[group-footer-row-styler]',\r\n})\r\nexport class GroupFooterRowStylerDirective implements OnInit, AfterViewInit {\r\n    @Input() column: any;\r\n    @Input('group-footer-row-styler') rowData: any;\r\n    @Input() rowIndex: any;\r\n\r\n    constructor(private el: ElementRef, private render: Renderer2, private inject: Injector, public dg: DatagridComponent) { }\r\n\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.buildCustomGroupFooterRowStyle(this.rowData);\r\n    }\r\n\r\n    private buildCustomGroupFooterRowStyle(rowData) {\r\n\r\n        if (this.dg.groupFooterStyler) {\r\n\r\n            const cs = this.dg.dgs.getCustomStyle(this.dg.groupFooterStyler, [rowData]);\r\n            if (cs) {\r\n                this.dg.renderCustomCls(cs.cls, this.el.nativeElement);\r\n                if (cs.style) {\r\n                    Object.keys(cs.style).forEach(n => {\r\n                        this.el.nativeElement.style[n] = cs.style[n];\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'cellReadonly'\r\n})\r\nexport class CellIsReadonlyPipe implements PipeTransform {\r\n    transform(col: any, ...args: any[]): any {\r\n        return this.isReadonly(col, args[0], args[1]);\r\n    }\r\n\r\n    private isReadonly(col, rowData, dg) {\r\n        if (dg.editable) {\r\n            // åä¸åå¹¶çååæ ¼ä¸åè®¸ç¼è¾\r\n            if (dg.mergeCell && dg.mergeFields.indexOf(col.field) > -1) {\r\n                return true;\r\n            }\r\n            return this.getReadonlyValue(col, rowData);\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    private getReadonlyValue(col, rowData) {\r\n        if (col.readonly !== undefined) {\r\n            if (typeof col.readonly === 'boolean') {\r\n                return col.readonly;\r\n            } else if (typeof col.readonly === 'function') {\r\n                return col.readonly(rowData);\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n","\r\n\r\n\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-06 07:43:53\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-10-28 09:28:28\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { NgModule, ModuleWithProviders, Provider, ErrorHandler } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { DataColumnModule } from '@farris/ui-common/column';\r\nimport { LocaleModule } from '@farris/ui-locale';\r\nimport { NotifyModule } from '@farris/ui-notify';\r\nimport { PaginationModule } from '@farris/ui-pagination';\r\nimport { SimpleFilterModule } from '@farris/ui-filter';\r\n// import { FilterPanelModule, FilterPanelComponent } from '@farris/ui-filter-panel';\r\n\r\nimport { DatagridSmartFilterModule } from './plugins/smart-filter/datagrid-smart-filter.module';\r\n\r\nimport { DatagridComponent } from './datagrid.component';\r\nimport { NgxPaginationModule } from './pagination/ngx-pagination.module';\r\nimport { DatagridPagerComponent } from './components/pager/pager.component';\r\nimport { DataGridLoadingComponent } from './components/loading.component';\r\nimport { DatagridHeaderComponent, FilterRowCreateDirective } from './components/header/datagrid-header.component';\r\nimport { DatagridCellEditableDirective } from './components/body/datagrid-cell-editable.directive';\r\nimport { DatagridCellComponent } from './components/body/datagrid-cell.component';\r\nimport { DatagridRowDirective } from './components/body/datagrid-row.directive';\r\nimport { DatagridBodyComponent } from './components/body/datagrid-body.component';\r\nimport { DatagridCellEditorDirective } from './components/columns/column-cell-edit.directive';\r\nimport { DatagridColumnDirective } from './components/columns/datagrid-column.directive';\r\nimport { GridCellEditorDirective } from './components/editors/cell-editor.directive';\r\nimport { ScrollbarModule } from './scrollbar/scrollbar.module';\r\nimport { ScrollbarConfigInterface, SCROLLBAR_CONFIG } from './scrollbar/scrollbar.interfaces';\r\n\r\nimport { DatagridRowHoverDirective } from './components/body/datagrid-row-hover.directive';\r\nimport { DatagridRowsComponent } from './components/body/datagrid-rows.component';\r\nimport { DatagridCheckboxComponent } from './components/checkbox/datagrid-checkbox.component';\r\nimport { DatagridHeaderCheckboxComponent } from './components/checkbox/datagrid-header-checkbox.component';\r\nimport { DatagridResizeColumnDirective } from './components/header/datagrid-resize-column.directive';\r\nimport { DatagridFooterComponent } from './components/footer/datagrid-footer.component';\r\nimport { SafePipe } from './utils/safe.pipe';\r\nimport { FormatCellDataPipe } from './utils/format-cell-data.pipe';\r\nimport { RowDataIdPipe } from './utils/rowid.pipe';\r\nimport { FormatGroupRowPipe } from './utils/format-group-row.pipe';\r\nimport { FixedLeftRowsComponent } from './components/body/fixed-left-rows.component';\r\n\r\n/** å¼å®¹ä¸èçæ¬ */\r\nimport { TextboxEditorComponent } from './components/editors/text-editor.component';\r\n\r\nimport { ReplaceXPipe } from './utils/rexplaceX.pipe';\r\nimport { DatagridGroupRowDirective } from './components/body/datagrid-grouprow.directive';\r\nimport { ShowRequiredStarPipe } from './utils/show-required-label.pipe';\r\nimport { DisableRowPipe } from './utils/disable-row.pipe';\r\nimport { SelectedRowPipe } from './utils/select-row.pipe';\r\nimport { FieldValuePipe } from './utils/field-value.pipe';\r\nimport { DatagridCellTooltipDirective } from './components/tooltip/cell-tooltip.directive';\r\nimport { CellTootipMessagePipe } from './components/tooltip/tip-message.pipe';\r\nimport { DatagridFilterToolbarComponent } from './components/filter-toolbar/filter-toolbar.component';\r\nimport { HeaderStyleDirective } from './components/header/header-style.directive';\r\nimport { AutoHeightComponent } from './components/auto-height/auto-height.component';\r\nimport { RowIsSelectedPipe } from './utils/row-is-selected.pipe';\r\nimport { RowIsCheckedPipe } from './utils/row-is-checked.pipe';\r\nimport { DatagridErrorHandler } from './datagrid-error-handler';\r\nimport { AutoHeightDirective } from './components/auto-height/auto-height.directive';\r\nimport { ValidatorMessagerService } from './services/validator-messager.service';\r\nimport { PagerSelectedListComponent } from './components/pager/selected-list/selected-list.component';\r\nimport { SelectedItemPipe } from './components/pager/selected-item.pipe';\r\nimport { DatagridRowDblClickDirective } from './components/body/datagrid-row-dblclick.directive';\r\nimport { FooterCellStylerDirective } from './components/footer/datagrid-footer-cell.styler.directive';\r\nimport { DragColumnDirective } from './components/header/datagrid-drag-column.directive';\r\nimport { DropColumnDirective } from './components/header/datagrid-drop-column.directive';\r\nimport { SmartFilterToolbarComponent } from './components/filter-toolbar/smart-filter-toolbar.component';\r\n\r\nimport { FarrisContextMenuModule } from '@farris/ui-context-menu';\r\nimport { GroupFooterRowStylerDirective } from './components/body/datagrid-group-footer-styler.directive';\r\nimport { CellIsReadonlyPipe } from './utils/cell-readonly.pipe';\r\n\r\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: ScrollbarConfigInterface = {\r\n    minScrollbarLength: 20\r\n};\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        HttpClientModule,\r\n        PaginationModule,\r\n        NgxPaginationModule,\r\n        ScrollbarModule,\r\n        LocaleModule.forRoot(),\r\n        DataColumnModule.forRoot(),\r\n        NotifyModule.forRoot(),\r\n        SimpleFilterModule,\r\n        DatagridSmartFilterModule,\r\n        FarrisContextMenuModule\r\n    ],\r\n    declarations: [\r\n        SafePipe,\r\n        FormatCellDataPipe,\r\n        RowDataIdPipe,\r\n        FormatGroupRowPipe,\r\n        ShowRequiredStarPipe,\r\n        FieldValuePipe,\r\n        ReplaceXPipe,\r\n        DisableRowPipe,\r\n        SelectedRowPipe,\r\n        CellIsReadonlyPipe,\r\n        CellTootipMessagePipe,\r\n        DatagridComponent,\r\n        DatagridHeaderComponent,\r\n        DatagridFooterComponent,\r\n        DatagridResizeColumnDirective,\r\n        DatagridCellEditableDirective,\r\n        DatagridCellComponent,\r\n        DatagridRowDirective,\r\n        DatagridBodyComponent,\r\n        DatagridPagerComponent,\r\n        DatagridCellEditorDirective,\r\n        DatagridColumnDirective,\r\n        DatagridRowsComponent,\r\n        FixedLeftRowsComponent,\r\n        DatagridRowHoverDirective,\r\n        DataGridLoadingComponent,\r\n        DatagridCheckboxComponent,\r\n        DatagridHeaderCheckboxComponent,\r\n        GridCellEditorDirective,\r\n        TextboxEditorComponent,\r\n        DatagridGroupRowDirective,\r\n        DatagridCellTooltipDirective,\r\n        DatagridFilterToolbarComponent,\r\n        HeaderStyleDirective,\r\n        AutoHeightDirective,\r\n        AutoHeightComponent,\r\n        RowIsSelectedPipe,\r\n        RowIsCheckedPipe,\r\n        SelectedItemPipe,\r\n        PagerSelectedListComponent,\r\n        DatagridRowDblClickDirective,\r\n        FooterCellStylerDirective,\r\n        DragColumnDirective,\r\n        DropColumnDirective,\r\n        FilterRowCreateDirective,\r\n        SmartFilterToolbarComponent,\r\n        GroupFooterRowStylerDirective,\r\n    ],\r\n    providers: [\r\n        { provide: ErrorHandler, useClass: DatagridErrorHandler },\r\n        {\r\n            provide: SCROLLBAR_CONFIG,\r\n            useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG\r\n        },\r\n        ValidatorMessagerService\r\n    ],\r\n    exports: [\r\n        SafePipe,\r\n        DatagridComponent,\r\n        DatagridHeaderComponent,\r\n        DatagridColumnDirective,\r\n        DatagridCellEditorDirective,\r\n        DatagridCellEditableDirective,\r\n        DatagridRowHoverDirective,\r\n        DatagridResizeColumnDirective,\r\n        TextboxEditorComponent,\r\n        FormatCellDataPipe,\r\n        RowDataIdPipe,\r\n        ReplaceXPipe,\r\n        FieldValuePipe,\r\n        CellTootipMessagePipe,\r\n        ShowRequiredStarPipe,\r\n        DatagridCellTooltipDirective,\r\n        DatagridFilterToolbarComponent,\r\n        RowIsSelectedPipe,\r\n        RowIsCheckedPipe,\r\n        DatagridRowDblClickDirective,\r\n        FooterCellStylerDirective,\r\n        DragColumnDirective,\r\n        DropColumnDirective,\r\n        FilterRowCreateDirective,\r\n        SmartFilterToolbarComponent,\r\n        DatagridSmartFilterModule,\r\n        GroupFooterRowStylerDirective,\r\n        FarrisContextMenuModule,\r\n        CellIsReadonlyPipe\r\n    ],\r\n    entryComponents: [\r\n        // FilterPanelComponent\r\n    ]\r\n})\r\nexport class DatagridModule {\r\n    static forRoot(editors?: Provider[]): ModuleWithProviders {\r\n        return {\r\n            ngModule: DatagridModule,\r\n            providers: editors || []\r\n        };\r\n    }\r\n}\r\n"]}