{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://@farris/ui-language-textbox/lib/language-textbox.service.ts","ng://@farris/ui-language-textbox/lib/language-textbox-panel.component.ts","ng://@farris/ui-language-textbox/lib/language-textbox.component.ts","ng://@farris/ui-language-textbox/lib/language-textbox.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","LanguageTextboxService","setActivePane","activePane","hideDropDownPanel","hide","hide$","next","Injectable","args","providedIn","Subject","LanguageTextPanelComponent","onEnterHandler","event","onItemClick","onEscHandler","ngOnInit","_this","ngzone","runOutsideAngular","panelClickHandler","render","listen","el","nativeElement","e","stopPropagation","inputRef","lts","ngOnDestroy","opened","getPositionStyles","left","top","width","getPanelDivElement","querySelector","resetPanelPosition","panelEle","panelHeight","offsetHeight","rect","input","getBoundingClientRect","winHeight","window","innerHeight","postop","height","document","body","scrollTop","documentElement","style","setInputFocus","focusInput","currentItem","languageInputRef","idx","items","findIndex","code","querySelectorAll","focus","show","cd","detectChanges","setTimeout","transitionFlag","addEventListener","target","currentTarget","showPanel","emit","addClass","of","element","$event","hidePanel","itemClick","data","inputClick","Component","selector","template","encapsulation","ViewEncapsulation","None","ElementRef","NgZone","Injector","Renderer2","Input","Output","HostListener","injector","maxWords","EventEmitter","undefined","get","ChangeDetectorRef","LANGUAGE_TEXTBOX_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","LanguageTextboxComponent","multi","editable","languages","bindLanguageInfo","onTextBoxclickHandler","renderer","textbox","comboPanelRef","showDropDownPanel","ngCtrl","NgControl","registerKeyDown","ngOnChanges","changes","isFirstChange","currentValue","setValue","currentLanguage","currentLanguageItem","getLanguageItem","runtimeLanguageCode_1","localeService","localeId","defaultLang","find","l","debugSer","warn","onKeyDownHandler","textEl","onKeyDown","bind","keyCode","languageItemIndex","markForCheck","setFocusToEnd","onFocus","openOnFocus","onBlur","onIconClick","originalEvent","preventDefault","getCliecntRect","winWidth","innerWidth","posleft","panelWidth","updateLangOrder","curritem","f","_item","splice","unshift","readonly","disabled","compFac","cfr","resolveComponentFactory","create","applicationRef","attachView","hostView","instance","panelRefEl_1","location","appendChild","setStyle","subscribe","panelIns","overLayService","registerMouseEvent","contains","onClear","onChanges","val","value","onModelChange","onModelTouched","componentEl","parentNode","destory","removeChild","ngZone","destroy","writeValue","obj","keys","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","providers","ComponentFactoryResolver","ApplicationRef","RequiredValidator","decorators","type","Optional","Self","ViewChild","requiredValidator","enableClear","autoFocus","groupIcon","LocaleService","DebugService","OverLayHiddenService","LanguageTextboxModule","NgModule","declarations","imports","CommonModule","FormsModule","InputGroupModule","LocaleModule","forRoot","exports","entryComponents"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Subject } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class LanguageTextboxService {\r\n\r\n    private activePane = null;\r\n\r\n    hide$ = new Subject();\r\n\r\n    constructor() {}\r\n\r\n    setActivePane( p: any ) {\r\n        if (this.activePane && this.activePane != p) {\r\n            this.activePane.hideDropDownPanel();\r\n            this.activePane = null;\r\n        }\r\n        this.activePane = p;\r\n    }\r\n\r\n    hide() {\r\n        this.hide$.next();\r\n    }\r\n\r\n}\r\n","import { element } from 'protractor';\r\nimport { InputGroupComponent } from '@farris/ui-input-group';\r\nimport { debounceTime } from 'rxjs/operators';\r\nimport { ElementRef, NgZone, Injector, Renderer2, OnDestroy, ViewEncapsulation, ChangeDetectorRef, LOCALE_ID, HostListener } from '@angular/core';\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @Company: Inspur\r\n * @Version: v0.0.1\r\n * @Date: 2019-03-12 18:21:51\r\n * @LastEditTime: 2019-03-13 13:36:58\r\n */\r\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { LanguageItem, LanguageData } from './types';\r\nimport { of } from 'rxjs';\r\nimport { LanguageTextboxComponent } from './language-textbox.component';\r\n\r\n@Component({\r\n    selector: 'language-textbox-panel',\r\n    template: `\r\n        <div *ngIf=\"opened\" class=\"language-textbox-panel f-area-hide\" [ngStyle]=\"getPositionStyles()\" (click)=\"inputClick($event)\">\r\n            <ul class=\"list-group\">\r\n                <li class=\"list-group-item border-0 p-2 px-2\"  *ngFor=\"let item of items\">\r\n                    <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                        <div class=\"form-group farris-form-group\">\r\n                            <label for=\"hpinput01\" class=\"col-form-label\">\r\n                                <span class=\"farris-label-text\" [attr.title]=\"'languageLabel.'+item.code | locale: item.name\">\r\n                                    {{ 'languageLabel.'+item.code | locale: item.name }}</span>\r\n                            </label>\r\n                            <div class=\"farris-input-wrap\">\r\n                                <input type=\"input\" (click)=\"inputClick($event)\" maxlength=\"{{maxWords? maxWords[item.code] : ''}}\" [(ngModel)]=\"data[item.code]\" class=\"form-control\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </li>\r\n                <li class=\"list-group-item border-0 p-2 px-3 text-right\">\r\n                    <button class=\"btn btn-secondary mr-2\" (click)=\"hide($event)\">{{ 'languageLabel.cancel'| locale: 'åæ¶' }}</button>\r\n                    <button class=\"btn btn-primary\" (click)=\"onItemClick($event)\">{{ 'languageLabel.ok'| locale: 'ç¡®å®' }}</button>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    `,\r\n    styles: [\r\n        `.language-textbox-panel {\r\n            overflow: hidden;\r\n            overflow-y: auto;\r\n            padding: 5px;\r\n            position: absolute;\r\n            z-index: 99999;\r\n            background: white;\r\n            box-shadow: 2px 2px 5px #c6c6c6;\r\n        }\r\n\r\n        .language-textbox-panel .dropdown-menu {\r\n            left: -5px;\r\n            box-shadow: 0px 3px 6px 0px rgba(0, 0, 0, 0.37);\r\n            position: relative;\r\n        }\r\n\r\n        .language-selected {\r\n            background-color: #1890ff!important;\r\n            color: #fff;\r\n        }\r\n        `\r\n    ],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class LanguageTextPanelComponent implements OnInit, OnDestroy {\r\n\r\n    @Input() opened = false;\r\n    @Input() left: number;\r\n    @Input() top: number;\r\n    @Input() width = 365;\r\n    @Input() height = 200;\r\n    @Input() items: LanguageItem[] = [];\r\n    @Input() data: LanguageData = {};\r\n    @Input() maxWords: { [lang: string]: number } = null;\r\n\r\n    @Output() itemClick = new EventEmitter<any>();\r\n    @Output() hidePanel = new EventEmitter<any>();\r\n    @Output() showPanel = new EventEmitter<any>();\r\n\r\n    currentItem: LanguageItem = undefined;\r\n\r\n    languageInputRef = null;\r\n\r\n    panelClickHandler = undefined;\r\n    cd: ChangeDetectorRef;\r\n    private inputRef: LanguageTextboxComponent;\r\n    constructor(private el: ElementRef, private ngzone: NgZone, private injector: Injector, public render: Renderer2) {\r\n        this.cd = this.injector.get(ChangeDetectorRef);\r\n    }\r\n\r\n    @HostListener('document:keydown.enter', ['$event'])\r\n    onEnterHandler(event: KeyboardEvent) {\r\n        this.onItemClick(event);\r\n    }\r\n\r\n    @HostListener('document:keydown.esc', ['$event'])\r\n    onEscHandler(event: KeyboardEvent) {\r\n        this.hide(event);\r\n    }\r\n\r\n\r\n    ngOnInit(): void {\r\n        this.ngzone.runOutsideAngular(() => {\r\n            this.panelClickHandler = this.render.listen(this.el.nativeElement, 'click', (e) => {\r\n                if (e) {\r\n                    e.stopPropagation();\r\n                }\r\n\r\n                // let name = e.target.nodeName || e.target.tagName;\r\n                // if (!name) {\r\n                //     name = e.target.path[0].localeName;\r\n                // }\r\n\r\n                // name = name.toLowerCase();\r\n                if (this.inputRef) {\r\n                    this.inputRef.lts.hide();\r\n                }\r\n\r\n                return false;\r\n            });\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.opened = false;\r\n        if (this.panelClickHandler) {\r\n            this.panelClickHandler();\r\n        }\r\n    }\r\n\r\n    getPositionStyles() {\r\n        return {\r\n            left: this.left + 'px',\r\n            top: this.top + 'px',\r\n            width: this.width + 'px',\r\n            // height: this.height + 'px'\r\n        };\r\n    }\r\n\r\n    private getPanelDivElement() {\r\n        return this.el.nativeElement.querySelector('.language-textbox-panel');\r\n    }\r\n\r\n    private resetPanelPosition() {\r\n        const panelEle = this.getPanelDivElement();\r\n        if (panelEle) {\r\n            const panelHeight =  panelEle.offsetHeight;\r\n\r\n            const rect = this.inputRef.input.el.nativeElement.getBoundingClientRect();\r\n            const winHeight = window.innerHeight;\r\n            let postop = rect.top;\r\n            if (winHeight - postop - rect.height < panelHeight) {\r\n                postop = postop - panelHeight;\r\n            } else {\r\n                postop = postop + rect.height;\r\n            }\r\n\r\n            const scrollTop = document.body.scrollTop || document.documentElement.scrollTop;\r\n            postop += scrollTop;\r\n\r\n            panelEle.style.top = `${postop}px`;\r\n        }\r\n\r\n        return panelEle;\r\n    }\r\n\r\n\r\n    setInputFocus() {\r\n        // ç¬¬1ä¸ªinput è·å¾ç¦ç¹\r\n        // è·åå½åè¯­è¨çç´¢å¼ï¼æ ¹æ®ç´¢å¼å¼å®ä½ input\r\n        const el = this.getPanelDivElement();\r\n        if (!el) {\r\n            return;\r\n        }\r\n        let focusInput =  el.querySelector('input');\r\n        if (this.currentItem && (!this.languageInputRef || this.languageInputRef['autoFocus'])) {\r\n            const idx = this.items.findIndex(n => n.code === this.currentItem.code);\r\n            if (idx > -1) {\r\n                focusInput = el.querySelectorAll('input')[idx];\r\n            }\r\n        }\r\n        if (focusInput) {\r\n            focusInput.focus();\r\n        }\r\n    }\r\n\r\n    show(input: any) {\r\n        this.inputRef = input;\r\n        this.opened = true;\r\n        if (this.cd) {\r\n            this.cd.detectChanges();\r\n        }\r\n        setTimeout(() => {\r\n            const el = this.resetPanelPosition();\r\n            if (!el) {\r\n                return;\r\n            }\r\n            let  transitionFlag = true;\r\n            el.addEventListener('transitionend', (e: any) => {\r\n                if (e.target === e.currentTarget && transitionFlag ) {\r\n                    transitionFlag = false;\r\n                    this.showPanel.emit(this);\r\n                }\r\n            }, false);\r\n\r\n            // this.render.removeClass(el, 'hide');\r\n            this.render.addClass(el, 'f-area-show');\r\n        });\r\n        return of({ element: this.el });\r\n    }\r\n\r\n    hide($event?: any) {\r\n        this.opened = false;\r\n        const el = this.getPanelDivElement();\r\n        // this.render.addClass(el, 'f-area-hide');\r\n        this.hidePanel.emit();\r\n        if ($event) {\r\n            $event.stopPropagation();\r\n            return false;\r\n        }\r\n    }\r\n\r\n    onItemClick($event: any) {\r\n        // this.currentItem = item;\r\n        this.itemClick.emit(this.data);\r\n        $event.stopPropagation();\r\n        return false;\r\n    }\r\n\r\n    inputClick($event) {\r\n        $event.stopPropagation();\r\n        return false;\r\n    }\r\n}\r\n","import { LanguageTextboxService } from './language-textbox.service';\r\nimport { HostListener, OnChanges, SimpleChanges } from '@angular/core';\r\n\r\n/*\r\n* @Author: ç¯çç§æ(Lucas Huang)\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @Company: Inspur\r\n * @Version: v0.0.1\r\n * @Date: 2019-03-12 15:46:47\r\n * @LastEditTime: 2019-04-08 18:46:53\r\n */\r\nimport {\r\n    Component, OnInit, Input, ViewChild, ComponentRef, ElementRef,\r\n    ComponentFactoryResolver, Injector, ApplicationRef,\r\n    NgZone, Renderer2, ViewEncapsulation, forwardRef, Optional, Self\r\n} from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, NgControl, RequiredValidator } from '@angular/forms';\r\nimport { InputGroupComponent } from '@farris/ui-input-group';\r\nimport { LanguageTextPanelComponent } from './language-textbox-panel.component';\r\nimport { LanguageItem, LanguageData } from './types';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { ChangeDetectorRef, OnDestroy } from '@angular/core';\r\nimport { DebugService, OverLayHiddenService } from '@farris/ui-common';\r\n\r\nexport const LANGUAGE_TEXTBOX_VALUE_ACCESSOR: any = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => LanguageTextboxComponent),\r\n    multi: true\r\n};\r\n\r\n\r\nexport interface LanguageTextMaxLength {\r\n    [langCode: string]: number;\r\n}\r\n\r\n\r\n@Component({\r\n    selector: 'language-textbox',\r\n    template: `\r\n        <input-group #input\r\n            [customCls] = \"'farris-language-textbox'\"\r\n            [groupText]=\"groupIcon\"\r\n            [disabled]=\"disabled\"\r\n            [readonly]=\"readonly\"\r\n            [editable]=\"editable\"\r\n            [(ngModel)]=\"value\"\r\n            [enableClear]=\"false\"\r\n            [value]=\"value\"\r\n            (valueChange)=\"onChanges($event)\"\r\n            (clear)=\"onClear()\"\r\n            (clickHandle)=\"onIconClick($event)\"\r\n            (focusHandle)=\"onFocus($event)\"\r\n        >\r\n        </input-group>\r\n    `,\r\n    styles: [\r\n        `\r\n        .farris-language-textbox .input-group-text {\r\n            padding-right: 3px;\r\n        }\r\n        .farris-language-textbox .input-group-text .language-text {\r\n            padding-right: 3px;\r\n        }\r\n        `\r\n    ],\r\n    providers: [LANGUAGE_TEXTBOX_VALUE_ACCESSOR],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class LanguageTextboxComponent implements OnInit, OnDestroy, ControlValueAccessor, OnChanges {\r\n    @Input() disabled = false;\r\n    @Input() readonly = false;\r\n    @Input() editable = false;\r\n    @Input() enableClear = false;\r\n    @Input() languages: LanguageItem[] = [];\r\n    @Input() currentLanguage: string;\r\n    @Input() panelHeight = 260;\r\n    @Input() panelWidth = 365;\r\n\r\n    @Input() maxWords: LanguageTextMaxLength = null;\r\n\r\n    /**\r\n     * é¢æ¿è¾å¥æ¡æ ¹æ®LOCALE_ID èªå¨è·å¾ç¦ç¹\r\n     * è®¾ä¸º false æ¶ï¼ä»ç¬¬1ä¸ªè·å¾ç¦ç¹\r\n     */\r\n    @Input() autoFocus = true;\r\n\r\n    @ViewChild('input') input: InputGroupComponent;\r\n\r\n    @Input() openOnFocus = true;\r\n\r\n    groupIcon = '<span class=\"f-icon f-icon-yxs_earth\"></span>';\r\n\r\n    comboPanelRef: ComponentRef<LanguageTextPanelComponent>;\r\n    currentLanguageItem: LanguageItem = undefined;\r\n    private data: LanguageData = {};\r\n    private ngCtrl: NgControl;\r\n    value = '';\r\n\r\n    onKeyDownHandler: any;\r\n    localeService: LocaleService;\r\n\r\n    onTextBoxclickHandler = null;\r\n    lts: LanguageTextboxService = null;\r\n    private overLayService: OverLayHiddenService = null;\r\n    onModelChange = (obj?: any) => { };\r\n    onModelTouched = (obj?: any) => { };\r\n\r\n    private debugSer: DebugService = null;\r\n\r\n\r\n    constructor(\r\n        private el: ElementRef,\r\n        private cfr: ComponentFactoryResolver,\r\n        private injector: Injector,\r\n        private ngZone: NgZone,\r\n        private applicationRef: ApplicationRef,\r\n        private renderer: Renderer2,\r\n        @Optional() @Self() private requiredValidator: RequiredValidator,\r\n        private cd: ChangeDetectorRef) {\r\n            this.localeService = this.injector.get(LocaleService);\r\n            this.lts = this.injector.get(LanguageTextboxService, null);\r\n            this.debugSer = this.injector.get(DebugService, null);\r\n\r\n            if (!this.lts) {\r\n                this.lts = new LanguageTextboxService();\r\n            }\r\n\r\n            this.lts.hide$.subscribe( e => {\r\n                this.hideDropDownPanel();\r\n            });\r\n\r\n            this.overLayService = this.injector.get(OverLayHiddenService, null);\r\n            if (!this.overLayService) {\r\n                this.overLayService = new OverLayHiddenService();\r\n            }\r\n        }\r\n\r\n    ngOnInit(): void {\r\n        if (!this.editable) {\r\n            this.editable = this.languages && this.languages.length && this.languages.length === 1;\r\n        }\r\n\r\n        this.bindLanguageInfo(this.languages);\r\n\r\n        this.onTextBoxclickHandler = this.renderer.listen(this.input.textbox.nativeElement, 'click', (e) => {\r\n            e.stopPropagation();\r\n\r\n            if (this.editable) {\r\n                this.hideDropDownPanel();\r\n                return;\r\n            }\r\n\r\n            if (!this.comboPanelRef) {\r\n                this.showDropDownPanel();\r\n            }\r\n        });\r\n\r\n        this.ngCtrl = this.injector.get(NgControl, null);\r\n\r\n        this.registerKeyDown();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.languages && !changes.languages.isFirstChange()) {\r\n            this.bindLanguageInfo(changes.languages.currentValue);\r\n            this.setValue();\r\n        }\r\n    }\r\n\r\n    private bindLanguageInfo(languages: LanguageItem[]) {\r\n        if (languages && languages.length) {\r\n            if (!this.currentLanguage) {\r\n                const runtimeLanguageCode = this.localeService.localeId;\r\n                if (runtimeLanguageCode) {\r\n                    const defaultLang = languages.find(l => l.code === runtimeLanguageCode);\r\n                    if (defaultLang) {\r\n                        this.currentLanguage = defaultLang.code;\r\n                        this.currentLanguageItem = defaultLang;\r\n                    } else {\r\n                        if (languages.length) {\r\n                            this.currentLanguage = languages[0].code;\r\n                            this.currentLanguageItem = languages[0];\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (this.debugSer) {\r\n                        this.debugSer.warn('å½åä¸ä¸æç¯å¢æªåå°è¯­è¨ä»£ç ã');\r\n                    }\r\n                }\r\n            } else {\r\n                this.currentLanguageItem = this.getLanguageItem(this.currentLanguage);\r\n            }\r\n        } else {\r\n            if (this.debugSer) {\r\n                this.debugSer.warn(`Please set  the '[languages]' data.`);\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.onKeyDownHandler) {\r\n            this.onKeyDownHandler();\r\n        }\r\n\r\n        this.hideDropDownPanel();\r\n        if (this.onTextBoxclickHandler) {\r\n            this.onTextBoxclickHandler();\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    private registerKeyDown() {\r\n        const textEl = this.input.textbox.nativeElement;\r\n        this.onKeyDownHandler = this.renderer.listen(textEl, 'keydown', this.onKeyDown.bind(this));\r\n        // this.ngZone.runOutsideAngular(() => {\r\n        // });\r\n    }\r\n\r\n    private onKeyDown($event: KeyboardEvent) {\r\n        if ($event) {\r\n            $event.stopPropagation();\r\n\r\n            const keyCode = $event.keyCode;\r\n            // F2\r\n            if (keyCode === 113) {\r\n                this.showDropDownPanel();\r\n            }\r\n\r\n\r\n            if (keyCode !== 38 && keyCode !== 40) {\r\n                return;\r\n            }\r\n\r\n            const languageItemIndex = this.languages.findIndex(l => l.code === this.currentLanguageItem.code);\r\n            switch (keyCode) {\r\n                case 38:\r\n                    if (languageItemIndex === 0) {\r\n                        this.currentLanguageItem = this.languages[this.languages.length - 1];\r\n                    } else {\r\n                        this.currentLanguageItem = this.languages[languageItemIndex - 1];\r\n                    }\r\n                    this.currentLanguage = this.currentLanguageItem.code;\r\n                    break;\r\n                case 40:\r\n                    if (languageItemIndex === this.languages.length - 1) {\r\n                        this.currentLanguageItem = this.languages[0];\r\n                    } else {\r\n                        this.currentLanguageItem = this.languages[languageItemIndex + 1];\r\n                    }\r\n                    this.currentLanguage = this.currentLanguageItem.code;\r\n                    break;\r\n            }\r\n            this.setValue();\r\n            this.cd.markForCheck();\r\n            this.cd.detectChanges();\r\n            // this.input.cd.detectChanges();\r\n            setTimeout( () => {\r\n                this.input.setFocusToEnd();\r\n            });\r\n        }\r\n    }\r\n\r\n    onFocus($event) {\r\n        $event.stopPropagation();\r\n        if (this.openOnFocus) {\r\n            this.showDropDownPanel();\r\n        }\r\n    }\r\n\r\n    onBlur($event) {\r\n        $event.stopPropagation();\r\n        // this.hideDropDownPanel();\r\n    }\r\n\r\n    onIconClick($event) {\r\n        if ($event.originalEvent) {\r\n            $event.originalEvent.stopPropagation();\r\n            $event.originalEvent.preventDefault();\r\n        }\r\n        if (!this.comboPanelRef) {\r\n            this.showDropDownPanel();\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private getCliecntRect() {\r\n        const rect = this.input.el.nativeElement.getBoundingClientRect();\r\n\r\n        const winWidth = window.innerWidth;\r\n        const winHeight = window.innerHeight;\r\n\r\n        let posleft = rect.left;\r\n        if (winWidth - posleft < this.panelWidth) {\r\n            posleft = posleft + rect.width - this.panelWidth;\r\n        }\r\n\r\n        let postop = rect.top;\r\n        if (winHeight - postop < this.panelHeight) {\r\n            postop = postop - rect.height;\r\n        } else {\r\n            postop = postop + rect.height;\r\n        }\r\n\r\n        return {\r\n            left: posleft, // + rect.width - this.panelWidth\r\n            top: postop,\r\n            height: this.panelHeight,\r\n            width: this.panelWidth\r\n        };\r\n    }\r\n\r\n    private updateLangOrder() {\r\n        let idx = -1;\r\n        const curritem = this.languages.find((n, i) => {\r\n            const f = n.code === this.localeService.localeId;\r\n            if (f) {\r\n                idx = i;\r\n            }\r\n            return f;\r\n        });\r\n\r\n        if (curritem) {\r\n            const _item = Object.assign({}, curritem);\r\n\r\n            this.languages.splice(idx, 1);\r\n            this.languages.unshift(_item);\r\n        }\r\n    }\r\n\r\n    showDropDownPanel() {\r\n\r\n        if (!this.languages || this.languages.length === 1) {\r\n            return;\r\n        }\r\n\r\n        if (this.readonly || this.disabled) {\r\n            return;\r\n        }\r\n\r\n\r\n        if (!this.comboPanelRef) {\r\n            const compFac = this.cfr.resolveComponentFactory(LanguageTextPanelComponent);\r\n            this.comboPanelRef = compFac.create(this.injector);\r\n            this.applicationRef.attachView(this.comboPanelRef.hostView);\r\n\r\n            Object.assign(this.comboPanelRef.instance, this.getCliecntRect());\r\n\r\n            const panelRefEl = this.comboPanelRef.location.nativeElement;\r\n            document.body.appendChild(panelRefEl);\r\n            this.renderer.addClass(panelRefEl, 'overlay-pane');\r\n            // this.renderer.setStyle(panelRefEl, 'width', '100vw');\r\n            // this.renderer.setStyle(panelRefEl, 'height', '100vh');\r\n            this.renderer.setStyle(panelRefEl, 'z-index', '99999999');\r\n            this.renderer.setStyle(panelRefEl, 'left', '0');\r\n            this.renderer.setStyle(panelRefEl, 'top', '0');\r\n\r\n            // æ ¹æ®ä¸ä¸æè¯­è¨ï¼èªå¨è°æ´è¯­è¨åè¡¨çé¡ºåºï¼å°å½åè¯­è¨è®¾ä¸ºç¬¬1ä¸ª\r\n            this.updateLangOrder();\r\n\r\n            this.comboPanelRef.instance.items = this.languages;\r\n            this.comboPanelRef.instance.languageInputRef = this;\r\n            this.comboPanelRef.instance.data = {...this.data};\r\n            this.comboPanelRef.instance.currentItem = this.currentLanguageItem;\r\n\r\n            this.comboPanelRef.instance.maxWords = this.maxWords;\r\n\r\n            this.comboPanelRef.instance.itemClick.subscribe((data: LanguageData) => {\r\n                // this.currentLanguageItem = item;\r\n                // this.currentLanguage = item.code;\r\n                this.data = {...data};\r\n                this.hideDropDownPanel();\r\n                this.setValue();\r\n            });\r\n            this.comboPanelRef.instance.hidePanel.subscribe( () => {\r\n                this.hideDropDownPanel();\r\n            });\r\n\r\n            this.comboPanelRef.instance.showPanel.subscribe( (panelIns: LanguageTextPanelComponent) => {\r\n                panelIns.setInputFocus();\r\n            });\r\n\r\n            this.comboPanelRef.instance.show(this);\r\n\r\n            this.lts.setActivePane(this);\r\n\r\n\r\n            // æ³¨åé¼ æ æ»è½®ï¼ç¹å»äºä»¶ï¼ç¨äºéèPanel\r\n            this.overLayService.registerMouseEvent(panelRefEl, (e: MouseEvent) => {\r\n                if(panelRefEl.contains(e.target)) {\r\n                    return;\r\n                }\r\n\r\n                this.hideDropDownPanel();\r\n            });\r\n        } else {\r\n            this.hideDropDownPanel();\r\n        }\r\n    }\r\n\r\n    private getLanguageItem(code: string) {\r\n        return this.languages.find(l => l.code === code);\r\n    }\r\n\r\n    onClear() { }\r\n\r\n    onChanges(val?: any) {\r\n        this.data[this.currentLanguage] = this.value;\r\n        this.onModelChange({...this.data});\r\n        this.onModelTouched({...this.data});\r\n    }\r\n\r\n    setValue() {\r\n        if (this.data) {\r\n            this.value = this.data[this.currentLanguage] || '';\r\n        } else {\r\n            this.value = '';\r\n        }\r\n\r\n        this.onChanges();\r\n        this.cd.detectChanges();\r\n    }\r\n\r\n\r\n    hideDropDownPanel() {\r\n        if (this.comboPanelRef && this.comboPanelRef.instance) {\r\n            // if (this.comboPanelRef.instance.opened) {\r\n            //     this.comboPanelRef.instance.hide();\r\n            // }\r\n            this.comboPanelRef.instance.opened = false;\r\n            const componentEl = this.comboPanelRef.location.nativeElement;\r\n            if (componentEl.parentNode) {\r\n\r\n                if (this.overLayService) {\r\n                    this.overLayService.destory(componentEl)\r\n                }\r\n\r\n                componentEl.parentNode.removeChild(componentEl);\r\n            }\r\n\r\n            this.ngZone.runOutsideAngular(() => {\r\n                this.input.focus();\r\n                setTimeout(() => {\r\n                    if (this.comboPanelRef) {\r\n                        this.comboPanelRef.destroy();\r\n                        this.comboPanelRef = null;\r\n                    }\r\n\r\n                    \r\n                }, 100);\r\n            });\r\n        }\r\n    }\r\n\r\n    writeValue(obj: any): void {\r\n        if (obj && Object.keys(obj).length) {\r\n            this.data = obj;\r\n            this.value = obj[this.currentLanguage];\r\n        } else {\r\n            this.data = {};\r\n            this.value = '';\r\n        }\r\n    }\r\n    registerOnChange(fn: any): void {\r\n        this.onModelChange = fn;\r\n    }\r\n    registerOnTouched(fn: any): void {\r\n        this.onModelTouched = fn;\r\n    }\r\n    setDisabledState?(isDisabled: boolean): void {\r\n        this.disabled = isDisabled;\r\n    }\r\n}\r\n","import { FormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LocaleModule } from '@farris/ui-locale';\r\nimport { InputGroupModule } from '@farris/ui-input-group';\r\nimport { LanguageTextboxComponent } from './language-textbox.component';\r\nimport { LanguageTextPanelComponent } from './language-textbox-panel.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        LanguageTextboxComponent,\r\n        LanguageTextPanelComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        InputGroupModule,\r\n        LocaleModule.forRoot()\r\n    ],\r\n    exports: [LanguageTextboxComponent],\r\n    providers: [],\r\n    entryComponents: [LanguageTextPanelComponent]\r\n})\r\nexport class LanguageTextboxModule {}\r\n"]}