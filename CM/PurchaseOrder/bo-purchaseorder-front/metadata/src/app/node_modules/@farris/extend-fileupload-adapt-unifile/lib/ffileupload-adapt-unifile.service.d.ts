import { UploadServerService, UploadFile, UploadInput } from '@farris/extend-file-upload';
import { Observable } from 'rxjs';
import { UploadService } from '@gsp-svc/formdoc-upload';
import { FFileUploadAdaptUnifileConfigService, FFileUploadAdaptUnifileConfig } from './ffileupload-adapt-unifile.config';
export declare class FfileuploadAdaptUnifileService extends UploadServerService {
    private uploadSer;
    private configSer;
    extendData: any;
    bufferSize: number;
    private static previous;
    private uploadedChunk;
    private fileTotalChunk;
    constructor(uploadSer: UploadService, configSer: FFileUploadAdaptUnifileConfigService);
    private uuid;
    /**
     * 删除文件
     * @param file
     * @param event
     */
    remove(files: UploadFile[], event: UploadInput, extendService: FFileUploadAdaptUnifileConfig): Observable<any>;
    private innerRemoveList;
    /**
     * 上传文件
     * @param file
     * @param event
     */
    upload(files: UploadFile[], event: UploadInput, extendService: FFileUploadAdaptUnifileConfig): Observable<any>;
    /**
     * 内部上传方式
     * @param files
     * @param event
     * @param extendService
     */
    private innerUploadList;
    /**
     * 分片加载
     * @param file
     * @param event
     * @param extendService
     */
    multipartUpload(file: UploadFile, event: UploadInput, extendService: FFileUploadAdaptUnifileConfig): Observable<any>;
    /**
     * 获取分片的附件大小
     * @param size
     */
    private formatFileSize;
    /**
     * 获取分片的 附件名称
     * @param fileName
     */
    private getMultipartDisplayName;
    private errorInfoFormat;
    /**
     * 返回最终属性值
     * @param key
     * @param configValue
     * @param extendValue
     */
    private getFinallyConfig;
    private findFileIndexByFileName;
    uploadBigFile(files: UploadFile[], event: UploadInput, extendService: FFileUploadAdaptUnifileConfig): Observable<{}>;
    private uploadFileChunk;
    private uploadChunks;
    private _getBigFileChunks;
}
