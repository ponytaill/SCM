{"version":3,"file":"farris-ui-multi-select.js.map","sources":["ng://@farris/ui-multi-select/lib/multi-select.component.ts","ng://@farris/ui-multi-select/lib/multi-select.module.ts"],"sourcesContent":["import { cloneDeep } from 'lodash-es';\r\n/*\r\n* @Author: ç¯çç§æ(lucas huang)\r\n* @Date: 2018-10-27 10:55:02\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-10-16 14:14:14\r\n* @Company: Inspur\r\n* @Version: v0.0.1\r\n*/\r\n\r\nimport {\r\n    Component, OnInit, Input, ViewChild, Output, EventEmitter,\r\n    TemplateRef, ContentChildren, QueryList, AfterContentInit, AfterViewInit,\r\n    OnChanges, SimpleChanges, Injector, ChangeDetectorRef, ElementRef, Renderer2\r\n} from '@angular/core';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { TreeTableComponent, TreeNode } from '@farris/ui-treetable';\r\nimport { CommonUtils, FarrisTemplateDirective } from '@farris/ui-common';\r\nimport { LocaleService } from '@farris/ui-locale';\r\n\r\n@Component({\r\n    selector: 'multi-select',\r\n    templateUrl: './multi-select.component.html',\r\n    styleUrls: [\r\n        './multi-select.css'\r\n    ]\r\n})\r\n\r\nexport class MultiSelectComponent implements OnInit, OnChanges, AfterViewInit, AfterContentInit {\r\n\r\n    private allTreeNodes = [];\r\n    private _ds: any = [];\r\n    get dataSource() {\r\n        return this._ds;\r\n    }\r\n    @Input() set dataSource(val: any) {\r\n        val = val  || [];\r\n        this._ds = val;\r\n        if (!this.searchValue) {\r\n            if (val.length) {\r\n                if (val[0].toJSON) {\r\n                    this.copyDataSource = val.map(n => n.toJSON());\r\n                } else {\r\n                    this.copyDataSource = cloneDeep(val);\r\n                }\r\n            }\r\n            this.initRightData(this.selectedId);\r\n        }\r\n    }\r\n\r\n    @Input() displayType: 'List' | 'Tree' = 'List';\r\n    /** æ¾ç¤ºå³ä¾§ä¸ç§»ä¸ç§»æé® */\r\n    @Input() enableTargetSort = true;\r\n\r\n    @Input() idField: string;\r\n\r\n    @Input() textField: string;\r\n    @Input() valueField: string;\r\n\r\n    @Input() height = 445;\r\n    @Input() fit = true;\r\n    @Input() noDataMoveMessage = 'è¯·éæ©è¦ç§»å¨çæ°æ®ã';\r\n    /** æ ç»ææ¶ï¼æ¯å¦æ¾ç¤ºçº§èéæ©æ§å¶éé¡¹ */\r\n    @Input() showCascadeControl = false;\r\n\r\n    @Input() leftTitle = 'æªéæ©';\r\n    @Input() rightTitle = 'å·²éæ©';\r\n    @Input() selectedId: any;\r\n    @Input() enableSearch = true;\r\n    /** ç®æ æ°æ®æºæ¾ç¤ºcheckbox åè®¸å¤é */\r\n    @Input() showCheckbox = false;\r\n   \r\n\r\n    @Output() dataChange = new EventEmitter();\r\n    @Output() selected = new EventEmitter();\r\n    @Output() selectedIdChange = new EventEmitter();\r\n\r\n    @Output() beforeMove = new EventEmitter();\r\n    @Output() afterMove = new EventEmitter();\r\n\r\n    @Output() sortMove = new EventEmitter();\r\n\r\n    @ContentChildren(FarrisTemplateDirective) templates: QueryList<FarrisTemplateDirective>;\r\n    @ViewChild('tt') tt: TreeTableComponent;\r\n\r\n\r\n    // å³ä¾§éä¸­çæ°æ® { [keyVal]: obj, [keyVal]: obj ... }\r\n    _rightCheckeds: any;\r\n    // å·¦ä¾§éä¸­çæ°æ® { [keyVal]: obj, [keyVal]: obj ... }\r\n    _leftCheckeds: any = {};\r\n\r\n    // å³ä¾§æ°æ®\r\n    _rightData = [];\r\n    get selections() {\r\n        return this._rightData;\r\n    }\r\n    set selections(val: any) {\r\n        this._rightData = val;\r\n        this.cd.detectChanges();\r\n    }\r\n    get searchValue() {\r\n        return this._searchValue;\r\n    }\r\n    set searchValue(value: string) {\r\n        this._searchValue = value;\r\n\r\n        // this.copyDataSource = [...this.dataSource];\r\n\r\n        if (value === undefined || value === null || value === '') {\r\n            let leftCheckitems = {...this._leftCheckeds};\r\n\r\n            if (this.displayType === 'Tree') {\r\n                this.tt.selections.forEach(n => {\r\n                    leftCheckitems[n.id] = n.data;\r\n                });\r\n            }\r\n            this.dataSource = this.copyDataSource;\r\n\r\n\r\n            if (this.displayType === 'Tree') {\r\n                setTimeout(() => {\r\n                    const ids = Object.keys(leftCheckitems);\r\n                    if (ids && ids.length) {\r\n                        this.tt.checkedNodes(ids);\r\n                    }\r\n                });\r\n            } else  {\r\n                this._leftCheckeds = {...leftCheckitems};\r\n            }\r\n            \r\n            return;\r\n        }\r\n        if (this.displayType === 'Tree') {\r\n            const newDataSource = this.getTreeDataBySearch(this._searchValue, this.allTreeNodes);\r\n            this.tt.loadData(newDataSource);\r\n        } else {\r\n            this.dataSource = this.getListDataBySearch(this._searchValue, this.copyDataSource);\r\n        }\r\n\r\n        if (this.updateTimer1) {\r\n            clearTimeout(this.updateTimer1);\r\n        }\r\n        this.updateTimer1 = setTimeout(() => {\r\n            this.canCheckLength = this.getCanCheckLength();\r\n        });\r\n    }\r\n\r\n    canCheckLength = 0;\r\n    leftCount = 0;\r\n    _searchValue = '';\r\n    // å¤å¶ä¸ä»½æ°æ®æº\r\n    private copyDataSource: any;\r\n    // æ å½¢ç»æçæ°æ®length\r\n    treeDataLength: number;\r\n    displayTemplate: TemplateRef<any>;\r\n\r\n\r\n    emptyData;\r\n    el: ElementRef;\r\n    render: Renderer2;\r\n    localeService: LocaleService;\r\n    commonUtils: CommonUtils;\r\n    // çº§èéæ©æ§å¶éé¡¹\r\n    enableCascase = true;\r\n\r\n    private updateTimer1 = null;\r\n    private updateTimer2 = null;\r\n\r\n    constructor(private mesagerSer: MessagerService, private injector: Injector, private cd: ChangeDetectorRef) {\r\n        if (!Object.values) {\r\n            Object.values = function (obj) {\r\n                return Object.keys(obj).map(function (e) {\r\n                    return obj[e];\r\n                });\r\n            };\r\n        }\r\n        this.el = this.injector.get<ElementRef>(ElementRef);\r\n        this.render = this.injector.get(Renderer2);\r\n        this.localeService = this.injector.get(LocaleService);\r\n\r\n        this.commonUtils = this.injector.get(CommonUtils, null);\r\n    }\r\n\r\n    ngOnInit() {\r\n        // this.copyDataSource = this.dataSource ? [...this.dataSource] : [];\r\n        this.emptyData = this.localeService.getValue('multiSelect.emptyData') || 'ææ æ°æ®';\r\n        this.initRightData(this.selectedId);\r\n        this.moveItem();\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        const elt = this.el.nativeElement;\r\n        this.render.addClass(elt, 'row');\r\n        this.render.addClass(elt, 'f-multi-select');\r\n        if (this.fit === true) {\r\n            this.render.addClass(elt, 'f-utils-fill');\r\n            this.render.setStyle(elt, 'height', '100%');\r\n        } else {\r\n            if (!!this.height) {\r\n                this.render.setStyle(elt, 'height', this.height + 'px');\r\n            }\r\n        }\r\n\r\n        this.noDataMoveMessage =\r\n            this.noDataMoveMessage === 'è¯·éæ©è¦ç§»å¨çæ°æ®ã' ? this.localeService.getValue('multiSelect.noDataMoveMessage') : this.noDataMoveMessage;\r\n\r\n        if (this.tt && this.selectedId) {\r\n            this.tt.checkedNodes(this.selectedId);\r\n        }\r\n    }\r\n\r\n    ngAfterContentInit() {\r\n        this.templates.forEach((item) => {\r\n            switch (item.getType()) {\r\n                case 'text':\r\n                    this.displayTemplate = item.template;\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.dataSource && !changes.dataSource.isFirstChange()) {\r\n            // this.copyDataSource = [...(this.dataSource || [])];\r\n            this._leftCheckeds = {};\r\n            this._rightData = [];\r\n        }\r\n\r\n        if (changes.selectedId && !changes.selectedId.isFirstChange()) {\r\n            this.initRightData(changes.selectedId.currentValue);\r\n        }\r\n    }\r\n\r\n    getCanCheckLength() {\r\n        let n = 0;\r\n        let total = 0;\r\n        if (this.isTree()) {\r\n            this.tt.serializedValue.forEach(rn => {\r\n                if (rn.node.selectable) {\r\n                    if (this.canChecked(rn.node)) {\r\n                        n++;\r\n                    }\r\n                }\r\n            });\r\n            total = this.tt.serializedValue.length;\r\n        } else {\r\n            this.dataSource.forEach(d => {\r\n                if (this.canChecked(d)) {\r\n                    n++;\r\n                }\r\n            });\r\n            total = this.dataSource.length;\r\n        }\r\n        this.leftCount = total;\r\n        return n;\r\n    }\r\n\r\n    /**\r\n     * è·åæç´¢çæ°æ®ï¼Listç»æ\r\n     * @param value æç´¢çå­ç¬¦\r\n     * @param data æ°æ®\r\n     */\r\n    private getListDataBySearch(value: string, data: any[]): any[] {\r\n        const result = [];\r\n        value = '' + value;\r\n        if (data instanceof Array) {\r\n            data.forEach(item => {\r\n\r\n                let txt = '';\r\n                let val = '';\r\n\r\n                if (this.textField) {\r\n                    txt = '' + this.getText(item);\r\n                }\r\n\r\n                if (this.valueField) {\r\n                    val = '' + this.getValue(item);\r\n                }\r\n\r\n                if (this.textField && this.valueField) {\r\n                    if (txt.indexOf(value) !== -1 || val.indexOf(value) !== -1) {\r\n                        result.push(item);\r\n                    }\r\n                } else if (this.textField && !this.valueField) {\r\n                    if (txt.indexOf(value) !== -1) {\r\n                        result.push(item);\r\n                    }\r\n                } else if (!this.textField && this.valueField) {\r\n                    if (val.indexOf(value) !== -1) {\r\n                        result.push(item);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * è·ååå«valueå¼å¾èç¹\r\n     */\r\n    private getTreeDataByRecursive(value: string, data: any[], newData: any[]) {\r\n        value = '' + value;\r\n        data.forEach(item => {\r\n\r\n            let txt = '';\r\n            let val = '';\r\n\r\n            if (this.textField) {\r\n                txt = '' + this.getText(item.data);\r\n            }\r\n\r\n            if (this.valueField) {\r\n                val = '' + this.getValue(item.data);\r\n            }\r\n\r\n            if (this.textField && this.valueField) {\r\n                if (txt.indexOf(value) !== -1 || val.indexOf(value) !== -1) {\r\n                    newData.push(item);\r\n                }\r\n            } else if (this.textField && !this.valueField) {\r\n                if (txt.indexOf(value) !== -1) {\r\n                    newData.push(item);\r\n                }\r\n            } else if (!this.textField && this.valueField) {\r\n                if (val.indexOf(value) !== -1) {\r\n                    newData.push(item);\r\n                }\r\n            }\r\n            if (item.children && item.children.length) {\r\n                this.getTreeDataByRecursive(value, item.children, newData);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * è·åæ ¹èç¹\r\n     */\r\n    private getTreeRootNode(data: any[], rootData: any[]) {\r\n        data.forEach(item => {\r\n            if (item.parent === null) {\r\n                rootData.push(item);\r\n            } else {\r\n                this.getTreeRootNode(new Array(item.parent), rootData);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * è·åæç´¢çæ°æ®ï¼Treeç»æ\r\n     * @param value æç´¢çå­ç¬¦\r\n     * @param data æ°æ®\r\n     */\r\n    private getTreeDataBySearch(value: string, data: any[]): any[] {\r\n        const rootNodes = [];\r\n        const nodes = [];\r\n        const finalRes = [];\r\n        const uniqueId = [];\r\n        // è·ååå«valueå¼å¾èç¹\r\n        this.getTreeDataByRecursive(value, data, nodes);\r\n        // è·åæ ¹èç¹\r\n        this.getTreeRootNode(nodes, rootNodes);\r\n        // å»é\r\n        rootNodes.forEach(node => {\r\n            if (!uniqueId.some(item => item == node.id)) {\r\n                finalRes.push(node);\r\n                uniqueId.push(node.id);\r\n            }\r\n        });\r\n        return finalRes;\r\n    }\r\n\r\n    private initRightData(ids) {\r\n        let dataSource: any = [];\r\n\r\n        if (ids && ids.length) {\r\n            if (this.isTree()) {\r\n                this.convertTreeDataToPlainData(this.copyDataSource, dataSource);\r\n                this._rightData = this.getTreeSelectionsById(ids, dataSource);\r\n            } else {\r\n                this._rightData = this.getListSelectionsById(ids, this.copyDataSource);\r\n            }\r\n\r\n            this._leftCheckeds = ids.reduce((r, id) => {\r\n                r[id] = this._rightData.find(n => n[this.idField] == id);\r\n                return r;\r\n            }, {});\r\n\r\n        }\r\n\r\n        if (this.updateTimer2) {\r\n            clearTimeout(this.updateTimer2);\r\n        }\r\n\r\n        this.updateTimer2 = setTimeout(() => {\r\n            this.canCheckLength = this.getCanCheckLength();\r\n            if (this.tt) {\r\n                this.tt.checkedNodes(ids, true, false, true);\r\n                this.allTreeNodes = cloneDeep(this.tt.state.rowNodes.map(n => n.node));\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @param ids éä¸­æ°æ®çid\r\n     * @param dataSource åå§æ°æ®\r\n     */\r\n    private getListSelectionsById(ids: any, dataSource: any) {\r\n        let result = [];\r\n        const _this = this;\r\n        if ((typeof ids === 'string' && !!ids) || typeof ids === 'number') {\r\n            const reusltObj = dataSource.find(item => {\r\n                return item[_this.idField] === ids;\r\n            });\r\n            if (reusltObj) {\r\n                result.push(reusltObj);\r\n            }\r\n        } else if (Array.isArray(ids)) {\r\n            if (Array.isArray(dataSource)) {\r\n                result = ids.map(id => dataSource.find(item => item[this.idField] === id)).filter(n => n);\r\n            } else {\r\n                result = [];\r\n            }\r\n        } else {\r\n            result = [];\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param ids éä¸­æ°æ®çid\r\n     * @param dataSource åå§æ°æ®\r\n     */\r\n    private getTreeSelectionsById(ids: any, dataSource: any) {\r\n        let result = [];\r\n        const _this = this;\r\n        if ((typeof ids === 'string' && !!ids) || typeof ids === 'number') {\r\n            const reusltObj = dataSource.find(item => {\r\n                return item.data[_this.idField] === ids;\r\n            });\r\n            if (reusltObj && reusltObj.data) {\r\n                result.push(reusltObj.data);\r\n            }\r\n        } else if (Array.isArray(ids)) {\r\n            if (Array.isArray(dataSource)) {\r\n                result = ids.map(id => {\r\n                    return dataSource.find(item => item.data[this.idField] === id);\r\n                }).filter(n => n).map(n => n.data);\r\n            } else {\r\n                result = [];\r\n            }\r\n        } else {\r\n            result = [];\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * å¤æ­æ¯å¦éä¸­\r\n     * @param data è¦éªè¯çæ°æ®\r\n     * @param direction éªè¯çæ°æ®æå¨çä½ç½® L: å·¦ä¾§ï¼R: å³ä¾§\r\n     */\r\n    isChecked(data: any, direction: 'L' | 'R'): boolean {\r\n        const keyVal = data[this.idField];\r\n        if (direction === 'L') {\r\n            return (this._leftCheckeds && this._leftCheckeds[keyVal] !== undefined); // || !this.canChecked(data);\r\n        } else {\r\n            if (this._rightCheckeds) {\r\n                return this._rightCheckeds[keyVal] !== undefined;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    canChecked(item: any) {\r\n        let data = item;\r\n\r\n        if (this.isTree()) {\r\n            data = item.data;\r\n\r\n            if (item.selectable !== undefined && !item.selectable) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        if (!this.selections || this.selections.length === 0) {\r\n            return true;\r\n        }\r\n        return this.selections.findIndex(c => c[this.idField] === data[this.idField]) === -1;\r\n    }\r\n\r\n    onCheckValueChange(ids: string[]) {\r\n        \r\n    }\r\n\r\n    isTree(): any {\r\n        return this.displayType === 'Tree';\r\n    }\r\n\r\n    leftDataChecked(data: any[]) {\r\n        if (data && data.length) {\r\n            data.forEach(node => {\r\n                let d = node;\r\n                if (this.isTree()) {\r\n                    d = node.data;\r\n                }\r\n                if (this.canChecked(node)) {\r\n                    if (this.isChecked(d, 'L')) {\r\n                        delete this._leftCheckeds[d[this.idField]];\r\n                    } else {\r\n                        if (!this._leftCheckeds) {\r\n                            this._leftCheckeds = {};\r\n                        }\r\n                        this._leftCheckeds[d[this.idField]] = d;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    hasCheckeds(dir: 'L' | 'R') {\r\n        if (dir === 'L') {\r\n            if (this.isTree()) {\r\n                return this.tt.checkeds && this.tt.checkeds.length || ( this.tt.selections && this.tt.selections.length);\r\n            }\r\n\r\n            if (this._leftCheckeds) {\r\n                return Object.keys(this._leftCheckeds).length > 0;\r\n            } else {\r\n                return false;\r\n            }\r\n        } else {\r\n            if (this._rightCheckeds) {\r\n                return Object.keys(this._rightCheckeds).length > 0;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    rightDataChecked(item, emit = true) {\r\n        const isCheck = this.isChecked(item, 'R');\r\n        if (isCheck) {\r\n            if (this.showCheckbox) {\r\n                delete this._rightCheckeds[item[this.idField]];\r\n            } else {\r\n                this._rightCheckeds = {};\r\n            }\r\n            return;\r\n        } else {\r\n            if (this.showCheckbox) {\r\n                this._rightCheckeds = this._rightCheckeds || {};\r\n            } else {\r\n                this._rightCheckeds = {};\r\n            }\r\n            this._rightCheckeds[item[this.idField]] = item;\r\n        }\r\n        this.cd.detectChanges();\r\n        this.selected.emit({ selected: !isCheck, data: item });\r\n    }\r\n\r\n    selectItem(id, emit = true) {\r\n        if (this.selections && this.selections.length) {\r\n            const item = this.selections.find(n => n[this.idField] === id);\r\n            if (item) {\r\n                this.rightDataChecked(item, emit);\r\n            }\r\n        }\r\n    }\r\n\r\n    private clearSelections() {\r\n\r\n    }\r\n\r\n    /**\r\n     * å°æ ç»ææ°æ®è½¬æ¢ä¸ºæå¹³æ°ç»\r\n     * @param nodes æ èç¹æ°ç»\r\n     * @param r æ°çç©ºæ°ç»\r\n     */\r\n    private convertTreeDataToPlainData(nodes: TreeNode[], r: any[] = []) {\r\n        if (nodes) {\r\n            nodes.forEach(n => {\r\n                r.push(n);\r\n                if (n.children) {\r\n                    this.convertTreeDataToPlainData(n.children, r);\r\n                }\r\n            });\r\n        }\r\n\r\n        return r;\r\n    }\r\n\r\n    //#region å·¦å³ç§»å¨\r\n\r\n    private moveItem() {\r\n        this.beforeMove.subscribe((obj: any) => {\r\n            const items = obj.items;\r\n            const ids = Object.keys(items);\r\n            let direction = 1;\r\n            switch (obj.target) {\r\n                case 'right':\r\n                    Object.keys(items).forEach(id => {\r\n                        if (!this._rightData.find(n => n[this.idField].toString() === id)) {\r\n                            this._rightData.push(items[id]);\r\n                        }\r\n                    });\r\n                    this._rightData = [...this._rightData];\r\n                    if (this.isTree()) {\r\n                        this.tt.clearAll();\r\n                    }\r\n                    direction = 1;\r\n                    break;\r\n                case 'rightAll':\r\n                    items.forEach(data => {\r\n                        if (this._rightData.findIndex(n => n[this.idField] === data[this.idField]) === -1) {\r\n                            this._rightData.push(data);\r\n                        }\r\n                    });\r\n                    if (this.isTree()) {\r\n                        this.tt.clearAll();\r\n                    }\r\n\r\n                    direction = 1;\r\n                    break;\r\n                case 'left':\r\n                    this._rightData = this._rightData.filter(v => {\r\n                        return ids.indexOf('' + v[this.idField]) === -1;\r\n                    });\r\n                    this._rightCheckeds = {};\r\n                    ids.forEach(id => {\r\n                        delete this._leftCheckeds[id];\r\n                    });\r\n                    direction = -1;\r\n\r\n                    if (this.isTree()) {\r\n                        this.tt.findRowNodes(ids).forEach(n => {\r\n                            n.node.selectable = true;\r\n                        });\r\n                        this.tt.unCheckedNodes(ids, true);\r\n                    }\r\n\r\n                    break;\r\n                case 'leftAll':\r\n                    this._rightCheckeds = {};\r\n                    this._rightData = [];\r\n                    direction = -1;\r\n                    this._leftCheckeds = {};\r\n                    if (this.isTree()) {\r\n                        this.tt.clearAll();\r\n                        this.tt.findRowNodes(ids).forEach(n => {\r\n                            n.node.selectable = true;\r\n                        });\r\n                    }\r\n                    break;\r\n            }\r\n\r\n            this.selectionsChange();\r\n            this.changeSelectIds(direction);\r\n\r\n            this.afterMove.emit(Object.values(items));\r\n        });\r\n    }\r\n\r\n\r\n    /** å³ç§» */\r\n    moveToRight(moveData?: any) {\r\n\r\n        if (moveData) {\r\n            this.beforeMove.emit({ items: { [moveData[this.idField]]: moveData }, target: 'right' });\r\n        } else {\r\n            if (this.hasCheckeds('L')) {\r\n                if (this.isTree()) {\r\n                    this._leftCheckeds = {};\r\n\r\n                    if (!this.tt.checkeds.filter(n => this._rightData.findIndex(r => r.id === n.id) === -1 ).length) {\r\n                        this.mesagerSer.warning(this.noDataMoveMessage);\r\n                        return;        \r\n                    }\r\n\r\n                    this.tt.checkeds.forEach(n => {\r\n                        this._leftCheckeds[n.data[this.idField]] = n.data;\r\n                    });\r\n\r\n                    this.tt.selections.forEach(n => {\r\n                        this._leftCheckeds[n.id] = n.data;\r\n                    });\r\n\r\n                } else {\r\n                    const newCheckeds = Object.keys(this._leftCheckeds).filter(id => {\r\n                        return this._rightData.findIndex(n => n.id === id) === -1\r\n                    });\r\n                    if (!newCheckeds.length) {\r\n                        this.mesagerSer.warning(this.noDataMoveMessage);\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                this.beforeMove.emit({ items: this._leftCheckeds, target: 'right' });\r\n            } else {\r\n                this.mesagerSer.warning(this.noDataMoveMessage);\r\n            }\r\n        }\r\n    }\r\n\r\n    /** å¨é¨å³ç§» */\r\n    moveAllToRight() {\r\n        if (this.searchValue === '') {\r\n            this._rightData = [];\r\n        }\r\n        if (this.displayType === 'List') {\r\n            const items = this.dataSource;\r\n            // if (this.searchValue && this._leftCheckeds) {\r\n            //     const checkids = Object.keys(this._leftCheckeds);\r\n            //     if (checkids.length) {\r\n            //         checkids.forEach(id => {\r\n            //             if (!items.find(n => n[this.idField] === id)) {\r\n            //                 items.push(this._leftCheckeds[id]);\r\n            //             }\r\n            //         });\r\n            //     }\r\n            // }\r\n            this.beforeMove.emit({ items , target: 'rightAll' });\r\n        } else {\r\n            if (!this.searchValue) {\r\n                let _dataSource = [];\r\n                this.convertTreeDataToPlainData(this.dataSource, _dataSource);\r\n                _dataSource = _dataSource.filter(n => n.selectable && (n.visible || n.visible === undefined)).map(n => n.data);\r\n\r\n                this.beforeMove.emit({ items: _dataSource, target: 'rightAll' });\r\n            } else {\r\n                const _dataSource = this.tt.serializedValue.map(n => n.node.data);\r\n                this.beforeMove.emit({ items: _dataSource, target: 'rightAll' });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    /** å·¦ç§» */\r\n    moveToLeft(moveData?: any) {\r\n\r\n        if (moveData) {\r\n            this.beforeMove.emit({ items: { [moveData[this.idField]]: moveData }, target: 'left' });\r\n        } else {\r\n            if (this.hasCheckeds('R')) {\r\n                this.beforeMove.emit({ items: this._rightCheckeds, target: 'left' });\r\n            } else {\r\n                this.mesagerSer.warning(this.noDataMoveMessage);\r\n            }\r\n        }\r\n    }\r\n\r\n    /** å¨é¨å·¦ç§» */\r\n    moveAllToLeft() {\r\n        this.beforeMove.emit({ items: this._rightData, target: 'leftAll' });\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region ä¸ä¸ç§»å¨æ¾ç¤ºåé¡ºåº\r\n\r\n    _getSelectInfo() {\r\n        if (this.hasCheckeds('R')) {\r\n            const key = Object.keys(this._rightCheckeds)[0];\r\n            const index = this._rightData.findIndex(c => '' + c[this.idField] === key);\r\n            return {\r\n                key, index\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n    /** ç½®é¡¶ */\r\n    moveTop() {\r\n        const obj = this._getSelectInfo();\r\n        if (obj) {\r\n            this._rightData.unshift(this._rightData[obj.index]);\r\n            this._rightData.splice(obj.index + 1, 1);\r\n            this.selectionsChange();\r\n            this.changeSelectIds(0);\r\n        } else {\r\n            this.mesagerSer.warning(this.noDataMoveMessage);\r\n        }\r\n    }\r\n\r\n    /** ä¸ç§» */\r\n    moveUp() {\r\n        if (this.hasCheckeds('R')) {\r\n            const obj = this._getSelectInfo();\r\n            if (obj) {\r\n                const index = obj.index;\r\n                if (index !== 0) {\r\n                    const tempArr = this._rightData.splice(index, 1);\r\n                    this._rightData.splice(index - 1, 0, ...tempArr);\r\n                }\r\n                this.selectionsChange();\r\n                this.changeSelectIds(0);\r\n            }\r\n        } else {\r\n            this.mesagerSer.warning(this.noDataMoveMessage);\r\n        }\r\n    }\r\n\r\n    /** ä¸ç§» */\r\n    moveDown() {\r\n        if (this.hasCheckeds('R')) {\r\n            const obj = this._getSelectInfo();\r\n            if (obj) {\r\n                const len = this._rightData.length;\r\n                const index = obj.index;\r\n                if (index === 0 || index !== len - 1) {\r\n                    const tempArr = this._rightData.splice(index, 1);\r\n                    this._rightData.splice(index + 1, 0, ...tempArr);\r\n                }\r\n                this.changeSelectIds(0);\r\n                this.selectionsChange();\r\n            }\r\n        } else {\r\n            this.mesagerSer.warning(this.noDataMoveMessage);\r\n        }\r\n    }\r\n\r\n    /** ç½®åº */\r\n    moveBottom() {\r\n        const obj = this._getSelectInfo();\r\n        if (obj) {\r\n            this._rightData.push(this._rightCheckeds[obj.key]);\r\n            this._rightData.splice(obj.index, 1);\r\n            this.changeSelectIds(0);\r\n            this.selectionsChange();\r\n        } else {\r\n            this.mesagerSer.warning(this.noDataMoveMessage);\r\n        }\r\n    }\r\n    /**\r\n     * è§¦åéæ©ä¸­id\r\n     * @param number 1ä»£è¡¨å·¦ä¾§æ°æ®å³ç§»ï¼-1,ä»£è¡¨æ°æ®å·¦ç§»ï¼0ä»£è¡¨ä¸ç§»ä¸ç§»\r\n     */\r\n    private changeSelectIds(number: number) {\r\n        const ids = this._rightData.map(item => {\r\n            return item[this.idField];\r\n        });\r\n\r\n        if (number === 0) {\r\n            if (typeof this.selectedId === 'string') {\r\n                this.selectedId = ids.join(',');\r\n            } else if (Array.isArray(this.selectedId)) {\r\n                this.selectedId = ids;\r\n            }\r\n            this.selectedIdChange.emit(this.selectedId);\r\n            return;\r\n        }\r\n\r\n        if (!this.selectedId) {\r\n            this.selectedId = [];\r\n        }\r\n\r\n        if (number === 1 || number === -1) {\r\n            if (!ids.length) {\r\n                this.selectedId = [];\r\n            } else {\r\n                this.selectedId = ids;\r\n            }\r\n\r\n            if (this.isTree()) {\r\n                if (ids && ids.length) {\r\n                    this.tt.checkedNodes(ids, true, false, true);\r\n                }\r\n            }\r\n        }\r\n        this.canCheckLength = this.getCanCheckLength();\r\n        this.selectedIdChange.emit(this.selectedId);\r\n    }\r\n\r\n    //#endregion\r\n\r\n    private selectionsChange() {\r\n        this.dataChange.emit(this._rightData);\r\n        this.cd.detectChanges();\r\n    }\r\n\r\n    getText(item, textField = this.textField) {\r\n        if (item) {\r\n            if (this.commonUtils && this.commonUtils.getValue && textField) {\r\n                return this.commonUtils.getValue(textField, item);\r\n            } else {\r\n                return item[textField];\r\n            }\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    getValue(item, valueField = this.valueField) {\r\n        if (item) {\r\n            if (this.commonUtils && this.commonUtils.getValue && valueField) {\r\n                return this.commonUtils.getValue(valueField, item);\r\n            } else {\r\n                return item[valueField];\r\n            }\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    trackByItems = (index, item) => {\r\n        return index;\r\n    }\r\n\r\n}\r\n\r\n\r\n@Component({\r\n    selector: 'display-text',\r\n    template: `\r\n        <ng-container *ngIf=\"template\" >\r\n            <ng-container\r\n                *ngTemplateOutlet=\"template; context: {$implicit: data,instance: ms, side: side, selected: ms.isChecked(data, 'R') }\">\r\n            </ng-container>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"!template\">\r\n            {{ _getText(data) }}\r\n        </ng-container>\r\n    `\r\n})\r\nexport class DisplayTextComponent implements OnInit {\r\n    @Input() template: TemplateRef<any>;\r\n    @Input() data: any;\r\n    @Input() side = 'L';\r\n\r\n    constructor(public ms: MultiSelectComponent) { }\r\n\r\n    ngOnInit() {\r\n        // console.log(this.data);\r\n    }\r\n\r\n    _getText(item) {\r\n        return this.ms.getText(item);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LocaleModule } from '@farris/ui-locale';\r\nimport { PerfectScrollbarModule } from '@farris/ui-perfect-scrollbar';\r\nimport { TreeTableModule } from '@farris/ui-treetable';\r\nimport { FarrisCommonModule } from '@farris/ui-common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MultiSelectComponent, DisplayTextComponent } from './multi-select.component';\r\nimport { MessagerModule } from '@farris/ui-messager';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        PerfectScrollbarModule,\r\n        FarrisCommonModule,\r\n        TreeTableModule,\r\n        LocaleModule,\r\n        FormsModule,\r\n        MessagerModule.forRoot()\r\n    ],\r\n    declarations: [MultiSelectComponent, DisplayTextComponent],\r\n    exports: [\r\n        MultiSelectComponent,\r\n        DisplayTextComponent,\r\n        FarrisCommonModule\r\n    ],\r\n    providers: [],\r\n})\r\nexport class MultiSelectModule { }\r\n"],"names":[],"mappings":"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"}
