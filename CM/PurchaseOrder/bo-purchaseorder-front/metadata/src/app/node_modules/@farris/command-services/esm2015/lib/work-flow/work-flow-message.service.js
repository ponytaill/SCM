import { Injectable } from "@angular/core";
export class WorkFlowMessageService {
    constructor() {
        this.messageHandler = (callback) => {
            return (event) => {
                var message = event.data;
                if (message) {
                    message.sender = event.source;
                }
                if (typeof callback === 'function') {
                    callback(message);
                }
            };
        };
    }
    /**
     * 监听工作流消息
     * @param callback 回调
     */
    listen(callback) {
        this.handler = this.messageHandler(callback);
        window.addEventListener('message', this.handler);
    }
    destroy() {
        if (this.handler) {
            window.removeEventListener('message', this.handler);
        }
    }
    /**
     * 给工作流表单发送消息
     * @param message
     */
    send(message) {
        if (!message) {
            return;
        }
        let win = window;
        if (message.target) {
            win = message.target || window;
            delete message.target;
        }
        if (win) {
            win.postMessage(message, '*');
        }
    }
}
WorkFlowMessageService.decorators = [
    { type: Injectable }
];
/** @nocollapse */
WorkFlowMessageService.ctorParameters = () => [];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid29yay1mbG93LW1lc3NhZ2Uuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvY29tbWFuZC1zZXJ2aWNlcy8iLCJzb3VyY2VzIjpbImxpYi93b3JrLWZsb3cvd29yay1mbG93LW1lc3NhZ2Uuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBSTNDLE1BQU0sT0FBTyxzQkFBc0I7SUFHakM7UUFDRSxJQUFJLENBQUMsY0FBYyxHQUFHLENBQUMsUUFBd0MsRUFBRSxFQUFFO1lBQ2pFLE9BQU8sQ0FBQyxLQUFVLEVBQUUsRUFBRTtnQkFDcEIsSUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLElBQXlCLENBQUM7Z0JBQzlDLElBQUksT0FBTyxFQUFFO29CQUNYLE9BQU8sQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDLE1BQU0sQ0FBQztpQkFDL0I7Z0JBQ0QsSUFBSSxPQUFPLFFBQVEsS0FBSyxVQUFVLEVBQUU7b0JBQ2xDLFFBQVEsQ0FBQyxPQUFPLENBQUMsQ0FBQztpQkFDbkI7WUFDSCxDQUFDLENBQUE7UUFDSCxDQUFDLENBQUE7SUFDSCxDQUFDO0lBQ0Q7OztPQUdHO0lBQ0ksTUFBTSxDQUFDLFFBQXdDO1FBQ3BELElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUM3QyxNQUFNLENBQUMsZ0JBQWdCLENBQUMsU0FBUyxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUNuRCxDQUFDO0lBQ00sT0FBTztRQUNaLElBQUksSUFBSSxDQUFDLE9BQU8sRUFBRTtZQUNoQixNQUFNLENBQUMsbUJBQW1CLENBQUMsU0FBUyxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztTQUNyRDtJQUVILENBQUM7SUFDRDs7O09BR0c7SUFDSSxJQUFJLENBQUMsT0FBMEI7UUFDcEMsSUFBSSxDQUFDLE9BQU8sRUFBRTtZQUNaLE9BQU87U0FDUjtRQUNELElBQUksR0FBRyxHQUFXLE1BQU0sQ0FBQztRQUN6QixJQUFJLE9BQU8sQ0FBQyxNQUFNLEVBQUU7WUFDbEIsR0FBRyxHQUFHLE9BQU8sQ0FBQyxNQUFnQixJQUFJLE1BQU0sQ0FBQztZQUN6QyxPQUFPLE9BQU8sQ0FBQyxNQUFNLENBQUM7U0FDdkI7UUFDRCxJQUFJLEdBQUcsRUFBRTtZQUNQLEdBQUcsQ0FBQyxXQUFXLENBQUMsT0FBTyxFQUFFLEdBQUcsQ0FBQyxDQUFDO1NBQy9CO0lBQ0gsQ0FBQzs7O1lBL0NGLFVBQVUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IFdvcmtGbG93IH0gZnJvbSBcIi4vdHlwZXNcIjtcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFdvcmtGbG93TWVzc2FnZVNlcnZpY2Uge1xuICBwcml2YXRlIG1lc3NhZ2VIYW5kbGVyOiAoY2FsbGJhY2s6IChlOiBXb3JrRmxvdy5JTWVzc2FnZSkgPT4gdm9pZCkgPT4gKGV2ZW50OiBhbnkpID0+IHZvaWQ7XG4gIHByaXZhdGUgaGFuZGxlcjogKGV2ZW50OiBhbnkpID0+IHZvaWQ7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMubWVzc2FnZUhhbmRsZXIgPSAoY2FsbGJhY2s6IChlOiBXb3JrRmxvdy5JTWVzc2FnZSkgPT4gdm9pZCkgPT4ge1xuICAgICAgcmV0dXJuIChldmVudDogYW55KSA9PiB7XG4gICAgICAgIHZhciBtZXNzYWdlID0gZXZlbnQuZGF0YSBhcyBXb3JrRmxvdy5JTWVzc2FnZTtcbiAgICAgICAgaWYgKG1lc3NhZ2UpIHtcbiAgICAgICAgICBtZXNzYWdlLnNlbmRlciA9IGV2ZW50LnNvdXJjZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodHlwZW9mIGNhbGxiYWNrID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgY2FsbGJhY2sobWVzc2FnZSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgLyoqXG4gICAqIOebkeWQrOW3peS9nOa1gea2iOaBr1xuICAgKiBAcGFyYW0gY2FsbGJhY2sg5Zue6LCDXG4gICAqL1xuICBwdWJsaWMgbGlzdGVuKGNhbGxiYWNrOiAoZTogV29ya0Zsb3cuSU1lc3NhZ2UpID0+IHZvaWQpIHtcbiAgICB0aGlzLmhhbmRsZXIgPSB0aGlzLm1lc3NhZ2VIYW5kbGVyKGNhbGxiYWNrKTtcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignbWVzc2FnZScsIHRoaXMuaGFuZGxlcik7XG4gIH1cbiAgcHVibGljIGRlc3Ryb3koKSB7XG4gICAgaWYgKHRoaXMuaGFuZGxlcikge1xuICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21lc3NhZ2UnLCB0aGlzLmhhbmRsZXIpO1xuICAgIH1cblxuICB9XG4gIC8qKlxuICAgKiDnu5nlt6XkvZzmtYHooajljZXlj5HpgIHmtojmga9cbiAgICogQHBhcmFtIG1lc3NhZ2UgXG4gICAqL1xuICBwdWJsaWMgc2VuZChtZXNzYWdlOiBXb3JrRmxvdy5JTWVzc2FnZSk6IHZvaWQge1xuICAgIGlmICghbWVzc2FnZSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBsZXQgd2luOiBXaW5kb3cgPSB3aW5kb3c7XG4gICAgaWYgKG1lc3NhZ2UudGFyZ2V0KSB7XG4gICAgICB3aW4gPSBtZXNzYWdlLnRhcmdldCBhcyBXaW5kb3cgfHwgd2luZG93O1xuICAgICAgZGVsZXRlIG1lc3NhZ2UudGFyZ2V0O1xuICAgIH1cbiAgICBpZiAod2luKSB7XG4gICAgICB3aW4ucG9zdE1lc3NhZ2UobWVzc2FnZSwgJyonKTtcbiAgICB9XG4gIH1cbn0iXX0=