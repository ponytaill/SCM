/**
 * 变量解析服务
 * 职责：
 * 1、解析字符串中的变量，并替换成相应的值；
 * 2、对表达式进行求值。
 *
 * @todo 对表达式求值的部分和表达式功能重叠，是否转移到表达式中？
 */
var VariableParseService = /** @class */ (function () {
    /**
     * 构造变量解析服务
     * @param parsers 解析器集合
     */
    function VariableParseService(parsers) {
        this.parsers = parsers;
    }
    /**
     * 解析表达式
     * @param expression 表达式
     * @param context 上下文
     */
    VariableParseService.prototype.parse = function (target, context) {
        var _this = this;
        if (typeof target === 'string' && target.length > 0) {
            // 字符串，直接解析
            return this.parseExpression(target, context);
        }
        else if (Array.isArray(target)) {
            // 遍历数组
            target.forEach(function (item, itemIndex) {
                if (typeof item === 'string') {
                    target[itemIndex] = _this.parseExpression(item, context);
                }
                else {
                    target[itemIndex] = _this.parse(item, context);
                }
            });
        }
        else if (typeof target === 'object' && target !== null) {
            // 遍历对象可枚举属性
            var keys = Object.keys(target);
            keys.forEach(function (key) {
                if (typeof target[key] === 'string') {
                    target[key] = _this.parseExpression(target[key], context);
                }
                else {
                    target[key] = _this.parse(target[key], context);
                }
            });
        }
        return target;
    };
    /**
     * 表达式求值
     */
    VariableParseService.prototype.evaluate = function (expression, context) {
        var parsedExpression = this.parse(expression, context);
        return (new Function('return ' + parsedExpression))();
    };
    /**
     * 解析表达式
     * @param expression 表达式
     * @param context 上下文
     */
    VariableParseService.prototype.parseExpression = function (expression, context) {
        // 空串直接返回
        if (expression === '') {
            return '';
        }
        this.parsers.forEach(function (parser) {
            if (typeof expression === 'string') {
                expression = parser.parse(expression, context);
            }
        });
        return expression;
    };
    return VariableParseService;
}());
export { VariableParseService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmFyaWFibGVfcGFyc2Vfc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvbW9iaWxlLWRldmtpdC8iLCJzb3VyY2VzIjpbImxpYi92YXJpYWJsZS92YXJpYWJsZV9wYXJzZV9zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQVFBOzs7Ozs7O0dBT0c7QUFDSDtJQU9FOzs7T0FHRztJQUNILDhCQUFZLE9BQXlCO1FBQ25DLElBQUksQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDO0lBQ3pCLENBQUM7SUFFRDs7OztPQUlHO0lBQ0ksb0NBQUssR0FBWixVQUFhLE1BQVcsRUFBRSxPQUFhO1FBQXZDLGlCQStCQztRQTlCQyxJQUFJLE9BQU8sTUFBTSxLQUFLLFFBQVEsSUFBSSxNQUFNLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtZQUVuRCxXQUFXO1lBQ1gsT0FBTyxJQUFJLENBQUMsZUFBZSxDQUFDLE1BQU0sRUFBRSxPQUFPLENBQUMsQ0FBQztTQUU5QzthQUFNLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsRUFBRTtZQUVoQyxPQUFPO1lBQ1AsTUFBTSxDQUFDLE9BQU8sQ0FBQyxVQUFDLElBQUksRUFBRSxTQUFTO2dCQUM3QixJQUFJLE9BQU8sSUFBSSxLQUFLLFFBQVEsRUFBRTtvQkFDNUIsTUFBTSxDQUFDLFNBQVMsQ0FBQyxHQUFHLEtBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxFQUFFLE9BQU8sQ0FBQyxDQUFDO2lCQUN6RDtxQkFBTTtvQkFDTCxNQUFNLENBQUMsU0FBUyxDQUFDLEdBQUcsS0FBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsT0FBTyxDQUFDLENBQUM7aUJBQy9DO1lBQ0gsQ0FBQyxDQUFDLENBQUM7U0FFSjthQUFNLElBQUksT0FBTyxNQUFNLEtBQUssUUFBUSxJQUFJLE1BQU0sS0FBSyxJQUFJLEVBQUU7WUFFeEQsWUFBWTtZQUNaLElBQU0sSUFBSSxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDakMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxVQUFBLEdBQUc7Z0JBQ2QsSUFBSSxPQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsS0FBSyxRQUFRLEVBQUU7b0JBQ25DLE1BQU0sQ0FBQyxHQUFHLENBQUMsR0FBRyxLQUFJLENBQUMsZUFBZSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsRUFBRSxPQUFPLENBQUMsQ0FBQztpQkFDMUQ7cUJBQU07b0JBQ0wsTUFBTSxDQUFDLEdBQUcsQ0FBQyxHQUFHLEtBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxFQUFFLE9BQU8sQ0FBQyxDQUFDO2lCQUNoRDtZQUNILENBQUMsQ0FBQyxDQUFDO1NBQ0o7UUFFRCxPQUFPLE1BQU0sQ0FBQztJQUNoQixDQUFDO0lBRUQ7O09BRUc7SUFDSSx1Q0FBUSxHQUFmLFVBQWdCLFVBQWtCLEVBQUUsT0FBYTtRQUMvQyxJQUFNLGdCQUFnQixHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsVUFBVSxFQUFFLE9BQU8sQ0FBQyxDQUFDO1FBQ3pELE9BQU8sQ0FBQyxJQUFJLFFBQVEsQ0FBQyxTQUFTLEdBQUcsZ0JBQWdCLENBQUMsQ0FBQyxFQUFFLENBQUM7SUFDeEQsQ0FBQztJQUVEOzs7O09BSUc7SUFDSyw4Q0FBZSxHQUF2QixVQUF3QixVQUFrQixFQUFFLE9BQVk7UUFFdEQsU0FBUztRQUNULElBQUksVUFBVSxLQUFLLEVBQUUsRUFBRTtZQUNyQixPQUFPLEVBQUUsQ0FBQztTQUNYO1FBRUQsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsVUFBQSxNQUFNO1lBQ3pCLElBQUksT0FBTyxVQUFVLEtBQUssUUFBUSxFQUFFO2dCQUNsQyxVQUFVLEdBQUcsTUFBTSxDQUFDLEtBQUssQ0FBQyxVQUFVLEVBQUUsT0FBTyxDQUFDLENBQUM7YUFDaEQ7UUFDSCxDQUFDLENBQUMsQ0FBQztRQUNILE9BQU8sVUFBVSxDQUFDO0lBQ3BCLENBQUM7SUFDSCwyQkFBQztBQUFELENBQUMsQUFoRkQsSUFnRkM7QUFFRCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiDlj5jph4/op6PmnpDmnI3liqFcclxuICogQGF1dGhvciBXaXR0PGppd3RAaW5zcHVyLmNvbT5cclxuICovXHJcbmltcG9ydCB7IFZhcmlhYmxlUGFyc2VyLCBWQVJJQUJMRV9QQVJTRVJTIH0gZnJvbSAnLi92YXJpYWJsZV9wYXJzZXInO1xyXG5pbXBvcnQgeyBJbmplY3RvciAgfSBmcm9tICcuLi9jb3JlL2luZGV4JztcclxuXHJcblxyXG4vKipcclxuICog5Y+Y6YeP6Kej5p6Q5pyN5YqhXHJcbiAqIOiBjOi0o++8mlxyXG4gKiAx44CB6Kej5p6Q5a2X56ym5Liy5Lit55qE5Y+Y6YeP77yM5bm25pu/5o2i5oiQ55u45bqU55qE5YC877ybXHJcbiAqIDLjgIHlr7nooajovr7lvI/ov5vooYzmsYLlgLzjgIJcclxuICpcclxuICogQHRvZG8g5a+56KGo6L6+5byP5rGC5YC855qE6YOo5YiG5ZKM6KGo6L6+5byP5Yqf6IO96YeN5Y+g77yM5piv5ZCm6L2s56e75Yiw6KGo6L6+5byP5Lit77yfXHJcbiAqL1xyXG5jbGFzcyBWYXJpYWJsZVBhcnNlU2VydmljZSB7XHJcblxyXG4gIC8qKlxyXG4gICAqIOino+aekOWZqOmbhuWQiFxyXG4gICAqL1xyXG4gIHByaXZhdGUgcGFyc2VyczogVmFyaWFibGVQYXJzZXJbXTtcclxuXHJcbiAgLyoqXHJcbiAgICog5p6E6YCg5Y+Y6YeP6Kej5p6Q5pyN5YqhXHJcbiAgICogQHBhcmFtIHBhcnNlcnMg6Kej5p6Q5Zmo6ZuG5ZCIXHJcbiAgICovXHJcbiAgY29uc3RydWN0b3IocGFyc2VyczogVmFyaWFibGVQYXJzZXJbXSkge1xyXG4gICAgdGhpcy5wYXJzZXJzID0gcGFyc2VycztcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOino+aekOihqOi+vuW8j1xyXG4gICAqIEBwYXJhbSBleHByZXNzaW9uIOihqOi+vuW8j1xyXG4gICAqIEBwYXJhbSBjb250ZXh0IOS4iuS4i+aWh1xyXG4gICAqL1xyXG4gIHB1YmxpYyBwYXJzZSh0YXJnZXQ6IGFueSwgY29udGV4dD86IGFueSk6IGFueSB7XHJcbiAgICBpZiAodHlwZW9mIHRhcmdldCA9PT0gJ3N0cmluZycgJiYgdGFyZ2V0Lmxlbmd0aCA+IDApIHtcclxuXHJcbiAgICAgIC8vIOWtl+espuS4su+8jOebtOaOpeino+aekFxyXG4gICAgICByZXR1cm4gdGhpcy5wYXJzZUV4cHJlc3Npb24odGFyZ2V0LCBjb250ZXh0KTtcclxuXHJcbiAgICB9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkodGFyZ2V0KSkge1xyXG5cclxuICAgICAgLy8g6YGN5Y6G5pWw57uEXHJcbiAgICAgIHRhcmdldC5mb3JFYWNoKChpdGVtLCBpdGVtSW5kZXgpID0+ICB7XHJcbiAgICAgICAgaWYgKHR5cGVvZiBpdGVtID09PSAnc3RyaW5nJykge1xyXG4gICAgICAgICAgdGFyZ2V0W2l0ZW1JbmRleF0gPSB0aGlzLnBhcnNlRXhwcmVzc2lvbihpdGVtLCBjb250ZXh0KTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgdGFyZ2V0W2l0ZW1JbmRleF0gPSB0aGlzLnBhcnNlKGl0ZW0sIGNvbnRleHQpO1xyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcblxyXG4gICAgfSBlbHNlIGlmICh0eXBlb2YgdGFyZ2V0ID09PSAnb2JqZWN0JyAmJiB0YXJnZXQgIT09IG51bGwpIHtcclxuXHJcbiAgICAgIC8vIOmBjeWOhuWvueixoeWPr+aemuS4vuWxnuaAp1xyXG4gICAgICBjb25zdCBrZXlzID0gT2JqZWN0LmtleXModGFyZ2V0KTtcclxuICAgICAga2V5cy5mb3JFYWNoKGtleSA9PiB7XHJcbiAgICAgICAgaWYgKHR5cGVvZiB0YXJnZXRba2V5XSA9PT0gJ3N0cmluZycpIHtcclxuICAgICAgICAgIHRhcmdldFtrZXldID0gdGhpcy5wYXJzZUV4cHJlc3Npb24odGFyZ2V0W2tleV0sIGNvbnRleHQpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICB0YXJnZXRba2V5XSA9IHRoaXMucGFyc2UodGFyZ2V0W2tleV0sIGNvbnRleHQpO1xyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHRhcmdldDtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOihqOi+vuW8j+axguWAvFxyXG4gICAqL1xyXG4gIHB1YmxpYyBldmFsdWF0ZShleHByZXNzaW9uOiBzdHJpbmcsIGNvbnRleHQ/OiBhbnkpOiBhbnkge1xyXG4gICAgY29uc3QgcGFyc2VkRXhwcmVzc2lvbiA9IHRoaXMucGFyc2UoZXhwcmVzc2lvbiwgY29udGV4dCk7XHJcbiAgICByZXR1cm4gKG5ldyBGdW5jdGlvbigncmV0dXJuICcgKyBwYXJzZWRFeHByZXNzaW9uKSkoKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOino+aekOihqOi+vuW8j1xyXG4gICAqIEBwYXJhbSBleHByZXNzaW9uIOihqOi+vuW8j1xyXG4gICAqIEBwYXJhbSBjb250ZXh0IOS4iuS4i+aWh1xyXG4gICAqL1xyXG4gIHByaXZhdGUgcGFyc2VFeHByZXNzaW9uKGV4cHJlc3Npb246IHN0cmluZywgY29udGV4dDogYW55KTogc3RyaW5nIHtcclxuXHJcbiAgICAvLyDnqbrkuLLnm7TmjqXov5Tlm55cclxuICAgIGlmIChleHByZXNzaW9uID09PSAnJykge1xyXG4gICAgICByZXR1cm4gJyc7XHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy5wYXJzZXJzLmZvckVhY2gocGFyc2VyID0+IHtcclxuICAgICAgaWYgKHR5cGVvZiBleHByZXNzaW9uID09PSAnc3RyaW5nJykge1xyXG4gICAgICAgIGV4cHJlc3Npb24gPSBwYXJzZXIucGFyc2UoZXhwcmVzc2lvbiwgY29udGV4dCk7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gICAgcmV0dXJuIGV4cHJlc3Npb247XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgeyBWYXJpYWJsZVBhcnNlU2VydmljZSB9O1xyXG4iXX0=