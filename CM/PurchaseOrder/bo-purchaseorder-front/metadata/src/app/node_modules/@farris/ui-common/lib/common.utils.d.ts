import { DataColumn } from '@farris/ui-common/column';
export declare class CommonUtils {
    private cfs;
    constructor();
    /**
     * 获取对象中指定字段的值。 field: 可以为带有层级结构的路径，如： user.firstName | name 等
     * data: 获取字段的数据源，一般为JSON对象
     * safe: 为true, 将html字符进行转码输出，默认为 false
     */
    getValue(field: string, data: any, safe?: boolean): any;
    /**
     * 更新指定对象中某个字段的值
     * @param obj 被更新对象
     * @param field 被更新字段
     * @param val 新值
     * @param nest 是否为嵌套，默认为 true
     */
    setValue(obj: {
        [key: string]: any;
    }, field: string, val: any, nest?: boolean): void;
    getEnumItem(value: any, enumData: any[], valueField: any): any;
    private _getEnumTitleFromColumn;
    getEnumTitle(col: DataColumn, data: any): any;
    getEnumTitleFromColumnOptions(value: any, opts: any): any;
    escapeHtml(str: any): any;
    unescapeHtml(str: any): any;
    private formatterValue;
    /** 获取字符串在页面中的真实宽度 */
    getTextWidth(txt: string, font: any): number;
    removeStyleSheet(id: string): void;
    createStyleSheet(styleSheetId: string): HTMLStyleElement;
    getStyleSheet(styleSheetId: any): any;
    appendCssRules(rules: string[], styleSheet: any): void;
    getCssRule(ruleName: string, styleSheet: any): any;
    removeCssRule(ruleName: string, styleSheet: any): any;
    isNullOrUndefined(val: any): boolean;
    isIE(): boolean;
    buildSortString(sorts: any[]): string;
    buildSqlWhere(conditions: any[]): string;
    getBrowserType(): {
        ie: boolean;
        op: boolean;
        sa: boolean;
        ch: boolean;
        ff: boolean;
    };
    getFFVer(): number;
}
