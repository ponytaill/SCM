const IS_ADD = 'IS_ADD';
const LAST_MODIFIED_ID = 'LAST_MODIFIED_ID';
/**
 * 表单状态工具类
 * @internal
 */
class EditStateUtil {
    /**
     * 获取当前行id
     */
    static getLastModifiedId(frameContext) {
        // const lastModifiedId = AppParamUtil.get(frameContext, LAST_MODIFIED_ID);
        const virtualRootFrameContext = frameContext.getVirtualRootFrameContext();
        let lastModifiedId = null;
        if (virtualRootFrameContext) {
            lastModifiedId = virtualRootFrameContext.getParam(LAST_MODIFIED_ID);
            return lastModifiedId ? lastModifiedId : null;
        }
        return lastModifiedId;
    }
    /**
     * 设置最后修改的id
     */
    static setLastModifiedId(frameContext, lastModifiedId) {
        // AppParamUtil.set(frameContext, LAST_MODIFIED_ID, lastModifiedId);
        const virtualRootFrameContext = frameContext.getVirtualRootFrameContext();
        if (virtualRootFrameContext) {
            virtualRootFrameContext.setParam(LAST_MODIFIED_ID, lastModifiedId);
        }
    }
    /**
     * 获取新增状态
     */
    static getAddState(frameContext) {
        // return AppParamUtil.get(frameContext, IS_ADD);
        const virtualRootFrameContext = frameContext.getVirtualRootFrameContext();
        if (virtualRootFrameContext) {
            return virtualRootFrameContext.getParam(IS_ADD);
        }
    }
    /**
     * 设置新增状态
     */
    static setAddState(frameContext, lastModifiedId) {
        // AppParamUtil.set(frameContext, IS_ADD, true);
        const virtualRootFrameContext = frameContext.getVirtualRootFrameContext();
        if (virtualRootFrameContext) {
            virtualRootFrameContext.setParam(IS_ADD, true);
        }
        this.setLastModifiedId(frameContext, lastModifiedId);
    }
    /**
     * 取消新增状态
     */
    static cancelAddState(frameContext) {
        // AppParamUtil.set(frameContext, IS_ADD, false);
        const virtualRootFrameContext = frameContext.getVirtualRootFrameContext();
        if (virtualRootFrameContext) {
            virtualRootFrameContext.setParam(IS_ADD, false);
        }
    }
    /**
     * 设置编辑状态
     */
    static setEditState(frameContext, id) {
        // AppParamUtil.set(frameContext, IS_ADD, false);
        const virtualRootFrameContext = frameContext.getVirtualRootFrameContext();
        if (virtualRootFrameContext) {
            virtualRootFrameContext.setParam(IS_ADD, false);
        }
        this.setLastModifiedId(frameContext, id);
    }
}
export { EditStateUtil };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWRpdC1zdGF0ZS51dGlsLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy9jb21tYW5kLXNlcnZpY2VzLyIsInNvdXJjZXMiOlsibGliL2RhdGEtc2VydmljZXMvdXRpbHMvZWRpdC1zdGF0ZS51dGlsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBLE1BQU0sTUFBTSxHQUFHLFFBQVEsQ0FBQztBQUN4QixNQUFNLGdCQUFnQixHQUFHLGtCQUFrQixDQUFDO0FBRTVDOzs7R0FHRztBQUNILE1BQU0sYUFBYTtJQUVmOztPQUVHO0lBQ0ksTUFBTSxDQUFDLGlCQUFpQixDQUFDLFlBQTBCO1FBQ3RELDJFQUEyRTtRQUMzRSxNQUFNLHVCQUF1QixHQUFHLFlBQVksQ0FBQywwQkFBMEIsRUFBRSxDQUFDO1FBQzFFLElBQUksY0FBYyxHQUFHLElBQUksQ0FBQztRQUMxQixJQUFJLHVCQUF1QixFQUFFO1lBQ3pCLGNBQWMsR0FBRyx1QkFBdUIsQ0FBQyxRQUFRLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztZQUNwRSxPQUFPLGNBQWMsQ0FBQyxDQUFDLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7U0FDakQ7UUFDRCxPQUFPLGNBQWMsQ0FBQztJQUMxQixDQUFDO0lBRUQ7O09BRUc7SUFDSSxNQUFNLENBQUMsaUJBQWlCLENBQUMsWUFBMEIsRUFBRSxjQUFzQjtRQUM5RSxvRUFBb0U7UUFDcEUsTUFBTSx1QkFBdUIsR0FBRyxZQUFZLENBQUMsMEJBQTBCLEVBQUUsQ0FBQztRQUMxRSxJQUFJLHVCQUF1QixFQUFFO1lBQ3pCLHVCQUF1QixDQUFDLFFBQVEsQ0FBQyxnQkFBZ0IsRUFBRSxjQUFjLENBQUMsQ0FBQztTQUN0RTtJQUNMLENBQUM7SUFFRDs7T0FFRztJQUNJLE1BQU0sQ0FBQyxXQUFXLENBQUMsWUFBMEI7UUFDaEQsaURBQWlEO1FBQ2pELE1BQU0sdUJBQXVCLEdBQUcsWUFBWSxDQUFDLDBCQUEwQixFQUFFLENBQUM7UUFDMUUsSUFBSSx1QkFBdUIsRUFBRTtZQUN6QixPQUFPLHVCQUF1QixDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQztTQUNuRDtJQUNMLENBQUM7SUFFRDs7T0FFRztJQUNJLE1BQU0sQ0FBQyxXQUFXLENBQUMsWUFBMEIsRUFBRSxjQUFzQjtRQUN4RSxnREFBZ0Q7UUFDaEQsTUFBTSx1QkFBdUIsR0FBRyxZQUFZLENBQUMsMEJBQTBCLEVBQUUsQ0FBQztRQUMxRSxJQUFJLHVCQUF1QixFQUFFO1lBQ3pCLHVCQUF1QixDQUFDLFFBQVEsQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUM7U0FDbEQ7UUFDRCxJQUFJLENBQUMsaUJBQWlCLENBQUMsWUFBWSxFQUFFLGNBQWMsQ0FBQyxDQUFDO0lBQ3pELENBQUM7SUFFRDs7T0FFRztJQUNJLE1BQU0sQ0FBQyxjQUFjLENBQUMsWUFBMEI7UUFDbkQsaURBQWlEO1FBQ2pELE1BQU0sdUJBQXVCLEdBQUcsWUFBWSxDQUFDLDBCQUEwQixFQUFFLENBQUM7UUFDMUUsSUFBSSx1QkFBdUIsRUFBRTtZQUN6Qix1QkFBdUIsQ0FBQyxRQUFRLENBQUMsTUFBTSxFQUFFLEtBQUssQ0FBQyxDQUFDO1NBQ25EO0lBQ0wsQ0FBQztJQUVEOztPQUVHO0lBQ0ksTUFBTSxDQUFDLFlBQVksQ0FBQyxZQUEwQixFQUFFLEVBQVU7UUFDN0QsaURBQWlEO1FBQ2pELE1BQU0sdUJBQXVCLEdBQUcsWUFBWSxDQUFDLDBCQUEwQixFQUFFLENBQUM7UUFDMUUsSUFBSSx1QkFBdUIsRUFBRTtZQUN6Qix1QkFBdUIsQ0FBQyxRQUFRLENBQUMsTUFBTSxFQUFFLEtBQUssQ0FBQyxDQUFDO1NBQ25EO1FBQ0QsSUFBSSxDQUFDLGlCQUFpQixDQUFDLFlBQVksRUFBRSxFQUFFLENBQUMsQ0FBQztJQUM3QyxDQUFDO0NBQ0o7QUFFRCxPQUFPLEVBQUUsYUFBYSxFQUFFLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBGcmFtZUNvbnRleHQgfSBmcm9tICdAZmFycmlzL2RldmtpdCc7XG5pbXBvcnQgeyBBcHBQYXJhbVV0aWwgfSBmcm9tICcuL2FwcC1wYXJhbS51dGlsJztcblxuY29uc3QgSVNfQUREID0gJ0lTX0FERCc7XG5jb25zdCBMQVNUX01PRElGSUVEX0lEID0gJ0xBU1RfTU9ESUZJRURfSUQnO1xuXG4vKipcbiAqIOihqOWNleeKtuaAgeW3peWFt+exu1xuICogQGludGVybmFsXG4gKi9cbmNsYXNzIEVkaXRTdGF0ZVV0aWwge1xuXG4gICAgLyoqXG4gICAgICog6I635Y+W5b2T5YmN6KGMaWRcbiAgICAgKi9cbiAgICBwdWJsaWMgc3RhdGljIGdldExhc3RNb2RpZmllZElkKGZyYW1lQ29udGV4dDogRnJhbWVDb250ZXh0KTogc3RyaW5nIHtcbiAgICAgICAgLy8gY29uc3QgbGFzdE1vZGlmaWVkSWQgPSBBcHBQYXJhbVV0aWwuZ2V0KGZyYW1lQ29udGV4dCwgTEFTVF9NT0RJRklFRF9JRCk7XG4gICAgICAgIGNvbnN0IHZpcnR1YWxSb290RnJhbWVDb250ZXh0ID0gZnJhbWVDb250ZXh0LmdldFZpcnR1YWxSb290RnJhbWVDb250ZXh0KCk7XG4gICAgICAgIGxldCBsYXN0TW9kaWZpZWRJZCA9IG51bGw7XG4gICAgICAgIGlmICh2aXJ0dWFsUm9vdEZyYW1lQ29udGV4dCkge1xuICAgICAgICAgICAgbGFzdE1vZGlmaWVkSWQgPSB2aXJ0dWFsUm9vdEZyYW1lQ29udGV4dC5nZXRQYXJhbShMQVNUX01PRElGSUVEX0lEKTtcbiAgICAgICAgICAgIHJldHVybiBsYXN0TW9kaWZpZWRJZCA/IGxhc3RNb2RpZmllZElkIDogbnVsbDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbGFzdE1vZGlmaWVkSWQ7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog6K6+572u5pyA5ZCO5L+u5pS555qEaWRcbiAgICAgKi9cbiAgICBwdWJsaWMgc3RhdGljIHNldExhc3RNb2RpZmllZElkKGZyYW1lQ29udGV4dDogRnJhbWVDb250ZXh0LCBsYXN0TW9kaWZpZWRJZDogc3RyaW5nKTogdm9pZCB7XG4gICAgICAgIC8vIEFwcFBhcmFtVXRpbC5zZXQoZnJhbWVDb250ZXh0LCBMQVNUX01PRElGSUVEX0lELCBsYXN0TW9kaWZpZWRJZCk7XG4gICAgICAgIGNvbnN0IHZpcnR1YWxSb290RnJhbWVDb250ZXh0ID0gZnJhbWVDb250ZXh0LmdldFZpcnR1YWxSb290RnJhbWVDb250ZXh0KCk7XG4gICAgICAgIGlmICh2aXJ0dWFsUm9vdEZyYW1lQ29udGV4dCkge1xuICAgICAgICAgICAgdmlydHVhbFJvb3RGcmFtZUNvbnRleHQuc2V0UGFyYW0oTEFTVF9NT0RJRklFRF9JRCwgbGFzdE1vZGlmaWVkSWQpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog6I635Y+W5paw5aKe54q25oCBXG4gICAgICovXG4gICAgcHVibGljIHN0YXRpYyBnZXRBZGRTdGF0ZShmcmFtZUNvbnRleHQ6IEZyYW1lQ29udGV4dCwgKTogYm9vbGVhbiB7XG4gICAgICAgIC8vIHJldHVybiBBcHBQYXJhbVV0aWwuZ2V0KGZyYW1lQ29udGV4dCwgSVNfQUREKTtcbiAgICAgICAgY29uc3QgdmlydHVhbFJvb3RGcmFtZUNvbnRleHQgPSBmcmFtZUNvbnRleHQuZ2V0VmlydHVhbFJvb3RGcmFtZUNvbnRleHQoKTtcbiAgICAgICAgaWYgKHZpcnR1YWxSb290RnJhbWVDb250ZXh0KSB7XG4gICAgICAgICAgICByZXR1cm4gdmlydHVhbFJvb3RGcmFtZUNvbnRleHQuZ2V0UGFyYW0oSVNfQUREKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOiuvue9ruaWsOWinueKtuaAgVxuICAgICAqL1xuICAgIHB1YmxpYyBzdGF0aWMgc2V0QWRkU3RhdGUoZnJhbWVDb250ZXh0OiBGcmFtZUNvbnRleHQsIGxhc3RNb2RpZmllZElkOiBzdHJpbmcpOiB2b2lkIHtcbiAgICAgICAgLy8gQXBwUGFyYW1VdGlsLnNldChmcmFtZUNvbnRleHQsIElTX0FERCwgdHJ1ZSk7XG4gICAgICAgIGNvbnN0IHZpcnR1YWxSb290RnJhbWVDb250ZXh0ID0gZnJhbWVDb250ZXh0LmdldFZpcnR1YWxSb290RnJhbWVDb250ZXh0KCk7XG4gICAgICAgIGlmICh2aXJ0dWFsUm9vdEZyYW1lQ29udGV4dCkge1xuICAgICAgICAgICAgdmlydHVhbFJvb3RGcmFtZUNvbnRleHQuc2V0UGFyYW0oSVNfQURELCB0cnVlKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnNldExhc3RNb2RpZmllZElkKGZyYW1lQ29udGV4dCwgbGFzdE1vZGlmaWVkSWQpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOWPlua2iOaWsOWinueKtuaAgVxuICAgICAqL1xuICAgIHB1YmxpYyBzdGF0aWMgY2FuY2VsQWRkU3RhdGUoZnJhbWVDb250ZXh0OiBGcmFtZUNvbnRleHQpIHtcbiAgICAgICAgLy8gQXBwUGFyYW1VdGlsLnNldChmcmFtZUNvbnRleHQsIElTX0FERCwgZmFsc2UpO1xuICAgICAgICBjb25zdCB2aXJ0dWFsUm9vdEZyYW1lQ29udGV4dCA9IGZyYW1lQ29udGV4dC5nZXRWaXJ0dWFsUm9vdEZyYW1lQ29udGV4dCgpO1xuICAgICAgICBpZiAodmlydHVhbFJvb3RGcmFtZUNvbnRleHQpIHtcbiAgICAgICAgICAgIHZpcnR1YWxSb290RnJhbWVDb250ZXh0LnNldFBhcmFtKElTX0FERCwgZmFsc2UpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog6K6+572u57yW6L6R54q25oCBXG4gICAgICovXG4gICAgcHVibGljIHN0YXRpYyBzZXRFZGl0U3RhdGUoZnJhbWVDb250ZXh0OiBGcmFtZUNvbnRleHQsIGlkOiBzdHJpbmcpIHtcbiAgICAgICAgLy8gQXBwUGFyYW1VdGlsLnNldChmcmFtZUNvbnRleHQsIElTX0FERCwgZmFsc2UpO1xuICAgICAgICBjb25zdCB2aXJ0dWFsUm9vdEZyYW1lQ29udGV4dCA9IGZyYW1lQ29udGV4dC5nZXRWaXJ0dWFsUm9vdEZyYW1lQ29udGV4dCgpO1xuICAgICAgICBpZiAodmlydHVhbFJvb3RGcmFtZUNvbnRleHQpIHtcbiAgICAgICAgICAgIHZpcnR1YWxSb290RnJhbWVDb250ZXh0LnNldFBhcmFtKElTX0FERCwgZmFsc2UpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuc2V0TGFzdE1vZGlmaWVkSWQoZnJhbWVDb250ZXh0LCBpZCk7XG4gICAgfVxufVxuXG5leHBvcnQgeyBFZGl0U3RhdGVVdGlsIH07XG4iXX0=