{"version":3,"file":"farris-ui-forms.umd.js.map","sources":["ng://@farris/ui-forms/lib/radio/radio-group.component.ts","ng://@farris/ui-forms/lib/radio/radio.component.ts","ng://@farris/ui-forms/lib/radio/radio-button.component.ts","ng://@farris/ui-forms/lib/radio/radiogroup.component.ts","ng://@farris/ui-forms/lib/checkbox/checkbox-group.component.ts","ng://@farris/ui-forms/lib/checkbox/checkbox.component.ts","ng://@farris/ui-forms/lib/checkbox/checkboxgroup.component.ts","ng://@farris/ui-forms/lib/textarea-autosize.directive.ts","ng://@farris/ui-forms/lib/textarea-wordcount.directive.ts","ng://@farris/ui-forms/lib/textarea-zoom.directive.ts","ng://@farris/ui-forms/lib/input-append.directive.ts","ng://@farris/ui-forms/lib/shortcut-tab.directive.ts","ng://@farris/ui-forms/lib/forms.module.ts"],"sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter, forwardRef, HostBinding } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\nimport { IdService } from '@farris/ui-common';\r\n@Component({\r\n    selector: 'farris-radio-group',\r\n    template: `\r\n    <div class=\"farris-radio-group btn-group\"\r\n    [class.farris-input-wrap]=\"type!=='button'\"\r\n    [class.btn-group-toggle]=\"type==='button'\"\r\n    [class.farris-checkradio-hor]=\"horizontal\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  `,\r\n    providers: [{\r\n        provide: NG_VALUE_ACCESSOR,\r\n        useExisting: forwardRef(() => RadioGroupComponent),\r\n        multi: true,\r\n    }],\r\n    styles: [`\r\n    `],\r\n})\r\nexport class RadioGroupComponent implements OnInit, ControlValueAccessor {\r\n    /* radio ç±»å */\r\n    @Input() type: string;\r\n\r\n    /* åå§å radio çå¼ */\r\n    @Input() model: any;\r\n\r\n    @Input() name: string;\r\n\r\n    @Input() horizontal: boolean;\r\n\r\n    @Output() modelChange = new EventEmitter<any>();\r\n\r\n    // tslint:disable-next-line:ban-types\r\n    subscriber: Function[] = [];\r\n\r\n    constructor(private idSer: IdService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.name = this.idSer.generate().replace(/-/g, '_');\r\n    }\r\n\r\n    changeModel(value: any) {\r\n        this.model = value;\r\n        this.modelChange.emit(this.model);\r\n        this.controlChange(value);\r\n    }\r\n\r\n    writeValue(value: any): void {\r\n        this.model = value;\r\n        this.changeModel(this.model);\r\n    }\r\n\r\n    registerOnChange(fn: Function): void {\r\n        this.controlChange = fn\r\n    }\r\n\r\n    registerOnTouched(fn: Function): void {\r\n        this.controlTouch = fn\r\n    }\r\n\r\n    private controlChange: Function = () => { }\r\n    private controlTouch: Function = () => { }\r\n\r\n}\r\n","import { Component, Input, Output, EventEmitter, forwardRef, Optional, ElementRef, HostBinding, ChangeDetectorRef, OnInit } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { RadioGroupComponent } from './radio-group.component';\r\n\r\n@Component({\r\n  selector: 'farris-radio',\r\n  templateUrl: './radio.component.html',\r\n  styleUrls: ['./radio.component.css'],\r\n  providers: [{\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => RadioComponent),\r\n    multi: true,\r\n  }]\r\n  // changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class RadioComponent implements ControlValueAccessor, OnInit {\r\n\r\n  /* radio åçname ç¨äºå¤ä¸ªradioåéä½¿ç¨ */\r\n  // get name() {\r\n  //   if (this.hasParent(this.el.nativeElement)) {\r\n  //     return this.radioGroup.name;\r\n  //   }\r\n  // }\r\n \r\n  /* radio å¼ */\r\n  @Input()\r\n  get model(): any {\r\n    if (this.hasParent(this.el.nativeElement)) {\r\n      return this.radioGroup.model;\r\n    }\r\n    return this.nyModel;\r\n  }\r\n\r\n  set model(model: any) {\r\n    this.nyModel = model;\r\n  }\r\n\r\n\r\n  @Input() id: string;\r\n\r\n  /* radio å¼ */\r\n  @Input() label: any = '';\r\n\r\n  /* ç¦ç¨ */\r\n  @Input() disabled: boolean;\r\n\r\n  nyModel: any;\r\n\r\n  name = '';\r\n\r\n  @Output() modelChange = new EventEmitter<any>();\r\n\r\n  @HostBinding('class.d-block') blockClass = true;\r\n\r\n  constructor(\r\n    @Optional() private radioGroup: RadioGroupComponent,\r\n    private el: ElementRef\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.name = this.radioGroup.name;\r\n  }\r\n\r\n  changeModelHandler() {\r\n    // ç¶åç´ è·ålabel  å­åç´ åä»ç¶åç´ è·åmodel\r\n    if (this.hasParent(this.el.nativeElement)) {\r\n      return this.radioGroup.changeModel(this.label);\r\n    }\r\n    this.model = this.label;\r\n    this.modelChange.emit(this.model);\r\n    this.controlChange(this.label);\r\n  }\r\n\r\n  /* æ¯å¦å­å¨ç¶åç´   å­å¨å³åéç»*/\r\n  hasParent(element: any) {\r\n    return element.parentElement.classList.contains('farris-radio-group');\r\n  }\r\n\r\n  writeValue(value: any): void {\r\n    this.model = value;\r\n  }\r\n\r\n  registerOnChange(fn: Function): void {\r\n    this.controlChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: Function): void {\r\n    this.controlTouch = fn;\r\n  }\r\n\r\n  private controlChange: Function = () => { };\r\n  private controlTouch: Function = () => { };\r\n\r\n}\r\n","import { Component, Input, Output, EventEmitter, forwardRef, Optional, ElementRef, ViewEncapsulation, OnInit } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { RadioGroupComponent } from './radio-group.component';\r\nimport { HostBinding } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'farris-radio-button',\r\n    template: `\r\n    <label [class]=\"'btn btn-'+type\" [class.active]=\"isGroupModel()\" [class.disabled]=\"disabled\">\r\n        <input class=\"custom-control-input\" [name]=\"name\" [value]=\"label\"\r\n        [ngModel]=\"model\" (ngModelChange)=\"changeModelHandler()\" type=\"radio\" [disabled]=\"disabled\">\r\n          <ng-content>\r\n          </ng-content>\r\n    </label>\r\n  `,\r\n    styles: [\r\n        `\r\n        .farris-radio-button>.btn{\r\n            margin-left:-1px\r\n          }\r\n          .farris-radio-button>.btn.active, .farris-radio-button>.btn:hover{\r\n            position: relative;\r\n          }\r\n      `\r\n    ],\r\n    providers: [{\r\n        provide: NG_VALUE_ACCESSOR,\r\n        useExisting: forwardRef(() => RadioButtonComponent),\r\n        multi: true,\r\n    }],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class RadioButtonComponent implements ControlValueAccessor, OnInit {\r\n\r\n    /* radio åçname ç¨äºå¤ä¸ªradioåéä½¿ç¨ */\r\n    // get name() {\r\n\r\n    // }\r\n    name = '';\r\n\r\n    /* æé®ç±»å */\r\n    @Input()\r\n    type = 'secondary';\r\n\r\n    /* radio å¼ */\r\n    @Input()\r\n    get model(): any {\r\n        if (this.hasParent(this.el.nativeElement)) {\r\n            return this.radioGroup.model;\r\n        }\r\n        return this.nyModel;\r\n    }\r\n\r\n    set model(model: any) {\r\n        this.nyModel = model;\r\n    }\r\n\r\n\r\n    @Input()\r\n    id: string;\r\n\r\n    /* radio å¼ */\r\n    @Input()\r\n    label: any = '';\r\n\r\n    /* ç¦ç¨ */\r\n    @Input()\r\n    disabled: boolean;\r\n\r\n    nyModel: any;\r\n\r\n    @Output()\r\n    modelChange = new EventEmitter<any>();\r\n\r\n\r\n    @HostBinding('class.farris-radio-button')\r\n    get farrisRadioButtonClass() { return true; }\r\n\r\n    constructor(\r\n        @Optional() public radioGroup: RadioGroupComponent,\r\n        private el: ElementRef\r\n    ) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.name = this.hasParent(this.el.nativeElement) ? this.radioGroup.name : '';\r\n    }\r\n\r\n    isGroupModel() {\r\n        return this.label === this.radioGroup.model;\r\n    }\r\n\r\n    changeModelHandler() {\r\n        // ç¶åç´ è·ålabel  å­åç´ åä»ç¶åç´ è·åmodel\r\n        if (this.hasParent(this.el.nativeElement)) {\r\n            return this.radioGroup.changeModel(this.label);\r\n        }\r\n        this.model = this.label;\r\n        this.modelChange.emit(this.model);\r\n        this.controlChange(this.label);\r\n    }\r\n\r\n    /* æ¯å¦å­å¨ç¶åç´   å­å¨å³åéç»*/\r\n    hasParent(element: any) {\r\n        return element.parentElement.classList.contains('farris-input-wrap') || element.parentElement.classList.contains('btn-group');\r\n    }\r\n\r\n    writeValue(value: any): void {\r\n        this.model = value;\r\n    }\r\n\r\n    registerOnChange(fn: Function): void {\r\n        this.controlChange = fn\r\n    }\r\n\r\n    registerOnTouched(fn: Function): void {\r\n        this.controlTouch = fn\r\n    }\r\n\r\n    private controlChange: Function = () => { }\r\n    private controlTouch: Function = () => { }\r\n\r\n}\r\n","import { Component, Input, forwardRef, OnInit, EventEmitter, Optional, Injector } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, RadioControlValueAccessor } from '@angular/forms';\r\nimport { IdService, CommonUtils } from '@farris/ui-common';\r\nimport { Radio } from './radio';\r\nimport { Output } from '@angular/core';\r\n@Component({\r\n    selector: 'farris-radiogroup',\r\n    templateUrl: './radiogroup.component.html',\r\n    providers: [{\r\n        provide: NG_VALUE_ACCESSOR,\r\n        useExisting: forwardRef(() => FarrisRadioGroupComponent),\r\n        multi: true,\r\n    }],\r\n    exportAs: 'FarrisRadioGroupComponent'\r\n})\r\nexport class FarrisRadioGroupComponent implements ControlValueAccessor, OnInit {\r\n    @Input('tab-index') tabIndex: number;\r\n    /* radio æ°ç» */\r\n    @Input() data: Radio[] = [];\r\n\r\n    /* radio ç±»å   åçæèæé®ç±»å*/\r\n    @Input() type: string;\r\n\r\n    /* nameæ è¯ */\r\n    @Input() name: string;\r\n\r\n    /* æ°´å¹³æå */\r\n    @Input() horizontal: boolean;\r\n\r\n    /* ç¦ç¨ */\r\n    @Input() disabled: boolean;\r\n\r\n    /* radio å¼ */\r\n    @Input() value: any;\r\n    @Input() textField = 'name';\r\n    @Input() valueField = 'value';\r\n    /* ç¹å»äºä»¶ */\r\n    @Output() changeValue = new EventEmitter<any>();\r\n    private commonUtils: CommonUtils;\r\n    constructor(private idSer: IdService, @Optional() private inject: Injector) {\r\n        if (this.inject) {\r\n            this.commonUtils = this.inject.get(CommonUtils);\r\n        }\r\n    }\r\n\r\n\r\n    ngOnInit() {\r\n        this.name = this.idSer.generate().replace(/-/g, '_');\r\n    }\r\n\r\n    clickHandler(item: any) {\r\n        let val = this._getValue(item);\r\n        if(this.value == val) return;\r\n        // æ´æ¹controlçå¼\r\n        this.value = val;\r\n        this.controlChange(this.value);\r\n        this.controlTouch(this.value);\r\n        this.changeValue.emit(this.value);\r\n    }\r\n\r\n    _getText(item) {\r\n        if (item) {\r\n            if (this.commonUtils && this.commonUtils.getValue) {\r\n                return this.commonUtils.getValue(this.textField, item);\r\n            } else {\r\n                return item[this.textField];\r\n            }\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    _getValue(item) {\r\n        if (item) {\r\n            if (this.commonUtils && this.commonUtils.getValue) {\r\n                return this.commonUtils.getValue(this.valueField, item);\r\n            } else {\r\n                return item[this.valueField];\r\n            }\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n\r\n    writeValue(value: any): void {\r\n        this.value = value;\r\n    }\r\n\r\n    registerOnChange(fn: () => void): void {\r\n        this.controlChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: () => void): void {\r\n        this.controlTouch = fn;\r\n    }\r\n\r\n    private controlChange: (value: any) => void = () => { };\r\n    private controlTouch: (value: any) => void = () => { };\r\n\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, forwardRef } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\nimport { IdService } from '@farris/ui-common';\r\n@Component({\r\n    selector: 'farris-checkbox-group',\r\n    template: `\r\n    <div class=\"farris-input-wrap\" [class.farris-checkradio-hor]=\"horizontal\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  `,\r\n    providers: [{\r\n        provide: NG_VALUE_ACCESSOR,\r\n        useExisting: forwardRef(() => CheckboxGroupComponent),\r\n        multi: true,\r\n    }],\r\n    styles: [],\r\n})\r\nexport class CheckboxGroupComponent implements OnInit, ControlValueAccessor {\r\n\r\n    /* åå§å checkbox çå¼ */\r\n    @Input()\r\n    model = [];\r\n\r\n    /* è®¾ç½®é»è®¤nameå¼ */\r\n    @Input()\r\n    name: string;\r\n\r\n    /* æ§ä»¶æ°´å¹³æå */\r\n    @Input()\r\n    horizontal: boolean;\r\n\r\n    /*  */\r\n    @Output()\r\n    modelChange = new EventEmitter<any>();\r\n\r\n    constructor(private idSer: IdService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.name = this.idSer.generate();\r\n    }\r\n\r\n    changeModel(value: any) {\r\n        const index = this.model.findIndex(ele => {\r\n            return ele === value;\r\n        });\r\n        // å¦æå·²ç»éä¸­  åè®¾ç½®ä¸ºä¸éä¸­\r\n        if (index > -1) {\r\n            this.model.splice(index, 1);\r\n            return this.modelChange.emit(this.model);\r\n        }\r\n        // å¦ææ²¡æéä¸­  è®¾ç½®ä¸ºéä¸­\r\n        this.model.push(value);\r\n        // controlçå¼è®¾ç½®ä¸ºéå·åéçå­ç¬¦ä¸²  ä¾¿äºå­å¨åä¼ é\r\n        this.controlChange(this.model.join());\r\n        this.modelChange.emit(this.model);\r\n    }\r\n    writeValue(value: any): void {\r\n        this.model = value\r\n        this.changeModel(this.model)\r\n    }\r\n\r\n    registerOnChange(fn: Function): void {\r\n        this.controlChange = fn\r\n    }\r\n\r\n    registerOnTouched(fn: Function): void {\r\n        this.controlTouch = fn\r\n    }\r\n\r\n    private controlChange: Function = () => { }\r\n    private controlTouch: Function = () => { }\r\n\r\n}\r\n","import { Component, OnInit, Input, ElementRef, forwardRef, Output, EventEmitter } from '@angular/core';\r\nimport { CheckboxGroupComponent } from './checkbox-group.component';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\n@Component({\r\n  selector: 'farris-checkbox',\r\n  templateUrl: './checkbox.component.html',\r\n  providers: [{\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => CheckboxComponent),\r\n    multi: true,\r\n  }],\r\n  styles: ['./checkbox.component.css']\r\n})\r\nexport class CheckboxComponent implements OnInit, ControlValueAccessor {\r\n\r\n   /* radio åçname ç¨äºå¤ä¸ªradioåéä½¿ç¨ */\r\n   get name() {\r\n    if (this.hasParent(this.el.nativeElement)) {\r\n      return this.checkbox.name;\r\n    }\r\n    return '';\r\n  }\r\n\r\n  /* model */\r\n  @Input()\r\n  get model() {\r\n    if (this.hasParent(this.el.nativeElement)) {\r\n      return this.checkbox.model.find(ele => {\r\n        return ele === this.label;\r\n      });\r\n    }\r\n    return this.nyModel;\r\n  }\r\n\r\n  set model(model: any) {\r\n    this.nyModel = model;\r\n  }\r\n\r\n  /* checkboxå¼ */\r\n  @Input()\r\n  label: any;\r\n\r\n  /* ç¦ç¨ */\r\n  @Input()\r\n  disabled: boolean;\r\n\r\n  @Output()\r\n  modelChange = new EventEmitter<any>();\r\n  nyModel: any;\r\n  constructor(\r\n    private checkbox: CheckboxGroupComponent,\r\n    private el: ElementRef) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  /* å¼ä¼ é */\r\n  changeModelHandler() {\r\n    // ç¶åç´ è·ålabel  å­åç´ åä»ç¶åç´ è·åmodel\r\n    if (this.hasParent(this.el.nativeElement)) {\r\n      return this.checkbox.changeModel(this.label);\r\n    }\r\n    this.model = this.label;\r\n    this.modelChange.emit(this.model);\r\n    this.controlChange(this.label);\r\n  }\r\n\r\n\r\n  /* æ¯å¦å­å¨ç¶åç´   å­å¨å³åéç»*/\r\n  hasParent(element: any) {\r\n    return element.parentElement.classList.contains('farris-input-wrap');\r\n  }\r\n\r\n  writeValue(value: any): void {\r\n    this.model = value;\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.controlChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    this.controlTouch = fn;\r\n  }\r\n  private controlChange: Function = () => { }\r\n  private controlTouch: Function = () => { }\r\n\r\n}\r\n","import { OnDestroy, SimpleChanges, OnChanges, Optional, Injector } from '@angular/core';\r\n/*\r\n * @Author: è¡çæ´(Yuyang)\r\n * @Date: 2019-08-29\r\n * @LastEditors:  è¡çæ´(Yuyang)\r\n * @LastEditTime: 2019-08-29\r\n * @QQ: 664927877\r\n * @Version: v0.0.8\r\n */\r\nimport { Component, Input, forwardRef, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\nimport { IdService, CommonUtils } from '@farris/ui-common';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, Subscription } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'farris-checkboxgroup',\r\n    templateUrl: './checkboxgroup.component.html',\r\n    providers: [{\r\n        provide: NG_VALUE_ACCESSOR,\r\n        useExisting: forwardRef(() => FarrisCheckboxGroupComponent),\r\n        multi: true,\r\n    }],\r\n    exportAs: 'FarrisCheckboxGroupComponent'\r\n})\r\nexport class FarrisCheckboxGroupComponent implements ControlValueAccessor, OnInit, OnDestroy, OnChanges {\r\n\r\n    @Input('tab-index') tabIndex = 0;\r\n\r\n    /* radio æ°ç» */\r\n    @Input() data: any[] = [];\r\n\r\n    /* checkbox ç±»å   åçæèæé®ç±»å*/\r\n    @Input() type: string;\r\n\r\n    /* å¤éæ¡name */\r\n    @Input() name: string;\r\n\r\n    /* æ¯å¦æ°´å¹³åå¸ */\r\n    @Input() horizontal: boolean;\r\n\r\n    /* åéç¬¦ é»è®¤éå·*/\r\n    @Input() separator = ',';\r\n\r\n    /* ç¦ç¨ */\r\n    @Input() disable: boolean;\r\n\r\n    /* å¤éæ¡ç»çå¼ */\r\n    @Input() value: any;\r\n\r\n    /* å¼ç±»åæ¯å¦æ¯string */\r\n    @Input() isStringValue = true;\r\n\r\n    @Input() textField = 'name';\r\n    @Input() valueField = 'value';\r\n\r\n    /** å è½½æ°æ®äºä»¶ */\r\n    @Input() loadData: (emptyData?: any[]) => Observable<any>;\r\n    loadDataSubscription: Subscription;\r\n\r\n    @Output() changeValue = new EventEmitter<any>();\r\n\r\n    /* checkboxèµå¼äºä»¶ */\r\n    @Output() setCheckboxData = new EventEmitter<any>();\r\n\r\n    private commonUtils: CommonUtils;\r\n\r\n    constructor(private idSer: IdService, @Optional() private inject: Injector) {\r\n        if (this.inject) {\r\n            this.commonUtils = this.inject.get(CommonUtils);\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        // åå§åname\r\n        this.name = this.idSer.generate().replace(/-/g, '_');\r\n\r\n        this.setCheckboxData.emit(this);\r\n        // todo åå¼å¯ä»¥å®ç°promise\r\n        if (this.loadData) {\r\n            this.loadDataSubscription = this.loadData().subscribe(res => this.data = res.data);\r\n        }\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.loadDataSubscription) {\r\n            this.loadDataSubscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    _getText(item) {\r\n        if (item) {\r\n            if (this.commonUtils && this.commonUtils.getValue) {\r\n                return this.commonUtils.getValue(this.textField, item);\r\n            } else {\r\n                return item[this.textField];\r\n            }\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    _getValue(item) {\r\n        if (item) {\r\n            if (this.commonUtils && this.commonUtils.getValue) {\r\n                return this.commonUtils.getValue(this.valueField, item);\r\n            } else {\r\n                return item[this.valueField];\r\n            }\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    /* éä¸­inputå¼ */\r\n    clickHandler(item: any, index: number) {\r\n        let arrValue = this.transformToArr(this.value) || [];\r\n\r\n        const val = String(this._getValue(item));\r\n        if (!arrValue || !arrValue.length) {\r\n            arrValue.push(val);\r\n        } else {\r\n            if (arrValue.some(item => item == val)) {\r\n                arrValue = arrValue.filter(n => n !== val);\r\n            } else {\r\n                arrValue.push(val);\r\n            }\r\n        }\r\n\r\n        // æ´æ°valueå¼\r\n        this.value = this.transformToStr(arrValue);\r\n\r\n        // ä¼ å¼formcontrol\r\n        this.controlChange(this.value);\r\n        this.controlTouch(this.value);\r\n        this.changeValue.emit(this.value);\r\n    }\r\n\r\n    /* è¢«éä¸­ */\r\n    checked(item: any) {\r\n        const val = String(this._getValue(item));\r\n        const checkedValue = this.transformToArr(this.value);\r\n        // å¤å¼\r\n        return checkedValue.some(item => item == val);\r\n    }\r\n\r\n    /* å¼å°æ°ç»å¼çè½¬æ¢ */\r\n    transformToArr(value: any): string[] {\r\n        if (!value) {\r\n            return [];\r\n        }\r\n        if (!this.isStringValue) {\r\n            return value;\r\n        }\r\n\r\n        return value.split(this.separator);\r\n    }\r\n\r\n    /* å¼å°å­ç¬¦ä¸²å¼çè½¬æ¢ */\r\n    transformToStr(value: Array<string>) {\r\n\r\n        const allVals = this.data.map(n => this._getValue(n));\r\n        const r = [];\r\n        allVals.forEach(n => {\r\n            if (value.some(item => item == n)) {\r\n                r.push(n);\r\n            }\r\n        });\r\n\r\n        if (!this.isStringValue) {\r\n            return r;\r\n        }\r\n        return r.join(this.separator);\r\n    }\r\n\r\n\r\n    writeValue(value: any): void {\r\n        this.value = value;\r\n    }\r\n\r\n    /* changeæä½å¼åå  æ¹æ³éå*/\r\n    registerOnChange(fn: () => void): void {\r\n        this.controlChange = fn;\r\n    }\r\n\r\n    /* blurå¼åå  æ¹æ³éå*/\r\n    registerOnTouched(fn: () => void): void {\r\n        this.controlTouch = fn;\r\n    }\r\n\r\n    private controlChange: (value: any) => void = () => { };\r\n    private controlTouch: (value: any) => void = () => { };\r\n\r\n}\r\n","import { Directive, Input, Injector, OnInit, ElementRef, HostListener, AfterViewInit, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\n\r\n@Directive({\r\n    selector: '[auto-size]',\r\n})\r\nexport class TextareaAutoSizeDirective implements OnInit, AfterViewInit, OnChanges{\r\n    @Input('auto-size') enable = true;\r\n    @Input() maxHeight: number;\r\n\r\n    private previousValue = null;\r\n    private isUserResized = false;\r\n\r\n    private textarea;\r\n    private document;\r\n    private documentElement;\r\n    private minHeight;\r\n\r\n    constructor(private el: ElementRef, private ngControl: NgControl, private injector: Injector) {\r\n        this.textarea = this.el.nativeElement;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.init();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.enable && !changes.enable.isFirstChange()) {\r\n            this.sizeToFit();\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.minHeight = this.textarea.getBoundingClientRect().height;\r\n    }\r\n\r\n    private init() {\r\n        if (this.enable) {\r\n            this.document = this.textarea.ownerDocument;\r\n            this.documentElement = this.document.documentElement;\r\n            if (this.textarea) {\r\n                if (this.textarea.value) {\r\n                    this.sizeToFit();\r\n                }\r\n            }\r\n\r\n            if (this.ngControl) {\r\n                this.ngControl.valueChanges.subscribe(v => {\r\n                    if (v !== this.previousValue) {\r\n                        this.sizeToFit();\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    @HostListener('input')\r\n    onInput() {\r\n        this.sizeToFit();\r\n    }\r\n\r\n    @HostListener('change')\r\n    onValueChange() {\r\n        this.sizeToFit();\r\n    }\r\n\r\n\r\n    private overflowOffset() {\r\n        let offsetTop = 0;\r\n        let el = this.textarea;\r\n\r\n        while (el !== document.body && el !== null) {\r\n            offsetTop += el.offsetTop || 0;\r\n            el = el.offsetParent;\r\n        }\r\n\r\n        const top = offsetTop - document.defaultView.pageYOffset;\r\n        const bottom = this.documentElement.clientHeight - (top + this.textarea.offsetHeight);\r\n        return { top, bottom };\r\n    }\r\n\r\n    private sizeToFit() {\r\n        if (!this.enable) {\r\n            return;\r\n        }\r\n\r\n        const textarea = this.textarea;\r\n        const viewportMarginBottom = 100;\r\n        if (this.isUserResized) { return; }\r\n        if (this.textarea.value === this.previousValue) { return; }\r\n        if (this.textarea.offsetWidth <= 0 && this.textarea.offsetHeight <= 0) { return; }\r\n\r\n        // const { top, bottom } = this.overflowOffset();\r\n        // if (top < 0 || bottom < 0) {\r\n        //     return;\r\n        // }\r\n\r\n        const textareaStyle = getComputedStyle(textarea);\r\n\r\n        const topBorderWidth = Number(textareaStyle.borderTopWidth.replace(/px/, ''));\r\n        const bottomBorderWidth = Number(textareaStyle.borderBottomWidth.replace(/px/, ''));\r\n\r\n        const isBorderBox = textareaStyle.boxSizing === 'border-box';\r\n        const borderAddOn = isBorderBox ? topBorderWidth + bottomBorderWidth : 0;\r\n\r\n        // const maxHeight = Number(textareaStyle.height.replace(/px/, '')) + bottom;\r\n        // const adjustedViewportMarginBottom = bottom < viewportMarginBottom ? bottom : viewportMarginBottom;\r\n        // textarea.style.maxHeight = `${maxHeight - adjustedViewportMarginBottom}px`;\r\n\r\n        if (this.maxHeight) {\r\n            textarea.style.maxHeight = `${this.maxHeight}px`;\r\n        }\r\n\r\n        const container = textarea.parentElement;\r\n        if (container instanceof HTMLElement) {\r\n            const containerHeight = container.style.height;\r\n            container.style.height = getComputedStyle(container).height;\r\n            textarea.style.height = 'auto';\r\n\r\n            let h = textarea.scrollHeight + borderAddOn;\r\n            if (this.minHeight > h) {\r\n                h = this.minHeight;\r\n            }\r\n            textarea.style.height = `${h}px`;\r\n            container.style.height = containerHeight;\r\n        }\r\n\r\n        this.previousValue = textarea.value;\r\n    }\r\n}\r\n","import { Directive, ElementRef, Injector, Input, Renderer2,\r\n    OnInit, AfterViewInit, OnDestroy, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { EventManager } from '@angular/platform-browser';\r\nimport ResizeObserver from 'resize-observer-polyfill';\r\n@Directive({\r\n    selector: '[word-count]',\r\n    exportAs: 'WordCountRef'\r\n})\r\nexport class TextareaWordcountDirective implements OnInit, AfterViewInit, OnDestroy, OnChanges {\r\n    @Input('word-count') useWordCount = true;\r\n    /**\r\n     * ç»è®¡å­æ°çæ¹å¼ï¼ surplus å©ä½å¯è¾å¥å­æ°; length: å½åå·²è¾å¥å­æ°ï¼\r\n     *\r\n     * é»è®¤ä¸º surplus\r\n     */\r\n    @Input() countType: 'surplus' | 'length' = 'surplus';\r\n\r\n    @Input() onlyShowInDialog = false;\r\n\r\n    wordCountElement = null;\r\n    // å½åå­æ°\r\n    private currentLengthElement = null;\r\n    private eventManager: EventManager;\r\n    private ngControl: NgControl;\r\n    private onInput = null;\r\n    private localeSer: LocaleService;\r\n    private ro: ResizeObserver = null;\r\n    constructor(private el: ElementRef, private render: Renderer2, private injector: Injector) {\r\n        this.eventManager = this.injector.get(EventManager);\r\n        this.localeSer = this.injector.get(LocaleService);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.ngControl = this.injector.get(NgControl, null);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.initWordCount();\r\n        if (this.ngControl && this.useWordCount) {\r\n            this.ngControl.control.valueChanges.subscribe((e) => {\r\n                this.updateWordsCount();\r\n            });\r\n        }\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n\r\n        if (changes.useWordCount && !changes.useWordCount.isFirstChange()) {\r\n            if (this.useWordCount) {\r\n                this.initWordCount();\r\n            } else {\r\n                this.destroy();\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy();\r\n\r\n        if(this.ro) {\r\n            this.ro.disconnect();\r\n            this.ro.unobserve(this.el.nativeElement.parentElement);\r\n        }\r\n    }\r\n\r\n\r\n    private destroy() {\r\n        if (this.onInput) {\r\n            this.onInput();\r\n        }\r\n\r\n        if (this.wordCountElement) {\r\n            this.wordCountElement.remove();\r\n        }\r\n    }\r\n\r\n    initWordCount() {\r\n        if (this.useWordCount && !this.onlyShowInDialog) {\r\n            this.createWordCountElement();\r\n        }\r\n    }\r\n\r\n    private createWordCountID() {\r\n        const tagName = this.el.nativeElement.tagName;\r\n        if (this.ngControl) {\r\n            const ctrlName = this.ngControl.name;\r\n            return `${tagName}_WORDCOUNT_${ctrlName}`;\r\n        } else {\r\n            if (this.el.nativeElement.id) {\r\n                return `${tagName}_WORDCOUNT_${this.el.nativeElement.id}`;\r\n            }\r\n        }\r\n        return '';\r\n    }\r\n\r\n    private createWordCountElement() {\r\n        const max = this.el.nativeElement.maxLength;\r\n        if (!max || max < 0) {\r\n            // console.info('æªè®¾ç½®æå¤§å­ç¬¦æ°ï¼è®¡æ°åè½å¤±æã');\r\n            return;\r\n        }\r\n\r\n        const wordCountSPAN = this.render.createElement('span');\r\n        wordCountSPAN.className = 'textarea-wordcount';\r\n\r\n        const id = this.createWordCountID();\r\n        if (id) {\r\n            wordCountSPAN.id = id;\r\n        }\r\n\r\n        this.render.setStyle(wordCountSPAN, 'position', 'absolute');\r\n        this.render.setStyle(wordCountSPAN, 'bottom', '10px');\r\n\r\n        const { width, right } = this.el.nativeElement.getBoundingClientRect();\r\n        const { width: parentWidth } = this.el.nativeElement.parentElement.getBoundingClientRect();\r\n        if (parentWidth !== width) {\r\n            this.render.setStyle(wordCountSPAN, 'right', `${parentWidth - width + 10}px`);\r\n\r\n            this.ro = new ResizeObserver((entries, observer) => {\r\n                if (entries && entries[0]) {\r\n                    const _pw = entries[0].contentRect.width;\r\n\r\n                    this.render.setStyle(wordCountSPAN, 'right', `${_pw - width + 10}px`);\r\n                }\r\n            });\r\n            this.ro.observe(this.el.nativeElement.parentElement);\r\n\r\n        } else {\r\n            this.render.setStyle(wordCountSPAN, 'right', '10px');\r\n        }\r\n        this.render.setStyle(wordCountSPAN, 'cursor', 'pointer');\r\n\r\n        this.el.nativeElement.after(wordCountSPAN);\r\n        this.wordCountElement = wordCountSPAN;\r\n\r\n        const currentLengthSPAN = this.render.createElement('span');\r\n        wordCountSPAN.appendChild(currentLengthSPAN);\r\n        this.currentLengthElement = currentLengthSPAN;\r\n        currentLengthSPAN.after( ` / ${max}` );\r\n\r\n        this.updateWordsCount();\r\n        this.onInput = this.render.listen(this.el.nativeElement, 'input', () => {\r\n            // value.replace(/\\n|\\r/gi, '') // ç§»é¤æ¢è¡ç¬¦\r\n            this.updateWordsCount();\r\n        });\r\n    }\r\n\r\n    updateWordsCount() {\r\n        if (!this.useWordCount || !this.currentLengthElement) {\r\n            return;\r\n        }\r\n        const max = this.el.nativeElement.maxLength;\r\n        const val = this.countType === 'surplus' ? max - this.el.nativeElement.value.length : this.el.nativeElement.value.length;\r\n        const tip = 'messager.prompt.tips.' + this.countType;\r\n\r\n        this.currentLengthElement.innerText = val;\r\n        this.wordCountElement.title = this.localeSer.getValue(tip).replace('{0}', val);\r\n    }\r\n}\r\n","import { TextareaWordcountDirective } from './textarea-wordcount.directive';\r\nimport { NgControl } from '@angular/forms';\r\nimport { Directive, ElementRef, Renderer2, Injector, OnInit, Input,\r\n            AfterViewInit, OnDestroy, OnChanges, SimpleChanges, Optional } from '@angular/core';\r\nimport { EventManager } from '@angular/platform-browser';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { LocaleService } from '@farris/ui-locale';\r\n@Directive({\r\n    selector: '[textarea-zoom]',\r\n})\r\nexport class TextareaZoomDirective implements OnInit, AfterViewInit, OnDestroy, OnChanges {\r\n    @Input('textarea-zoom') useZoom = true;\r\n    @Input() dialogWidth = 500;\r\n    @Input() dialogHeight = 400;\r\n    @Input() fullscreen = false;\r\n    @Input() title = '';\r\n    @Input() value = '';\r\n\r\n    onMouseEnter = null;\r\n    onMouseLeave = null;\r\n    onClick = null;\r\n    altEnterHandler = null;\r\n\r\n    zoomButtonElement = null;\r\n    private messagerService: MessagerService;\r\n    private eventManager: EventManager;\r\n    private ngControl: NgControl;\r\n    private localeSer: LocaleService\r\n    constructor(private el: ElementRef, private render: Renderer2, private injector: Injector,\r\n                @Optional() private wordCountRef: TextareaWordcountDirective ) {\r\n        this.messagerService = this.injector.get(MessagerService);\r\n        this.eventManager = this.injector.get(EventManager);\r\n        this.localeSer = this.injector.get(LocaleService, null);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.ngControl = this.injector.get(NgControl, null);\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.useZoom && !changes.useZoom.isFirstChange()) {\r\n            if (this.useZoom) {\r\n                this.createZoomButton();\r\n            } else {\r\n                this.destroy();\r\n            }\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        if (this.useZoom) {\r\n            this.createZoomButton();\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy();\r\n    }\r\n\r\n    private destroy() {\r\n        if (this.onMouseEnter) {\r\n            this.onMouseEnter();\r\n        }\r\n        if (this.onMouseLeave) {\r\n            this.onMouseLeave();\r\n        }\r\n\r\n        if (this.onClick) {\r\n            this.onClick();\r\n        }\r\n        if (this.altEnterHandler) {\r\n            this.altEnterHandler();\r\n        }\r\n\r\n        if (this.zoomButtonElement) {\r\n            this.zoomButtonElement.remove();\r\n        }\r\n    }\r\n\r\n    private bindEventHandler() {\r\n        this.altEnterHandler = this.eventManager.addEventListener(this.el.nativeElement, 'keydown.alt.enter',\r\n        (event: KeyboardEvent) => {\r\n            const target = (event.target as any);\r\n            const val = target.value + '\\n';\r\n            target.value = val;\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            return false;\r\n        });\r\n    }\r\n\r\n    private createZoombarID() {\r\n        const tagName = this.el.nativeElement.tagName;\r\n        if (this.ngControl) {\r\n            const ctrlName = this.ngControl.name;\r\n            return `${tagName}_ZOOMBAR_${ctrlName}`;\r\n        } else {\r\n            if (this.el.nativeElement.id) {\r\n                return `${tagName}_ZOOMBAR_${this.el.nativeElement.id}`;\r\n            }\r\n        }\r\n        return '';\r\n    }\r\n\r\n    private createZoomButton() {\r\n        const zoomSPAN = this.render.createElement('span');\r\n        zoomSPAN.className = 'f-icon modal_maximize textarea-zoom';\r\n        zoomSPAN.title =  this.localeSer.getValue('text.zoom') || 'ç¹å»åå¼¹åºè¿è¡ç¼è¾';\r\n\r\n        \r\n\r\n        const id = this.createZoombarID();\r\n        if (id) {\r\n            zoomSPAN.id = id;\r\n        }\r\n\r\n        this.render.setStyle(zoomSPAN, 'position', 'absolute');\r\n        this.render.setStyle(zoomSPAN, 'top', '2px');\r\n\r\n        const { width } = this.el.nativeElement.getBoundingClientRect();\r\n        const { width: parentWidth } = this.el.nativeElement.parentElement.getBoundingClientRect();\r\n        if (parentWidth !== width) {\r\n            this.render.setStyle(zoomSPAN, 'left', `${width - 18}px`);\r\n        } else {\r\n            this.render.setStyle(zoomSPAN, 'right', '2px');\r\n        }\r\n        this.render.setStyle(zoomSPAN, 'cursor', 'pointer');\r\n\r\n        this.el.nativeElement.after(zoomSPAN);\r\n\r\n        this.zoomButtonElement = zoomSPAN;\r\n\r\n        this.onMouseEnter = this.render.listen(zoomSPAN, 'mouseenter', () => {\r\n            this.render.setStyle(zoomSPAN, 'fontSize', '22px');\r\n        });\r\n        this.onMouseLeave = this.render.listen(zoomSPAN, 'mouseleave', () => {\r\n            this.render.setStyle(zoomSPAN, 'fontSize', '1rem');\r\n        });\r\n\r\n        this.onClick = this.render.listen(zoomSPAN, 'click', () => {\r\n            this.zoomTextarea();\r\n        });\r\n    }\r\n\r\n    private zoomTextarea() {\r\n        const opts: any = {\r\n            width: this.dialogWidth || 500,\r\n            height: this.dialogHeight || 400,\r\n            showFontSize: true,\r\n            inputType: 'textarea',\r\n            saveSize: true    // å¯ç¨ä¸ªæ§åå­å¨ï¼localStorage\r\n        };\r\n\r\n        if (window.localStorage) {\r\n            const key = this.messagerService.getKeyString();\r\n            const val = localStorage.getItem(key);\r\n            if (val) {\r\n                const lastSetting = JSON.parse(val);\r\n                opts.fontSize = lastSetting.fontSize || 18;\r\n                opts.width = lastSetting.width || opts.width;\r\n                opts.height = lastSetting.height || opts.height;\r\n            }\r\n        }\r\n\r\n        const tagName = this.el.nativeElement.tagName;\r\n        let showText = this.el.nativeElement.value;\r\n        if (this.ngControl) {\r\n            showText = this.ngControl.value;\r\n        } else {\r\n            showText = this.el.nativeElement.value;\r\n        }\r\n\r\n        showText = this.value || showText;\r\n\r\n\r\n        if (tagName === 'FARRIS-TEXT' || this.el.nativeElement.readOnly || this.el.nativeElement.disabled) {\r\n            opts.readonly = true;\r\n            opts.showOkButton = false;\r\n            this.messagerService.prompt2(this.title, showText, opts).subscribe();\r\n        } else {\r\n            opts.maxLength = this.el.nativeElement.maxLength;\r\n            opts.enableWordCount = this.wordCountRef ? this.wordCountRef.useWordCount : false;\r\n            opts.countType = this.wordCountRef ? this.wordCountRef.countType : 'length';\r\n            this.messagerService.prompt2(this.title, showText, opts).subscribe(v => {\r\n                if (typeof v === 'boolean' && !v) {\r\n                    return;\r\n                } else {\r\n                    this.ngControl.control.setValue(v);\r\n                    if (this.wordCountRef) {\r\n                        this.wordCountRef.updateWordsCount();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n}\r\n","import {\r\n    Directive, ElementRef, Renderer2, Injector, OnInit, Input,\r\n    AfterViewInit, OnDestroy, OnChanges, SimpleChanges, Output, ViewContainerRef, TemplateRef, NgZone\r\n} from '@angular/core';\r\nimport { EventEmitter } from '@angular/core';\r\n\r\n\r\n@Directive({\r\n    selector: '[input-append]',\r\n})\r\nexport class InputAppendDirective implements OnInit, AfterViewInit, OnDestroy {\r\n    private _enableAppend = true;\r\n    // ç¸å½äºå¯ç¨ç¦ç¨æ­¤åè½\r\n    @Input('input-append')\r\n    set enableAppend(value: string | boolean) {\r\n        if (value === '' || value) {\r\n            this._enableAppend = true;\r\n            // éè¦\r\n            if (!this.appendWrapElement) {\r\n                this.createStruct();\r\n            }\r\n        } else {\r\n            this._enableAppend = false;\r\n            if (this.appendWrapElement) {\r\n                this.resetStruct();\r\n            }\r\n        }\r\n    }\r\n    get enableAppend() {\r\n        return this._enableAppend;\r\n    }\r\n    // è¿½å å°åªä¸ªç±»åä¸ TextBoxãMultiTextBoxã StaticText\r\n    @Input() inputAppendControlType = 'InputGroup';\r\n    // æ ¹æ®ç±»åä¸ä¸æ ·ï¼å¨æ§ä»¶å¤äºç¦ç¨ãåªè¯»æ¶ï¼å³å®é¢è²æ¯å¦å¯ç¨\r\n    // æä¸¤ç§ï¼æé® button ææ¬ text\r\n    private _appendType = 'button';\r\n    @Input()\r\n    set inputAppendType(value: string) {\r\n        if (value) {\r\n            if (['button', 'text'].findIndex(item => item == value) < 0) {\r\n                // ç±»åå¨æ¯æèå´å\r\n                value = 'button';\r\n            }\r\n            if (value != this._appendType) {\r\n                if (this.appendWrapElement) {\r\n                    // ç§»é¤åæ¥ï¼è¿½å æ°ç\r\n                    this.render.removeClass(this.appendWrapElement, 'input-append-' + this._appendType);\r\n                    this.render.addClass(this.appendWrapElement, 'input-append-' + value);\r\n                    if (this._appendType == 'button') {\r\n                        // åæ¥æ¯æé®\r\n                        if (this.clickHandler) {\r\n                            this.clickHandler();\r\n                            this.clickHandler = null;\r\n                        }\r\n                    } else {\r\n                        this.clickHandler = this.render.listen(this.appendWrapElement, 'click', (ev) => {\r\n                            this.inputAppendClickEvent.emit(ev);\r\n                        });\r\n                    }\r\n                }\r\n                this._appendType = value;\r\n            }\r\n        }\r\n\r\n    }\r\n    get inputAppendType() {\r\n        return this._appendType;\r\n    }\r\n    // è¿½å çææ¬\r\n    private _inputAppendText = '';\r\n    @Input()\r\n    set inputAppendText(value: string) {\r\n        if (value != this._inputAppendText) {\r\n            this._inputAppendText = value;\r\n            if (this.appendWrapElement && this._enableAppend) {\r\n                this.render.removeChild(this.appendWrapElement, this.appendTextElement);\r\n                this.appendTextElement.innerHTML = value;\r\n                this.render.appendChild(this.appendWrapElement, this.appendTextElement);\r\n            } else {\r\n                this.createStruct();\r\n            }\r\n        }\r\n    }\r\n    get inputAppendText() {\r\n        return this._inputAppendText;\r\n    }\r\n    // æ¨¡æ¿\r\n    // @Input() inputAppendTmpl: TemplateRef<any>;\r\n    private _disabled = false;\r\n    @Input()\r\n    set inputAppendDisabled(value) {\r\n        if (value != this._disabled) {\r\n            this._disabled = value;\r\n            if (this.appendWrapElement) {\r\n                value && this.render.addClass(this.appendWrapElement, this.disabledCls);\r\n                !value && this.render.removeClass(this.appendWrapElement, this.disabledCls);\r\n            }\r\n        }\r\n    }\r\n    get inputAppendDisabled() {\r\n        return this._disabled;\r\n    }\r\n\r\n    /*\r\n    * ææ¬ç¹å»äºä»¶\r\n    */\r\n    @Output() inputAppendClickEvent = new EventEmitter();\r\n    // æ è®°nativeçå¤å±\r\n    private elWrapElement = null;\r\n    // æ è®°åç´ \r\n    private appendWrapElement = null;\r\n    // ææ¶ä¸ç¨\r\n    private appendTextElement = null;\r\n    private clickHandler = null;\r\n    private disabledCls = 'f-state-disabled';\r\n    private ngZone: NgZone = null;\r\n    // private ngControl: NgControl;\r\n    constructor(private viewRef: ViewContainerRef, private el: ElementRef, private render: Renderer2, private injector: Injector) {\r\n        this.ngZone = this.injector.get(NgZone);\r\n    }\r\n\r\n    ngOnInit() {\r\n        //this.ngControl = this.injector.get(NgControl, null);\r\n    }\r\n\r\n\r\n    ngAfterViewInit() {\r\n        this.createStruct();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        //this.resetStruct();\r\n        if (this.clickHandler) {\r\n            this.clickHandler();\r\n            this.clickHandler = null;\r\n        }\r\n        if (this.appendWrapElement) {\r\n            this.appendWrapElement.remove();\r\n            this.appendWrapElement = null;\r\n        }\r\n        if (this.elWrapElement) {\r\n            this.elWrapElement.remove();\r\n            this.elWrapElement = null;\r\n        }\r\n    }\r\n    /**\r\n     * éç½®\r\n     */\r\n    private resetStruct() {\r\n        if (this.clickHandler) {\r\n            this.clickHandler();\r\n            this.clickHandler = null;\r\n        }\r\n        // åç±»åç§»é¤ä¸åæ°å¢å çç»æææ ·å¼\r\n        switch (this.inputAppendControlType) {\r\n            case 'StaticText':\r\n                this.render.removeClass(this.el.nativeElement, 'f-cmp-static-text-input-append');\r\n                break;\r\n            case 'TextBox':\r\n            case 'MultiTextBox':\r\n                if (this.elWrapElement) {\r\n                    let wrapParent = this.render.parentNode(this.elWrapElement);\r\n                    this.render.appendChild(wrapParent, this.el.nativeElement);\r\n                    this.elWrapElement.remove();\r\n                    this.elWrapElement = null;\r\n                }\r\n                break;\r\n        }\r\n        if (this.appendWrapElement) {\r\n            this.appendWrapElement.remove();\r\n            this.appendWrapElement = null;\r\n        }\r\n    }\r\n    /**\r\n     * åå»º\r\n     */\r\n    private createStruct() {\r\n        if (!this.inputAppendText || !this.enableAppend || this.appendWrapElement) {\r\n            return;\r\n        }\r\n        const buttonWrap = this.render.createElement('div');\r\n        buttonWrap.className = 'input-group-append input-append-wrapper';\r\n        buttonWrap.className += ' input-append-' + this.inputAppendType;\r\n        if (this._disabled) {\r\n            buttonWrap.className += ' ' + this.disabledCls;\r\n        }\r\n        const buttonTextWrap = this.render.createElement('div');\r\n        buttonTextWrap.className = 'input-group-text';\r\n        buttonTextWrap.innerHTML = this.inputAppendText;\r\n        this.appendTextElement = buttonTextWrap;\r\n        this.appendWrapElement = buttonWrap;\r\n        this.render.appendChild(buttonWrap, buttonTextWrap);\r\n        switch (this.inputAppendControlType) {\r\n            case 'StaticText':\r\n                // æ­¤æ¶è¿æ²¡æçæåé¨çæ ·å¼\r\n                // let textareaEl = this.el.nativeElement.querySelector('.f-form-control-textarea');\r\n                this.render.addClass(this.el.nativeElement, 'f-cmp-static-text-input-append' + (this._disabled ? ' ' + this.disabledCls : ''));\r\n                this.render.appendChild(this.el.nativeElement, buttonWrap);\r\n                break;\r\n            case 'TextBox':\r\n            case 'MultiTextBox':\r\n                let textParent = this.render.parentNode(this.el.nativeElement);\r\n                const inputWrap = this.render.createElement('div');\r\n                inputWrap.className = 'f-cmp-text-input-append' + (this._disabled ? ' ' + this.disabledCls : '');\r\n                if (this.el.nativeElement.outerHTML.indexOf('textarea') > -1) {\r\n                    inputWrap.className = 'f-cmp-textarea-input-append' + (this._disabled ? ' ' + this.disabledCls : '');\r\n                }\r\n                this.elWrapElement = inputWrap;\r\n                this.render.appendChild(inputWrap, this.el.nativeElement);\r\n                this.render.appendChild(inputWrap, buttonWrap);\r\n                this.render.appendChild(textParent, inputWrap);\r\n                break;\r\n            default:\r\n                // å­å¨ç±»ä¼¼ä¸æè¿æ ·çæ§ä»¶ï¼åé¨è°ç¨input-groupç»æè¿æ²¡æåå§å\r\n                let inputGroupEl = this.el.nativeElement.querySelector('.input-group');\r\n                if (inputGroupEl) {\r\n                    this.render.appendChild(inputGroupEl, buttonWrap);\r\n                } else {\r\n                    if (this.ngZone) {\r\n                        this.ngZone.runOutsideAngular(() => {\r\n                            setTimeout(() => {\r\n                                let inputGroupEl2 = this.el.nativeElement.querySelector('.input-group');\r\n                                this.render.appendChild(inputGroupEl2, buttonWrap);\r\n                            });\r\n                        });\r\n                    }\r\n                }\r\n\r\n        }\r\n\r\n        if (this.inputAppendType == 'button') {\r\n            this.clickHandler = this.render.listen(this.appendWrapElement, 'click', (ev) => {\r\n                this.inputAppendClickEvent.emit(ev);\r\n            });\r\n        }\r\n    }\r\n}\r\n","import { EventManager } from '@angular/platform-browser';\r\nimport { Directive, ElementRef, Injector, OnInit, AfterViewInit } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: 'shortcut-tab',\r\n})\r\nexport class ShortCutTabKeyDirective implements OnInit, AfterViewInit {\r\n\r\n    constructor(public el: ElementRef, public injector: Injector, private eventManager: EventManager) {}\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.eventManager.addEventListener(this.el.nativeElement, 'keydown',  (e: KeyboardEvent) => {\r\n            e.stopPropagation();\r\n            if (e.key === 'Tab') {\r\n                this.onTabKeydownHandler(e.target);\r\n            }\r\n        });\r\n    }\r\n\r\n    private onTabKeydownHandler(currentTarget) {\r\n        let allInputs = this.el.nativeElement.querySelectorAll('input,textarea');\r\n        allInputs = Array.from(allInputs);\r\n        const currentInputIndex = allInputs.findIndex(n => n === currentTarget);\r\n        let nextInputIndex = currentInputIndex + 1;\r\n        if (nextInputIndex >= allInputs.length) {\r\n            nextInputIndex = 0;\r\n        }\r\n        const nextInputTarget = allInputs[nextInputIndex];\r\n        if (nextInputTarget) {\r\n            setTimeout(() => {\r\n                nextInputTarget.focus();\r\n            });\r\n        }\r\n    }\r\n}\r\n","\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IdService, FarrisCommonModule } from '@farris/ui-common';\r\n\r\nimport { RadioComponent } from './radio/radio.component';\r\nimport { RadioButtonComponent } from './radio/radio-button.component';\r\nimport { RadioGroupComponent } from './radio/radio-group.component';\r\nimport { FarrisRadioGroupComponent } from './radio/radiogroup.component';\r\nimport { CheckboxComponent } from './checkbox/checkbox.component';\r\nimport { CheckboxGroupComponent } from './checkbox/checkbox-group.component';\r\nimport { FarrisCheckboxGroupComponent } from './checkbox/checkboxgroup.component';\r\nimport { TextareaAutoSizeDirective } from './textarea-autosize.directive';\r\nimport { TextareaZoomDirective } from './textarea-zoom.directive';\r\nimport {InputAppendDirective} from './input-append.directive';\r\nimport { MessagerModule } from '@farris/ui-messager';\r\nimport { ShortCutTabKeyDirective } from './shortcut-tab.directive';\r\nimport { TextareaWordcountDirective } from './textarea-wordcount.directive';\r\nimport { LocaleModule } from '@farris/ui-locale';\r\n@NgModule({\r\n    declarations: [\r\n        RadioComponent,\r\n        RadioGroupComponent,\r\n        CheckboxComponent,\r\n        CheckboxGroupComponent,\r\n        RadioButtonComponent,\r\n        FarrisRadioGroupComponent,\r\n        FarrisCheckboxGroupComponent,\r\n        TextareaAutoSizeDirective,\r\n        TextareaZoomDirective,\r\n        ShortCutTabKeyDirective,\r\n        TextareaWordcountDirective,\r\n        InputAppendDirective\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        MessagerModule.forRoot(),\r\n        FarrisCommonModule.forRoot(),\r\n        LocaleModule\r\n    ],\r\n    exports: [\r\n        RadioComponent,\r\n        RadioGroupComponent,\r\n        CheckboxComponent,\r\n        CheckboxGroupComponent,\r\n        RadioButtonComponent,\r\n        FarrisRadioGroupComponent,\r\n        FarrisCheckboxGroupComponent,\r\n        TextareaAutoSizeDirective,\r\n        TextareaZoomDirective,\r\n        ShortCutTabKeyDirective,\r\n        TextareaWordcountDirective,\r\n        InputAppendDirective\r\n    ],\r\n    providers: [IdService],\r\n})\r\nexport class FarrisFormsModule { }\r\n"],"names":["EventEmitter","Component","NG_VALUE_ACCESSOR","forwardRef","IdService","Input","Output","Optional","ElementRef","HostBinding","ViewEncapsulation","CommonUtils","Injector","Directive","NgControl","HostListener","EventManager","LocaleService","Renderer2","MessagerService","NgZone","ViewContainerRef","NgModule","CommonModule","FormsModule","MessagerModule","FarrisCommonModule","LocaleModule"],"mappings":"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"}
