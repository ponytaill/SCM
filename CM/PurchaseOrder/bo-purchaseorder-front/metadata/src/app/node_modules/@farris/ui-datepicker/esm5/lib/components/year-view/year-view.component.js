/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';
import { YEARS, OPTS } from '../../constants/constants';
import { UtilService } from '../../services/public-api';
import { KeyCode } from '../../enums/public-api';
var YearViewComponent = /** @class */ (function () {
    function YearViewComponent(utilService) {
        this.utilService = utilService;
        this.yearCellClicked = new EventEmitter();
        this.yearCellKeyDown = new EventEmitter();
        this.prevCellClicked = new EventEmitter();
        this.nextCellClicked = new EventEmitter();
        this.onMouseEnter = new EventEmitter();
        this.onMouseLeave = new EventEmitter();
    }
    /**
     * @return {?}
     */
    YearViewComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () { };
    /**
     * @param {?} changes
     * @return {?}
     */
    YearViewComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        if (changes.hasOwnProperty(OPTS)) {
            this.opts = changes[OPTS].currentValue;
        }
        if (changes.hasOwnProperty(YEARS)) {
            this.years = changes[YEARS].currentValue;
        }
    };
    /**
     * @param {?} event
     * @param {?} cell
     * @return {?}
     */
    YearViewComponent.prototype.onYearCellClicked = /**
     * @param {?} event
     * @param {?} cell
     * @return {?}
     */
    function (event, cell) {
        event.stopPropagation();
        if (cell.disabled) {
            return;
        }
        this.yearCellClicked.emit(cell);
    };
    /**
     * @param {?} event
     * @param {?} cell
     * @return {?}
     */
    YearViewComponent.prototype.onYearCellKeyDown = /**
     * @param {?} event
     * @param {?} cell
     * @return {?}
     */
    function (event, cell) {
        /** @type {?} */
        var keyCode = this.utilService.getKeyCodeFromEvent(event);
        if (keyCode !== KeyCode.tab) {
            event.preventDefault();
            if (keyCode === KeyCode.enter || keyCode === KeyCode.space) {
                this.onYearCellClicked(event, cell);
            }
            else if (this.opts.moveFocusByArrowKeys) {
                this.yearCellKeyDown.emit(cell);
            }
        }
    };
    /**
     * @param {?} event
     * @param {?} index
     * @return {?}
     */
    YearViewComponent.prototype.onPrevOrNextYearCellClicked = /**
     * @param {?} event
     * @param {?} index
     * @return {?}
     */
    function (event, index) {
        event.stopPropagation();
        if (index === 0) {
            if (this.prevViewDisabled)
                return;
            this.prevCellClicked.emit(event);
        }
        else {
            if (this.nextViewDisabled)
                return;
            this.nextCellClicked.emit(event);
        }
    };
    /**
     * @param {?} cell
     * @return {?}
     */
    YearViewComponent.prototype.onMonthCellMouseEnter = /**
     * @param {?} cell
     * @return {?}
     */
    function (cell) {
        if (this.utilService.isInitializedDate(this.selectedDateRange.begin) &&
            !this.utilService.isInitializedDate(this.selectedDateRange.end)) {
            for (var i = 0; i < this.years.length; i++) {
                /** @type {?} */
                var row = this.years[i];
                for (var j = 0; j < row.length; j++) {
                    /** @type {?} */
                    var year = row[j];
                    year.range =
                        (this.utilService.isDateSameOrEarlier(this.selectedDateRange.begin, year.yearObj) &&
                            this.utilService.isDateSameOrEarlier(year.yearObj, cell.yearObj)) ||
                            (this.utilService.isDateSameOrEarlier(year.yearObj, this.selectedDateRange.begin) &&
                                this.utilService.isDateSameOrEarlier(cell.yearObj, year.yearObj));
                }
            }
            this.onMouseEnter.emit(cell);
        }
    };
    /**
     * @return {?}
     */
    YearViewComponent.prototype.onMonthCellMouseLeave = /**
     * @return {?}
     */
    function () {
        for (var i = 0; i < this.years.length; i++) {
            /** @type {?} */
            var row = this.years[i];
            for (var j = 0; j < row.length; j++) {
                /** @type {?} */
                var year = row[j];
                year.range = false;
            }
        }
        this.onMouseLeave.emit();
    };
    /**
     * @param {?} year
     * @return {?}
     */
    YearViewComponent.prototype.isMonthInRange = /**
     * @param {?} year
     * @return {?}
     */
    function (year) {
        return this.utilService.isDateInRange(year, this.selectedDateRange);
    };
    /**
     * @param {?} year
     * @return {?}
     */
    YearViewComponent.prototype.isMonthSame = /**
     * @param {?} year
     * @return {?}
     */
    function (year) {
        return this.utilService.isDateSame({
            year: this.selectedDate.year
        }, year);
    };
    /**
     * @param {?} year
     * @return {?}
     */
    YearViewComponent.prototype.isMonthRangeBeginOrEndSame = /**
     * @param {?} year
     * @return {?}
     */
    function (year) {
        return this.utilService.isDateSame({ year: this.selectedDateRange.begin.year }, year) || this.utilService.isDateSame({ year: this.selectedDateRange.end.year }, year);
    };
    YearViewComponent.decorators = [
        { type: Component, args: [{
                    selector: 'lib-year-view',
                    template: "<table class=\"f-datepicker-table-wrapper\">\r\n    <tbody class=\"f-datepicker-table\">\r\n        <tr *ngFor=\"let yr of years; let yi = index\">\r\n            <td\r\n                *ngFor=\"let y of yr; let i = index\"\r\n                id=\"y_{{ yi }}_{{ i }}\"\r\n                class=\"y_{{ yi }}_{{ i }} \"\r\n                [ngClass]=\"{\r\n                    'f-datepicker-no-currmonth':\r\n                        (yi === 0 && i === 0) || (yi === 3 && i === 2)\r\n                }\"\r\n                (click)=\"onYearCellClicked($event, y)\"\r\n                (keydown)=\"onYearCellKeyDown($event, y)\"\r\n                (mouseenter)=\"onMonthCellMouseEnter(y)\"\r\n                (mouseleave)=\"onMonthCellMouseLeave()\"\r\n                tabindex=\"0\"\r\n            >\r\n                <div class=\"f-datepicker-year\">\r\n                    <span\r\n                        class=\"f-datepicker-year-cell\"\r\n                        [ngClass]=\"{\r\n                            'f-datepicker-current':\r\n                                y.currYear && opts.markCurrentYear,\r\n                            'f-datepicker-selected':\r\n                                (!this.opts.dateRange &&\r\n                                    isMonthSame(y.yearObj)) ||\r\n                                (this.opts.dateRange &&\r\n                                    isMonthRangeBeginOrEndSame(y.yearObj)),\r\n                            'f-datepicker-disabled': y.disabled,\r\n                            'f-datepicker-range':\r\n                                isMonthInRange(y.yearObj) || y.range\r\n                        }\"\r\n                        >{{ y.year }}</span\r\n                    >\r\n                </div>\r\n            </td>\r\n            <!-- <ng-container *ngFor=\"let y of yr; let i = index\">\r\n                <ng-container\r\n                    *ngIf=\"\r\n                        (yi === 0 && i === 0) || (yi === 3 && i === 2);\r\n                        else elseTemplate\r\n                    \"\r\n                >\r\n                    <td\r\n                        id=\"y_{{ yi }}_{{ i }}\"\r\n                        class=\"y_{{ yi }}_{{ i }}\"\r\n                        (click)=\"onPrevOrNextYearCellClicked($event, i)\"\r\n                        (keydown)=\"onPrevOrNextYearCellKeyDown($event, i)\"\r\n                        tabindex=\"0\"\r\n                    >\r\n                        <div class=\"f-datepicker-year\">\r\n                            <span\r\n                                class=\"f-datepicker-year-cell\"\r\n                                [ngClass]=\"{\r\n                                    'f-datepicker-disabled':\r\n                                        (i === 0 && this.prevViewDisabled) ||\r\n                                        (i === 2 && this.nextViewDisabled)\r\n                                }\"\r\n                                ><i\r\n                                    class=\"f-icon \"\r\n                                    [ngClass]=\"{\r\n                                        'k-i-arrow-chevron-left': i === 0,\r\n                                        'k-i-arrow-chevron-right': i === 2\r\n                                    }\"\r\n                                ></i>\r\n                            </span>\r\n                        </div>\r\n                    </td>\r\n                </ng-container>\r\n                <ng-template #elseTemplate>\r\n                    <td\r\n                        id=\"y_{{ yi }}_{{ i }}\"\r\n                        class=\"y_{{ yi }}_{{ i }}\"\r\n                        (click)=\"onYearCellClicked($event, y)\"\r\n                        (keydown)=\"onYearCellKeyDown($event, y)\"\r\n                        tabindex=\"0\"\r\n                    >\r\n                        <div class=\"f-datepicker-year\">\r\n                            <span\r\n                                class=\"f-datepicker-year-cell\"\r\n                                [ngClass]=\"{\r\n                                    'f-datepicker-current':\r\n                                        y.currYear && opts.markCurrentYear,\r\n                                    'f-datepicker-selected': y.selected,\r\n                                    'f-datepicker-disabled': y.disabled\r\n                                }\"\r\n                                >{{ y.year }}</span\r\n                            >\r\n                        </div>\r\n                    </td>\r\n                </ng-template>\r\n            </ng-container> -->\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n",
                    providers: [UtilService],
                    encapsulation: ViewEncapsulation.None
                }] }
    ];
    /** @nocollapse */
    YearViewComponent.ctorParameters = function () { return [
        { type: UtilService }
    ]; };
    YearViewComponent.propDecorators = {
        opts: [{ type: Input }],
        years: [{ type: Input }],
        prevViewDisabled: [{ type: Input }],
        nextViewDisabled: [{ type: Input }],
        selectedDate: [{ type: Input }],
        selectedDateRange: [{ type: Input }],
        yearCellClicked: [{ type: Output }],
        yearCellKeyDown: [{ type: Output }],
        prevCellClicked: [{ type: Output }],
        nextCellClicked: [{ type: Output }],
        onMouseEnter: [{ type: Output }],
        onMouseLeave: [{ type: Output }]
    };
    return YearViewComponent;
}());
export { YearViewComponent };
if (false) {
    /** @type {?} */
    YearViewComponent.prototype.opts;
    /** @type {?} */
    YearViewComponent.prototype.years;
    /** @type {?} */
    YearViewComponent.prototype.prevViewDisabled;
    /** @type {?} */
    YearViewComponent.prototype.nextViewDisabled;
    /** @type {?} */
    YearViewComponent.prototype.selectedDate;
    /** @type {?} */
    YearViewComponent.prototype.selectedDateRange;
    /** @type {?} */
    YearViewComponent.prototype.yearCellClicked;
    /** @type {?} */
    YearViewComponent.prototype.yearCellKeyDown;
    /** @type {?} */
    YearViewComponent.prototype.prevCellClicked;
    /** @type {?} */
    YearViewComponent.prototype.nextCellClicked;
    /** @type {?} */
    YearViewComponent.prototype.onMouseEnter;
    /** @type {?} */
    YearViewComponent.prototype.onMouseLeave;
    /**
     * @type {?}
     * @private
     */
    YearViewComponent.prototype.utilService;
}
//# sourceMappingURL=data:application/json;base64,