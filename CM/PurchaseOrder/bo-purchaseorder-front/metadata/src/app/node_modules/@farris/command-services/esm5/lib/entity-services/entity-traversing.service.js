import { Injectable } from '@angular/core';
import { FrameContext, BindingList } from '@farris/devkit';
/**
 * 实体遍历服务
 * @todo
 * 实体层没有封装相关方法，临时通过BindingData来获取数据
 */
var EntityTraversingService = /** @class */ (function () {
    function EntityTraversingService(frameContext) {
        this.frameContext = frameContext;
    }
    Object.defineProperty(EntityTraversingService.prototype, "bindingData", {
        get: function () {
            return this.frameContext.bindingData;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 获取值
     */
    EntityTraversingService.prototype.getPropValue = function (path) {
        return this.bindingData.getValue(path);
    };
    /**
     * 获取实体数据
     */
    EntityTraversingService.prototype.getEntityData = function (path) {
        var bindingObj;
        var bindingListOrObject = this.bindingData.getValue(path);
        if (bindingListOrObject instanceof BindingList === true) {
            bindingObj = bindingListOrObject.currentItem;
        }
        else {
            bindingObj = bindingListOrObject;
        }
        return bindingObj.toJSON();
    };
    /**
     * 获取实体列表数据
     */
    EntityTraversingService.prototype.getEntityListData = function (path) {
        var bindingList = this.bindingData.getValue(path);
        return bindingList.toJSON();
    };
    EntityTraversingService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    EntityTraversingService.ctorParameters = function () { return [
        { type: FrameContext }
    ]; };
    return EntityTraversingService;
}());
export { EntityTraversingService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW50aXR5LXRyYXZlcnNpbmcuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvY29tbWFuZC1zZXJ2aWNlcy8iLCJzb3VyY2VzIjpbImxpYi9lbnRpdHktc2VydmljZXMvZW50aXR5LXRyYXZlcnNpbmcuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxZQUFZLEVBQWUsV0FBVyxFQUFpQixNQUFNLGdCQUFnQixDQUFDO0FBRXZGOzs7O0dBSUc7QUFDSDtJQU9FLGlDQUFvQixZQUEwQjtRQUExQixpQkFBWSxHQUFaLFlBQVksQ0FBYztJQUM5QyxDQUFDO0lBTEQsc0JBQVksZ0RBQVc7YUFBdkI7WUFDRSxPQUFPLElBQUksQ0FBQyxZQUFZLENBQUMsV0FBVyxDQUFDO1FBQ3ZDLENBQUM7OztPQUFBO0lBS0Q7O09BRUc7SUFDSSw4Q0FBWSxHQUFuQixVQUFvQixJQUFjO1FBQ2hDLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDekMsQ0FBQztJQUVEOztPQUVHO0lBQ0ksK0NBQWEsR0FBcEIsVUFBcUIsSUFBYztRQUNqQyxJQUFJLFVBQXlCLENBQUM7UUFDOUIsSUFBTSxtQkFBbUIsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUM1RCxJQUFJLG1CQUFtQixZQUFZLFdBQVcsS0FBSyxJQUFJLEVBQUU7WUFDdkQsVUFBVSxHQUFHLG1CQUFtQixDQUFDLFdBQVcsQ0FBQztTQUM5QzthQUFNO1lBQ0wsVUFBVSxHQUFHLG1CQUFtQixDQUFDO1NBQ2xDO1FBQ0QsT0FBTyxVQUFVLENBQUMsTUFBTSxFQUFFLENBQUM7SUFDN0IsQ0FBQztJQUVEOztPQUVHO0lBQ0ksbURBQWlCLEdBQXhCLFVBQXlCLElBQWM7UUFDckMsSUFBTSxXQUFXLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFnQixDQUFDO1FBQ25FLE9BQU8sV0FBVyxDQUFDLE1BQU0sRUFBRSxDQUFDO0lBQzlCLENBQUM7O2dCQXJDRixVQUFVOzs7O2dCQVBGLFlBQVk7O0lBOENyQiw4QkFBQztDQUFBLEFBdkNELElBdUNDO0FBRUQsT0FBTyxFQUFFLHVCQUF1QixFQUFFLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGcmFtZUNvbnRleHQsIEJpbmRpbmdEYXRhLCBCaW5kaW5nTGlzdCwgQmluZGluZ09iamVjdCB9IGZyb20gJ0BmYXJyaXMvZGV2a2l0JztcblxuLyoqXG4gKiDlrp7kvZPpgY3ljobmnI3liqFcbiAqIEB0b2RvXG4gKiDlrp7kvZPlsYLmsqHmnInlsIHoo4Xnm7jlhbPmlrnms5XvvIzkuLTml7bpgJrov4dCaW5kaW5nRGF0YeadpeiOt+WPluaVsOaNrlxuICovXG5ASW5qZWN0YWJsZSgpXG5jbGFzcyBFbnRpdHlUcmF2ZXJzaW5nU2VydmljZSB7XG5cbiAgcHJpdmF0ZSBnZXQgYmluZGluZ0RhdGEoKTogQmluZGluZ0RhdGEge1xuICAgIHJldHVybiB0aGlzLmZyYW1lQ29udGV4dC5iaW5kaW5nRGF0YTtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgZnJhbWVDb250ZXh0OiBGcmFtZUNvbnRleHQpIHtcbiAgfVxuXG4gIC8qKlxuICAgKiDojrflj5blgLxcbiAgICovXG4gIHB1YmxpYyBnZXRQcm9wVmFsdWUocGF0aDogc3RyaW5nW10pOiBhbnkge1xuICAgIHJldHVybiB0aGlzLmJpbmRpbmdEYXRhLmdldFZhbHVlKHBhdGgpO1xuICB9XG5cbiAgLyoqXG4gICAqIOiOt+WPluWunuS9k+aVsOaNrlxuICAgKi9cbiAgcHVibGljIGdldEVudGl0eURhdGEocGF0aDogc3RyaW5nW10pOiBhbnkge1xuICAgIGxldCBiaW5kaW5nT2JqOiBCaW5kaW5nT2JqZWN0O1xuICAgIGNvbnN0IGJpbmRpbmdMaXN0T3JPYmplY3QgPSB0aGlzLmJpbmRpbmdEYXRhLmdldFZhbHVlKHBhdGgpO1xuICAgIGlmIChiaW5kaW5nTGlzdE9yT2JqZWN0IGluc3RhbmNlb2YgQmluZGluZ0xpc3QgPT09IHRydWUpIHtcbiAgICAgIGJpbmRpbmdPYmogPSBiaW5kaW5nTGlzdE9yT2JqZWN0LmN1cnJlbnRJdGVtO1xuICAgIH0gZWxzZSB7XG4gICAgICBiaW5kaW5nT2JqID0gYmluZGluZ0xpc3RPck9iamVjdDtcbiAgICB9XG4gICAgcmV0dXJuIGJpbmRpbmdPYmoudG9KU09OKCk7XG4gIH1cblxuICAvKipcbiAgICog6I635Y+W5a6e5L2T5YiX6KGo5pWw5o2uXG4gICAqL1xuICBwdWJsaWMgZ2V0RW50aXR5TGlzdERhdGEocGF0aDogc3RyaW5nW10pOiBhbnlbXSB7XG4gICAgY29uc3QgYmluZGluZ0xpc3QgPSB0aGlzLmJpbmRpbmdEYXRhLmdldFZhbHVlKHBhdGgpIGFzIEJpbmRpbmdMaXN0O1xuICAgIHJldHVybiBiaW5kaW5nTGlzdC50b0pTT04oKTtcbiAgfVxuXG59XG5cbmV4cG9ydCB7IEVudGl0eVRyYXZlcnNpbmdTZXJ2aWNlIH07XG4iXX0=