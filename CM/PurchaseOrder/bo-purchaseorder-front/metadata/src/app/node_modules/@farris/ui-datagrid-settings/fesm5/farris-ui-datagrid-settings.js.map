{"version":3,"file":"farris-ui-datagrid-settings.js","sources":["ng://@farris/ui-datagrid-settings/lib/datagrid-settings.component.ts","ng://@farris/ui-datagrid-settings/lib/getValueWithLocaleId.ts","ng://@farris/ui-datagrid-settings/lib/simple-mode/simple-columns.component.ts","ng://@farris/ui-datagrid-settings/lib/datagrid-scheme.service.ts","ng://@farris/ui-datagrid-settings/lib/scheme/newscheme.component.ts","ng://@farris/ui-datagrid-settings/lib/scheme/scheme-list.component.ts","ng://@farris/ui-datagrid-settings/lib/datagrid-settings.service.ts","ng://@farris/ui-datagrid-settings/lib/datagrid-sort-setting.component.ts","ng://@farris/ui-datagrid-settings/lib/datagrid-view-columns.component.ts","ng://@farris/ui-datagrid-settings/lib/column-format-setting/column-format-setting.component.ts","ng://@farris/ui-datagrid-settings/lib/column-group/column-group.component.ts","ng://@farris/ui-datagrid-settings/lib/column-format-setting/column-visible-drag.directive.ts","ng://@farris/ui-datagrid-settings/lib/column-group/column-group-drag.directive.ts","ng://@farris/ui-datagrid-settings/lib/datagrid-settings.module.ts"],"sourcesContent":["import {\r\n    Component, ViewEncapsulation, ViewChild, ElementRef, Input, EventEmitter,\r\n    OnInit, OnChanges, SimpleChanges, ChangeDetectorRef, Injector, Output\r\n} from '@angular/core';\r\nimport { BsModalRef } from '@farris/ui-modal';\r\nimport { DataColumn, DatagridComponent } from '@farris/ui-datagrid';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { DatagridSchemeModel, SettingModel } from './setting.model';\r\n\r\n@Component({\r\n    selector: 'datagrid-settings',\r\n    templateUrl: './datagrid-settings.component.html',\r\n    styles: [\r\n        `\r\n\r\n        .f-datagrid-settings .header {\r\n            position:relative;width:100%; height: 56px;padding: 0 24px;border:0px\r\n        }\r\n\r\n        .f-datagrid-settings .header .title {\r\n            display: block; white-space: nowrap; font-size: 17px; line-height: 56px;\r\n        }\r\n        .f-datagrid-settings .header .tabs {\r\n            height: 32px;\r\n            top: 12px; font-size: 14px;\r\n            position: relative;\r\n            line-height: 32px;\r\n        }\r\n        .f-datagrid-settings .header .tabs .tabs-labels {\r\n            background: #EFF5FF;border-radius: 17px;color:#6080AD\r\n        }\r\n\r\n        .f-datagrid-settings .header .tabs .tabs-labels .navitem.active {\r\n            line-height: 28px;\r\n            margin: 2px;\r\n            height: 28px;\r\n            background: rgb(246 250 255);\r\n            border-radius: 15px;\r\n            box-shadow: 0 4px 18px 0 rgb(2 75 193 / 20%)\r\n        }\r\n        .f-datagrid-settings .header .close {\r\n            line-height: 56px;padding: 0;width: 20px\r\n        }\r\n        .f-datagrid-settings .tabs-container {\r\n            height: 100%;overflow: hidden; position: relative; margin: 0 24px; border: 1px solid #DEE1EA; border-radius: 8px;\r\n        }\r\n        .f-datagrid-settings .buttons\r\n        {\r\n            height: 66px;text-align: right;padding: 14px 24px 20px 24px;\r\n        }\r\n\r\n        .f-datagrid-settings .buttons button {\r\n            width: 66px;height: 32px;\r\n        }\r\n        .f-datagrid-settings .buttons .cancel {\r\n            margin-left: 12px;margin-right: 8px;\r\n        }\r\n        .f-datagrid-settings .buttons .ok {\r\n            width: 100px;\r\n        }\r\n\r\n        .f-datagrid-settings .dg-column-format-setting>div{\r\n            width: 360px; min-width:260px;overflow: hidden;background:#ffffff;padding: 10px 5px 10px 8px;border-right: 1px solid #DEE1EA\r\n        }\r\n\r\n        .f-datagrid-settings .dg-column-format-setting .checkbox, .format-setting-column .checkbox{\r\n            margin-right: 5px; font-size: 14px;color: #0089FF;\r\n        }\r\n\r\n        .f-datagrid-settings  .column-group-setting .title{\r\n            height: 36px; line-height: 36px; color: #59a1ff\r\n        }\r\n\r\n        .f-datagrid-settings  .column-group-setting .all-fields {\r\n            background-color:#fff;padding-top: 0px!important;\r\n        }\r\n\r\n        .f-datagrid-settings  .column-group-setting .group-sum-fields {\r\n            height: 36px; line-height: 36px; border-top: 1px solid #e4e7ef; color: #59a1ff\r\n        }\r\n\r\n\r\n        .smooth-dnd-ghost.format-setting-column {\r\n            border: 1px solid #2a87ff;\r\n            z-index: 999999999 !important;\r\n            background-color: #e7f1ff;;\r\n            padding: 4px 8px;\r\n            color: rgb(0 0 0);\r\n        }\r\n\r\n        .smooth-dnd-ghost.format-setting-column .field-drag-handle {\r\n            float: right;\r\n        }\r\n\r\n        .dg-column-format-setting  .smooth-dnd-drop-preview-constant-class {\r\n            background-color: #dee1ea;\r\n        }\r\n        .dg-column-format-setting .format-setting-column {\r\n            background: #fafbfd;\r\n            padding: 4px 8px;\r\n            margin-bottom: 5px;\r\n            border: 1px solid #f2f4f8;\r\n            border-radius: 5px;\r\n        }\r\n        .dg-column-format-setting .format-setting-column.active {\r\n            color: rgb(0 0 0);\r\n            border: 1px solid #2a87ff;\r\n            background: #e7f1ff;\r\n            border-top: 1px solid #2a87ff!important;\r\n            border-bottom: 1px solid #2a87ff!important;\r\n        }\r\n\r\n        .dg-column-format-setting .format-setting-column .field-drag-handle{\r\n            float: right;\r\n            cursor: grab;\r\n        }\r\n\r\n        .dg-column-format-setting .format-setting-column .field-drag-handle:active{\r\n            cursor: grabbing;\r\n        }\r\n\r\n        `\r\n    ],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class DatagridSettingsComponent implements OnInit, OnChanges {\r\n    modalRef: BsModalRef;\r\n    gridInstance: DatagridComponent;\r\n    activeTabIndex = 1;\r\n\r\n    /** æåºåæ°æ® */\r\n    sortTreeData = [];\r\n    sortNames = [];\r\n    sortInfo: any = {};\r\n\r\n    /** æ¾ç¤ºåæ°æ® */\r\n    viewTreeData = [];\r\n    viewColumns = [];\r\n\r\n    columnFormat = [];\r\n\r\n    groupField = [];\r\n\r\n    canSetColumnSort = true;\r\n    canSetColumnVisible = true;\r\n    @Input() enableReset = false;\r\n    @Input() columns: DataColumn[][];\r\n\r\n    @Output() cancelHandle = new EventEmitter();\r\n    @Output() submitHandle = new EventEmitter();\r\n    @Output() reset = new EventEmitter();\r\n    @Output() concise = new EventEmitter();\r\n    @Input() schemeInfo: SettingModel = null;\r\n\r\n    @ViewChild('header') header: ElementRef;\r\n    searchItems = [];\r\n    alignItems = [];\r\n    summaryItems = [];\r\n    summaryItems2 = [];\r\n\r\n    private localeSer: LocaleService;\r\n    private messager: MessagerService;\r\n    constructor(private cd: ChangeDetectorRef, private inject: Injector) {\r\n        this.messager = this.inject.get(MessagerService, null);\r\n        this.localeSer = this.inject.get(LocaleService);\r\n        this.searchItems = [\r\n            { value: 'all', title: this.localeSer.getValue('datagrid.settings.allColumns') },\r\n            { value: 'visible', title: this.localeSer.getValue('datagrid.settings.visibleColumns') },\r\n            { value: 'hidden', title: this.localeSer.getValue('datagrid.settings.hiddenColumns') }\r\n        ];\r\n\r\n        this.alignItems = [\r\n            { value: 'left', title: this.localeSer.getValue('datagrid.settings.alignLeft')},\r\n            { value: 'center', title: this.localeSer.getValue('datagrid.settings.alignCenter')},\r\n            { value: 'right', title: this.localeSer.getValue('datagrid.settings.alignRight')},\r\n        ];\r\n\r\n        this.summaryItems = [\r\n            { value: -1, title: this.localeSer.getValue('datagrid.settings.summaryNone') },\r\n            { value: 2, title: this.localeSer.getValue('datagrid.settings.summarySum') },\r\n            { value: 0, title: this.localeSer.getValue('datagrid.settings.summaryMax') },\r\n            { value: 1, title: this.localeSer.getValue('datagrid.settings.summaryMin') },\r\n            { value: 3, title: this.localeSer.getValue('datagrid.settings.summaryAverage') },\r\n            { value: 4, title: this.localeSer.getValue('datagrid.settings.summarCount') },\r\n        ];\r\n\r\n        this.summaryItems2 = [\r\n            { value: -1, title: this.localeSer.getValue('datagrid.settings.summaryNone') },\r\n            { value: 4, title: this.localeSer.getValue('datagrid.settings.summarCount') },\r\n        ];\r\n\r\n    }\r\n\r\n    private initData() {\r\n        this.sortNames = this.gridInstance.sortName ? this.gridInstance.sortName.split(',') : [];\r\n        this.viewColumns = this.getViewColumns();\r\n        this.sortInfo = this.gridInstance['__sortInfo'] || {};\r\n        this.columnFormat = [...this.columns[0]];\r\n        this.groupField = this.gridInstance.groupField ? this.gridInstance.groupField.split(',') : [];\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (!this.gridInstance.enableScheme) {\r\n            this.initData();\r\n        } else {\r\n            if (this.schemeInfo) {\r\n                this.sortInfo = this.schemeInfo.sortInfo || {};\r\n                if (this.sortInfo) {\r\n                    this.sortNames = this.sortInfo.sortName || '';\r\n                }\r\n                this.viewColumns = this.schemeInfo.viewColumns;\r\n                this.columnFormat = this.schemeInfo.columnFormat;\r\n                if (!this.columnFormat) {\r\n                    this.columnFormat = [...this.columns[0]];\r\n                }\r\n\r\n                if (this.schemeInfo.groupField) {\r\n                    if (typeof this.schemeInfo.groupField === 'string') {\r\n                        this.groupField = (this.schemeInfo.groupField as any).split(',');\r\n                    } else {\r\n                        this.groupField = this.schemeInfo.groupField || [];\r\n                    }\r\n                } else {\r\n                    this.groupField = [];\r\n                }\r\n                \r\n                return;\r\n            }\r\n            this.initData();\r\n        }\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.columns && !changes.columns.isFirstChange()) {\r\n            // console.log(this.columns);\r\n        }\r\n    }\r\n\r\n    close($event: MouseEvent) {\r\n        $event.stopPropagation();\r\n        if (this.modalRef) {\r\n            this.modalRef.close();\r\n        }\r\n    }\r\n\r\n    changeTabs($event: MouseEvent, idx) {\r\n        $event.stopPropagation();\r\n        this.activeTabIndex = idx;\r\n    }\r\n\r\n    onSortInfoChange(sortInfo: any) {\r\n        this.sortInfo = sortInfo;\r\n    }\r\n\r\n    private getViewColumns() {\r\n        // å¤è¡¨å¤´\r\n        let visibleCls = [];\r\n        if (this.columns.length > 1 ) {\r\n            this.columns.forEach(cols => {\r\n                visibleCls = visibleCls.concat(this._getViewColumns(cols));\r\n            });\r\n        } else {\r\n            visibleCls = this.columns[0].filter(n => (n.visible || n.visible === undefined));\r\n        }\r\n\r\n        return visibleCls.map(n => n.field);\r\n    }\r\n\r\n    private _getViewColumns(cols: any[]) {\r\n        return cols.filter(c => !c.colspan && (c.visible || c.visible === undefined));\r\n    }\r\n\r\n\r\n    private mergeColumnFormats() {\r\n        if (this.sortInfo && Object.keys(this.sortInfo).length && this.columnFormat && this.columnFormat.length) {\r\n            const { sortName, sortOrder } = this.sortInfo;\r\n            if (sortName && sortName.length) {\r\n                sortName.forEach((n, i) => {\r\n                    const col = this.columnFormat.find((col: any) => {\r\n                        return col.field === n;\r\n                    });\r\n                    if (col) {\r\n                        col.sortable = true;\r\n                        col.order = sortOrder[i] || 'asc';\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    onColumnFormatChange(colFormatData) {\r\n        this.columnFormat = colFormatData;\r\n    }\r\n\r\n    onSubmitClick($event) {\r\n        this.mergeColumnFormats();\r\n        this.submitHandle.emit($event);\r\n    }\r\n\r\n    onCancelClick($event) {\r\n        this.cancelHandle.emit($event);\r\n    }\r\n\r\n    onSettingReset($event) {\r\n        // this.reset.emit($event);\r\n        const restorDefaultText = this.localeSer.getValue('datagrid.settings.restoreDefaultSettingsText') || 'ç¡®è®¤è¦æ¢å¤é»è®¤è®¾ç½®åï¼';\r\n        this.messager.confirm(restorDefaultText).subscribe((t: boolean) => {\r\n            if (t) {\r\n                this.reset2Default();\r\n            }\r\n        });\r\n    }\r\n\r\n    private reset2Default() {\r\n        const options = this.gridInstance.dfs['_state'].initialOptions;\r\n        if (options.columnFields && options.columnFields.length) {\r\n\r\n            const newColumns = [];\r\n            options.columnFields.forEach(c => {\r\n                if (c.field !== '_datagrid-setting-control_') {\r\n                    const col = this.gridInstance.columns[0].find((n: any) => n.field === c.field);\r\n                    if (col) {\r\n                        col.visible = c.visible;\r\n                        col.halign = c.halign;\r\n                        col.align = c.align;\r\n                        col.width = c.width;\r\n                        col.footer = {...c.footer || {}};\r\n                        col.groupFooter = {...c.groupFooter || {}};\r\n                        newColumns.push(col);\r\n                    }\r\n                }\r\n            });\r\n\r\n            this.columns = [newColumns];\r\n        }\r\n\r\n        this.viewColumns = this.getViewColumns();\r\n\r\n        if (options.sort) {\r\n            const sortOrders = options.sort.sortOrder? options.sort.sortOrder.split(',') : [];\r\n            this.sortNames = options.sort.sortName ? options.sort.sortName.split(',') : [];\r\n            this.sortInfo = { sortName: this.sortNames, sortOrder:  sortOrders };\r\n        } else {\r\n            this.sortNames = [];\r\n            this.sortInfo = {};\r\n        }\r\n        this.columnFormat = [...this.columns[0]];\r\n        this.groupField =  options.groupField ? options.groupField.split(',') : [];\r\n    }\r\n    /** æ¾ç¤ºç®æ´æ¨¡å¼çªå£ */\r\n    showConcise($event) {\r\n\r\n        if ($event) {\r\n            $event.stopPropagation();\r\n        }\r\n        this.mergeColumnFormats();\r\n        this.concise.emit();\r\n    }\r\n}\r\n","export function getMultilingualValue(valObj, localeId) {\r\n    if (valObj && typeof valObj === 'object' && Object.keys(valObj).length > 0) {\r\n        localeId = localeId || 'zh-CHS';\r\n        const val = valObj[localeId];\r\n        if (val !== undefined) {\r\n            return val;\r\n        } else {\r\n            console.log(`can not find '${localeId}' in `, valObj);\r\n            return '';\r\n        }\r\n    } else {\r\n        return '';\r\n    }\r\n}","\r\nimport { ChangeDetectorRef, Component, EventEmitter, HostBinding, Injector, Input, OnInit,\r\n        Output, ViewEncapsulation, HostListener, ViewChild, ElementRef } from '@angular/core';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { DatagridComponent } from '@farris/ui-datagrid';\r\nimport { SettingModel } from '../setting.model';\r\nimport { getMultilingualValue } from '../getValueWithLocaleId';\r\n\r\n@Component({\r\n    selector: 'datagrid-settings-simple',\r\n    templateUrl: './simple-columns.component.html',\r\n    styleUrls: [\r\n        `./settings-simple.scss`\r\n    ],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class SimpleColumnsComponent implements OnInit {\r\n    @Input() enableScheme = false;\r\n    @Input() seartTypes: any = [];\r\n    /** ææå */\r\n    @Input() columns = [];\r\n    /** æ¾ç¤ºçå */\r\n    @Input() fields = [];\r\n    /** ç¹å»ä¾§è¾¹æ ·å¼ä»¥å¤çåºåéèé¢æ¿ãé»è®¤ä¸º true */\r\n    @Input() clickToHidden = true;\r\n\r\n    @Input() top = 0;\r\n    private _schemeList = [];\r\n    @Input()\r\n    get schemeList() {\r\n        return this._schemeList;\r\n    }\r\n    set schemeList(val) {\r\n        if (val && val.length) {\r\n            val.forEach(n => {\r\n                n['_title_'] = getMultilingualValue(JSON.parse(n.name), this.localeSer.localeId);\r\n            });\r\n        }\r\n        this._schemeList = val || [];\r\n    }\r\n\r\n    @HostBinding('class') cls = 'f-datagrid-settings-simple-host';\r\n\r\n    @ViewChild('colcontainer') container: ElementRef;\r\n    @ViewChild('okbtn') btnOk: ElementRef;\r\n    @ViewChild('inputWord') searchInput: ElementRef;\r\n\r\n    @ViewChild('schemeitems') schemeitemsEleRef: ElementRef;\r\n    @ViewChild('btnSchemeName') btnRef: ElementRef;\r\n\r\n    @Output() formatChange = new EventEmitter();\r\n    @Output() fieldsChange = new EventEmitter();\r\n    @Output() submit = new EventEmitter();\r\n    @Output() closed = new EventEmitter();\r\n    @Output() advanced = new EventEmitter();\r\n\r\n    @Output() addNewScheme = new EventEmitter();\r\n    @Output() showSchemeList = new EventEmitter();\r\n    @Output() activeItemChange = new EventEmitter();\r\n    allCols = [];\r\n    columnType = 'all';\r\n\r\n    gridInstance: DatagridComponent;\r\n    localeSer: LocaleService;\r\n    isEn = false;\r\n\r\n    showSchemePanel = false;\r\n\r\n    switchValue = false;\r\n    // å½åæ¹æ¡\r\n    currentSchemeItem = null;\r\n\r\n    searchResultIsVisibleAll = false;\r\n    defaultSchemeName = 'ç³»ç»é¢å¶';\r\n\r\n    private messager: MessagerService;\r\n\r\n    settings: SettingModel = {};\r\n\r\n    constructor(private injector: Injector, public cd: ChangeDetectorRef) {\r\n        this.localeSer = this.injector.get(LocaleService, null);\r\n        this.messager = this.injector.get(MessagerService, null);\r\n    }\r\n\r\n    @HostListener('click', ['$event'])\r\n    onClick($event: MouseEvent) {\r\n        // console.log($event);\r\n        $event.stopPropagation();\r\n        const clsname = $event.target['className'] || '';\r\n        if (clsname.indexOf('f-datagrid-settings-simple-host') > -1) {\r\n            // éèä¾§è¾¹æ ï¼\r\n            if (this.clickToHidden) {\r\n                this.close();\r\n            }\r\n        }\r\n\r\n        this.showSchemePanel = false;\r\n    }\r\n\r\n    @HostListener('window:keydown.esc', ['$event'])\r\n    onEscKeydown($event) {\r\n        $event.stopPropagation();\r\n        if (!document.querySelector('modal-container')) {\r\n            this.close();\r\n        }\r\n    }\r\n\r\n    @HostListener('window:keydown.enter', ['$event'])\r\n    onEnterKeydown($event) {\r\n        $event.stopPropagation();\r\n        if (!document.querySelector('modal-container')) {\r\n            this.onSubmitClick();\r\n        }\r\n    }\r\n\r\n    @HostListener('keydown', ['$event'])\r\n    onControlGKeydown($event: KeyboardEvent) {\r\n        if ($event.ctrlKey && !document.querySelector('modal-container')) {\r\n            $event.preventDefault();\r\n            $event.stopPropagation();\r\n            if ($event.key.toLowerCase() === 'g') {\r\n                this.showAdvanced($event);\r\n            } else if ($event.key.toLowerCase() === 'r') {\r\n                this.onSettingReset();\r\n            } else if ($event.key.toLowerCase() === 's') {\r\n                this.searchInput.nativeElement.focus();\r\n            }\r\n        }\r\n    }\r\n\r\n    private getCurrentSchemeSettings() {\r\n        if (this.currentSchemeItem) {\r\n            const schemeSettings = JSON.parse(this.currentSchemeItem.queryConditionString);\r\n            return schemeSettings[this.localeSer.localeId] as SettingModel;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.allCols = this.columns[0];\r\n        if (this.gridInstance.enableScheme && this.currentSchemeItem) {\r\n            this.settings = this.getCurrentSchemeSettings() || {};\r\n        }\r\n\r\n        if (this.settings && this.settings.viewColumns && this.settings.viewColumns.length) {\r\n            this.fields = this.settings.viewColumns;\r\n            this.dirtySettings(true);\r\n        } else {\r\n            this.fields = this.getViewColumns();\r\n        }\r\n\r\n        this.container.nativeElement.focus();\r\n\r\n        this.defaultSchemeName = this.localeSer.getValue('datagrid.scheme.syspreset') || this.gridInstance.defaultSchemeName;\r\n    }\r\n\r\n    private getViewColumns() {\r\n        // å¤è¡¨å¤´\r\n        let visibleCls = [];\r\n        if (this.columns.length > 1 ) {\r\n            this.columns.forEach(cols => {\r\n                visibleCls = visibleCls.concat(this._getViewColumns(cols));\r\n            });\r\n        } else {\r\n            visibleCls = this.columns[0].filter(n => (n.visible || n.visible === undefined));\r\n        }\r\n\r\n        return visibleCls.map(n => n.field);\r\n    }\r\n\r\n    private _getViewColumns(cols: any[]) {\r\n        return cols.filter(c => !c.colspan && (c.visible || c.visible === undefined));\r\n    }\r\n    \r\n    // æ ¹æ®åçç±»åè¿è¡ç­éè¿æ»¤ï¼\r\n    // all ææå\r\n    // visible å¯è§å\r\n    // hidden éèå\r\n    // group åç»å\r\n    filterColumns(searchWords = '') {\r\n        let cols = [];\r\n\r\n        if (this.switchValue) {\r\n            cols = this.columns[0].filter(n => this.fields.indexOf(n.field) > -1);\r\n        } else {\r\n            cols = this.columns[0];\r\n        }\r\n\r\n        if (searchWords) {\r\n            cols = cols.filter(c => c.title.toLowerCase().indexOf(searchWords.toLowerCase()) > -1);\r\n        }\r\n\r\n        this.allCols = cols;\r\n    }\r\n\r\n\r\n\r\n    private onFieldsChanged() {\r\n        if (!this.gridInstance.enableScheme) {\r\n            this.fieldsChange.emit(this.fields);\r\n        }\r\n    }\r\n    onDblClick($event, col) {\r\n        // console.log('æ¾ç¤ºä¸éèåæ¢äºä»¶', col);\r\n        this.onCheckboxClick($event, col);\r\n    }\r\n\r\n    onCheckboxClick($event, col) {\r\n        // console.log('æ¾ç¤ºä¸éèåæ¢äºä»¶', col);\r\n        $event.stopPropagation();\r\n        this.showSchemePanel = false;\r\n        let checked = false;\r\n        const index = this.fields.indexOf(col.field);\r\n        if (index === -1) {\r\n            this.fields.push(col.field);\r\n            checked = true;\r\n        } else {\r\n            this.fields.splice(index, 1);\r\n            checked = false;\r\n        }\r\n\r\n        const item = this.columns[0].find(n => n.field === col.field);\r\n        if (item) {\r\n            item.visible = checked;\r\n        }\r\n        // this.columns[0].forEach(f => {\r\n        //     f.visible = this.fields.indexOf(f.field) > -1;\r\n        // });\r\n\r\n        this.fields = this.columns[0].filter(n => n.visible).map(n => n.field);\r\n\r\n        this.searchResultIsVisibleAll = this.allCols.filter(n => n.visible).length === this.allCols.length;\r\n\r\n        this.dirtySettings(true);\r\n        this.onFieldsChanged();\r\n    }\r\n\r\n    searchColumn($event) {\r\n        const txt = $event.target.value;\r\n        this.filterColumns(txt);\r\n    }\r\n\r\n    onFieldDrop(fieldInfo, txt, ulElRef: any) {\r\n        this.showSchemePanel = false;\r\n       // console.log('drop', fieldInfo);\r\n        const { removedIndex, addedIndex } = fieldInfo;\r\n\r\n        const moveItem = this.allCols[removedIndex];\r\n        const targetItem = this.allCols[addedIndex];\r\n\r\n        const moveItemIndex = this.columns[0].findIndex(n => n.field === moveItem.field);\r\n        const targetItemIndex = this.columns[0].findIndex(n => n.field === targetItem.field);\r\n\r\n        const removedItem = this.columns[0].splice(moveItemIndex, 1);\r\n        this.columns[0].splice(targetItemIndex, 0, ...removedItem);\r\n\r\n        this.fields = this.columns[0].filter(n => n.visible).map(n => n.field);\r\n        this.onFieldsChanged();\r\n\r\n        this.filterColumns(txt);\r\n    }\r\n\r\n    /**\r\n     * 0: 1ä¸ªä¹æ²¡æéä¸­ï¼ 1: å¨é¨éä¸­ï¼ 2: æéä¸­çä¹ææ²¡éä¸­ç\r\n     */\r\n    private getCheckAllState() {\r\n        if (!this.searchInput.nativeElement.value) {\r\n            if (this.fields.length === 0) {\r\n                return 0;\r\n            } else {\r\n                if (this.fields.length === this.columns[0].length) {\r\n                    return 1;\r\n                }\r\n                return 2;\r\n            }\r\n        } else {\r\n            const visibleLen = this.allCols.filter(n => n.visible).length;\r\n            if (visibleLen === this.allCols.length) {\r\n                return 1;\r\n            } else {\r\n                if (visibleLen < this.allCols.length) {\r\n                    if (visibleLen === 0) {\r\n                        return 0\r\n                    }\r\n                    return 1;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // å¨é\r\n    onCheckAllClick($event: MouseEvent, txt) {\r\n        $event.stopPropagation();\r\n        this.showSchemePanel = false;\r\n        const state = this.getCheckAllState();\r\n\r\n        const isCheckAll = state === 0 || state === 2;\r\n\r\n        if (!txt) {\r\n            this.columns[0].forEach(n => n.visible = isCheckAll);\r\n            \r\n        } else {\r\n            this.columns[0].forEach(n => {\r\n                const item = this.allCols.find(a => n.field == a.field);\r\n                if (item) {\r\n                    n.visible = isCheckAll;\r\n                    item.visible = isCheckAll;\r\n                }\r\n            });\r\n\r\n        }\r\n        this.fields = this.columns[0].filter(n => n.visible).map(n => n.field);\r\n\r\n        this.searchResultIsVisibleAll = this.allCols.filter(n => n.visible).length === this.allCols.length;\r\n\r\n        this.dirtySettings(true);\r\n\r\n        this.onFieldsChanged();\r\n        this.filterColumns(txt);\r\n    }\r\n\r\n    close($event?: MouseEvent) {\r\n        if ($event) {\r\n            $event.stopPropagation();\r\n        }\r\n        this.closed.emit();\r\n    }\r\n\r\n    // æå¼é«çº§è®¾ç½®çªå£\r\n    showAdvanced($event) {\r\n        this.close($event);\r\n        this.advanced.emit({ viewFields: this.fields });\r\n    }\r\n\r\n    // æ¢å¤é»è®¤\r\n    onSettingReset($event?: any) {\r\n        if ($event) {\r\n            $event.stopPropagation();\r\n        }\r\n\r\n        this.showSchemePanel = false;\r\n        const restorDefaultText = this.localeSer.getValue('datagrid.settings.restoreDefaultSettingsText') || 'ç¡®è®¤è¦æ¢å¤é»è®¤è®¾ç½®åï¼';\r\n        this.messager.confirm(restorDefaultText).subscribe((t: boolean) => {\r\n            if (t) {\r\n                this.reset2Default();\r\n                this.dirtySettings(true);\r\n            }\r\n        });\r\n    }\r\n\r\n    private reset2Default() {\r\n        const options = this.gridInstance.dfs['_state'].initialOptions;\r\n        if (options.columnFields && options.columnFields.length) {\r\n\r\n            const newColumns = [];\r\n            options.columnFields.forEach(c => {\r\n                if (c.field !== '_datagrid-setting-control_') {\r\n                    const col = this.gridInstance.columns[0].find((n: any) => n.field === c.field);\r\n                    if (col) {\r\n                        col.visible = c.visible;\r\n                        col.halign = c.halign;\r\n                        col.align = c.align;\r\n                        col.width = c.width;\r\n                        col.footer = {...c.footer || {}};\r\n                        col.groupFooter = {...c.groupFooter || {}};\r\n                        newColumns.push(col);\r\n                    }\r\n                }\r\n            });\r\n\r\n            this.columns = [newColumns];\r\n        }\r\n\r\n        this.allCols = this.columns[0];\r\n        this.settings = {};\r\n        this.fields = this.getViewColumns();\r\n        this.settings.viewColumns = this.fields;\r\n        this.settings.columnFormat = [...this.columns[0]];\r\n        if (options.sort) {\r\n            const sortOrders = options.sort.sortOrder? options.sort.sortOrder.split(',') : [];\r\n            const sortNames = options.sort.sortName ? options.sort.sortName.split(',') : [];\r\n            this.settings.sortInfo = { sortName: sortNames, sortOrder:  sortOrders };\r\n        } else {\r\n            this.settings.sortInfo = {};\r\n        }\r\n        this.settings.groupField =  options.groupField ? options.groupField.split(',') : [];\r\n    }\r\n\r\n    // ç¡®å®æé®ç¹å»äºä»¶\r\n    onSubmitClick($event?: any) {\r\n        if ($event) {\r\n            $event.stopPropagation();\r\n        }\r\n        this.showSchemePanel = false;\r\n        this.settings.viewColumns = this.fields;\r\n\r\n        if (!this.enableScheme || !this.currentSchemeItem) {\r\n            if (!this.settings.columnFormat) {\r\n                this.settings.columnFormat = [...this.columns[0]];\r\n            }\r\n\r\n            if (!this.settings.sortInfo) {\r\n                this.settings.sortInfo = {\r\n                    sortName: this.gridInstance.sortName ? this.gridInstance.sortName.split(',') : [],\r\n                    sortOrder:  this.gridInstance.sortOrder ? this.gridInstance.sortOrder.split(',') : []\r\n                };\r\n            }\r\n\r\n            if (this.settings.groupField === undefined) {\r\n                this.settings.groupField = this.gridInstance.groupField ? this.gridInstance.groupField.split(',') : [];\r\n            }\r\n        } else {\r\n            const _settings = this.getCurrentSchemeSettings();\r\n            if (_settings) {\r\n                this.settings = Object.assign(_settings || {}, this.settings);\r\n            }\r\n        }\r\n        // this.activeItemChange.emit(this.activeSchemeItem);\r\n        this.submit.emit({content: this.settings, close: this.close.bind(this), target: this.btnOk.nativeElement, currentScheme: this.currentSchemeItem});\r\n    }\r\n\r\n    // æ¾ç¤ºä¸ææ¹æ¡åè¡¨\r\n    onChooseScheme($event) {\r\n        if ($event) {\r\n            $event.stopPropagation();\r\n        }\r\n\r\n        this.showSchemePanel = !this.showSchemePanel;\r\n\r\n        setTimeout(() => {\r\n            if (this.schemeitemsEleRef && this.currentSchemeItem) {\r\n                const itemEl = this.schemeitemsEleRef.nativeElement.querySelector(`#schemeitem_${this.currentSchemeItem.id}`);\r\n                if (itemEl) {\r\n                    if (itemEl.scrollIntoViewIfNeeded) {\r\n                        itemEl.scrollIntoViewIfNeeded();\r\n                    } else {\r\n                        itemEl.scrollIntoView();\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    // ä»æ¾ç¤ºå¯è§å\r\n    onlySeeVisibleColumns($event) {\r\n        this.switchValue = $event;\r\n        this.filterColumns();\r\n    }\r\n\r\n    // æ°å¢æ¹æ¡\r\n    onNewSchemeClick($event) {\r\n        if ($event) {\r\n            $event.stopPropagation();\r\n        }\r\n        this.showSchemePanel = false;\r\n        this.addNewScheme.emit();\r\n    }\r\n\r\n    // æ¾ç¤ºæ¹æ¡åè¡¨ç®¡ççªå£\r\n    onShowSchemeList($event) {\r\n        if ($event) {\r\n            $event.stopPropagation();\r\n        }\r\n        this.showSchemePanel = false;\r\n        this.showSchemeList.emit();\r\n    }\r\n\r\n    // æ¹æ¡ç¹å»\r\n    onSchemeItemClick($event, item) {\r\n        setTimeout(() => {\r\n            this.currentSchemeItem = item;\r\n            this.showSchemePanel = false;\r\n\r\n            let schemeSettings = null;\r\n            if (item) {\r\n                schemeSettings = JSON.parse(item.queryConditionString);\r\n                schemeSettings = schemeSettings[this.localeSer.localeId];\r\n\r\n                if (!schemeSettings) {\r\n                    this.reset2Default();\r\n                } else {\r\n                    this.settings = schemeSettings;\r\n                    this.fields = schemeSettings.viewColumns;   \r\n                }\r\n\r\n            } else {\r\n                this.reset2Default();\r\n            }\r\n            this.cd.detectChanges();\r\n        });\r\n    }\r\n\r\n\r\n    dirtySettings(flag) {\r\n        // this.isChanged = flag;\r\n    }\r\n}\r\n","import { Observable, of, Subject } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { BatchScheme, DatagridSchemeModel, DgSchemeState, SchemeAuthModel, SchemeState } from \"./setting.model\";\r\n\r\n/** ä¿å­æ¹æ¡API */\r\nconst SCHEME_WEBAPI = '/api/runtime/sys/v1.0/querysolution';\r\n/** è·åæ¹æ¡åè¡¨API */\r\nconst SCHEME_WEBAPI_QUERY = `${SCHEME_WEBAPI}/belongId/`;\r\n/** æ¹æ¡åè¡¨ç®¡ç- è®¾é»è®¤ãå é¤ API */\r\nconst SCHEME_WEBAPI_UPDATE = `${SCHEME_WEBAPI}/batch`;\r\n/** æééªè¯ */\r\nconst SCHEME_WEBAPI_Auth = '/api/runtime/sys/v1.0/querysolution/componentType/Datagrid';\r\n\r\nconst LANGUAGE_WEBAPI = '/api/runtime/sys/v1.0/loginInfo?infoType=supportedLanguage';\r\n\r\n\r\nexport class DatagridSchemeService {\r\n    private restService = null;\r\n    private state: DgSchemeState = {};\r\n\r\n    schemeList$ = new Subject();\r\n\r\n    constructor() {\r\n    }\r\n\r\n    update(d: SchemeState, gridId: string) {\r\n        if (!this.state[gridId]) {\r\n            this.state[gridId] = {};\r\n        }\r\n        this.state[gridId] = Object.assign(this.state[gridId], d);\r\n    }\r\n\r\n    setRestService(httpSer: any) {\r\n        if (httpSer && httpSer['befRepository']) {\r\n            this.restService = httpSer['befRepository']['restService'];\r\n        }\r\n    }\r\n\r\n    private getWebFormKey() {\r\n        const webformHash = window.location.hash.split('?')[0];\r\n        return webformHash.substring(webformHash.lastIndexOf('/') + 1);\r\n    }\r\n\r\n    getSchemeKey(gridId: string) {\r\n        const formKey = this.getWebFormKey();\r\n        return `${formKey}_DatagridScheme_${gridId}`;\r\n    }\r\n\r\n    getSchemeList(gridID: string): Observable<DatagridSchemeModel[]> {\r\n        const uri = SCHEME_WEBAPI_QUERY + this.getSchemeKey(gridID);\r\n        if (this.restService) {\r\n            return this.restService.invoke(uri, 'GET', null, null, false);\r\n        }\r\n    }\r\n\r\n    saveScheme(scheme: DatagridSchemeModel, gridID: string, isUpdate = false) {\r\n        if (this.restService) {\r\n            const httpMethod = isUpdate ? 'PUT': 'POST';\r\n            scheme.belongId = this.getSchemeKey(gridID);\r\n            return this.restService.invoke(SCHEME_WEBAPI, httpMethod, null, { body: scheme}, false);\r\n        }\r\n    }\r\n\r\n    updateScheme(param: BatchScheme, gridID: string): Observable<any> {\r\n        if (!param) {\r\n            return of(false);\r\n        }\r\n        const belongId = this.getSchemeKey(gridID);\r\n        param.belongId = belongId\r\n\r\n        if (param.belongId) {\r\n            return this.restService.invoke(SCHEME_WEBAPI_UPDATE, 'PUT', null, {body: param}, false);\r\n        }\r\n    }\r\n\r\n    getStateValue(gridId, ...statePro) {\r\n        const dgState = this.state[gridId];\r\n        if (dgState) {\r\n            if (statePro && statePro.length) {\r\n                return statePro.reduce((r, c) => {\r\n                    return r[c];\r\n                }, dgState)\r\n            }\r\n\r\n            return dgState;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    private updateStateValue(gridId, propertyName, value) {\r\n        this.update({[propertyName]: value}, gridId);\r\n    }\r\n\r\n    setSchemeList(gridId, newSchemeList) {\r\n        this.updateStateValue(gridId, 'list', newSchemeList);\r\n        this.schemeList$.next(newSchemeList);\r\n    }\r\n\r\n    hasSchemeName(gridId, schemeName: any) {\r\n        const schemeList = this.getStateValue(gridId, 'list');\r\n        if (!schemeList || !schemeList.length) {\r\n            return false;\r\n        }\r\n\r\n        if (typeof schemeName === 'string') {\r\n            return !!schemeList.find(n => n.name === schemeName.trim());\r\n        } else {\r\n            if (typeof schemeName === 'object') {\r\n                const replayNames = [];\r\n                schemeList.forEach(n => {\r\n                    const currentNames = Object.values(n.name);\r\n                    for(let k in schemeName) {\r\n                        if (currentNames.includes(schemeName[k])) {\r\n                            replayNames.push(k);\r\n                        }\r\n                    }\r\n                });\r\n\r\n                return replayNames;\r\n            }\r\n        }\r\n    }\r\n\r\n    checkAuthority(): Observable<SchemeAuthModel> {\r\n        return this.restService.invoke(SCHEME_WEBAPI_Auth, 'GET', null, null, false);\r\n    }\r\n\r\n    getLanguages() {\r\n        return this.restService.invoke(LANGUAGE_WEBAPI, 'GET', null, null, false);\r\n    }\r\n}\r\n","import { ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'new-scheme',\r\n    templateUrl: './newscheme.component.html',\r\n    styles: [\r\n        `\r\n        .icon-question {\r\n            width: 16px;\r\n            border-radius: 20px;\r\n            height: 16px;\r\n            text-align: center;\r\n            vertical-align: middle;\r\n            line-height: 15px;\r\n            font-size: 10px;\r\n            margin-left: 10px;\r\n            background: #EAF4FF;\r\n            color: #2A87FF;\r\n            cursor: pointer\r\n        }\r\n\r\n        .icon-question:hover {\r\n            background: #2A87FF;\r\n            color: #fff;\r\n        }\r\n        `\r\n    ]\r\n})\r\nexport class NewSchemeComponent implements OnInit {\r\n\r\n    @ViewChild('header') header: ElementRef<any>;\r\n\r\n    @Input() dataPermissionIds = [];\r\n\r\n    @Output() closeModal = new EventEmitter();\r\n    @Output() submitModal = new EventEmitter();\r\n    @Output() checkAuthority = new EventEmitter();\r\n\r\n    schemeInfo = {\r\n        name: '',\r\n        isDefault: false,\r\n        type: 'private',\r\n        orgids: ''\r\n    }\r\n\r\n    schemeType = 'private';\r\n\r\n    noPublicAuthority = false;\r\n    noOrgAuthority = false;\r\n\r\n    languages = [{ code: 'zh-CHS', name: 'ä¸­æç®ä½', default: true },{ code: 'en', name: 'English' },{ code: 'zh-CHT', name: 'ä¸­æç¹ä½'}];\r\n    nameMaxLength = { 'zh-CHS': 9, 'zh-CHT': 9, en: 50 };\r\n    \r\n    constructor(private cd: ChangeDetectorRef) { }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    close($event) {\r\n        this.closeModal.emit();\r\n    }\r\n\r\n    submit($event) {\r\n        this.submitModal.emit(this.schemeInfo);\r\n    }\r\n\r\n    onCancelClick($event) {\r\n        this.close($event);\r\n    }\r\n\r\n    onSelectedOrg($event) {\r\n        if ($event.selections && $event.selections.length ) {\r\n            let orgids = $event.selections.map(n => n.orgId);\r\n            this.schemeInfo.orgids = orgids;\r\n        }\r\n    }\r\n\r\n    onSetRangeType($event: MouseEvent, val) {\r\n        $event.stopPropagation();\r\n        this.schemeType = val;\r\n        if (val === 'public' || val === 'org') {\r\n            this.checkAuthority.emit({ value: val, schemeInfo: this.schemeInfo });\r\n        } else {\r\n            this.schemeInfo.type = val;\r\n        }\r\n        // console.log($event, this.schemeInfo.type);\r\n    }\r\n\r\n    refresh(hasAuthority = { public: true, org: true }) {\r\n        this.schemeInfo = {...this.schemeInfo};\r\n        this.schemeType = this.schemeInfo.type;\r\n        this.noPublicAuthority = !hasAuthority.public;\r\n        this.noOrgAuthority = !hasAuthority.org;\r\n        this.cd.detectChanges();\r\n    }\r\n\r\n    getSelectedId($event) {\r\n        console.log($event);\r\n        if ($event.selections &&$event.selections.length) {\r\n            this.schemeInfo.orgids = $event.selections.map(n => n.orgId);\r\n        } else {\r\n            this.schemeInfo.orgids = '';\r\n        }\r\n    }\r\n\r\n    clearAllOrgs() {\r\n        this.schemeInfo.orgids = '';\r\n    }\r\n}\r\n","import { ChangeDetectorRef, Component, ElementRef, EventEmitter, Injector, Input, OnInit, Output, TemplateRef, ViewChild } from '@angular/core';\r\nimport { DatagridComponent } from '@farris/ui-datagrid';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { getMultilingualValue } from '../getValueWithLocaleId';\r\n\r\n@Component({\r\n    selector: 'scheme-list',\r\n    templateUrl: 'scheme-list.component.html'\r\n})\r\n\r\nexport class SchemeListComponent implements OnInit {\r\n\r\n    @Input() items = [];\r\n    \r\n    @Output() closeModal = new EventEmitter();\r\n    @Output() submitModal = new EventEmitter();\r\n\r\n    @Input() removeItem = true;\r\n    \r\n    @ViewChild('header') header: ElementRef<any>;\r\n    @ViewChild('schemeName') schemeName: TemplateRef<any>;\r\n    @ViewChild('schemeIsDefault') schemeIsDefault: TemplateRef<any>;\r\n    @ViewChild('btnDel') btnDel: TemplateRef<any>;\r\n    @ViewChild('dg') dg: DatagridComponent;\r\n\r\n    columns = [];\r\n   \r\n    private changes: {\r\n        defaultId?: string,\r\n        deletedIds?: any[]\r\n    } = null;\r\n    constructor(private cd: ChangeDetectorRef, private localeSer: LocaleService, private injector: Injector) { }\r\n\r\n    ngOnInit(): void {\r\n\r\n        const colName = this.localeSer.getValue('datagrid.scheme.columns.name') || 'åç§°';\r\n        const colType = this.localeSer.getValue('datagrid.scheme.columns.type') || 'å±æ§';\r\n        const colDefault = this.localeSer.getValue('datagrid.scheme.columns.isDefault') || 'é»è®¤';\r\n        const colCreator = this.localeSer.getValue('datagrid.scheme.columns.username') || 'åå»ºäºº';\r\n        const colMgr = this.localeSer.getValue('datagrid.scheme.columns.mgr') || 'ç®¡ç';\r\n\r\n        const publicTxt = this.localeSer.getValue('datagrid.scheme.isPublic') || 'å¬å±';\r\n        const privateTxt = this.localeSer.getValue('datagrid.scheme.isPrivate') || 'ä¸ªäºº';\r\n        const orgTxt = this.localeSer.getValue('datagrid.scheme.isOrg') || 'ç»ç»';\r\n\r\n\r\n        this.columns = [\r\n            // {field: 'name', title: 'åç§°', width: 150, template: this.schemeName},\r\n            {field: 'name', title: colName, width: 150, formatter: (v) => {\r\n                return getMultilingualValue(JSON.parse(v), this.localeSer.localeId);\r\n            }},\r\n            {field: 'type', title: colType, width: 50, halign: 'center', align: 'center', formatter: (v, d) => {\r\n                switch(v) {\r\n                    case 'public':\r\n                        return '<span class=\"scheme-manager__label px-1 public\">'+ publicTxt +'</span>';\r\n                    case 'org':\r\n                        return '<span class=\"scheme-manager__label px-1 org\">'+ orgTxt +'</span>';\r\n                    case 'private':\r\n                    default:\r\n                        return '<span class=\"scheme-manager__label px-1 private\">'+ privateTxt +'</span>';\r\n                }\r\n            }},\r\n            {field: 'isDefault', title: colDefault, width: 50, halign: 'center', align: 'center', template: this.schemeIsDefault },\r\n            {field: 'userName', title: colCreator, width: 80},\r\n            {title: colMgr, width: 50, template: this.btnDel, halign: 'center', align: 'center',}\r\n        ];\r\n    \r\n    }\r\n\r\n    onClose($event) {\r\n        this.closeModal.emit();\r\n    }\r\n\r\n    onSubmitClick($event) {\r\n        this.submitModal.emit( this.changes);\r\n    }\r\n\r\n    onCancelClick($event) {\r\n        this.closeModal.emit();\r\n    }\r\n\r\n    setDefault($event: any, ctx) {\r\n        const r = $event == '1';\r\n        // $event.stopPropagation();\r\n        this.items.forEach(n => {\r\n            n.isDefault = false;\r\n            if (n.id === ctx.rowData.id && r) {\r\n                n.isDefault = r;\r\n            }\r\n        });\r\n\r\n        this.items = [...this.items];\r\n\r\n        const defaultItem = this.items.find(n => n.isDefault);\r\n        if (defaultItem) {\r\n            this.changes = this.changes || {};\r\n            this.changes.defaultId = defaultItem.id;\r\n        }\r\n        // this.cd.detectChanges();\r\n    }\r\n\r\n    onSchemeDel($event, ctx) {\r\n        if (!this.removeItem) {\r\n            return;\r\n        }\r\n        $event.stopPropagation();\r\n        const id = ctx.rowData.id;\r\n        this.items = this.items.filter(n => n.id !== id);\r\n        this.changes = this.changes || {};\r\n        this.changes.deletedIds = [...(this.changes.deletedIds || []), id];\r\n        if (id === this.changes.defaultId) {\r\n            this.changes.defaultId = '';\r\n            delete this.changes.defaultId;\r\n        }\r\n    }\r\n}","import { map, switchMap, tap } from 'rxjs/operators';\r\nimport { forkJoin, Observable, of, Subscription, timer } from 'rxjs';\r\nimport { Injectable, Injector, InjectionToken, ComponentFactoryResolver, ApplicationRef } from '@angular/core';\r\nimport { DatagridComponent, DataColumn } from '@farris/ui-datagrid';\r\nimport { BsModalService, ModalOptions, ModalContainerComponent } from '@farris/ui-modal';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { DatagridSettingsComponent } from './datagrid-settings.component';\r\nimport { cloneDeep } from 'lodash-es';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { TreeNode } from '@farris/ui-treetable';\r\nimport { IdService } from '@farris/ui-common';\r\nimport { SimpleColumnsComponent } from './simple-mode/simple-columns.component';\r\nimport { DatagridSchemeService } from './datagrid-scheme.service';\r\nimport { NewSchemeComponent } from './scheme/newscheme.component';\r\nimport { SchemeListComponent } from './scheme/scheme-list.component';\r\nimport { NotifyService } from '@farris/ui-notify';\r\nimport { DatagridSchemeModel, SchemeAuthModel, SettingModel } from './setting.model';\r\n\r\n\r\nexport const GRID_SETTINGS_WEBAPI =  new InjectionToken(' Farris DataGrid User Setting WebApi URI.');\r\n\r\n@Injectable()\r\nexport class DatagridSettingsService {\r\n\r\n    private multiSortMsg = 'åè¡¨ä¸­æªå¼å¯å¤åæåºçåè½ã è¯·æ£æ¥ï¼';\r\n    private columnsSortableMsg = 'æªå¼å¯åçæåºåè½ãè¯·æ£æ¥ï¼';\r\n    private notSupportHeaderGroupMsg = 'æä¸æ¯æå¤è¡¨å¤´è®¾ç½®';\r\n    private notShowDialog = 'å¤è¡¨å¤´æä¸æ¯æåæ¾ç¤ºè®¾ç½®ï¼åæ¶æªå¯ç¨åæåºåè½ã';\r\n\r\n    private _httpRestService = null;\r\n\r\n    private languages: any = [];\r\n\r\n    get httpRestService() {\r\n        return this._httpRestService;\r\n    };\r\n\r\n    set httpRestService(httpSer) {\r\n        this._httpRestService = httpSer;\r\n\r\n        if (this.schemeService) {\r\n            this.schemeService.setRestService(httpSer);\r\n        }\r\n    }\r\n\r\n    private gridRefs: {[key: string]: DatagridComponent} = null;\r\n    private activeSchemeItem: {[schemeid: string]: any} = null;\r\n\r\n    private saving = false;\r\n    private cfr: ComponentFactoryResolver = null;\r\n    private app: ApplicationRef = null;\r\n    private schemeListSubscription: Subscription = null;\r\n\r\n    private schemeService: DatagridSchemeService;\r\n    private notifyService: NotifyService;\r\n    constructor(private injector: Injector, private modalSer: BsModalService,\r\n                private messager: MessagerService, private idService: IdService,\r\n                private localeSer: LocaleService) {\r\n\r\n        this.cfr = this.injector.get(ComponentFactoryResolver);\r\n        this.app = this.injector.get(ApplicationRef);\r\n        this.notifyService = this.injector.get(NotifyService, null);\r\n        this.schemeService = new DatagridSchemeService();\r\n    }\r\n\r\n\r\n    destroy(id?: string) {\r\n        if (id && this.gridRefs && this.gridRefs[id]) {\r\n            delete this.gridRefs[id];\r\n        } else {\r\n            this.gridRefs = null;\r\n        }\r\n        this.saving = false;\r\n        this.setActiveSchemeItem(id, null);\r\n    }\r\n\r\n    registerGridInstance(dg: DatagridComponent) {\r\n        if (!dg) {\r\n            console.log('DatagridSettingService: grid instance is null.');\r\n            return;\r\n        }\r\n        const id = dg.id;\r\n        this.gridRefs = this.gridRefs || {};\r\n        if (!this.gridRefs[id]) {\r\n            this.gridRefs[id] = dg;\r\n        }\r\n    }\r\n\r\n    getGridInstance(dgID: string) {\r\n        return this.gridRefs ? this.gridRefs[dgID] : null;\r\n    }\r\n\r\n    /** æ´æ°æ¹æ¡ä¸­çéç½®æ°æ® */\r\n    private updateSchemeSettings(schemeItem: DatagridSchemeModel, settings: Partial<SettingModel>) {\r\n        if (schemeItem && settings) {\r\n            const schemeContentObj = JSON.parse(schemeItem.queryConditionString);\r\n            if (schemeContentObj) {\r\n                if ( schemeContentObj[this.localeSer.localeId]) {\r\n                    const schemeSettings = schemeContentObj[this.localeSer.localeId];\r\n                    schemeContentObj[this.localeSer.localeId] = Object.assign(schemeSettings, settings);\r\n                } else {\r\n                    schemeContentObj[this.localeSer.localeId] =  settings;\r\n                }\r\n                schemeItem.queryConditionString = JSON.stringify(schemeContentObj);\r\n            }\r\n        }\r\n    }\r\n\r\n    /** æ´æ°å½åæ¹æ¡éç½®æ°æ® */\r\n    updateActiveSchemeItemSettings(dgId: string, settings: Partial<SettingModel>) {\r\n        const schemeItem = this.getActiveSchemeItem(dgId);\r\n        this.updateSchemeSettings(schemeItem, settings);\r\n    }\r\n\r\n    /** è®¾ç½®æ´»å¨çæ¹æ¡ */\r\n    setActiveSchemeItem(dgId: string, activeItem: any) {\r\n        const schemekey = this.schemeService.getSchemeKey(dgId);\r\n        this.activeSchemeItem = this.activeSchemeItem || {};\r\n        this.activeSchemeItem[schemekey] = activeItem;\r\n    }\r\n    /** è·åå½åæ´»å¨çæ¹æ¡ */\r\n    getActiveSchemeItem(dgId: string): DatagridSchemeModel {\r\n        const schemekey = this.schemeService.getSchemeKey(dgId);\r\n        return this.activeSchemeItem ? this.activeSchemeItem[schemekey] : null;\r\n    }\r\n\r\n    getSearchTypes() {\r\n        return [\r\n            { value: 'all', title: this.localeSer.getValue('datagrid.settings.allColumns') },\r\n            { value: 'visible', title: this.localeSer.getValue('datagrid.settings.visibleColumns') },\r\n            { value: 'hidden', title: this.localeSer.getValue('datagrid.settings.hiddenColumns') }\r\n        ];\r\n    }\r\n\r\n    showSimple(gridInstance: DatagridComponent, settings?: SettingModel, selectedSchemeItem?: DatagridSchemeModel) {\r\n        const columns = this.convertColumnsToSimple(gridInstance.columns);\r\n        columns[0] = columns[0].filter(n => n.field && n.field !== gridInstance.ControlPanelFeild);\r\n\r\n        const searchTypes = this.getSearchTypes();\r\n\r\n        if (this.cfr) {\r\n            const cmpFactory = this.cfr.resolveComponentFactory(SimpleColumnsComponent);\r\n            let simpleRef = cmpFactory.create(this.injector);\r\n            this.app.attachView(simpleRef.hostView);\r\n            simpleRef.instance.columns = columns;\r\n            simpleRef.instance.seartTypes = searchTypes;\r\n            simpleRef.instance.gridInstance = gridInstance;\r\n\r\n            if (document.querySelector('#page-wrapper')) {\r\n                simpleRef.instance.top = 76;\r\n            }\r\n\r\n            simpleRef.instance.enableScheme = gridInstance.enableScheme;\r\n            if (gridInstance.enableScheme) {\r\n                if (settings) {\r\n                    if (selectedSchemeItem) {\r\n                        this.updateSchemeSettings(selectedSchemeItem, settings);\r\n                        simpleRef.instance.currentSchemeItem = selectedSchemeItem;\r\n                    } else {\r\n                        simpleRef.instance.currentSchemeItem = null;\r\n                        simpleRef.instance.settings = settings;\r\n                    }\r\n                } else {\r\n                    const _currentSchemtItem = this.getActiveSchemeItem(gridInstance.id);\r\n                    simpleRef.instance.currentSchemeItem = _currentSchemtItem;\r\n                }\r\n            }\r\n\r\n            document.body.appendChild(simpleRef.location.nativeElement);\r\n\r\n            simpleRef.instance.closed.pipe(\r\n                switchMap( () => {\r\n                    simpleRef.instance.container.nativeElement.style.right = '-500px';\r\n                    return timer(500);\r\n                })\r\n            ).subscribe( () => {\r\n                simpleRef.location.nativeElement.remove();\r\n                simpleRef.destroy();\r\n                simpleRef = null;\r\n                if (this.schemeListSubscription) {\r\n                    this.schemeListSubscription.unsubscribe();\r\n                }\r\n            });\r\n\r\n            simpleRef.instance.advanced.subscribe(({ viewFields }) => {\r\n                if (viewFields && viewFields.length){\r\n                    this.updateSchemeSettings(simpleRef.instance.currentSchemeItem, {viewColumns: viewFields});\r\n                }\r\n                this.showAdvanced(gridInstance, null, simpleRef.instance.currentSchemeItem);\r\n            });\r\n\r\n            simpleRef.instance.submit.subscribe( (e: any) => {\r\n                e.target.disabled = true;\r\n                if (this.saving) {\r\n                    return;\r\n                }\r\n                if (!this.saving) {\r\n\r\n                    if (e.currentScheme) {\r\n                        this.setActiveSchemeItem(gridInstance.id, e.currentScheme);\r\n                    }\r\n\r\n                    this.updateGridView(e, gridInstance, e.target);\r\n                }\r\n            });\r\n\r\n            simpleRef.instance.fieldsChange.subscribe((visibleFields: string[]) => {\r\n                this.updateActiveSchemeItemSettings(gridInstance.id, {viewColumns: visibleFields})\r\n            });\r\n\r\n            // æå¼æ°å¢æ¹æ¡çªå£\r\n            simpleRef.instance.addNewScheme.subscribe(() => {\r\n                this.showNewSchemeDialog(gridInstance, simpleRef);\r\n            });\r\n\r\n            simpleRef.instance.schemeList = this.schemeService.getStateValue(gridInstance.id, 'list') || [];\r\n\r\n            // æå¼æ¹æ¡ç®¡çåè¡¨çªå£\r\n            simpleRef.instance.showSchemeList.subscribe(() => {\r\n                this.schemeService.getSchemeList(gridInstance.id).pipe(\r\n                    switchMap((t) => {\r\n                        return this.schemeService.checkAuthority().pipe(\r\n                            map((auth: SchemeAuthModel) => {\r\n                                return {\r\n                                    list: t,\r\n                                    ...auth\r\n                                }\r\n                            })\r\n                        )\r\n                    })\r\n                ).subscribe((t: any) => {\r\n                    this.schemeService.setSchemeList(gridInstance.id, t.list || []);\r\n                    this.showSchemeListDialog(gridInstance, cloneDeep(t.list || []), t.success);\r\n                });\r\n            });\r\n\r\n            this.schemeListSubscription = this.schemeService.schemeList$.subscribe((list: any) => {\r\n                simpleRef.instance.schemeList = list;\r\n\r\n                if (!list || !list.length) {\r\n                    this.setActiveSchemeItem(gridInstance.id, null);\r\n                    return;\r\n                }\r\n\r\n                const _activeSchemeItem = this.getActiveSchemeItem(gridInstance.id);\r\n                if (_activeSchemeItem) {\r\n                    let hasActiveItem = list.find(n => n.id === _activeSchemeItem.id);\r\n                    if (!hasActiveItem) {\r\n                        hasActiveItem = this.getDefaultScheme(list); // è·åè®¾ç½®ä¸ºå½åæ¹æ¡çé¡¹\r\n                        this.setActiveSchemeItem(gridInstance.id, hasActiveItem || null);\r\n                    }\r\n\r\n                    simpleRef.instance.currentSchemeItem = hasActiveItem;\r\n                }\r\n            });\r\n\r\n            // åæ¢æ¹æ¡\r\n            simpleRef.instance.activeItemChange.subscribe((r: any) => {\r\n                this.setActiveSchemeItem(gridInstance.id, r);\r\n            });\r\n\r\n            simpleRef.hostView.detectChanges();\r\n\r\n            simpleRef.instance.container.nativeElement.style.right = '0px';\r\n\r\n            return simpleRef;\r\n        }\r\n    }\r\n\r\n\r\n    show(gridInstance: DatagridComponent, opts?: ModalOptions) {\r\n        this.registerGridInstance(gridInstance);\r\n\r\n        if (gridInstance.enableSimpleMode) {\r\n            return this.showSimple(gridInstance);\r\n        } else {\r\n            return this.showAdvanced(gridInstance, opts);\r\n        }\r\n    }\r\n\r\n    private showAdvanced(gridInstance: DatagridComponent, opts?: ModalOptions, selectedSchemeItem?: DatagridSchemeModel) {\r\n        let _editColSortInfo = true;\r\n        const editColSortInfo = this.canSetColumnSort(gridInstance);\r\n        if (editColSortInfo !== true) {\r\n            // this.messager.warning(msg);\r\n            // return;\r\n            _editColSortInfo = false;\r\n        }\r\n\r\n        const showSetColumnsTab = !this.isHeaderGroup(gridInstance);\r\n        const getActiveTabIndex = () => {\r\n            if (showSetColumnsTab) {\r\n                return 1;\r\n            } else {\r\n                if (_editColSortInfo) {\r\n                    return 2;\r\n                } else {\r\n                    return -1;\r\n                }\r\n            }\r\n        };\r\n        const activeTabIndex = getActiveTabIndex();\r\n\r\n        if (activeTabIndex === -1) {\r\n            this.messager.warning(this.notShowDialog);\r\n            return;\r\n        }\r\n\r\n        const columns = this.convertColumnsToSimple(gridInstance.columns);\r\n\r\n        // è·åå½åæ¹æ¡ä¸­å½åè¯­è¨çéç½®æ°æ®\r\n        let currentSettings: SettingModel = null;\r\n        if (selectedSchemeItem && selectedSchemeItem.queryConditionString) {\r\n            currentSettings = JSON.parse(selectedSchemeItem.queryConditionString)[this.localeSer.localeId];\r\n\r\n            if (currentSettings.columnFormat && currentSettings.columnFormat.length) {\r\n                columns[0] = columns[0].map((col) => {\r\n                    const fcol = currentSettings.columnFormat.find(n => n.field === col.field);\r\n                    if (fcol) {\r\n                        col = Object.assign(col, fcol);\r\n                    }\r\n                    return col;\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n        columns[0] = columns[0].filter(n => n.field && n.field !== gridInstance.ControlPanelFeild);\r\n        const treeData = this.convertColumns2TreeData(cloneDeep(columns), true);\r\n        const viewColumnsTreeData = this.convertColumns2TreeData(cloneDeep(columns), false);\r\n        this.checkViewTreeNodes(viewColumnsTreeData);\r\n\r\n        let modalRef = null;\r\n\r\n        const okText = this.localeSer.getValue('datagrid.settings.ok') || 'ç¡®å®';\r\n        const cancelText = this.localeSer.getValue('datagrid.settings.cancel') || 'åæ¶';\r\n        const resetText =  this.localeSer.getValue('datagrid.settings.reset') || 'éç½®';\r\n\r\n        const defaultOpts = {\r\n            width: 760, height: 560, showHeader: false, title: 'æ§å¶é¢æ¿',\r\n            initialState: {\r\n                columns,\r\n                sortTreeData: treeData,\r\n                viewTreeData: viewColumnsTreeData,\r\n                gridInstance,\r\n                canSetColumnSort: _editColSortInfo,\r\n                canSetColumnVisible: showSetColumnsTab,\r\n                activeTabIndex,\r\n                schemeInfo: currentSettings\r\n            },\r\n            showButtons: false\r\n        };\r\n        const modalOpts = Object.assign(defaultOpts, opts || {});\r\n\r\n        modalRef = this.modalSer.show(DatagridSettingsComponent, modalOpts);\r\n        const instance = modalRef.content as DatagridSettingsComponent;\r\n        instance.enableReset = true;\r\n        instance.modalRef = modalRef;\r\n        instance.canSetColumnSort = _editColSortInfo;\r\n        instance.canSetColumnVisible = !this.isHeaderGroup(gridInstance);\r\n\r\n        instance.submitHandle.subscribe((e) => {\r\n            e.target.disabled = true;\r\n            if (this.saving) {\r\n                return;\r\n            }\r\n            if (!this.saving) {\r\n                if (selectedSchemeItem) {\r\n                    this.setActiveSchemeItem(gridInstance.id, selectedSchemeItem);\r\n                }\r\n                this.updateGridView(modalRef, gridInstance, e.target);\r\n            }\r\n        });\r\n\r\n        instance.cancelHandle.subscribe((e) => {\r\n            modalRef.close();\r\n        });\r\n\r\n        // åæ¢å°ä¾§è¾¹æ ç®æ´æ¨¡å¼\r\n        instance.concise.subscribe((e) => {\r\n            modalRef.close();\r\n            const settings = modalRef.content;\r\n            const { sortInfo, viewColumns, columnFormat, groupField } = settings;\r\n            this.showSimple(gridInstance, { sortInfo, viewColumns, columnFormat, groupField }, selectedSchemeItem);\r\n        });\r\n\r\n        const modalContainer = modalRef.dialog.instance as ModalContainerComponent;\r\n        modalContainer.draggbar.handle = instance.header.nativeElement;\r\n        return modalRef;\r\n    }\r\n\r\n\r\n\r\n    private canSetColumnSort(gridInstance: DatagridComponent) {\r\n        if (gridInstance.multiSort && this.hasEnableSortColumns(gridInstance)) {\r\n            return true;\r\n        } else {\r\n            if (!this.hasEnableSortColumns(gridInstance)) {\r\n                return this.columnsSortableMsg;\r\n            } else if (!gridInstance.multiSort) {\r\n                return this.multiSortMsg;\r\n            }\r\n        }\r\n    }\r\n\r\n    private hasEnableSortColumns(gridInstance: DatagridComponent) {\r\n        const sortColumnsCount = gridInstance.flatColumns.reduce((c, r) => {\r\n            if (r.sortable) {\r\n                return c + 1;\r\n            }\r\n            return c;\r\n        }, 0);\r\n\r\n        return sortColumnsCount > 0;\r\n    }\r\n\r\n    private isHeaderGroup(grid: DatagridComponent) {\r\n        const flag = grid.columns.length > 1;\r\n        if (flag) {\r\n            return this.notSupportHeaderGroupMsg;\r\n        }\r\n        return flag;\r\n    }\r\n\r\n    private getChilds(cols, rowIndex, colStartIndex, colCount, forSort = false) {\r\n        const childCols = [];\r\n        let _count = colStartIndex;\r\n        if (!cols[rowIndex]) {\r\n            return  [];\r\n        }\r\n\r\n        cols[rowIndex].slice().forEach(element => {\r\n            _count = _count + element.colspan;\r\n            if ( _count <= colCount ) {\r\n                childCols.push(element);\r\n            }\r\n        });\r\n\r\n        cols[rowIndex].splice(0, childCols.length);\r\n\r\n        return childCols.map((c, i) => {\r\n            let n: any = {\r\n                data: c,\r\n                selectable: forSort ? !!c.sortable : true\r\n            };\r\n\r\n            if (c.colspan && c.colspan > 1) {\r\n                n = {\r\n                    data: c,\r\n                    selectable: false,\r\n                    expanded: true,\r\n                    children: this.getChilds(cols, rowIndex + 1, 0 , c.colspan)\r\n                };\r\n            }\r\n            return n;\r\n        });\r\n    }\r\n    convertColumns2TreeData(cols: DataColumn[][], forSort = false) {\r\n        const columns = cols.map((c: any) => {\r\n            c.map((_) => {\r\n                _.colspan = _.colspan || 1;\r\n                return _;\r\n            });\r\n            return c;\r\n        });\r\n        if (columns.length === 1) {\r\n            return columns[0].map(c => {\r\n                return {\r\n                    data: c,\r\n                    selectable: forSort ? !!c.sortable : true\r\n                };\r\n            });\r\n        } else {\r\n            return columns[0].map((c, i) => {\r\n                if (c.colspan && c.colspan > 1) {\r\n                    return {\r\n                        data: c,\r\n                        selectable: false,\r\n                        expanded: true,\r\n                        children: this.getChilds(columns, 1, 0, c.colspan, forSort)\r\n                    };\r\n                } else {\r\n                    return {\r\n                        data: c,\r\n                        selectable: forSort ? !!c.sortable : true\r\n                    };\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    private checkViewTreeNodes(treeNodes: TreeNode[]) {\r\n        treeNodes.forEach((tn: TreeNode) => {\r\n            if (!tn.children || !tn.children.length) {\r\n                tn.selectable = true;\r\n            } else {\r\n                tn.selectable = false;\r\n                this.checkViewTreeNodes(tn.children);\r\n            }\r\n        });\r\n    }\r\n\r\n    private convertColumnsToSimple(cols: any) {\r\n        // ç§»é¤è®¾ç½®å\r\n        return cols.map( (_cols: DataColumn[]) => {\r\n            return _cols.map( (c: DataColumn) => {\r\n                if (c.field !== '_datagrid-setting-control_') {\r\n                    return {\r\n                        field: c.field,\r\n                        title: c.title,\r\n                        colspan: c.colspan,\r\n                        rowspan: c.rowspan,\r\n                        sortable: c.sortable,\r\n                        order: c.order,\r\n                        halign: c.halign || 'left',\r\n                        align: c.align || 'left',\r\n                        visible: c.visible,\r\n                        allowGrouping: c.allowGrouping,\r\n                        groupFooter: c.groupFooter,\r\n                        footer: c.footer,\r\n                        width: c.width || 100,\r\n                        dataType: c.dataType || 'string'\r\n                    };\r\n                }\r\n            }).filter(n => n);\r\n        });\r\n    }\r\n\r\n    private resetGridView(gridInstance: any) {\r\n        if (!gridInstance) {\r\n            return;\r\n        }\r\n        const dfs = gridInstance.dfs;\r\n        if (dfs) {\r\n            const options = dfs['_state'].initialOptions;\r\n\r\n            if (options.sort) {\r\n                if (options.sort.sortName) {\r\n                    gridInstance.sortName = options.sort.sortName;\r\n                }\r\n                if (options.sort.sortOrder) {\r\n                    gridInstance.sortOrder = options.sort.sortOrder;\r\n                }\r\n            }\r\n\r\n            gridInstance.groupField = options.groupField || '';\r\n            // TODO: è¿éè¦ä¿®æ­£é»è®¤åçæ¾ç¤ºé¡ºåº\r\n            if (options.columnFields && options.columnFields.length) {\r\n\r\n                const newColumns = [];\r\n                options.columnFields.forEach(c => {\r\n                    const col = gridInstance.columns[0].find((n: any) => n.field === c.field);\r\n                    if (col) {\r\n                        col.visible = c.visible;\r\n                        col.halign = c.halign;\r\n                        col.align = c.align;\r\n                        col.width = c.width;\r\n                        col.footer = c.footer;\r\n                        col.groupFooter = c.groupFooter;\r\n                        newColumns.push(col);\r\n                    }\r\n                });\r\n\r\n                gridInstance.columns[0] = newColumns;\r\n            }\r\n\r\n            // gridInstance['checkOptions']();\r\n            gridInstance['columnsChanged']();\r\n        }\r\n    }\r\n\r\n    private updateGridView(modalRef, gridInstance, btn = null) {\r\n        const settings = modalRef.content;\r\n\r\n        if (settings) {\r\n            const { sortInfo, viewColumns, columnFormat, groupField } = settings;\r\n\r\n            this.updateActiveSchemeItemSettings(gridInstance.id, {sortInfo, viewColumns, columnFormat, groupField});\r\n\r\n            this.saving = true;\r\n\r\n            let _groupField = '';\r\n            if (gridInstance.groupRows && groupField && groupField.length) {\r\n                _groupField = groupField.join(',') ;\r\n            }\r\n            gridInstance.groupField = _groupField;\r\n            const _colformats = columnFormat ? this.convertColumnsToSimple([columnFormat])[0] : [];\r\n            const saveData = { sortInfo, viewColumns, groupField: _groupField, columnFormat: _colformats };\r\n            this.setUserConfig(gridInstance.id, saveData).subscribe( () => {\r\n                if (btn) {\r\n                    btn.disabled = false;\r\n                }\r\n                this.saving = false;\r\n                if (viewColumns && viewColumns.length) {\r\n                    gridInstance.columns = gridInstance.columns.map(cols => {\r\n                        this.updateColumnFormat(cols, columnFormat, gridInstance);\r\n                        return this.newVisibleOrderColumns(cols, viewColumns, columnFormat, gridInstance);\r\n                    });\r\n                }\r\n\r\n                gridInstance.columnsChanged(true);\r\n                if (sortInfo && Object.keys(sortInfo).length) {\r\n                    const { sortName, sortOrder } = sortInfo;\r\n                    if (sortName && sortName.length) {\r\n                        gridInstance.sort(sortName.join(','), sortOrder.join(','));\r\n                    } else {\r\n                        gridInstance.clearSort();\r\n                    }\r\n                } else {\r\n                    gridInstance.clearSort();\r\n                }\r\n\r\n                modalRef.close();\r\n            });\r\n        } else {\r\n            modalRef.close();\r\n        }\r\n    }\r\n\r\n\r\n    newVisibleOrderColumns(cols: any, viewColumns: any, columnFormat: any, gridInstance: any) {\r\n        const hideColumns = [];\r\n        cols.forEach((element, index) => {\r\n            if (this.isNewAddColumn(element.field, columnFormat) && element.field !== '_datagrid-setting-control_' && !gridInstance.enableScheme) {\r\n                viewColumns.push(element.field);\r\n            } else {\r\n                element.visible = viewColumns.includes(element.field);\r\n                if (!element.visible) {\r\n                    hideColumns.push(element);\r\n                }\r\n            }\r\n        });\r\n\r\n        // æ¸çä¸å­å¨çå\r\n        let newCols = viewColumns.map( field => {\r\n            return cols.find(c => c.field === field);\r\n        }).filter(n => n);\r\n\r\n        if (hideColumns.length) {\r\n            newCols = newCols.concat(hideColumns);\r\n        }\r\n\r\n        return newCols.filter(c => c && c.field && c.field !== '_datagrid-setting-control_' );\r\n    }\r\n\r\n    /**\r\n     * æ¯å¦ä¸ºæ°å¢å çå­æ®µ\r\n     * æ°å¢çå­æ®µï¼éè¦å¨åè¡¨ä¸­å±ç¤ºåºæ¥ï¼å¹¶ä¿å­å°ä¸ªæ§åè®¾ç½®ä¸­\r\n     */\r\n    private isNewAddColumn(field: any, columns: any) {\r\n        columns = columns || [];\r\n        return !columns.find(c => c.field === field);\r\n    }\r\n\r\n\r\n    updateColumnFormat(cols: any[], columnFormat: any[], gridInstance) {\r\n        if (columnFormat && columnFormat.length) {\r\n            cols.forEach(col => {\r\n                const formatCol = columnFormat.find(f=> f.field === col.field);\r\n                if (formatCol) {\r\n                    col.width = formatCol.width;\r\n                    col.halign = formatCol.halign || 'left';\r\n                    col.align = formatCol.align || 'left';\r\n\r\n                    if (gridInstance.groupRows && (col.allowGrouping || col.allowGrouping === undefined)) {\r\n                        if (!col.groupFooter) {\r\n                            col.groupFooter = formatCol.groupFooter;\r\n                        }\r\n\r\n                        if (col.groupFooter && col.groupFooter.options) {\r\n                            col.groupFooter.options.text = formatCol.groupFooter.options.text || '';\r\n                            col.groupFooter.options.calculationType =\r\n                                formatCol.groupFooter.options.calculationType !== undefined &&\r\n                                formatCol.groupFooter.options.calculationType !== null ?\r\n                                parseInt(formatCol.groupFooter.options.calculationType, 10) : -1;\r\n                        }\r\n                    }\r\n\r\n                    if (gridInstance.showFooter && !gridInstance.footerTemplate) {\r\n                        if (!col.footer) {\r\n                            col.footer = formatCol.footer;\r\n                        }\r\n\r\n                        if (col.footer && col.footer.options) {\r\n                            col.footer.options.text = formatCol.footer.options.text || '';\r\n                            col.footer.options.calculationType =\r\n                                formatCol.footer.options.calculationType !== undefined &&\r\n                                formatCol.footer.options.calculationType !== null ?\r\n                                parseInt(formatCol.footer.options.calculationType, 10) : -1;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    // åå»ºå¯ä¸key, ç±uri + gridId ç»æï¼å¹¶æ··æ·\r\n    private createConfigKey(gridId: string) {\r\n        const grid = this.getGridInstance(gridId);\r\n        if (grid) {\r\n            return grid.dgs.createConfigKey(gridId);\r\n        } else {\r\n            console.log('DatagridSettingService: Can not find the grid instance.');\r\n        }\r\n\r\n    }\r\n\r\n\r\n    private getCurrentUserSettings(gridId: string) {\r\n        const gridInstance = this.getGridInstance(gridId);\r\n        const config = {sortInfo: {}, viewColumns: [], groupField: '', columnFormat: []};\r\n\r\n        if (gridInstance) {\r\n            const { sortName, sortOrder, columns} = gridInstance;\r\n            if (sortName) {\r\n                const sortInfo = {\r\n                    sortName: sortName.split(','),\r\n                    sortOrder: sortOrder.split(',')\r\n                };\r\n\r\n                config.sortInfo = sortInfo;\r\n            }\r\n\r\n            const viewColumns = columns[0].filter(n => n.visible || n.visible === undefined).map(n => n.field);\r\n            config.viewColumns = viewColumns;\r\n            config.columnFormat = this.convertColumnsToSimple(columns)[0];\r\n\r\n            if (gridInstance.groupRows) {\r\n                config.groupField = gridInstance.groupField;\r\n            }\r\n        }\r\n        return config;\r\n    }\r\n\r\n\r\n    saveUserConfig(gridId: string) {\r\n        const config = this.getCurrentUserSettings(gridId);\r\n        return this.setUserConfig(gridId, config);\r\n    }\r\n\r\n    setUserConfig(gridId: string, config: any ): Observable<any> {\r\n        const key = this.createConfigKey(gridId);\r\n        const LOCALEID = this.localeSer.localeId;\r\n        const currentConfig = localStorage.getItem(key);\r\n        const _config = (currentConfig ? JSON.parse(currentConfig) : { }) || {};\r\n        if (config) {\r\n            if (_config) {\r\n                _config[LOCALEID] = config;\r\n            }\r\n\r\n            localStorage.setItem(key, JSON.stringify(_config));\r\n        } else {\r\n            localStorage.removeItem(key);\r\n        }\r\n        if (this.httpRestService) {\r\n            const gridIns = this.getGridInstance(gridId);\r\n            if (gridIns && gridIns.enableScheme) {\r\n                const activeScheme = this.getActiveSchemeItem(gridId);\r\n                if (activeScheme) {\r\n                    // return this.updateScheme(gridId, config);\r\n                    if (activeScheme.type === 'private') {\r\n                        return this.schemeService.saveScheme(activeScheme, gridId, true)\r\n                    } else {\r\n                        return this.schemeService.checkAuthority().pipe(\r\n                            switchMap((t: SchemeAuthModel) => {\r\n                                if (t.success) {\r\n                                    const hasOrgAuthority = t.authOrganizationData && t.authOrganizationData.length;\r\n                                    if (activeScheme.type === 'public' || (activeScheme.type === 'org' && hasOrgAuthority)) {\r\n                                        return this.schemeService.saveScheme(activeScheme, gridId, true);\r\n                                    }\r\n                                }\r\n\r\n                                return of(true);\r\n                            }),\r\n                        )\r\n                    }\r\n                } else {\r\n                    return of(true);\r\n                }\r\n            }\r\n            // ä¿å­è³æ°æ®åº\r\n            return this._saveUserConfig(key,  config ? _config :  '');\r\n        }\r\n\r\n        return of(true);\r\n    }\r\n\r\n    getUserConfig(key): Observable<any> {\r\n        if (this.httpRestService) {\r\n            return this._getUserConfig(key);\r\n        } else {\r\n            const config = localStorage.getItem(key);\r\n            if (config) {\r\n                const con = JSON.parse(config);\r\n                if (con[this.localeSer.localeId]) {\r\n                    return of(con[this.localeSer.localeId]);\r\n                } else {\r\n                    if (Object.keys(con).indexOf('viewColumns') > -1) {\r\n                        return of(con);\r\n                    }\r\n                    return null;\r\n                }\r\n            } else {\r\n                return of(null);\r\n            }\r\n        }\r\n    }\r\n\r\n    private getDefaultScheme(schemeList: Array<DatagridSchemeModel>) {\r\n        // 1ãæä¸ªäººé»è®¤çè¿åä¸ªäººé»è®¤æ¹æ¡\r\n        // 2ãæ²¡æä¸ªäººé»è®¤æ¹æ¡çï¼è¿åå¬å±æ¹æ¡ç¬¬1ä¸ª\r\n        // 3ãæ²¡æå¬å±æ¹æ¡ï¼è¿åç»ç»æ¹æ¡ç¬¬1ä¸ª\r\n        // 4ãæ²¡æç»ç»æ¹æ¡ç, è¿åä¸ªäººæ¹æ¡ç¬¬1ä¸ª\r\n        // 5ãæ²¡æä¸ªäººæ¹æ¡çï¼è¿åç³»ç»é¢å¶ï¼å³è¡¨åè®¾è®¡æ¶çæ ¼å¼\r\n\r\n        let defaultScheme = null;\r\n        if (!schemeList || !schemeList.length) {\r\n            return defaultScheme;\r\n        } else {\r\n            defaultScheme = schemeList.find(n => n.isDefault);\r\n            if (!defaultScheme) {\r\n                let publicSchemes = schemeList.filter(n => n.type === 'public');\r\n\r\n                if (!publicSchemes.length) {\r\n                    publicSchemes = schemeList.filter(n => n.type === 'org');\r\n                }\r\n\r\n                if (publicSchemes.length) {\r\n                    defaultScheme = publicSchemes[0];\r\n                } else {\r\n                    defaultScheme = schemeList[0];\r\n                }\r\n            }\r\n        }\r\n\r\n        return defaultScheme;\r\n    }\r\n\r\n\r\n    getSettings(gridId: string) {\r\n        const key = this.createConfigKey(gridId);\r\n        const gridIns = this.getGridInstance(gridId);\r\n\r\n        let schemeList$ = of([]);\r\n        if (gridIns && gridIns.enableScheme) {\r\n            schemeList$ = this.getSchemeList(gridId);\r\n        }\r\n\r\n        return forkJoin(schemeList$, this.getUserConfig(key), this.schemeService.getLanguages()).pipe(\r\n            map(([schemeList, userSetting, supportedLanguages]) => {\r\n                schemeList = schemeList || [];\r\n                this.languages = supportedLanguages;\r\n                if (!schemeList.length) {\r\n                    return userSetting;\r\n                } else {\r\n                    // ç¼å­æ¹æ¡åè¡¨\r\n                    this.setSchemeList(schemeList, gridId);\r\n                    // æ¥æ¾é»è®¤æ¹æ¡\r\n                    const defaultScheme: DatagridSchemeModel = this.getDefaultScheme(schemeList);\r\n                    if (!defaultScheme) {\r\n                        return userSetting;\r\n                    } else {\r\n                        this.setActiveSchemeItem(gridId, defaultScheme);\r\n                        const userSettings = JSON.parse(defaultScheme.queryConditionString);\r\n                        if (userSettings) {\r\n                            const localeId = this.localeSer.localeId;\r\n                            if (userSettings[localeId]) {\r\n                                localStorage.setItem(key, JSON.stringify(userSettings));\r\n                                return userSettings[localeId];\r\n                            } else {\r\n                                userSettings[localeId] = null;\r\n                                localStorage.setItem(key, JSON.stringify(userSettings));\r\n                                return null;\r\n                            }\r\n                        } else {\r\n                            return null;\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n        );\r\n    }\r\n\r\n\r\n    private _saveUserConfig(key, config) {\r\n        try {\r\n            const userConfigSetting = {\r\n                configkey1: key,\r\n                configkey2: '',\r\n                configkey3: '',\r\n                textvalue: config ? JSON.stringify(config) :  ''\r\n            };\r\n\r\n            return this.httpRestService.saveUserSettings(userConfigSetting);\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    resetUserConfig(gridInstance, modalRef) {\r\n        const restorDefaultText = this.localeSer.getValue('datagrid.settings.restoreDefaultSettingsText') || 'ç¡®è®¤è¦æ¢å¤é»è®¤è®¾ç½®åï¼';\r\n        this.messager.confirm(restorDefaultText).pipe(\r\n            switchMap( (t: boolean) => {\r\n                if (t) {\r\n                    return this.setUserConfig(gridInstance.id, '');\r\n                }\r\n                return of(t);\r\n            })\r\n        ).subscribe((t: boolean) => {\r\n            if (t) {\r\n                this.resetGridView(gridInstance);\r\n                modalRef.close();\r\n            }\r\n        });\r\n    }\r\n\r\n    private _getUserConfig(key) {\r\n        try {\r\n            return this.httpRestService.getUserSettings(key).pipe(\r\n                map((ucs: any) => {\r\n                    if (ucs && ucs.textValue) {\r\n                        const c = JSON.parse(ucs.textValue);\r\n                        if (c) {\r\n                            if (c[this.localeSer.localeId]) {\r\n                                localStorage.setItem(key, ucs.textValue);\r\n                                return c[this.localeSer.localeId];\r\n                            } else {\r\n                                c[this.localeSer.localeId] = null;\r\n                                localStorage.setItem(key, JSON.stringify(c));\r\n                                // if (Object.keys(c).indexOf('viewColumns') > -1) {\r\n                                //     return c;\r\n                                // }\r\n                                return null;\r\n                            }\r\n\r\n                        }\r\n                        return null;\r\n                    }\r\n                    return null;\r\n                })\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    private buildSubmitData(gridId: string, settings = null) {\r\n        const LOCALEID = this.localeSer.localeId;\r\n        if (!settings) {\r\n            settings = this.getCurrentUserSettings(gridId);\r\n        }\r\n        const localeKey = this.createConfigKey(gridId);\r\n        const currentConfig = localStorage.getItem(localeKey);\r\n        const _config = (currentConfig ? JSON.parse(currentConfig) : { }) || {};\r\n        if (_config) {\r\n            _config[LOCALEID] = settings;\r\n        }\r\n\r\n        return _config;\r\n    }\r\n\r\n// ----------------------------------------------------------------------------------------------- \\\\\r\n\r\n    private showSchemeListDialog(gridInstance: any, schemeList: any, canDel = true) {\r\n        const modalOpts = {\r\n            width: 760, height: 577, showHeader: false, title: 'æ§å¶é¢æ¿',\r\n            initialState: {\r\n                items: schemeList || [],\r\n                removeItem: canDel\r\n            },\r\n            showButtons: false\r\n        };\r\n\r\n        const schemeListDlg = this.modalSer.show(SchemeListComponent, modalOpts);\r\n        const instance = schemeListDlg.content as SchemeListComponent;\r\n        instance.closeModal.subscribe( () => {\r\n            schemeListDlg.close();\r\n        });\r\n\r\n        instance.submitModal.subscribe((t: any) => {\r\n            this.schemeService.updateScheme(t, gridInstance.id).subscribe((e: any) => {\r\n                if(e === false) {\r\n                    schemeListDlg.close();\r\n                    return;\r\n                }\r\n                const msg = 'åè®¾ç½®æ¹æ¡ä¿å­æåã';\r\n                if (this.notifyService) {\r\n                    this.notifyService.success(msg);\r\n                } else {\r\n                    this.messager.success(msg);\r\n                }\r\n\r\n                const schemeList = this.schemeService.getStateValue(gridInstance.id, 'list');\r\n\r\n                if(t.defaultId) {\r\n                    schemeList.forEach(n => {\r\n                        n.isDefault = false;\r\n                        if (n.id === t.defaultId) {\r\n                            n.isDefault = true;\r\n                            // this.setActiveSchemeItem(gridInstance.id, n);\r\n                        }\r\n                    });\r\n                }\r\n\r\n                let newSchemeList = schemeList;\r\n                if (t.deletedIds && t.deletedIds.length) {\r\n                    newSchemeList = schemeList.filter(n => {\r\n                        return !t.deletedIds.includes(n.id)\r\n                    });\r\n                }\r\n\r\n                this.schemeService.setSchemeList(gridInstance.id, newSchemeList);\r\n                schemeListDlg.close();\r\n            });\r\n        });\r\n\r\n        const modalContainer = schemeListDlg.dialog.instance as ModalContainerComponent;\r\n        modalContainer.draggbar.handle = instance.header.nativeElement;\r\n    }\r\n\r\n    // æ°å¢æå¦å­æ¹æ¡\r\n    private showNewSchemeDialog(gridInstance, simpleRef ) {\r\n        const modalOpts = {\r\n            width: 480, height: 269, showHeader: false, title: 'æ§å¶é¢æ¿',\r\n            initialState: {\r\n                languages: this.languages\r\n            },\r\n            showButtons: false,\r\n            resizable: false\r\n        };\r\n\r\n        const newSchemeDlg = this.modalSer.show(NewSchemeComponent, modalOpts);\r\n        const instance = newSchemeDlg.content as NewSchemeComponent;\r\n        instance.closeModal.subscribe( () => {\r\n            newSchemeDlg.close();\r\n        });\r\n\r\n        instance.submitModal.pipe(\r\n            switchMap((t: any) => {\r\n                return this.createNewScheme(gridInstance.id, t);\r\n            })\r\n        ).subscribe((t: any) => {\r\n            if (t.flag === false) {\r\n                const msg = t.msg || 'è¯·è¾å¥æ¹æ¡åç§°';\r\n                if (this.notifyService) {\r\n                    this.notifyService.info(msg);\r\n                } else {\r\n                    this.messager.info(msg);\r\n                }\r\n                return;\r\n            }\r\n            // æ´æ°æ¹æ¡åè¡¨\r\n            const schemeList = this.schemeService.getStateValue(gridInstance.id, 'list') || [];\r\n            if (t.isDefault) {\r\n                schemeList.forEach(n => {\r\n                    n.isDefault = false;\r\n                });\r\n            }\r\n            schemeList.push(t);\r\n            this.setActiveSchemeItem(gridInstance.id, t);\r\n            this.schemeService.setSchemeList(gridInstance.id, schemeList);\r\n            newSchemeDlg.close();\r\n        });\r\n\r\n        instance.checkAuthority.pipe(\r\n            switchMap((t: any) => {\r\n                return this.schemeService.checkAuthority().pipe(\r\n                    map((auth: SchemeAuthModel) => {\r\n                        return {\r\n                            type: t,\r\n                            ...auth\r\n                        }\r\n                    })\r\n                )\r\n            })\r\n        ).subscribe((t: any) => {\r\n            let hasAuthority = { public: true, org: true };\r\n            let msg = 'æ¨æ²¡æå°æ¹æ¡çä½¿ç¨èå´è®¾ç½®ä¸ºå¬å±çæéã';\r\n            if (t.type.value === 'org') {\r\n                msg = 'æ¨æ²¡æå°æ¹æ¡çä½¿ç¨èå´è®¾ç½®ä¸ºç»ç»çæéã';\r\n            }\r\n            if (t.success) {\r\n                const hasPublicAuthority = t.authOperationData && t.authOperationData.length;\r\n                hasAuthority.public = hasPublicAuthority;\r\n                const hasOrgAuthority = t.authOrganizationData && t.authOrganizationData.length;\r\n                hasAuthority.org = hasOrgAuthority;\r\n                if (t.type.value === 'public') {\r\n                    instance.schemeInfo.type = t.type.value;\r\n                } else if (t.type.value === 'org') {\r\n                    if (!hasOrgAuthority) {\r\n                        this.notifyService.warning(msg);\r\n                    }else {\r\n                        instance.schemeInfo.type = t.type.value;\r\n                        instance.schemeInfo.orgids = t.authOrganizationData.join(',')\r\n                        instance.dataPermissionIds = t.authOrganizationData;\r\n                    }\r\n                }\r\n            } else {\r\n                this.notifyService.warning(msg);\r\n                hasAuthority = { public: false, org: false };;\r\n            }\r\n            instance.refresh(hasAuthority);\r\n        })\r\n\r\n        const modalContainer = newSchemeDlg.dialog.instance as ModalContainerComponent;\r\n        modalContainer.draggbar.handle = instance.header.nativeElement;\r\n    }\r\n\r\n    getSchemeList(gridId: string) {\r\n        return this.schemeService.getSchemeList(gridId);\r\n    }\r\n\r\n    createNewScheme(gridId: string, data: any) {\r\n        if(!data.name) {\r\n            return of({flag: false, msg: 'è¯·è¾å¥æ¹æ¡åç§°'});\r\n        } else {\r\n            const hasName = this.schemeService.hasSchemeName(gridId, data.name);\r\n\r\n            if (typeof hasName === 'boolean' && hasName) {\r\n                return of({flag: false, msg: 'æ¹æ¡åç§°å·²å­å¨ï¼è¯·ä¿®æ¹ã'});\r\n            } else if (Array.isArray(hasName) && hasName.length) {\r\n                const msgs =  hasName.map(n => {\r\n                    if (n === 'zh-CHS') {\r\n                        return 'ç®ä½ä¸­æåç§°å·²å­å¨ã';\r\n                    } else if(n === 'zh-CHT') {\r\n                        return 'ç¹ä½ä¸­æåç§°å·²å­å¨ã';\r\n                    } else {\r\n                        return 'è±æåç§°å·²å­å¨ã';\r\n                    }\r\n                });\r\n\r\n                return of({flag: false, msg: msgs.join('')});\r\n            }\r\n        }\r\n\r\n        const requiredName = [];\r\n        this.languages.forEach(n => {\r\n            if (data.name[n.code] === '' || data.name[n.code] === undefined) {\r\n                requiredName.push(n.code);\r\n            }\r\n        });\r\n\r\n        if (requiredName.length) {\r\n            const msgs =  requiredName.map(n => {\r\n                if (n === 'zh-CHS') {\r\n                    return 'è¯·è¾å¥ç®ä½ä¸­æåç§°ã';\r\n                } else if(n === 'zh-CHT') {\r\n                    return 'è¯·è¾å¥ç¹ä½ä¸­æåç§°ã';\r\n                } else {\r\n                    return 'è¯·è¾å¥è±æåç§°ã';\r\n                }\r\n            });\r\n            return of({flag: false, msg: msgs.join('')});\r\n        }\r\n\r\n\r\n        if (data.type && data.type === 'org' && (!data.orgids || !data.orgids.length)) {\r\n            return of({flag: false, msg: 'è¯·éæ©ç»ç»'});\r\n        }\r\n        let _config = null;\r\n        const selectedSettings = this.getCurrentSchemeSettings(gridId);\r\n        if (selectedSettings) {\r\n            _config = selectedSettings;\r\n        } else {\r\n            // æ¶éå½åæ¹æ¡éç½®æ°æ®\r\n            _config = this.buildSubmitData(gridId);\r\n        }\r\n\r\n        const newId = this.idService.guid();\r\n        let isDefault = data.isDefault;\r\n        if (isDefault) {\r\n            if (data.type !== 'private') {\r\n                isDefault = false;\r\n            }\r\n        }\r\n\r\n        if (data.name && typeof data.name === 'object') {\r\n            data.name = JSON.stringify(data.name);\r\n        }\r\n\r\n        const scheme: DatagridSchemeModel = {\r\n            id: newId,\r\n            belongId: '',\r\n            code: '',\r\n            name: data.name,\r\n            type: data.type,\r\n            isDefault: isDefault,\r\n            isSystem: false,\r\n            extendId: 'datagrid-settings-scheme',\r\n            extendInfo: this.buildOrgAndSchemeRelations(newId, data.orgids),\r\n            queryConditionString: _config? JSON.stringify(_config): '',\r\n        };\r\n\r\n        return this.schemeService.saveScheme(scheme, gridId).pipe(\r\n            map(() => {\r\n                return scheme;\r\n            })\r\n        );\r\n    }\r\n\r\n    setSchemeList(schemeList: DatagridSchemeModel[], gridId: string) {\r\n        this.schemeService.update({list: schemeList}, gridId);\r\n    }\r\n\r\n    private buildOrgAndSchemeRelations(schemeId: string, orgIds: string[]) {\r\n        if (!orgIds || !orgIds.length) {\r\n            return  [];\r\n        }\r\n        return orgIds.map(n => {\r\n            return {\r\n                id: this.idService.guid(),\r\n                orgId: n,\r\n                relatedId: schemeId\r\n            }\r\n        });\r\n    }\r\n\r\n    private getCurrentSchemeSettings(gridId: string): SettingModel {\r\n        const activeScheme = this.getActiveSchemeItem(gridId) as DatagridSchemeModel;\r\n        if (activeScheme && activeScheme.queryConditionString) {\r\n            return JSON.parse(activeScheme.queryConditionString);\r\n        }\r\n        return null;\r\n    }\r\n}\r\n","import { OnInit, Component, Input, ViewChild, Injector, EventEmitter, Output, ChangeDetectorRef } from '@angular/core';\r\nimport { MultiSelectComponent } from '@farris/ui-multi-select';\r\n\r\n@Component({\r\n    selector: 'sort-setting',\r\n    templateUrl: './datagrid-sort-setting.component.html'\r\n})\r\nexport class DatagridSortSettingComponent implements OnInit {\r\n\r\n    @Input() idField = 'field';\r\n    @Input() valueField = 'field';\r\n    @Input() textField = 'title';\r\n    @Input() selectedIds = [];\r\n\r\n    @Input() treeData = [];\r\n    @ViewChild('ms') ms: MultiSelectComponent;\r\n\r\n    @Output() sortInfoChange = new EventEmitter();\r\n\r\n    constructor(private injector: Injector, private cd: ChangeDetectorRef) {}\r\n\r\n\r\n    ngOnInit() {}\r\n\r\n    setFieldSortOrder($event: MouseEvent, data: any, order: string) {\r\n        $event.stopPropagation();\r\n        data.sortable = true;\r\n        data.order = order;\r\n\r\n        if (!order) {\r\n            this.ms.moveToLeft(data);\r\n        }\r\n\r\n        this.cd.detectChanges();\r\n        this.onSelectionsChange(null);\r\n        return false;\r\n    }\r\n\r\n    getSortInfo() {\r\n        if (this.ms.selections) {\r\n            const names = [];\r\n            const orders = [];\r\n            this.ms.selections.forEach(col => {\r\n                col.order = col.order || 'asc';\r\n                names.push(col.field);\r\n                orders.push(col.order);\r\n            });\r\n\r\n            return { sortName: names, sortOrder: orders };\r\n        }\r\n        return '';\r\n    }\r\n\r\n    onSelectionsChange($event) {\r\n        const si = this.getSortInfo();\r\n        this.sortInfoChange.emit(si);\r\n    }\r\n\r\n    onBeforeMove($event) {\r\n        const items: any = $event.items as any;\r\n        if ($event.target.indexOf('rightAll') > -1) {\r\n            for (const id in items) {\r\n                if ($event.items[id]) {\r\n                    $event.items[id].order = 'asc';\r\n                }\r\n            }\r\n        } else {\r\n            if ($event.target === 'right') {\r\n                for (const id in items) {\r\n                    if ($event.items[id]) {\r\n                        $event.items[id].order = 'asc';\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { OnInit, Component, Input, ViewChild, Injector, EventEmitter,\r\n    Output, ChangeDetectorRef, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { MultiSelectComponent } from '@farris/ui-multi-select';\r\n@Component({\r\n    selector: 'view-columns',\r\n    templateUrl: './datagrid-view-columns.component.html',\r\n})\r\nexport class DatagridViewColumnsComponent implements OnInit, OnChanges {\r\n    @Input() idField = 'field';\r\n    @Input() valueField = 'field';\r\n    @Input() textField = 'title';\r\n\r\n\r\n    private _selectedIds = [];\r\n    get selectedIds() {\r\n        return this._selectedIds;\r\n    }\r\n    @Input() set selectedIds(vals) {\r\n        this._selectedIds = vals;\r\n        this.selectedIdsChange.emit(vals);\r\n    }\r\n\r\n    @Input() treeData = [];\r\n    @ViewChild('ms') ms: MultiSelectComponent;\r\n\r\n    @Output() selectedIdsChange = new EventEmitter();\r\n\r\n    constructor(private injector: Injector, private cd: ChangeDetectorRef) {}\r\n\r\n\r\n    ngOnInit() {}\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n\r\n    }\r\n\r\n    onBeforeMove($event) {\r\n\r\n    }\r\n\r\n    hiddenColumn($event: MouseEvent, column: any) {\r\n        $event.stopPropagation();\r\n        this.ms.moveToLeft(column);\r\n    }\r\n}\r\n","import { LocaleService } from '@farris/ui-locale';\r\nimport { Component, Input, OnInit, Injector, ViewChild, Output, EventEmitter, ChangeDetectorRef, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { DatagridSettingsComponent } from '../datagrid-settings.component';\r\n\r\n@Component({\r\n    selector: 'column-format-setting',\r\n    templateUrl: './column-format-setting.component.html',\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ColumnFormatSettingComponent implements OnInit, OnChanges {\r\n    @Input() columns = [];\r\n    @Input() fields = [];\r\n\r\n    @ViewChild('colformatform') colForm: NgForm;\r\n\r\n    @Output() formatChange = new EventEmitter();\r\n    @Output() fieldsChange = new EventEmitter();\r\n\r\n    allCols = [];\r\n\r\n    /** format Data */\r\n    formatData = [];\r\n    columnType = 'all';\r\n    activeField = null;\r\n    showGridFooter = false;\r\n\r\n    searchItems = [];\r\n    alignItems = [];\r\n    summaryItems = [];\r\n    summaryItems2 = [];\r\n    localeSer: LocaleService;\r\n    isEn = false;\r\n    constructor(private injector: Injector, public gridSettingComponentRef: DatagridSettingsComponent, private cd: ChangeDetectorRef) {\r\n        this.showGridFooter = this.gridSettingComponentRef.gridInstance.showFooter &&\r\n                                !this.gridSettingComponentRef.gridInstance.footerTemplate;\r\n        this.localeSer = this.injector.get(LocaleService, null);\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.columns && !changes.columns.isFirstChange()) {\r\n            this.setFormatData();\r\n            this.allCols = this.columns[0];\r\n            this.activeField = this.columns[0][0];\r\n            this.checkColumnOptions();\r\n        }\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n        this.isEn = this.localeSer.localeId === 'en';\r\n\r\n        this.initData();\r\n\r\n        if (this.colForm) {\r\n            this.colForm.valueChanges.subscribe(v => {\r\n                if (!this.colForm.pristine) {\r\n                    this.formatChange.emit(this.formatData);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private setFormatData() {\r\n        this.formatData = this.fields.map(n => {\r\n            return this.columns[0].find(col => col.field === n);\r\n        });\r\n    }\r\n\r\n    private initData() {\r\n\r\n        this.alignItems = this.gridSettingComponentRef.alignItems;\r\n        this.searchItems = this.gridSettingComponentRef.searchItems;\r\n        this.summaryItems = this.gridSettingComponentRef.summaryItems;\r\n        this.summaryItems2 = this.gridSettingComponentRef.summaryItems2;\r\n\r\n\r\n        this.setFormatData();\r\n        this.allCols = this.columns[0];\r\n        this.activeField = this.columns[0][0];\r\n        this.checkColumnOptions();\r\n    }\r\n\r\n    private checkColumnOptions() {\r\n        if (this.activeField) {\r\n            if (this.activeField.allowGrouping === undefined) {\r\n                this.activeField.allowGrouping = true;\r\n            }\r\n\r\n            if (this.activeField.groupFooter === undefined) {\r\n                this.activeField.groupFooter = { options: {calculationType: -1} };\r\n            } else {\r\n                this.activeField.groupFooter.options = this.activeField.groupFooter.options || {calculationType: -1};\r\n                if (this.activeField.groupFooter.options.calculationType === undefined) {\r\n                    this.activeField.groupFooter.options.calculationType = -1;\r\n                }\r\n            }\r\n\r\n            if (this.activeField.footer === undefined) {\r\n                this.activeField.footer =  { options: {calculationType: -1} };\r\n            } else {\r\n                this.activeField.footer.options = this.activeField.footer.options || {calculationType: -1};\r\n                if (this.activeField.footer.options.calculationType === undefined) {\r\n                    this.activeField.footer.options.calculationType = -1;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // æ ¹æ®åçç±»åè¿è¡ç­éè¿æ»¤ï¼\r\n    // all ææå\r\n    // visible å¯è§å\r\n    // hidden éèå\r\n    // group åç»å\r\n    filterColumns(ct: string, searchWords = '') {\r\n        let cols = [];\r\n        switch (ct) {\r\n            case 'visible':\r\n                cols = this.formatData;\r\n                break;\r\n            case 'hidden':\r\n                cols = this.columns[0].filter(n => this.fields.indexOf(n.field) === -1);\r\n                break;\r\n            case 'all':\r\n            default:\r\n                cols = this.columns[0];\r\n                break;\r\n        }\r\n\r\n        if (searchWords) {\r\n            cols = cols.filter(c => c.title.toLowerCase().indexOf(searchWords) > -1);\r\n        }\r\n\r\n        this.allCols = cols;\r\n    }\r\n\r\n    onFieldClick(col, $event) {\r\n        this.activeField = col;\r\n        this.checkColumnOptions();\r\n    }\r\n\r\n\r\n    private onFieldsChanged() {\r\n        this.setFormatData();\r\n        this.fieldsChange.emit(this.fields);\r\n    }\r\n\r\n    onDblClick($event, col) {\r\n        // console.log('æ¾ç¤ºä¸éèåæ¢äºä»¶', col);\r\n        this.onCheckboxClick($event, col);\r\n    }\r\n\r\n    onCheckboxClick($event, col) {\r\n        // console.log('æ¾ç¤ºä¸éèåæ¢äºä»¶', col);\r\n        $event.stopPropagation();\r\n        const index = this.fields.indexOf(col.field);\r\n        if (index === -1) {\r\n            this.fields.push(col.field);\r\n        } else {\r\n            this.fields.splice(index, 1);\r\n        }\r\n\r\n        this.columns[0].forEach(f => {\r\n            f.visible = this.fields.indexOf(f.field) > -1;\r\n        });\r\n\r\n        this.fields = this.columns[0].filter(n => n.visible).map(n => n.field);\r\n\r\n        this.onFieldsChanged();\r\n    }\r\n\r\n    searchColumn($event, ct) {\r\n        const txt = $event.target.value;\r\n        this.filterColumns(ct, txt);\r\n    }\r\n\r\n    onFieldDrop(fieldInfo, ct, txt, ulElRef: any) {\r\n       // console.log('drop', fieldInfo);\r\n        const { removedIndex, addedIndex } = fieldInfo;\r\n\r\n        const moveItem = this.allCols[removedIndex];\r\n        const targetItem = this.allCols[addedIndex];\r\n\r\n        const moveItemIndex = this.columns[0].findIndex(n => n.field === moveItem.field);\r\n        const targetItemIndex = this.columns[0].findIndex(n => n.field === targetItem.field);\r\n\r\n        const removedItem = this.columns[0].splice(moveItemIndex, 1);\r\n        this.columns[0].splice(targetItemIndex, 0, ...removedItem);\r\n\r\n        this.fields = this.columns[0].filter(n => n.visible).map(n => n.field);\r\n        this.onFieldsChanged();\r\n\r\n        this.filterColumns(ct, txt);\r\n\r\n        // if (ulElRef) {\r\n        //     ulElRef.querySelectorAll('li .field-drag-handle').forEach(el => {\r\n        //         el.style.cursor = 'grab';\r\n        //     });\r\n        // }\r\n    }\r\n\r\n    /**\r\n     * 0: 1ä¸ªä¹æ²¡æéä¸­ï¼ 1: å¨é¨éä¸­ï¼ 2: æéä¸­çä¹ææ²¡éä¸­ç\r\n     */\r\n    private getCheckAllState() {\r\n        if (this.fields.length === 0) {\r\n            return 0;\r\n        } else {\r\n            if (this.fields.length === this.columns[0].length) {\r\n                return 1;\r\n            }\r\n            return 2;\r\n        }\r\n    }\r\n\r\n    onCheckAllClick($event, ct, txt) {\r\n        const state = this.getCheckAllState();\r\n        if (state === 0 || state === 2) {\r\n            // æ§è¡å¨é\r\n            this.columns[0].forEach(n => n.visible = true);\r\n            this.fields = this.columns[0].map(n => n.field);\r\n        } else {\r\n            // åæ¶å¨é\r\n            this.columns[0].forEach(n => n.visible = false);\r\n            this.fields = [];\r\n        }\r\n\r\n        this.onFieldsChanged();\r\n        this.filterColumns(ct, txt);\r\n    }\r\n}\r\n","import { Component, OnInit, Input, Injector, ChangeDetectorRef, ElementRef, ViewChild, EventEmitter, Output, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { DatagridSettingsComponent } from '../datagrid-settings.component';\r\n\r\n@Component({\r\n    selector: 'column-group-setting',\r\n    templateUrl: './column-group.component.html',\r\n    styles: [\r\n        `\r\n        .column-group-setting{ height: 100%; background-color: #ffffff; padding: 0 10px 10px 10px}\r\n        .smooth-dnd-ghost.group-field {\r\n            z-index: 999999999 !important;\r\n        }\r\n        .active {\r\n            background-color: rgb(231 241 255);\r\n            color: rgb(0 0 0);\r\n        }\r\n        .column-group-setting .group-field {\r\n            float: left;max-width: 200px;margin-right: 10px;\r\n            width: auto; padding: 5px;padding-right: 30px;\r\n            border-radius: 20px;padding-left: 10px; cursor:move\r\n        }\r\n        .group-field .f-icon { position: absolute;right: 2px;top: 7px; }\r\n        .btn-add-groupfield{float: left;width: 32px;padding: 0px;padding-top: 3px; border-radius: 20px;}\r\n        .group-field-panel{\r\n            height: 260px; border-radius: 5px; z-index: 3;position: absolute;\r\n            background: rgb(255 255 255); box-shadow: 1px 1px 4px rgb(156 155 155 / 75%);\r\n            overflow: hidden;\r\n            overflow-y: auto;\r\n        }\r\n        .group-field-panel ul {\r\n            display: inline-block;margin: 20px;margin-top: 5px;\r\n        }\r\n        .group-field-panel li {\r\n            float: left; cursor: pointer;max-width: 200px;margin-right: 10px;width: auto;\r\n            padding: 10px; min-width: 80px; margin-top: 15px; text-align: center;\r\n        }\r\n        .format-setting-column {\r\n            background: rgba(247,248,251,0.6);\r\n            padding: 7px 10px;\r\n            margin-bottom: 5px;\r\n            border: 1px solid rgba(233,236,243,0.45);\r\n            border-radius: 5px;\r\n        }\r\n        .format-setting-column.active {\r\n            border: 1px solid rgb(42 135 255);\r\n            background: rgb(239 247 255);\r\n            border-top: 1px solid rgb(42 135 255)!important;\r\n            border-bottom: 1px solid rgb(42 135 255)!important;\r\n        }\r\n\r\n        `\r\n    ]\r\n})\r\nexport class ColumnGroupSettingComponent implements OnInit, OnChanges {\r\n    @Input() columns;\r\n    @Input() fields = [];\r\n    @Input() formatColumns = [];\r\n\r\n    @Input() groupFields = [];\r\n\r\n    @Output() groupFieldsChange = new EventEmitter();\r\n    @Output() formatColumnsChange = new EventEmitter();\r\n\r\n    @ViewChild('groupingSetting') groupingSettingEl: ElementRef;\r\n    @ViewChild('selectcolumnspanel') selectcolumnspanel: ElementRef;\r\n    @ViewChild('groupSumform') colForm: NgForm;\r\n\r\n    groupColumns = [];\r\n    allowGroupColumns = [];\r\n    activeCalculationCol = null;\r\n\r\n    showSelectColumnsPanel = false;\r\n    summaryItems = [];\r\n    summaryItems2 = [];\r\n    constructor(private injector: Injector, public gridSettingComponentRef: DatagridSettingsComponent, private cd: ChangeDetectorRef) { }\r\n\r\n    ngOnInit(): void {\r\n\r\n        this.summaryItems = this.gridSettingComponentRef.summaryItems;\r\n        this.summaryItems2 = this.gridSettingComponentRef.summaryItems2;\r\n\r\n        this.setGroupColumns();\r\n        this.registerEventHandle();\r\n        this.initCalculationColumns();\r\n\r\n        if (this.colForm) {\r\n            this.colForm.valueChanges.subscribe(v => {\r\n                if (!this.colForm.pristine) {\r\n                    this.formatColumnsChange.emit(this.formatColumns);\r\n                }\r\n            });\r\n        }\r\n        \r\n        this.formatColumns.forEach(n => {\r\n            this.checkColumnOptions(n);\r\n        });\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.formatColumns && !changes.formatColumns.isFirstChange()) {\r\n            this.formatColumns.forEach(n => {\r\n                this.checkColumnOptions(n);\r\n            });\r\n            this.setGroupColumns();\r\n            this.initCalculationColumns();\r\n        }\r\n    }\r\n\r\n    private initCalculationColumns() {\r\n        if (this.formatColumns) {\r\n            this.activeCalculationCol = this.formatColumns[0];\r\n        }\r\n    }\r\n\r\n    private registerEventHandle() {\r\n        this.groupingSettingEl.nativeElement.addEventListener('click', (e) => {\r\n            if (e.target  !== this.selectcolumnspanel.nativeElement) {\r\n                this.showSelectColumnsPanel = false;\r\n            }\r\n        }, false);\r\n    }\r\n\r\n    private setGroupColumns() {\r\n        if (this.groupFields && this.groupFields.length) {\r\n            this.groupColumns = this.groupFields.map( f => {\r\n                return this.columns[0].find(col => col.field === f);\r\n            }).filter(n => n);\r\n        } else {\r\n            this.groupColumns = [];\r\n        }\r\n        this.onGroupFieldsChange();\r\n    }\r\n\r\n    private getAllowGroupingColumns() {\r\n        return this.columns[0].filter(n => n.allowGrouping || n.allowGrouping === undefined);\r\n    }\r\n\r\n    private onGroupFieldsChange() {\r\n        this.groupFieldsChange.emit(this.groupFields);\r\n    }\r\n\r\n    private checkColumnOptions(col) {\r\n        if (col) {\r\n\r\n            if (col.groupFooter === undefined) {\r\n                col.groupFooter = { options: {calculationType: -1} };\r\n            } else {\r\n                col.groupFooter.options = col.groupFooter.options || {calculationType: -1};\r\n                if (col.groupFooter.options.calculationType === undefined) {\r\n                    col.groupFooter.options.calculationType = -1;\r\n                }\r\n            }\r\n\r\n            // if (this.activeField.footer === undefined) {\r\n            //     this.activeField.footer =  { options: {calculationType: -1} };\r\n            // } else {\r\n            //     this.activeField.footer.options = this.activeField.footer.options || {calculationType: -1};\r\n            //     if (this.activeField.footer.options.calculationType === undefined) {\r\n            //         this.activeField.footer.options.calculationType = -1;\r\n            //     }\r\n            // }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * æ¾ç¤ºæéèå­æ®µéåé¢æ¿\r\n     */\r\n    toggleGroupingColumnPanel($event) {\r\n        $event.stopPropagation();\r\n        this.showSelectColumnsPanel = !this.showSelectColumnsPanel;\r\n        this.allowGroupColumns = this.getAllowGroupingColumns();\r\n    }\r\n\r\n    /** æ·»å åç»å­æ®µ */\r\n    addGroupColumn($event, col) {\r\n        $event.stopPropagation();\r\n        if (this.groupFields.indexOf(col.field) === -1) {\r\n            this.groupColumns = [...this.groupColumns, col];\r\n            this.groupFields = this.groupColumns.map(n => n.field);\r\n            this.onGroupFieldsChange();\r\n            this.showSelectColumnsPanel = false;\r\n        }\r\n    }\r\n\r\n    /** ç§»é¤åç»å­æ®µ */\r\n    onRemoveGroupingField($event, col) {\r\n        $event.stopPropagation();\r\n        this.groupFields = this.groupFields.filter(n => n !== col.field);\r\n        this.setGroupColumns();\r\n    }\r\n\r\n    /** æå¨åç»å­æ®µè¿è¡æåº */\r\n    onGroupingFieldDropped($event) {\r\n        console.log('grouping field droped.', $event);\r\n        const { removedIndex, addedIndex } = $event;\r\n\r\n        const removedItem = this.groupFields.splice(removedIndex, 1);\r\n        this.groupFields.splice(addedIndex, 0, ...removedItem);\r\n        this.setGroupColumns();\r\n    }\r\n\r\n    onFieldClick($event, col) {\r\n        this.activeCalculationCol = col;\r\n    }\r\n}\r\n","\r\nimport { Directive, NgZone, Injector, Renderer2, ElementRef, AfterViewInit, Input,\r\n        OnChanges, SimpleChanges, Output, EventEmitter, OnDestroy } from '@angular/core';\r\nimport { dropHandlers, smoothDnD as SmoothDndForVisible, DropResult, ContainerOptions, constants } from '@farris/smooth-dnd';\r\n\r\n\r\nconst { wrapperClass, animationClass } = constants;\r\nSmoothDndForVisible.dropHandler = dropHandlers.reactDropHandler().handler;\r\nSmoothDndForVisible.wrapChild = false;\r\n\r\nexport interface DragStartEndInfo {\r\n    isSource: boolean;\r\n    payload: any;\r\n    willAcceptDrop: boolean;\r\n}\r\n\r\n@Directive({\r\n    selector: '[column-visible-drag]',\r\n})\r\nexport class ColumnVisibleDragDirective implements AfterViewInit, OnDestroy {\r\n    private container: any;\r\n    @Output() drop = new EventEmitter();\r\n    @Input() options: ContainerOptions = {\r\n        behaviour: 'move',\r\n        dragHandleSelector: '.field-drag-handle',\r\n        dropPlaceholder: {\r\n            className: 'drop-group-field',\r\n        },\r\n        getGhostParent: () => {\r\n            return document.body;\r\n        },\r\n        getChildPayload: this.getChildPayload.bind(this),\r\n        shouldAcceptDrop: (sourceContainerOptions, payload) => {\r\n            return true;\r\n        },\r\n        onDropReady: (dropResult: DropResult) => {\r\n            this.ngzone.run(() => {\r\n                this.onDropReady(dropResult);\r\n            });\r\n        },\r\n        onDrop: (dropResult: DropResult) => {\r\n            this.ngzone.run(() => {\r\n                this.drop.emit(dropResult);\r\n            });\r\n        },\r\n        onDragEnter: () => {\r\n            this.ngzone.run(() => {\r\n                this.onDragEnter();\r\n            });\r\n        },\r\n        onDragStart: (info: DragStartEndInfo) => {\r\n            this.ngzone.run(() => {\r\n                this.onDragStart(info);\r\n            });\r\n        },\r\n        onDragEnd: (info: DragStartEndInfo) => {\r\n            this.ngzone.run(() => {\r\n                this.onDragEnd(info);\r\n            });\r\n        }\r\n    };\r\n\r\n    constructor(private ngzone: NgZone, private injector: Injector, private render: Renderer2, private el: ElementRef) { }\r\n    ngAfterViewInit() {\r\n        this.initDnD();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.disposeDnd();\r\n    }\r\n\r\n    private disposeDnd() {\r\n        if (this.container) {\r\n            this.container.dispose();\r\n            this.container = null;\r\n        }\r\n    }\r\n\r\n    private initDnD() {\r\n        this.disposeDnd();\r\n        this.container = SmoothDndForVisible(\r\n            this.el.nativeElement,\r\n            this.options\r\n        );\r\n    }\r\n\r\n    private getChildPayload(index) {\r\n        return index;\r\n    }\r\n\r\n    private onDropReady(dropResult) {\r\n        // console.log('DROP READY', dropResult);\r\n    }\r\n\r\n    private onDragStart(info) {\r\n        console.log('DRAG START', info);\r\n    }\r\n\r\n    private onDragEnd(info) {\r\n        // console.log('DRAG END', info);\r\n    }\r\n\r\n\r\n    private onDragEnter() {\r\n        // console.log('DRAG ENTER');\r\n    }\r\n\r\n}\r\n","import { Directive, NgZone, Injector, Renderer2, ElementRef, AfterViewInit, Input,  Output, EventEmitter, OnDestroy } from '@angular/core';\r\nimport { dropHandlers, smoothDnD as SmoothDndForGroupingField, DropResult, ContainerOptions, constants } from '@farris/smooth-dnd';\r\n\r\nSmoothDndForGroupingField.dropHandler = dropHandlers.reactDropHandler().handler;\r\nSmoothDndForGroupingField.wrapChild = false;\r\n\r\n@Directive({\r\n    selector: '[column-group-drag]',\r\n})\r\nexport class ColumnGroupDragDirective implements AfterViewInit, OnDestroy {\r\n    private container: any;\r\n    @Output() drop = new EventEmitter();\r\n    @Input() options: ContainerOptions = {\r\n        orientation: 'horizontal',\r\n        behaviour: 'move',\r\n        dropPlaceholder: {\r\n            className: 'drop-group-field',\r\n        },\r\n        getGhostParent: () => {\r\n            return document.body;\r\n        },\r\n        getChildPayload: this.getChildPayload.bind(this),\r\n        shouldAcceptDrop: (sourceContainerOptions, payload) => {\r\n            return true;\r\n        },\r\n        onDropReady: (dropResult: DropResult) => {\r\n            this.ngzone.run(() => {\r\n                this.onDropReady(dropResult);\r\n            });\r\n        },\r\n        onDrop: (dropResult: DropResult) => {\r\n            this.ngzone.run(() => {\r\n                this.drop.emit(dropResult);\r\n            });\r\n        },\r\n        onDragEnter: () => {\r\n            this.ngzone.run(() => {\r\n                this.onDragEnter();\r\n            });\r\n        },\r\n        onDragStart: (info) => {\r\n            this.ngzone.run(() => {\r\n                this.onDragStart(info);\r\n            });\r\n        },\r\n        onDragEnd: (info) => {\r\n            this.ngzone.run(() => {\r\n                this.onDragEnd(info);\r\n            });\r\n        }\r\n    };\r\n\r\n    constructor(private ngzone: NgZone, private injector: Injector, private render: Renderer2, private el: ElementRef) { }\r\n    ngAfterViewInit() {\r\n        this.initDnD();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.disposeDnd();\r\n    }\r\n\r\n    private disposeDnd() {\r\n        if (this.container) {\r\n            this.container.dispose();\r\n            this.container = null;\r\n        }\r\n    }\r\n\r\n\r\n    private initDnD() {\r\n        this.disposeDnd();\r\n        this.container = SmoothDndForGroupingField(\r\n            this.el.nativeElement,\r\n            this.options\r\n        );\r\n    }\r\n\r\n    private getChildPayload(index) {\r\n        return index;\r\n    }\r\n\r\n    private onDropReady(dropResult) {\r\n        // console.log('DROP READY', dropResult);\r\n    }\r\n\r\n    private onDragStart(info) {\r\n        // console.log('DRAG START', info);\r\n    }\r\n\r\n    private onDragEnd(info) {\r\n        // console.log('DRAG END', info);\r\n    }\r\n\r\n\r\n    private onDragEnter() {\r\n        // console.log('DRAG ENTER');\r\n    }\r\n}\r\n","\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { ModalModule } from '@farris/ui-modal';\r\nimport { GRID_SETTINGS_SERVICE, DatagridModule} from '@farris/ui-datagrid';\r\nimport { MultiSelectModule } from '@farris/ui-multi-select';\r\nimport { FarrisCommonModule } from '@farris/ui-common';\r\nimport { LocaleModule } from '@farris/ui-locale';\r\nimport { MessagerModule } from '@farris/ui-messager';\r\nimport { ComboListModule } from '@farris/ui-combo-list';\r\nimport { SwitchModule } from '@farris/ui-switch';\r\nimport { FarrisTooltipModule } from '@farris/ui-tooltip';\r\nimport { NotifyModule } from '@farris/ui-notify';\r\nimport { OrganizationSelectorModule } from '@farris/ui-organization-selector';\r\n\r\nimport { DatagridSettingsComponent } from './datagrid-settings.component';\r\n\r\nimport { DatagridSettingsService } from './datagrid-settings.service';\r\nimport { DatagridSortSettingComponent } from './datagrid-sort-setting.component';\r\nimport { DatagridViewColumnsComponent } from './datagrid-view-columns.component';\r\nimport { ColumnFormatSettingComponent } from './column-format-setting/column-format-setting.component';\r\nimport { ColumnGroupSettingComponent } from './column-group/column-group.component';\r\nimport { ColumnVisibleDragDirective } from './column-format-setting/column-visible-drag.directive';\r\nimport { ColumnGroupDragDirective } from './column-group/column-group-drag.directive';\r\nimport { SimpleColumnsComponent } from './simple-mode/simple-columns.component';\r\nimport { NewSchemeComponent } from './scheme/newscheme.component';\r\nimport { SchemeListComponent } from './scheme/scheme-list.component';\r\nimport { LanguageTextboxModule } from '@farris/ui-language-textbox';\r\n@NgModule({\r\n    declarations: [\r\n        DatagridSettingsComponent,\r\n        DatagridSortSettingComponent,\r\n        DatagridViewColumnsComponent,\r\n        ColumnFormatSettingComponent,\r\n        ColumnGroupSettingComponent,\r\n        ColumnVisibleDragDirective,\r\n        ColumnGroupDragDirective,\r\n        SimpleColumnsComponent,\r\n        NewSchemeComponent,\r\n        SchemeListComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        MultiSelectModule,\r\n        ComboListModule,\r\n        DatagridModule,\r\n        FarrisCommonModule.forRoot(),\r\n        MessagerModule.forRoot(),\r\n        LocaleModule.forRoot(),\r\n        ModalModule.forRoot(),\r\n        SwitchModule,\r\n        FarrisTooltipModule,\r\n        NotifyModule.forRoot(),\r\n        OrganizationSelectorModule,\r\n        LanguageTextboxModule\r\n    ],\r\n    entryComponents: [\r\n        DatagridSettingsComponent,\r\n        SimpleColumnsComponent,\r\n        NewSchemeComponent,\r\n        SchemeListComponent\r\n    ],\r\n    exports: [\r\n        DatagridSettingsComponent,\r\n        SimpleColumnsComponent,\r\n        NewSchemeComponent,\r\n        SchemeListComponent\r\n    ]\r\n})\r\nexport class DatagridSettingsModule {\r\n    static forRoot(apiUri = ''): ModuleWithProviders {\r\n        return {\r\n            ngModule: DatagridSettingsModule,\r\n            providers: [\r\n                { provide: GRID_SETTINGS_SERVICE, useClass: DatagridSettingsService }\r\n            ]\r\n        };\r\n    }\r\n}\r\n"],"names":["SmoothDndForVisible","SmoothDndForGroupingField"],"mappings":"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"}