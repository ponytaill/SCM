import { MessagePipe } from './message-pipe';
import { RuntimeFrameworkService } from '../rtf-service';
import { QuerystringService } from '../querystring';
export class MessagePipeService {
    /**
     * 通过token获取消息管道
     * @param token 消息管道标识
     */
    static get(token) {
        const pipe = new MessagePipe(token, this.rtfService);
        return pipe;
    }
    /**
     * 创建消息管道
     * @param pipeName 管道名称
     * @param useFormContext 是否使用表单上下文创建管道标识
     * @param pipeType 管道类型(可选)，默认Subject<any>
     */
    static create(pipeName, useFormContext, pipeType) {
        let options = null;
        if (useFormContext) {
            const params = this.querystringService.parse(window.location.hash);
            const { funcId, appId, appEntrance } = params;
            options = { funcId, appId, appEntrance };
        }
        const token = this.rtfService.subjectRegister(pipeName, options, pipeType);
        if (!token) {
            return null;
        }
        const pipe = new MessagePipe(token, this.rtfService);
        return pipe;
    }
}
MessagePipeService.rtfService = new RuntimeFrameworkService();
MessagePipeService.querystringService = new QuerystringService();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVzc2FnZS1waXBlLXNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL2NvbW1hbmQtc2VydmljZXMvIiwic291cmNlcyI6WyJsaWIvcnRmLW1lc3NhZ2UvbWVzc2FnZS1waXBlLXNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzdDLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRXpELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRXBELE1BQU0sT0FBTyxrQkFBa0I7SUFHN0I7OztPQUdHO0lBQ0ksTUFBTSxDQUFDLEdBQUcsQ0FBQyxLQUFhO1FBQzdCLE1BQU0sSUFBSSxHQUFHLElBQUksV0FBVyxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDckQsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBQ0Q7Ozs7O09BS0c7SUFDSSxNQUFNLENBQUMsTUFBTSxDQUFDLFFBQWdCLEVBQUUsY0FBdUIsRUFBRSxRQUF1QjtRQUNyRixJQUFJLE9BQU8sR0FBRyxJQUFJLENBQUM7UUFDbkIsSUFBSSxjQUFjLEVBQUU7WUFDbEIsTUFBTSxNQUFNLEdBQUcsSUFBSSxDQUFDLGtCQUFrQixDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQ25FLE1BQU0sRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxHQUFHLE1BQU0sQ0FBQztZQUM5QyxPQUFPLEdBQUcsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxDQUFDO1NBQzFDO1FBQ0QsTUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxlQUFlLENBQUMsUUFBUSxFQUFFLE9BQU8sRUFBRSxRQUFRLENBQUMsQ0FBQztRQUMzRSxJQUFJLENBQUMsS0FBSyxFQUFFO1lBQ1YsT0FBTyxJQUFJLENBQUM7U0FDYjtRQUNELE1BQU0sSUFBSSxHQUFHLElBQUksV0FBVyxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDckQsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDOztBQTdCYyw2QkFBVSxHQUE0QixJQUFJLHVCQUF1QixFQUFFLENBQUM7QUFDcEUscUNBQWtCLEdBQXVCLElBQUksa0JBQWtCLEVBQUUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1lc3NhZ2VQaXBlIH0gZnJvbSAnLi9tZXNzYWdlLXBpcGUnO1xuaW1wb3J0IHsgUnVudGltZUZyYW1ld29ya1NlcnZpY2UgfSBmcm9tICcuLi9ydGYtc2VydmljZSc7XG5pbXBvcnQgeyBTdWJqZWN0IH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBRdWVyeXN0cmluZ1NlcnZpY2UgfSBmcm9tICcuLi9xdWVyeXN0cmluZyc7XG5cbmV4cG9ydCBjbGFzcyBNZXNzYWdlUGlwZVNlcnZpY2Uge1xuICBwcml2YXRlIHN0YXRpYyBydGZTZXJ2aWNlOiBSdW50aW1lRnJhbWV3b3JrU2VydmljZSA9IG5ldyBSdW50aW1lRnJhbWV3b3JrU2VydmljZSgpO1xuICBwcml2YXRlIHN0YXRpYyBxdWVyeXN0cmluZ1NlcnZpY2U6IFF1ZXJ5c3RyaW5nU2VydmljZSA9IG5ldyBRdWVyeXN0cmluZ1NlcnZpY2UoKTtcbiAgLyoqXG4gICAqIOmAmui/h3Rva2Vu6I635Y+W5raI5oGv566h6YGTXG4gICAqIEBwYXJhbSB0b2tlbiDmtojmga/nrqHpgZPmoIfor4ZcbiAgICovXG4gIHB1YmxpYyBzdGF0aWMgZ2V0KHRva2VuOiBzdHJpbmcpOiBNZXNzYWdlUGlwZSB7XG4gICAgY29uc3QgcGlwZSA9IG5ldyBNZXNzYWdlUGlwZSh0b2tlbiwgdGhpcy5ydGZTZXJ2aWNlKTtcbiAgICByZXR1cm4gcGlwZTtcbiAgfVxuICAvKipcbiAgICog5Yib5bu65raI5oGv566h6YGTXG4gICAqIEBwYXJhbSBwaXBlTmFtZSDnrqHpgZPlkI3np7BcbiAgICogQHBhcmFtIHVzZUZvcm1Db250ZXh0IOaYr+WQpuS9v+eUqOihqOWNleS4iuS4i+aWh+WIm+W7uueuoemBk+agh+ivhlxuICAgKiBAcGFyYW0gcGlwZVR5cGUg566h6YGT57G75Z6LKOWPr+mAiSnvvIzpu5jorqRTdWJqZWN0PGFueT5cbiAgICovXG4gIHB1YmxpYyBzdGF0aWMgY3JlYXRlKHBpcGVOYW1lOiBzdHJpbmcsIHVzZUZvcm1Db250ZXh0OiBib29sZWFuLCBwaXBlVHlwZT86IFN1YmplY3Q8YW55Pik6IE1lc3NhZ2VQaXBlIHtcbiAgICBsZXQgb3B0aW9ucyA9IG51bGw7XG4gICAgaWYgKHVzZUZvcm1Db250ZXh0KSB7XG4gICAgICBjb25zdCBwYXJhbXMgPSB0aGlzLnF1ZXJ5c3RyaW5nU2VydmljZS5wYXJzZSh3aW5kb3cubG9jYXRpb24uaGFzaCk7XG4gICAgICBjb25zdCB7IGZ1bmNJZCwgYXBwSWQsIGFwcEVudHJhbmNlIH0gPSBwYXJhbXM7XG4gICAgICBvcHRpb25zID0geyBmdW5jSWQsIGFwcElkLCBhcHBFbnRyYW5jZSB9O1xuICAgIH1cbiAgICBjb25zdCB0b2tlbiA9IHRoaXMucnRmU2VydmljZS5zdWJqZWN0UmVnaXN0ZXIocGlwZU5hbWUsIG9wdGlvbnMsIHBpcGVUeXBlKTtcbiAgICBpZiAoIXRva2VuKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgY29uc3QgcGlwZSA9IG5ldyBNZXNzYWdlUGlwZSh0b2tlbiwgdGhpcy5ydGZTZXJ2aWNlKTtcbiAgICByZXR1cm4gcGlwZTtcbiAgfVxufVxuIl19