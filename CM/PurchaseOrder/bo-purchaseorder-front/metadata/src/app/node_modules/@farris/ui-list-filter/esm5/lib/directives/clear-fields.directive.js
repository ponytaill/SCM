/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, Input, Optional, Self, Injector } from '@angular/core';
import { NgControl } from '@angular/forms';
import { ListFilterComponent } from '../list-filter.component';
var ClearFieldsDirective = /** @class */ (function () {
    function ClearFieldsDirective(ngCtrl, listFilterCmp, inject) {
        this.ngCtrl = ngCtrl;
        this.listFilterCmp = listFilterCmp;
        this.inject = inject;
        this.clearFields = '';
    }
    /**
     * @return {?}
     */
    ClearFieldsDirective.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.clearFields && this.ngCtrl) {
            this.ngCtrl.valueChanges.subscribe((/**
             * @param {?} v
             * @return {?}
             */
            function (v) {
                _this.listFilterCmp.fieldCodeOfClearFields = [];
                _this.clearFields.split(',').forEach((/**
                 * @param {?} n
                 * @return {?}
                 */
                function (n) {
                    // 字段编号
                    /** @type {?} */
                    var conditionItem = _this.listFilterCmp.listFilterConditions.find((/**
                     * @param {?} c
                     * @return {?}
                     */
                    function (c) { return c.fieldCode === n; }));
                    if (conditionItem) {
                        // 触发清空字段列表变更，特殊控件类型的清空，不能只是清空值
                        _this.listFilterCmp.fieldCodeOfClearFields.push(n);
                        // 清空字段
                        conditionItem.value.clearValue();
                    }
                }));
            }));
        }
    };
    ClearFieldsDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[clear-fields]'
                },] }
    ];
    /** @nocollapse */
    ClearFieldsDirective.ctorParameters = function () { return [
        { type: NgControl, decorators: [{ type: Optional }, { type: Self }] },
        { type: ListFilterComponent },
        { type: Injector }
    ]; };
    ClearFieldsDirective.propDecorators = {
        clearFields: [{ type: Input, args: ['clear-fields',] }]
    };
    return ClearFieldsDirective;
}());
export { ClearFieldsDirective };
if (false) {
    /** @type {?} */
    ClearFieldsDirective.prototype.clearFields;
    /**
     * @type {?}
     * @private
     */
    ClearFieldsDirective.prototype.ngCtrl;
    /**
     * @type {?}
     * @private
     */
    ClearFieldsDirective.prototype.listFilterCmp;
    /**
     * @type {?}
     * @private
     */
    ClearFieldsDirective.prototype.inject;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xlYXItZmllbGRzLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvdWktbGlzdC1maWx0ZXIvIiwic291cmNlcyI6WyJsaWIvZGlyZWN0aXZlcy9jbGVhci1maWVsZHMuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBVSxRQUFRLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNuRixPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDM0MsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFFL0Q7SUFNSSw4QkFBd0MsTUFBaUIsRUFBVSxhQUFrQyxFQUFVLE1BQWdCO1FBQXZGLFdBQU0sR0FBTixNQUFNLENBQVc7UUFBVSxrQkFBYSxHQUFiLGFBQWEsQ0FBcUI7UUFBVSxXQUFNLEdBQU4sTUFBTSxDQUFVO1FBRnhHLGdCQUFXLEdBQUcsRUFBRSxDQUFDO0lBRTJGLENBQUM7Ozs7SUFFcEksdUNBQVE7OztJQUFSO1FBQUEsaUJBZ0JDO1FBZkcsSUFBSSxJQUFJLENBQUMsV0FBVyxJQUFJLElBQUksQ0FBQyxNQUFNLEVBQUU7WUFDakMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsU0FBUzs7OztZQUFDLFVBQUMsQ0FBQztnQkFDakMsS0FBSSxDQUFDLGFBQWEsQ0FBQyxzQkFBc0IsR0FBRyxFQUFFLENBQUM7Z0JBQy9DLEtBQUksQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLE9BQU87Ozs7Z0JBQUMsVUFBQSxDQUFDOzs7d0JBRTNCLGFBQWEsR0FBRyxLQUFJLENBQUMsYUFBYSxDQUFDLG9CQUFvQixDQUFDLElBQUk7Ozs7b0JBQUMsVUFBQSxDQUFDLElBQUksT0FBQSxDQUFDLENBQUMsU0FBUyxLQUFLLENBQUMsRUFBakIsQ0FBaUIsRUFBQztvQkFDMUYsSUFBSSxhQUFhLEVBQUU7d0JBQ2YsK0JBQStCO3dCQUMvQixLQUFJLENBQUMsYUFBYSxDQUFDLHNCQUFzQixDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQzt3QkFDbEQsT0FBTzt3QkFDUCxhQUFhLENBQUMsS0FBSyxDQUFDLFVBQVUsRUFBRSxDQUFDO3FCQUNwQztnQkFDTCxDQUFDLEVBQUMsQ0FBQztZQUNQLENBQUMsRUFBQyxDQUFDO1NBQ047SUFDTCxDQUFDOztnQkF4QkosU0FBUyxTQUFDO29CQUNQLFFBQVEsRUFBRSxnQkFBZ0I7aUJBQzdCOzs7O2dCQUxRLFNBQVMsdUJBU0QsUUFBUSxZQUFJLElBQUk7Z0JBUnhCLG1CQUFtQjtnQkFGdUIsUUFBUTs7OzhCQVF0RCxLQUFLLFNBQUMsY0FBYzs7SUFxQnpCLDJCQUFDO0NBQUEsQUF6QkQsSUF5QkM7U0F0Qlksb0JBQW9COzs7SUFDN0IsMkNBQXdDOzs7OztJQUU1QixzQ0FBNkM7Ozs7O0lBQUUsNkNBQTBDOzs7OztJQUFFLHNDQUF3QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgSW5wdXQsIE9uSW5pdCwgT3B0aW9uYWwsIFNlbGYsIEluamVjdG9yIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IE5nQ29udHJvbCB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcclxuaW1wb3J0IHsgTGlzdEZpbHRlckNvbXBvbmVudCB9IGZyb20gJy4uL2xpc3QtZmlsdGVyLmNvbXBvbmVudCc7XHJcblxyXG5ARGlyZWN0aXZlKHtcclxuICAgIHNlbGVjdG9yOiAnW2NsZWFyLWZpZWxkc10nXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBDbGVhckZpZWxkc0RpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcbiAgICBASW5wdXQoJ2NsZWFyLWZpZWxkcycpIGNsZWFyRmllbGRzID0gJyc7XHJcblxyXG4gICAgY29uc3RydWN0b3IoQE9wdGlvbmFsKCkgQFNlbGYoKSBwcml2YXRlIG5nQ3RybDogTmdDb250cm9sLCBwcml2YXRlIGxpc3RGaWx0ZXJDbXA6IExpc3RGaWx0ZXJDb21wb25lbnQsIHByaXZhdGUgaW5qZWN0OiBJbmplY3RvcikgeyB9XHJcblxyXG4gICAgbmdPbkluaXQoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuY2xlYXJGaWVsZHMgJiYgdGhpcy5uZ0N0cmwpIHtcclxuICAgICAgICAgICAgdGhpcy5uZ0N0cmwudmFsdWVDaGFuZ2VzLnN1YnNjcmliZSgodikgPT4ge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5saXN0RmlsdGVyQ21wLmZpZWxkQ29kZU9mQ2xlYXJGaWVsZHMgPSBbXTtcclxuICAgICAgICAgICAgICAgIHRoaXMuY2xlYXJGaWVsZHMuc3BsaXQoJywnKS5mb3JFYWNoKG4gPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIC8vIOWtl+autee8luWPt1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGNvbmRpdGlvbkl0ZW0gPSB0aGlzLmxpc3RGaWx0ZXJDbXAubGlzdEZpbHRlckNvbmRpdGlvbnMuZmluZChjID0+IGMuZmllbGRDb2RlID09PSBuKTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoY29uZGl0aW9uSXRlbSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyDop6blj5HmuIXnqbrlrZfmrrXliJfooajlj5jmm7TvvIznibnmrormjqfku7bnsbvlnovnmoTmuIXnqbrvvIzkuI3og73lj6rmmK/muIXnqbrlgLxcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5saXN0RmlsdGVyQ21wLmZpZWxkQ29kZU9mQ2xlYXJGaWVsZHMucHVzaChuKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgLy8g5riF56m65a2X5q61XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbmRpdGlvbkl0ZW0udmFsdWUuY2xlYXJWYWx1ZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuIl19