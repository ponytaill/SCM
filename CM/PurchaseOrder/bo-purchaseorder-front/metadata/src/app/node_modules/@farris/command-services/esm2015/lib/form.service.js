import { Injectable, Injector } from "@angular/core";
import { AppContext, Repository } from "@farris/devkit";
export class FormService {
    constructor(injector, appContext, repository) {
        this.injector = injector;
        this.appContext = appContext;
        this.repository = repository;
    }
    /**
     * 根据字段路径获取该字段在卡片或表格中的索引
     * @param source ngFormControls或any[][]
     * @param propertyPath 字段除bindingPath之外的完整路径
     * @returns
     */
    getIndex(source, propertyPath) {
        if (Array.isArray(source)) {
            const combine = source.reduce((result, group) => {
                return result.concat(group);
            }, []);
            return combine.findIndex((item) => item.field === propertyPath);
        }
        else if (Object.prototype.toString.call(source) === '[object Object]') {
            return Object.keys(source).findIndex(key => source[key].binding === propertyPath);
        }
    }
}
FormService.decorators = [
    { type: Injectable }
];
/** @nocollapse */
FormService.ctorParameters = () => [
    { type: Injector },
    { type: AppContext },
    { type: Repository }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybS5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy9jb21tYW5kLXNlcnZpY2VzLyIsInNvdXJjZXMiOlsibGliL2Zvcm0uc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNyRCxPQUFPLEVBQUUsVUFBVSxFQUFtRSxVQUFVLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUd6SCxNQUFNLE9BQU8sV0FBVztJQUN0QixZQUNVLFFBQWtCLEVBQ2xCLFVBQXNCLEVBQ3RCLFVBQThCO1FBRjlCLGFBQVEsR0FBUixRQUFRLENBQVU7UUFDbEIsZUFBVSxHQUFWLFVBQVUsQ0FBWTtRQUN0QixlQUFVLEdBQVYsVUFBVSxDQUFvQjtJQUV4QyxDQUFDO0lBQ0Q7Ozs7O09BS0c7SUFDSSxRQUFRLENBQUMsTUFBeUQsRUFBRSxZQUFvQjtRQUM3RixJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLEVBQUU7WUFDekIsTUFBTSxPQUFPLEdBQVUsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLE1BQWEsRUFBRSxLQUFZLEVBQUUsRUFBRTtnQkFDbkUsT0FBTyxNQUFNLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQzlCLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztZQUNQLE9BQU8sT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDLElBQVMsRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLEtBQUssS0FBSyxZQUFZLENBQUMsQ0FBQztTQUN0RTthQUFNLElBQUksTUFBTSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLGlCQUFpQixFQUFFO1lBQ3ZFLE9BQU8sTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsT0FBTyxLQUFLLFlBQVksQ0FBQyxDQUFDO1NBQ25GO0lBQ0gsQ0FBQzs7O1lBdkJGLFVBQVU7Ozs7WUFIVSxRQUFRO1lBQ3BCLFVBQVU7WUFBbUUsVUFBVSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUsIEluamVjdG9yIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IEFwcENvbnRleHQsIERhdGFQcm9wSW5mbywgRGF0YVR5cGVJbmZvLCBFbnRpdHksIEZyYW1lQ29udGV4dCwgTmdGb3JtQ29udHJvbCwgUmVwb3NpdG9yeSB9IGZyb20gXCJAZmFycmlzL2RldmtpdFwiO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgRm9ybVNlcnZpY2Uge1xuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIGluamVjdG9yOiBJbmplY3RvcixcbiAgICBwcml2YXRlIGFwcENvbnRleHQ6IEFwcENvbnRleHQsXG4gICAgcHJpdmF0ZSByZXBvc2l0b3J5OiBSZXBvc2l0b3J5PEVudGl0eT5cbiAgKSB7XG4gIH1cbiAgLyoqXG4gICAqIOagueaNruWtl+autei3r+W+hOiOt+WPluivpeWtl+auteWcqOWNoeeJh+aIluihqOagvOS4reeahOe0ouW8lVxuICAgKiBAcGFyYW0gc291cmNlIG5nRm9ybUNvbnRyb2xz5oiWYW55W11bXVxuICAgKiBAcGFyYW0gcHJvcGVydHlQYXRoIOWtl+autemZpGJpbmRpbmdQYXRo5LmL5aSW55qE5a6M5pW06Lev5b6EXG4gICAqIEByZXR1cm5zIFxuICAgKi9cbiAgcHVibGljIGdldEluZGV4KHNvdXJjZTogeyBbcHJvcGVydHlOYW1lOiBzdHJpbmddOiBOZ0Zvcm1Db250cm9sIH0gfCBhbnlbXSwgcHJvcGVydHlQYXRoOiBzdHJpbmcpIHtcbiAgICBpZiAoQXJyYXkuaXNBcnJheShzb3VyY2UpKSB7XG4gICAgICBjb25zdCBjb21iaW5lOiBhbnlbXSA9IHNvdXJjZS5yZWR1Y2UoKHJlc3VsdDogYW55W10sIGdyb3VwOiBhbnlbXSkgPT4ge1xuICAgICAgICByZXR1cm4gcmVzdWx0LmNvbmNhdChncm91cCk7XG4gICAgICB9LCBbXSk7XG4gICAgICByZXR1cm4gY29tYmluZS5maW5kSW5kZXgoKGl0ZW06IGFueSkgPT4gaXRlbS5maWVsZCA9PT0gcHJvcGVydHlQYXRoKTtcbiAgICB9IGVsc2UgaWYgKE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChzb3VyY2UpID09PSAnW29iamVjdCBPYmplY3RdJykge1xuICAgICAgcmV0dXJuIE9iamVjdC5rZXlzKHNvdXJjZSkuZmluZEluZGV4KGtleSA9PiBzb3VyY2Vba2V5XS5iaW5kaW5nID09PSBwcm9wZXJ0eVBhdGgpO1xuICAgIH1cbiAgfVxuICBcbn0iXX0=