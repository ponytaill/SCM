{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://@farris/ui-multi-select/lib/multi-select.component.ts","ng://@farris/ui-multi-select/lib/multi-select.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","__spread","concat","defineProperty","MultiSelectComponent","_ds","val","searchValue","toJSON","copyDataSource","map","cloneDeep","initRightData","selectedId","_rightData","cd","detectChanges","_searchValue","_this_1","undefined","leftCheckitems_1","_leftCheckeds","displayType","tt","selections","forEach","id","data","dataSource","setTimeout","ids","keys","checkedNodes","newDataSource","getTreeDataBySearch","allTreeNodes","loadData","getListDataBySearch","updateTimer1","clearTimeout","canCheckLength","getCanCheckLength","ngOnInit","emptyData","localeService","getValue","moveItem","ngAfterViewInit","elt","el","nativeElement","render","addClass","fit","setStyle","height","noDataMoveMessage","ngAfterContentInit","templates","item","getType","displayTemplate","template","ngOnChanges","changes","isFirstChange","currentValue","total","isTree","serializedValue","rn","node","selectable","canChecked","d","leftCount","result","Array","txt","textField","getText","valueField","indexOf","getTreeDataByRecursive","newData","children","getTreeRootNode","rootData","parent","rootNodes","nodes","finalRes","uniqueId","some","convertTreeDataToPlainData","getTreeSelectionsById","getListSelectionsById","reduce","find","idField","updateTimer2","state","rowNodes","_this","reusltObj","isArray","filter","isChecked","direction","keyVal","_rightCheckeds","findIndex","c","onCheckValueChange","leftDataChecked","hasCheckeds","dir","checkeds","rightDataChecked","emit","isCheck","showCheckbox","selected","selectItem","clearSelections","beforeMove","subscribe","obj","items","target","toString","clearAll","v","findRowNodes","unCheckedNodes","selectionsChange","changeSelectIds","afterMove","values","moveToRight","moveData","_a","mesagerSer","warning","moveAllToRight","_dataSource","visible","moveToLeft","moveAllToLeft","_getSelectInfo","key_1","index","key","moveTop","unshift","splice","moveUp","tempArr","moveDown","len","moveBottom","number","join","selectedIdChange","dataChange","commonUtils","Component","args","selector","MessagerService","Injector","ChangeDetectorRef","Input","Output","ContentChildren","FarrisTemplateDirective","ViewChild","injector","enableTargetSort","showCascadeControl","leftTitle","rightTitle","enableSearch","EventEmitter","sortMove","enableCascase","trackByItems","get","ElementRef","Renderer2","LocaleService","CommonUtils","DisplayTextComponent","_getText","ms","side","MultiSelectModule","NgModule","imports","CommonModule","PerfectScrollbarModule","FarrisCommonModule","TreeTableModule","LocaleModule","FormsModule","MessagerModule","forRoot","declarations","exports","providers"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { cloneDeep } from 'lodash-es';\r\n/*\r\n* @Author: ç¯çç§æ(lucas huang)\r\n* @Date: 2018-10-27 10:55:02\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-10-16 14:14:14\r\n* @Company: Inspur\r\n* @Version: v0.0.1\r\n*/\r\n\r\nimport {\r\n    Component, OnInit, Input, ViewChild, Output, EventEmitter,\r\n    TemplateRef, ContentChildren, QueryList, AfterContentInit, AfterViewInit,\r\n    OnChanges, SimpleChanges, Injector, ChangeDetectorRef, ElementRef, Renderer2\r\n} from '@angular/core';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { TreeTableComponent, TreeNode } from '@farris/ui-treetable';\r\nimport { CommonUtils, FarrisTemplateDirective } from '@farris/ui-common';\r\nimport { LocaleService } from '@farris/ui-locale';\r\n\r\n@Component({\r\n    selector: 'multi-select',\r\n    templateUrl: './multi-select.component.html',\r\n    styleUrls: [\r\n        './multi-select.css'\r\n    ]\r\n})\r\n\r\nexport class MultiSelectComponent implements OnInit, OnChanges, AfterViewInit, AfterContentInit {\r\n\r\n    private allTreeNodes = [];\r\n    private _ds: any = [];\r\n    get dataSource() {\r\n        return this._ds;\r\n    }\r\n    @Input() set dataSource(val: any) {\r\n        val = val  || [];\r\n        this._ds = val;\r\n        if (!this.searchValue) {\r\n            if (val.length) {\r\n                if (val[0].toJSON) {\r\n                    this.copyDataSource = val.map(n => n.toJSON());\r\n                } else {\r\n                    this.copyDataSource = cloneDeep(val);\r\n                }\r\n            }\r\n            this.initRightData(this.selectedId);\r\n        }\r\n    }\r\n\r\n    @Input() displayType: 'List' | 'Tree' = 'List';\r\n    /** æ¾ç¤ºå³ä¾§ä¸ç§»ä¸ç§»æé® */\r\n    @Input() enableTargetSort = true;\r\n\r\n    @Input() idField: string;\r\n\r\n    @Input() textField: string;\r\n    @Input() valueField: string;\r\n\r\n    @Input() height = 445;\r\n    @Input() fit = true;\r\n    @Input() noDataMoveMessage = 'è¯·éæ©è¦ç§»å¨çæ°æ®ã';\r\n    /** æ ç»ææ¶ï¼æ¯å¦æ¾ç¤ºçº§èéæ©æ§å¶éé¡¹ */\r\n    @Input() showCascadeControl = false;\r\n\r\n    @Input() leftTitle = 'æªéæ©';\r\n    @Input() rightTitle = 'å·²éæ©';\r\n    @Input() selectedId: any;\r\n    @Input() enableSearch = true;\r\n    /** ç®æ æ°æ®æºæ¾ç¤ºcheckbox åè®¸å¤é */\r\n    @Input() showCheckbox = false;\r\n   \r\n\r\n    @Output() dataChange = new EventEmitter();\r\n    @Output() selected = new EventEmitter();\r\n    @Output() selectedIdChange = new EventEmitter();\r\n\r\n    @Output() beforeMove = new EventEmitter();\r\n    @Output() afterMove = new EventEmitter();\r\n\r\n    @Output() sortMove = new EventEmitter();\r\n\r\n    @ContentChildren(FarrisTemplateDirective) templates: QueryList<FarrisTemplateDirective>;\r\n    @ViewChild('tt') tt: TreeTableComponent;\r\n\r\n\r\n    // å³ä¾§éä¸­çæ°æ® { [keyVal]: obj, [keyVal]: obj ... }\r\n    _rightCheckeds: any;\r\n    // å·¦ä¾§éä¸­çæ°æ® { [keyVal]: obj, [keyVal]: obj ... }\r\n    _leftCheckeds: any = {};\r\n\r\n    // å³ä¾§æ°æ®\r\n    _rightData = [];\r\n    get selections() {\r\n        return this._rightData;\r\n    }\r\n    set selections(val: any) {\r\n        this._rightData = val;\r\n        this.cd.detectChanges();\r\n    }\r\n    get searchValue() {\r\n        return this._searchValue;\r\n    }\r\n    set searchValue(value: string) {\r\n        this._searchValue = value;\r\n\r\n        // this.copyDataSource = [...this.dataSource];\r\n\r\n        if (value === undefined || value === null || value === '') {\r\n            let leftCheckitems = {...this._leftCheckeds};\r\n\r\n            if (this.displayType === 'Tree') {\r\n                this.tt.selections.forEach(n => {\r\n                    leftCheckitems[n.id] = n.data;\r\n                });\r\n            }\r\n            this.dataSource = this.copyDataSource;\r\n\r\n\r\n            if (this.displayType === 'Tree') {\r\n                setTimeout(() => {\r\n                    const ids = Object.keys(leftCheckitems);\r\n                    if (ids && ids.length) {\r\n                        this.tt.checkedNodes(ids);\r\n                    }\r\n                });\r\n            } else  {\r\n                this._leftCheckeds = {...leftCheckitems};\r\n            }\r\n            \r\n            return;\r\n        }\r\n        if (this.displayType === 'Tree') {\r\n            const newDataSource = this.getTreeDataBySearch(this._searchValue, this.allTreeNodes);\r\n            this.tt.loadData(newDataSource);\r\n        } else {\r\n            this.dataSource = this.getListDataBySearch(this._searchValue, this.copyDataSource);\r\n        }\r\n\r\n        if (this.updateTimer1) {\r\n            clearTimeout(this.updateTimer1);\r\n        }\r\n        this.updateTimer1 = setTimeout(() => {\r\n            this.canCheckLength = this.getCanCheckLength();\r\n        });\r\n    }\r\n\r\n    canCheckLength = 0;\r\n    leftCount = 0;\r\n    _searchValue = '';\r\n    // å¤å¶ä¸ä»½æ°æ®æº\r\n    private copyDataSource: any;\r\n    // æ å½¢ç»æçæ°æ®length\r\n    treeDataLength: number;\r\n    displayTemplate: TemplateRef<any>;\r\n\r\n\r\n    emptyData;\r\n    el: ElementRef;\r\n    render: Renderer2;\r\n    localeService: LocaleService;\r\n    commonUtils: CommonUtils;\r\n    // çº§èéæ©æ§å¶éé¡¹\r\n    enableCascase = true;\r\n\r\n    private updateTimer1 = null;\r\n    private updateTimer2 = null;\r\n\r\n    constructor(private mesagerSer: MessagerService, private injector: Injector, private cd: ChangeDetectorRef) {\r\n        if (!Object.values) {\r\n            Object.values = function (obj) {\r\n                return Object.keys(obj).map(function (e) {\r\n                    return obj[e];\r\n                });\r\n            };\r\n        }\r\n        this.el = this.injector.get<ElementRef>(ElementRef);\r\n        this.render = this.injector.get(Renderer2);\r\n        this.localeService = this.injector.get(LocaleService);\r\n\r\n        this.commonUtils = this.injector.get(CommonUtils, null);\r\n    }\r\n\r\n    ngOnInit() {\r\n        // this.copyDataSource = this.dataSource ? [...this.dataSource] : [];\r\n        this.emptyData = this.localeService.getValue('multiSelect.emptyData') || 'ææ æ°æ®';\r\n        this.initRightData(this.selectedId);\r\n        this.moveItem();\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        const elt = this.el.nativeElement;\r\n        this.render.addClass(elt, 'row');\r\n        this.render.addClass(elt, 'f-multi-select');\r\n        if (this.fit === true) {\r\n            this.render.addClass(elt, 'f-utils-fill');\r\n            this.render.setStyle(elt, 'height', '100%');\r\n        } else {\r\n            if (!!this.height) {\r\n                this.render.setStyle(elt, 'height', this.height + 'px');\r\n            }\r\n        }\r\n\r\n        this.noDataMoveMessage =\r\n            this.noDataMoveMessage === 'è¯·éæ©è¦ç§»å¨çæ°æ®ã' ? this.localeService.getValue('multiSelect.noDataMoveMessage') : this.noDataMoveMessage;\r\n\r\n        if (this.tt && this.selectedId) {\r\n            this.tt.checkedNodes(this.selectedId);\r\n        }\r\n    }\r\n\r\n    ngAfterContentInit() {\r\n        this.templates.forEach((item) => {\r\n            switch (item.getType()) {\r\n                case 'text':\r\n                    this.displayTemplate = item.template;\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.dataSource && !changes.dataSource.isFirstChange()) {\r\n            // this.copyDataSource = [...(this.dataSource || [])];\r\n            this._leftCheckeds = {};\r\n            this._rightData = [];\r\n        }\r\n\r\n        if (changes.selectedId && !changes.selectedId.isFirstChange()) {\r\n            this.initRightData(changes.selectedId.currentValue);\r\n        }\r\n    }\r\n\r\n    getCanCheckLength() {\r\n        let n = 0;\r\n        let total = 0;\r\n        if (this.isTree()) {\r\n            this.tt.serializedValue.forEach(rn => {\r\n                if (rn.node.selectable) {\r\n                    if (this.canChecked(rn.node)) {\r\n                        n++;\r\n                    }\r\n                }\r\n            });\r\n            total = this.tt.serializedValue.length;\r\n        } else {\r\n            this.dataSource.forEach(d => {\r\n                if (this.canChecked(d)) {\r\n                    n++;\r\n                }\r\n            });\r\n            total = this.dataSource.length;\r\n        }\r\n        this.leftCount = total;\r\n        return n;\r\n    }\r\n\r\n    /**\r\n     * è·åæç´¢çæ°æ®ï¼Listç»æ\r\n     * @param value æç´¢çå­ç¬¦\r\n     * @param data æ°æ®\r\n     */\r\n    private getListDataBySearch(value: string, data: any[]): any[] {\r\n        const result = [];\r\n        value = '' + value;\r\n        if (data instanceof Array) {\r\n            data.forEach(item => {\r\n\r\n                let txt = '';\r\n                let val = '';\r\n\r\n                if (this.textField) {\r\n                    txt = '' + this.getText(item);\r\n                }\r\n\r\n                if (this.valueField) {\r\n                    val = '' + this.getValue(item);\r\n                }\r\n\r\n                if (this.textField && this.valueField) {\r\n                    if (txt.indexOf(value) !== -1 || val.indexOf(value) !== -1) {\r\n                        result.push(item);\r\n                    }\r\n                } else if (this.textField && !this.valueField) {\r\n                    if (txt.indexOf(value) !== -1) {\r\n                        result.push(item);\r\n                    }\r\n                } else if (!this.textField && this.valueField) {\r\n                    if (val.indexOf(value) !== -1) {\r\n                        result.push(item);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * è·ååå«valueå¼å¾èç¹\r\n     */\r\n    private getTreeDataByRecursive(value: string, data: any[], newData: any[]) {\r\n        value = '' + value;\r\n        data.forEach(item => {\r\n\r\n            let txt = '';\r\n            let val = '';\r\n\r\n            if (this.textField) {\r\n                txt = '' + this.getText(item.data);\r\n            }\r\n\r\n            if (this.valueField) {\r\n                val = '' + this.getValue(item.data);\r\n            }\r\n\r\n            if (this.textField && this.valueField) {\r\n                if (txt.indexOf(value) !== -1 || val.indexOf(value) !== -1) {\r\n                    newData.push(item);\r\n                }\r\n            } else if (this.textField && !this.valueField) {\r\n                if (txt.indexOf(value) !== -1) {\r\n                    newData.push(item);\r\n                }\r\n            } else if (!this.textField && this.valueField) {\r\n                if (val.indexOf(value) !== -1) {\r\n                    newData.push(item);\r\n                }\r\n            }\r\n            if (item.children && item.children.length) {\r\n                this.getTreeDataByRecursive(value, item.children, newData);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * è·åæ ¹èç¹\r\n     */\r\n    private getTreeRootNode(data: any[], rootData: any[]) {\r\n        data.forEach(item => {\r\n            if (item.parent === null) {\r\n                rootData.push(item);\r\n            } else {\r\n                this.getTreeRootNode(new Array(item.parent), rootData);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * è·åæç´¢çæ°æ®ï¼Treeç»æ\r\n     * @param value æç´¢çå­ç¬¦\r\n     * @param data æ°æ®\r\n     */\r\n    private getTreeDataBySearch(value: string, data: any[]): any[] {\r\n        const rootNodes = [];\r\n        const nodes = [];\r\n        const finalRes = [];\r\n        const uniqueId = [];\r\n        // è·ååå«valueå¼å¾èç¹\r\n        this.getTreeDataByRecursive(value, data, nodes);\r\n        // è·åæ ¹èç¹\r\n        this.getTreeRootNode(nodes, rootNodes);\r\n        // å»é\r\n        rootNodes.forEach(node => {\r\n            if (!uniqueId.some(item => item == node.id)) {\r\n                finalRes.push(node);\r\n                uniqueId.push(node.id);\r\n            }\r\n        });\r\n        return finalRes;\r\n    }\r\n\r\n    private initRightData(ids) {\r\n        let dataSource: any = [];\r\n\r\n        if (ids && ids.length) {\r\n            if (this.isTree()) {\r\n                this.convertTreeDataToPlainData(this.copyDataSource, dataSource);\r\n                this._rightData = this.getTreeSelectionsById(ids, dataSource);\r\n            } else {\r\n                this._rightData = this.getListSelectionsById(ids, this.copyDataSource);\r\n            }\r\n\r\n            this._leftCheckeds = ids.reduce((r, id) => {\r\n                r[id] = this._rightData.find(n => n[this.idField] == id);\r\n                return r;\r\n            }, {});\r\n\r\n        }\r\n\r\n        if (this.updateTimer2) {\r\n            clearTimeout(this.updateTimer2);\r\n        }\r\n\r\n        this.updateTimer2 = setTimeout(() => {\r\n            this.canCheckLength = this.getCanCheckLength();\r\n            if (this.tt) {\r\n                this.tt.checkedNodes(ids, true, false, true);\r\n                this.allTreeNodes = cloneDeep(this.tt.state.rowNodes.map(n => n.node));\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @param ids éä¸­æ°æ®çid\r\n     * @param dataSource åå§æ°æ®\r\n     */\r\n    private getListSelectionsById(ids: any, dataSource: any) {\r\n        let result = [];\r\n        const _this = this;\r\n        if ((typeof ids === 'string' && !!ids) || typeof ids === 'number') {\r\n            const reusltObj = dataSource.find(item => {\r\n                return item[_this.idField] === ids;\r\n            });\r\n            if (reusltObj) {\r\n                result.push(reusltObj);\r\n            }\r\n        } else if (Array.isArray(ids)) {\r\n            if (Array.isArray(dataSource)) {\r\n                result = ids.map(id => dataSource.find(item => item[this.idField] === id)).filter(n => n);\r\n            } else {\r\n                result = [];\r\n            }\r\n        } else {\r\n            result = [];\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param ids éä¸­æ°æ®çid\r\n     * @param dataSource åå§æ°æ®\r\n     */\r\n    private getTreeSelectionsById(ids: any, dataSource: any) {\r\n        let result = [];\r\n        const _this = this;\r\n        if ((typeof ids === 'string' && !!ids) || typeof ids === 'number') {\r\n            const reusltObj = dataSource.find(item => {\r\n                return item.data[_this.idField] === ids;\r\n            });\r\n            if (reusltObj && reusltObj.data) {\r\n                result.push(reusltObj.data);\r\n            }\r\n        } else if (Array.isArray(ids)) {\r\n            if (Array.isArray(dataSource)) {\r\n                result = ids.map(id => {\r\n                    return dataSource.find(item => item.data[this.idField] === id);\r\n                }).filter(n => n).map(n => n.data);\r\n            } else {\r\n                result = [];\r\n            }\r\n        } else {\r\n            result = [];\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * å¤æ­æ¯å¦éä¸­\r\n     * @param data è¦éªè¯çæ°æ®\r\n     * @param direction éªè¯çæ°æ®æå¨çä½ç½® L: å·¦ä¾§ï¼R: å³ä¾§\r\n     */\r\n    isChecked(data: any, direction: 'L' | 'R'): boolean {\r\n        const keyVal = data[this.idField];\r\n        if (direction === 'L') {\r\n            return (this._leftCheckeds && this._leftCheckeds[keyVal] !== undefined); // || !this.canChecked(data);\r\n        } else {\r\n            if (this._rightCheckeds) {\r\n                return this._rightCheckeds[keyVal] !== undefined;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    canChecked(item: any) {\r\n        let data = item;\r\n\r\n        if (this.isTree()) {\r\n            data = item.data;\r\n\r\n            if (item.selectable !== undefined && !item.selectable) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        if (!this.selections || this.selections.length === 0) {\r\n            return true;\r\n        }\r\n        return this.selections.findIndex(c => c[this.idField] === data[this.idField]) === -1;\r\n    }\r\n\r\n    onCheckValueChange(ids: string[]) {\r\n        \r\n    }\r\n\r\n    isTree(): any {\r\n        return this.displayType === 'Tree';\r\n    }\r\n\r\n    leftDataChecked(data: any[]) {\r\n        if (data && data.length) {\r\n            data.forEach(node => {\r\n                let d = node;\r\n                if (this.isTree()) {\r\n                    d = node.data;\r\n                }\r\n                if (this.canChecked(node)) {\r\n                    if (this.isChecked(d, 'L')) {\r\n                        delete this._leftCheckeds[d[this.idField]];\r\n                    } else {\r\n                        if (!this._leftCheckeds) {\r\n                            this._leftCheckeds = {};\r\n                        }\r\n                        this._leftCheckeds[d[this.idField]] = d;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    hasCheckeds(dir: 'L' | 'R') {\r\n        if (dir === 'L') {\r\n            if (this.isTree()) {\r\n                return this.tt.checkeds && this.tt.checkeds.length || ( this.tt.selections && this.tt.selections.length);\r\n            }\r\n\r\n            if (this._leftCheckeds) {\r\n                return Object.keys(this._leftCheckeds).length > 0;\r\n            } else {\r\n                return false;\r\n            }\r\n        } else {\r\n            if (this._rightCheckeds) {\r\n                return Object.keys(this._rightCheckeds).length > 0;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    rightDataChecked(item, emit = true) {\r\n        const isCheck = this.isChecked(item, 'R');\r\n        if (isCheck) {\r\n            if (this.showCheckbox) {\r\n                delete this._rightCheckeds[item[this.idField]];\r\n            } else {\r\n                this._rightCheckeds = {};\r\n            }\r\n            return;\r\n        } else {\r\n            if (this.showCheckbox) {\r\n                this._rightCheckeds = this._rightCheckeds || {};\r\n            } else {\r\n                this._rightCheckeds = {};\r\n            }\r\n            this._rightCheckeds[item[this.idField]] = item;\r\n        }\r\n        this.cd.detectChanges();\r\n        this.selected.emit({ selected: !isCheck, data: item });\r\n    }\r\n\r\n    selectItem(id, emit = true) {\r\n        if (this.selections && this.selections.length) {\r\n            const item = this.selections.find(n => n[this.idField] === id);\r\n            if (item) {\r\n                this.rightDataChecked(item, emit);\r\n            }\r\n        }\r\n    }\r\n\r\n    private clearSelections() {\r\n\r\n    }\r\n\r\n    /**\r\n     * å°æ ç»ææ°æ®è½¬æ¢ä¸ºæå¹³æ°ç»\r\n     * @param nodes æ èç¹æ°ç»\r\n     * @param r æ°çç©ºæ°ç»\r\n     */\r\n    private convertTreeDataToPlainData(nodes: TreeNode[], r: any[] = []) {\r\n        if (nodes) {\r\n            nodes.forEach(n => {\r\n                r.push(n);\r\n                if (n.children) {\r\n                    this.convertTreeDataToPlainData(n.children, r);\r\n                }\r\n            });\r\n        }\r\n\r\n        return r;\r\n    }\r\n\r\n    //#region å·¦å³ç§»å¨\r\n\r\n    private moveItem() {\r\n        this.beforeMove.subscribe((obj: any) => {\r\n            const items = obj.items;\r\n            const ids = Object.keys(items);\r\n            let direction = 1;\r\n            switch (obj.target) {\r\n                case 'right':\r\n                    Object.keys(items).forEach(id => {\r\n                        if (!this._rightData.find(n => n[this.idField].toString() === id)) {\r\n                            this._rightData.push(items[id]);\r\n                        }\r\n                    });\r\n                    this._rightData = [...this._rightData];\r\n                    if (this.isTree()) {\r\n                        this.tt.clearAll();\r\n                    }\r\n                    direction = 1;\r\n                    break;\r\n                case 'rightAll':\r\n                    items.forEach(data => {\r\n                        if (this._rightData.findIndex(n => n[this.idField] === data[this.idField]) === -1) {\r\n                            this._rightData.push(data);\r\n                        }\r\n                    });\r\n                    if (this.isTree()) {\r\n                        this.tt.clearAll();\r\n                    }\r\n\r\n                    direction = 1;\r\n                    break;\r\n                case 'left':\r\n                    this._rightData = this._rightData.filter(v => {\r\n                        return ids.indexOf('' + v[this.idField]) === -1;\r\n                    });\r\n                    this._rightCheckeds = {};\r\n                    ids.forEach(id => {\r\n                        delete this._leftCheckeds[id];\r\n                    });\r\n                    direction = -1;\r\n\r\n                    if (this.isTree()) {\r\n                        this.tt.findRowNodes(ids).forEach(n => {\r\n                            n.node.selectable = true;\r\n                        });\r\n                        this.tt.unCheckedNodes(ids, true);\r\n                    }\r\n\r\n                    break;\r\n                case 'leftAll':\r\n                    this._rightCheckeds = {};\r\n                    this._rightData = [];\r\n                    direction = -1;\r\n                    this._leftCheckeds = {};\r\n                    if (this.isTree()) {\r\n                        this.tt.clearAll();\r\n                        this.tt.findRowNodes(ids).forEach(n => {\r\n                            n.node.selectable = true;\r\n                        });\r\n                    }\r\n                    break;\r\n            }\r\n\r\n            this.selectionsChange();\r\n            this.changeSelectIds(direction);\r\n\r\n            this.afterMove.emit(Object.values(items));\r\n        });\r\n    }\r\n\r\n\r\n    /** å³ç§» */\r\n    moveToRight(moveData?: any) {\r\n\r\n        if (moveData) {\r\n            this.beforeMove.emit({ items: { [moveData[this.idField]]: moveData }, target: 'right' });\r\n        } else {\r\n            if (this.hasCheckeds('L')) {\r\n                if (this.isTree()) {\r\n                    this._leftCheckeds = {};\r\n\r\n                    if (!this.tt.checkeds.filter(n => this._rightData.findIndex(r => r.id === n.id) === -1 ).length) {\r\n                        this.mesagerSer.warning(this.noDataMoveMessage);\r\n                        return;        \r\n                    }\r\n\r\n                    this.tt.checkeds.forEach(n => {\r\n                        this._leftCheckeds[n.data[this.idField]] = n.data;\r\n                    });\r\n\r\n                    this.tt.selections.forEach(n => {\r\n                        this._leftCheckeds[n.id] = n.data;\r\n                    });\r\n\r\n                } else {\r\n                    const newCheckeds = Object.keys(this._leftCheckeds).filter(id => {\r\n                        return this._rightData.findIndex(n => n.id === id) === -1\r\n                    });\r\n                    if (!newCheckeds.length) {\r\n                        this.mesagerSer.warning(this.noDataMoveMessage);\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                this.beforeMove.emit({ items: this._leftCheckeds, target: 'right' });\r\n            } else {\r\n                this.mesagerSer.warning(this.noDataMoveMessage);\r\n            }\r\n        }\r\n    }\r\n\r\n    /** å¨é¨å³ç§» */\r\n    moveAllToRight() {\r\n        if (this.searchValue === '') {\r\n            this._rightData = [];\r\n        }\r\n        if (this.displayType === 'List') {\r\n            const items = this.dataSource;\r\n            // if (this.searchValue && this._leftCheckeds) {\r\n            //     const checkids = Object.keys(this._leftCheckeds);\r\n            //     if (checkids.length) {\r\n            //         checkids.forEach(id => {\r\n            //             if (!items.find(n => n[this.idField] === id)) {\r\n            //                 items.push(this._leftCheckeds[id]);\r\n            //             }\r\n            //         });\r\n            //     }\r\n            // }\r\n            this.beforeMove.emit({ items , target: 'rightAll' });\r\n        } else {\r\n            if (!this.searchValue) {\r\n                let _dataSource = [];\r\n                this.convertTreeDataToPlainData(this.dataSource, _dataSource);\r\n                _dataSource = _dataSource.filter(n => n.selectable && (n.visible || n.visible === undefined)).map(n => n.data);\r\n\r\n                this.beforeMove.emit({ items: _dataSource, target: 'rightAll' });\r\n            } else {\r\n                const _dataSource = this.tt.serializedValue.map(n => n.node.data);\r\n                this.beforeMove.emit({ items: _dataSource, target: 'rightAll' });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    /** å·¦ç§» */\r\n    moveToLeft(moveData?: any) {\r\n\r\n        if (moveData) {\r\n            this.beforeMove.emit({ items: { [moveData[this.idField]]: moveData }, target: 'left' });\r\n        } else {\r\n            if (this.hasCheckeds('R')) {\r\n                this.beforeMove.emit({ items: this._rightCheckeds, target: 'left' });\r\n            } else {\r\n                this.mesagerSer.warning(this.noDataMoveMessage);\r\n            }\r\n        }\r\n    }\r\n\r\n    /** å¨é¨å·¦ç§» */\r\n    moveAllToLeft() {\r\n        this.beforeMove.emit({ items: this._rightData, target: 'leftAll' });\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region ä¸ä¸ç§»å¨æ¾ç¤ºåé¡ºåº\r\n\r\n    _getSelectInfo() {\r\n        if (this.hasCheckeds('R')) {\r\n            const key = Object.keys(this._rightCheckeds)[0];\r\n            const index = this._rightData.findIndex(c => '' + c[this.idField] === key);\r\n            return {\r\n                key, index\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n    /** ç½®é¡¶ */\r\n    moveTop() {\r\n        const obj = this._getSelectInfo();\r\n        if (obj) {\r\n            this._rightData.unshift(this._rightData[obj.index]);\r\n            this._rightData.splice(obj.index + 1, 1);\r\n            this.selectionsChange();\r\n            this.changeSelectIds(0);\r\n        } else {\r\n            this.mesagerSer.warning(this.noDataMoveMessage);\r\n        }\r\n    }\r\n\r\n    /** ä¸ç§» */\r\n    moveUp() {\r\n        if (this.hasCheckeds('R')) {\r\n            const obj = this._getSelectInfo();\r\n            if (obj) {\r\n                const index = obj.index;\r\n                if (index !== 0) {\r\n                    const tempArr = this._rightData.splice(index, 1);\r\n                    this._rightData.splice(index - 1, 0, ...tempArr);\r\n                }\r\n                this.selectionsChange();\r\n                this.changeSelectIds(0);\r\n            }\r\n        } else {\r\n            this.mesagerSer.warning(this.noDataMoveMessage);\r\n        }\r\n    }\r\n\r\n    /** ä¸ç§» */\r\n    moveDown() {\r\n        if (this.hasCheckeds('R')) {\r\n            const obj = this._getSelectInfo();\r\n            if (obj) {\r\n                const len = this._rightData.length;\r\n                const index = obj.index;\r\n                if (index === 0 || index !== len - 1) {\r\n                    const tempArr = this._rightData.splice(index, 1);\r\n                    this._rightData.splice(index + 1, 0, ...tempArr);\r\n                }\r\n                this.changeSelectIds(0);\r\n                this.selectionsChange();\r\n            }\r\n        } else {\r\n            this.mesagerSer.warning(this.noDataMoveMessage);\r\n        }\r\n    }\r\n\r\n    /** ç½®åº */\r\n    moveBottom() {\r\n        const obj = this._getSelectInfo();\r\n        if (obj) {\r\n            this._rightData.push(this._rightCheckeds[obj.key]);\r\n            this._rightData.splice(obj.index, 1);\r\n            this.changeSelectIds(0);\r\n            this.selectionsChange();\r\n        } else {\r\n            this.mesagerSer.warning(this.noDataMoveMessage);\r\n        }\r\n    }\r\n    /**\r\n     * è§¦åéæ©ä¸­id\r\n     * @param number 1ä»£è¡¨å·¦ä¾§æ°æ®å³ç§»ï¼-1,ä»£è¡¨æ°æ®å·¦ç§»ï¼0ä»£è¡¨ä¸ç§»ä¸ç§»\r\n     */\r\n    private changeSelectIds(number: number) {\r\n        const ids = this._rightData.map(item => {\r\n            return item[this.idField];\r\n        });\r\n\r\n        if (number === 0) {\r\n            if (typeof this.selectedId === 'string') {\r\n                this.selectedId = ids.join(',');\r\n            } else if (Array.isArray(this.selectedId)) {\r\n                this.selectedId = ids;\r\n            }\r\n            this.selectedIdChange.emit(this.selectedId);\r\n            return;\r\n        }\r\n\r\n        if (!this.selectedId) {\r\n            this.selectedId = [];\r\n        }\r\n\r\n        if (number === 1 || number === -1) {\r\n            if (!ids.length) {\r\n                this.selectedId = [];\r\n            } else {\r\n                this.selectedId = ids;\r\n            }\r\n\r\n            if (this.isTree()) {\r\n                if (ids && ids.length) {\r\n                    this.tt.checkedNodes(ids, true, false, true);\r\n                }\r\n            }\r\n        }\r\n        this.canCheckLength = this.getCanCheckLength();\r\n        this.selectedIdChange.emit(this.selectedId);\r\n    }\r\n\r\n    //#endregion\r\n\r\n    private selectionsChange() {\r\n        this.dataChange.emit(this._rightData);\r\n        this.cd.detectChanges();\r\n    }\r\n\r\n    getText(item, textField = this.textField) {\r\n        if (item) {\r\n            if (this.commonUtils && this.commonUtils.getValue && textField) {\r\n                return this.commonUtils.getValue(textField, item);\r\n            } else {\r\n                return item[textField];\r\n            }\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    getValue(item, valueField = this.valueField) {\r\n        if (item) {\r\n            if (this.commonUtils && this.commonUtils.getValue && valueField) {\r\n                return this.commonUtils.getValue(valueField, item);\r\n            } else {\r\n                return item[valueField];\r\n            }\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    trackByItems = (index, item) => {\r\n        return index;\r\n    }\r\n\r\n}\r\n\r\n\r\n@Component({\r\n    selector: 'display-text',\r\n    template: `\r\n        <ng-container *ngIf=\"template\" >\r\n            <ng-container\r\n                *ngTemplateOutlet=\"template; context: {$implicit: data,instance: ms, side: side, selected: ms.isChecked(data, 'R') }\">\r\n            </ng-container>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"!template\">\r\n            {{ _getText(data) }}\r\n        </ng-container>\r\n    `\r\n})\r\nexport class DisplayTextComponent implements OnInit {\r\n    @Input() template: TemplateRef<any>;\r\n    @Input() data: any;\r\n    @Input() side = 'L';\r\n\r\n    constructor(public ms: MultiSelectComponent) { }\r\n\r\n    ngOnInit() {\r\n        // console.log(this.data);\r\n    }\r\n\r\n    _getText(item) {\r\n        return this.ms.getText(item);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LocaleModule } from '@farris/ui-locale';\r\nimport { PerfectScrollbarModule } from '@farris/ui-perfect-scrollbar';\r\nimport { TreeTableModule } from '@farris/ui-treetable';\r\nimport { FarrisCommonModule } from '@farris/ui-common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MultiSelectComponent, DisplayTextComponent } from './multi-select.component';\r\nimport { MessagerModule } from '@farris/ui-messager';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        PerfectScrollbarModule,\r\n        FarrisCommonModule,\r\n        TreeTableModule,\r\n        LocaleModule,\r\n        FormsModule,\r\n        MessagerModule.forRoot()\r\n    ],\r\n    declarations: [MultiSelectComponent, DisplayTextComponent],\r\n    exports: [\r\n        MultiSelectComponent,\r\n        DisplayTextComponent,\r\n        FarrisCommonModule\r\n    ],\r\n    providers: [],\r\n})\r\nexport class MultiSelectModule { }\r\n"]}