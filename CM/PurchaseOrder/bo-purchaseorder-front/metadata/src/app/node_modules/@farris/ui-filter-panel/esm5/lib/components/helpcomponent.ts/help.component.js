/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter, Injector } from '@angular/core';
// import { ServerSideToken } from '@farris/ui-lookup';
// import { LookupHttpBeQueryService } from './service/Lookup-http.service';
import { of } from 'rxjs';
import { cloneDeep } from 'lodash-es';
var PanelHelpComponent = /** @class */ (function () {
    function PanelHelpComponent(injector) {
        var _this = this;
        this.injector = injector;
        this.searchHandle = new EventEmitter();
        this.submitChange = new EventEmitter();
        this.onSearch = (/**
         * @return {?}
         */
        function () {
            _this.searchHandle.emit();
            return of(true);
        });
    }
    Object.defineProperty(PanelHelpComponent.prototype, "item", {
        get: /**
         * @return {?}
         */
        function () {
            return this._item;
        },
        set: /**
         * @param {?} data
         * @return {?}
         */
        function (data) {
            this._item = data;
            if (this._item.placeHolder) {
                this.placeholder = this._item.placeHolder;
            }
            if (!this._item.hasOwnProperty('value')) {
                this._item.value = {
                    value: [],
                    valueField: '',
                    textValue: ''
                };
            }
            this.getHelpBindingInfo();
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    PanelHelpComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        // if(this.item.control && this.item.control.hasOwnProperty('placeholder')){
        //     this.placeholder = this.item.control.placeholder;
        // }
        // this.getHelpBindingInfo();
    };
    /**
     * @param {?} selectedItem
     * @return {?}
     */
    PanelHelpComponent.prototype.selectedDataHandler = /**
     * @param {?} selectedItem
     * @return {?}
     */
    function (selectedItem) {
        /** @type {?} */
        var helpValue = (this._item.value);
        helpValue.value = this.singleSelect ? [selectedItem] : selectedItem; // 单选返回对象，多选返回数组
        helpValue.valueField = this.valueField;
        helpValue.textValue = this.getTextValue(this.textField, helpValue.value);
        this.textValue = helpValue.textValue;
        this._item.valueText = this._item.value.textValue;
        this.setSubmitChange();
        this.searchHandle.emit();
    };
    /**
     * @return {?}
     */
    PanelHelpComponent.prototype.getHelpBindingInfo = /**
     * @return {?}
     */
    function () {
        if (this._item && this._item.control) {
            /** @type {?} */
            var helpOpts = this._item.control;
            this.uri = helpOpts.uri;
            this.title = helpOpts.title;
            this.textField = helpOpts.textField;
            this.valueField = helpOpts.valueField;
            this.idField = helpOpts.idField;
            this.mapFields = helpOpts.mapFields;
            this.context = helpOpts.context;
            this.preEventCmd = helpOpts.preEventCmd;
            this.postEventCmd = helpOpts.postEventCmd;
            this.singleSelect = helpOpts.singleSelect;
            this.enableFullTree = helpOpts.enableFullTree;
            this.loadTreeDataType = helpOpts.loadTreeDataType;
            this.expandLevel = helpOpts.expandLevel;
            this.enableCascade = helpOpts.enableCascade;
            this.helpId = helpOpts.helpId;
            /** @type {?} */
            var helpValue = (this._item.value);
            // if (helpValue && helpValue.value) {
            //     // this.textValue = (this.item.value as HelpValue).value[this.textField];
            //     this.textValue = HelpValue.getPropValue(helpValue.value, this.textField.split('.'));
            // }
            this.displayType = helpOpts.displayType;
            if (helpValue.textValue == 'help-text-value-null') { // 旧数据兼容
                this.textValue = helpValue.getTextValue(this.textField);
            }
            else {
                this.textValue = helpValue.textValue;
            }
        }
        this.setSubmitChange();
    };
    /**
     * @param {?} data
     * @return {?}
     */
    PanelHelpComponent.prototype.clearData = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        (this._item.value).clearValue();
        this.setSubmitChange();
        this.searchHandle.emit();
    };
    /**
     * @param {?} helpItem
     * @param {?} args
     * @return {?}
     */
    PanelHelpComponent.prototype.getPropValue = /**
     * @param {?} helpItem
     * @param {?} args
     * @return {?}
     */
    function (helpItem, args) {
        if (args.length > 1) {
            /** @type {?} */
            var arg = args.shift();
            return helpItem[arg] ? this.getPropValue(helpItem[arg], args) : null;
        }
        return helpItem[args[0]];
    };
    /**
     * @param {?} textField
     * @param {?} value
     * @return {?}
     */
    PanelHelpComponent.prototype.getTextValue = /**
     * @param {?} textField
     * @param {?} value
     * @return {?}
     */
    function (textField, value) {
        var _this = this;
        /** @type {?} */
        var args = textField.split('.');
        /** @type {?} */
        var textArr = value.map((/**
         * @param {?} helpItem
         * @return {?}
         */
        function (helpItem) { return _this.getPropValue(helpItem, cloneDeep(args)); }));
        return textArr && textArr.length ? textArr.join(',') : '';
    };
    /**
     * @return {?}
     */
    PanelHelpComponent.prototype.setSubmitChange = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var val = this._item.value;
        if (Object.keys(val).length < 0 || !val.value || !val.valueField) {
            this.submitChange.emit(false);
        }
        else {
            this.submitChange.emit(true);
        }
    };
    PanelHelpComponent.decorators = [
        { type: Component, args: [{
                    selector: 'panel-filter-help',
                    template: "<farris-lookup-grid  \r\n    [uri]=\"uri\"\r\n    [title]=\"title\"\r\n    [idField]=\"idField\" \r\n    [textField]=\"textField\" \r\n    [valueField]=\"valueField\" \r\n    [(ngModel)]=\"textValue\"\r\n    [displayType]=\"displayType\"\r\n    [editable]=\"false\"\r\n    (clear)=\"clearData($event)\"\r\n    (selectedData)=\"selectedDataHandler($event)\"\r\n    [placeholder]=\"placeholder\"\r\n    [mapFields]=\"mapFields\"\r\n    [dictPicking]=\"preEventCmd\"\r\n    [dictPicked]=\"postEventCmd\"\r\n    [context]=\"context\"\r\n    [enableFullTree]=\"enableFullTree\"\r\n    [loadTreeDataType]=\"loadTreeDataType\"\r\n    [singleSelect]=\"singleSelect\"\r\n    [expandLevel]=\"expandLevel\"\r\n    [enableCascade]=\"enableCascade\"\r\n>\r\n</farris-lookup-grid>"
                    // providers: [{ provide: ServerSideToken, useClass: LookupHttpBeQueryService }]
                }] }
    ];
    /** @nocollapse */
    PanelHelpComponent.ctorParameters = function () { return [
        { type: Injector }
    ]; };
    PanelHelpComponent.propDecorators = {
        item: [{ type: Input }],
        searchHandle: [{ type: Output }],
        submitChange: [{ type: Output }]
    };
    return PanelHelpComponent;
}());
export { PanelHelpComponent };
if (false) {
    /** @type {?} */
    PanelHelpComponent.prototype._item;
    /** @type {?} */
    PanelHelpComponent.prototype.searchHandle;
    /** @type {?} */
    PanelHelpComponent.prototype.submitChange;
    /** @type {?} */
    PanelHelpComponent.prototype.uri;
    /** @type {?} */
    PanelHelpComponent.prototype.textField;
    /** @type {?} */
    PanelHelpComponent.prototype.idField;
    /** @type {?} */
    PanelHelpComponent.prototype.valueField;
    /** @type {?} */
    PanelHelpComponent.prototype.textValue;
    /** @type {?} */
    PanelHelpComponent.prototype.displayType;
    /** @type {?} */
    PanelHelpComponent.prototype.mapFields;
    /** @type {?} */
    PanelHelpComponent.prototype.context;
    /** @type {?} */
    PanelHelpComponent.prototype.preEventCmd;
    /** @type {?} */
    PanelHelpComponent.prototype.postEventCmd;
    /** @type {?} */
    PanelHelpComponent.prototype.enableFullTree;
    /** @type {?} */
    PanelHelpComponent.prototype.loadTreeDataType;
    /** @type {?} */
    PanelHelpComponent.prototype.singleSelect;
    /** @type {?} */
    PanelHelpComponent.prototype.expandLevel;
    /** @type {?} */
    PanelHelpComponent.prototype.enableCascade;
    /** @type {?} */
    PanelHelpComponent.prototype.placeholder;
    /** @type {?} */
    PanelHelpComponent.prototype.helpId;
    /** @type {?} */
    PanelHelpComponent.prototype.title;
    /** @type {?} */
    PanelHelpComponent.prototype.onSearch;
    /**
     * @type {?}
     * @private
     */
    PanelHelpComponent.prototype.injector;
}
//# sourceMappingURL=data:application/json;base64,