/**
 * @fileoverview added by tsickle
 * Generated from: lib/bill-tracker/components/basic-info/basic-info.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectorRef, Component, ComponentFactoryResolver, Inject, Injector, Input, LOCALE_ID, Optional, ReflectiveInjector, ViewContainerRef } from "@angular/core";
import { BillDataTable, BillSchemaTable, DataType } from "@edp-aif/common-api";
import { JointQueryMode } from "@edp-bif/common-api";
import { LoadingService } from "@farris/ui-loading";
import { MessagerService } from "@farris/ui-messager";
import { BsModalService } from "@farris/ui-modal";
import { NotifyService } from "@farris/ui-notify";
import { FrameworkService } from "@gsp-sys/rtf-common";
import { BillDataInfo } from "../../../entity/tracking/BillDataInfo";
import { BillInfo } from "../../../entity/tracking/BillInfo";
import { BillTrackerLocalePipe } from "../../pipe/bill-tracker-locale.pipe";
import { BillTrackerDataInfoService } from "../../services/bill-tracker-data-info.service";
import { BillTrackerInternalUiService } from "../../services/bill-tracker-internal-ui.service";
var BasicInfoComponent = /** @class */ (function () {
    function BasicInfoComponent(framework, dataInfoService, notify, messager, loading, modal, localePipe, vcr, inj, cfr, cdr, localeId) {
        this.framework = framework;
        this.dataInfoService = dataInfoService;
        this.notify = notify;
        this.messager = messager;
        this.loading = loading;
        this.modal = modal;
        this.localePipe = localePipe;
        this.vcr = vcr;
        this.inj = inj;
        this.cfr = cfr;
        this.cdr = cdr;
        this.localeId = localeId;
        this.fieldsWithValue = [];
        this.childSchemaTables = [];
        this.childDataTableMap = {};
        this.dateType = DataType;
        this.secTitle = "";
        this.localeId = localeId || this.inj.get(LOCALE_ID);
        /** @type {?} */
        var inject = ReflectiveInjector.resolveAndCreate([
            BillTrackerInternalUiService
        ], this.inj);
        this.internalUiService = inject.get(BillTrackerInternalUiService, null);
    }
    /**
     * @return {?}
     */
    BasicInfoComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        // 设置section标题
        this.secTitle = this.localePipe.transform("basicInfo");
        // 表名解析
        this.secTitle = this.dataInfoService.getTableLabel(this.billInfo, this.schemaTable, this.localeId);
        // 获取带值的字段信息
        this.fieldsWithValue = this.dataInfoService.getBasicInfoFieldsWithValue(this.billInfo, this.schemaTable, this.dataTable);
        // 按order排序
        this.fieldsWithValue = this.dataInfoService.sortFieldsByOrder(this.fieldsWithValue);
        //主表数据
        /** @type {?} */
        var r = this.dataTable.GetRowList()[0];
        // 子表列表
        this.childSchemaTables = this.dataInfoService.getChildTables(this.billInfo, this.schemaTable);
        this.childDataTableMap = r.GetChildTableMap();
        if (this.billInfo.jointQueryParameters != null) {
            /** @type {?} */
            var jointQueryParameters = JSON.parse(this.billInfo.jointQueryParameters);
            this.hasLink = (this.billInfo.jointQueryMode == JointQueryMode.APP && jointQueryParameters.funcId != null)
                || (this.billInfo.jointQueryMode == JointQueryMode.URL && jointQueryParameters.url != null);
        }
        else {
            this.hasLink = false;
        }
    };
    /**
     * @return {?}
     */
    BasicInfoComponent.prototype.clickLink = /**
     * @return {?}
     */
    function () {
        this.internalUiService.openBillDetailWithFields(this.billInfo, this.billDataInfo, this.fieldsWithValue);
        event.stopPropagation();
        return false;
    };
    BasicInfoComponent.decorators = [
        { type: Component, args: [{
                    selector: "lib-bill-tracker-main-table",
                    template: "<farris-section class=\"f-section-form f-section-in-mainsubcard\" [mainTitle]=\"secTitle\">\r\n    <div class=\"f-form-layout farris-form farris-form-controls-inline\">\r\n        <ng-container *ngFor=\"let field of fieldsWithValue; let i = index\">\r\n            <div class=\"col-12 col-md-6 col-xl-3 col-el-2\" *ngIf=\"field.show\">\r\n                <!-- \u4EC5\u663E\u793Ashow\u5C5E\u6027\u4E3Atrue\u7684\u5B57\u6BB5 -->\r\n                <!-- <div class=\"farris-group-wrap\" *ngIf=\"!(hasLink && i==0); else linkTemp\"> -->\r\n                <div class=\"farris-group-wrap\">\r\n                    <!-- \u975E\u5E03\u5C14\u503C\u4F7F\u7528\u6587\u672C\u6846 -->\r\n                    <div class=\"form-group farris-form-group\" *ngIf=\"field.dataType!=dateType.Boolean\">\r\n                        <label class=\"col-form-label\">\r\n                            <span class=\"farris-label-text\" title=\"{{field | billTrackerFieldLabel}}\">\r\n                                {{field | billTrackerFieldLabel}}\r\n                            </span>\r\n                        </label>\r\n                        <div class=\"farris-input-wrap\">\r\n                            <div class=\"f-component-text\" *ngIf=\"field.dataType!=dateType.Boolean\">\r\n                                <span class=\"f-form-control-text\" title=\"{{field.fieldValue}}\">\r\n                                    {{field.fieldValue}}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <!-- \u5E03\u5C14\u503C\u4F7F\u7528\u590D\u9009\u6846 -->\r\n                    <div class=\"form-group farris-form-group\" *ngIf=\"field.dataType==dateType.Boolean\">\r\n                        <label class=\"col-form-label\">\r\n                            <span class=\"farris-label-text\" title=\"{{field | billTrackerFieldLabel}}\">\r\n                                {{field | billTrackerFieldLabel}}\r\n                            </span>\r\n                        </label>\r\n                        <div class=\"farris-input-wrap\">\r\n                            <div class=\"custom-control custom-checkbox\">\r\n                                <input class=\"custom-control-input\" type=\"checkbox\" readonly\r\n                                    [checked]=\"field.fieldValue\" />\r\n                                <label class=\"custom-control-label\"></label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <!-- \u6709\u8054\u67E5\u914D\u7F6E\u65F6\uFF0C\u9ED8\u8BA4\u53D6\u7B2C\u4E00\u4E2A\u5B57\u6BB5\u4F5C\u4E3A\u8D85\u94FE\u63A5 -->\r\n                <!-- <ng-template #linkTemp> -->\r\n                <!-- <div class=\"farris-group-wrap\"> -->\r\n                <!-- \u975E\u5E03\u5C14\u503C\u94FE\u63A5\u5728value\u4E0A -->\r\n                <!-- <div class=\"form-group farris-form-group\" *ngIf=\"field.dataType!=dateType.Boolean\">\r\n                            <label class=\"col-form-label\">\r\n                                <span class=\"farris-label-text\" title=\"{{field | billTrackerFieldLabel}}\">\r\n                                    {{field | billTrackerFieldLabel}}\r\n                                </span>\r\n                            </label>\r\n                            <div class=\"farris-input-wrap\">\r\n                                <div class=\"f-component-text\">\r\n                                    <span class=\"f-form-control-text\" title=\"{{field.fieldValue}}\">\r\n                                        <a href=\"javascript:void(0);\" (click)=\"clickLink()\">{{field.fieldValue}}</a>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div> -->\r\n\r\n                <!-- \u5E03\u5C14\u503C\u94FE\u63A5\u5728label\u4E0A -->\r\n                <!-- <div class=\"form-group farris-form-group\" *ngIf=\"field.dataType==dateType.Boolean\">\r\n                            <label class=\"col-form-label\">\r\n                                <span class=\"farris-label-text\" title=\"{{field | billTrackerFieldLabel}}\">\r\n                                    <a href=\"javascript:void(0);\" (click)=\"clickLink()\">\r\n                                        {{field | billTrackerFieldLabel}}\r\n                                    </a>\r\n                                </span>\r\n                            </label>\r\n                            <div class=\"farris-input-wrap\">\r\n                                <div class=\"farris-input-wrap\">\r\n                                    <div class=\"custom-control custom-checkbox\">\r\n                                        <input class=\"custom-control-input\" type=\"checkbox\" readonly\r\n                                            [checked]=\"field.fieldValue\" />\r\n                                        <label class=\"custom-control-label\"></label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div> -->\r\n                <!-- </div> -->\r\n                <!-- </ng-template> -->\r\n            </div>\r\n        </ng-container>\r\n    </div>\r\n</farris-section>\r\n<lib-bill-tracker-child-info-list [childSchemaTables]=\"childSchemaTables\" [childDataTableMap]=\"childDataTableMap\"\r\n    [billInfo]=\"billInfo\">\r\n</lib-bill-tracker-child-info-list>"
                }] }
    ];
    /** @nocollapse */
    BasicInfoComponent.ctorParameters = function () { return [
        { type: FrameworkService },
        { type: BillTrackerDataInfoService },
        { type: NotifyService },
        { type: MessagerService },
        { type: LoadingService },
        { type: BsModalService },
        { type: BillTrackerLocalePipe },
        { type: ViewContainerRef },
        { type: Injector },
        { type: ComponentFactoryResolver },
        { type: ChangeDetectorRef },
        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [LOCALE_ID,] }] }
    ]; };
    BasicInfoComponent.propDecorators = {
        schemaTable: [{ type: Input, args: ["schemaTable",] }],
        dataTable: [{ type: Input, args: ["dataTable",] }],
        billInfo: [{ type: Input, args: ["billInfo",] }],
        billDataInfo: [{ type: Input, args: ["billDataInfo",] }]
    };
    return BasicInfoComponent;
}());
export { BasicInfoComponent };
if (false) {
    /** @type {?} */
    BasicInfoComponent.prototype.schemaTable;
    /** @type {?} */
    BasicInfoComponent.prototype.dataTable;
    /** @type {?} */
    BasicInfoComponent.prototype.billInfo;
    /** @type {?} */
    BasicInfoComponent.prototype.billDataInfo;
    /** @type {?} */
    BasicInfoComponent.prototype.fieldsWithValue;
    /** @type {?} */
    BasicInfoComponent.prototype.childSchemaTables;
    /** @type {?} */
    BasicInfoComponent.prototype.childDataTableMap;
    /** @type {?} */
    BasicInfoComponent.prototype.hasLink;
    /** @type {?} */
    BasicInfoComponent.prototype.dateType;
    /** @type {?} */
    BasicInfoComponent.prototype.secTitle;
    /** @type {?} */
    BasicInfoComponent.prototype.internalUiService;
    /** @type {?} */
    BasicInfoComponent.prototype.framework;
    /** @type {?} */
    BasicInfoComponent.prototype.dataInfoService;
    /** @type {?} */
    BasicInfoComponent.prototype.notify;
    /** @type {?} */
    BasicInfoComponent.prototype.messager;
    /** @type {?} */
    BasicInfoComponent.prototype.loading;
    /** @type {?} */
    BasicInfoComponent.prototype.modal;
    /** @type {?} */
    BasicInfoComponent.prototype.localePipe;
    /** @type {?} */
    BasicInfoComponent.prototype.vcr;
    /** @type {?} */
    BasicInfoComponent.prototype.inj;
    /** @type {?} */
    BasicInfoComponent.prototype.cfr;
    /** @type {?} */
    BasicInfoComponent.prototype.cdr;
    /** @type {?} */
    BasicInfoComponent.prototype.localeId;
}
//# sourceMappingURL=data:application/json;base64,