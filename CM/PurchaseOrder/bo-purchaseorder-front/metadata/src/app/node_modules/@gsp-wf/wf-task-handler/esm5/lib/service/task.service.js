/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { HttpService } from '@ecp-caf/caf-common';
import { forkJoin } from 'rxjs';
import { MessagerService } from '@farris/ui-messager';
var TaskService = /** @class */ (function () {
    function TaskService(httpSvc, message) {
        this.httpSvc = httpSvc;
        this.message = message;
    }
    /**
     * @param {?} ids
     * @return {?}
     */
    TaskService.prototype.getUsersByIds = /**
     * @param {?} ids
     * @return {?}
     */
    function (ids) {
        var _this = this;
        /** @type {?} */
        var pathUrl = '/api/runtime/sys/v1.0/users';
        return forkJoin(ids.map(function (id) { return _this.httpSvc.get(pathUrl + ("/" + id) + "?mode=0002"); }));
    };
    /**
     * 获取工作项操作列表
     */
    /**
     * 获取工作项操作列表
     * @param {?} workItemId
     * @return {?}
     */
    TaskService.prototype.getWorkItemActions = /**
     * 获取工作项操作列表
     * @param {?} workItemId
     * @return {?}
     */
    function (workItemId) {
        /** @type {?} */
        var url = "/api/runtime/wf/v1.0/workItems/" + workItemId + "/actions";
        return this.httpSvc.get(url);
    };
    /**
     * 执行审批操作
     * @param context 执行审批上下文
     */
    /**
     * 执行审批操作
     * @param {?} context 执行审批上下文
     * @return {?}
     */
    TaskService.prototype.complete = /**
     * 执行审批操作
     * @param {?} context 执行审批上下文
     * @return {?}
     */
    function (context) {
        /** @type {?} */
        var url = "/api/runtime/wf/v1.0/workItems/complete";
        return this.httpSvc.post(url, context);
    };
    /**
     * 执行审批预解析
     * @param context 执行审批上下文
     */
    /**
     * 执行审批预解析
     * @param {?} context 执行审批上下文
     * @return {?}
     */
    TaskService.prototype.completeSimulate = /**
     * 执行审批预解析
     * @param {?} context 执行审批上下文
     * @return {?}
     */
    function (context) {
        /** @type {?} */
        var url = "/api/runtime/wf/v1.0/workItems/complete-simulation";
        return this.httpSvc.post(url, context);
    };
    /**
     * 获取跳转活动信息
     * @param workItemId 工作项Id
     * @param action 动作编号
     */
    /**
     * 获取跳转活动信息
     * @param {?} workItemId 工作项Id
     * @param {?} action 动作编号
     * @return {?}
     */
    TaskService.prototype.getDestinationScope = /**
     * 获取跳转活动信息
     * @param {?} workItemId 工作项Id
     * @param {?} action 动作编号
     * @return {?}
     */
    function (workItemId, action) {
        /** @type {?} */
        var url = "/api/runtime/wf/v1.0/workItems/" + workItemId + "/nextNodes/" + action;
        return this.httpSvc.get(url);
    };
    /**
     * 根据节点ID获取指定参与者的结果
     * @param workItemId
     * @param nodeId 说明：nodeIds=["node1","node2",···]
     * @returns 指派信息的数组 re: FlowNodeInfo[]
     */
    /**
     * 根据节点ID获取指定参与者的结果
     * @param {?} workItemId
     * @param {?} nodeId 说明：nodeIds=["node1","node2",···]
     * @return {?} 指派信息的数组 re: FlowNodeInfo[]
     */
    TaskService.prototype.getSimulationAssigneeInfo = /**
     * 根据节点ID获取指定参与者的结果
     * @param {?} workItemId
     * @param {?} nodeId 说明：nodeIds=["node1","node2",···]
     * @return {?} 指派信息的数组 re: FlowNodeInfo[]
     */
    function (workItemId, nodeId) {
        /** @type {?} */
        var url = "/api/runtime/wf/v1.0/workItems/" + workItemId + "/simulation-assigneeInfo?nodeIds=[" + nodeId + "]";
        return this.httpSvc.get(url);
    };
    /**
     * 执行征询、知会
     * @param context 上下文
     */
    /**
     * 执行征询、知会
     * @param {?} context 上下文
     * @return {?}
     */
    TaskService.prototype.addSign = /**
     * 执行征询、知会
     * @param {?} context 上下文
     * @return {?}
     */
    function (context) {
        /** @type {?} */
        var url = "/api/runtime/wf/v1.0/workItems/counterSignAdd";
        return this.httpSvc.post(url, context);
    };
    /**
     * 已阅
     * @param context 参数
     */
    /**
     * 已阅
     * @param {?} context 参数
     * @return {?}
     */
    TaskService.prototype.readTask = /**
     * 已阅
     * @param {?} context 参数
     * @return {?}
     */
    function (context) {
        /** @type {?} */
        var url = "/api/runtime/wf/v1.0/workItems/read";
        return this.httpSvc.post(url, context);
    };
    /**
     * 查询单据信息
     * @param workItemId 工作项Id
     */
    /**
     * 查询单据信息
     * @param {?} workItemId 工作项Id
     * @return {?}
     */
    TaskService.prototype.getAppInfo = /**
     * 查询单据信息
     * @param {?} workItemId 工作项Id
     * @return {?}
     */
    function (workItemId) {
        /** @type {?} */
        var formParUrl = "/api/runtime/wf/v1.0/workItems/" + workItemId + "/formInfo";
        return this.httpSvc.get(formParUrl);
    };
    /**
     * 获取指派信息
     * @param taskId 工作项Id
     * 此接口只返回一个AssignInfo类序列化后的信息，不是多个
     */
    /**
     * 获取指派信息
     * @param {?} taskId 工作项Id
     * 此接口只返回一个AssignInfo类序列化后的信息，不是多个
     * @return {?}
     */
    TaskService.prototype.getAssigneeInfo = /**
     * 获取指派信息
     * @param {?} taskId 工作项Id
     * 此接口只返回一个AssignInfo类序列化后的信息，不是多个
     * @return {?}
     */
    function (taskId) {
        /** @type {?} */
        var url = "/api/runtime/wf/v1.0/workItems/" + taskId + "/assigneeInfo";
        return this.httpSvc.get(url);
    };
    /**
     * 获取加签移交范围设置
     * @param workItemId
     * @param actionCode
     */
    /**
     * 获取加签移交范围设置
     * @param {?} workItemId
     * @param {?} actionCode
     * @return {?}
     */
    TaskService.prototype.getOrganizationScope = /**
     * 获取加签移交范围设置
     * @param {?} workItemId
     * @param {?} actionCode
     * @return {?}
     */
    function (workItemId, actionCode) {
        /** @type {?} */
        var url = "/api/runtime/wf/v1.0/workItems/" + workItemId + "/organizationScope/" + actionCode;
        return this.httpSvc.get(url);
    };
    /**
     * 根据流程实例ID和任务状态办理任务
     * @param procInstId 流程实例id
     * @param state 任务状态 2或5
     */
    /**
     * 根据流程实例ID和任务状态办理任务
     * @param {?} procInstId 流程实例id
     * @param {?} state 任务状态 2或5
     * @return {?}
     */
    TaskService.prototype.getTaskByProcInstId = /**
     * 根据流程实例ID和任务状态办理任务
     * @param {?} procInstId 流程实例id
     * @param {?} state 任务状态 2或5
     * @return {?}
     */
    function (procInstId, state) {
        /** @type {?} */
        var url = "/api/runtime/task/v1.0/tasks/processInstanceId?procInstId=" + procInstId + "&state=" + state;
        return this.httpSvc.get(url);
    };
    /**
     * 根据workitemID获取任务实体
     * @param workItemId
     */
    /**
     * 根据workitemID获取任务实体
     * @param {?} workItemId
     * @return {?}
     */
    TaskService.prototype.getTaskByWorkItemId = /**
     * 根据workitemID获取任务实体
     * @param {?} workItemId
     * @return {?}
     */
    function (workItemId) {
        /** @type {?} */
        var url = "/api/runtime/task/v1.0/tasks/sourceId/" + workItemId;
        return this.httpSvc.get(url);
    };
    /**
     * 根据工作项ID指派任务
     * @param assigneesPa 指派参数
     */
    /**
     * 根据工作项ID指派任务
     * @param {?} assigneesPa 指派参数
     * @return {?}
     */
    TaskService.prototype.assignNextUsersByWorkItemId = /**
     * 根据工作项ID指派任务
     * @param {?} assigneesPa 指派参数
     * @return {?}
     */
    function (assigneesPa) {
        /** @type {?} */
        var url = "/api/runtime/wf/v1.0/workItems/assignUser";
        return this.httpSvc.post(url, assigneesPa);
    };
    /**
     * 取回
     * @param workItemId task id
     * @param comment comment
     */
    /**
     * 取回
     * @param {?} context
     * @return {?}
     */
    TaskService.prototype.retrieve = /**
     * 取回
     * @param {?} context
     * @return {?}
     */
    function (context) {
        /** @type {?} */
        var url = "/api/runtime/wf/v1.0/workItems/retrieve";
        return this.httpSvc.post(url, context);
    };
    /**
     * 任务移交
     * @param taskId 工作项Id
     * @param targetUId 目标用户Id
     */
    /**
     * 任务移交
     * @param {?} transferContext
     * @return {?}
     */
    TaskService.prototype.transfer = /**
     * 任务移交
     * @param {?} transferContext
     * @return {?}
     */
    function (transferContext) {
        /** @type {?} */
        var url = "/api/runtime/wf/v1.0/workItems/transfer";
        return this.httpSvc.post(url, transferContext);
    };
    /**
     * 任务评论
     * @param taskId 工作项Id
     * @param targetUId 目标用户Id
     */
    /**
     * 任务评论
     * @param {?} commentContext
     * @return {?}
     */
    TaskService.prototype.comment = /**
     * 任务评论
     * @param {?} commentContext
     * @return {?}
     */
    function (commentContext) {
        /** @type {?} */
        var url = "/api/runtime/wf/v1.0/workItems/comment";
        return this.httpSvc.post(url, commentContext);
    };
    /**
     * 领用任务
     * @param taskId 工作项Id
     */
    /**
     * 领用任务
     * @param {?} taskId 工作项Id
     * @param {?} comment
     * @return {?}
     */
    TaskService.prototype.claim = /**
     * 领用任务
     * @param {?} taskId 工作项Id
     * @param {?} comment
     * @return {?}
     */
    function (taskId, comment) {
        /** @type {?} */
        var url = "/api/runtime/wf/v1.0/workItems/claim";
        /** @type {?} */
        var options = {
            workItemId: taskId,
            comment: comment
        };
        return this.httpSvc.post(url, options);
    };
    /**
     * 取消领用
     * @param taskId 任务Id
     */
    /**
     * 取消领用
     * @param {?} taskId 任务Id
     * @param {?} comment
     * @return {?}
     */
    TaskService.prototype.unClaim = /**
     * 取消领用
     * @param {?} taskId 任务Id
     * @param {?} comment
     * @return {?}
     */
    function (taskId, comment) {
        /** @type {?} */
        var url = "/api/runtime/wf/v1.0/workItems/unclaim";
        /** @type {?} */
        var options = {
            workItemId: taskId,
            comment: comment
        };
        return this.httpSvc.post(url, options);
    };
    /**
     * 报错提示
     * @param error
     */
    /**
     * 报错提示
     * @param {?} error
     * @return {?}
     */
    TaskService.prototype.error = /**
     * 报错提示
     * @param {?} error
     * @return {?}
     */
    function (error) {
        if (error && error.error && error.error.Message) {
            /** @type {?} */
            var message = error.error.Message;
            this.message.warning(message);
        }
    };
    /**
     * 启动流程接口
     * @param payload API所需的上下文参数
     */
    /**
     * 启动流程接口
     * @param {?} payload API所需的上下文参数
     * @return {?}
     */
    TaskService.prototype.startProcess = /**
     * 启动流程接口
     * @param {?} payload API所需的上下文参数
     * @return {?}
     */
    function (payload) {
        /** @type {?} */
        var url = "/api/runtime/wf/v1.0/processInstances/startProcess";
        return this.httpSvc.post(url, payload);
    };
    /**
     * 启动流程预解析
     * @param payload API所需的上下文参数
     */
    /**
     * 启动流程预解析
     * @param {?} payload API所需的上下文参数
     * @return {?}
     */
    TaskService.prototype.startProcessSimulate = /**
     * 启动流程预解析
     * @param {?} payload API所需的上下文参数
     * @return {?}
     */
    function (payload) {
        /** @type {?} */
        var url = "/api/runtime/wf/v1.0/processInstances/startProcess-simulation";
        return this.httpSvc.post(url, payload);
    };
    /**
     * 取消提交
     * @param param 参数
     */
    /**
     * 取消提交
     * @param {?} param 参数
     * @return {?}
     */
    TaskService.prototype.cancelSubmit = /**
     * 取消提交
     * @param {?} param 参数
     * @return {?}
     */
    function (param) {
        /** @type {?} */
        var url = "/api/runtime/wf/v1.0/processInstances/cancelSubmit";
        return this.httpSvc.post(url, param);
    };
    /**
     * @return {?}
     */
    TaskService.newId = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var S4 = function () { return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1); };
        return (S4() + S4() + '-' + S4() + '-' + S4() + '-' + S4() + '-' + S4() + S4() + S4());
    };
    /**
     * @return {?}
     */
    TaskService.prototype.getCommentList = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var url = "/api/runtime/wf/v1.0/commonComments";
        return this.httpSvc.get(url);
    };
    /**
     * @return {?}
     */
    TaskService.prototype.addComment = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var url = "/api/runtime/wf/v1.0/commonComments";
        return this.httpSvc.post(url, {});
    };
    /**
       * 获取任务中心配置项
       * @param code 配置项的Code
       */
    /**
     * 获取任务中心配置项
     * @param {?} code 配置项的Code
     * @param {?=} ownerType
     * @param {?=} ownerId
     * @return {?}
     */
    TaskService.prototype.getTaskCenterConfigByCode = /**
     * 获取任务中心配置项
     * @param {?} code 配置项的Code
     * @param {?=} ownerType
     * @param {?=} ownerId
     * @return {?}
     */
    function (code, ownerType, ownerId) {
        /** @type {?} */
        var url = "/api/runtime/task/v1.0/task-center-setting/code?code=" + code;
        ownerType && (url += "&ownerType=" + ownerType);
        ownerId && (url += "&ownerId=" + ownerId);
        return this.httpSvc.get(url);
    };
    /**
     * 添加用户级别自定义配置
     * @param code 配置项编号
     */
    /**
     * 添加用户级别自定义配置
     * @param {?} code 配置项编号
     * @param {?} currentValue
     * @return {?}
     */
    TaskService.prototype.addTaskCenterConfig = /**
     * 添加用户级别自定义配置
     * @param {?} code 配置项编号
     * @param {?} currentValue
     * @return {?}
     */
    function (code, currentValue) {
        /** @type {?} */
        var url = "/api/runtime/task/v1.0/task-center-setting/add?configCode=" + code + "&currentValue=" + currentValue;
        return this.httpSvc.post(url, null);
    };
    /**
     * 获取全部用户级别配置
     * @returns
     */
    /**
     * 获取全部用户级别配置
     * @return {?}
     */
    TaskService.prototype.getAllUserConfig = /**
     * 获取全部用户级别配置
     * @return {?}
     */
    function () {
        /** @type {?} */
        var url = "/api/runtime/task/v1.0/task-center-setting/all";
        return this.httpSvc.get(url);
    };
    /**
     * 真正上传附件
     * @param files
     */
    /**
     * 真正上传附件
     * @param {?} files
     * @return {?}
     */
    TaskService.prototype.uploadAttachment = /**
     * 真正上传附件
     * @param {?} files
     * @return {?}
     */
    function (files) {
        /** @type {?} */
        var url = "/api/runtime/dfs/v1.0/doc/commit";
        return this.httpSvc.put(url, files);
    };
    /**
     * 删除附件
     * @param fileDeleteEntity
     */
    /**
     * 删除附件
     * @param {?} fileDeleteEntity
     * @return {?}
     */
    TaskService.prototype.deleteAttachment = /**
     * 删除附件
     * @param {?} fileDeleteEntity
     * @return {?}
     */
    function (fileDeleteEntity) {
        /** @type {?} */
        var url = "/api/runtime/dfs/v1.0/doc";
        return this.httpSvc.delete(url, fileDeleteEntity);
    };
    /**
     * 签名图片，附件相关
     */
    /**
     * 签名图片，附件相关
     * @param {?} gspDocUploadEntity
     * @return {?}
     */
    TaskService.prototype.uploadSignature = /**
     * 签名图片，附件相关
     * @param {?} gspDocUploadEntity
     * @return {?}
     */
    function (gspDocUploadEntity) {
        /** @type {?} */
        var url = "/api/runtime/dfs/v1.0/doc";
        /** @type {?} */
        var header = this.httpSvc.setHeader({
            body: gspDocUploadEntity,
            responseType: 'text'
        });
        return this.httpSvc.request('Post', url, header);
    };
    /**
     * 创建内码
     */
    /**
     * 创建内码
     * @return {?}
     */
    TaskService.prototype.createNM = /**
     * 创建内码
     * @return {?}
     */
    function () {
        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
            /** @type {?} */
            var r = Math.random() * 16 | 0;
            /** @type {?} */
            var v = c === 'x' ? r : (r & 0x3 | 0x8);
            return v.toString(16);
        });
    };
    /**
     * 获取当前用户信息
     */
    /**
     * 获取当前用户信息
     * @return {?}
     */
    TaskService.prototype.getUserInfo = /**
     * 获取当前用户信息
     * @return {?}
     */
    function () {
        /** @type {?} */
        var url = "/api/runtime/sys/v1.0/userinfos?infoType=user";
        return this.httpSvc.get(url);
    };
    /**
     * 获取用户所有签名
     */
    /**
     * 获取用户所有签名
     * @param {?} userId
     * @return {?}
     */
    TaskService.prototype.getUserSign = /**
     * 获取用户所有签名
     * @param {?} userId
     * @return {?}
     */
    function (userId) {
        /** @type {?} */
        var url = "/api/runtime/dfs/v1.0/formdoc/fileinfo/form?formid=" + userId + "&rootid=taskcentersignature";
        return this.httpSvc.get(url);
    };
    /**
     * 解析文件类型，给出缩略图
     * @param attachmentInfo
     */
    /**
     * 解析文件类型，给出缩略图
     * @param {?} attachmentInfo
     * @return {?}
     */
    TaskService.prototype.createItem = /**
     * 解析文件类型，给出缩略图
     * @param {?} attachmentInfo
     * @return {?}
     */
    function (attachmentInfo) {
        /** @type {?} */
        var pos = attachmentInfo.fileName.lastIndexOf(".");
        /** @type {?} */
        var type = attachmentInfo.fileName.substring(pos + 1);
        type = (type == '' ? 'Default' : type.toLowerCase());
        /** @type {?} */
        var docLib = 'doc-docx-htm-html-js-pdf-ppt-pptx-rar-zip-txt-xls-xlsx';
        /** @type {?} */
        var videoLib = 'wav-aif-aiff-au-mp1-mp2-mp3-ra-rm-ram-mid-rmi';
        /** @type {?} */
        var audioLib = 'avi-rm-rmvb-mpeg-mpg-dat-mov-qt-asf-wm-mp4';
        /** @type {?} */
        var imgLib = 'webp-baibmp-dupcx-tif-gif-jpeg-tga-exif-fpx-svg-psd-cdr-pcd-dxf-ufo-eps-ai-png-hdri-raw-wmf-flic-emf-ico-jpg';
        if (docLib.indexOf(type) >= 0) {
            type = type.toLowerCase();
        }
        else if (videoLib.indexOf(type) >= 0) {
            type = 'video';
        }
        else if (audioLib.indexOf(type) >= 0) {
            type = 'audio';
        }
        else if (imgLib.indexOf(type) >= 0) {
            type = 'picture';
        }
        else {
            type = 'default';
        }
        return type;
    };
    /**
     * 注册主题，并获取当前主题唯一标识token
     * @param subjectCode 主题编码，非唯一标识，token为唯一标识
     * @param token 主题唯一标识。
     * @returns 主题的唯一标识。
     */
    /**
     * 注册主题，并获取当前主题唯一标识token
     * @param {?} subjectCode 主题编码，非唯一标识，token为唯一标识
     * @param {?} token 主题唯一标识。
     * @return {?} 主题的唯一标识。
     */
    TaskService.prototype.subjectRegister = /**
     * 注册主题，并获取当前主题唯一标识token
     * @param {?} subjectCode 主题编码，非唯一标识，token为唯一标识
     * @param {?} token 主题唯一标识。
     * @return {?} 主题的唯一标识。
     */
    function (subjectCode, token) {
        return ((/** @type {?} */ (window))).gspframeworkService.rtf.broadcast.subjectRegister(subjectCode, { funcId: token });
    };
    /**
     * 通过某个token发送消息
     * @param subjectToken 主题唯一的token标识
     * @param message 要发送的消息
     */
    /**
     * 通过某个token发送消息
     * @param {?} subjectToken 主题唯一的token标识
     * @param {?} message 要发送的消息
     * @return {?}
     */
    TaskService.prototype.subjectNotify = /**
     * 通过某个token发送消息
     * @param {?} subjectToken 主题唯一的token标识
     * @param {?} message 要发送的消息
     * @return {?}
     */
    function (subjectToken, message) {
        ((/** @type {?} */ (window))).gspframeworkService.rtf.broadcast.notify(subjectToken, message);
    };
    /**
     * 添加观察者，并监听消息
     * @param subjectToken 主题token
     * @param observerToken 当前监听主题的观察者唯一标识token。此处固定
     * @param handler 监听到消息后执行的动作
     */
    /**
     * 添加观察者，并监听消息
     * @param {?} subjectToken 主题token
     * @param {?} observerToken 当前监听主题的观察者唯一标识token。此处固定
     * @param {?} handler 监听到消息后执行的动作
     * @return {?}
     */
    TaskService.prototype.subjectResponse = /**
     * 添加观察者，并监听消息
     * @param {?} subjectToken 主题token
     * @param {?} observerToken 当前监听主题的观察者唯一标识token。此处固定
     * @param {?} handler 监听到消息后执行的动作
     * @return {?}
     */
    function (subjectToken, observerToken, handler) {
        ((/** @type {?} */ (window))).gspframeworkService.rtf.broadcast.response(subjectToken, observerToken, handler);
    };
    /**
     * 获取催办模拟结果
     * @param context 参数
     * @returns
     */
    /**
     * 获取催办模拟结果
     * @param {?} context 参数
     * @return {?}
     */
    TaskService.prototype.urgeHandleSimulate = /**
     * 获取催办模拟结果
     * @param {?} context 参数
     * @return {?}
     */
    function (context) {
        /** @type {?} */
        var url = "/api/runtime/wf/v1.0/processInstances/getUrgeHandleInfo";
        return this.httpSvc.post(url, context);
    };
    /**
     * 执行催办
     * @param context 参数
     * @returns
     */
    /**
     * 执行催办
     * @param {?} context 参数
     * @return {?}
     */
    TaskService.prototype.urgeHandle = /**
     * 执行催办
     * @param {?} context 参数
     * @return {?}
     */
    function (context) {
        /** @type {?} */
        var url = "/api/runtime/wf/v1.0/processInstances/urgeHandle";
        return this.httpSvc.post(url, context);
    };
    /**批量数字签名
     * @param context 参数
     */
    /**
     * 批量数字签名
     * @param {?} context 参数
     * @return {?}
     */
    TaskService.prototype.batchVerifySigned = /**
     * 批量数字签名
     * @param {?} context 参数
     * @return {?}
     */
    function (context) {
        /** @type {?} */
        var url = "/api/runtime/wf/v1.0/workItems/batchVerifySigned";
        return this.httpSvc.post(url, context);
    };
    /**
     * 获取用户帮助前端配置
     * @returns
     */
    /**
     * 获取用户帮助前端配置
     * @return {?}
     */
    TaskService.prototype.getWfUserHelpConfig = /**
     * 获取用户帮助前端配置
     * @return {?}
     */
    function () {
        /** @type {?} */
        var url = "/platform/runtime/wf/web/wf-user-help/config.json?v=" + new Date().getTime();
        return this.httpSvc.get(url);
    };
    /**
     * 获取加签配置
     */
    /**
     * 获取加签配置
     * @param {?} workItemId
     * @return {?}
     */
    TaskService.prototype.getAdhocConfig = /**
     * 获取加签配置
     * @param {?} workItemId
     * @return {?}
     */
    function (workItemId) {
        /** @type {?} */
        var url = "/api/runtime/wf/v1.0/workItems/" + workItemId + "/adhocConfig/AddSignBehind";
        return this.httpSvc.get(url);
    };
    /**
     * 加签提交
     */
    /**
     * 加签提交
     * @param {?} payload
     * @return {?}
     */
    TaskService.prototype.adhocAssignee = /**
     * 加签提交
     * @param {?} payload
     * @return {?}
     */
    function (payload) {
        /** @type {?} */
        var url = "/api/runtime/wf/v1.0/workItems/adhocAssignee";
        return this.httpSvc.post(url, payload);
    };
    /**
     * 取消征询
     */
    /**
     * 取消征询
     * @param {?} payload
     * @return {?}
     */
    TaskService.prototype.cancelConsult = /**
     * 取消征询
     * @param {?} payload
     * @return {?}
     */
    function (payload) {
        /** @type {?} */
        var url = "/api/runtime/wf/v1.0/workItems/cancelConsult";
        return this.httpSvc.post(url, payload);
    };
    TaskService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    TaskService.ctorParameters = function () { return [
        { type: HttpService },
        { type: MessagerService }
    ]; };
    return TaskService;
}());
export { TaskService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    TaskService.prototype.httpSvc;
    /**
     * @type {?}
     * @private
     */
    TaskService.prototype.message;
}
//# sourceMappingURL=data:application/json;base64,