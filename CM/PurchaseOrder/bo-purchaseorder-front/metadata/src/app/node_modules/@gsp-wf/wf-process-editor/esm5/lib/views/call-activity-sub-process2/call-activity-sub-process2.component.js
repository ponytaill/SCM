/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, HostBinding, Input, Output, EventEmitter, ViewChild, TemplateRef, ComponentFactoryResolver, Injector } from '@angular/core';
import { CallActivitySubProcess } from '../call-activity-sub-process/call-activity-sub-process.entity';
import { MessagerService } from '@farris/ui-messager';
import { ProcessDeUtil } from '../../domain/process-de-util';
import { HttpService } from '@ecp-caf/caf-common';
import { ProcessDesignerUIState } from '../../app/process-designer.uistate';
import { ExpressionService, InjectedType } from '@gsp-svc/expression';
import { FarrisRadioGroupComponent } from '@farris/ui-forms';
import { ProcessListHelpComponent } from '../../aif-process-list-help/components/process-list-help/process-list-help.component';
import { NotifyService } from '@farris/ui-notify';
import { BsModalService } from '@farris/ui-modal';
import { SubProcessType } from '../call-activity-sub-process/SubProcessType';
import { BillSourceType } from '../call-activity-sub-process/BillSourceType';
var CallActivitySubProcess2Component = /** @class */ (function () {
    function CallActivitySubProcess2Component(notify, modalService, message, util, http, designerState, expr, cfr, inj) {
        this.notify = notify;
        this.modalService = modalService;
        this.message = message;
        this.util = util;
        this.http = http;
        this.designerState = designerState;
        this.expr = expr;
        this.cfr = cfr;
        this.inj = inj;
        this.cls = 'farris-main-area flex-column';
        this.editorParams = {};
        this.closeModal = new EventEmitter();
        this.submitModal = new EventEmitter();
        this.modalConfig = {
            title: '子流程设置',
            width: 480,
            height: 400,
            showButtons: true
        };
        this.callActivitySubProcess = new CallActivitySubProcess();
        this.groupIcon = '<i class="f-icon f-icon-lookup"></i>';
        this.subProcessType = SubProcessType;
        this.billSourceType = BillSourceType;
        this.radioGroupProcessTypeData = [
            { value: "Specified", name: "指定子流程" },
            { value: "Dynamic", name: "动态子流程" },
        ];
        this.radioGroupBillSourceData = [
            { value: BillSourceType.InheritParent, name: '与父流程相同' },
            { value: BillSourceType.AutoCreation, name: '自动生成下游单据' },
            { value: BillSourceType.VariablesExpression, name: '变量表达式' },
        ];
    }
    Object.defineProperty(CallActivitySubProcess2Component.prototype, "value", {
        set: /**
         * @param {?} v
         * @return {?}
         */
        function (v) {
            if (v) {
                this.callActivitySubProcess = v;
                // 为子流程类型赋值
                if (this.callActivitySubProcess.calledElement == null || this.callActivitySubProcess.calledElement == "") {
                    if (this.callActivitySubProcess.calledBizDefKey == null || this.callActivitySubProcess.calledBizDefKey == "") {
                        this.callActivitySubProcess.subProcessType = SubProcessType.Specified;
                    }
                    else {
                        this.callActivitySubProcess.subProcessType = SubProcessType.Dynamic;
                    }
                }
                else {
                    this.callActivitySubProcess.subProcessType = SubProcessType.Specified;
                }
                // 为单据来源类型赋值
                if (this.callActivitySubProcess.inheritBizDataId === true) {
                    this.callActivitySubProcess.billSourceType = BillSourceType.InheritParent;
                }
                else if (this.callActivitySubProcess.inheritBizDataId === false && this.callActivitySubProcess.useAutoCreationData === false) {
                    this.callActivitySubProcess.billSourceType = BillSourceType.VariablesExpression;
                }
                else if (this.callActivitySubProcess.inheritBizDataId === false && this.callActivitySubProcess.useAutoCreationData === true) {
                    this.callActivitySubProcess.billSourceType = BillSourceType.AutoCreation;
                }
                this.getProcessDefKey(this.callActivitySubProcess.calledElement);
                this.getFlowForm(this.callActivitySubProcess.calledBizDefKey);
                this.getAifProcessName(this.callActivitySubProcess.aifProcessCode);
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    CallActivitySubProcess2Component.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @return {?}
     */
    CallActivitySubProcess2Component.prototype.clickOK = /**
     * @return {?}
     */
    function () {
        if (this.validator()) {
            /** @type {?} */
            var object = { value: this.callActivitySubProcess, parameters: null };
            this.submitModal.emit(object);
        }
    };
    /**
     * @return {?}
     */
    CallActivitySubProcess2Component.prototype.clickCancel = /**
     * @return {?}
     */
    function () {
        this.closeModal.emit();
    };
    /**
     * @param {?} args
     * @return {?}
     */
    CallActivitySubProcess2Component.prototype.processConfirm = /**
     * @param {?} args
     * @return {?}
     */
    function (args) {
        if (args) {
            this.callActivitySubProcess.calledElement = args.id;
            this.callActivitySubProcess.calledElementName = args.name;
        }
    };
    /**
     * @param {?} val
     * @return {?}
     */
    CallActivitySubProcess2Component.prototype.processTypeChange = /**
     * @param {?} val
     * @return {?}
     */
    function (val) {
        console.log(val);
        if (val == SubProcessType.Specified) {
            this.callActivitySubProcess.calledBizDefKey = null;
            this.callActivitySubProcess.calledBizDefName = null;
        }
        else if (val == SubProcessType.Dynamic) {
            this.callActivitySubProcess.calledElement = null;
            this.callActivitySubProcess.calledElementName = null;
        }
    };
    /**
     * @param {?} val
     * @return {?}
     */
    CallActivitySubProcess2Component.prototype.billSourceChange = /**
     * @param {?} val
     * @return {?}
     */
    function (val) {
        console.log(val);
        if (val == BillSourceType.InheritParent) {
            this.callActivitySubProcess.inheritBizDataId = true;
            this.callActivitySubProcess.useAutoCreationData = false;
        }
        else if (val == BillSourceType.AutoCreation) {
            this.callActivitySubProcess.inheritBizDataId = false;
            this.callActivitySubProcess.useAutoCreationData = true;
        }
        else if (val == BillSourceType.VariablesExpression) {
            this.callActivitySubProcess.inheritBizDataId = false;
            this.callActivitySubProcess.useAutoCreationData = false;
        }
    };
    /**
     * @return {?}
     */
    CallActivitySubProcess2Component.prototype.selectProcess = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.openProcHelp().subscribe((/**
         * @param {?} rte
         * @return {?}
         */
        function (rte) {
            if (rte == null) {
                _this.notify.warning("请选中一条生单流程");
                return;
            }
            _this.callActivitySubProcess.aifProcessCode = rte.code;
            _this.callActivitySubProcess.aifProcessName = rte.name;
        }));
    };
    /**
     * @return {?}
     */
    CallActivitySubProcess2Component.prototype.clearProcess = /**
     * @return {?}
     */
    function () {
        this.callActivitySubProcess.aifProcessCode = null;
        this.callActivitySubProcess.aifProcessName = null;
    };
    /**
     * @return {?}
     */
    CallActivitySubProcess2Component.prototype.openProcHelp = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var cmpF = this.cfr.resolveComponentFactory(ProcessListHelpComponent);
        /** @type {?} */
        var cmpR = cmpF.create(this.inj, []);
        cmpR.instance.editorParams = this.editorParams;
        /** @type {?} */
        var modalRef = this.modalService.show(cmpR, {
            title: "生单流程",
            width: 1250,
            height: 500,
            resizable: true,
            buttons: [
                {
                    text: "确定",
                    cls: "btn btn-primary",
                    handle: (/**
                     * @param {?} evt
                     * @return {?}
                     */
                    function (evt) {
                        cmpR.instance.clickOk(evt);
                        modalRef.close();
                    })
                },
                {
                    text: "取消",
                    cls: "btn btn-secondary",
                    handle: (/**
                     * @param {?} evt
                     * @return {?}
                     */
                    function (evt) {
                        cmpR.instance.clickCancel(evt);
                        modalRef.close();
                    })
                }
            ],
            closed: (/**
             * @return {?}
             */
            function () {
                modalRef.dialog.destroy();
            })
        });
        cmpR.instance.modalRef = modalRef;
        return cmpR.instance.procEmitter.asObservable();
    };
    /**
     * @param {?} args
     * @return {?}
     */
    CallActivitySubProcess2Component.prototype.clearProcessDef = /**
     * @param {?} args
     * @return {?}
     */
    function (args) {
        this.callActivitySubProcess.calledElement = '';
        this.callActivitySubProcess.calledElementName = '';
    };
    /**
     * @param {?} args
     * @return {?}
     */
    CallActivitySubProcess2Component.prototype.flowFormConfirm = /**
     * @param {?} args
     * @return {?}
     */
    function (args) {
        if (args) {
            this.callActivitySubProcess.calledBizDefKey = args.id;
            this.callActivitySubProcess.calledBizDefName = args.name;
        }
    };
    /**
     * @param {?} args
     * @return {?}
     */
    CallActivitySubProcess2Component.prototype.clearFlowForm = /**
     * @param {?} args
     * @return {?}
     */
    function (args) {
        this.callActivitySubProcess.calledBizDefKey = '';
        this.callActivitySubProcess.calledBizDefName = '';
    };
    /**
     * @return {?}
     */
    CallActivitySubProcess2Component.prototype.setBizDataId = /**
     * @return {?}
     */
    function () {
        this.showExprHelp();
    };
    /**
     * @private
     * @return {?}
     */
    CallActivitySubProcess2Component.prototype.showExprHelp = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        var e_1, _a, e_2, _b, e_3, _c, e_4, _d, e_5, _e, e_6, _f;
        if (this.designerState.schemas.length > 0) {
            try {
                for (var _g = tslib_1.__values(this.designerState.schemas), _h = _g.next(); !_h.done; _h = _g.next()) {
                    var schema = _h.value;
                    this.expr.addSchema('Schema', schema);
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_h && !_h.done && (_a = _g.return)) _a.call(_g);
                }
                finally { if (e_1) throw e_1.error; }
            }
            if (this.designerState.schemas[0].entityTypes && this.designerState.schemas[0].entityTypes.length > 0) {
                /** @type {?} */
                var entityType = this.designerState.schemas[0].entityTypes[0];
                this.expr.addInjectedEntity(entityType.name, 'Schema', entityType.name, InjectedType.EntityType);
            }
        }
        /** @type {?} */
        var context = new Array();
        if (this.designerState.procInstContext.length > 0) {
            try {
                for (var _j = tslib_1.__values(this.designerState.procInstContext), _k = _j.next(); !_k.done; _k = _j.next()) {
                    var variable = _k.value;
                    context.push(variable);
                    // this.expr.addContext(variable);
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (_k && !_k.done && (_b = _j.return)) _b.call(_j);
                }
                finally { if (e_2) throw e_2.error; }
            }
        }
        if (this.designerState.formalParameterContext.length > 0) {
            var _loop_1 = function (variable) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) { return c.key === variable.key; }))) {
                    context.push(variable);
                }
            };
            try {
                for (var _l = tslib_1.__values(this.designerState.formalParameterContext), _m = _l.next(); !_m.done; _m = _l.next()) {
                    var variable = _m.value;
                    _loop_1(variable);
                }
            }
            catch (e_3_1) { e_3 = { error: e_3_1 }; }
            finally {
                try {
                    if (_m && !_m.done && (_c = _l.return)) _c.call(_l);
                }
                finally { if (e_3) throw e_3.error; }
            }
        }
        if (this.designerState.participantContext.length > 0) {
            var _loop_2 = function (variable) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) { return c.key === variable.key; }))) {
                    context.push(variable);
                }
            };
            try {
                for (var _o = tslib_1.__values(this.designerState.participantContext), _p = _o.next(); !_p.done; _p = _o.next()) {
                    var variable = _p.value;
                    _loop_2(variable);
                }
            }
            catch (e_4_1) { e_4 = { error: e_4_1 }; }
            finally {
                try {
                    if (_p && !_p.done && (_d = _o.return)) _d.call(_o);
                }
                finally { if (e_4) throw e_4.error; }
            }
        }
        if (this.designerState.processVariableContext.length > 0) {
            var _loop_3 = function (variable) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) { return c.key === variable.key; }))) {
                    context.push(variable);
                }
            };
            try {
                for (var _q = tslib_1.__values(this.designerState.processVariableContext), _r = _q.next(); !_r.done; _r = _q.next()) {
                    var variable = _r.value;
                    _loop_3(variable);
                }
            }
            catch (e_5_1) { e_5 = { error: e_5_1 }; }
            finally {
                try {
                    if (_r && !_r.done && (_e = _q.return)) _e.call(_q);
                }
                finally { if (e_5) throw e_5.error; }
            }
        }
        if (context.length > 0) {
            try {
                for (var context_1 = tslib_1.__values(context), context_1_1 = context_1.next(); !context_1_1.done; context_1_1 = context_1.next()) {
                    var v = context_1_1.value;
                    this.expr.addContext(v);
                }
            }
            catch (e_6_1) { e_6 = { error: e_6_1 }; }
            finally {
                try {
                    if (context_1_1 && !context_1_1.done && (_f = context_1.return)) _f.call(context_1);
                }
                finally { if (e_6) throw e_6.error; }
            }
        }
        this.expr.addExpressionText(this.callActivitySubProcess.bizDataId);
        this.expr.buildExpression().then((/**
         * @param {?} expressioninfo
         * @return {?}
         */
        function (expressioninfo) {
            _this.callActivitySubProcess.bizDataId = expressioninfo;
        }));
    };
    /**
     * @param {?} bool
     * @return {?}
     */
    CallActivitySubProcess2Component.prototype.valueChange = /**
     * @param {?} bool
     * @return {?}
     */
    function (bool) {
        if (bool) {
            this.callActivitySubProcess.bizDataId = null;
        }
    };
    /**
     * @private
     * @return {?}
     */
    CallActivitySubProcess2Component.prototype.validator = /**
     * @private
     * @return {?}
     */
    function () {
        if (!this.callActivitySubProcess.inheritBizDataId && !this.callActivitySubProcess.useAutoCreationData && !this.callActivitySubProcess.bizDataId) {
            this.message.warning('当子流程与父流程单据不一致时，请设置子流程单据内码！');
            return false;
        }
        return true;
    };
    /**
     * @private
     * @param {?} key
     * @return {?}
     */
    CallActivitySubProcess2Component.prototype.getProcessDefKey = /**
     * @private
     * @param {?} key
     * @return {?}
     */
    function (key) {
        var _this = this;
        /** @type {?} */
        var url = this.util.getProcDefKeyWebApi();
        if (key) {
            url += "/" + key;
            this.http.get(url).subscribe((/**
             * @param {?} re
             * @return {?}
             */
            function (re) {
                _this.callActivitySubProcess.calledElementName = re.name;
            }));
        }
    };
    /**
     * @private
     * @param {?} id
     * @return {?}
     */
    CallActivitySubProcess2Component.prototype.getFlowForm = /**
     * @private
     * @param {?} id
     * @return {?}
     */
    function (id) {
        var _this = this;
        /** @type {?} */
        var url = this.util.getFlowFormWebApi();
        if (id) {
            url += "/" + id;
            this.http.get(url).subscribe((/**
             * @param {?} re
             * @return {?}
             */
            function (re) {
                _this.callActivitySubProcess.calledBizDefName = re.name;
            }));
        }
    };
    /**
     * @param {?} code
     * @return {?}
     */
    CallActivitySubProcess2Component.prototype.getAifProcessName = /**
     * @param {?} code
     * @return {?}
     */
    function (code) {
        var _this = this;
        if (code != null && code != "") {
            this.http.request("GET", "/api/runtime/aif/v1.0/rtbillcreationprocess/getname/" + code, { responseType: 'text' }).subscribe((/**
             * @param {?} res
             * @return {?}
             */
            function (res) {
                _this.callActivitySubProcess.aifProcessName = res;
            }), (/**
             * @param {?} err
             * @return {?}
             */
            function (err) {
                setTimeout((/**
                 * @return {?}
                 */
                function () {
                    //todo 确定异常结构, 目前采用兼容取值方式
                    _this.message.error(err.error == null ? err.message : (err.error.Message || err.error.message || err.message));
                }), 300);
                throw err;
            }));
        }
    };
    CallActivitySubProcess2Component.decorators = [
        { type: Component, args: [{
                    selector: 'lib-call-activity-sub-process2',
                    template: "<div class=\"f-page\">\r\n  <div class=\"f-utils-fill-flex-column farris-split-section m-2 h-100\">\r\n    <section>\r\n      <div class=\"f-section-header pt-2 mx-2\">\r\n        <div class=\"f-title\">\r\n          <h4 class=\"f-title-text\">\u9009\u62E9\u5B50\u6D41\u7A0B</h4>\r\n        </div>\r\n      </div>\r\n      <div class=\"f-utils-fill-flex-column h-100\">\r\n        <div class=\"h-100\">\r\n          <div class=\"farris-form form-inline farris-form-inline\">\r\n            <div class=\"farris-group-wrap mt-1\">\r\n              <div class=\"form-group farris-form-group\">\r\n                <label class=\"col-form-label\">\r\n                  <span class=\"farris-label-text\">\u5B50\u6D41\u7A0B\u7C7B\u578B</span>\r\n                </label>\r\n                <div class=\"farris-input-wrap ml-1\">\r\n                  <!-- <farris-combo-list #comboProcessType\r\n                    [(ngModel)]=\"callActivitySubProcess&&callActivitySubProcess.subProcessType\"\r\n                    [idField]=\"comboProcessTypeIdField\" [valueField]=\"comboProcessTypeValueField\"\r\n                    [textField]=\"comboProcessTypeTextField\" [data]=\"comboProcessTypeData\"\r\n                    (valueChange)=\"processTypeChange($event)\" [enableClear]=\"false\" [editable]=\"false\">\r\n                  </farris-combo-list> -->\r\n                  <farris-radiogroup #radioGroupProcessType\r\n                    [(ngModel)]=\"callActivitySubProcess&&callActivitySubProcess.subProcessType\" [horizontal]=\"false\"\r\n                    [data]=\"radioGroupProcessTypeData\" (changeValue)=\"processTypeChange($event)\">\r\n                  </farris-radiogroup>\r\n                  <div class=\"farris-feedback valid-feedback\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"farris-group-wrap mt-1\" *ngIf=\"callActivitySubProcess.subProcessType==subProcessType.Dynamic\">\r\n              <div class=\"form-group farris-form-group\">\r\n                <label class=\"col-form-label\">\r\n                  <span class=\"farris-label-text\">\u6D41\u7A0B\u5206\u7C7B</span>\r\n                </label>\r\n                <div class=\"farris-input-wrap ml-1\">\r\n                  <wf-bizprocess-lookup [title]=\"'\u6D41\u7A0B\u5206\u7C7B'\" [sourceType]=\"'flowform'\"\r\n                    [displayTxt]=\"callActivitySubProcess.calledBizDefName\" (afterConfirm)=\"flowFormConfirm($event)\"\r\n                    (clear)=\"clearFlowForm($event)\">\r\n                  </wf-bizprocess-lookup>\r\n                  <div class=\"farris-feedback valid-feedback\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"farris-group-wrap mt-1\" *ngIf=\"callActivitySubProcess.subProcessType==subProcessType.Specified\">\r\n              <div class=\"form-group farris-form-group\">\r\n                <label class=\"col-form-label\">\r\n                  <span class=\"farris-label-text\">\u6D41\u7A0B\u5B9A\u4E49</span>\r\n                </label>\r\n                <div class=\"farris-input-wrap ml-1\">\r\n                  <wf-bizprocess-lookup [title]=\"'\u6D41\u7A0B\u5B9A\u4E49'\" [displayTxt]=\"callActivitySubProcess.calledElementName\"\r\n                    (afterConfirm)=\"processConfirm($event)\" (clear)=\"clearProcessDef($event)\">\r\n                  </wf-bizprocess-lookup>\r\n                  <div class=\"farris-feedback valid-feedback\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n    <section class=\"\">\r\n      <div class=\"f-section-header pt-2 mx-2\">\r\n        <div class=\"f-title\">\r\n          <h4 class=\"f-title-text\">\u5355\u636E\u6765\u6E90</h4>\r\n        </div>\r\n      </div>\r\n      <div class=\"f-utils-fill-flex-column h-100\">\r\n        <div class=\"h-100\">\r\n          <div class=\"farris-form form-inline farris-form-inline\">\r\n\r\n            <div class=\"farris-group-wrap mt-1\">\r\n              <div class=\"form-group farris-form-group\">\r\n                <label class=\"col-form-label\">\r\n                  <span class=\"farris-label-text\">\u5355\u636E\u6765\u6E90</span>\r\n                </label>\r\n                <div class=\"farris-input-wrap ml-1\">\r\n                  <farris-radiogroup #radioGroupBillSource\r\n                    [(ngModel)]=\"callActivitySubProcess&&callActivitySubProcess.billSourceType\" [horizontal]=\"false\"\r\n                    [data]=\"radioGroupBillSourceData\" (changeValue)=\"billSourceChange($event)\">\r\n                  </farris-radiogroup>\r\n                  <!-- <farris-combo-list #comboBillSource\r\n                    [(ngModel)]=\"callActivitySubProcess&&callActivitySubProcess.billSourceType\"\r\n                    [idField]=\"comboBillSourceIdField\" [valueField]=\"comboBillSourceValueField\"\r\n                    [textField]=\"comboBillSourceTextField\" [data]=\"comboBillSourceData\"\r\n                    (valueChange)=\"billSourceChange($event)\" [enableClear]=\"false\" [editable]=\"false\">\r\n                  </farris-combo-list> -->\r\n                </div>\r\n                <div class=\"farris-feedback valid-feedback\"></div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"farris-group-wrap mt-1\"\r\n              *ngIf=\"callActivitySubProcess.billSourceType==billSourceType.AutoCreation\">\r\n              <div class=\"form-group farris-form-group\">\r\n                <label class=\"col-form-label\">\r\n                  <span class=\"farris-label-text\">\u751F\u5355\u6D41\u7A0B</span>\r\n                </label>\r\n                <div class=\"farris-input-wrap ml-1\">\r\n                  <input-group [ngModel]=\"callActivitySubProcess&&callActivitySubProcess.aifProcessName\"\r\n                    [editable]=\"false\" (clickHandle)=\"selectProcess()\" [groupText]=\"groupIcon\" (clear)=\"clearProcess()\">\r\n                  </input-group>\r\n                  <div class=\"farris-feedback valid-feedback\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"farris-group-wrap mt-1\"\r\n              *ngIf=\"callActivitySubProcess.billSourceType==billSourceType.VariablesExpression\">\r\n              <div class=\"form-group farris-form-group\">\r\n                <label class=\"col-form-label\">\r\n                  <span class=\"farris-label-text\">\u5355\u636E\u5185\u7801</span>\r\n                </label>\r\n                <div class=\"farris-input-wrap ml-1\">\r\n                  <input-group [ngModel]=\"callActivitySubProcess.bizDataId\" [enableClear]=\"false\"\r\n                    [ngModel]=\"callActivitySubProcess.bizDataId\" name=\"bizDataId\" [editable]=\"false\"\r\n                    (clickHandle)=\"setBizDataId()\" [groupText]=\"groupIcon\">\r\n                  </input-group>\r\n                  <div class=\"farris-feedback valid-feedback\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #iconSelectFooter>\r\n  <button type=\"button\" class=\"btn btn-primary btn-sm mx-2\" (click)=\"clickOK()\">\u786E\u5B9A</button>\r\n  <button type=\"button\" class=\"btn btn-secondary btn-sm mx-2\" (click)=\"clickCancel()\">\u53D6\u6D88</button>\r\n</ng-template>"
                }] }
    ];
    /** @nocollapse */
    CallActivitySubProcess2Component.ctorParameters = function () { return [
        { type: NotifyService },
        { type: BsModalService },
        { type: MessagerService },
        { type: ProcessDeUtil },
        { type: HttpService },
        { type: ProcessDesignerUIState },
        { type: ExpressionService },
        { type: ComponentFactoryResolver },
        { type: Injector }
    ]; };
    CallActivitySubProcess2Component.propDecorators = {
        cls: [{ type: HostBinding, args: ['class',] }],
        editorParams: [{ type: Input }],
        value: [{ type: Input }],
        closeModal: [{ type: Output }],
        submitModal: [{ type: Output }],
        modalFooter: [{ type: ViewChild, args: ['iconSelectFooter',] }],
        radioGroupProcessType: [{ type: ViewChild, args: ["radioGroupProcessType",] }],
        radioGroupBillSource: [{ type: ViewChild, args: ["radioGroupBillSource",] }]
    };
    return CallActivitySubProcess2Component;
}());
export { CallActivitySubProcess2Component };
if (false) {
    /** @type {?} */
    CallActivitySubProcess2Component.prototype.cls;
    /** @type {?} */
    CallActivitySubProcess2Component.prototype.editorParams;
    /** @type {?} */
    CallActivitySubProcess2Component.prototype.closeModal;
    /** @type {?} */
    CallActivitySubProcess2Component.prototype.submitModal;
    /** @type {?} */
    CallActivitySubProcess2Component.prototype.modalFooter;
    /** @type {?} */
    CallActivitySubProcess2Component.prototype.modalConfig;
    /** @type {?} */
    CallActivitySubProcess2Component.prototype.callActivitySubProcess;
    /** @type {?} */
    CallActivitySubProcess2Component.prototype.groupIcon;
    /** @type {?} */
    CallActivitySubProcess2Component.prototype.subProcessType;
    /** @type {?} */
    CallActivitySubProcess2Component.prototype.billSourceType;
    /** @type {?} */
    CallActivitySubProcess2Component.prototype.radioGroupProcessType;
    /** @type {?} */
    CallActivitySubProcess2Component.prototype.radioGroupProcessTypeData;
    /** @type {?} */
    CallActivitySubProcess2Component.prototype.radioGroupBillSource;
    /** @type {?} */
    CallActivitySubProcess2Component.prototype.radioGroupBillSourceData;
    /**
     * @type {?}
     * @private
     */
    CallActivitySubProcess2Component.prototype.notify;
    /**
     * @type {?}
     * @private
     */
    CallActivitySubProcess2Component.prototype.modalService;
    /**
     * @type {?}
     * @private
     */
    CallActivitySubProcess2Component.prototype.message;
    /**
     * @type {?}
     * @private
     */
    CallActivitySubProcess2Component.prototype.util;
    /**
     * @type {?}
     * @private
     */
    CallActivitySubProcess2Component.prototype.http;
    /**
     * @type {?}
     * @private
     */
    CallActivitySubProcess2Component.prototype.designerState;
    /**
     * @type {?}
     * @private
     */
    CallActivitySubProcess2Component.prototype.expr;
    /**
     * @type {?}
     * @private
     */
    CallActivitySubProcess2Component.prototype.cfr;
    /**
     * @type {?}
     * @private
     */
    CallActivitySubProcess2Component.prototype.inj;
}
var CallActivitySubProcess2Converter = /** @class */ (function () {
    function CallActivitySubProcess2Converter() {
    }
    /**
     * @param {?} data
     * @return {?}
     */
    CallActivitySubProcess2Converter.prototype.convertTo = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        if (data && (data.calledBizDefKey || data.calledElement)) {
            return '（已设置）';
        }
        return '（未设置）';
    };
    return CallActivitySubProcess2Converter;
}());
export { CallActivitySubProcess2Converter };
//# sourceMappingURL=data:application/json;base64,