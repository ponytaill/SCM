/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output, TemplateRef, ViewChild } from '@angular/core';
import { AutoHandle } from "../time-limit-control.entity";
import { MessagerService } from '@farris/ui-messager';
import { ProcessDesignerUIState } from '../../../app/process-designer.uistate';
export class AutoHandleOperationComponent {
    /**
     * @param {?} message
     * @param {?} uiState
     */
    constructor(message, uiState) {
        this.message = message;
        this.uiState = uiState;
        this.placeholder = '';
        this.operation = new AutoHandle('Pass');
        this.submitEmitter = new EventEmitter();
        this.closeEmitter = new EventEmitter();
        this.autoHandleType = [
        // { value: 'autoPass', text: '自动通过' },
        // { value: 'autoBack', text: '自动驳回' }
        ];
        for (const item of this.uiState.propertyData.ApprovalItems) {
            this.autoHandleType.push({ value: item.Value, text: item.Text });
        }
    }
    /**
     * @param {?} info
     * @return {?}
     */
    set value(info) {
        this.operation = Object.assign({}, info);
        if (this.operation.autoHandleType === undefined) {
            /** @type {?} */
            const autoHandle = new AutoHandle(this.autoHandleType[0].value);
            this.operation.autoHandleType = autoHandle.autoHandleType;
            this.operation.message = autoHandle.message;
        }
    }
    /**
     * @return {?}
     */
    get value() {
        return this.operation;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @return {?}
     */
    clickOK() {
        if (this.validator()) {
            this.submitEmitter.emit(this.operation);
        }
    }
    /**
     * @return {?}
     */
    clickCancel() {
        this.closeEmitter.emit();
    }
    /**
     * @private
     * @return {?}
     */
    validator() {
        if (!this.operation.message) {
            this.message.info('自动办理意见不允许为空！');
            return false;
        }
        if (!this.operation.autoHandleType) {
            this.message.info('自动办理不允许为空！');
            return false;
        }
        return true;
    }
}
AutoHandleOperationComponent.decorators = [
    { type: Component, args: [{
                selector: 'lib-auto-handle-operation',
                template: "<div class=\"f-page\">\r\n  <div class=\"f-utils-fill-flex-column farris-split-section m-2 h-100\">\r\n    <section class=\"f-utils-fill-flex-column h-100\">\r\n      <div class=\"f-section-header pt-2 mx-2\">\r\n        <div class=\"f-title\">\r\n          <h4 class=\"f-title-text\">\u81EA\u52A8\u529E\u7406\u8BBE\u7F6E</h4>\r\n        </div>\r\n      </div>\r\n      <div class=\"f-utils-fill-flex-column h-100\">\r\n        <perfect-scrollbar [config]=\"{}\">\r\n          <form class=\"h-100\">\r\n            <div class=\"farris-form form-inline farris-form-inline\">\r\n              <div class=\"farris-group-wrap\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\">\r\n                    <span class=\"farris-label-info text-danger\">*</span>\r\n                    <span class=\"farris-label-text\">\u81EA\u52A8\u529E\u7406\u65B9\u5F0F</span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap ml-1\">\r\n                    <farris-combo-list [(ngModel)]=\"operation.autoHandleType\" name=\"cycleTimeUnit\" [idField]=\"'value'\" [textField]=\"'text'\"\r\n                                       [valueField]=\"'value'\" [data]=\"autoHandleType\" [panelHeight]=\"'auto'\"\r\n                                       [editable]=\"false\" [enableClear]=\"false\">\r\n                    </farris-combo-list>\r\n                    <div class=\"farris-feedback valid-feedback\"></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"farris-group-wrap my-3\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\">\r\n                    <span class=\"farris-label-info text-danger\">*</span>\r\n                    <span class=\"farris-label-text\">\u81EA\u52A8\u529E\u7406\u610F\u89C1</span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap ml-1\">\r\n                    <textarea class=\"form-control\" type=\"text\" value=\"message\" [(ngModel)]=\"operation.message\" name=\"message\"\r\n                              [placeholder]=\"placeholder\" style=\"height: 100px;\"></textarea>\r\n                    <div class=\"farris-feedback valid-feedback\"></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </perfect-scrollbar>\r\n      </div>\r\n    </section>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #footer>\r\n  <button type=\"button\" class=\"btn btn-primary btn-sm mx-2\" (click)=\"clickOK()\">\u786E\u5B9A</button>\r\n  <button type=\"button\" class=\"btn btn-secondary btn-sm mx-2\" (click)=\"clickCancel()\">\u53D6\u6D88</button>\r\n</ng-template>\r\n",
                styles: [""]
            }] }
];
/** @nocollapse */
AutoHandleOperationComponent.ctorParameters = () => [
    { type: MessagerService },
    { type: ProcessDesignerUIState }
];
AutoHandleOperationComponent.propDecorators = {
    footer: [{ type: ViewChild, args: ['footer',] }],
    value: [{ type: Input }],
    submitEmitter: [{ type: Output }],
    closeEmitter: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    AutoHandleOperationComponent.prototype.footer;
    /** @type {?} */
    AutoHandleOperationComponent.prototype.placeholder;
    /** @type {?} */
    AutoHandleOperationComponent.prototype.operation;
    /** @type {?} */
    AutoHandleOperationComponent.prototype.submitEmitter;
    /** @type {?} */
    AutoHandleOperationComponent.prototype.closeEmitter;
    /** @type {?} */
    AutoHandleOperationComponent.prototype.autoHandleType;
    /**
     * @type {?}
     * @private
     */
    AutoHandleOperationComponent.prototype.message;
    /** @type {?} */
    AutoHandleOperationComponent.prototype.uiState;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0by1oYW5kbGUtb3BlcmF0aW9uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc3Atd2Yvd2YtcHJvY2Vzcy1lZGl0b3IvIiwic291cmNlcyI6WyJsaWIvdmlld3MvdGltZS1saW1pdC1jb250cm9sL2F1dG8taGFuZGxlLW9wZXJhdGlvbi9hdXRvLWhhbmRsZS1vcGVyYXRpb24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQVUsTUFBTSxFQUFFLFdBQVcsRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDdkcsT0FBTyxFQUFFLFVBQVUsRUFBbUIsTUFBTSw4QkFBOEIsQ0FBQztBQUMzRSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDdEQsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sdUNBQXVDLENBQUM7QUFPL0UsTUFBTSxPQUFPLDRCQUE0Qjs7Ozs7SUEyQnZDLFlBQ1UsT0FBd0IsRUFDekIsT0FBK0I7UUFEOUIsWUFBTyxHQUFQLE9BQU8sQ0FBaUI7UUFDekIsWUFBTyxHQUFQLE9BQU8sQ0FBd0I7UUFaeEMsZ0JBQVcsR0FBRyxFQUFFLENBQUM7UUFDakIsY0FBUyxHQUFlLElBQUksVUFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3JDLGtCQUFhLEdBQUcsSUFBSSxZQUFZLEVBQW1CLENBQUM7UUFDcEQsaUJBQVksR0FBRyxJQUFJLFlBQVksRUFBTyxDQUFDO1FBRWpELG1CQUFjLEdBQUc7UUFDZix1Q0FBdUM7UUFDdkMsc0NBQXNDO1NBQ3ZDLENBQUM7UUFNQSxLQUFJLE1BQU0sSUFBSSxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLGFBQWEsRUFBRTtZQUN6RCxJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxFQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsS0FBSyxFQUFDLElBQUksRUFBRSxJQUFJLENBQUMsSUFBSSxFQUFDLENBQUMsQ0FBQztTQUMvRDtJQUNILENBQUM7Ozs7O0lBL0JELElBQ0ksS0FBSyxDQUFDLElBQWdCO1FBQ3hCLElBQUksQ0FBQyxTQUFTLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDekMsSUFBSSxJQUFJLENBQUMsU0FBUyxDQUFDLGNBQWMsS0FBSyxTQUFTLEVBQUU7O2tCQUN6QyxVQUFVLEdBQUcsSUFBSSxVQUFVLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7WUFDL0QsSUFBSSxDQUFDLFNBQVMsQ0FBQyxjQUFjLEdBQUcsVUFBVSxDQUFDLGNBQWMsQ0FBQztZQUMxRCxJQUFJLENBQUMsU0FBUyxDQUFDLE9BQU8sR0FBRyxVQUFVLENBQUMsT0FBTyxDQUFDO1NBQzdDO0lBQ0gsQ0FBQzs7OztJQUVELElBQUksS0FBSztRQUNQLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQztJQUN4QixDQUFDOzs7O0lBcUJELFFBQVE7SUFDUixDQUFDOzs7O0lBRUQsT0FBTztRQUNMLElBQUksSUFBSSxDQUFDLFNBQVMsRUFBRSxFQUFFO1lBQ3BCLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztTQUN6QztJQUNILENBQUM7Ozs7SUFFRCxXQUFXO1FBQ1QsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUMzQixDQUFDOzs7OztJQUVPLFNBQVM7UUFDZixJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxPQUFPLEVBQUU7WUFDM0IsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUM7WUFDbEMsT0FBTyxLQUFLLENBQUM7U0FDZDtRQUNELElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLGNBQWMsRUFBRTtZQUNsQyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztZQUNoQyxPQUFPLEtBQUssQ0FBQztTQUNkO1FBQ0QsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDOzs7WUFoRUYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSwyQkFBMkI7Z0JBQ3JDLHd3RkFBcUQ7O2FBRXREOzs7O1lBUFEsZUFBZTtZQUNmLHNCQUFzQjs7O3FCQVM1QixTQUFTLFNBQUMsUUFBUTtvQkFDbEIsS0FBSzs0QkFnQkwsTUFBTTsyQkFDTixNQUFNOzs7O0lBbEJQLDhDQUE4Qzs7SUFlOUMsbURBQWlCOztJQUNqQixpREFBK0M7O0lBQy9DLHFEQUE4RDs7SUFDOUQsb0RBQWlEOztJQUVqRCxzREFHRTs7Ozs7SUFHQSwrQ0FBZ0M7O0lBQ2hDLCtDQUFzQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT25Jbml0LCBPdXRwdXQsIFRlbXBsYXRlUmVmLCBWaWV3Q2hpbGQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQXV0b0hhbmRsZSwgRXhwaXJlT3BlcmF0aW9uIH0gZnJvbSBcIi4uL3RpbWUtbGltaXQtY29udHJvbC5lbnRpdHlcIjtcclxuaW1wb3J0IHsgTWVzc2FnZXJTZXJ2aWNlIH0gZnJvbSAnQGZhcnJpcy91aS1tZXNzYWdlcic7XHJcbmltcG9ydCB7IFByb2Nlc3NEZXNpZ25lclVJU3RhdGUgfSBmcm9tICcuLi8uLi8uLi9hcHAvcHJvY2Vzcy1kZXNpZ25lci51aXN0YXRlJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnbGliLWF1dG8taGFuZGxlLW9wZXJhdGlvbicsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL2F1dG8taGFuZGxlLW9wZXJhdGlvbi5jb21wb25lbnQuaHRtbCcsXHJcbiAgc3R5bGVVcmxzOiBbJy4vYXV0by1oYW5kbGUtb3BlcmF0aW9uLmNvbXBvbmVudC5jc3MnXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgQXV0b0hhbmRsZU9wZXJhdGlvbkNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcblxyXG4gIEBWaWV3Q2hpbGQoJ2Zvb3RlcicpIGZvb3RlcjogVGVtcGxhdGVSZWY8YW55PjtcclxuICBASW5wdXQoKVxyXG4gIHNldCB2YWx1ZShpbmZvOiBBdXRvSGFuZGxlKSB7XHJcbiAgICB0aGlzLm9wZXJhdGlvbiA9IE9iamVjdC5hc3NpZ24oe30sIGluZm8pO1xyXG4gICAgaWYgKHRoaXMub3BlcmF0aW9uLmF1dG9IYW5kbGVUeXBlID09PSB1bmRlZmluZWQpIHtcclxuICAgICAgY29uc3QgYXV0b0hhbmRsZSA9IG5ldyBBdXRvSGFuZGxlKHRoaXMuYXV0b0hhbmRsZVR5cGVbMF0udmFsdWUpO1xyXG4gICAgICB0aGlzLm9wZXJhdGlvbi5hdXRvSGFuZGxlVHlwZSA9IGF1dG9IYW5kbGUuYXV0b0hhbmRsZVR5cGU7XHJcbiAgICAgIHRoaXMub3BlcmF0aW9uLm1lc3NhZ2UgPSBhdXRvSGFuZGxlLm1lc3NhZ2U7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBnZXQgdmFsdWUoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5vcGVyYXRpb247XHJcbiAgfVxyXG5cclxuICBwbGFjZWhvbGRlciA9ICcnO1xyXG4gIG9wZXJhdGlvbjogQXV0b0hhbmRsZSA9IG5ldyBBdXRvSGFuZGxlKCdQYXNzJyk7XHJcbiAgQE91dHB1dCgpIHN1Ym1pdEVtaXR0ZXIgPSBuZXcgRXZlbnRFbWl0dGVyPEV4cGlyZU9wZXJhdGlvbj4oKTtcclxuICBAT3V0cHV0KCkgY2xvc2VFbWl0dGVyID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XHJcblxyXG4gIGF1dG9IYW5kbGVUeXBlID0gW1xyXG4gICAgLy8geyB2YWx1ZTogJ2F1dG9QYXNzJywgdGV4dDogJ+iHquWKqOmAmui/hycgfSxcclxuICAgIC8vIHsgdmFsdWU6ICdhdXRvQmFjaycsIHRleHQ6ICfoh6rliqjpqbPlm54nIH1cclxuICBdO1xyXG5cclxuICBjb25zdHJ1Y3RvcihcclxuICAgIHByaXZhdGUgbWVzc2FnZTogTWVzc2FnZXJTZXJ2aWNlLFxyXG4gICAgcHVibGljIHVpU3RhdGU6IFByb2Nlc3NEZXNpZ25lclVJU3RhdGUsXHJcbiAgKSB7XHJcbiAgICBmb3IoY29uc3QgaXRlbSBvZiB0aGlzLnVpU3RhdGUucHJvcGVydHlEYXRhLkFwcHJvdmFsSXRlbXMpIHtcclxuICAgICAgdGhpcy5hdXRvSGFuZGxlVHlwZS5wdXNoKHt2YWx1ZTogaXRlbS5WYWx1ZSx0ZXh0OiBpdGVtLlRleHR9KTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gIH1cclxuXHJcbiAgY2xpY2tPSygpIHtcclxuICAgIGlmICh0aGlzLnZhbGlkYXRvcigpKSB7XHJcbiAgICAgIHRoaXMuc3VibWl0RW1pdHRlci5lbWl0KHRoaXMub3BlcmF0aW9uKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGNsaWNrQ2FuY2VsKCkge1xyXG4gICAgdGhpcy5jbG9zZUVtaXR0ZXIuZW1pdCgpO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSB2YWxpZGF0b3IoKTogYm9vbGVhbiB7XHJcbiAgICBpZiAoIXRoaXMub3BlcmF0aW9uLm1lc3NhZ2UpIHtcclxuICAgICAgdGhpcy5tZXNzYWdlLmluZm8oJ+iHquWKqOWKnueQhuaEj+ingeS4jeWFgeiuuOS4uuepuu+8gScpO1xyXG4gICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcbiAgICBpZiAoIXRoaXMub3BlcmF0aW9uLmF1dG9IYW5kbGVUeXBlKSB7XHJcbiAgICAgIHRoaXMubWVzc2FnZS5pbmZvKCfoh6rliqjlip7nkIbkuI3lhYHorrjkuLrnqbrvvIEnKTtcclxuICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHRydWU7XHJcbiAgfVxyXG5cclxufVxyXG4iXX0=