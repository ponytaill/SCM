import { OnInit, EventEmitter, TemplateRef } from '@angular/core';
import { TypeConverter } from '@farris/ui-property-panel';
import { UrgeHandleRule } from './urge-handle-rule';
import { ProcessDesignerUIState } from '../../app/process-designer.uistate';
import { ExpressionService } from '@gsp-svc/expression';
import { MessagerService } from '@farris/ui-messager';
export declare class UrgeHandleRuleComponent implements OnInit {
    private designerUIState;
    private expr;
    private message;
    groupIcon2: string;
    closeModal: EventEmitter<any>;
    submitModal: EventEmitter<any>;
    modalFooter: TemplateRef<any>;
    value: any;
    urgeHandleRule: UrgeHandleRule;
    typeGroup: {
        value: any;
        name: any;
    }[];
    modalConfig: {
        title: string;
        width: number;
        height: number;
        showButtons: boolean;
    };
    constructor(designerUIState: ProcessDesignerUIState, expr: ExpressionService, message: MessagerService);
    ngOnInit(): void;
    clickOK(): void;
    clickCancel(): void;
    private validator;
    parser: (val: string | number) => number;
    titleExpr(data: any): void;
    contentExpr(data: any): void;
    showTitleHelp(data: string): void;
    showContentHelp(data: string): void;
    showExpr(): void;
}
export declare class UrgeHandleRuleConverter implements TypeConverter {
    constructor();
    convertTo(data: any): string;
}
