/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { DataTableModule } from '@farris/ui-datatable';
import { FarrisDialogModule } from '@farris/ui-dialog';
import { PaginationModule } from '@farris/ui-pagination';
import { NotifyModule } from '@farris/ui-notify';
import { ComboListModule } from '@farris/ui-combo-list';
import { MessagerModule } from '@farris/ui-messager';
import { LoadingModule } from '@farris/ui-loading';
import { InputGroupModule } from '@farris/ui-input-group';
import { DatagridModule } from '@farris/ui-datagrid';
import { DatagridEditorsModule, EditorProviders } from '@farris/ui-datagrid-editors';
import { FarrisFormsModule } from '@farris/ui-forms';
import { SwitchModule } from '@farris/ui-switch';
import { WfApprovalLogsModule } from '@gsp-wf/wf-approval-logs';
import { UiFlowchartModule } from '@gsp-wf/ui-flowchart';
import { TaskImplApiModule } from '@gsp-wf/task-impl-api';
import { AvatarModule } from '@farris/ui-avatar';
import { FDropdownDirectiveTypeModule } from '@farris/ui-dropdown';
import { WfSignModule } from '@gsp-wf/wf-sign';
import { SysManagerUIModule } from '@gsp-sys/sysmgr-ui';
import { CommonSharedModule } from '@gsp-sys/rtf-common';
import { SessionService, HttpService, CacheService } from '@ecp-caf/caf-common';
import { FrameworkService, FrmEventBus, FuncsService } from '@gsp-sys/rtf-common';
import { TaskService } from './service/task.service';
import { TranslatePipe } from './service/i18n/translate.pipe';
import { I18nService } from './service/i18n/i18n.service';
import { WfTaskHandlerService } from './wf-task-handler.service';
import { TaskExecuteComponent } from './components/task-execute/task-execute.component';
import { TaskAssigninfoComponent } from './components/task-assigninfo/task-assigninfo.component';
import { ProcessSelectorComponent } from './submit/process-selector/process-selector.component';
import { AssigneeInfoComponent } from './components/assignee-info/assignee-info.component';
import { ThrottleClickDirective } from './throttleTime/throttleClickDirective';
import { TaskCommentComponent } from './components/task-comment/task-comment.component';
import { UrgeHandleComponent } from './components/urge-handle/urge-handle.component';
var WfTaskHandlerModule = /** @class */ (function () {
    function WfTaskHandlerModule() {
    }
    WfTaskHandlerModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        TranslatePipe,
                        TaskExecuteComponent,
                        TaskAssigninfoComponent,
                        ProcessSelectorComponent,
                        AssigneeInfoComponent,
                        ThrottleClickDirective,
                        TaskCommentComponent,
                        UrgeHandleComponent,
                    ],
                    imports: [
                        CommonModule,
                        FormsModule,
                        DataTableModule,
                        FarrisDialogModule,
                        PaginationModule,
                        NotifyModule,
                        ComboListModule,
                        SysManagerUIModule,
                        WfApprovalLogsModule,
                        UiFlowchartModule,
                        CommonSharedModule,
                        LoadingModule,
                        TaskImplApiModule,
                        MessagerModule,
                        InputGroupModule,
                        WfSignModule,
                        AvatarModule,
                        FDropdownDirectiveTypeModule,
                        DatagridModule,
                        DatagridEditorsModule,
                        DatagridModule.forRoot(tslib_1.__spread(EditorProviders)),
                        FarrisFormsModule,
                        SwitchModule
                    ],
                    providers: [
                        TaskService,
                        I18nService,
                        WfTaskHandlerService,
                        FrameworkService,
                        SessionService,
                        HttpService,
                        CacheService,
                        FrmEventBus,
                        FuncsService,
                    ],
                    exports: [
                        TaskExecuteComponent,
                        TaskAssigninfoComponent,
                        ProcessSelectorComponent
                    ],
                    entryComponents: [
                        TaskExecuteComponent,
                        TaskAssigninfoComponent,
                        ProcessSelectorComponent,
                    ]
                },] }
    ];
    return WfTaskHandlerModule;
}());
export { WfTaskHandlerModule };
//# sourceMappingURL=data:application/json;base64,