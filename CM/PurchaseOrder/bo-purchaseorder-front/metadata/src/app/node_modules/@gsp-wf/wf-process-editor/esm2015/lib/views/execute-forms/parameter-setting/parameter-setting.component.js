/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ViewChild, TemplateRef } from '@angular/core';
import { ExpressionService, InjectedType } from '@gsp-svc/expression';
import { ProcessDesignerUIState } from '../../../app/process-designer.uistate';
import { Subject } from 'rxjs';
import { DatagridComponent } from '@farris/ui-datagrid';
export class ParameterSettingComponent {
    /**
     * @param {?} expr
     * @param {?} designerState
     */
    constructor(expr, designerState) {
        this.expr = expr;
        this.designerState = designerState;
        this.idField = 'Name';
        this._mode = 'bpmn';
        this.submit = new Subject();
        this.cancel = new Subject();
        this.formTypeCollection = [
            { text: '流程嵌表单', value: '0' },
            { text: '表单嵌流程', value: '1' },
        ];
        this.cols = new Array();
        this.parameters = new Array();
        this.formType = this.formTypeCollection[0].value;
        this.showFormType = false;
    }
    /**
     * @param {?} m
     * @return {?}
     */
    set mode(m) {
        this._mode = m;
        if (m === 'bpmn') {
            this.idField = 'Name';
            this.cols = [
                { field: 'Name', width: 50, title: '编号' },
                {
                    field: 'Value', width: 100, title: '参数值',
                    editor: {
                        type: 'input-group',
                        options: {
                            groupText: '<i class="f-icon f-icon-lookup"></i>',
                            editable: false,
                            clickHandle: (/**
                             * @param {?} e
                             * @return {?}
                             */
                            (e) => {
                                e.formControl.setValue(e.instance.value ? e.instance.value : '');
                                this.showExprHelp(e);
                            }),
                            clear: (/**
                             * @param {?} e
                             * @return {?}
                             */
                            (e) => {
                                console.log('clear', e);
                            })
                        }
                    }
                }
            ];
        }
        else {
            this.idField = 'code';
            this.cols = [
                { field: 'code', width: 50, title: '编号' },
                { field: 'name', width: 50, title: '名称' },
                {
                    field: 'value', width: 100, title: '参数值',
                    editor: {
                        type: 'input-group',
                        options: {
                            groupText: '<i class="f-icon f-icon-lookup"></i>',
                            editable: false,
                            clickHandle: (/**
                             * @param {?} e
                             * @return {?}
                             */
                            (e) => {
                                e.formControl.setValue(e.instance.value ? e.instance.value : '');
                                this.showExprHelp(e);
                            }),
                            clear: (/**
                             * @param {?} e
                             * @return {?}
                             */
                            (e) => {
                                console.log('clear', e);
                            })
                        }
                    }
                }
            ];
        }
    }
    /**
     * @return {?}
     */
    get mode() {
        return this._mode;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @param {?} e
     * @return {?}
     */
    showExprHelp(e) {
        if (this.designerState.schemas.length > 0) {
            for (const schema of this.designerState.schemas) {
                this.expr.addSchema('Schema', schema);
            }
            if (this.designerState.schemas[0].entityTypes && this.designerState.schemas[0].entityTypes.length > 0) {
                /** @type {?} */
                const entityType = this.designerState.schemas[0].entityTypes[0];
                this.expr.addInjectedEntity(entityType.name, 'Schema', entityType.name, InjectedType.EntityType);
            }
        }
        /** @type {?} */
        const context = new Array();
        if (this.designerState.procInstContext.length > 0) {
            for (const variable of this.designerState.procInstContext) {
                context.push(variable);
                // this.expr.addContext(variable);
            }
        }
        if (this.designerState.formalParameterContext.length > 0) {
            for (const variable of this.designerState.formalParameterContext) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                c => c.key === variable.key))) {
                    context.push(variable);
                }
                // this.expr.addContext(variable);
            }
        }
        if (this.designerState.participantContext.length > 0) {
            for (const variable of this.designerState.participantContext) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                c => c.key === variable.key))) {
                    context.push(variable);
                }
                // this.expr.addContext(variable);
            }
        }
        if (this.designerState.processVariableContext.length > 0) {
            for (const variable of this.designerState.processVariableContext) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                c => c.key === variable.key))) {
                    context.push(variable);
                }
                // this.expr.addContext(variable);
            }
        }
        if (context.length > 0) {
            for (const v of context) {
                this.expr.addContext(v);
            }
        }
        this.expr.addExpressionText(e.instance.value);
        this.expr.buildExpression().then((/**
         * @param {?} d
         * @return {?}
         */
        (d) => {
            if (d) {
                e.formControl.setValue(d);
                e.instance.cd.detectChanges();
            }
        }));
    }
    /**
     * @return {?}
     */
    clickOK() {
        this.grid.endCellEdit();
        this.submit.next({ parameters: this.parameters, formType: this.formType });
    }
    /**
     * @return {?}
     */
    clickCancel() {
        this.cancel.next();
    }
}
ParameterSettingComponent.decorators = [
    { type: Component, args: [{
                selector: 'lib-parameter-setting',
                template: "\r\n<div class=\"f-page f-page-is-managelist\">\r\n  <div class=\"f-page-main my-0\">\r\n    <div class=\"f-struct-wrapper f-utils-fill-flex-column\">\r\n      <farris-section class=\"f-section-grid f-section-in-managelist px-0\" [showHeader]=\"showFormType\" [mainTitle]=\"'\u53C2\u6570'\" [enableMaximize]=\"false\">\r\n        <ng-template farrisSectionToolbar>\r\n          <farris-combo-list [(ngModel)]=\"formType\" name=\"formType\" [idField]=\"'value'\" [textField]=\"'text'\"\r\n            [enableClear]=\"false\" [valueField]=\"'value'\" [data]=\"formTypeCollection\" [panelHeight]=\"'auto'\" [editable]=\"false\"\r\n            style=\"width: 130px;\">\r\n          </farris-combo-list>\r\n        </ng-template>\r\n        <farris-datagrid class=\"f-component-grid\" [columns]=\"cols\" [data]=\"parameters\" #grid\r\n          [idField]=\"idField\" [fit]=\"true\" [fitColumns]=\"true\" [editable]=\"true\" [editMode]=\"'cell'\" [pagination]=\"false\"\r\n          [showCheckbox]=\"false\" [multiSelect]=\"false\" [showLineNumber]=\"true\" [striped]=\"true\"\r\n          [virtualized]=\"true\">\r\n        </farris-datagrid>\r\n      </farris-section>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #iconSelectFooter>\r\n  <button type=\"button\" class=\"btn btn-primary btn-sm mx-2\" (click)=\"clickOK()\">\u786E\u5B9A</button>\r\n  <button type=\"button\" class=\"btn btn-secondary btn-sm\" (click)=\"clickCancel()\">\u53D6\u6D88</button>\r\n</ng-template>",
                styles: [""]
            }] }
];
/** @nocollapse */
ParameterSettingComponent.ctorParameters = () => [
    { type: ExpressionService },
    { type: ProcessDesignerUIState }
];
ParameterSettingComponent.propDecorators = {
    modalFooter: [{ type: ViewChild, args: ['iconSelectFooter',] }],
    grid: [{ type: ViewChild, args: ['grid',] }]
};
if (false) {
    /** @type {?} */
    ParameterSettingComponent.prototype.modalFooter;
    /** @type {?} */
    ParameterSettingComponent.prototype.grid;
    /** @type {?} */
    ParameterSettingComponent.prototype.idField;
    /**
     * @type {?}
     * @private
     */
    ParameterSettingComponent.prototype._mode;
    /** @type {?} */
    ParameterSettingComponent.prototype.submit;
    /** @type {?} */
    ParameterSettingComponent.prototype.cancel;
    /** @type {?} */
    ParameterSettingComponent.prototype.formTypeCollection;
    /** @type {?} */
    ParameterSettingComponent.prototype.cols;
    /** @type {?} */
    ParameterSettingComponent.prototype.parameters;
    /** @type {?} */
    ParameterSettingComponent.prototype.formType;
    /** @type {?} */
    ParameterSettingComponent.prototype.showFormType;
    /**
     * @type {?}
     * @private
     */
    ParameterSettingComponent.prototype.expr;
    /**
     * @type {?}
     * @private
     */
    ParameterSettingComponent.prototype.designerState;
}
//# sourceMappingURL=data:application/json;base64,