/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { BasePayload } from "./base-payload";
/**
 * 加签模拟接口返回
 */
var /**
 * 加签模拟接口返回
 */
AddSignSimulateResponse = /** @class */ (function () {
    function AddSignSimulateResponse() {
    }
    return AddSignSimulateResponse;
}());
/**
 * 加签模拟接口返回
 */
export { AddSignSimulateResponse };
if (false) {
    /**
     * 组织
     * @type {?}
     */
    AddSignSimulateResponse.prototype.organization;
    /**
     * 多人会签方式
     * @type {?}
     */
    AddSignSimulateResponse.prototype.multiInstanceType;
    /**
     * 是否允许再加签
     * @type {?}
     */
    AddSignSimulateResponse.prototype.showSignToSign;
}
/** @enum {string} */
var MultiInstanceType = {
    /**
     * 抢占
     */
    Preempt: 'Preempt',
    /**
     * 并行
     */
    Parallel: 'Parallel',
    /**
     * 串行
     */
    Sequential: 'Sequential',
};
export { MultiInstanceType };
/**
 * 加签提交的payload
 */
var /**
 * 加签提交的payload
 */
AddSignPayload = /** @class */ (function (_super) {
    tslib_1.__extends(AddSignPayload, _super);
    function AddSignPayload() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return AddSignPayload;
}(BasePayload));
/**
 * 加签提交的payload
 */
export { AddSignPayload };
if (false) {
    /**
     * 加签方式：前加签、后加签、并加签（当前会签）、征询/协办
     * @type {?}
     */
    AddSignPayload.prototype.actionCode;
    /**
     * 多人会签方式：抢占 Preempt、并行会签 Parallel、串行会签Sequential
     * @type {?}
     */
    AddSignPayload.prototype.multiInstanceType;
    /**
     * 会签策略：全员通过allPass、一人通过onePass
     * @type {?}
     */
    AddSignPayload.prototype.counterSignRule;
    /**
     * 办理规则
     * all所有用户都办理
     * compliance符合规则往下流转
     * @type {?}
     */
    AddSignPayload.prototype.completedRule;
    /**
     * 加签人员
     * @type {?}
     */
    AddSignPayload.prototype.signAssignees;
    /**
     * 加签节点名称
     * @type {?}
     */
    AddSignPayload.prototype.activityName;
    /**
     * 允许再加签
     * @type {?}
     */
    AddSignPayload.prototype.allowSignToSign;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRkLXNpZ24uanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NwLXdmL3dmLXRhc2staGFuZGxlci8iLCJzb3VyY2VzIjpbImxpYi9lbnRpdHkvYWRkLXNpZ24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7Ozs7QUFNN0M7Ozs7SUFBQTtJQWFBLENBQUM7SUFBRCw4QkFBQztBQUFELENBQUMsQUFiRCxJQWFDOzs7Ozs7Ozs7O0lBVEcsK0NBQWdDOzs7OztJQUloQyxvREFBcUM7Ozs7O0lBSXJDLGlEQUF3Qjs7OztJQU94Qjs7T0FFRztJQUNILFNBQVUsU0FBUztJQUNuQjs7T0FFRztJQUNILFVBQVcsVUFBVTtJQUNyQjs7T0FFRztJQUNILFlBQWEsWUFBWTs7Ozs7O0FBTzdCOzs7O0lBQW9DLDBDQUFXO0lBQS9DOztJQXdDQSxDQUFDO0lBQUQscUJBQUM7QUFBRCxDQUFDLEFBeENELENBQW9DLFdBQVcsR0F3QzlDOzs7Ozs7Ozs7O0lBbkNHLG9DQUFtQjs7Ozs7SUFLbkIsMkNBQTBCOzs7OztJQUsxQix5Q0FBd0I7Ozs7Ozs7SUFPeEIsdUNBQXNCOzs7OztJQUt0Qix1Q0FBd0I7Ozs7O0lBS3hCLHNDQUFxQjs7Ozs7SUFLckIseUNBQXlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQmFzZVBheWxvYWQgfSBmcm9tIFwiLi9iYXNlLXBheWxvYWRcIjtcclxuaW1wb3J0IHsgT3JnYW5pemF0aW9uU2NvcGUgfSBmcm9tIFwiLi9vcmdhbml6YXRpb24tc2NvcGVcIjtcclxuXHJcbi8qKlxyXG4gKiDliqDnrb7mqKHmi5/mjqXlj6Pov5Tlm55cclxuICovXHJcbmV4cG9ydCBjbGFzcyBBZGRTaWduU2ltdWxhdGVSZXNwb25zZSB7XHJcbiAgICAvKipcclxuICAgICAqIOe7hOe7h1xyXG4gICAgICovXHJcbiAgICBvcmdhbml6YXRpb246IE9yZ2FuaXphdGlvblNjb3BlO1xyXG4gICAgLyoqXHJcbiAgICAgKiDlpJrkurrkvJrnrb7mlrnlvI9cclxuICAgICAqL1xyXG4gICAgbXVsdGlJbnN0YW5jZVR5cGU6IE11bHRpSW5zdGFuY2VUeXBlO1xyXG4gICAgLyoqXHJcbiAgICAgKiDmmK/lkKblhYHorrjlho3liqDnrb5cclxuICAgICAqL1xyXG4gICAgc2hvd1NpZ25Ub1NpZ246IGJvb2xlYW47XHJcbn1cclxuXHJcbi8qKlxyXG4gKiAg5aSa5Lq65Lya562+5pa55byPXHJcbiAqL1xyXG5leHBvcnQgZW51bSBNdWx0aUluc3RhbmNlVHlwZSB7XHJcbiAgICAvKipcclxuICAgICAqIOaKouWNoFxyXG4gICAgICovXHJcbiAgICBQcmVlbXB0ID0gJ1ByZWVtcHQnLFxyXG4gICAgLyoqXHJcbiAgICAgKiDlubbooYxcclxuICAgICAqL1xyXG4gICAgUGFyYWxsZWwgPSAnUGFyYWxsZWwnLFxyXG4gICAgLyoqXHJcbiAgICAgKiDkuLLooYxcclxuICAgICAqL1xyXG4gICAgU2VxdWVudGlhbCA9ICdTZXF1ZW50aWFsJ1xyXG5cclxufVxyXG5cclxuLyoqXHJcbiAqIOWKoOetvuaPkOS6pOeahHBheWxvYWRcclxuICovXHJcbmV4cG9ydCBjbGFzcyBBZGRTaWduUGF5bG9hZCBleHRlbmRzIEJhc2VQYXlsb2FkIHtcclxuXHJcbiAgICAvKipcclxuICAgICAqIOWKoOetvuaWueW8j++8muWJjeWKoOetvuOAgeWQjuWKoOetvuOAgeW5tuWKoOetvu+8iOW9k+WJjeS8muetvu+8ieOAgeW+geivoi/ljY/lip5cclxuICAgICAqL1xyXG4gICAgYWN0aW9uQ29kZTogc3RyaW5nO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICog5aSa5Lq65Lya562+5pa55byP77ya5oqi5Y2gIFByZWVtcHTjgIHlubbooYzkvJrnrb4gUGFyYWxsZWzjgIHkuLLooYzkvJrnrb5TZXF1ZW50aWFsXHJcbiAgICAgKi9cclxuICAgIG11bHRpSW5zdGFuY2VUeXBlOiBzdHJpbmc7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDkvJrnrb7nrZbnlaXvvJrlhajlkZjpgJrov4dhbGxQYXNz44CB5LiA5Lq66YCa6L+Hb25lUGFzc1xyXG4gICAgICovXHJcbiAgICBjb3VudGVyU2lnblJ1bGU6IHN0cmluZztcclxuXHJcbiAgICAvKipcclxuICAgICAqIOWKnueQhuinhOWImVxyXG4gICAgICogYWxs5omA5pyJ55So5oi36YO95Yqe55CGXHJcbiAgICAgKiBjb21wbGlhbmNl56ym5ZCI6KeE5YiZ5b6A5LiL5rWB6L2sXHJcbiAgICAgKi9cclxuICAgIGNvbXBsZXRlZFJ1bGU6IHN0cmluZztcclxuXHJcbiAgICAvKipcclxuICAgICAqIOWKoOetvuS6uuWRmFxyXG4gICAgICovXHJcbiAgICBzaWduQXNzaWduZWVzOiBzdHJpbmdbXTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIOWKoOetvuiKgueCueWQjeensFxyXG4gICAgICovXHJcbiAgICBhY3Rpdml0eU5hbWU6IHN0cmluZztcclxuXHJcbiAgICAvKipcclxuICAgICAqIOWFgeiuuOWGjeWKoOetvlxyXG4gICAgICovXHJcbiAgICBhbGxvd1NpZ25Ub1NpZ246IGJvb2xlYW47XHJcblxyXG5cclxufSJdfQ==