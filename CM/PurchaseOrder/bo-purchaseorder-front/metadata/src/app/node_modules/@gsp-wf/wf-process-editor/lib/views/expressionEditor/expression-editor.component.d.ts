import { OnInit, EventEmitter, TemplateRef } from '@angular/core';
import { ExpressionService, ExpressioneditorComponent, ComputeRuleEditorComponent } from '@gsp-svc/expression';
import { ProcessDesignerUIState } from '../../app/process-designer.uistate';
import { TypeConverter } from '@farris/ui-property-panel';
export declare class ExpressionEditorComponent implements OnInit {
    private expr;
    designerState: ProcessDesignerUIState;
    closeModal: EventEmitter<any>;
    submitModal: EventEmitter<any>;
    value: string;
    modalFooter: TemplateRef<any>;
    editorParams: any;
    editor: ExpressioneditorComponent;
    compute: ComputeRuleEditorComponent;
    contextEntities: any[];
    schema: any;
    injectName: string;
    modalConfig: {
        title: string;
        width: number;
        height: number;
        showButtons: boolean;
    };
    constructor(expr: ExpressionService, designerState: ProcessDesignerUIState);
    ngOnInit(): void;
    clickOK(): void;
    /**
     * 切换表达式类型（简易表达式<--->高级表达式）
     */
    changeType(): void;
    clickCancel(): void;
    private convertToValue;
}
export declare class ExpressionEditorConverter implements TypeConverter {
    constructor();
    convertTo(data: any): string;
}
