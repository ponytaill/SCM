import { OnInit, TemplateRef, EventEmitter, ElementRef, AfterViewInit, ChangeDetectorRef, Injector } from '@angular/core';
import { AssigneeInfo } from '../../entity/complete-response';
import { I18nService } from '../../service/i18n/i18n.service';
import { DialogComponent } from '@farris/ui-dialog';
import { DataTableComponent } from '@farris/ui-datatable';
import { SysFarrisLookupComponent } from '@gsp-sys/sysmgr-ui';
import { NotifyService } from '@farris/ui-notify';
import { User } from '../../entity/user';
import { Assignee } from '../../entity/start-process-payload';
import { TaskService } from '../../service/task.service';
import { WfContext } from '../../entity/wfContext';
export declare class AssigneeInfoComponent implements OnInit, AfterViewInit {
    private i18nService;
    private notify;
    private cd;
    private taskService;
    private injector;
    bindingData: {
        id?: string;
        name?: string;
    };
    myHelpBindingData: {
        id?: string;
        name?: string;
    };
    assignUserNgModule: string;
    _assigneeInfo: AssigneeInfo;
    _selectedAssignees: User[];
    assignees: Assignee[];
    searchAssignUserList: any[];
    anonymous: boolean;
    anonymousText: string;
    disabled: boolean;
    placeholder: string;
    singleSelect: boolean;
    filter: {
        notGetCurrentUser: boolean;
        notGetStopUser: boolean;
        orderField: string;
        withAllOrg: boolean;
        orgId: string;
    };
    ifShowBlank: boolean;
    openFromIframe: boolean;
    activityName: string;
    allowGlobalAssign: boolean;
    wfContext: WfContext;
    myUserHelp: DialogComponent;
    buttons: TemplateRef<any>;
    myUserHelpTable: DataTableComponent;
    dataTableEle: ElementRef;
    sysUserHelp: SysFarrisLookupComponent;
    sysUserHelpEle: ElementRef;
    myUserHelpEle: ElementRef;
    afterConfirm: EventEmitter<Assignee[]>;
    groupIcon: string;
    extendUserHelp: boolean;
    extendUserHelpUrl: string;
    columns: {
        title: any;
        field: string;
        width: number;
    }[];
    originAssignUserList: {
        ID: string;
        Code: string;
        Name: string;
        OrgId: string;
        OrgName: string;
    }[];
    constructor(i18nService: I18nService, notify: NotifyService, cd: ChangeDetectorRef, taskService: TaskService, injector: Injector);
    ngAfterViewInit(): void;
    ngOnInit(): void;
    assigneeInfo: AssigneeInfo;
    setAnonymous: boolean;
    setAnonymousText: string;
    /**
     * 已选中的人（帮助不可用）
     */
    selectedAssignees: User[];
    /**
     * 选择参与者
     */
    clickAssignUser(): void;
    /**
     * 加载扩展帮助
     */
    private showExtendUserHelp;
    showSysUserHelp(): void;
    private openMyUserHelpOutIframe;
    private beforeOpenSysUserHelpOutIframe;
    private openSysUserHelpOutIframe;
    afterUsersSelect(data: any): void;
    getAssignUsersByIds(): void;
    myUserHelpSearch(event: any): void;
    myUserHelpAfterSelect(): void;
    myUserHelpCancel(): void;
    assignUserClear(): void;
}
