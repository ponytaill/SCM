/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { NgModule, LOCALE_ID } from '@angular/core';
import { CommonModule } from '@angular/common';
import { HttpClientModule } from '@angular/common/http';
import { CacheService, SessionService, HttpService } from '@ecp-caf/caf-common';
import { FrmEventBus, FuncsService, AppService, FrameworkService } from '@gsp-sys/rtf-common';
import { BusinessObjectRtService } from '@gsp-lcm/bo-rt-service';
import { MetadataRTSelectModule, GSPMetadataRTServiceModule, GSPMetadataRTService } from '@gsp-lcm/metadatart-selector';
import { FResponseToolbarModule } from '@farris/ui-response-toolbar';
import { ListFilterModule } from '@farris/ui-list-filter';
import { AngularDraggableModule } from '@farris/ui-draggable';
import { FarrisCommonModule } from '@farris/ui-common';
import { FarrisFormsModule } from '@farris/ui-forms';
import { FarrisSectionModule } from '@farris/ui-section';
import { DatagridEditorsModule, EditorProviders } from '@farris/ui-datagrid-editors';
import { DatagridModule } from '@farris/ui-datagrid';
import { ComboListModule } from '@farris/ui-combo-list';
import { InputGroupModule } from '@farris/ui-input-group';
import { FarrisDialogModule } from '@farris/ui-dialog';
import { SwitchModule } from '@farris/ui-switch';
import { FarrisTabsModule } from '@farris/ui-tabs';
import { LookupModule } from '@farris/ui-lookup';
import { LoadingModule, LoadingService } from '@farris/ui-loading';
import { NotifyModule } from '@farris/ui-notify';
import { MessagerModule } from '@farris/ui-messager';
import { ModalModule } from '@farris/ui-modal';
import { ProcessListHelpComponent } from './components/process-list-help/process-list-help.component';
import { ProcHelpQuerySolutionComponent } from './components/proc-help-query-solution/proc-help-query-solution.component';
import { ProcessListHelpService } from './services/process-list-help.service';
import { AifUiCommonModule } from '../aif-ui-common/aif-ui-common.module';
import { AifLocalePipe, BIF_LANG_RESOURCES } from '../aif-ui-common/pipe/aif-ui-common-locale.pipe';
import { BILL_TRACKER_LANG_RESOURCES } from './i18n/lang.resource';
var ɵ0 = localStorage.getItem('languageCode') || 'zh-CHS', ɵ1 = BILL_TRACKER_LANG_RESOURCES;
var ProcessListHelpModule = /** @class */ (function () {
    function ProcessListHelpModule() {
    }
    ProcessListHelpModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        CommonModule,
                        HttpClientModule,
                        MetadataRTSelectModule,
                        GSPMetadataRTServiceModule.forRoot(""),
                        FResponseToolbarModule,
                        ListFilterModule,
                        AngularDraggableModule,
                        FarrisCommonModule.forRoot(),
                        FarrisFormsModule,
                        FarrisSectionModule,
                        DatagridEditorsModule,
                        DatagridModule.forRoot(tslib_1.__spread(EditorProviders)),
                        ComboListModule,
                        InputGroupModule,
                        FarrisDialogModule,
                        SwitchModule,
                        FarrisTabsModule,
                        LookupModule,
                        LoadingModule.forRoot({
                            message: 'Loading...'
                        }),
                        NotifyModule.forRoot(),
                        MessagerModule.forRoot({
                            width: 550,
                            height: 450
                        }),
                        ModalModule.forRoot(),
                        AifUiCommonModule,
                    ],
                    providers: [
                        CacheService,
                        SessionService,
                        HttpService,
                        FrmEventBus,
                        FuncsService,
                        LoadingService,
                        AppService,
                        FrameworkService,
                        { provide: LOCALE_ID, useValue: ɵ0 },
                        GSPMetadataRTService,
                        BusinessObjectRtService,
                        ProcessListHelpService,
                        { provide: BIF_LANG_RESOURCES, useValue: ɵ1 },
                        AifLocalePipe,
                    ],
                    declarations: [
                        ProcessListHelpComponent,
                        ProcHelpQuerySolutionComponent,
                    ],
                    entryComponents: [
                        ProcessListHelpComponent,
                        ProcHelpQuerySolutionComponent,
                    ]
                },] }
    ];
    return ProcessListHelpModule;
}());
export { ProcessListHelpModule };
export { ɵ0, ɵ1 };
//# sourceMappingURL=data:application/json;base64,