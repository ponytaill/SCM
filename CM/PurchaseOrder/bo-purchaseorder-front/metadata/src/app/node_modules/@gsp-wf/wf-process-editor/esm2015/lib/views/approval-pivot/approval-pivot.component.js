/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ViewChild, TemplateRef, HostBinding, Output, EventEmitter, Input } from '@angular/core';
import { DatagridComponent } from '@farris/ui-datagrid';
import { ApprovalPivotConfig } from './approval-pivot-config';
import { EditorTypes } from '@farris/ui-datagrid-editors';
import { ProcessDesignerUIState } from '../../app/process-designer.uistate';
import { ExpressionService, InjectedType, ExprEditMode } from '@gsp-svc/expression';
import { ApprovalPivot } from './approval-pivot';
import { MessagerService } from '@farris/ui-messager';
export class ApprovalPivotComponent {
    /**
     * @param {?} designerUIState
     * @param {?} expr
     * @param {?} message
     */
    constructor(designerUIState, expr, message) {
        this.designerUIState = designerUIState;
        this.expr = expr;
        this.message = message;
        this.cls = 'farris-main-area flex-column';
        this.closeModal = new EventEmitter();
        this.submitModal = new EventEmitter();
        this.config = new ApprovalPivotConfig();
        this.typeList = [
            { value: 'REMIND', text: '文字提示' }
        ];
        this.columns = [
            {
                field: 'type', width: 80, title: '类型',
                formatter: {
                    type: 'enum',
                    options: { valueField: 'value', textField: 'text', data: this.typeList }
                },
                editor: {
                    type: EditorTypes.COMBOLIST,
                    options: { valueField: 'value', textField: 'text', data: this.typeList, idField: 'value', panelHeight: 'auto', enableClear: false }
                },
                validators: [
                    { type: 'required', messager: '必填' }
                ]
            },
            {
                field: 'condition', width: 120, title: '条件', showTips: true,
                editor: {
                    type: 'input-group',
                    options: {
                        groupText: '<i class="f-icon f-icon-lookup"></i>',
                        editable: false,
                        clickHandle: (/**
                         * @param {?} e
                         * @return {?}
                         */
                        (e) => {
                            e.formControl.setValue(e.instance.value ? e.instance.value : '');
                            this.editConditon(e);
                        }),
                        clear: (/**
                         * @param {?} e
                         * @return {?}
                         */
                        (e) => {
                            console.log('clear', e);
                        })
                    }
                }
            },
            {
                field: 'title', width: 80, title: '显示名称',
                editor: { type: EditorTypes.TEXTBOX, options: {} }
            }, {
                field: 'description', width: 100, title: '详细说明', showTips: true,
                editor: { type: EditorTypes.TEXTBOX, options: {} }
            }
        ];
        this.modalConfig = {
            title: '审批要点',
            width: 800,
            height: 480,
            showButtons: true
        };
    }
    /**
     * @param {?} data
     * @return {?}
     */
    set value(data) {
        if (data) {
            this.config.enable = data.enable;
            this.config.title = data.title;
            if (data.approvalPivots && data.approvalPivots.length > 0) {
                for (const a of data.approvalPivots) {
                    /** @type {?} */
                    const approvalPivot = new ApprovalPivot();
                    approvalPivot.type = a.type;
                    approvalPivot.title = a.title;
                    approvalPivot.description = a.description;
                    if (a.condition) {
                        if (typeof (a.condition) === 'string') {
                            approvalPivot.condition = a.condition;
                        }
                        else {
                            approvalPivot.condition = a.condition._value;
                        }
                    }
                    this.config.approvalPivots = this.config.approvalPivots.concat([approvalPivot]);
                }
            }
        }
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @return {?}
     */
    add() {
        /** @type {?} */
        const approvalPivot = new ApprovalPivot();
        this.config.approvalPivots = this.config.approvalPivots.concat([approvalPivot]);
    }
    /**
     * @return {?}
     */
    delete() {
        /** @type {?} */
        const selectedRow = this.grid.selectedRow;
        if (!selectedRow) {
            this.message.info('尚未选中审批要点！');
            return;
        }
        this.config.approvalPivots = this.config.approvalPivots.filter((/**
         * @param {?} a
         * @return {?}
         */
        a => a.id !== selectedRow.id));
    }
    /**
     * @return {?}
     */
    clickOK() {
        if (!this.config.title && this.config.enable) {
            this.message.info('尚未填写显示标题！');
            return;
        }
        this.grid.endCellEdit();
        if (this.validator()) {
            /** @type {?} */
            const object = { value: this.config, parameters: null };
            this.submitModal.emit(object);
        }
    }
    /**
     * @return {?}
     */
    clickCancel() {
        this.closeModal.emit();
    }
    /**
     * @private
     * @return {?}
     */
    validator() {
        return true;
    }
    /**
     * @param {?} e
     * @return {?}
     */
    editConditon(e) {
        if (this.designerUIState.schemas.length > 0) {
            for (const schema of this.designerUIState.schemas) {
                this.expr.addSchema('Schema', schema);
            }
            if (this.designerUIState.schemas[0].entityTypes && this.designerUIState.schemas[0].entityTypes.length > 0) {
                /** @type {?} */
                const entityType = this.designerUIState.schemas[0].entityTypes[0];
                this.expr.addInjectedEntity(entityType.name, 'Schema', entityType.name, InjectedType.EntityType);
            }
        }
        /** @type {?} */
        const context = new Array();
        if (this.designerUIState.procInstContext.length > 0) {
            for (const variable of this.designerUIState.procInstContext) {
                context.push(variable);
            }
        }
        if (this.designerUIState.formalParameterContext.length > 0) {
            for (const variable of this.designerUIState.formalParameterContext) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                c => c.key === variable.key))) {
                    context.push(variable);
                }
            }
        }
        if (this.designerUIState.participantContext.length > 0) {
            for (const variable of this.designerUIState.participantContext) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                c => c.key === variable.key))) {
                    context.push(variable);
                }
            }
        }
        if (this.designerUIState.processVariableContext.length > 0) {
            for (const variable of this.designerUIState.processVariableContext) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                c => c.key === variable.key))) {
                    context.push(variable);
                }
            }
        }
        if (this.designerUIState.activityComponentContext.length > 0) {
            for (const variable of this.designerUIState.activityComponentContext) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                c => c.key === variable.key))) {
                    context.push(variable);
                }
            }
        }
        if (context.length > 0) {
            for (const v of context) {
                this.expr.addContext(v);
            }
        }
        this.expr.addExpressionText(e.instance.value);
        this.expr.setEditPattern(ExprEditMode.Conditional);
        this.expr.buildExpression().then((/**
         * @param {?} cond
         * @return {?}
         */
        (cond) => {
            e.formControl.setValue(cond);
            e.instance.cd.detectChanges();
        }));
    }
}
ApprovalPivotComponent.decorators = [
    { type: Component, args: [{
                selector: 'lib-approval-pivot',
                template: "<div class=\"f-page\">\r\n  <section class=\"f-page-main d-flex flex-column\">\r\n    <farris-section class=\"pt-0 f-section-form f-section-in-mainsubcard\" [mainTitle]=\"'\u5BA1\u6279\u8981\u70B9'\" [enableAccordion]=\"'default'\"\r\n      [enableMaximize]=\"false\">\r\n      <div class=\"f-form-layout farris-form farris-form-controls-inline\">\r\n        <fieldset class=\"f-section-formgroup\">\r\n          <div class=\"f-section-formgroup-inputs\">\r\n            <div class=\"col-12\">\r\n              <div class=\"farris-group-wrap\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\">\r\n                    <span class=\"farris-label-text\">\u662F\u5426\u542F\u7528</span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap ml-1\">\r\n                    <farris-switch [(ngModel)]=\"config.enable\" name=\"enable\"></farris-switch>\r\n                    <div class=\"farris-feedback valid-feedback\"></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-12\">\r\n              <div class=\"farris-group-wrap\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\">\r\n                    <span class=\"farris-label-info text-danger\">*</span>\r\n                    <span class=\"farris-label-text\">\u663E\u793A\u6807\u9898</span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap\">\r\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"config.title\" name=\"title\"/>\r\n                    <div class=\"farris-feedback valid-feedback\"></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </fieldset>\r\n      </div>\r\n    </farris-section>\r\n    <farris-section class=\"pt-0 f-section-grid f-section-in-managelist\" [mainTitle]=\"'\u5217\u8868'\" [enableAccordion]=\"''\"\r\n      [enableMaximize]=\"false\" [fill]=\"true\">\r\n      <ng-template farrisSectionToolbar>\r\n        <button class=\"btn btn-link pr-2 mr-2\" (click)=\"add()\">\u65B0\u589E</button>\r\n        <button class=\"btn btn-link mr-0\" (click)=\"delete()\">\u5220\u9664</button>\r\n      </ng-template>\r\n      <farris-datagrid class=\"f-component-grid\" [columns]=\"columns\" [data]=\"config.approvalPivots\" #grid [idField]=\"'id'\" [showLineNumber]=\"true\"\r\n        [striped]=\"true\" [showCheckbox]=\"false\" [pagination]=\"false\" [fit]=\"true\" [fitColumns]=\"true\" [editable]=\"true\" [editMode]=\"'cell'\"\r\n        [multiSelect]=\"false\">\r\n      </farris-datagrid>\r\n    </farris-section>\r\n  </section>\r\n</div>\r\n\r\n<ng-template #iconSelectFooter>\r\n  <button type=\"button\" class=\"btn btn-primary btn-sm px-3 mx-2\" (click)=\"clickOK()\">\u786E\u5B9A</button>\r\n  <button type=\"button\" class=\"btn btn-secondary btn-sm px-3\" (click)=\"clickCancel()\">\u53D6\u6D88</button>\r\n</ng-template>\r\n",
                styles: [""]
            }] }
];
/** @nocollapse */
ApprovalPivotComponent.ctorParameters = () => [
    { type: ProcessDesignerUIState },
    { type: ExpressionService },
    { type: MessagerService }
];
ApprovalPivotComponent.propDecorators = {
    cls: [{ type: HostBinding, args: ['class',] }],
    closeModal: [{ type: Output }],
    submitModal: [{ type: Output }],
    modalFooter: [{ type: ViewChild, args: ['iconSelectFooter',] }],
    grid: [{ type: ViewChild, args: ['grid',] }],
    value: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    ApprovalPivotComponent.prototype.cls;
    /** @type {?} */
    ApprovalPivotComponent.prototype.closeModal;
    /** @type {?} */
    ApprovalPivotComponent.prototype.submitModal;
    /** @type {?} */
    ApprovalPivotComponent.prototype.modalFooter;
    /** @type {?} */
    ApprovalPivotComponent.prototype.grid;
    /** @type {?} */
    ApprovalPivotComponent.prototype.config;
    /** @type {?} */
    ApprovalPivotComponent.prototype.typeList;
    /** @type {?} */
    ApprovalPivotComponent.prototype.columns;
    /** @type {?} */
    ApprovalPivotComponent.prototype.modalConfig;
    /**
     * @type {?}
     * @private
     */
    ApprovalPivotComponent.prototype.designerUIState;
    /**
     * @type {?}
     * @private
     */
    ApprovalPivotComponent.prototype.expr;
    /**
     * @type {?}
     * @private
     */
    ApprovalPivotComponent.prototype.message;
}
export class ApprovalPivotConverter {
    constructor() { }
    /**
     * @param {?} data
     * @return {?}
     */
    convertTo(data) {
        if (data && data.enable) {
            return '（已设置）';
        }
        else {
            return '（未设置）';
        }
    }
}
//# sourceMappingURL=data:application/json;base64,