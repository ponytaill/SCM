import { OnInit, Injector, TemplateRef, EventEmitter } from '@angular/core';
import { ExpireOperation, SendMessage } from '../time-limit-control.entity';
import { MessagerService } from '@farris/ui-messager';
import { ProcessDesignerUIState } from '../../../app/process-designer.uistate';
export declare class SendMessageOperationComponent implements OnInit {
    private injector;
    private message;
    private uistate;
    footer: TemplateRef<any>;
    value: SendMessage;
    operation: SendMessage;
    closeEmitter: EventEmitter<any>;
    submitEmitter: EventEmitter<ExpireOperation>;
    typeGroup: {
        value: any;
        name: any;
    }[];
    receiverVariables: {
        value: string;
        name: string;
    }[];
    activityReceiverVariables: {
        value: string;
        name: string;
    }[];
    placeholder: string;
    placeholder2: string;
    parser: (val: string | number) => number;
    timeUnitCollection: {
        value: string;
        text: string;
    }[];
    location: 'activity' | 'process';
    receiverVari: string;
    activityReceiverVar: string;
    bindingData: {
        id?: any;
        name?: any;
    };
    constructor(injector: Injector, message: MessagerService, uistate: ProcessDesignerUIState);
    ngOnInit(): void;
    clickOK(): void;
    clickCancel(): void;
    clear(): void;
    private setReceiver;
    setActivityReceiver(): void;
    private validator;
}
