/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, HostBinding, Output, EventEmitter, TemplateRef, Input, ViewChild, ComponentFactoryResolver, Injector } from '@angular/core';
import { ActivityComponentRepository } from './activity-component.repository';
import { ActivityComponentUIState } from './activity-component.uistate';
import { ActivityComponentViewModel } from './activity-component.viewmodel';
import { FormBuilder } from '@angular/forms';
import { BizComponentEntity } from '../../domain/entities/biz-component.entity';
import { ActualParameter } from '../../domain/entities/actual-parameter';
import { ProcessDesignerUIState } from '../../app/process-designer.uistate';
import { ExprEditMode, ExpressionService, InjectedType } from '@gsp-svc/expression';
import { SelectMetadataRTComponent } from '@gsp-lcm/metadatart-selector';
import { SessionService } from '@ecp-caf/caf-common';
import { BsModalService } from '@farris/ui-modal';
import { CommonComponentUiRTService } from '@gsp-cmp/ccmp-ui';
import { DatagridComponent } from '@farris/ui-datagrid';
import { of } from 'rxjs';
import { EditorTypes } from '@farris/ui-datagrid-editors';
import { MessagerService } from '@farris/ui-messager';
export class ActivityComponentComponent {
    /**
     * @param {?} uistate
     * @param {?} viewModel
     * @param {?} formBuilder
     * @param {?} designerState
     * @param {?} expr
     * @param {?} resolver
     * @param {?} injector
     * @param {?} sessionSrc
     * @param {?} modalService
     * @param {?} componentService
     * @param {?} repository
     * @param {?} message
     */
    constructor(uistate, viewModel, formBuilder, designerState, expr, resolver, injector, sessionSrc, modalService, componentService, repository, message) {
        this.uistate = uistate;
        this.viewModel = viewModel;
        this.formBuilder = formBuilder;
        this.designerState = designerState;
        this.expr = expr;
        this.resolver = resolver;
        this.injector = injector;
        this.sessionSrc = sessionSrc;
        this.modalService = modalService;
        this.componentService = componentService;
        this.repository = repository;
        this.message = message;
        this.cls = 'farris-main-area flex-column';
        this.closeModal = new EventEmitter();
        this.submitModal = new EventEmitter();
        this.editorParams = {};
        this.modalConfig = {
            title: '构件',
            width: 1000,
            height: 530,
            showButtons: true
        };
        this.columns = [];
        this.paramColumns = [];
        this.paramAfterEdit = (/**
         * @param {?} rowIndex
         * @param {?} rowData
         * @param {?=} column
         * @return {?}
         */
        (rowIndex, rowData, column) => {
            return of(true);
        });
    }
    /**
     * @param {?} cpts
     * @return {?}
     */
    set value(cpts) {
        if (cpts && cpts.length > 0) {
            for (const cpt of cpts) {
                /** @type {?} */
                const bizComponent = new BizComponentEntity(cpt.Name || cpt.name, cpt.MetadataId || cpt.metadataId, cpt.MethodCode || cpt.methodCode);
                bizComponent.executionTime = cpt.Time || cpt.executionTime,
                    bizComponent.id = cpt.Id || cpt.id;
                bizComponent.isForCompensation = cpt.isForCompensation;
                bizComponent.actualParameters = [];
                if ((cpt.ActualParameters && cpt.ActualParameters.length > 0) || (cpt.actualParameters && cpt.actualParameters.length > 0)) {
                    /** @type {?} */
                    const actualParameters = cpt.ActualParameters || cpt.actualParameters;
                    for (const para of actualParameters) {
                        /** @type {?} */
                        const actualParameter = new ActualParameter(para.Name || para.code, para.Name || para.name, para.Value || para.value);
                        bizComponent.actualParameters.push(actualParameter);
                    }
                }
                this.uistate.components.push(bizComponent);
            }
        }
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.location = this.editorParams.location;
        if (this.location === 'activity') {
            this.uistate.executionCollection = this.uistate.activityCollection;
            this.columns = [
                {
                    field: 'name', width: 100, title: '构件名称'
                },
                { field: 'metadataId', width: 100, title: '构件ID' },
                { field: 'methodCode', width: 100, title: '构件方法' },
                {
                    field: 'executionTime', width: 100, title: '执行时机',
                    editor: {
                        type: EditorTypes.COMBOLIST,
                        options: { data: this.uistate.executionCollection, valueField: 'value', textField: 'text', idField: 'value', panelHeight: 'auto' }
                    },
                    formatter: (/**
                     * @param {?} v
                     * @param {?} d
                     * @param {?} i
                     * @return {?}
                     */
                    (v, d, i) => {
                        if (v) {
                            return this.uistate.executionCollection.find((/**
                             * @param {?} item
                             * @return {?}
                             */
                            item => item.value === v)).text;
                        }
                        else {
                            return '';
                        }
                    }),
                    validators: [
                        { type: 'required', messager: '必填' }
                    ]
                },
                {
                    field: 'isForCompensation', width: 50, title: '补偿操作',
                    editor: { type: EditorTypes.SWITCH, options: {} },
                    formatter: { type: 'boolean', options: { trueText: '是', falseText: '否' } }
                }
            ];
        }
        else if (this.location === 'autoActivity') {
            this.columns = [
                {
                    field: 'name', width: 100, title: '构件名称'
                },
                { field: 'metadataId', width: 100, title: '构件ID' },
                { field: 'methodCode', width: 100, title: '构件方法' },
                {
                    field: 'isForCompensation', width: 50, title: '补偿操作',
                    editor: { type: EditorTypes.SWITCH, options: {} },
                    formatter: { type: 'boolean', options: { trueText: '是', falseText: '否' } }
                }
            ];
        }
        else {
            this.columns = [
                {
                    field: 'name', width: 100, title: '构件名称'
                },
                { field: 'metadataId', width: 100, title: '构件ID' },
                { field: 'methodCode', width: 100, title: '构件方法' },
                {
                    field: 'executionTime', width: 100, title: '执行时机',
                    editor: {
                        type: EditorTypes.COMBOLIST,
                        options: { data: this.uistate.executionCollection, valueField: 'value', textField: 'text', idField: 'value', panelHeight: 'auto' }
                    },
                    formatter: (/**
                     * @param {?} v
                     * @param {?} d
                     * @param {?} i
                     * @return {?}
                     */
                    (v, d, i) => {
                        if (v) {
                            return this.uistate.executionCollection.find((/**
                             * @param {?} item
                             * @return {?}
                             */
                            item => item.value === v)).text;
                        }
                        else {
                            return '';
                        }
                    }),
                    validators: [
                        { type: 'required', messager: '必填' }
                    ]
                }
            ];
        }
        if (this.uistate.components && this.uistate.components.length > 0) {
            this.cmplist.selectRow(this.uistate.components[0].id, true);
        }
        this.paramColumns = [
            { field: 'code', width: 50, title: '编号' },
            { field: 'name', width: 50, title: '名称' },
            {
                field: 'value', width: 100, title: '参数值',
                editor: {
                    type: 'input-group',
                    options: {
                        groupText: '<i class="f-icon f-icon-lookup"></i>',
                        editable: false,
                        clickHandle: (/**
                         * @param {?} e
                         * @return {?}
                         */
                        (e) => {
                            e.formControl.setValue(e.instance.value ? e.instance.value : '');
                            this.showExprHelp(e);
                        }),
                        clear: (/**
                         * @param {?} e
                         * @return {?}
                         */
                        (e) => {
                            console.log('clear', e);
                        })
                    }
                }
            }
        ];
        // 选中当前行
        this.repository.subject.subscribe((/**
         * @param {?} cmp
         * @return {?}
         */
        cmp => {
            this.cmplist.loadData(this.uistate.components);
            if (cmp) {
                this.cmplist.selectRow(cmp.id, true);
            }
            else {
                this.uistate.curComponent = null;
            }
        }));
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
        if (this.uistate.components && this.uistate.components.length > 0) {
            this.cmplist.selectRow(this.uistate.components[0].id, true);
        }
    }
    /**
     * @return {?}
     */
    deleteRow() {
        this.closeCellEdit();
        this.viewModel.deleteRow();
    }
    /**
     * @return {?}
     */
    moveUp() {
        if (!this.uistate.curComponent) {
            this.message.info('尚未选中构件！');
            return;
        }
        /** @type {?} */
        const curCmpId = this.uistate.curComponent.id;
        /** @type {?} */
        const i = this.uistate.components.findIndex((/**
         * @param {?} c
         * @return {?}
         */
        c => c.id === curCmpId));
        if (i === 0) {
            return;
        }
        this.repository.swapArray(this.uistate.components, i, i - 1);
        this.cmplist.loadData(this.uistate.components);
        this.cmplist.selectRow(curCmpId, true);
    }
    /**
     * @return {?}
     */
    moveDown() {
        if (!this.uistate.curComponent) {
            this.message.info('尚未选中构件！');
            return;
        }
        /** @type {?} */
        const curCmpId = this.uistate.curComponent.id;
        /** @type {?} */
        const i = this.uistate.components.findIndex((/**
         * @param {?} c
         * @return {?}
         */
        c => c.id === curCmpId));
        if (i === this.uistate.components.length - 1) {
            return;
        }
        this.repository.swapArray(this.uistate.components, i, i + 1);
        this.cmplist.loadData(this.uistate.components);
        this.cmplist.selectRow(curCmpId, true);
    }
    /**
     * @return {?}
     */
    clickOK() {
        this.closeCellEdit();
        if (this.validator()) {
            /** @type {?} */
            const object = { value: this.uistate.components, parameters: null };
            this.submitModal.emit(object);
        }
    }
    /**
     * @return {?}
     */
    clickCancel() {
        this.closeModal.emit();
    }
    /**
     * @return {?}
     */
    componentSelect() {
        /** @type {?} */
        const compFactory = this.resolver.resolveComponentFactory(SelectMetadataRTComponent);
        /** @type {?} */
        const compRef = compFactory.create(this.injector);
        compRef.instance.typeList = 'WebServiceComponent'; // 目前只能根据元数据类型过滤，后续添加标签过滤
        compRef.instance.selectedMetadata.subscribe((/**
         * @param {?} $event
         * @return {?}
         */
        ($event) => {
            try {
                /** @type {?} */
                const meta = $event.metadata;
                this.openComponentSelectorNew(meta.id, this.sessionSrc.getUserSessionId());
            }
            catch (_a) {
                console.log('$event', $event);
                throw new Error('获取解析构件出错' + $event);
            }
        }));
        /** @type {?} */
        const modalConfig = {
            title: '构件选择',
            width: 980,
            height: 548,
            showButtons: false
        };
        /** @type {?} */
        const dialog = this.modalService.show(compRef, modalConfig);
        compRef.instance.closeModalEmitter.subscribe((/**
         * @param {?} $event
         * @return {?}
         */
        $event => dialog.close()));
    }
    /**
     * 取数构件帮助new
     * @param {?} metadataId
     * @param {?} sessionId
     * @return {?}
     */
    openComponentSelectorNew(metadataId, sessionId) {
        this.componentService.openSelector(metadataId, sessionId).subscribe((/**
         * @param {?} selectorResult
         * @return {?}
         */
        (selectorResult) => {
            selectorResult.confirmEvent.subscribe((/**
             * @param {?} result
             * @return {?}
             */
            (result) => {
                this.viewModel.componentSelect(result);
            }));
        }));
    }
    /**
     * @param {?} e
     * @return {?}
     */
    showExprHelp(e) {
        if (this.designerState.schemas.length > 0) {
            for (const schema of this.designerState.schemas) {
                this.expr.addSchema('Schema', schema);
            }
            if (this.designerState.schemas[0].entityTypes && this.designerState.schemas[0].entityTypes.length > 0) {
                /** @type {?} */
                const entityType = this.designerState.schemas[0].entityTypes[0];
                this.expr.addInjectedEntity(entityType.name, 'Schema', entityType.name, InjectedType.EntityType);
            }
        }
        /** @type {?} */
        const context = new Array();
        if (this.designerState.procInstContext.length > 0) {
            for (const variable of this.designerState.procInstContext) {
                context.push(variable);
            }
        }
        if (this.designerState.formalParameterContext.length > 0) {
            for (const variable of this.designerState.formalParameterContext) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                c => c.key === variable.key))) {
                    context.push(variable);
                }
            }
        }
        if (this.designerState.participantContext.length > 0) {
            for (const variable of this.designerState.participantContext) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                c => c.key === variable.key))) {
                    context.push(variable);
                }
            }
        }
        if (this.location === 'activity') {
            for (const variable of this.designerState.activityComponentContext) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                c => c.key === variable.key))) {
                    context.push(variable);
                }
            }
        }
        if (this.designerState.processVariableContext.length > 0) {
            for (const variable of this.designerState.processVariableContext) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                c => c.key === variable.key))) {
                    context.push(variable);
                }
            }
        }
        if (context.length > 0) {
            for (const v of context) {
                this.expr.addContext(v);
            }
        }
        this.expr.setEditPattern(ExprEditMode.Advanced); // 默认打开高级表达式编辑器
        this.expr.addExpressionText(e.instance.value);
        this.expr.buildExpression().then((/**
         * @param {?} expressioninfo
         * @return {?}
         */
        (expressioninfo) => {
            e.formControl.setValue(expressioninfo);
            e.instance.cd.detectChanges();
        }));
    }
    /**
     * @param {?} data
     * @return {?}
     */
    selectionChange(data) {
        this.uistate.curComponent = data.data;
    }
    /**
     * @private
     * @return {?}
     */
    closeCellEdit() {
        this.cmplist.endCellEdit();
        if (this.paramlist) {
            this.paramlist.endCellEdit();
        }
    }
    /**
     * @private
     * @return {?}
     */
    validator() {
        for (const c of this.uistate.components) {
            if (!c.executionTime && this.location !== 'autoActivity') {
                this.message.warning('构件执行时机不允许为空！');
                return false;
            }
        }
        return true;
    }
}
ActivityComponentComponent.decorators = [
    { type: Component, args: [{
                selector: 'app-activity-component',
                template: "\r\n<div class=\"f-page\">\r\n  <div class=\"f-page-header\">\r\n    <nav class=\"f-page-header-base\">\r\n      <div class=\"f-title\">\r\n        <span class=\"f-title-icon f-text-orna-bill\">\r\n          <i class=\"f-icon f-icon-page-title-administer\"></i>\r\n        </span>\r\n        <h4 class=\"f-title-text\">\u6784\u4EF6\u5217\u8868</h4>\r\n      </div>\r\n      <div class=\"btn-toolbar btn-group-lg\">\r\n        <button class=\"btn btn-primary mr-2\" (click)=\"componentSelect()\">\u65B0\u589E</button>\r\n        <button class=\"btn btn-secondary mr-2\" (click)=\"deleteRow()\">\u5220\u9664</button>\r\n        <button class=\"btn btn-secondary mr-2\" (click)=\"moveUp()\">\u4E0A\u79FB</button>\r\n        <button class=\"btn btn-secondary\" (click)=\"moveDown()\">\u4E0B\u79FB</button>\r\n      </div>\r\n    </nav>\r\n  </div>\r\n  <div class=\"f-page-main f-utils-fill-flex-column h-100\">\r\n    <div class=\"f-utils-fill-flex-column farris-overflow-y-auto h-100\">\r\n      <div [style.height.%]=\"uistate.curComponent?45:100\">\r\n        <farris-datagrid #cmplist [data]=\"uistate.components\" [idField]=\"'id'\" [columns]=\"columns\" [fit]=\"true\"\r\n          [fitColumns]=\"true\" [editable]=\"true\" [editMode]=\"'cell'\" [pagination]=\"false\" [showCheckbox]=\"false\"\r\n          [multiSelect]=\"false\" (selectChanged)=\"selectionChange($event)\" [closeOtherGridEditor]=\"true\">\r\n        </farris-datagrid>\r\n      </div>\r\n      <ng-container *ngIf=\"uistate.curComponent\">\r\n        <farris-tabs class=\"f-utils-fill\" [value]=\"'parameters'\" [contentFill]=\"true\" [autoTitleWidth]=\"true\">\r\n          <farris-tab [title]=\"'\u53C2\u6570\u5217\u8868'\" [id]=\"'parameters'\">\r\n            <ng-template #content>\r\n              <div class=\"f-utils-fill-flex-column h-100\">\r\n                <farris-datagrid #paramlist [data]=\"uistate.curComponent.actualParameters\" \r\n                  [columns]=\"paramColumns\" [idField]=\"'code'\" [fit]=\"true\" [fitColumns]=\"true\" \r\n                  [editable]=\"true\" [editMode]=\"'cell'\" [pagination]=\"false\"\r\n                  [showCheckbox]=\"false\" [multiSelect]=\"false\" [afterEdit]=\"paramAfterEdit\" [closeOtherGridEditor]=\"true\">\r\n                </farris-datagrid>\r\n              </div>\r\n            </ng-template>\r\n          </farris-tab>\r\n        </farris-tabs>\r\n      </ng-container>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n<ng-template #iconSelectFooter>\r\n  <button type=\"button\" class=\"btn btn-primary btn-sm px-3 mx-2\" (click)=\"clickOK()\">\u786E\u5B9A</button>\r\n  <button type=\"button\" class=\"btn btn-secondary btn-sm px-3\" (click)=\"clickCancel()\">\u53D6\u6D88</button>\r\n</ng-template>\r\n\r\n",
                providers: [ActivityComponentRepository, ActivityComponentUIState, ActivityComponentViewModel],
                styles: [""]
            }] }
];
/** @nocollapse */
ActivityComponentComponent.ctorParameters = () => [
    { type: ActivityComponentUIState },
    { type: ActivityComponentViewModel },
    { type: FormBuilder },
    { type: ProcessDesignerUIState },
    { type: ExpressionService },
    { type: ComponentFactoryResolver },
    { type: Injector },
    { type: SessionService },
    { type: BsModalService },
    { type: CommonComponentUiRTService },
    { type: ActivityComponentRepository },
    { type: MessagerService }
];
ActivityComponentComponent.propDecorators = {
    cls: [{ type: HostBinding, args: ['class',] }],
    closeModal: [{ type: Output }],
    submitModal: [{ type: Output }],
    editorParams: [{ type: Input }],
    modalFooter: [{ type: ViewChild, args: ['iconSelectFooter',] }],
    value: [{ type: Input }],
    cmplist: [{ type: ViewChild, args: ['cmplist',] }],
    paramlist: [{ type: ViewChild, args: ['paramlist',] }]
};
if (false) {
    /** @type {?} */
    ActivityComponentComponent.prototype.cls;
    /** @type {?} */
    ActivityComponentComponent.prototype.closeModal;
    /** @type {?} */
    ActivityComponentComponent.prototype.submitModal;
    /** @type {?} */
    ActivityComponentComponent.prototype.editorParams;
    /** @type {?} */
    ActivityComponentComponent.prototype.modalFooter;
    /** @type {?} */
    ActivityComponentComponent.prototype.modalConfig;
    /** @type {?} */
    ActivityComponentComponent.prototype.cmplist;
    /** @type {?} */
    ActivityComponentComponent.prototype.paramlist;
    /** @type {?} */
    ActivityComponentComponent.prototype.location;
    /** @type {?} */
    ActivityComponentComponent.prototype.columns;
    /** @type {?} */
    ActivityComponentComponent.prototype.paramColumns;
    /** @type {?} */
    ActivityComponentComponent.prototype.paramAfterEdit;
    /** @type {?} */
    ActivityComponentComponent.prototype.uistate;
    /** @type {?} */
    ActivityComponentComponent.prototype.viewModel;
    /**
     * @type {?}
     * @private
     */
    ActivityComponentComponent.prototype.formBuilder;
    /**
     * @type {?}
     * @private
     */
    ActivityComponentComponent.prototype.designerState;
    /**
     * @type {?}
     * @private
     */
    ActivityComponentComponent.prototype.expr;
    /**
     * @type {?}
     * @private
     */
    ActivityComponentComponent.prototype.resolver;
    /**
     * @type {?}
     * @private
     */
    ActivityComponentComponent.prototype.injector;
    /**
     * @type {?}
     * @private
     */
    ActivityComponentComponent.prototype.sessionSrc;
    /**
     * @type {?}
     * @private
     */
    ActivityComponentComponent.prototype.modalService;
    /**
     * @type {?}
     * @private
     */
    ActivityComponentComponent.prototype.componentService;
    /**
     * @type {?}
     * @private
     */
    ActivityComponentComponent.prototype.repository;
    /**
     * @type {?}
     * @private
     */
    ActivityComponentComponent.prototype.message;
}
export class ActivityComponentConverter {
    constructor() { }
    /**
     * @param {?} data
     * @return {?}
     */
    convertTo(data) {
        if (data && data.length > 0) {
            return '（已设置）';
        }
        else {
            return '（未设置）';
        }
    }
}
//# sourceMappingURL=data:application/json;base64,