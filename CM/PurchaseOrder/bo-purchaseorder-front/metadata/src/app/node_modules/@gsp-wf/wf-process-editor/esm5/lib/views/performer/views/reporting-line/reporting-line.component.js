/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, ViewChild, HostBinding, ElementRef, NgZone, Input } from '@angular/core';
import { HttpService } from '@ecp-caf/caf-common';
import { ReportingLineDataEntity } from './reporting-line-data.entity';
import { of } from 'rxjs';
import { ProcessDesignerUIState } from '../../../../app/process-designer.uistate';
import { ExprEditMode, ExpressionService, InjectedType } from '@gsp-svc/expression';
import { LookupGridComponent } from '@farris/ui-lookup';
import { SysFarrisTreeHelpComponent } from "@gsp-sys/sysmgr-ui";
import { PerformerEntity } from "../../entities/performer.entity";
import { WfReportDefHelpComponent } from "./service/wf-report-def-help.component";
var ReportingLineComponent = /** @class */ (function () {
    function ReportingLineComponent(http, designerUIState, expr, ngZone) {
        this.http = http;
        this.designerUIState = designerUIState;
        this.expr = expr;
        this.ngZone = ngZone;
        this.cls = 'd-flex flex-fill h-100';
        this.treeFilter = '';
        this.display = 'none';
        this.typeReadOnly = false;
        this.groupIcon2 = '<i class="f-icon f-icon-lookup"></i>';
        this.defName = '';
        /**
         * 汇报关系数据
         */
        this.reportingLineDataEntity = new ReportingLineDataEntity();
        /**
         * 汇报关系定义列表
         */
        this.reportingLineDefinitionList = [];
        this.reportingLineDimension = [];
        this.showClearButton = false;
        this.items = [];
        this.users = [];
        this.departments = [];
        this.pageIndex = 1;
        this.pageSize = 20;
        this.pageList = [10, 20, 30, 50, 100];
        this.total = 0;
        /**
         * 汇报类型显示列
         */
        this.columns = [
            { title: '编号', field: 'code', width: 100 },
            { title: '名称', field: 'name', width: 100 }
        ];
        /**
         *  参与者列表汇报关系显示字段
         */
        this.reportingReferObjects = [
            { name: '组织', value: 'dept' },
            { name: '系统用户', value: 'sysUser' },
            { name: '员工', value: 'employee' }
        ];
        this.curReportingRefer = this.reportingReferObjects[0].value;
        this.getReportingLineType();
    }
    Object.defineProperty(ReportingLineComponent.prototype, "setReportingLineDataEntity", {
        set: /**
         * @param {?} dataEntity
         * @return {?}
         */
        function (dataEntity) {
            var _this = this;
            this.defName = dataEntity.reportingLineDefName;
            this.reportingLineDataEntity = dataEntity;
            /** @type {?} */
            var defUrl = '/api/runtime/wf/v1.0/reportingLineDefinitions/' + dataEntity.reportingLineDefId;
            this.http.get(defUrl).subscribe((/**
             * @param {?} re
             * @return {?}
             */
            function (re) {
                var e_1, _a;
                _this.reportingLineDefinition = re;
                _this.designerUIState.dimensions = [
                    { value: 'higherSuperior', text: '间接上级' }
                ];
                // 兼容历史数据
                if (JSON.parse(_this.reportingLineDefinition.dimensions)[0].code !== 'directSuperior') {
                    /** @type {?} */
                    var di = {
                        value: 'directSuperior',
                        text: '直接上级'
                    };
                    _this.designerUIState.dimensions.push(di);
                }
                try {
                    for (var _b = tslib_1.__values(JSON.parse(_this.reportingLineDefinition.dimensions)), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var dimension = _c.value;
                        /** @type {?} */
                        var di = {
                            value: dimension.code,
                            text: dimension.name
                        };
                        _this.designerUIState.dimensions.push(di);
                    }
                }
                catch (e_1_1) { e_1 = { error: e_1_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_1) throw e_1.error; }
                }
            }));
            this.users = [dataEntity];
            if (dataEntity.refUserId) {
                this.users[0].performerName = this.variableParticipantName(dataEntity.refUserId);
                this.curReportingRefer = this.reportingReferObjects[1].value;
                this.display = 'block';
            }
            else if (dataEntity.refEmployeeId) {
                this.users[0].performerName = dataEntity.refEmployeeId;
                this.curReportingRefer = this.reportingReferObjects[2].value;
                this.display = 'block';
            }
            else {
                this.curReportingRefer = this.reportingReferObjects[0].value;
            }
            if (dataEntity.reportingLineDefId) {
                this.typeReadOnly = true;
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    ReportingLineComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * 获取汇报关系类型
     */
    /**
     * 获取汇报关系类型
     * @return {?}
     */
    ReportingLineComponent.prototype.getReportingLineType = /**
     * 获取汇报关系类型
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var url = '/api/runtime/wf/v1.0/reportingLineDefinitions';
        this.http.get(url).subscribe((/**
         * @param {?} re
         * @return {?}
         */
        function (re) {
            _this.reportingLineDefinitionList = re;
            _this.items = _this.reportingLineDefinitionList.slice(0, _this.pageSize);
            _this.total = _this.reportingLineDefinitionList.length;
        }));
    };
    /**
     * @return {?}
     */
    ReportingLineComponent.prototype.onclear = /**
     * @return {?}
     */
    function () {
        this.reportingLineDataEntity = new ReportingLineDataEntity();
    };
    // 参照类型改变
    // 参照类型改变
    /**
     * @param {?} data
     * @return {?}
     */
    ReportingLineComponent.prototype.referObjectChange = 
    // 参照类型改变
    /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        if (data === 'dept') {
            this.display = 'none';
            this.curReportingRefer = this.reportingReferObjects[0].value;
            this.reportingLineDataEntity.refUserId = null;
            this.reportingLineDataEntity.refEmployeeId = null;
        }
        else if (data === 'sysUser') {
            this.display = 'block';
            this.curReportingRefer = this.reportingReferObjects[1].value;
            this.reportingLineDataEntity.refOrgId = null;
            this.reportingLineDataEntity.refOrgName = null;
            this.reportingLineDataEntity.refEmployeeId = null;
        }
        else { // 员工的情况
            this.display = 'block';
            this.curReportingRefer = this.reportingReferObjects[2].value;
            this.reportingLineDataEntity.refOrgId = null;
            this.reportingLineDataEntity.refOrgName = null;
            this.reportingLineDataEntity.refUserId = null;
        }
        // 参照对象切换时，清空user和department
        this.users = [];
        this.departments = [];
    };
    /**
     * 参照用户改变
     */
    /**
     * 参照用户改变
     * @param {?} data
     * @return {?}
     */
    ReportingLineComponent.prototype.referUserChange = /**
     * 参照用户改变
     * @param {?} data
     * @return {?}
     */
    function (data) {
        console.log(data);
    };
    /**
     * 维度改变
     */
    /**
     * 维度改变
     * @param {?} data
     * @return {?}
     */
    ReportingLineComponent.prototype.reportingDimensionChange = /**
     * 维度改变
     * @param {?} data
     * @return {?}
     */
    function (data) {
    };
    /**
     * 组织帮助选完后
     */
    /**
     * 组织帮助选完后
     * @param {?} org
     * @return {?}
     */
    ReportingLineComponent.prototype.orgSelected = /**
     * 组织帮助选完后
     * @param {?} org
     * @return {?}
     */
    function (org) {
        this.reportingLineDataEntity.refOrgId = org.id;
        this.reportingLineDataEntity.refOrgName = org.name;
    };
    /**
     * 编辑条件
     */
    /**
     * 编辑条件
     * @return {?}
     */
    ReportingLineComponent.prototype.editCondition = /**
     * 编辑条件
     * @return {?}
     */
    function () {
        var _this = this;
        var e_2, _a, e_3, _b, e_4, _c, e_5, _d, e_6, _e, e_7, _f, e_8, _g;
        if (this.designerUIState.schemas.length > 0) {
            try {
                for (var _h = tslib_1.__values(this.designerUIState.schemas), _j = _h.next(); !_j.done; _j = _h.next()) {
                    var schema = _j.value;
                    this.expr.addSchema('Schema', schema);
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (_j && !_j.done && (_a = _h.return)) _a.call(_h);
                }
                finally { if (e_2) throw e_2.error; }
            }
            if (this.designerUIState.schemas[0].entityTypes && this.designerUIState.schemas[0].entityTypes.length > 0) {
                /** @type {?} */
                var entityType = this.designerUIState.schemas[0].entityTypes[0];
                this.expr.addInjectedEntity(entityType.name, 'Schema', entityType.name, InjectedType.EntityType);
            }
        }
        /** @type {?} */
        var context = new Array();
        if (this.designerUIState.procInstContext.length > 0) {
            try {
                for (var _k = tslib_1.__values(this.designerUIState.procInstContext), _l = _k.next(); !_l.done; _l = _k.next()) {
                    var variable = _l.value;
                    context.push(variable);
                }
            }
            catch (e_3_1) { e_3 = { error: e_3_1 }; }
            finally {
                try {
                    if (_l && !_l.done && (_b = _k.return)) _b.call(_k);
                }
                finally { if (e_3) throw e_3.error; }
            }
        }
        if (this.designerUIState.formalParameterContext.length > 0) {
            var _loop_1 = function (variable) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) { return c.key === variable.key; }))) {
                    context.push(variable);
                }
            };
            try {
                for (var _m = tslib_1.__values(this.designerUIState.formalParameterContext), _o = _m.next(); !_o.done; _o = _m.next()) {
                    var variable = _o.value;
                    _loop_1(variable);
                }
            }
            catch (e_4_1) { e_4 = { error: e_4_1 }; }
            finally {
                try {
                    if (_o && !_o.done && (_c = _m.return)) _c.call(_m);
                }
                finally { if (e_4) throw e_4.error; }
            }
        }
        if (this.designerUIState.participantContext.length > 0) {
            var _loop_2 = function (variable) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) { return c.key === variable.key; }))) {
                    context.push(variable);
                }
            };
            try {
                for (var _p = tslib_1.__values(this.designerUIState.participantContext), _q = _p.next(); !_q.done; _q = _p.next()) {
                    var variable = _q.value;
                    _loop_2(variable);
                }
            }
            catch (e_5_1) { e_5 = { error: e_5_1 }; }
            finally {
                try {
                    if (_q && !_q.done && (_d = _p.return)) _d.call(_p);
                }
                finally { if (e_5) throw e_5.error; }
            }
        }
        if (this.designerUIState.processVariableContext.length > 0) {
            var _loop_3 = function (variable) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) { return c.key === variable.key; }))) {
                    context.push(variable);
                }
            };
            try {
                for (var _r = tslib_1.__values(this.designerUIState.processVariableContext), _s = _r.next(); !_s.done; _s = _r.next()) {
                    var variable = _s.value;
                    _loop_3(variable);
                }
            }
            catch (e_6_1) { e_6 = { error: e_6_1 }; }
            finally {
                try {
                    if (_s && !_s.done && (_e = _r.return)) _e.call(_r);
                }
                finally { if (e_6) throw e_6.error; }
            }
        }
        if (this.designerUIState.activityComponentContext.length > 0) {
            var _loop_4 = function (variable) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) { return c.key === variable.key; }))) {
                    context.push(variable);
                }
            };
            try {
                for (var _t = tslib_1.__values(this.designerUIState.activityComponentContext), _u = _t.next(); !_u.done; _u = _t.next()) {
                    var variable = _u.value;
                    _loop_4(variable);
                }
            }
            catch (e_7_1) { e_7 = { error: e_7_1 }; }
            finally {
                try {
                    if (_u && !_u.done && (_f = _t.return)) _f.call(_t);
                }
                finally { if (e_7) throw e_7.error; }
            }
        }
        if (context.length > 0) {
            try {
                for (var context_1 = tslib_1.__values(context), context_1_1 = context_1.next(); !context_1_1.done; context_1_1 = context_1.next()) {
                    var v = context_1_1.value;
                    this.expr.addContext(v);
                }
            }
            catch (e_8_1) { e_8 = { error: e_8_1 }; }
            finally {
                try {
                    if (context_1_1 && !context_1_1.done && (_g = context_1.return)) _g.call(context_1);
                }
                finally { if (e_8) throw e_8.error; }
            }
        }
        this.expr.setEditPattern(ExprEditMode.Conditional); // 表达式展现模式：默认简易版
        this.expr.addExpressionText(this.reportingLineDataEntity.condition); // this.reportingLineDataEntity.condition
        this.expr.buildExpression().then((/**
         * @param {?} expressioninfo
         * @return {?}
         */
        function (expressioninfo) {
            _this.reportingLineDataEntity.condition = expressioninfo;
        }));
    };
    /**
     * @param {?=} value
     * @return {?}
     */
    ReportingLineComponent.prototype.getReportingTypes = /**
     * @param {?=} value
     * @return {?}
     */
    function (value) {
        /** @type {?} */
        var start = (this.pageIndex - 1) * this.pageSize;
        /** @type {?} */
        var end = start + this.pageSize;
        /** @type {?} */
        var items = [];
        if (value) {
            items = this.reportingLineDefinitionList.filter((/**
             * @param {?} f
             * @return {?}
             */
            function (f) { return f.name.indexOf(value) > -1 || f.code.indexOf(value) > -1; }));
        }
        else {
            items = this.reportingLineDefinitionList;
        }
        this.total = items.length;
        this.items = items.slice(start, end);
        this.lookup.componentRef.instance.loadData({
            total: this.total,
            pageSize: this.pageSize,
            pageIndex: this.pageIndex,
            data: this.items
        });
    };
    /**
     * @return {?}
     */
    ReportingLineComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.ngZone.runOutsideAngular((/**
         * @return {?}
         */
        function () {
            _this.inputGroup.nativeElement.addEventListener('mouseenter', _this.onMouseEnter.bind(_this));
            _this.inputGroup.nativeElement.addEventListener('mouseleave', _this.onMouseLeave.bind(_this));
            _this.inputGroup1.nativeElement.addEventListener('mouseenter', _this.onMouseEnter.bind(_this));
            _this.inputGroup1.nativeElement.addEventListener('mouseleave', _this.onMouseLeave.bind(_this));
        }));
    };
    /**
     * @param {?} event
     * @return {?}
     */
    ReportingLineComponent.prototype.onMouseEnter = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.showClearButton = true;
        if (this.showClearButton) {
            this.toggleClearIcon(event, true);
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    ReportingLineComponent.prototype.onMouseLeave = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.showClearButton = false;
        this.toggleClearIcon(event, false);
    };
    /**
     * @private
     * @param {?} event
     * @param {?=} isShow
     * @return {?}
     */
    ReportingLineComponent.prototype.toggleClearIcon = /**
     * @private
     * @param {?} event
     * @param {?=} isShow
     * @return {?}
     */
    function (event, isShow) {
        if (isShow === void 0) { isShow = false; }
        /** @type {?} */
        var str = isShow ? '' : 'none';
        /** @type {?} */
        var clearIcon = event.target.querySelector('.input-group-clear');
        if (clearIcon) {
            clearIcon.style.display = str;
        }
    };
    /**
     * @param {?} data
     * @return {?}
     */
    ReportingLineComponent.prototype.clear = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        this.reportingLineDataEntity.refOrgId = '';
        this.reportingLineDataEntity.refOrgName = '';
    };
    /**
     * @return {?}
     */
    ReportingLineComponent.prototype.clearUser = /**
     * @return {?}
     */
    function () {
        this.users = [];
        this.reportingLineDataEntity.refUserId = '';
        this.reportingLineDataEntity.refEmployeeId = '';
    };
    /**
     * @return {?}
     */
    ReportingLineComponent.prototype.clearOrg = /**
     * @return {?}
     */
    function () {
        this.departments = [];
        this.reportingLineDataEntity.refOrgId = '';
    };
    /**
     * @param {?} data
     * @return {?}
     */
    ReportingLineComponent.prototype.selectOrg = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        this.showExprHelp(data);
    };
    /**
     * @param {?} data
     * @return {?}
     */
    ReportingLineComponent.prototype.selectUsers = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        this.showExprHelp(data);
    };
    /**
     * @param {?} data
     * @return {?}
     */
    ReportingLineComponent.prototype.showExprHelp = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        var _this = this;
        var e_9, _a, e_10, _b, e_11, _c, e_12, _d;
        this.expr.setEditPattern(ExprEditMode.Advanced); // 表达式展现模式：默认高级
        if (this.designerUIState.schemas.length > 0) {
            try {
                for (var _e = tslib_1.__values(this.designerUIState.schemas), _f = _e.next(); !_f.done; _f = _e.next()) {
                    var schema = _f.value;
                    this.expr.addSchema('Schema', schema);
                }
            }
            catch (e_9_1) { e_9 = { error: e_9_1 }; }
            finally {
                try {
                    if (_f && !_f.done && (_a = _e.return)) _a.call(_e);
                }
                finally { if (e_9) throw e_9.error; }
            }
            if (this.designerUIState.schemas[0].entityTypes && this.designerUIState.schemas[0].entityTypes.length > 0) {
                /** @type {?} */
                var entityType = this.designerUIState.schemas[0].entityTypes[0];
                this.expr.addInjectedEntity(entityType.name, 'Schema', entityType.name, InjectedType.EntityType);
            }
        }
        /** @type {?} */
        var context = new Array();
        if (this.designerUIState.participantContext.length > 0) {
            try {
                for (var _g = tslib_1.__values(this.designerUIState.participantContext), _h = _g.next(); !_h.done; _h = _g.next()) {
                    var variable = _h.value;
                    context.push(variable);
                }
            }
            catch (e_10_1) { e_10 = { error: e_10_1 }; }
            finally {
                try {
                    if (_h && !_h.done && (_b = _g.return)) _b.call(_g);
                }
                finally { if (e_10) throw e_10.error; }
            }
        }
        if (this.designerUIState.processVariableContext.length > 0) {
            var _loop_5 = function (variable) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) { return c.key === variable.key; }))) {
                    context.push(variable);
                }
            };
            try {
                for (var _j = tslib_1.__values(this.designerUIState.processVariableContext), _k = _j.next(); !_k.done; _k = _j.next()) {
                    var variable = _k.value;
                    _loop_5(variable);
                }
            }
            catch (e_11_1) { e_11 = { error: e_11_1 }; }
            finally {
                try {
                    if (_k && !_k.done && (_c = _j.return)) _c.call(_j);
                }
                finally { if (e_11) throw e_11.error; }
            }
        }
        if (context.length > 0) {
            try {
                for (var context_2 = tslib_1.__values(context), context_2_1 = context_2.next(); !context_2_1.done; context_2_1 = context_2.next()) {
                    var v = context_2_1.value;
                    this.expr.addContext(v);
                }
            }
            catch (e_12_1) { e_12 = { error: e_12_1 }; }
            finally {
                try {
                    if (context_2_1 && !context_2_1.done && (_d = context_2.return)) _d.call(context_2);
                }
                finally { if (e_12) throw e_12.error; }
            }
        }
        if (data === 'sysUser') {
            if (this.reportingLineDataEntity.refUserId && this.reportingLineDataEntity.refUserId.length > 0) {
                this.expr.addExpressionText(this.reportingLineDataEntity.refUserId);
            }
            else {
                this.expr.addExpressionText('');
            }
        }
        else if (data === 'org') {
            if (this.reportingLineDataEntity.refOrgId && this.reportingLineDataEntity.refOrgId.length > 0) {
                this.expr.addExpressionText(this.reportingLineDataEntity.refOrgId);
            }
            else {
                this.expr.addExpressionText('');
            }
        }
        else { // 员工及其他汇报对象类型
            if (this.reportingLineDataEntity.refEmployeeId && this.reportingLineDataEntity.refEmployeeId.length > 0) {
                this.expr.addExpressionText(this.reportingLineDataEntity.refEmployeeId);
            }
            else {
                this.expr.addExpressionText('');
            }
        }
        this.expr.buildExpression().then((/**
         * @param {?} expressionInfo
         * @return {?}
         */
        function (expressionInfo) {
            if (data === 'sysUser') {
                /** @type {?} */
                var user = new PerformerEntity(expressionInfo, '', 'wf.ReportingLineParticipant');
                user.tag = 'expression';
                user.performerName = _this.variableParticipantName(expressionInfo);
                _this.reportingLineDataEntity.refUserId = user.performerId;
                _this.reportingLineDataEntity.tag = user.tag;
                _this.reportingLineDataEntity.performerName = user.performerName;
                _this.users = [_this.reportingLineDataEntity];
            }
            else if (data === 'org') {
                /** @type {?} */
                var dept = new PerformerEntity(expressionInfo, '', 'wf.ReportingLineParticipant');
                dept.tag = 'expression';
                _this.reportingLineDataEntity.refOrgName = expressionInfo;
                _this.reportingLineDataEntity.refOrgId = expressionInfo;
                _this.departments = [_this.reportingLineDataEntity];
            }
            else {
                /** @type {?} */
                var employee = new PerformerEntity(expressionInfo, '', 'wf.ReportingLineParticipant');
                employee.performerName = expressionInfo;
                employee.tag = 'expression';
                _this.reportingLineDataEntity.refEmployeeId = expressionInfo;
                _this.reportingLineDataEntity.performerName = employee.performerName;
                _this.users = [_this.reportingLineDataEntity];
            }
        }));
    };
    /**
     * @private
     * @param {?} expr
     * @return {?}
     */
    ReportingLineComponent.prototype.variableParticipantName = /**
     * @private
     * @param {?} expr
     * @return {?}
     */
    function (expr) {
        var e_13, _a, e_14, _b;
        try {
            for (var _c = tslib_1.__values(this.designerUIState.participantContext), _d = _c.next(); !_d.done; _d = _c.next()) {
                var c = _d.value;
                if (expr.indexOf(c.key) > -1) {
                    return c.name;
                }
            }
        }
        catch (e_13_1) { e_13 = { error: e_13_1 }; }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
            }
            finally { if (e_13) throw e_13.error; }
        }
        try {
            for (var _e = tslib_1.__values(this.designerUIState.processVariableContext), _f = _e.next(); !_f.done; _f = _e.next()) {
                var c = _f.value;
                if (expr.indexOf(c.key) > -1) {
                    return c.name;
                }
            }
        }
        catch (e_14_1) { e_14 = { error: e_14_1 }; }
        finally {
            try {
                if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
            }
            finally { if (e_14) throw e_14.error; }
        }
        return '业务字段';
    };
    /**
     * @return {?}
     */
    ReportingLineComponent.prototype.defChanged = /**
     * @return {?}
     */
    function () {
        var _this = this;
        System.import('/platform/runtime/wf/web/wf-reporting-data/reportingLineDefHelp.js?v=20210903').then((/**
         * @return {?}
         */
        function () {
            ((/** @type {?} */ (window))).gspWfReportingLineDef.ReportingLineDefHelpUtil.getReportingLineHelp().then((/**
             * @param {?} data
             * @return {?}
             */
            function (data) {
                _this.defSelected(data);
            }));
        }));
    };
    /**
     * @param {?} data
     * @return {?}
     */
    ReportingLineComponent.prototype.defSelected = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        var e_15, _a;
        this.defName = data.name;
        this.reportingLineDataEntity.reportingLineDefId = data.id;
        this.reportingLineDataEntity.reportingLineDefName = data.name;
        this.reportingLineDimension = JSON.parse(data.dimensions);
        this.designerUIState.dimensions = [
            { value: 'higherSuperior', text: '间接上级' }
        ];
        // 兼容历史数据
        if (this.reportingLineDimension[0].code !== 'directSuperior') {
            /** @type {?} */
            var di = {
                value: 'directSuperior',
                text: '直接上级'
            };
            this.designerUIState.dimensions.push(di);
        }
        try {
            for (var _b = tslib_1.__values(this.reportingLineDimension), _c = _b.next(); !_c.done; _c = _b.next()) {
                var dimension = _c.value;
                /** @type {?} */
                var di = {
                    value: dimension.code,
                    text: dimension.name
                };
                this.designerUIState.dimensions.push(di);
            }
        }
        catch (e_15_1) { e_15 = { error: e_15_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_15) throw e_15.error; }
        }
        // 定义切换后，默认是参照组织
        this.curReportingRefer = this.reportingReferObjects[0].value;
        return of(true);
    };
    /**
     * @return {?}
     */
    ReportingLineComponent.prototype.getPerformers = /**
     * @return {?}
     */
    function () {
        this.reportingLineDataEntity.type = 'wf.ReportingLineParticipant';
        this.reportingLineDataEntity.reportingReferObject = this.curReportingRefer;
        return this.reportingLineDataEntity;
    };
    ReportingLineComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-reporting-line',
                    template: "<sys-farris-tree-help class=\"flex-fill\" #orgHelp style=\"display: none;\"\r\n                      [singleSelect]=\"true\" [sourceType]=\"'org'\" [disabled]=\"false\" [filter]=\"treeFilter\"\r\n                      [useBeforeCloseEvent]=\"false\" [async]=\"true\"\r\n                      (afterConfirm)=\"orgSelected($event)\">\r\n</sys-farris-tree-help>\r\n\r\n<div class=\"d-flex flex-fill farris-overflow-y-auto p-md-2\">\r\n  <form style=\"background: #F0F3F6; width: 100%; height: 420px\">\r\n    <div class=\"d-flex m-2 flex-column w-100\">\r\n      <div class=\"d-flex flex-column mx-5 my-4\" style=\"background: #FFF;\">\r\n        <div class=\"farris-form form-inline  farris-form-inline mr-5\">\r\n          <div class=\"col-12 farris-group-auto my-4\">\r\n            <div class=\"farris-group-wrap\">\r\n              <div class=\"form-group farris-form-group\">\r\n                <label class=\"col-form-label\">\r\n                  <span class=\"farris-label-info text-danger\">*</span>\r\n                  <span class=\"farris-label-text\">\u6C47\u62A5\u5B9A\u4E49</span>\r\n                </label>\r\n                <div class=\"farris-input-wrap\">\r\n                  <!--<farris-lookup-grid [items]=\"items\" [columns]=\"columns\" [(ngModel)]=\"reportingLineDataEntity.reportingLineDefName\"\r\n                    name=\"definitionId\" [resizable]=\"true\" [singleSelect]=\"true\" [idField]=\"'id'\" [pagination]=\"true\"\r\n                    [pageIndex]=\"pageIndex\" [pageSize]=\"pageSize\" [pageList]=\"pageList\" [total]=\"total\" [textField]=\"'name'\"\r\n                    [valueField]=\"'id'\" [title]=\"'\u6C47\u62A5\u7C7B\u578B'\" [dictPicked]=\"dictPicked\" (clear)=\"onclear()\" [readonly]=\"typeReadOnly\"\r\n                    [customDisplayType] = \"true\" [displayType]=\"'LIST'\">\r\n                  </farris-lookup-grid>-->\r\n                  <input-group [editable]=\"false\" [customCls]=\"'custom-cls'\" [groupText]=\"groupIcon2\"\r\n                               [(value)]=\"defName\"\r\n                               (clickHandle)=\"defChanged()\" [enableClear]=\"false\"\r\n                  ></input-group>\r\n                  <div class=\"farris-feedback valid-feedback\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-12 farris-group-auto my-4\">\r\n            <div class=\"farris-group-wrap\">\r\n              <div class=\"form-group farris-form-group\">\r\n                <label class=\"col-form-label\">\r\n                  <span class=\"farris-label-info text-danger\">*</span>\r\n                  <span class=\"farris-label-text\">\u6C47\u62A5\u7EA7\u522B</span>\r\n                </label>\r\n                <div class=\"farris-input-wrap\">\r\n                  <farris-combo-list [(ngModel)]=\"reportingLineDataEntity.dimension\" name=\"dimension\" [panelHeight]=\"200\"\r\n                                     [idField]=\"'value'\" [textField]=\"'text'\" [data]=\"this.designerUIState.dimensions\" (valueChange)=\"reportingDimensionChange($event)\"\r\n                                     ></farris-combo-list>\r\n                  <div class=\"farris-feedback valid-feedback\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-12 farris-group-auto my-4\">\r\n            <div class=\"farris-group-wrap\">\r\n              <div class=\"form-group farris-form-group\">\r\n                <label class=\"col-form-label\">\r\n                  <span class=\"farris-label-info text-danger\">*</span>\r\n                  <span class=\"farris-label-text\">\u53C2\u7167\u7C7B\u578B</span>\r\n                </label>\r\n                <div class=\"farris-input-wrap\">\r\n                  <farris-radiogroup [data]=\"reportingReferObjects\" [horizontal]=\"true\"\r\n                                     [(ngModel)]=\"curReportingRefer\" name=\"referObject\"\r\n                                     (changeValue)=\"referObjectChange($event)\"\r\n                  ></farris-radiogroup>\r\n                  <div class=\"farris-feedback valid-feedback\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-12 farris-group-auto my-4\" [ngStyle]=\"{'display':display}\">\r\n            <div class=\"farris-group-wrap\">\r\n              <div class=\"form-group farris-form-group\">\r\n                <label class=\"col-form-label\">\r\n                  <span class=\"farris-label-info text-danger\">*</span>\r\n                  <span class=\"farris-label-text\">\u53C2\u7167\u4EBA</span>\r\n                </label>\r\n                <div class=\"farris-input-wrap\">\r\n                  <div #inputGroup1 class=\"input-group\">\r\n                    <input type=\"text\" class=\"form-control\" [value]=\"users | usersName \" [(ngModel)]=\"reportingLineDataEntity.performerName\" name=\"users\" [readOnly]=\"true\" />\r\n                    <div class=\"input-group-append\">\r\n                      <span [style.display]=\"showClearButton ? '' : 'none'\" class=\"input-group-text input-group-clear\"\r\n                            (click)=\"clearUser()\">\r\n                        <i class=\"f-icon modal_close\"></i>\r\n                      </span>\r\n                      <span *ngIf=\"curReportingRefer === 'sysUser'\" class=\"input-group-text\" (click)=\"selectUsers('sysUser')\" style=\"background: #FFF;\">\r\n                        <i class=\"f-icon f-icon-lookup\"></i>\r\n                      </span>\r\n                      <span *ngIf=\"curReportingRefer === 'employee'\" class=\"input-group-text\" (click)=\"selectUsers('employee')\" style=\"background: #FFF;\">\r\n                        <i class=\"f-icon f-icon-lookup\"></i>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"farris-feedback valid-feedback\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-12 farris-group-auto my-4\">\r\n            <div class=\"farris-group-wrap\">\r\n              <div class=\"form-group farris-form-group\">\r\n                <label class=\"col-form-label\">\r\n                  <span class=\"farris-label-info text-danger\" [ngStyle]=\"{'display':display === 'none' ? 'block':'none'}\">*</span>\r\n                  <span class=\"farris-label-text\">\u53C2\u7167\u7EC4\u7EC7</span>\r\n                </label>\r\n                <div class=\"farris-input-wrap\">\r\n                  <div #inputGroup class=\"input-group\">\r\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"reportingLineDataEntity.refOrgId\" name=\"dept\" [readOnly]=\"true\" />\r\n                    <div class=\"input-group-append\">\r\n                      <span [style.display]=\"showClearButton ? '' : 'none'\" class=\"input-group-text input-group-clear\"\r\n                            (click)=\"clearOrg()\">\r\n                        <i class=\"f-icon modal_close\"></i>\r\n                      </span>\r\n                      <span class=\"input-group-text\" (click)=\"selectOrg('org')\" style=\"background: #FFF;\">\r\n                        <i class=\"f-icon f-icon-lookup\"></i>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"farris-feedback valid-feedback\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"d-flex flex-column mx-5\" style=\"background: #FFF;\">\r\n        <div class=\"farris-form form-inline farris-form-inline mr-5\">\r\n          <div class=\"col-12 farris-group-auto my-4\">\r\n            <div class=\"farris-group-wrap\">\r\n              <div class=\"form-group farris-form-group\">\r\n                <label class=\"col-form-label\">\r\n                  <span class=\"farris-label-text\">\u542F\u7528\u6761\u4EF6</span>\r\n                </label>\r\n                <div class=\"farris-input-wrap\">\r\n                  <div class=\"input-group\">\r\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"reportingLineDataEntity.condition\" name=\"conditon\" [readOnly]=\"true\" />\r\n                    <div class=\"input-group-append\">\r\n                      <span class=\"input-group-text\" (click)=\"editCondition()\" style=\"background: #FFF;\">\r\n                        <i class=\"f-icon f-icon-lookup\"></i>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"farris-feedback valid-feedback\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</div>\r\n\r\n<app-wf-report-def-help style=\"display: none;\" [singleSelect]=\"true\" [title]=\"'\u6C47\u62A5\u5173\u7CFB\u5B9A\u4E49'\" (afterConfirm)=\"defSelected($event)\">\r\n\r\n</app-wf-report-def-help>\r\n",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    ReportingLineComponent.ctorParameters = function () { return [
        { type: HttpService },
        { type: ProcessDesignerUIState },
        { type: ExpressionService },
        { type: NgZone }
    ]; };
    ReportingLineComponent.propDecorators = {
        cls: [{ type: HostBinding, args: ['class',] }],
        reportingLineDefHelp: [{ type: ViewChild, args: [WfReportDefHelpComponent,] }],
        setReportingLineDataEntity: [{ type: Input }],
        lookup: [{ type: ViewChild, args: [LookupGridComponent,] }],
        orgHelp: [{ type: ViewChild, args: [SysFarrisTreeHelpComponent,] }],
        inputGroup: [{ type: ViewChild, args: ['inputGroup',] }],
        inputGroup1: [{ type: ViewChild, args: ['inputGroup1',] }]
    };
    return ReportingLineComponent;
}());
export { ReportingLineComponent };
if (false) {
    /** @type {?} */
    ReportingLineComponent.prototype.cls;
    /** @type {?} */
    ReportingLineComponent.prototype.treeFilter;
    /** @type {?} */
    ReportingLineComponent.prototype.display;
    /** @type {?} */
    ReportingLineComponent.prototype.typeReadOnly;
    /** @type {?} */
    ReportingLineComponent.prototype.groupIcon2;
    /** @type {?} */
    ReportingLineComponent.prototype.defName;
    /**
     * 汇报关系数据
     * @type {?}
     */
    ReportingLineComponent.prototype.reportingLineDataEntity;
    /**
     * 汇报关系定义列表
     * @type {?}
     */
    ReportingLineComponent.prototype.reportingLineDefinitionList;
    /** @type {?} */
    ReportingLineComponent.prototype.reportingLineDefinition;
    /** @type {?} */
    ReportingLineComponent.prototype.reportingLineDimension;
    /** @type {?} */
    ReportingLineComponent.prototype.reportingLineDefHelp;
    /** @type {?} */
    ReportingLineComponent.prototype.lookup;
    /** @type {?} */
    ReportingLineComponent.prototype.orgHelp;
    /** @type {?} */
    ReportingLineComponent.prototype.inputGroup;
    /** @type {?} */
    ReportingLineComponent.prototype.inputGroup1;
    /** @type {?} */
    ReportingLineComponent.prototype.showClearButton;
    /** @type {?} */
    ReportingLineComponent.prototype.condition;
    /** @type {?} */
    ReportingLineComponent.prototype.items;
    /** @type {?} */
    ReportingLineComponent.prototype.users;
    /** @type {?} */
    ReportingLineComponent.prototype.departments;
    /** @type {?} */
    ReportingLineComponent.prototype.pageIndex;
    /** @type {?} */
    ReportingLineComponent.prototype.pageSize;
    /** @type {?} */
    ReportingLineComponent.prototype.pageList;
    /** @type {?} */
    ReportingLineComponent.prototype.total;
    /**
     * 汇报类型显示列
     * @type {?}
     */
    ReportingLineComponent.prototype.columns;
    /**
     *  参与者列表汇报关系显示字段
     * @type {?}
     */
    ReportingLineComponent.prototype.reportingReferObjects;
    /** @type {?} */
    ReportingLineComponent.prototype.curReportingRefer;
    /**
     * @type {?}
     * @private
     */
    ReportingLineComponent.prototype.http;
    /** @type {?} */
    ReportingLineComponent.prototype.designerUIState;
    /**
     * @type {?}
     * @private
     */
    ReportingLineComponent.prototype.expr;
    /**
     * @type {?}
     * @private
     */
    ReportingLineComponent.prototype.ngZone;
}
//# sourceMappingURL=data:application/json;base64,