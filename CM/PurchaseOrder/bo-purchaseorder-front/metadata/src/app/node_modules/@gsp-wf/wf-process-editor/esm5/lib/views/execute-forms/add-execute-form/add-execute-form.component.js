/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, ViewChild, TemplateRef } from '@angular/core';
import { ProcessDesignerUIState } from '../../../app/process-designer.uistate';
import { HttpService, SessionService } from '@ecp-caf/caf-common';
import { RtfAppHelpComponent } from '@gsp-sys/rtf-ui';
import { of, Subject, from, forkJoin } from 'rxjs';
import { ServerSideToken, LookupGridComponent } from '@farris/ui-lookup';
import { FormFormatService } from './form-format.service';
import { ExecuteFormModel, TerminalType, ActualParameter } from '../entities/execute-form.entity';
import { DatagridComponent } from '@farris/ui-datagrid';
import { MessagerService } from '@farris/ui-messager';
import { ExecuteForm } from '../entities/execute-form';
import { ProcessDeUtil } from '../../../domain/process-de-util';
import { map } from 'rxjs/operators';
var AddExecuteFormComponent = /** @class */ (function () {
    function AddExecuteFormComponent(state, http, session, message) {
        var _this = this;
        this.state = state;
        this.http = http;
        this.session = session;
        this.message = message;
        this.submit = new Subject();
        this.cancel = new Subject();
        this.forms = new Array();
        // private formTypeCollection = [
        //   { text: '流程嵌表单', value: '0' },
        //   { text: '表单嵌流程', value: '1' },
        // ];
        this.columns = [
            { field: 'code', width: 100, title: '编号' },
            {
                field: 'name', width: 100, title: '名称',
            },
            {
                field: 'tag', width: 80, title: '单据类型',
                formatter: (/**
                 * @param {?} v
                 * @param {?} d
                 * @param {?} i
                 * @return {?}
                 */
                function (v, d, i) {
                    if (d.appId) {
                        return '功能菜单';
                    }
                    else if (d.formFormatId) {
                        return '表单格式';
                    }
                })
            }
            // {
            //   field: 'formType', width: 80, title: '联查类型',
            //   formatter: {
            //     type: 'enum',
            //     options: { valueField: 'value', textField: 'text', data: this.formTypeCollection }
            //   },
            // },
        ];
        // 表单格式显示列
        this.cols = [
            {
                field: 'code', width: 100, title: '单据格式编号', searchField: 'code'
            }, {
                field: 'name', width: 100, title: '单据格式名称', searchField: 'name'
            }
        ];
        this.dataUri = '/api/runtime/wf/v1.0/formFormat/page';
        this.dictPicking = (/**
         * @param {?} arg
         * @return {?}
         */
        function (arg) {
            return of({
                showDialog: true, data: {
                    tab: _this.tab
                }
            });
        });
        this.dictPicked = (/**
         * @param {?} data
         * @return {?}
         */
        function (data) {
            /** @type {?} */
            var model = new ExecuteFormModel();
            model.Id = ProcessDeUtil.GenerateElementId();
            model.Name = data.name;
            model.ComponentId = null;
            model.FormType = '0';
            model.formFormatId = data.id;
            model.TerminalType = _this.tab === 'web' ? TerminalType.PC : TerminalType.MOBILE;
            model.ActualParameters = data.urlParameters.map((/**
             * @param {?} p
             * @return {?}
             */
            function (p) {
                /** @type {?} */
                var a = new ActualParameter();
                a.Name = p.code;
                a.Value = p.value;
                return a;
            }));
            _this.submit.next(model);
            return of({ closeDialog: true });
        });
    }
    /**
     * @return {?}
     */
    AddExecuteFormComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.getAllExecuteForms();
    };
    /**
     * @return {?}
     */
    AddExecuteFormComponent.prototype.clickOK = /**
     * @return {?}
     */
    function () {
        if (this.grid.selectedRow) {
            /** @type {?} */
            var form = this.grid.selectedRow.data;
            /** @type {?} */
            var model = new ExecuteFormModel();
            model.Id = ProcessDeUtil.GenerateElementId();
            model.Name = form.name;
            model.ComponentId = form.appId;
            model.FormType = form.formType;
            model.formFormatId = form.formFormatId;
            model.TerminalType = this.tab === 'web' ? TerminalType.PC : TerminalType.MOBILE;
            model.ActualParameters = form.actualParameters.map((/**
             * @param {?} p
             * @return {?}
             */
            function (p) {
                /** @type {?} */
                var a = new ActualParameter();
                a.Name = p.code;
                a.Value = p.value;
                return a;
            }));
            this.submit.next(model);
        }
        else {
            this.message.info('尚未选择表单定义！');
        }
    };
    /**
     * @return {?}
     */
    AddExecuteFormComponent.prototype.clickCancel = /**
     * @return {?}
     */
    function () {
        this.cancel.next();
    };
    /**
     * @return {?}
     */
    AddExecuteFormComponent.prototype.selectOtherFormFormat = /**
     * @return {?}
     */
    function () {
        this.lookUp.showDialog();
    };
    /**
     * @return {?}
     */
    AddExecuteFormComponent.prototype.selectOtherFunc = /**
     * @return {?}
     */
    function () {
        this.appHelper.showHelp(this.session.getUserSessionId());
    };
    /**
     * @param {?} apps
     * @return {?}
     */
    AddExecuteFormComponent.prototype.funcSelected = /**
     * @param {?} apps
     * @return {?}
     */
    function (apps) {
        var _this = this;
        if (apps && apps.length > 0) {
            /** @type {?} */
            var model_1 = new ExecuteFormModel();
            model_1.Id = ProcessDeUtil.GenerateElementId();
            model_1.Name = apps[0].Name;
            model_1.ComponentId = apps[0].Id;
            model_1.FormType = '0';
            model_1.formFormatId = null;
            model_1.TerminalType = this.tab === 'web' ? TerminalType.PC : TerminalType.MOBILE;
            model_1.ActualParameters = [];
            if (apps[0].InvokingConfig['entityParams']) {
                /** @type {?} */
                var paras = JSON.parse(apps[0].InvokingConfig['entityParams']);
                model_1.ActualParameters = paras.map((/**
                 * @param {?} p
                 * @return {?}
                 */
                function (p) { return ({
                    Name: p.name,
                    Value: ''
                }); }));
            }
            setTimeout((/**
             * @return {?}
             */
            function () {
                _this.submit.next(model_1);
            }), 0);
        }
    };
    /**
     * @private
     * @return {?}
     */
    AddExecuteFormComponent.prototype.getAllExecuteForms = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        forkJoin(this.getExecuteForms(), this.getFormFormats()).subscribe((/**
         * @param {?} re
         * @return {?}
         */
        function (re) {
            var e_1, _a;
            if (re[0]) {
                _this.forms = re[0];
            }
            if (re[1] && re[1].length > 0) {
                /** @type {?} */
                var formFormats = re[1];
                var _loop_1 = function (format) {
                    if (_this.forms.findIndex((/**
                     * @param {?} f
                     * @return {?}
                     */
                    function (f) { return f.formFormatId && f.formFormatId === format.id; })) === -1) {
                        /** @type {?} */
                        var executeForm = new ExecuteForm();
                        executeForm.id = ProcessDeUtil.createNM();
                        executeForm.flowFormKey = _this.state.flowFormInfo.flowForm.id;
                        executeForm.appId = null;
                        executeForm.code = format.code;
                        executeForm.name = format.name;
                        executeForm.actualParameters = [];
                        executeForm.isDefault = false;
                        executeForm.formType = '0';
                        executeForm.terminal = 'web';
                        executeForm.formFormatId = format.id;
                        executeForm.sysInit = 0;
                        executeForm.remarks = '';
                        if (format.urlParameters && format.urlParameters.length > 0) {
                            /** @type {?} */
                            var actPList = format.urlParameters.map((/**
                             * @param {?} p
                             * @return {?}
                             */
                            function (p) { return ({
                                code: p.code,
                                name: p.name,
                                value: p.value
                            }); }));
                            executeForm.actualParameters = actPList;
                        }
                        _this.forms.push(executeForm);
                    }
                };
                try {
                    for (var formFormats_1 = tslib_1.__values(formFormats), formFormats_1_1 = formFormats_1.next(); !formFormats_1_1.done; formFormats_1_1 = formFormats_1.next()) {
                        var format = formFormats_1_1.value;
                        _loop_1(format);
                    }
                }
                catch (e_1_1) { e_1 = { error: e_1_1 }; }
                finally {
                    try {
                        if (formFormats_1_1 && !formFormats_1_1.done && (_a = formFormats_1.return)) _a.call(formFormats_1);
                    }
                    finally { if (e_1) throw e_1.error; }
                }
            }
        }));
    };
    /**
     * @private
     * @return {?}
     */
    AddExecuteFormComponent.prototype.getExecuteForms = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.state.flowFormInfo.flowForm.id && this.tab) {
            /** @type {?} */
            var url = "/api/runtime/wf/v1.0/excuteForm?flowFormKey=" + this.state.flowFormInfo.flowForm.id;
            return this.http.get(url).pipe(map((/**
             * @param {?} re
             * @return {?}
             */
            function (re) {
                if (_this.tab === 'web') {
                    return re.filter((/**
                     * @param {?} f
                     * @return {?}
                     */
                    function (f) { return f.terminal.indexOf('web') > -1; }));
                }
                else if (_this.tab === 'mobile') {
                    return re.filter((/**
                     * @param {?} f
                     * @return {?}
                     */
                    function (f) { return f.terminal.indexOf('app') > -1; }));
                }
            })));
        }
        else {
            return from(new Array());
        }
    };
    /**
     * @private
     * @return {?}
     */
    AddExecuteFormComponent.prototype.getFormFormats = /**
     * @private
     * @return {?}
     */
    function () {
        if (this.state.flowFormInfo.flowForm.businessObjectId && this.tab) {
            /** @type {?} */
            var terminal = this.tab === 'web' ? 'PC' : 'Mobile';
            /** @type {?} */
            var url = "/api/runtime/wf/v1.0/formFormat/query?param=";
            /** @type {?} */
            var param = "{\"bizCategory\":\"" + this.state.flowFormInfo.flowForm.businessObjectId + "\",\"terminal\":\"" + terminal + "\"}";
            param = encodeURIComponent(param);
            url += param;
            return this.http.get(url);
        }
        else {
            return from(new Array());
        }
    };
    AddExecuteFormComponent.decorators = [
        { type: Component, args: [{
                    selector: 'lib-add-execute-form',
                    template: "<div class=\"f-page f-page-is-managelist\">\r\n  <!-- <div class=\"f-page-header\">\r\n    <nav class=\"f-page-header-base mt-2 py-0\" style=\"min-height: 2rem;\">\r\n      <div class=\"f-title\">\r\n        <span class=\"f-title-icon f-text-orna-bill\">\r\n          <i class=\"f-icon f-icon-page-title-administer\"></i>\r\n        </span>\r\n        <h4 class=\"f-title-text\">\u8868\u5355\u683C\u5F0F\u5217\u8868</h4>\r\n      </div>\r\n      <div class=\"btn-toolbar btn-group-lg\">\r\n        <button class=\"btn btn-secondary mr-2\" (click)=\"selectOtherFormFormat()\">\r\n          \u5F15\u5165\u8868\u5355\u683C\u5F0F\r\n        </button>\r\n        <button class=\"btn btn-secondary\" (click)=\"selectOtherFunc()\">\r\n          \u5F15\u5165\u529F\u80FD\u83DC\u5355\r\n        </button>\r\n      </div>\r\n    </nav>\r\n  </div> -->\r\n  <div class=\"f-page-main my-0\">\r\n    <div class=\"f-struct-wrapper f-utils-fill-flex-column\">\r\n      <farris-section class=\"f-section-grid f-section-in-managelist p-2\" [showHeader]=\"false\">\r\n        <farris-datagrid class=\"f-component-grid\" [columns]=\"columns\" [data]=\"forms\" #grid\r\n          [idField]=\"'id'\" [showLineNumber]=\"true\" [striped]=\"true\"\r\n          [showCheckbox]=\"false\" [virtualized]=\"true\" [pagination]=\"false\" [fit]=\"true\" [fitColumns]=\"true\">\r\n        </farris-datagrid>\r\n      </farris-section>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #iconSelectFooter>\r\n  <button type=\"button\" class=\"btn btn-primary btn-sm mx-2\" (click)=\"clickOK()\">\u786E\u5B9A</button>\r\n  <button type=\"button\" class=\"btn btn-secondary btn-sm\" (click)=\"clickCancel()\">\u53D6\u6D88</button>\r\n</ng-template>\r\n\r\n<app-rtf-app-help #appHelper (afterHelpConfirm)=\"funcSelected($event)\" [isLayeredLoad]=\"true\">\r\n</app-rtf-app-help>\r\n\r\n<!-- \u5355\u636E\u683C\u5F0F\u5E2E\u52A9 -->\r\n<farris-lookup-grid #lookup style=\"display: none;\" [editable]=\"false\" [columns]=\"cols\" [singleSelect]=\"true\"\r\n  [title]=\"'\u5355\u636E\u683C\u5F0F'\" [displayType]=\"'List'\" [uri]=\"dataUri\" [idField]=\"'id'\" [pageIndex]=\"1\" [pageSize]=\"20\"\r\n  [pagination]=\"true\" [valueField]=\"'id'\" [textField]=\"'name'\" [dialogWidth]=\"550\" [dictPicked]=\"dictPicked\"\r\n  [dictPicking]=\"dictPicking\">\r\n</farris-lookup-grid>\r\n",
                    providers: [{ provide: ServerSideToken, useClass: FormFormatService }],
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    AddExecuteFormComponent.ctorParameters = function () { return [
        { type: ProcessDesignerUIState },
        { type: HttpService },
        { type: SessionService },
        { type: MessagerService }
    ]; };
    AddExecuteFormComponent.propDecorators = {
        modalFooter: [{ type: ViewChild, args: ['iconSelectFooter',] }],
        appHelper: [{ type: ViewChild, args: [RtfAppHelpComponent,] }],
        lookUp: [{ type: ViewChild, args: ['lookup',] }],
        grid: [{ type: ViewChild, args: ['grid',] }]
    };
    return AddExecuteFormComponent;
}());
export { AddExecuteFormComponent };
if (false) {
    /** @type {?} */
    AddExecuteFormComponent.prototype.modalFooter;
    /** @type {?} */
    AddExecuteFormComponent.prototype.appHelper;
    /** @type {?} */
    AddExecuteFormComponent.prototype.lookUp;
    /**
     * @type {?}
     * @private
     */
    AddExecuteFormComponent.prototype.grid;
    /** @type {?} */
    AddExecuteFormComponent.prototype.submit;
    /** @type {?} */
    AddExecuteFormComponent.prototype.cancel;
    /** @type {?} */
    AddExecuteFormComponent.prototype.tab;
    /** @type {?} */
    AddExecuteFormComponent.prototype.forms;
    /** @type {?} */
    AddExecuteFormComponent.prototype.columns;
    /** @type {?} */
    AddExecuteFormComponent.prototype.cols;
    /** @type {?} */
    AddExecuteFormComponent.prototype.dataUri;
    /** @type {?} */
    AddExecuteFormComponent.prototype.dictPicking;
    /** @type {?} */
    AddExecuteFormComponent.prototype.dictPicked;
    /**
     * @type {?}
     * @private
     */
    AddExecuteFormComponent.prototype.state;
    /**
     * @type {?}
     * @private
     */
    AddExecuteFormComponent.prototype.http;
    /**
     * @type {?}
     * @private
     */
    AddExecuteFormComponent.prototype.session;
    /**
     * @type {?}
     * @private
     */
    AddExecuteFormComponent.prototype.message;
}
//# sourceMappingURL=data:application/json;base64,