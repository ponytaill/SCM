/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, ViewChild, ElementRef, Injector, ComponentFactoryResolver, HostBinding, Output, EventEmitter } from '@angular/core';
import { ProcessTime } from './model/process-time';
import { DomSanitizer } from '@angular/platform-browser';
import { ProcessDesignerUIState } from './app/process-designer.uistate';
import { ResourceKeys } from './model/resourceKeys';
import { ProcessDesignerViewModel } from './app/process-designer.viewmodel';
import { ExecuteFormModel, TerminalType } from './views/execute-forms/entities/execute-form.entity';
import { BsModalService } from '@farris/ui-modal';
import { ProcessDesignerDataService } from './domain/process-designer.dataservice';
import { LoadingService } from '@farris/ui-loading';
import { NotifyService } from '@farris/ui-notify';
import { MessagerService } from '@farris/ui-messager';
import { WFFlowElementsViewModel } from './app/wf-flowElements.viewModel';
import { PropertyPanelComponent } from '@farris/ui-property-panel';
import { SignRuleComponent } from './views/sign-rule/sign-rule.component';
import { ProcessInfo } from './model/process-info';
import { RTProcessInfo } from './model/rt-process-info';
import { of } from 'rxjs';
import { AuditEvent } from './domain/entities/audit-processDef-info';
import { NoteComponent } from './views/note/note.component';
import { ProcessDeUtil } from './domain/process-de-util';
var WfProcessEditorComponent = /** @class */ (function () {
    function WfProcessEditorComponent(sanitizer, uiState, viewModel, service, loadService, notify, message, activity, injector, modalService, resolver) {
        var _this = this;
        this.sanitizer = sanitizer;
        this.uiState = uiState;
        this.viewModel = viewModel;
        this.service = service;
        this.loadService = loadService;
        this.notify = notify;
        this.message = message;
        this.activity = activity;
        this.injector = injector;
        this.modalService = modalService;
        this.resolver = resolver;
        this.flag = true;
        this.cls = 'farris-main-area flex-column';
        this.action = 'edit';
        this.mode = 'general';
        this.close = new EventEmitter();
        /**
         * 监听事件处理
         */
        this.eventHandler = (/**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            /** @type {?} */
            var postData = (/** @type {?} */ (event.data));
            if (_this.uiState.POST_MESSAGE_TARGET.search(event.origin) > -1) {
                switch (postData.action) {
                    case ResourceKeys.wf_initProperty:
                        if (_this.flag) {
                            _this.flag = false;
                            _this.closeLoading();
                        }
                        _this.viewModel.initProcessProperty(postData.data);
                        break;
                    case ResourceKeys.wf_save:
                        _this.uiState.content = postData.data;
                        _this.showLoading();
                        _this.save();
                        break;
                    case ResourceKeys.wf_deploy:
                        _this.uiState.content = postData.data;
                        _this.showLoading();
                        _this.viewModel.deployProcess(_this.uiState.content).subscribe((/**
                         * @param {?} data
                         * @return {?}
                         */
                        function (data) {
                            _this.closeLoading();
                            _this.viewModel.saveProcess(_this.uiState.content, _this.processInfo, 0).subscribe((/**
                             * @param {?} r
                             * @return {?}
                             */
                            function (r) { }));
                            _this.notify.success((/** @type {?} */ ({
                                title: '系统提示', msg: '发布成功', timeout: 3000
                            })));
                            /** @type {?} */
                            var process = JSON.parse(_this.uiState.content);
                            _this.viewModel.auditProcessDef(AuditEvent.WF_ProcessDef_Deploy, true, process.DefaultProcess.Key);
                        }), (/**
                         * @param {?} error
                         * @return {?}
                         */
                        function (error) {
                            _this.closeLoading();
                            _this.notify.error((/** @type {?} */ ({
                                title: '系统提示', msg: '发布失败，请检查流程是否正确！', timeout: 3000
                            })));
                            /** @type {?} */
                            var process = JSON.parse(_this.uiState.content);
                            _this.viewModel.auditProcessDef(AuditEvent.WF_ProcessDef_Deploy, false, process.DefaultProcess.Key);
                        }));
                        break;
                    case ResourceKeys.wf_saveAs:
                        /** @type {?} */
                        var prcoess = postData.data;
                        _this.viewModel.saveAsProcess(prcoess, _this.processInfo);
                        break;
                    case ResourceKeys.wf_sync:
                        /** @type {?} */
                        var content = postData.data;
                        _this.viewModel.syncDtProcess(content, _this.rtProcessInfo);
                        break;
                    case ResourceKeys.wf_note:
                        _this.note(postData.data);
                        break;
                    case ResourceKeys.wf_closeDesigner:
                        _this.close.emit();
                        break;
                    case ResourceKeys.getActivities: // 获取活动节点信息
                        _this.uiState.getUserActList(postData.data);
                        break;
                    case ResourceKeys.getEndEvents: // 获取所有结束节点信息
                        _this.uiState.getEndEventList(postData.data);
                        break;
                    case 'loaded':
                        _this.openProcContent();
                        break;
                    case ResourceKeys.wf_showTip:
                        _this.showTip(postData.data);
                        break;
                    default:
                        _this.viewModel.setProperty(postData.data);
                        break;
                }
            }
        });
        // 如果存在消息监听，先删掉
        if (WfProcessEditorComponent.func) {
            window.removeEventListener('message', WfProcessEditorComponent.func, false);
        }
        this.addMessageListener();
        this.uiState.getAdministratorInfo();
    }
    Object.defineProperty(WfProcessEditorComponent.prototype, "time", {
        get: /**
         * @return {?}
         */
        function () {
            return this._time;
        },
        set: /**
         * @param {?} t
         * @return {?}
         */
        function (t) {
            this._time = t;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    WfProcessEditorComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.getSrc();
        this.uiState.initUIState();
        this.showLoading();
        this.updateProperty();
        // 获取消息列表
        this.uiState.getMessageChannels();
    };
    /**
     * @private
     * @return {?}
     */
    WfProcessEditorComponent.prototype.getSrc = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var processCategoryId;
        if (this._time === ProcessTime.rt) {
            processCategoryId = this.rtProcessInfo.flowFormId;
        }
        else {
            processCategoryId = this.processInfo.flowFormId;
        }
        this.viewModel.getProcessCategory(processCategoryId).subscribe((/**
         * @param {?} procCategory
         * @return {?}
         */
        function (procCategory) {
            _this.src = '/platform/runtime/wf/web/designer/index.html';
            if (_this._time === ProcessTime.rt) {
                _this.src = _this.src + '?time=rt';
            }
            else {
                _this.src = _this.src + "?time=dt";
                if (procCategory) {
                    _this.src = _this.src + ("&bizCategoryId=" + procCategory.businessObjectId);
                }
            }
            if (_this.action === 'view') {
                _this.src = _this.src + '&action=view';
            }
            else {
                _this.src = _this.src + '&action=edit';
            }
            if (_this.mode === 'general') {
                _this.src = _this.src + '&mode=general';
            }
            else {
                _this.src = _this.src + '&mode=simplify';
            }
            _this.src = _this.sanitizer.bypassSecurityTrustResourceUrl(_this.src);
        }));
    };
    /**
     * 添加事件监听
     */
    /**
     * 添加事件监听
     * @private
     * @return {?}
     */
    WfProcessEditorComponent.prototype.addMessageListener = /**
     * 添加事件监听
     * @private
     * @return {?}
     */
    function () {
        window.addEventListener('message', this.eventHandler, false);
        WfProcessEditorComponent.func = this.eventHandler;
    };
    /**
     * @private
     * @return {?}
     */
    WfProcessEditorComponent.prototype.updateProperty = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        this.propertyPanel.propertyChanged.subscribe((/**
         * @param {?} data
         * @return {?}
         */
        function (data) {
            _this.updateChangeProperty(data);
        }));
        this.propertyPanel.submitModal.subscribe((/**
         * @param {?} data
         * @return {?}
         */
        function (data) {
            _this.updateChangeProperty(data.changeObject);
        }));
        return false; // 防止冒泡
    };
    /**
     * 更新属性
     */
    /**
     * 更新属性
     * @private
     * @param {?} data
     * @return {?}
     */
    WfProcessEditorComponent.prototype.updateChangeProperty = /**
     * 更新属性
     * @private
     * @param {?} data
     * @return {?}
     */
    function (data) {
        var _this = this;
        data.Id = this.uiState.propertyData.Id;
        switch (data.propertyID) {
            case ResourceKeys.EntryForm:
                this.bindEntryFormInfo(data);
                break;
            case ResourceKeys.ApprovalItems:
                this.sendMessage(ResourceKeys.updateProperty, JSON.stringify(data));
                this.activity.buildCounterSignVariables(data.propertyValue);
                break;
            case ResourceKeys.CompleteStrategy:
                this.beforeCompleteStrategyChange(data).subscribe((/**
                 * @param {?} b
                 * @return {?}
                 */
                function (b) {
                    if (b) {
                        _this.sendMessage(ResourceKeys.updateProperty, JSON.stringify(data));
                        _this.completeStrategyChanged(data.propertyValue);
                    }
                    else { // 刷新属性框
                        _this.sendMessage(ResourceKeys.refresh, JSON.stringify(data));
                    }
                }));
                break;
            case ResourceKeys.SignRule:
                this.sendMessage(ResourceKeys.updateProperty, JSON.stringify(data));
                break;
            default:
                this.sendMessage(ResourceKeys.updateProperty, JSON.stringify(data));
                break;
        }
    };
    /**
     * 绑定流程分类的参数列表，流程构件，表单赋值
     * @param data
     */
    /**
     * 绑定流程分类的参数列表，流程构件，表单赋值
     * @private
     * @param {?} data
     * @return {?}
     */
    WfProcessEditorComponent.prototype.bindEntryFormInfo = /**
     * 绑定流程分类的参数列表，流程构件，表单赋值
     * @private
     * @param {?} data
     * @return {?}
     */
    function (data) {
        var _this = this;
        /** @type {?} */
        var flowformId = data.propertyValue.id;
        if (flowformId) {
            this.viewModel.getFlowFormInfoById(flowformId).subscribe((/**
             * @param {?} info
             * @return {?}
             */
            function (info) {
                data.flowForm = info.flowForm;
                data.formalParameters = info.formalParameters;
                data.processBizComponnets = info.bizComponents;
                data.executeForms = [];
                info.excuteForms.forEach((/**
                 * @param {?} form
                 * @return {?}
                 */
                function (form) {
                    if (form.isDefault) {
                        /** @type {?} */
                        var executeForms = _this.ConvertExecuteForm(form);
                        data.executeForms = data.executeForms.concat(executeForms); // 流程绑定默认单据
                    }
                }));
                data.customizeActions = info.customizeActions.filter((/**
                 * @param {?} a
                 * @return {?}
                 */
                function (a) { return a.isAll === true; })).map((/**
                 * @param {?} a
                 * @return {?}
                 */
                function (a) { return ({
                    id: a.id, code: a.code, name: a.name, terminalType: a.terminal,
                    actualParameters: a.actualParameters.map((/**
                     * @param {?} p
                     * @return {?}
                     */
                    function (p) { return ({
                        Name: p.code, Value: p.value, ValueText: p.name, Tag: 'expression'
                    }); }))
                }); }));
                _this.sendMessage(ResourceKeys.loadBizActivity, info.bizActivities || []);
                _this.sendMessage(ResourceKeys.updateProperty, JSON.stringify(data));
            }));
        }
    };
    /**
     * @private
     * @param {?} record
     * @return {?}
     */
    WfProcessEditorComponent.prototype.note = /**
     * @private
     * @param {?} record
     * @return {?}
     */
    function (record) {
        var _this = this;
        /** @type {?} */
        var compFactory = this.resolver.resolveComponentFactory(NoteComponent);
        /** @type {?} */
        var compRef = compFactory.create(this.injector);
        compRef.instance.record = record;
        /** @type {?} */
        var modalConfig = {
            title: '流程变更记录',
            width: 800,
            height: 520,
            showButtons: true,
            buttons: compRef.instance.footer
        };
        /** @type {?} */
        var dialog = this.modalService.show(compRef, modalConfig);
        compRef.instance.cancel.subscribe((/**
         * @param {?} $event
         * @return {?}
         */
        function ($event) { return dialog.close(); }));
        compRef.instance.submit.subscribe((/**
         * @param {?} data
         * @return {?}
         */
        function (data) {
            _this.sendMessage(ResourceKeys.wf_note, data);
            dialog.close();
        }));
    };
    /**
     * @private
     * @return {?}
     */
    WfProcessEditorComponent.prototype.openProcContent = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.time === ProcessTime.dt) {
            if (this.processInfo) {
                if (this.processInfo.processKey === ResourceKeys.new && this.processInfo.flowFormId) {
                    this.openNewProcess(this.processInfo.flowFormId);
                }
                else {
                    // TODO：首先获取流程分类信息，确保流程分类和流程构件获取到（会稍微影响设计器打开速度）
                    this.viewModel.getFlowFormInfoById(this.processInfo.flowFormId).subscribe((/**
                     * @param {?} info
                     * @return {?}
                     */
                    function (info) {
                        _this.sendMessage(ResourceKeys.loadBizActivity, info.bizActivities || []);
                        _this.getProcContent(_this.processInfo.processKey).subscribe((/**
                         * @param {?} re
                         * @return {?}
                         */
                        function (re) {
                            _this.uiState.content = _this.checkModelContent(JSON.stringify(re));
                            _this.sendMessage(ResourceKeys.open, {
                                content: _this.uiState.content
                            });
                        }));
                    }));
                }
            }
            else {
                throw new Error('不存在设计时流程信息！请先赋值！');
            }
        }
        else if (this.time === ProcessTime.rt) {
            if (this.rtProcessInfo) {
                this.viewModel.getFlowFormInfoById(this.rtProcessInfo.flowFormId).subscribe((/**
                 * @param {?} info
                 * @return {?}
                 */
                function (info) {
                    _this.sendMessage(ResourceKeys.loadBizActivity, info.bizActivities || []);
                    _this.getProcContent(_this.rtProcessInfo.rtProcDefId).subscribe((/**
                     * @param {?} re
                     * @return {?}
                     */
                    function (re) {
                        _this.uiState.content = _this.checkModelContent(JSON.stringify(re));
                        _this.sendMessage(ResourceKeys.open, {
                            content: _this.uiState.content
                        });
                    }));
                }));
            }
            else {
                throw new Error('不存在运行时流程信息！请先赋值！');
            }
        }
    };
    /**
     * 新增流程，基于流程分类获取参数列表，构件和表单
     * @param ffId 流程分类ID
     */
    /**
     * 新增流程，基于流程分类获取参数列表，构件和表单
     * @private
     * @param {?} ffId 流程分类ID
     * @return {?}
     */
    WfProcessEditorComponent.prototype.openNewProcess = /**
     * 新增流程，基于流程分类获取参数列表，构件和表单
     * @private
     * @param {?} ffId 流程分类ID
     * @return {?}
     */
    function (ffId) {
        var _this = this;
        this.viewModel.getFlowFormInfoById(ffId)
            .subscribe((/**
         * @param {?} info
         * @return {?}
         */
        function (info) {
            /** @type {?} */
            var processBizComponnets = info.bizComponents;
            /** @type {?} */
            var customizeActions = info.customizeActions.filter((/**
             * @param {?} a
             * @return {?}
             */
            function (a) { return a.isAll === true; })).map((/**
             * @param {?} a
             * @return {?}
             */
            function (a) { return ({
                id: a.id, code: a.code, name: a.name, terminalType: a.terminal,
                actualParameters: a.actualParameters.map((/**
                 * @param {?} p
                 * @return {?}
                 */
                function (p) { return ({
                    Name: p.code, Value: p.value, ValueText: p.name, Tag: 'expression'
                }); }))
            }); }));
            /** @type {?} */
            var executeForms = [];
            info.excuteForms.forEach((/**
             * @param {?} form
             * @return {?}
             */
            function (form) {
                if (form.isDefault) {
                    /** @type {?} */
                    var forms = _this.ConvertExecuteForm(form);
                    executeForms = executeForms.concat(forms); // 流程绑定默认单据
                }
            }));
            // 如果不存在表单定义，需要去表单格式列表取一下
            if (executeForms.length === 0
                || executeForms.findIndex((/**
                 * @param {?} e
                 * @return {?}
                 */
                function (e) { return e.TerminalType === TerminalType.PC; })) === -1
                || executeForms.findIndex((/**
                 * @param {?} e
                 * @return {?}
                 */
                function (e) { return e.TerminalType === TerminalType.MOBILE; })) === -1) {
                _this.viewModel.getFormFormatsByBizCategory().subscribe((/**
                 * @param {?} formFormats
                 * @return {?}
                 */
                function (formFormats) {
                    if (formFormats && formFormats.length > 0) {
                        if (executeForms.findIndex((/**
                         * @param {?} e
                         * @return {?}
                         */
                        function (e) { return e.TerminalType === TerminalType.PC; })) === -1) {
                            /** @type {?} */
                            var formFormat = formFormats.filter((/**
                             * @param {?} f
                             * @return {?}
                             */
                            function (f) { return f.terminal === 'PC' && f.status === 0; }))[0];
                            if (formFormat) {
                                executeForms.push(_this.formFormat2ExecuteForm(formFormat));
                            }
                        }
                        if (executeForms.findIndex((/**
                         * @param {?} e
                         * @return {?}
                         */
                        function (e) { return e.TerminalType === TerminalType.MOBILE; })) === -1) {
                            /** @type {?} */
                            var formFormat = formFormats.filter((/**
                             * @param {?} f
                             * @return {?}
                             */
                            function (f) { return f.terminal === 'Mobile' && f.status === 0; }))[0];
                            if (formFormat) {
                                executeForms.push(_this.formFormat2ExecuteForm(formFormat));
                            }
                        }
                    }
                    _this.sendMessage(ResourceKeys.loadBizActivity, info.bizActivities || []);
                    _this.sendMessage(ResourceKeys.new, {
                        name: _this.processInfo.processName,
                        bizObjId: _this.processInfo.bizObjId,
                        ffId: ffId,
                        ffName: _this.processInfo.flowFormName,
                        startMode: _this.processInfo.startMode,
                        formalParameters: info.formalParameters,
                        processBizComponnets: processBizComponnets,
                        executeForms: executeForms,
                        customizeActions: customizeActions,
                        processDescription: info.flowForm.processDescription
                    });
                }));
            }
            else {
                _this.sendMessage(ResourceKeys.loadBizActivity, info.bizActivities || []);
                _this.sendMessage(ResourceKeys.new, {
                    name: _this.processInfo.processName,
                    bizObjId: _this.processInfo.bizObjId,
                    ffId: ffId,
                    ffName: _this.processInfo.flowFormName,
                    startMode: _this.processInfo.startMode,
                    formalParameters: info.formalParameters,
                    processBizComponnets: processBizComponnets,
                    executeForms: executeForms,
                    customizeActions: customizeActions,
                    processDescription: info.flowForm.processDescription
                });
            }
        }));
    };
    // 向子页面发送消息
    // 向子页面发送消息
    /**
     * @private
     * @param {?} action
     * @param {?} data
     * @return {?}
     */
    WfProcessEditorComponent.prototype.sendMessage = 
    // 向子页面发送消息
    /**
     * @private
     * @param {?} action
     * @param {?} data
     * @return {?}
     */
    function (action, data) {
        /** @type {?} */
        var iframeWindow = this.iframe.nativeElement.contentWindow;
        /** @type {?} */
        var message = this.wrapMessage(action, data);
        iframeWindow.postMessage(message, this.uiState.POST_MESSAGE_TARGET);
    };
    // 包装消息内容
    // 包装消息内容
    /**
     * @private
     * @param {?} action
     * @param {?} data
     * @return {?}
     */
    WfProcessEditorComponent.prototype.wrapMessage = 
    // 包装消息内容
    /**
     * @private
     * @param {?} action
     * @param {?} data
     * @return {?}
     */
    function (action, data) {
        return {
            action: action,
            data: data
        };
    };
    /**
     * @private
     * @param {?} data
     * @return {?}
     */
    WfProcessEditorComponent.prototype.showTip = /**
     * @private
     * @param {?} data
     * @return {?}
     */
    function (data) {
        if (data.type === 'message') {
            switch (data.level) {
                case 'warning':
                    this.message.warning(data.message);
                    break;
                case 'error':
                    this.message.error(data.message);
                    break;
                default:
                    this.message.info(data.message);
                    break;
            }
        }
        else if (data.type === 'notify') {
            switch (data.level) {
                case 'warning':
                    this.notify.warning(data.message);
                    break;
                case 'error':
                    this.notify.error(data.message);
                    break;
                default:
                    this.notify.info(data.message);
                    break;
            }
        }
    };
    /**
     * 获取流程上下文
     * @param id 流程定义ID（设计时使用流程定义Key，运行时使用流程定义ID）
     */
    /**
     * 获取流程上下文
     * @param {?} id 流程定义ID（设计时使用流程定义Key，运行时使用流程定义ID）
     * @return {?}
     */
    WfProcessEditorComponent.prototype.getProcContent = /**
     * 获取流程上下文
     * @param {?} id 流程定义ID（设计时使用流程定义Key，运行时使用流程定义ID）
     * @return {?}
     */
    function (id) {
        if (id) {
            if (this.time === ProcessTime.dt) {
                return this.service.getProcContentbyKey(id);
            }
            else if (this.time === ProcessTime.rt) {
                return this.service.getRTProcContentbyId(id);
            }
            else {
                throw new Error('设计器运行时机错误！');
            }
        }
    };
    /**
     * @private
     * @return {?}
     */
    WfProcessEditorComponent.prototype.save = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var process = JSON.parse(this.uiState.content);
        // this.uiState.content = this.checkModelContent(this.uiState.content);
        this.saveHttp().subscribe((/**
         * @param {?} data
         * @return {?}
         */
        function (data) {
            _this.closeLoading();
            _this.notify.success((/** @type {?} */ ({
                title: '系统提示', msg: '保存成功', timeout: 3000
            })));
            if (_this.time === ProcessTime.dt) {
                _this.viewModel.auditProcessDef(AuditEvent.WF_ProcessDef_SaveDT, true, process.DefaultProcess.Key);
            }
            else if (_this.time === ProcessTime.rt) {
                _this.viewModel.auditProcessDef(AuditEvent.WF_ProcessDef_SaveRT, true, process.DefaultProcess.Key);
            }
        }), (/**
         * @param {?} error
         * @return {?}
         */
        function (error) {
            _this.closeLoading();
            _this.notify.error((/** @type {?} */ ({
                title: '系统提示', msg: '保存失败，请检查流程是否正确！', timeout: 3000
            })));
            if (_this.time === ProcessTime.dt) {
                _this.viewModel.auditProcessDef(AuditEvent.WF_ProcessDef_SaveDT, false, process.DefaultProcess.Key);
            }
            else if (_this.time === ProcessTime.rt) {
                _this.viewModel.auditProcessDef(AuditEvent.WF_ProcessDef_SaveRT, false, process.DefaultProcess.Key);
            }
        }));
    };
    /**
     * 保存流程定义（设计时+运行时）
     */
    /**
     * 保存流程定义（设计时+运行时）
     * @private
     * @return {?}
     */
    WfProcessEditorComponent.prototype.saveHttp = /**
     * 保存流程定义（设计时+运行时）
     * @private
     * @return {?}
     */
    function () {
        if (this.uiState.content) {
            if (this.time === ProcessTime.dt) {
                return this.viewModel.saveProcess(this.uiState.content, this.processInfo, 1);
            }
            else if (this.time === ProcessTime.rt) {
                return this.viewModel.saveRTProcess(this.uiState.content, this.rtProcessInfo.rtProcDefId);
            }
            else {
                throw new Error('设计器运行时机错误！');
            }
        }
    };
    /**
     * @return {?}
     */
    WfProcessEditorComponent.prototype.showLoading = /**
     * @return {?}
     */
    function () {
        this.loadService.show({ container: 'body', message: '', type: 1 });
    };
    /**
     * @return {?}
     */
    WfProcessEditorComponent.prototype.closeLoading = /**
     * @return {?}
     */
    function () {
        this.loadService.close();
    };
    /**
     * @private
     * @param {?} form
     * @return {?}
     */
    WfProcessEditorComponent.prototype.ConvertExecuteForm = /**
     * @private
     * @param {?} form
     * @return {?}
     */
    function (form) {
        /** @type {?} */
        var executeForms = new Array();
        if (form.terminal === 'web,app') {
            /** @type {?} */
            var webForm = new ExecuteFormModel();
            webForm.ComponentId = form.appId;
            webForm.formFormatId = form.formFormatId;
            webForm.FormType = form.formType;
            webForm.Name = form.name;
            webForm.TerminalType = TerminalType.PC;
            if (form.actualParameters && form.actualParameters.length > 0) {
                webForm.ActualParameters = form.actualParameters.map((/**
                 * @param {?} p
                 * @return {?}
                 */
                function (p) { return ({
                    Name: p.code,
                    Value: p.value
                }); }));
            }
            executeForms.push(webForm);
            /** @type {?} */
            var appForm = new ExecuteFormModel();
            appForm.ComponentId = form.appId;
            appForm.formFormatId = form.formFormatId;
            appForm.FormType = form.formType;
            appForm.Name = form.name;
            appForm.TerminalType = TerminalType.MOBILE;
            if (form.actualParameters && form.actualParameters.length > 0) {
                appForm.ActualParameters = form.actualParameters.map((/**
                 * @param {?} p
                 * @return {?}
                 */
                function (p) { return ({
                    Name: p.code,
                    Value: p.value
                }); }));
            }
            executeForms.push(appForm);
        }
        else {
            /** @type {?} */
            var executeForm = new ExecuteFormModel();
            executeForm.ComponentId = form.appId;
            executeForm.formFormatId = form.formFormatId;
            executeForm.FormType = form.formType;
            executeForm.Name = form.name;
            switch (form.terminal) {
                case 'web':
                    executeForm.TerminalType = TerminalType.PC;
                    break;
                case 'app':
                    executeForm.TerminalType = TerminalType.MOBILE;
                    break;
            }
            if (form.actualParameters && form.actualParameters.length > 0) {
                executeForm.ActualParameters = form.actualParameters.map((/**
                 * @param {?} p
                 * @return {?}
                 */
                function (p) { return ({
                    Name: p.code,
                    Value: p.value
                }); }));
            }
            executeForms.push(executeForm);
        }
        return executeForms;
    };
    /**
     * @private
     * @param {?} formformat
     * @return {?}
     */
    WfProcessEditorComponent.prototype.formFormat2ExecuteForm = /**
     * @private
     * @param {?} formformat
     * @return {?}
     */
    function (formformat) {
        /** @type {?} */
        var form = new ExecuteFormModel();
        form.Id = ProcessDeUtil.GenerateElementId();
        form.ComponentId = null;
        form.formFormatId = formformat.id;
        form.FormType = '0';
        form.Name = formformat.name;
        switch (formformat.terminal) {
            case 'PC':
                form.TerminalType = TerminalType.PC;
                break;
            case 'Mobile':
                form.TerminalType = TerminalType.MOBILE;
                break;
        }
        if (formformat.urlParameters && formformat.urlParameters.length > 0) {
            form.ActualParameters = formformat.urlParameters.map((/**
             * @param {?} p
             * @return {?}
             */
            function (p) { return ({
                Name: p.code,
                Value: p.value
            }); }));
        }
        return form;
    };
    /**
     * @private
     * @param {?} strategy
     * @return {?}
     */
    WfProcessEditorComponent.prototype.completeStrategyChanged = /**
     * @private
     * @param {?} strategy
     * @return {?}
     */
    function (strategy) {
        var _this = this;
        if (strategy !== this.uiState.completeIterator[0].key) {
            // 参与者存在自动审批的情况下，不允许修改完成策略为会签规则
            // if (this.uiState.propertyData.ParticipantSchemes
            //   && this.uiState.propertyData.ParticipantSchemes.options
            //   && this.uiState.propertyData.ParticipantSchemes.options.automaticPerformers
            //   && this.uiState.propertyData.ParticipantSchemes.options.automaticPerformers.length > 0) {
            //   return;
            // } else {
            // 会签规则不存在，即由抢占模式，变为会签时
            if (!this.uiState.propertyData.SignRule) {
                // 会签是自动弹出会签规则编辑
                /** @type {?} */
                var compFactory = this.resolver.resolveComponentFactory(SignRuleComponent);
                /** @type {?} */
                var compRef = compFactory.create(this.injector);
                compRef.instance.value = [];
                // compRef.instance.counterSignVariables = this.uiState.counterSignVariables || [];
                // compRef.instance.approvalItems = this.uiState.approvalItems || [];
                /** @type {?} */
                var modalConfig = Object.assign(compRef.instance.modalConfig, { buttons: compRef.instance.modalFooter });
                /** @type {?} */
                var dialog_1 = this.modalService.show(compRef, modalConfig);
                compRef.instance.closeModal.subscribe((/**
                 * @param {?} $event
                 * @return {?}
                 */
                function ($event) { return dialog_1.close(); }));
                compRef.instance.submitModal.subscribe((/**
                 * @param {?} data
                 * @return {?}
                 */
                function (data) {
                    _this.updateChangeProperty({
                        categoryId: 'performerProperty',
                        propertyID: ResourceKeys.SignRule,
                        propertyValue: data.value
                    });
                    dialog_1.close();
                }));
            }
            // 会签规则下，驳回规则约束
            if (((/** @type {?} */ (this.uiState.propertyData.BackWardRule))).SelectTargetAble === true) {
                setTimeout((/**
                 * @return {?}
                 */
                function () {
                    _this.message.warning('会签策略下,“驳回规则”不允许“动态选择驳回级次”，请修改！');
                }), 500);
            }
            // }
        }
    };
    /**
     * 完成策略调整校验
     */
    /**
     * 完成策略调整校验
     * @private
     * @param {?} data
     * @return {?}
     */
    WfProcessEditorComponent.prototype.beforeCompleteStrategyChange = /**
     * 完成策略调整校验
     * @private
     * @param {?} data
     * @return {?}
     */
    function (data) {
        if (this.time === ProcessTime.rt) {
            return this.viewModel.beforeCompleteStrategyChange(data, this.rtProcessInfo);
        }
        else {
            return of(true);
        }
    };
    /**
     * 保存，发布，另存，同步操作时
     * 校验模型的流程分类ID与列表存储是否一致，不一致时，以列表为准
     */
    /**
     * 保存，发布，另存，同步操作时
     * 校验模型的流程分类ID与列表存储是否一致，不一致时，以列表为准
     * @private
     * @param {?} content
     * @return {?}
     */
    WfProcessEditorComponent.prototype.checkModelContent = /**
     * 保存，发布，另存，同步操作时
     * 校验模型的流程分类ID与列表存储是否一致，不一致时，以列表为准
     * @private
     * @param {?} content
     * @return {?}
     */
    function (content) {
        /** @type {?} */
        var process = JSON.parse(content);
        /** @type {?} */
        var modelBizDefKey = process.DefaultProcess.extensionElements.find((/**
         * @param {?} e
         * @return {?}
         */
        function (e) { return e.ClrTypeID === 'wf.ProcessHeader'; })).BizDefKey;
        if (this.time === ProcessTime.dt) {
            if (modelBizDefKey === this.processInfo.flowFormId) {
                return content;
            }
            else {
                process.DefaultProcess.extensionElements.find((/**
                 * @param {?} e
                 * @return {?}
                 */
                function (e) { return e.ClrTypeID === 'wf.ProcessHeader'; })).BizDefKey = this.processInfo.flowFormId;
                process.DefaultProcess.extensionElements.find((/**
                 * @param {?} e
                 * @return {?}
                 */
                function (e) { return e.ClrTypeID === 'wf.ProcessHeader'; })).BizDefName = this.uiState.flowFormInfo.flowForm.name;
                return JSON.stringify(process);
            }
        }
        else if (this.time === ProcessTime.rt) {
            if (modelBizDefKey === this.rtProcessInfo.flowFormId) {
                return content;
            }
            else {
                process.DefaultProcess.extensionElements.find((/**
                 * @param {?} e
                 * @return {?}
                 */
                function (e) { return e.ClrTypeID === 'wf.ProcessHeader'; })).BizDefKey = this.rtProcessInfo.flowFormId;
                process.DefaultProcess.extensionElements.find((/**
                 * @param {?} e
                 * @return {?}
                 */
                function (e) { return e.ClrTypeID === 'wf.ProcessHeader'; })).BizDefName = this.uiState.flowFormInfo.flowForm.name;
                return JSON.stringify(process);
            }
        }
    };
    /**
     * 消息监听处理方法
     */
    WfProcessEditorComponent.func = null;
    WfProcessEditorComponent.decorators = [
        { type: Component, args: [{
                    selector: 'wf-process-editor',
                    template: "\n  <div class=\"f-utils-flex-column h-100 m-2\">\n    <div class=\"flex-auto d-flex flex-fill flex-row\" style=\"position:relative; overflow: hidden\">\n      <div class=\"flex-grow-1\">\n        <div *ngIf=\"src\" class=\"h-100\">\n          <iframe #iframe class=\"bpmn-designer\" [src]=\"src\" frameborder=\"0\">\n          </iframe>\n        </div>\n      </div>\n      <div>\n        <app-property-panel #propertyPanel [(propertyConfig)]=\"uiState.propertyConfig\" [(propertyData)]=\"uiState.propertyData\"\n          width=\"235\" showCloseBtn=\"false\"></app-property-panel>\n      </div>\n    </div>\n  </div>",
                    styles: ["\n    .bpmn-designer {\n      height: 100%;\n      min-height: 400px;\n      width: 100%;\n    }"]
                }] }
    ];
    /** @nocollapse */
    WfProcessEditorComponent.ctorParameters = function () { return [
        { type: DomSanitizer },
        { type: ProcessDesignerUIState },
        { type: ProcessDesignerViewModel },
        { type: ProcessDesignerDataService },
        { type: LoadingService },
        { type: NotifyService },
        { type: MessagerService },
        { type: WFFlowElementsViewModel },
        { type: Injector },
        { type: BsModalService },
        { type: ComponentFactoryResolver }
    ]; };
    WfProcessEditorComponent.propDecorators = {
        cls: [{ type: HostBinding, args: ['class',] }],
        time: [{ type: Input }],
        processInfo: [{ type: Input }],
        rtProcessInfo: [{ type: Input }],
        action: [{ type: Input }],
        mode: [{ type: Input }],
        close: [{ type: Output }],
        propertyPanel: [{ type: ViewChild, args: ['propertyPanel',] }],
        iframe: [{ type: ViewChild, args: ['iframe',] }]
    };
    return WfProcessEditorComponent;
}());
export { WfProcessEditorComponent };
if (false) {
    /**
     * 消息监听处理方法
     * @type {?}
     * @private
     */
    WfProcessEditorComponent.func;
    /** @type {?} */
    WfProcessEditorComponent.prototype.src;
    /**
     * @type {?}
     * @private
     */
    WfProcessEditorComponent.prototype.flag;
    /** @type {?} */
    WfProcessEditorComponent.prototype.cls;
    /**
     * @type {?}
     * @private
     */
    WfProcessEditorComponent.prototype._time;
    /** @type {?} */
    WfProcessEditorComponent.prototype.processInfo;
    /** @type {?} */
    WfProcessEditorComponent.prototype.rtProcessInfo;
    /** @type {?} */
    WfProcessEditorComponent.prototype.action;
    /** @type {?} */
    WfProcessEditorComponent.prototype.mode;
    /** @type {?} */
    WfProcessEditorComponent.prototype.close;
    /** @type {?} */
    WfProcessEditorComponent.prototype.propertyPanel;
    /** @type {?} */
    WfProcessEditorComponent.prototype.iframe;
    /**
     * 监听事件处理
     * @type {?}
     */
    WfProcessEditorComponent.prototype.eventHandler;
    /**
     * @type {?}
     * @private
     */
    WfProcessEditorComponent.prototype.sanitizer;
    /** @type {?} */
    WfProcessEditorComponent.prototype.uiState;
    /**
     * @type {?}
     * @private
     */
    WfProcessEditorComponent.prototype.viewModel;
    /**
     * @type {?}
     * @private
     */
    WfProcessEditorComponent.prototype.service;
    /**
     * @type {?}
     * @private
     */
    WfProcessEditorComponent.prototype.loadService;
    /**
     * @type {?}
     * @private
     */
    WfProcessEditorComponent.prototype.notify;
    /**
     * @type {?}
     * @private
     */
    WfProcessEditorComponent.prototype.message;
    /**
     * @type {?}
     * @private
     */
    WfProcessEditorComponent.prototype.activity;
    /**
     * @type {?}
     * @private
     */
    WfProcessEditorComponent.prototype.injector;
    /**
     * @type {?}
     * @private
     */
    WfProcessEditorComponent.prototype.modalService;
    /**
     * @type {?}
     * @private
     */
    WfProcessEditorComponent.prototype.resolver;
}
//# sourceMappingURL=data:application/json;base64,