import { OnInit, TemplateRef, Injector } from '@angular/core';
import { FileInfo } from '../entity/fileinfo';
import { DocType } from '../entity/doctype';
import { UploadService } from '../upload.service';
import { UploadFileInfo } from '../entity/uploadfileinfo';
import { MessagerService } from '@farris/ui-messager';
import { Observable } from 'rxjs';
import { GspFormUploadEntity } from '../entity/gspformuploadentity';
import { StorageExtension } from '../entity/storageextension';
import { ExStorageFileInfo } from '../entity/extensionstoragefileinfo';
import { DropListEntity } from '../entity/droplistentity';
import { LoadingService } from '@farris/ui-loading';
export declare class FileUploadComponent implements OnInit {
    private msgService;
    private uploadService;
    private loadService;
    private injector?;
    files: FileInfo[];
    metadataIdList: string[];
    uploadFileInfoList: UploadFileInfo[];
    errFileList: string[];
    errTypeList: string[];
    nullFileList: string[];
    showType: number;
    mouseOn: boolean;
    bufferSize: number;
    selectedFiles: any;
    selectedFileCount: number;
    uploadIconAddress: string;
    uploadLittleIconAddress: string;
    hasSelectedFile: boolean;
    fileAllSelected: boolean;
    uploadProcess: {
        width: string;
    };
    fileTotalChunk: {
        [key: string]: number;
    };
    requestArray: Array<Observable<any>>;
    requestBodyArray: Array<GspFormUploadEntity>;
    uploadedChunk: {
        [key: string]: number;
    };
    uploadedProcess: {
        [key: string]: number;
    };
    storageExtension: StorageExtension;
    defaultPropertyName: string;
    propertiesNames: DropListEntity[];
    queueListStyle: {
        width: string;
    };
    dropListValue: string;
    uploadedFileTotal: number;
    haveExtensionProperty: boolean;
    uploadedFileInfoList: any[];
    oldUploadedFileList: any[];
    sameNameAllowed: boolean;
    constructor(msgService: MessagerService, uploadService: UploadService, loadService: LoadingService, injector?: Injector);
    formId: string;
    rootId: string;
    fileType: string;
    fileCount: number;
    oldIdList: string[];
    opCell: TemplateRef<any>;
    ngOnInit(): void;
    fileSelected($event: any): void;
    showErrorMessage(file: any): void;
    uploadFile(uuid: string, selectedFile: any, fileName: string): void;
    selectAllFile(): void;
    checkoutSelectFile(file: FileInfo): void;
    listDeleteFile(fileInfo: FileInfo): void;
    listMultipleDeleteFile(): void;
    getPicListDisplayName(fileName: string): string;
    getQueueDisplayName(fileName: string): string;
    addDocInfo(selectdFile: any, fileInfo: FileInfo, docType: DocType): void;
    listToString(strList: string[]): string;
    exStorageFileList: ExStorageFileInfo[];
    typeChange($event: any, file: FileInfo): void;
    upload(): Observable<any>;
    cancel(): void;
    getUploadFileInfoList(): UploadFileInfo[];
    delete(file: any): void;
    getFileSize(size: number): string;
    showByGroup(): void;
    showByList(): void;
    mouseOver(file: any): void;
    mouseOut(file: any): void;
}
