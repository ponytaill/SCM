/**
 * @fileoverview added by tsickle
 * Generated from: lib/entity/impl/DocumentRelationEntity.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { BpmnModelJsonHelper, Entity } from '@edp-aif/common-api';
import { AssociationLocation } from './AssociationLocation';
import { RelationType } from './RelationType';
import { TrackingMode } from './TrackingMode';
import { TrackingType } from './TrackingType';
var DocumentRelationEntity = /** @class */ (function (_super) {
    tslib_1.__extends(DocumentRelationEntity, _super);
    function DocumentRelationEntity() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.sysInit = false;
        _this.trackingType = TrackingType.DEFAULT;
        _this.trackingMode = TrackingMode.DEFAULT;
        _this.associationLocation = AssociationLocation.DEFAULT;
        _this.relationType = RelationType.DEFAULT;
        return _this;
    }
    /**
     * @protected
     * @return {?}
     */
    DocumentRelationEntity.prototype.ResetBeforeLoadFrom = /**
     * @protected
     * @return {?}
     */
    function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
        this.code = null;
        this.name = null;
        this.sysInit = false;
        this.upDocuTypeId = null;
        this.downDocuTypeId = null;
        this.trackingType = TrackingType.DEFAULT;
        this.trackingMode = TrackingMode.DEFAULT;
        this.associationLocation = AssociationLocation.DEFAULT;
        this.associationSuCode = null;
        this.associationSchemaId = null;
        this.associationDataSourceType = null;
        this.relationType = RelationType.DEFAULT;
        this.colI18nValues = null;
        this.trackingComponentId = null;
    };
    /**
     * @return {?}
     */
    DocumentRelationEntity.prototype.ConvertToJsonObject = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        BpmnModelJsonHelper.SetAttributeValue(obj, 'code', this.code);
        BpmnModelJsonHelper.SetAttributeValue(obj, 'name', this.name);
        BpmnModelJsonHelper.SetAttributeValue(obj, 'sysInit', this.sysInit);
        BpmnModelJsonHelper.SetAttributeValue(obj, 'upDocuTypeId', this.upDocuTypeId);
        BpmnModelJsonHelper.SetAttributeValue(obj, 'downDocuTypeId', this.downDocuTypeId);
        BpmnModelJsonHelper.SetAttributeValue(obj, 'trackingType', this.trackingType);
        BpmnModelJsonHelper.SetAttributeValue(obj, 'trackingMode', this.trackingMode);
        BpmnModelJsonHelper.SetAttributeValue(obj, 'associationLocation', this.associationLocation);
        BpmnModelJsonHelper.SetAttributeValue(obj, 'associationSuCode', this.associationSuCode);
        BpmnModelJsonHelper.SetAttributeValue(obj, 'associationSchemaId', this.associationSchemaId);
        BpmnModelJsonHelper.SetAttributeValue(obj, 'associationDataSourceType', this.associationDataSourceType);
        BpmnModelJsonHelper.SetAttributeValue(obj, 'relationType', this.relationType);
        BpmnModelJsonHelper.SetAttributeValue(obj, 'colI18nValues', this.colI18nValues);
        BpmnModelJsonHelper.SetAttributeValue(obj, 'trackingComponentId', this.trackingComponentId);
        return obj;
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    DocumentRelationEntity.prototype.LoadFromJsonObject = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.code = BpmnModelJsonHelper.GetAttributeValueAsString(obj, 'code');
        this.name = BpmnModelJsonHelper.GetAttributeValueAsString(obj, 'name');
        this.sysInit = BpmnModelJsonHelper.GetAttributeValueAsBoolean(obj, 'sysInit');
        this.upDocuTypeId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, 'upDocuTypeId');
        this.downDocuTypeId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, 'downDocuTypeId');
        this.trackingType = TrackingType[BpmnModelJsonHelper.GetAttributeValueAsString(obj, 'trackingType')];
        this.trackingMode = TrackingMode[BpmnModelJsonHelper.GetAttributeValueAsString(obj, 'trackingMode')];
        this.associationLocation = AssociationLocation[BpmnModelJsonHelper.GetAttributeValueAsString(obj, 'associationLocation')];
        this.associationSuCode = BpmnModelJsonHelper.GetAttributeValueAsString(obj, 'associationSuCode');
        this.associationSchemaId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, 'associationSchemaId');
        this.associationDataSourceType = BpmnModelJsonHelper.GetAttributeValueAsString(obj, 'associationDataSourceType');
        this.relationType = RelationType[BpmnModelJsonHelper.GetAttributeValueAsString(obj, 'relationType')];
        this.colI18nValues = BpmnModelJsonHelper.GetAttributeValueAsString(obj, 'colI18nValues');
        this.trackingComponentId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, 'trackingComponentId');
    };
    return DocumentRelationEntity;
}(Entity));
export { DocumentRelationEntity };
if (false) {
    /** @type {?} */
    DocumentRelationEntity.prototype.code;
    /** @type {?} */
    DocumentRelationEntity.prototype.name;
    /** @type {?} */
    DocumentRelationEntity.prototype.sysInit;
    /** @type {?} */
    DocumentRelationEntity.prototype.upDocuTypeId;
    /** @type {?} */
    DocumentRelationEntity.prototype.downDocuTypeId;
    /** @type {?} */
    DocumentRelationEntity.prototype.trackingType;
    /** @type {?} */
    DocumentRelationEntity.prototype.trackingMode;
    /** @type {?} */
    DocumentRelationEntity.prototype.associationLocation;
    /** @type {?} */
    DocumentRelationEntity.prototype.associationSuCode;
    /** @type {?} */
    DocumentRelationEntity.prototype.associationSchemaId;
    /** @type {?} */
    DocumentRelationEntity.prototype.associationDataSourceType;
    /** @type {?} */
    DocumentRelationEntity.prototype.relationType;
    /** @type {?} */
    DocumentRelationEntity.prototype.colI18nValues;
    /** @type {?} */
    DocumentRelationEntity.prototype.trackingComponentId;
}
//# sourceMappingURL=data:application/json;base64,