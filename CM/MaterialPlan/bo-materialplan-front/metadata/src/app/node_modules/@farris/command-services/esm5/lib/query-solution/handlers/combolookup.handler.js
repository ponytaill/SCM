import { CompareType } from '../enum/compare-type.enum';
import { ValueType } from '../enum/value-type.enum';
import { RelationType } from '../enum/relation-type.enum';
var ComboLookUpHandler = /** @class */ (function () {
    function ComboLookUpHandler() {
    }
    ComboLookUpHandler.prototype.convert = function (qc) {
        var cluv = qc.value;
        if (cluv.value.length == 0 || !cluv.valueField) {
            return [];
        }
        else {
            var arr_1 = [];
            cluv.getOriginalValue().split(',').forEach(function (id) {
                id && arr_1.push({
                    'FilterField': qc.fieldCode,
                    'Compare': CompareType.Equal,
                    'Value': id,
                    'Relation': RelationType.Or,
                    'Expresstype': ValueType.Value
                });
            });
            if (arr_1.length > 0) {
                arr_1[0]['Lbracket'] = '(';
                arr_1[arr_1.length - 1]['Rbracket'] = ')';
                arr_1[arr_1.length - 1]['Relation'] = RelationType.And;
                return arr_1;
            }
            else {
                return [];
            }
        }
    };
    return ComboLookUpHandler;
}());
export { ComboLookUpHandler };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tYm9sb29rdXAuaGFuZGxlci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvY29tbWFuZC1zZXJ2aWNlcy8iLCJzb3VyY2VzIjpbImxpYi9xdWVyeS1zb2x1dGlvbi9oYW5kbGVycy9jb21ib2xvb2t1cC5oYW5kbGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUN4RCxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDcEQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBRTFEO0lBQUE7SUEwQkEsQ0FBQztJQXpCRyxvQ0FBTyxHQUFQLFVBQVEsRUFBa0I7UUFDdEIsSUFBTSxJQUFJLEdBQUksRUFBRSxDQUFDLEtBQTBCLENBQUM7UUFDNUMsSUFBRyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxFQUFDO1lBQzFDLE9BQU8sRUFBRSxDQUFDO1NBQ2I7YUFBSTtZQUNELElBQU0sS0FBRyxHQUFHLEVBQUUsQ0FBQztZQUNmLElBQUksQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxPQUFPLENBQUMsVUFBQSxFQUFFO2dCQUN6QyxFQUFFLElBQUksS0FBRyxDQUFDLElBQUksQ0FBQztvQkFDWCxhQUFhLEVBQUcsRUFBRSxDQUFDLFNBQVM7b0JBQzVCLFNBQVMsRUFBRyxXQUFXLENBQUMsS0FBSztvQkFDN0IsT0FBTyxFQUFHLEVBQUU7b0JBQ1osVUFBVSxFQUFHLFlBQVksQ0FBQyxFQUFFO29CQUM1QixhQUFhLEVBQUMsU0FBUyxDQUFDLEtBQUs7aUJBQ2hDLENBQUMsQ0FBQztZQUNQLENBQUMsQ0FBQyxDQUFDO1lBQ0gsSUFBRyxLQUFHLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBQztnQkFDZCxLQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDLEdBQUcsR0FBRyxDQUFDO2dCQUN6QixLQUFHLENBQUMsS0FBRyxDQUFDLE1BQU0sR0FBRSxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUMsR0FBRyxHQUFHLENBQUM7Z0JBQ3JDLEtBQUcsQ0FBQyxLQUFHLENBQUMsTUFBTSxHQUFFLENBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxHQUFHLFlBQVksQ0FBQyxHQUFHLENBQUM7Z0JBQ2xELE9BQU8sS0FBRyxDQUFDO2FBQ2Q7aUJBQUk7Z0JBQ0QsT0FBTyxFQUFFLENBQUM7YUFDYjtTQUNKO0lBQ0wsQ0FBQztJQUNMLHlCQUFDO0FBQUQsQ0FBQyxBQTFCRCxJQTBCQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElRdWVyeUNvbmRpdGlvbkhhbmRsZXIgfSBmcm9tIFwiLi9pcXVlcnljb25kaXRpb24uaGFuZGxlclwiO1xyXG5pbXBvcnQgeyBRdWVyeUNvbmRpdGlvbiwgQ29tYm9Mb29rVXBWYWx1ZSB9IGZyb20gXCJAZmFycmlzL2NvbXBvbmVudC1xdWVyeWNvbmRpdGlvblwiO1xyXG5pbXBvcnQgeyBDb21wYXJlVHlwZSB9IGZyb20gJy4uL2VudW0vY29tcGFyZS10eXBlLmVudW0nO1xyXG5pbXBvcnQgeyBWYWx1ZVR5cGUgfSBmcm9tICcuLi9lbnVtL3ZhbHVlLXR5cGUuZW51bSc7XHJcbmltcG9ydCB7IFJlbGF0aW9uVHlwZSB9IGZyb20gJy4uL2VudW0vcmVsYXRpb24tdHlwZS5lbnVtJztcclxuXHJcbmV4cG9ydCBjbGFzcyBDb21ib0xvb2tVcEhhbmRsZXIgaW1wbGVtZW50cyBJUXVlcnlDb25kaXRpb25IYW5kbGVye1xyXG4gICAgY29udmVydChxYzogUXVlcnlDb25kaXRpb24pIHtcclxuICAgICAgICBjb25zdCBjbHV2ID0gKHFjLnZhbHVlIGFzIENvbWJvTG9va1VwVmFsdWUpO1xyXG4gICAgICAgIGlmKGNsdXYudmFsdWUubGVuZ3RoID09IDAgfHwgIWNsdXYudmFsdWVGaWVsZCl7XHJcbiAgICAgICAgICAgIHJldHVybiBbXTtcclxuICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgY29uc3QgYXJyID0gW107XHJcbiAgICAgICAgICAgIGNsdXYuZ2V0T3JpZ2luYWxWYWx1ZSgpLnNwbGl0KCcsJykuZm9yRWFjaChpZCA9PiB7XHJcbiAgICAgICAgICAgICAgICBpZCAmJiBhcnIucHVzaCh7XHJcbiAgICAgICAgICAgICAgICAgICAgJ0ZpbHRlckZpZWxkJyA6IHFjLmZpZWxkQ29kZSxcclxuICAgICAgICAgICAgICAgICAgICAnQ29tcGFyZScgOiBDb21wYXJlVHlwZS5FcXVhbCxcclxuICAgICAgICAgICAgICAgICAgICAnVmFsdWUnIDogaWQsXHJcbiAgICAgICAgICAgICAgICAgICAgJ1JlbGF0aW9uJyA6IFJlbGF0aW9uVHlwZS5PcixcclxuICAgICAgICAgICAgICAgICAgICAnRXhwcmVzc3R5cGUnOlZhbHVlVHlwZS5WYWx1ZVxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICBpZihhcnIubGVuZ3RoID4gMCl7XHJcbiAgICAgICAgICAgICAgICBhcnJbMF1bJ0xicmFja2V0J10gPSAnKCc7XHJcbiAgICAgICAgICAgICAgICBhcnJbYXJyLmxlbmd0aCAtMV1bJ1JicmFja2V0J10gPSAnKSc7XHJcbiAgICAgICAgICAgICAgICBhcnJbYXJyLmxlbmd0aCAtMV1bJ1JlbGF0aW9uJ10gPSBSZWxhdGlvblR5cGUuQW5kO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGFycjtcclxuICAgICAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gW107XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iXX0=