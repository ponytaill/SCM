import { DialogService } from '@farris/ui-dialog';
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { GridComponent } from '@progress/kendo-angular-grid';
import { FarrisCommonModule } from '@farris/ui-common';
import { KendoGridBindingDirective, FarrisTreeTableBindingDirective, LookupDataMappingDirective, LookupEnableExtendLoadMethodDirective, UIStateBindingDirective, FarrisDisabledDirective, FarrisDynamicColumnFormatDirective, FarrisEditEnterDirective, FarrisTextareaEditDirective, FarrisSortDirective, FarrisTreeTableFormatDirective, GridColumnAggregateDirective, GridSummaryDirective, FarrisDatagridUseBindingDataDirective, MultiSelectDataMappingDirective, FarrisListViewBindingDirective, EditableDirective, InputEndEditDirective, FarrisDataGridEndEditDirective, HtmlEditorEndEditDirective, KendoGridEndEditDirective, FarrisDataGridRemoteSummaryDirective, FarrisFilePreviewBindingDirective, FarrisSetFocusDirective, FarrisDiscussionEditorBindingDirective, FarrisDiscussionListBindingDirective, FarrisPrimengTreeTableBindingDirective, FarrisDynamicRequiredDirective, FarrisEditorDirective, FarrisQuerySolutionEventBindDirective, FarrisDateLocalizationDirective, FarrisNumberLocalizationDirective, FarrisTimeLocalizationDirective, FarrisTextLocalizationDirective, FarrisCheckboxModificationDirective, FarrisLabelModificationDirective, FarrisLookupBindingDirective, ListNavComponentRefDirective, ListViewComponentRefDirective, ListFilterComponentRefDirective, ViewChangeComponentRefDirective, FilterComponentRefDirective, SectionComponentRefDirective, HtmlEditorComponentRefDirective, InputGroupComponentRefDirective, DatepickerComponentRefDirective, TimePickerComponentRefDirective, NumberSpinnerComponentRefDirective, ComboListComponentRefDirective, ComboLookupComponentRefDirective, LookupGridComponentRefDirective, DatagridComponentRefDirective, TreetableComponentRefDirective, WizardComponentRefDirective, DiscussionEditorComponentRefDirective, DiscussionListComponentRefDirective, NavComponentRefDirective, MultiSelectComponentRefDirective, ScrollspyComponentRefDirective, ComboLookupDataMappingDirective } from './directives/index';
import { FarrisKendoGridFormatService, FarrisTreetableFormatService, StringToDatePipe, DateFormatPlaceholderPipe, KendoGridFilterDirective, FormatTotalPipe } from './format/index';
import { ImageIdToUrlPipe, FormatPrimeNgTreeTableCellData, Localization } from './pipes/index';
var KendoBindingModule = /** @class */ (function () {
    function KendoBindingModule() {
    }
    KendoBindingModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        CommonModule,
                        FarrisCommonModule.forRoot()
                    ],
                    declarations: [
                        KendoGridBindingDirective,
                        FarrisTreeTableBindingDirective,
                        LookupDataMappingDirective,
                        LookupEnableExtendLoadMethodDirective,
                        UIStateBindingDirective,
                        FarrisDisabledDirective,
                        FarrisSortDirective,
                        FarrisDynamicColumnFormatDirective,
                        FarrisEditEnterDirective,
                        FarrisTextareaEditDirective,
                        FarrisTreeTableFormatDirective,
                        StringToDatePipe,
                        GridColumnAggregateDirective,
                        GridSummaryDirective,
                        DateFormatPlaceholderPipe,
                        ImageIdToUrlPipe,
                        FormatPrimeNgTreeTableCellData,
                        FarrisDatagridUseBindingDataDirective,
                        MultiSelectDataMappingDirective,
                        FarrisListViewBindingDirective,
                        EditableDirective,
                        KendoGridFilterDirective,
                        FormatTotalPipe,
                        InputEndEditDirective,
                        FarrisDataGridEndEditDirective,
                        HtmlEditorEndEditDirective,
                        KendoGridEndEditDirective,
                        FarrisDataGridRemoteSummaryDirective,
                        FarrisFilePreviewBindingDirective,
                        FarrisSetFocusDirective,
                        FarrisDiscussionEditorBindingDirective,
                        FarrisDiscussionListBindingDirective,
                        FarrisPrimengTreeTableBindingDirective,
                        FarrisDynamicRequiredDirective,
                        FarrisEditorDirective,
                        FarrisQuerySolutionEventBindDirective,
                        FarrisDateLocalizationDirective,
                        FarrisNumberLocalizationDirective,
                        FarrisTimeLocalizationDirective,
                        FarrisTextLocalizationDirective,
                        Localization,
                        FarrisCheckboxModificationDirective,
                        FarrisLabelModificationDirective,
                        FarrisLookupBindingDirective,
                        ListNavComponentRefDirective,
                        ListViewComponentRefDirective,
                        ListFilterComponentRefDirective,
                        ViewChangeComponentRefDirective,
                        FilterComponentRefDirective,
                        SectionComponentRefDirective,
                        HtmlEditorComponentRefDirective,
                        InputGroupComponentRefDirective,
                        DatepickerComponentRefDirective,
                        TimePickerComponentRefDirective,
                        NumberSpinnerComponentRefDirective,
                        ComboListComponentRefDirective,
                        ComboLookupComponentRefDirective,
                        LookupGridComponentRefDirective,
                        DatagridComponentRefDirective,
                        TreetableComponentRefDirective,
                        WizardComponentRefDirective,
                        DiscussionEditorComponentRefDirective,
                        DiscussionListComponentRefDirective,
                        NavComponentRefDirective,
                        MultiSelectComponentRefDirective,
                        ScrollspyComponentRefDirective,
                        ComboLookupDataMappingDirective
                    ],
                    providers: [
                        DialogService, GridComponent, FarrisKendoGridFormatService, FarrisTreetableFormatService
                    ],
                    exports: [
                        KendoGridBindingDirective,
                        FarrisTreeTableBindingDirective,
                        LookupDataMappingDirective,
                        LookupEnableExtendLoadMethodDirective,
                        UIStateBindingDirective,
                        FarrisDisabledDirective,
                        FarrisSortDirective,
                        FarrisDynamicColumnFormatDirective,
                        FarrisEditEnterDirective,
                        FarrisTextareaEditDirective,
                        FarrisTreeTableFormatDirective,
                        StringToDatePipe,
                        GridColumnAggregateDirective,
                        DateFormatPlaceholderPipe,
                        ImageIdToUrlPipe,
                        FormatPrimeNgTreeTableCellData,
                        FarrisDatagridUseBindingDataDirective,
                        MultiSelectDataMappingDirective,
                        FarrisListViewBindingDirective,
                        EditableDirective,
                        KendoGridFilterDirective,
                        FormatTotalPipe,
                        InputEndEditDirective,
                        FarrisDataGridEndEditDirective,
                        HtmlEditorEndEditDirective,
                        KendoGridEndEditDirective,
                        FarrisDataGridRemoteSummaryDirective,
                        FarrisFilePreviewBindingDirective,
                        FarrisSetFocusDirective,
                        FarrisDiscussionEditorBindingDirective,
                        FarrisDiscussionListBindingDirective,
                        FarrisPrimengTreeTableBindingDirective,
                        FarrisDynamicRequiredDirective,
                        FarrisEditorDirective,
                        FarrisQuerySolutionEventBindDirective,
                        FarrisDateLocalizationDirective,
                        FarrisNumberLocalizationDirective,
                        FarrisTimeLocalizationDirective,
                        FarrisTextLocalizationDirective,
                        Localization,
                        FarrisCheckboxModificationDirective,
                        FarrisLabelModificationDirective,
                        FarrisLookupBindingDirective,
                        ListNavComponentRefDirective,
                        ListViewComponentRefDirective,
                        ListFilterComponentRefDirective,
                        ViewChangeComponentRefDirective,
                        FilterComponentRefDirective,
                        SectionComponentRefDirective,
                        HtmlEditorComponentRefDirective,
                        InputGroupComponentRefDirective,
                        DatepickerComponentRefDirective,
                        TimePickerComponentRefDirective,
                        NumberSpinnerComponentRefDirective,
                        ComboListComponentRefDirective,
                        ComboLookupComponentRefDirective,
                        LookupGridComponentRefDirective,
                        DatagridComponentRefDirective,
                        TreetableComponentRefDirective,
                        WizardComponentRefDirective,
                        DiscussionEditorComponentRefDirective,
                        DiscussionListComponentRefDirective,
                        NavComponentRefDirective,
                        MultiSelectComponentRefDirective,
                        ScrollspyComponentRefDirective,
                        ComboLookupDataMappingDirective
                    ]
                },] }
    ];
    return KendoBindingModule;
}());
export { KendoBindingModule };
//# sourceMappingURL=data:application/json;base64,