{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@farris/ui-datagrid/lib/types/data-column.ts","ng://@farris/ui-datagrid/lib/types/constant.ts","ng://@farris/ui-datagrid/lib/services/state.ts","ng://@farris/ui-datagrid/lib/utils/utils.ts","ng://@farris/ui-datagrid/lib/services/datagrid-columns.helper.ts","ng://@farris/ui-datagrid/lib/services/datagrid-facade.service.ts","ng://@farris/ui-datagrid/lib/services/datagrid.service.ts","ng://@farris/ui-datagrid/lib/services/rest.service.ts","ng://@farris/ui-datagrid/lib/types/datagrid-validator.ts","ng://@farris/ui-datagrid/lib/services/validator-messager.service.ts","ng://@farris/ui-datagrid/lib/services/domhandler.ts","ng://@farris/ui-datagrid/lib/services/datagrid-filter.service.ts","ng://@farris/ui-datagrid/lib/pagination/ngx-pagination.module.ts","ng://@farris/ui-datagrid/lib/pagination/pagination.service.ts","ng://@farris/ui-datagrid/lib/scrollbar/scrollbar.interfaces.ts","ng://@farris/ui-datagrid/lib/scrollbar/scrollbar.directive.ts","ng://@farris/ui-datagrid/lib/scrollbar/scrollbar.component.ts","ng://@farris/ui-datagrid/lib/scrollbar/arrow/scrollbar-arrows.component.ts","ng://@farris/ui-datagrid/lib/scrollbar/scrollbar.module.ts","ng://@farris/ui-datagrid/lib/components/columns/column-cell-edit.directive.ts","ng://@farris/ui-datagrid/lib/components/columns/datagrid-column.directive.ts","ng://@farris/ui-datagrid/lib/components/filter-toolbar/smart-filter-toolbar.component.ts","ng://@farris/ui-datagrid/lib/plugins/smart-filter/controlData/filter-control.options.ts","ng://@farris/ui-datagrid/lib/services/datagrid-smart-filter.service.ts","ng://@farris/ui-datagrid/lib/services/selection-mode.service.ts","ng://@farris/ui-datagrid/lib/datagrid.component.ts","ng://@farris/ui-datagrid/lib/plugins/smart-filter/datagrid-smart-filter.component.ts","ng://@farris/ui-datagrid/lib/plugins/smart-filter/datagrid-smart-filter.module.ts","ng://@farris/ui-datagrid/lib/utils/format-cell-data.pipe.ts","ng://@farris/ui-datagrid/lib/components/body/datagrid-body.component.ts","ng://@farris/ui-datagrid/lib/components/body/datagrid-row-hover.directive.ts","ng://@farris/ui-datagrid/lib/components/body/datagrid-row.directive.ts","ng://@farris/ui-datagrid/lib/components/editors/cell-editor.directive.ts","ng://@farris/ui-datagrid/lib/utils/safe.pipe.ts","ng://@farris/ui-datagrid/lib/components/body/datagrid-cell.component.ts","ng://@farris/ui-datagrid/lib/components/body/datagrid-cell-editable.directive.ts","ng://@farris/ui-datagrid/lib/components/body/datagrid-rows.component.ts","ng://@farris/ui-datagrid/lib/components/editors/text-editor.component.ts","ng://@farris/ui-datagrid/lib/components/header/datagrid-header.component.ts","ng://@farris/ui-datagrid/lib/components/header/datagrid-resize-column.directive.ts","ng://@farris/ui-datagrid/lib/components/footer/datagrid-footer.component.ts","ng://@farris/ui-datagrid/lib/components/pager/pager.component.ts","ng://@farris/ui-datagrid/lib/components/loading.component.ts","ng://@farris/ui-datagrid/lib/components/pager/selected-list/selected-list.component.ts","ng://@farris/ui-datagrid/lib/components/pager/selected-item.pipe.ts","ng://@farris/ui-datagrid/lib/datagrid-error-handler.ts","ng://@farris/ui-datagrid/lib/components/checkbox/datagrid-checkbox.component.ts","ng://@farris/ui-datagrid/lib/components/checkbox/datagrid-header-checkbox.component.ts","ng://@farris/ui-datagrid/lib/utils/rowid.pipe.ts","ng://@farris/ui-datagrid/lib/utils/format-group-row.pipe.ts","ng://@farris/ui-datagrid/lib/components/body/fixed-left-rows.component.ts","ng://@farris/ui-datagrid/lib/utils/rexplaceX.pipe.ts","ng://@farris/ui-datagrid/lib/components/body/datagrid-grouprow.directive.ts","ng://@farris/ui-datagrid/lib/utils/show-required-label.pipe.ts","ng://@farris/ui-datagrid/lib/utils/disable-row.pipe.ts","ng://@farris/ui-datagrid/lib/utils/select-row.pipe.ts","ng://@farris/ui-datagrid/lib/utils/field-value.pipe.ts","ng://@farris/ui-datagrid/lib/components/tooltip/cell-tooltip.directive.ts","ng://@farris/ui-datagrid/lib/components/tooltip/tip-message.pipe.ts","ng://@farris/ui-datagrid/lib/components/filter-toolbar/filter-toolbar.component.ts","ng://@farris/ui-datagrid/lib/components/header/header-style.directive.ts","ng://@farris/ui-datagrid/lib/components/auto-height/auto-height.component.ts","ng://@farris/ui-datagrid/lib/utils/row-is-selected.pipe.ts","ng://@farris/ui-datagrid/lib/utils/row-is-checked.pipe.ts","ng://@farris/ui-datagrid/lib/components/body/datagrid-group-footer-styler.directive.ts","ng://@farris/ui-datagrid/lib/components/auto-height/auto-height.directive.ts","ng://@farris/ui-datagrid/lib/components/body/datagrid-row-dblclick.directive.ts","ng://@farris/ui-datagrid/lib/components/footer/datagrid-footer-cell.styler.directive.ts","ng://@farris/ui-datagrid/lib/components/header/drag-drop-column.service.ts","ng://@farris/ui-datagrid/lib/components/header/datagrid-drag-column.directive.ts","ng://@farris/ui-datagrid/lib/components/header/datagrid-drop-column.directive.ts","ng://@farris/ui-datagrid/lib/utils/cell-readonly.pipe.ts","ng://@farris/ui-datagrid/lib/datagrid.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","__spread","concat","string","number","boolean","date","time","datetime","enum","fromdata","none","max","min","sum","average","count","GRID_EDITORS","InjectionToken","GRID_VALIDATORS","GRID_FILTER_ROW","GRID_SETTINGS_PANEL","GRID_SETTINGS_SERVICE","GRID_SETTINGS_HTTP","SCROLL_X_ACTION","SCROLL_X_REACH_END_ACTION","SCROLL_X_REACH_START_ACTION","FIXED_LEFT_SHADOW_CLS","CELL_SELECTED_CLS","CELL_EDITING_CLS","SIZE_TYPE","sm","row","header","pager","md","lg","xl","ALLOW_EDIT_CELL_HIGHLIGHT_CLS","datagrid","textarea","textbox","checkbox","datepicker","input-group","select","lookup","numberbox","combolist","combo-lookup","switch","timepicker","language-textbox","enum-editor","initDataGridState","idField","showLineNumber","selections","checkedRows","currentRow","columnsGroup","columns","fitColumns","onlySelectSelf","selectOnCheck","checkOnSelect","pageIndex","pageSize","pagerHeight","checkboxColumnWidth","pagination","virtual","rowIndex","scrollTop","topHideHeight","bottomHideHeight","isScrollChange","sortName","undefined","sortOrder","multiSort","remoteSort","changes","showGroupColumn","ROW_INDEX_FIELD","IS_GROUP_ROW_FIELD","GROUP_ROW_FIELD","IS_GROUP_FOOTER_ROW_FIELD","GROUP_VISIBLE_FIELD","GROUP_LEVEL_FIELD","IgnoreProperties","Utils","uuid","S4","Math","random","toString","substring","getValue","field","data","safe","resultVal","indexOf","split","reduce","obj","key","escapeValue","setValue","val","nest","lastObj_1","_fields","c","pop","getMultilingualValue","valObj","localeId","keys","replace","eventPath","evt","path","composedPath","target","window","getParents","node","memo","parentNode","hasDialogOpen","document","body","className","on","el","fn","opts","delegatorFn","matches","addEventListener","options","removeEventListener","off","getBLen","str","getWhenEmptyText","col","EMPTY_INPUT_TEXT","zh-CHS","zh-CHT","en","editor","type","DatagridColumnsHelper","getColumnTotal","firstCols","total","forEach","colspan","findUndefinedItem","arr","getColumnFields","aa","colTotal","Array","k","id","rowspan","columnIsVisible","ins","visible","instance","column","getFields","_cols","map","cols","filter","gridInstance","fields","getFilterEnumOptions","enumSetting","ColumnFilterType","fmt","getEnumText","enumOpts","value1","valueField","textField","v","find","d","join","columnVisibleAsObservable","bindCallback","visibleAsObservable","of","getParentColumns","allCols","_getParents","parentId","parentCol","getChildColumns","_getChilds","childs","splice","child","checkGroupHeaderColumnVisible","_col","_childs","onlyOneColumn","DatagridFacadeService","http","localId","store","BehaviorSubject","virtualRowSubject","gridSizeSubject","Subject","errorSubject","selectRowSubject","unSelectRowSubject","columnResizeSubject","clearSelectionSubject","checkRowSubject","unCheckRowSubject","clearCheckedsSubject","clearAllSubject","checkAllSubject","unCheckAllSubject","selectAllSubject","selectCellSubject","error$","asObservable","selectRow$","unSelectRow$","columnResize$","clearSelections$","checkRow$","unCheckRow$","clearCheckeds$","clearAll$","checkAll$","unCheckAll$","selectAll$","currentCell$","editCell$","EventEmitter","clientSort$","rowAppend$","rowUpdate$","rowDelete$","expandGroupRow","collapseGroupRow","updateCheckboxState$","state$","pipe","state","columnGroup$","switchMap","colgroup","distinctUntilChanged","gridSize$","_a","headerHeight","width","height","rowHeight","data$","vs","index","startIndex","rows","virtualRows","top","bottom","scrolling","difference","first","second","item","includes","differenceBy","a","b","Set","has","_state","cloneDeep","updateVirthualRows","scrolltop","getVirthualRows","updateState","autoHeight","groupRows","flatColumns","groupRows2","mergeCell","enableClientSortForMergeCell","sort","getData","original","originalData","getState","getVirtualState","getPageInfo","initState","initColumns","loadData","updateOriginalData","sortable","sortedData","resetRow","rowId","_this","origData","origRowData","primaryId","getCurrentRow","updateRow","fetchData","url","get","setTotal","updateProperty","property","setPagination","setScrollTop","isMultiSelect","multiSelect","_isRowSelected","isRowSelected","flag","_canCancelSelectWhenMulti","findIndex","sr","isRowChecked","checkeds","getCheckeds","isCheckAll","allRows","getAllRowsForLive","checkIds","getCurrentPageCheckeds","getSelections","temp_1","getCheckedRowsFromSource","findRow","fromDataSource","updateCheckedData","rowid","rowData","item_1","setCheckedRows","ids","checked","checkeds_1","srow","enableMorePageSelect","_clearCheckeds","checkRecord","checkRow","unCheckRow","grid","beforeSelect","subscribe","selectRow","emit","beforeUnselect","unSelectRow","setCurrentPageData","currentPageData","getCurrentPageData","allData","pagerOnServer","disableRow","checkAll","allCheckeds","_checkeds_1","element","selectAll","index_1","findRowIndex","setSelectRow","selectRowForMulti","unSelectRowForMulti","_sr","selectRecord","gridOpts","showCheckbox","beforeCheck","_clearSelections","keepSelect","excludeIds","clearSelections","unCheckRows","t1","clearCheckeds","clearAll","_rows","setMultiSelect","setCheckOnSelect","setSelectOnCheck","setCurrentCell","dr","cellElement","cellRef","currentCell","ControlPanelFeild","getColumn","isLastRow","cancelSelectCell","getCurrentCell","editCell","isEditing","cei","endEditCell","appendRow","Error","pid","newData","refresh","rowUpdateParam","keyID","deleteRow","removeRow","isCellSelected","cellInfo","cc","newState","resize","newSize","resetColumnsSize","fit","useUserSetColumnSize","autoFitColumns","gridWidth","originalTotalWidth","setFitColumnsWidth","updateColumns","restitute","resizeColumns","getGroupColumns","getAllFlatColumns","restColumnWidth","leftFixed","rightFixed","normalColumns","leftFixedCols","getFixedCols","rightFixedCols","normalCols","originalWidth","initColumnsWidth","leftFixedWidth","rightFixedWidth","normalWidth","totalWidth","getColumnIndex","fixed","fast","columnResizeEnd","flatten","fieldName","minWidth_1","Number","toFixed","direction","newcols_1","f","offset","lineNumberWidth","getColsWidth","reset","left","isShow","hideCheckbox","hideLineNumber","setSortInfo","orders","updateFieldOrder","order","orderBy","props","colObj","tslib_1.__spread","acc","prop","valA","valB","p1","p2","localeCompare","mergeFields","newOrders_1","newFields_1","clientSort","clearSort","loadFilterData","filterData","hasRowChanges","_changes","appendChanges","_id","acceptChanges","rejectChanges","orgiRow_1","getChanges","getFooterData","footerRow","footer","text","typ","calculation","arrToGroup","items","first_1","shift","g1","groupBy","toGroup","fieldArr","_nextFields","_f","groupRows2Flat","initLevel","parent","results","idfield","groupFieldArr","groupField","expandGroupRows","groupItem","expanded","isPlainObject","level","groupFooter","footerItem","_b","updateGroupFooterData","groupFooterRow","columns_1","groupData","result_1","k_1","showGroupFooter","updateGroupFooter","groupRowId","groupRow","groupFooterRows","columns_2","rows_1","CalculationType","BigNumber","div","setGroupRowsVisible","open","footerRows","setinitialOptions","initialOptions","halign","align","Injectable","HttpClient","DatagridService","scorllSubject","scrollX","rowHoverSubject","rowSelectSubject","dataSourceChangedSubject","editCellSubject","endCellEdit","changeCheckedRows","scorll$","scrollX$","x","debounceTime","scrollY$","rowHover$","rowClick$","onDataSourceChange","cellEdit$","endCellEdit$","checkedRowsTotalChanged$","updateEmptyStyle$","showGridHeader","uncheckAll","columnResized","rowHeightChanged","loadVirtualData","showFixedShadow","setSelecedRow","scrollToCurrentRow","columnsChanged","cellContentWrapChanged","onFilterChanged","clearFilter","filterTextChange","toggleFilterRow","refreshFooterData","disableHeader","changeCheckAllStatus","setScrollbarPosition","smartFilterBarExpand","smartFilterDataChange","scrollbarUpdate","footerPositionChanged","styleElement","commonUtils","idService","cellEditorCreated","cellEditorDestory","focusRowChanged","toggleGroupRow$","toggleAllGroupRows$","onScrollMove","action","dataSourceChanged","onRowHover","mouseEnter","mouseenter","onRowClick","onCellEdit","tdElement","onEndCellEdit","cell","onSelectCell","onCheckedRowsCountChange","onRowHeightChange","onLoadVirtualData","onClearFilter","onFilterTextChange","txt","restoreScrollbarPosition","updateEmptyStyle","getMergeCellInfo","currVal","result","firstVal","j","show","_item","strIndex","getMergeCellInfo0","getMergeCellInfo2","groupKeys","startRowIndex","getMergeCellInfo3","firstField","prevItem_1","getMergeInfo","mergeCellInfo","removeStyleSheet","remove","createStyleElement","styleSheetId","_createStyleSheet","appendCssRules","rules","_appendCssRules","sheet","removeCssRule","ruleName","_removeCssRule","isArray","htmlHead","querySelector","styleEleId","innerText","createElement","appendChild","styleSheet","allCssText","rules_1","tslib_1.__values","rules_1_1","rule","slice","trim","removedCssRule","cssText","_newRule","addRule","insertRule","cssRules","ii","cssRule","selectorText","toLowerCase","deleteRule","removeRule","createConfigKey","gridID","location","host","hash","pathname","href","formCode","menuId","_searchArr","searchObj_1","catchFuncIdKEY","funcId","localStorage","setItem","getItem","IdService","encrypt","getCustomStyle","styler","args","findNextTr","nextTr","dir","getNextElement","getEle","DATAGRID_REST_SERVICEE","DefaultDatagridValidatorMessager","required","minlength","maxlength","email","requriedtrue","pattern","ValidatorMessagerService","getValidatorErrorMessage","validatorName","validators","validator","messager","ddvm","DomHandler","hasClass","classList","from","removeClass","RegExp","findSingle","selector","getOffset","rect","getBoundingClientRect","scrollLeft","getOuterHeight","margin","offsetHeight","style","getComputedStyle","parseFloat","marginTop","marginBottom","getOuterWidth","offsetWidth","marginLeft","marginRight","DatagridFilterService","dfs","localeSer","inject","removeField","validateRowData","conditions","checkAllFieldInRowData","executeFilter","enableSmartFilter","executeSmartFilter","getCompareResult","fieldDataValue","operator","targetValue","parseInt","Compare","Equal","NotEqual","Greater","GreaterOrEqual","Less","LessOrEqual","Like","NotLike","In","getRelationResult","result1","relation","result2","checkAllFieldResult","resultObj","values","fieldValue","columnObj","isMultilingualField","where","operator1","operator2","value2","removeFilterField","convertFilterCondition2String","andText","orText","and","and2","or","lastANDidx","title","getCompareString","txt2","s2","lbracket","lastIndexOf","resultStr","substr","op","code","convert2FilterArray","condition","filterArr","filterField","rbracket","compare","conditionVal","obj2","op2","checkEnumTypeFilters","enumFilters","enumFilterArr","convertEnumTypeFilter","createColumnFilterOptions","filterTypeOptions","enableOperator","dateFormat","returnFormat","formatter","tye","returnFmt","format","convertSmartFilter2EntityFilter","validateRowData2","checkRowDataWithCondition","FilterField","Value","Relation","_filters","LocaleService","Injector","NgxPaginationModule","NgModule","declarations","imports","CommonModule","exports","providers","PaginationService","SCROLLBAR_CONFIG","Geometry","y","w","h","Position","ScrollbarEvents","ScrollbarConfig","config","ScrollbarDirective","zone","differs","elementRef","platformId","defaults","ro","timeout","animation","configDiff","ngDestroy","disabled","psScrollY","psScrollX","psScrollUp","psScrollDown","psScrollLeft","psScrollRight","psYReachEnd","psYReachStart","psXReachEnd","psXReachStart","ngOnInit","isPlatformBrowser","config_1","runOutsideAngular","setTimeout","PerfectScrollbar","nativeElement","create","diff","ResizeObserver","update","children","observe","eventName","eventType","fromEvent","event","takeUntil","auditTime","ngAfterViewInit","ngOnDestroy","complete","disconnect","clearTimeout","destroy","ngDoCheck","ngOnChanges","isFirstChange","currentValue","previousValue","ps","geometry","prefix","position","absolute","reach","scrollable","contains","scrollTo","speed","animateScrolling","scrollToX","scrollToY","scrollToTop","scrollToLeft","scrollToRight","scrollWidth","clientWidth","scrollToBottom","scrollHeight","clientHeight","scrollToElement","qs","elementPos","scrollerPos","currentPos","cancelAnimationFrame","newValue_1","scrollCount_1","oldTimestamp_1","performance","now","oldValue_1","cosParameter_1","step_1","newTimestamp","PI","round","cos","requestAnimationFrame","Directive","exportAs","NgZone","KeyValueDiffers","ElementRef","Inject","PLATFORM_ID","Optional","Input","Output","ScrollbarComponent","cdRef","states","indicatorX","indicatorY","interaction","scrollPositionX","scrollPositionY","scrollDirectionX","scrollDirectionY","usePropagationX","usePropagationY","allowPropagationX","allowPropagationY","stateTimeout","stateUpdate","usePSClass","autoPropagation","scrollIndicators","right","markForCheck","detectChanges","directiveRef","scrollDeltaX","deltaX","scrollDeltaY","deltaY","checkPropagation","touches","clientX","clientY","merge","mapTo","unsubscribe","preventDefault","stopPropagation","Component","template","encapsulation","ViewEncapsulation","None","ChangeDetectorRef","HostBinding","ViewChild","ScrollbarArrowsComponent","reachX","reachY","scrollbarXActive","scrollbarYActive","hasXScrollbar","hasYScrollbar","scrollMoveTo","$event","ScrollbarModule","DatagridCellEditorDirective","TemplateRef","DatagridColumnDirective","readonly","editable","ngAfterContentInit","ContentChild","SmartFilterToolbarComponent","render","padding","clearFilters","removeFilter","filterChange","sk","destory$","dg","DatagridComponent","dgs","onQuery","filterItem","JSON","parse","onResetFilter","onRemoveFilter","onResize","smartFilterWrapper","Renderer2","EnumFilterControl","enumopts","controltype","enumValues","name","DatagridSmartFilterService","controlData","filterChanged","clearAllFilter","getColumnFilterData","filterControlData","single","showType","showTime","DateFilterControl","filterConditionChanged","ctrlIdx","labelCode","removeCondition","emitRemove","SelectionModeService","dgRef","oldSettings","selectStartEvent","events","selectionMode","removeEvents","registerStopSelectionEvent","toggleMode","enableWindowsSelectionMode","restoreSettings","render2","listen","ctrlKey","shiftKey","unselectable","keyCode","enableSelectable","setAttribute","dgContainer","setStyle","removeAttribute","removeStyle","beforRowClick","param","isSelected","isCtrlKey","isShiftKey","endEditing","focusIndex","focusRowIndex","endIndex","start","end","willCheckIds","getRows","checkRows","currentPagerIds_1","unCheckIDs","checkValues","unSelectIds","delay","canSelect","selectedRow","rowClick","dblclick","selected","endRowClick","cd","app","domSanitizer","auther","version","__component_type__","pos","hostCls","useThemes","useHtmlTable","maxHeight","showBorder","striped","showHeader","headerWrap","showFooter","footerHeight","footerDataFrom","footerPosition","_sizeType","_fit","_fitColumns","_autoFitColumns","scrollBarShowMode","scrollBarOptions","showScrollArrow","resizeColumn","lineNumberTitle","rowHover","clickToEdit","_lockPagination","__pagination","pagerContentTemplate","pagerPos","pagerViewMode","pageList","showPageList","showPageInfo","showPageNumber","pagerLabelSize","showGotoInput","showSelectedList","cellTipTimer","controlPaginationState","_total","enableSelectRow","showAllCheckbox","useBlankWhenDataIsEmpty","emptyDataHeight","emptyMessage","emptyTemplate","_footerData","endEditByInvalid","_columns","nowrap","virtualized","virtualizedAsyncLoad","editMode","_editable","enableEditCellStyle","selectOnEditing","editorHeight","hoverRowCls","enableDragColumn","rowGroupPanelHeight","groupSummaryPosition","groupCellColSpan","_groupField","groupFields$","_showRowGroupPanel","AutoColumnWidthUseDblclick","useDefaultFilter","enableFilterRow","remoteFilter","showFilterBar","filterBarHeight","filterRowHeight","selectValue","selectValues","useControlPanel","enableSimpleMode","controlPanelMode","enableScheme","defaultSchemeName","closeOtherGridEditor","clearSelectionsWhenDataIsEmpty","enableContextMenu","contextMenus","selectValueChange","checkValuesChange","selectValuesChange","beginEdit","endEdit","cancelEdited","scrollY","pageSizeChanged","pageChanged","loadSuccess","enableHighlightCell","checkedRowsDataFromSource","editcellWhenTabKeydwon","beforeClickCell","dblclickRow","selectChanged","unSelect","unSelectAll","scrollYLoad","unChecked","unCheckAll","checkedChange","columnSorted","rowAppended","rowDeleted","rowUpdated","dataChange","lastCellEnterHandler","groupFieldChange","columnMoved","cellClick","_loading","_selectedRow","ds","pagerOpts","editors","footerWidth","clickDelay","resizeColumnInfo","proxyLineEdge","startWidth","startX","subscriptions","realHeaderHeight","modalClickEvent","pending","scrollInstance","ignoreTarget","clientFilterService","_isResized","gridSize","clientFilterChanged","groupRowPanelPlaceholder","smartFilterService","smartFilterResult","smartFilterBarHeight","_active_datagrid_cls","_blured_datagrid_cls","_custom_datagrid_cls","documentBodyMouseDown","farrisInstances","currentPagerData","resizeTimer","debugSer","DATA_CHANGED_TIMER","formValidations","trackByRows","onDocumentMouseDown","dgrid","closest","activeDataGrid","indlg","inDialog","currentTargetInDialog","zoneClick_1","isBeBtn_1","isOldBeBtn_1","disableClickEvent_1","pointerEvents","_timer","stopEditingRowIndex_1","closeEdit","unbindDocumentEditListener","callback","tick","localeService","restService","colFormatSer","ColumnFormatService","CommonUtils","FarrisComponentInstanceService","DebugService","useDebugMode","settingService","settingsHttp","httpRestService","dataSubscription","dataSource","cleanDom","setPagerTotal","updateFooterData","gridContainerEl","parentElement","nodeName","writeConsole","minHeight","calculateGridSize","columnGroupSubscription","cg","colGroup","initEditorAndValidator","currentCellSubscription","unbindMoveSelectRowEvent","bindDocumentEditListener","bindDocumentMoveSelectRowEvent","filterChangedSubscription","footerDataSubscription","defineProperty","setFitColumns","restituteColumnsSize","dgPager","totalItems","itemsPerPage","setFooterHeight","correctColumns","chkeds","initSelectOrChecked","setCurrentPagerData","$data","msg","console","footerData","sms","checkFilterStyle","_checkSize","checkOptions","stringify","onFilterBarResize","setHeaderHeight","setPagerHeight","initBeforeEvents","setGridNewSizeWhenFit","add","res","addClass","display","_w","contentRect","_h","_floowW","floor","_floorH","_roundW","_roundH","_ceilW","ceil","_ceilH","footerTemplate","setCellStyle","dgColumns","dgc","checkNowrap","setRowHeight","isSingleClick","headerHeightChange","fh","remote","currentPage","sizeType","uncheckIds","updateAllCheckboxStatus","toggleVisibleColumn","checkDragColumns","showRowGroupPanel","st","isMultiHeader","registerGridInstance","checkSortInfo","checkMergeCell","setCheckboxBehavior","initPaginationOptions","checkGroupHeaderColumns","checkGroupRowSetting","checkColumnsType","_defaultSetting","_flatColumns","settings$","getSettings","sets","userProfileSetting","err","refreshSelectedData","rd","unsubscribes","unobserve","documentRowKeydownHandler","onClick","closeSelectedList","_editorClickEvent","updatePagerOptions","topFooter","bottomFooter","querySelectorAll","customStyleKey","useSizeType","_rowHeight","key1","key2","rowHeightCSS","_data","chkids","diffIds","checkAllStatus","allDataIDs","newCheckValues","isSame","addControlCol","controlCol","cp","columnsIndex","valign","bind","gridHeaderEl","tableEls","heights","hh","ph","reloadData","useColumnSettingWidth","_useColumnSettingWidth","Editors","ed","_validators","outerHeight","sta","getElementPadding","border","getElementBorderWidth","setNewSize","beforeUncheck","beforeSortColumn","beforeEdit","afterEdit","isActived","targetName","selectNextRow","selectPrevRow","bindEditListenerInModal","modalElement","_fmodal","documentCellKeydownHandler","onKeyDownEvent","documentCellKeydownEvents","documentCellClickHandler","docuemntCellClickEvents","onSpaceHandler","onEnterHandler","selectNextCell","ss","isRowEditing","isCellEditing","editorTemplate","endRowEdit","getEditors","validation","trId","trDom","tdDom_1","trDomL","trDomR","cellEditorRef","hideCover","stopEdit","editRow","beforeEditEvent","click","cells_1","cells","toArray","cellEditor","componentRef","inputElement","focus","bindRowEditorKeydownEvent","canEnd","currentEditor","rowForm","markAsTouched","invalid","afterEditEvent","closeAllCellEditor","form","formControl","cancelEdit","unbindRowEditorKeydownEvent","rowEditTabKeydwonEvent","which","td","tr_1","nextTd_1","nextElementSibling","hasNoEditor","_td","editNextRow","nextRowid","getAttribute","tds","tdIdx_1","nextTrEdit","documentRowEditKeydownHanlder","documentClickEndRowEditHandler","_clientFilter","excuteLocaleFilter","allClientData","smartFilterData","entityFilters","onClearSmartFilters","onRemoveSmartFilterItem","fieldCode","smartFilterEl","onSmartFilterChange","clearCondition","keepSortState","keepScrollPosition","loading","closeLoading","lst","lastScrollTop","lsl","lastScrollLeft","showLoading","params","reload","setPageIndex","setPageList","onPageChange","lockPagination","onPageSizeChange","onRemoveSelectedItem","onClearSelectedItem","replacePX2Empty","strNum","renderCustomCls","cls","dom","renderCustomStyle","cs","cssRuleText","paddingTop","paddingLeft","paddingBottom","paddingRight","borderTopWidth","borderBottomWidth","borderRightWidth","borderLeftWidth","formatData","getFieldValue","canOperateCheckbox","findNextTd","nextColumn","leftTrID","rightTrID","_tr","findNextCell","col_1","cellIndex","currCellEl","tdSelector","prevTr","previousElementSibling","nextTd","selectCell","tdSeletor","tr","_next","leftTrSelector","nextTd_2","removeCellSelectedCls","selectedCell","toCurrentPosition","_selectRow","selectAllRows","cancelSelected","checkAllRows","emitUnCheckAll","getResizeProxyPosLeft","dgRect","tdLeft","deltaEdge","pageX","toggleResizeProxy","resizeProxyBg","resizeProxy","onColumnResizeBegin","proxy","proxyPosLeft","top_1","bottomH","onColumnResize","onColumnResizeEnd","newColWidth","moveLeft","saveUserConfig","updateFixedColumnCssForFastMode","sizeToContent","th","longestText","longTextArea","innerHTML","w1","maxWidth","thMinWidth","refreshRow","validateRow","insertRow","_setColumnReadonly","setColumnReadonly","allCols_1","origianlColSpan","parents","_colspan_1","showColumn","hideColumn","updateColumn","columnObject","detectChange","setColumnFormatter","updateColumnFormatterOptions","formatterOptions","colFormatter","setColumnTitle","onColumnSorted","orders_1","updateSortInfo","newSortName","newSortOrder","sortFields","sortOrders","_sortFields","_sortOrders","nField","nIndex","colOrder","newOrder","_order","showControlPanel","checkSettingHttp","befRepository","settings","_sortName","_sortOrder","sortInfo","viewColumns","columnFormat","updateColumnFormat","newVisibleOrderColumns","tips","cellIsReadOnly","readOnly","groupFieldChanged","newGroupField","removeGroupField","delIdx","clearAllGrouppingField","setGroupFields","groupFields","active","grids","onDatagridContainerFocus","setShadowColumnForFastMode","fixedLeft_1","fixedRight","leftWidthTotal_1","rightWidthTotal_1","cssarr","css","va","verticalAlign","ha","horizontalAlign","colIndex","stylecss","groupRowIndex","expand","expandAllGroupRows","collapseAllGroupRows","changeDetection","ChangeDetectionStrategy","OnPush","ApplicationRef","DomSanitizer","ContentChildren","HostListener","DatagridSmartFilterComponent","filterPanelService","smartFilterSer","smartFilterDataChanged$","removeFilter$","clearAllFilter$","smartFilterEvents","control","filterPanelRef","hidePanel","getFilterData","placeHolder","getPanelPosition","pageY","targetRect","moveArrow","innerWidth","hideFilterPanel","valueText","clearColumnFilter","showFilterPanel","showPanel","panelExtendTemplate","sortTmp","localStorageKey","arrowEl","filterSubmit","onSort","FilterPanelService","decorators","DatagridSmartFilterModule","FilterPanelModule","LocaleModule","forRoot","FormatCellDataPipe","cfs","injector","LOCALE_ID","transform","isPassword","formatterFn","thousand","precision","dateRange","dateRangeDatesDelimiter","locale","getDatagridInstance","dataGrid","utils","setPlaceHolderWhenEnableEditCellStyle","resoultStr","isFooter","elRef","span","Pipe","pure","DatagridBodyComponent","psConfig","swipeEasing","minScrollbarLength","handlers","suppressScrollY","deltaTopHeight","wheelWidth","_fixedRightScrollLeft","maxScrollLeft","showRightShadow","scrollBarMode","visibleContextMenus","currentRowId","_hoverRowIndex","minRowBuffer","vScrollDir","rowsCache","lastRenderedScrollTop","lastRenderedScrollLeft","prevScrollTop","prevScrollLeft","blankTopHeight","blankBottomHeight","cellContentFormatter","__triggerBodyClickEvent","destroy$","_onMouseClick","_scrollTimer","_scrollXTimer","resizeObserverTimer","onBeforeShowContextMenu","contextMenuDom","rowID","focusTargetWidth","viewportW","ngZone","columnFormatService","rowIdx","listenSubjects","s1","updateContainerSize","s10","s3","checkScrollbarPosition","s5","viewScrollContainer","onMouseClick","setPositionTop","bodyStyle","getBodyStyle","isDiffrentDataSource","isSameLength","onDataChanged","destroySubscriptions","offsetParent","updateCanvasHeight","scrollbarRef","rightWidth","ngAfterViewChecked","toTop","scrollBar","scrollElRef","viewportH","getViewPortHeight","scrollInfo","renderData","updateRowHeight","sub","gridSizeSubscribe","oldWidth_1","canvasHeight","getCanvasHeight","updateColumnSize","fixedRightScrollLeft","keepScrollbarPosition","columnResizeSubscribe","selectRowSubscribe","unselectRowSubscribe","prevRow","selectAllSubscribe","checkRowSubscribe","checkedRowsChanged","clearSelectionsSubscribe","uncheckRowSubscribe","checkAllSubscribe","clearCheckedsSubscribe","updateScrollPosition","trID","buildCustomCellStyle","groupRowStateChanged","groupRowExpandUpdate","isExpand","gr","oldWidth","scrollReach","colsWidth","dgContainerWidth","allColsWidth","canvasWidth","rightRowsCmp","rightTrs","leftTrs","fixedRightEl","fixedLeftEl","trs","mainArea","updateCellStyle","_rd","getTrDomHeight","list","trdoms","t2","t3","trDomId","dgBody","cssTextArr","domSel","_arr","rtr","ltr","leftTrId","rightTrId","key3","fd","onScrollToX","onScrollToY","handleScroll","onPsXReachStart","onPsXReachEnd","isChecked","toggleGroupRow","viewPortHeight","allRowsHeight","itemsCount","getRowFromPosition","getVisibleRange","viewportTop","viewportLeft","leftPx","rightPx","getRenderedRange","range","buffer","minBuffer","renderRows","dataLength","rowNode","cellColSpans","cellNodesByColumnIdx","cellRenderQueue","removeRowFromCache","cleanupRows","rangeToKeep","showYscrollbar","onClickScrollArrow","detectchanges","rendered","_handleScroll","viewportContainer","maxScrollDistanceY","maxScrollDistanceX","vScrollDist","abs","hScrollDist","_scrollTo","dx","dy","newScrollTop","gridCellData","edit","DatagridRowHoverDirective","dgb","_mouseenter","_mouseleave","onmouseenter","capture","onmouseleave","setRowHoverCls","hover","leftTableDom","rightTableDom","centerTableDom","method","trSelector","forwardRef","DatagridRowDirective","fb","drHover","clickHandler","FormGroup","documentRowDblclickEvent","columnsChangedSubscription","datasourceChangedSubscription","createControl","s$","s1$","updateCellEmptyStyle","s2$","getRowPosition","drl","drr","rowStyler","trStyle","beforEventParam","canUnselect","trCLS","canendedit","initFormControl","group","controls","createFormControl","addControl","bindValidations","validations","Validators","minLength","maxLength","requiredTrue","vfn","vr","centerTr","leftTrDom","rightTrDom","heightSizeList","rowIsDisabled","emptyicon_cls","colVal","fmtVal","updateCellEmptyText","FormBuilder","Self","DatagridCellComponent","descendants","GridCellEditorDirective","resolver","container","timer","createCellEditor","editorRef","editorType","factory","resolveComponentFactory","createComponent","controlId","updateControlValue","changeDetectorRef","changeDetector","destroyed","emitEvent","hide","ComponentFactoryResolver","ViewContainerRef","SafePipe","sanitizer","dangerWords","bypassSecurityTrustHtml","bypassSecurityTrustStyle","bypassSecurityTrustScript","bypassSecurityTrustUrl","bypassSecurityTrustResourceUrl","hasDanger","lastColumn","_isEditing","controlHeight","_cellEditorTemplate","cellDblClick","cellContext","cellStyler","safePipe","canEdit","formGroup","input","templateRef","initCellTemplateContext","tools","cellSubscription","rowUpdateSubscription","updateValue","rowid_1","Default","read","DatagridCellEditableDirective","cellEditorCreatedSubscription","cellEditorDestorySubscription","validMessageEle","emitBeginEdit","bindEditorInputEvent","unBindEditorInputEvent","removeValidMessage","setCellClsWithEditorType","initCellEvent","celldblclick","onDblClickCell","onClickCell","openCellEditor","clickTimer","closeEditingCell","cellclick","bindCellEventSubscription","noop","isDifferentCell","isReadonly","getReadonlyValue","dc","_cellEditorRef","editType","showDialog","showValidMessage","isValid","message","parentContainver","box","msgWrap","background","color","offsetTop","offsetLeft","zIndex","fontSize","lineHeight","append","domName","blurFn","onBlur","blur","_col_","cellEndEdit","val_1","rowIndex_1","rowData_1","cancelCellEditing","ceRef","editorInputKeydownEvent","onKeyDownForInput","findLastEditCell","altKey","updateChecked","lastEditCell","enterParam","gird","lastCell","lastRow","movePrevCellAndEdit","moveNextCellAndEdit","selectNextRowAndEditCell","clearCellSelectedClass","moveScrollbar","tdPosLeft","containerWidth","tdRect","scrollContainer","psContainer","scrollbarXLeft","tdPosTop","fieldIndex","tagName","firstEditor","cellFieldName","cleanOtherEditorIcon","DatagridRowsComponent","hasFixedColumns","isGroupRow","isGroupFooter","groupLevelField","filterConditions","listenEvent","_s3","_s4","_s5","scrollToCurrentRowSubscription","scrollToFirstSelectedRow","_toggleGroupRow","toggleAllGroupRows","unSubscriptions","getGroupColumn","trackByField","isElementInViewport","_elementIntoView","scrollIntoViewIfNeeded","scrollIntoView","block","inline","currentTrTop","mergeInfo","showCell","getRowSpan","getGroupSummaryData","groupId","TextboxEditorComponent","DatagridHeaderComponent","wrapHeader","scrollbarMode","rightFixedColumnWidth","normalColumnWidth","showOverlay","disableSort","showShadowCls","hasFixedLeftColumns","cfr","dfrs","headerColumnsTable","fixedLeft","setFixedColumnPosition","_chkall","checkedsCount","isIndeterminate","chk","indeterminate","_checked","updateStatus","rw","getRightFixedColWidth","setHeaderPosition","getLineNumberTitle","isShowShadow","fixedLeftWidth","isColspan","isdatafield","realWidth","l","onRowNumerColumnDblClick","rntd","maxRowNumber","onSortColumnClick","FilterRowCreateDirective","vc","filterRowType","filterRowRef","clearFilterValue","createFilterRow","rebuild","_createFilterRow","columnsData","cf","conditionChange","mergeFilterConditions","_conditions","DatagridResizeColumnDirective","dh","ngzone","isEnable","resizer","mouseUp$","resizerMouseDownListener","onMouseDown","onDblClickHandler","thRef","resizable","bindDocumentEvents","documentMouseMoveListener","onMouseMove","documentMouseUpListener","onMouseUp","unbindDocumentEvents","dblclickListener","DatagridFooterComponent","scrollEvents","renderFooterStyle","setFooterPosition","scrollXSubscription","footerBody2","footerBody","positionBottom","footerContainer","positionTop","footerStyler","trStyleAndCls","cssRuleID","cssRuleId2","cssRuleId3","DatagridPagerComponent","maxSize","directionLinks","autoHide","responsive","previousLabel","nextLabel","locked","selectedData","viewMode","contentTemplate","pageChange","pageSizeChange","removeSelectedItem","clearSelectedItem","styles","opacity","mouseInSelectedList","openSelectedList","selectionDataChange$","overLayService","notifySer","NotifyService","OverLayHiddenService","paginationDirective","getPageSize","getTotalItems","pc","listenCheckDataChanged","lockedStyles","lock","unlock","onMouseEnter","selectedListContainer","isInModal","registerMouseEvent","selectItemPanel","destory","onDelSelectedItem","onClearSelected","onSelectListPanelClose","DataGridLoadingComponent","PagerSelectedListComponent","close","clear","trackByFn","onClose","onRemoveClick","onClearClick","SelectedItemPipe","DatagridErrorHandler","handleError","ɵs","DatagridCheckboxComponent","checked$","changeCheckedStatus","rid","_setcheckrows","handleClick","canUncheck","canCheck","status","DatagridHeaderCheckboxComponent","RowDataIdPipe","FormatGroupRowPipe","valueField_1","enumItem","FixedLeftRowsComponent","toggle","selectedRows","listenSubject","_setselectrow","ReplaceXPipe","_i","DatagridGroupRowDirective","groupStyler","ShowRequiredStarPipe","DisableRowPipe","disableRowFn","SelectedRowPipe","FieldValuePipe","rowdata","DatagridCellTooltipDirective","tipMode","showTipTimer","_mouseclick","onMouseLeave","fromElement","cellTiptimer","getTextContainer","donotShowTips","tdWidth","tagetSty","txtWidth","getTextWidth","font","_width","removeChild","cellEl","enable","tipWidth","tipHeight","boxEl","elSize","getBoxSizeObj","minWidth","targetTop","targetLeft","changeTooltipPosition","arrow","tooltipSize","getTooltipSize","innerHeight","textContainer","overflow","updateArrowPosition","elOffset","halfHeight","styleClass","tooltipCls","tooltipStyleClass","tooltipArrow","tooltipText","wordBreak","textAlign","positionStyle","getThemeCls","getWindowSize","boxSize","tooltip","winSize","elLeft","elRight","toolTipTextWidth","CellTootipMessagePipe","showTips","getCellTooltipContent","tipContent","DatagridFilterToolbarComponent","empty","filterText","openFilterPanel","showExpand","enableFilterSetting","windowResizeHandler","filterToolbarRef","actionW","toolbarWidth","filterPanelTextRef","filterChangeSubscription","updateExpandState","bindEvent","filterFields","bindFilterFieldHandler","dropdownFilterFields","ff","isShowExpand","filterTextContainerWidth","filterTextRealWidth","refreshFilter","showFilterTextPanel","HeaderStyleDirective","renderCss2Element","headerStyler","renderStyle","targetEl","styleObj","AutoHeightComponent","RowIsSelectedPipe","RowIsCheckedPipe","GroupFooterRowStylerDirective","buildCustomGroupFooterRowStyle","groupFooterStyler","cs_1","AutoHeightDirective","_dgb","updateDatagridHeight","wheelHeight","wh","dgHeight","DatagridRowDblClickDirective","dblclickRowEvent","FooterCellStylerDirective","setGroupFooterCellStyle","_customStyles_1","DragDropColumnService","moveItem","newIndex","removedIndex","removedItem","backupColumns","providedIn","smoothDnd","constants","wrapperClass","animationClass","SmoothDnDForHeader","dropHandler","dropHandlers","reactDropHandler","handler","wrapChild","DragColumnDirective","dndSer","enableDrag","groupName","orientation","behaviour","dragHandleSelector","dragClass","dropPlaceholder","getGhostParent","getChildPayload","shouldAcceptDrop","sourceContainerOptions","payload","onDropReady","dropResult","run","onDrop","onDragEnter","onDragStart","info","onDragEnd","initDnD","disposeDnd","dispose","groupColumns","middle","addedIndex","currIndex","targetColumn_1","realTagetIndex","moveColumn","newColumns","smoothDnD","DropColumnDirective","getGroupFields","allowGrouping","newGroupFields","some","CellIsReadonlyPipe","DatagridModule","ngModule","FormsModule","ReactiveFormsModule","HttpClientModule","PaginationModule","DataColumnModule","NotifyModule","SimpleFilterModule","FarrisContextMenuModule","provide","ErrorHandler","useClass","useValue","ɵ0","entryComponents"],"mappings":"wrDA6BO,IAAIA,EAAW,WAQlB,OAPAA,EAAWC,OAAOC,QAAU,SAAkBC,GAC1C,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAII,KADTL,EAAIG,UAAUF,GACOJ,OAAOS,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,IAE9E,OAAON,IAEKU,MAAMC,KAAMP,YAkFzB,SAASQ,EAAOC,EAAGV,GACtB,IAAIW,EAAsB,mBAAXC,QAAyBF,EAAEE,OAAOC,UACjD,IAAKF,EAAG,OAAOD,EACf,IAAmBI,EAAYC,EAA3BhB,EAAIY,EAAEL,KAAKI,GAAOM,EAAK,GAC3B,IACI,WAAc,IAANhB,GAAgBA,KAAM,MAAQc,EAAIf,EAAEkB,QAAQC,MAAMF,EAAGG,KAAKL,EAAEM,OAExE,MAAOC,GAASN,EAAI,CAAEM,MAAOA,GACjC,QACQ,IACQP,IAAMA,EAAEI,OAASP,EAAIZ,EAAU,YAAIY,EAAEL,KAAKP,GAE1D,QAAkB,GAAIgB,EAAG,MAAMA,EAAEM,OAE7B,OAAOL,EAGJ,SAASM,IACZ,IAAK,IAAIN,EAAK,GAAIjB,EAAI,EAAGA,EAAIE,UAAUC,OAAQH,IAC3CiB,EAAKA,EAAGO,OAAOd,EAAOR,UAAUF,KACpC,OAAOiB,SCnCPQ,OAAA,EACAC,OAAA,EACAC,QAAA,EACAC,KAAA,EACAC,KAAA,EACAC,SAAA,EACAC,OAAA,EACAC,SAAA,mLAsDAC,MAAA,EAEAC,IAAA,EAEAC,IAAA,EAEAC,IAAA,EAEAC,QAAA,EAEAC,MAAA,2GAsBJ,IC3LaC,EAAe,IAAIC,EAAAA,eAAe,4BAClCC,EAAkB,IAAID,EAAAA,eAAe,+BACrCE,EAAkB,IAAIF,EAAAA,eAAe,yCAErCG,EAAsB,IAAIH,EAAAA,eAAe,4CACzCI,EAAwB,IAAIJ,EAAAA,eAAe,oCAC3CK,EAAqB,IAAIL,EAAAA,eAAe,kCAGxCM,EAAkB,YAOlBC,EAA4B,cAC5BC,EAA8B,gBAK9BC,EAAwB,+BAOxBC,EAAoB,2BAEpBC,EAAmB,0BAGnBC,EAAY,CACrBC,GAAI,CACAC,IAAK,GACLC,OAAQ,GACRC,MAAQ,IAEZC,GAAI,CACAH,IAAK,GACLC,OAAQ,GACRC,MAAQ,IAEZE,GAAI,CACAJ,IAAK,GACLC,OAAQ,GACRC,MAAQ,IAEZG,GAAI,CACAL,IAAK,GACLC,OAAQ,GACRC,MAAQ,KAKHI,EAAgC,CACzCC,SAAU,2BACVC,SAAU,gBACVC,QAAS,eACTC,SAAU,gBACVC,WAAY,kBACZC,cAAe,mBACfC,OAAQ,iBACRC,OAAQ,cACRC,UAAW,iBACXC,UAAW,iBACXC,eAAgB,iBAChBC,SAAQ,cACRC,WAAY,kBACZC,mBAAoB,wBACpBC,cAAe,oBCmBNC,EAAyC,CAClDC,QAAS,KACTC,gBAAgB,EAChBC,WAAY,GACZC,YAAa,GACbC,WAAY,KACZC,aAAc,KACdC,QAAS,GACTC,YAAY,EACZC,gBAAgB,EAChBC,eAAe,EACfC,eAAe,EACfC,UAAW,EACXC,SAAU,GACVC,YAAa,GACbC,oBAAqB,GACrBC,YAAY,EACZC,QAAS,CACLC,SAAU,EACVC,UAAW,EACXC,cAAe,EACfC,iBAAkB,EAClBC,gBAAgB,GAEpBC,SAAUC,UACVC,UAAWD,UACXE,WAAW,EACXC,YAAY,EACZC,QAAS,KACTC,iBAAiB,GAyBRC,EAAkB,gBAElBC,EAAqB,YAErBC,EAAkB,sBAElBC,EAA4B,mBAC5BC,EAAsB,oBACtBC,EAAoB,kBA4BpBC,EAAmB,CAC5B,YACA,MACA,cACA,kBACA,aACA,eACA,mBACA,gBACA,iBACA,YACA,eACA,KACA,YACA,WACA,oBACA,UACA,gBACA,sBACA,eACA,cACA,eACA,aACA,cACA,WACA,MACA,YACA,cACA,UACA,MACA,eACA,UACA,KACA,UACA,kBACA,gBACA,iBACA,mBACA,eACA,SACA,sBACA,cACA,gBACA,eACA,cACA,WACA,aACA,UACA,kBACA,sBACA,cACA,cACA,gBACA,KACA,aACA,iBACA,UACA,cACA,YACA,gBACA,MACA,oBACA,qBACA,iBACA,qBACA,gBACA,cACA,aACA,YACA,WACA,cACA,OACA,qBACA,eACA,uBACA,kBACA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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-06 07:43:07\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-11-11 09:52:46\r\n * @Company: Inspur\r\n * @Version: v0.0.1\r\n */\r\nimport { TemplateRef } from '@angular/core';\r\nimport { ColumnFormatter } from '@farris/ui-common/column';\r\nimport { DatagridValidator } from './datagrid-validator';\r\nimport { Compare } from '@farris/ui-common/types';\r\n\r\nexport interface CustomStyle {\r\n    cls?: string;\r\n    style?: {\r\n        [key: string]: string;\r\n    };\r\n}\r\n\r\nexport type MoveDirection = 'left' | 'right' | 'up' | 'down';\r\ntype TooltipContentFn = (value: any, rowData: any, column: any) => string;\r\ntype TooltipContent = string | TooltipContentFn;\r\nexport type HeaderStyleFn = (column: DataColumn) => CustomStyle;\r\ntype HeaderStyle = string | { [cssKey: string]: string } | HeaderStyleFn;\r\n\r\ntype ColumnFormatterFn = (value, rowData, rowIndex) => any;\r\ntype ColumnFormatterType = ColumnFormatterFn | ColumnFormatter;\r\nexport interface DataColumn {\r\n    dataType?: string;\r\n    id?: string;\r\n    parentId?: any;\r\n    field: string;\r\n    title: string;\r\n    width: number;\r\n    /** è®°å½åå§å®ä¹å®½åº¦ */\r\n    originalWidth?: number;\r\n    /** æ é¢å¯¹é½æ¹å¼ */\r\n    halign?: 'left' | 'center' | 'right';\r\n    /** ææ¬å¯¹é½æ¹å¼ */\r\n    align?: 'left' | 'center' | 'right';\r\n    /** åç´å¯¹é½æ¹å¼ */\r\n    valign?: 'top' | 'middle' | 'bottom';\r\n\r\n    formatter?: ColumnFormatterType;\r\n    styler?: (value, rowData, rowIndex) => CustomStyle;\r\n    /** è¡¨å¤´èªå®ä¹æ ·å¼ */\r\n    headerStyler?: HeaderStyle;\r\n    /** å·¦ä¾§è¾¹è· */\r\n    left?: number;\r\n    /** å³ä¾§è¾¹è· */\r\n    right?: number;\r\n    /** æ¯å¦åºå® */\r\n    fixed?: 'left' | 'right' | 'center';\r\n    /** æ¯å¦æ¾ç¤º */\r\n    visible?: boolean | any;\r\n    /** åªè¯» */\r\n    readonly?: boolean | any;\r\n\r\n    editor?: GridEditor;\r\n    /** ååæ ¼èªå®ä¹æ¨¡æ¿ */\r\n    template?: TemplateRef<any>;\r\n    /** è¡¨å³æ¨¡æ¿ */\r\n    headerTemplate?: TemplateRef<any>;\r\n    /** ç¼è¾å¨æ¨¡æ¿ */\r\n    editorTemplate?: TemplateRef<any>;\r\n    /** é¼ æ ç§»å¨è³ååæ ¼åï¼æ¾ç¤ºæ¬æµ®æ¶æ¯ */\r\n    showTips?: boolean;\r\n    /** ååæ ¼æç¤ºæ¨¡å¼ï¼\r\n     *  allwaysï¼ é¼ æ æ»è¿å³æ¾ç¤º\r\n     *  auto: ååæ ¼å®½åº¦ä¸å¤æ¶æä¼æ¾ç¤º\r\n     */\r\n    tipMode?: 'allways' | 'auto';\r\n    tipContent?: TooltipContent;\r\n    tipOptions?: any;\r\n    /** True to allow the column can be sorted. */\r\n    sortable?: boolean;\r\n    order?: 'asc' | 'desc';\r\n    sorter?: (r1: any, r2: any) => 0 | 1 | -1;\r\n    /** True to allow the column can be resized. */\r\n    resizable?: boolean;\r\n    rowspan?: number;\r\n    /** ååå¹¶ */\r\n    colspan?: number;\r\n    /** ååå¹¶åå§å¼  */\r\n    origianlColSpan?: number;\r\n    index?: number;\r\n    footer?: GridFooterRow;\r\n    /** åè®¸åç»ï¼é»è®¤ä¸º true */\r\n    allowGrouping?: boolean;\r\n    groupFooter?: GridFooterRow;\r\n    validators?: DatagridValidator[];\r\n    // è¿æ»¤è¡\r\n    filter?: ColumnFilter | any;\r\n    /** æ¯å¦å¤è¯­å­æ®µ */\r\n    isMultilingualField?: boolean;\r\n\r\n    /** ç©ºæ ¼é®ååºåè°å½æ° */\r\n    onSpaceHandler?: (e) => any;\r\n    /** åè½¦ååºåè°å½æ° */\r\n    onEnterHandler?: (e) => any;\r\n}\r\n\r\nexport enum ColumnFilterType {\r\n    string = 0,\r\n    number = 1,\r\n    boolean = 2,\r\n    date = 3,\r\n    time = 4,\r\n    datetime = 5,\r\n    enum = 6,\r\n    fromdata = 7\r\n}\r\n/** Client Filter Type */\r\nexport interface FilterCondition {\r\n    operator1?: Compare;\r\n    value1?: any;\r\n    relation?: 'and' | 'or' | '';\r\n    operator2?: Compare;\r\n    value2?: any;\r\n}\r\n\r\nexport interface ColumnFilter {\r\n    type?: ColumnFilterType;\r\n    enableOperator?: boolean;\r\n    options?: any;\r\n}\r\n\r\nexport interface GridEditor {\r\n    type: string;\r\n    options?: any;\r\n    validators?: DatagridValidator[];\r\n}\r\n\r\nexport interface ColumnGroup {\r\n    /** å·¦ä¾§åºå®åæ»å®½åº¦ */\r\n    leftFixedWidth?: number;\r\n    /** å·¦ä¾§åºå®åéå */\r\n    leftFixed?: DataColumn[];\r\n    /** éåºå®åéå */\r\n    normalColumns?: DataColumn[];\r\n    /** å³ä¾§åºå®åéå */\r\n    rightFixed?: DataColumn[];\r\n\r\n    columns?: DataColumn[];\r\n    /** å³ä¾§åºå®åå®½åº¦ */\r\n    rightFixedWidth?: number;\r\n    /** æ­£å¸¸å®½åº¦ */\r\n    normalWidth?: number;\r\n    /** ææåå®½åº¦ä¹å */\r\n    totalWidth?: number;\r\n    /** ç¨æ·è®¾ç½®çåå®½ä¹å */\r\n    originalTotalWidth?: number;\r\n}\r\n\r\nexport interface PaginationInfo {\r\n    enable?: boolean;\r\n    pageList?: number[];\r\n    pageSize?: number;\r\n    pageIndex?: number;\r\n    total?: number;\r\n}\r\n\r\nexport enum CalculationType {\r\n    /** æ  */\r\n    none = -1,\r\n    /** æå¤§å¼ */\r\n    max = 0,\r\n    /** æå°å¼ */\r\n    min,\r\n    /** æ±å */\r\n    sum,\r\n    /** å¹³åæ° */\r\n    average,\r\n    /** æ»è®°å½æ° */\r\n    count\r\n}\r\n\r\nexport interface GridFooterRow {\r\n    options?: {\r\n        /** è®¡ç®ç±»å */\r\n        calculationType?: CalculationType,\r\n        /** éæææ¬ï¼ç´æ¥éå å°TD ä¸­ */\r\n        text?: string;\r\n    };\r\n    /** ææ¬å¯¹é½æ¹å¼ */\r\n    align?: 'left' | 'center' | 'right';\r\n    /** æ°æ®æ ¼å¼å */\r\n    formatter?: (value, rowData, rowIndex) => any | ColumnFormatter;\r\n    /** ååæ ¼æ ·å¼ */\r\n    styler?: (value, rowData, rowIndex) => CustomStyle;\r\n    rowspan?: number;\r\n    colspan?: number;\r\n    visible?: boolean;\r\n}\r\n\r\n\r\nexport const defaultPaginationInfo: PaginationInfo = {\r\n    enable: true,\r\n    pageIndex: 1,\r\n    pageSize: 10\r\n};\r\n","/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-06 07:43:07\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-11-11 10:48:38\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\n\r\nimport { InjectionToken } from '@angular/core';\r\nexport const GRID_EDITORS = new InjectionToken('Farris DataGrid Editors.');\r\nexport const GRID_VALIDATORS = new InjectionToken('Farris DataGrid Validators.');\r\nexport const GRID_FILTER_ROW = new InjectionToken('Farris DataGrid Filter-Row Component.');\r\n\r\nexport const GRID_SETTINGS_PANEL = new InjectionToken('Farris DataGrid Setting Panel Component.');\r\nexport const GRID_SETTINGS_SERVICE = new InjectionToken('Farris DataGrid Setting Service.');\r\nexport const GRID_SETTINGS_HTTP = new InjectionToken(' Datagrid Settings HttpClient.');\r\n\r\nexport const SCROLL_Y_ACTION = 'psScrollY';\r\nexport const SCROLL_X_ACTION = 'psScrollX';\r\nexport const SCROLL_UP_ACTION = 'psScrollUp';\r\nexport const SCROLL_DOWN_ACTION = 'psScrollDown';\r\nexport const SCROLL_LEFT_ACTION = 'psScrollLeft';\r\nexport const SCROLL_RIGHT_ACTION = 'psScrollRight';\r\nexport const SCROLL_Y_REACH_END_ACTION = 'psYReachEnd';\r\nexport const SCROLL_Y_REACH_START_ACTION = 'psYReachStart';\r\nexport const SCROLL_X_REACH_END_ACTION = 'psXReachEnd';\r\nexport const SCROLL_X_REACH_START_ACTION = 'psXReachStart';\r\n\r\nexport const DATAGRID_SETTING_FIELDNAME = '_DATAGRID_CONTROL_PANEL_';\r\n\r\n/** å·¦ä¾§åºå®åé´å½±æ ·å¼åç§° */\r\nexport const FIXED_LEFT_SHADOW_CLS = 'f-datagrid-fixed-left-shadow';\r\nexport const FIXED_RIGHT_SHADOW_CLS = 'f-datagrid-fixed-right-shadow';\r\n\r\nexport const ROW_HOVER_CLS = 'f-datagrid-row-hover';\r\n\r\nexport const ROW_SELECTED_CLS = 'f-datagrid-row-selected';\r\n\r\nexport const CELL_SELECTED_CLS = 'f-datagrid-cell-selected';\r\n\r\nexport const CELL_EDITING_CLS = 'f-datagrid-cell-editing';\r\n\r\n/** è¡é«å°ºå¯¸å®ä¹ */\r\nexport const SIZE_TYPE = {\r\n    sm: {\r\n        row: 29,      // è¡é«\r\n        header: 35,   // è¡¨å¤´è¡é«\r\n        pager:  40    // åé¡µæ¡é«åº¦\r\n    },\r\n    md: {\r\n        row: 36,\r\n        header: 40,\r\n        pager:  44\r\n    },\r\n    lg: {\r\n        row: 46,\r\n        header: 40,\r\n        pager:  44\r\n    },\r\n    xl: {\r\n        row: 60,\r\n        header: 40,\r\n        pager:  44\r\n    },\r\n};\r\n\r\n/** åè®¸ç¼è¾æ¶ï¼éç®æ¾ç¤ºå¯ç¼è¾ååæ ¼çæ ·å¼ */\r\nexport const ALLOW_EDIT_CELL_HIGHLIGHT_CLS = {\r\n    datagrid: 'highlight-allowedit-cell',\r\n    textarea: 'cell-textarea',\r\n    textbox: 'cell-textbox',\r\n    checkbox: 'cell-checkbox',\r\n    datepicker: 'cell-datepicker',\r\n    'input-group': 'cell-input-group',\r\n    select: 'cell-combolist',\r\n    lookup: 'cell-lookup',\r\n    numberbox: 'cell-numberbox',\r\n    combolist: 'cell-combolist',\r\n    'combo-lookup': 'cell-combolist',\r\n    switch: 'cell-switch',\r\n    timepicker: 'cell-timepicker',\r\n    'language-textbox': 'cell-language-textbox',\r\n    'enum-editor': 'cell-enum-editor'\r\n};\r\n\r\n\r\nexport const TR_PREFIX = 'row_';\r\nexport const TR_ID_PREFIX = '#row_';\r\n","/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-12 07:47:12\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-11-19 20:30:44\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { ColumnGroup, DataColumn, FilterCondition} from './../types';\r\nimport { EntityFilter } from '@farris/ui-common/types';\r\n\r\nexport interface RowDataChanges {[id: string]: any; }\r\n\r\nexport interface FarrisDatagridState {\r\n    [key: string]: any;\r\n    width?: number;\r\n    height?: number;\r\n    rowHeight?: number;\r\n    idField?: string;\r\n    data?: any;\r\n    /** å½åé¡µæ°æ® */\r\n    currentPageData?: any;\r\n    originalData?: any;\r\n    showHeader?: boolean;\r\n    headerHeight?: number;\r\n    pageIndex?: number;\r\n    pageSize?: number;\r\n    pagerHeight?: number;\r\n    pagination?: boolean;\r\n    columns: Array<DataColumn> | Array<DataColumn>[];\r\n    flatColumns?: Array<DataColumn>;\r\n    fitColumns: boolean;\r\n    autoFitColumns?: boolean;\r\n    showLineNumber?: boolean;\r\n    showCheckbox?: boolean;\r\n    checkboxColumnWidth: number;\r\n    multiSelect?: boolean;\r\n    /** å½å¯ç¨å¤éæ¶ï¼ç¹å»è¡éä¸­ï¼åªåè®¸ä¸åªæä¸è¡è¢«éä¸­ã */\r\n    onlySelectSelf: boolean;\r\n    selectOnCheck: boolean;\r\n    checkOnSelect: boolean;\r\n    selections?: SelectedRow[];\r\n    checkedRows?: SelectedRow[];\r\n    currentRow?: SelectedRow;\r\n    currentCell?: CellInfo;\r\n    columnsGroup: ColumnGroup;\r\n    virtualized?: boolean;\r\n    showFooter?: boolean;\r\n    /** æ¯å¦å¯ç¨å¼æ­¥èæå è½½æ°æ®: false - å®¢æ·ç«¯åå­ä¸­åæ°ï¼true - è¿ç«¯æå¡å¨å è½½æ°æ®, é»è®¤å¼ä¸º false */\r\n    virtualizedAsyncLoad?: boolean;\r\n    virtual?: VirtualizedState;\r\n    sortName?: string;\r\n    sortOrder?: string;\r\n    multiSort?: boolean;\r\n    remoteSort?: boolean;\r\n    /** æå¡å¨ç«¯è¿æ»¤ */\r\n    remoteFilter?: boolean;\r\n    /** è¿æ»¤æ¡ä»¶ */\r\n    conditions?: EntityFilter | FilterCondition;\r\n    changes: RowDataChanges;\r\n    // å¯ç¨è¡åç»\r\n    groupRows?: boolean;\r\n    // åç»å­æ®µ\r\n    groupField?: string;\r\n    // åç»åè®¡è¡\r\n    groupFooter?: boolean;\r\n    /** æ¾ç¤ºåç»å */\r\n    showGroupColumn?: boolean;\r\n    mergeCell?: boolean;\r\n    enableClientSortForMergeCell?: boolean;\r\n    /** å­å¨ç»ä»¶åå§æ¶çç¸å³å±æ§è®¾ç½® */\r\n    initialOptions?: any;\r\n}\r\n\r\nexport interface VirtualizedState {\r\n    /** èæå è½½ä¸ä¸æ¾ç¤ºåé¡µæ¡æ¶ï¼è®°å½å è½½æ°è®°å½æ¶çç´¢å¼å¼ */\r\n    rowIndex: number;\r\n    /** æ°æ®æ¾ç¤ºçç´¢å¼å¼ */\r\n    startIndex?: number;\r\n    scrollTop?: number;\r\n    virtualRows?: any;\r\n    topHideHeight?: number;\r\n    bottomHideHeight?: number;\r\n    /** é¡µèæ°æ® */\r\n    footer?: any[];\r\n    /** æ¯å¦ç±æ»å¨æ¡è§¦å */\r\n    isScrollChange?: boolean;\r\n}\r\n\r\nexport interface SelectedRow {\r\n    index: number;\r\n    id: any;\r\n    data: any;\r\n    /** ä¸­é´ä½ç½®è¡å¼ç¨ */\r\n    dr?: any;\r\n    /** å·¦ä¾§ä½ç½®è¡å¼ç¨ */\r\n    drl?: any;\r\n    /** å³ä¾§ä½ç½®è¡å¼ç¨ */\r\n    drr?: any;\r\n    editors?: any[];\r\n}\r\n\r\nexport const initDataGridState: FarrisDatagridState = {\r\n    idField: 'id',\r\n    showLineNumber: false,\r\n    selections: [],\r\n    checkedRows: [],\r\n    currentRow: null,\r\n    columnsGroup: null,\r\n    columns: [],\r\n    fitColumns: false,\r\n    onlySelectSelf: true,\r\n    selectOnCheck: true,\r\n    checkOnSelect: true,\r\n    pageIndex: 1,\r\n    pageSize: 20,\r\n    pagerHeight: 40,\r\n    checkboxColumnWidth: 36,\r\n    pagination: false,\r\n    virtual: {\r\n        rowIndex: 0,\r\n        scrollTop: 0,\r\n        topHideHeight: 0,\r\n        bottomHideHeight: 0,\r\n        isScrollChange: false\r\n    },\r\n    sortName: undefined,\r\n    sortOrder: undefined,\r\n    multiSort: false,\r\n    remoteSort: true,\r\n    changes: null,\r\n    showGroupColumn: false\r\n};\r\n\r\nexport interface CellInfo {\r\n    isEditing?: boolean;\r\n    rowData?: any;\r\n    rowId?: any;\r\n    rowIndex?: number;\r\n    field?: string;\r\n    cellElement?: any;\r\n    cellRef?: any;\r\n    editor?: any;\r\n    column?: any;\r\n    cellEditorRef?: any;   //  GridCellEditorDirective\r\n    lastRow?: boolean;\r\n}\r\n\r\nexport interface DataResult {\r\n    footer?: any[];\r\n    items: any[];\r\n    total?: number;\r\n    pageIndex?: number;\r\n    pageSize?: number;\r\n}\r\n/** è¡ç´¢å¼ */\r\nexport const ROW_INDEX_FIELD = '__row_index__';\r\n/** æ¯å¦ä¸ºåç»è¡ */\r\nexport const IS_GROUP_ROW_FIELD = '__group__';\r\n/** å¼ç¨çåç»è¡å±æ§ */\r\nexport const GROUP_ROW_FIELD = '__group_parent_id__';\r\n/** æ¯å¦ä¸ºåç»åè®¡è¡ */\r\nexport const IS_GROUP_FOOTER_ROW_FIELD = '__group_footer__';\r\nexport const GROUP_VISIBLE_FIELD = '__group_visible__';\r\nexport const GROUP_LEVEL_FIELD = '__group_level__';\r\n\r\n\r\nexport interface DatagridGroupRow {\r\n    /** æ è¯æ­¤æ°æ®è¡ä¸ºåç»è¡ */\r\n    [IS_GROUP_ROW_FIELD]: boolean;\r\n    /** åç»ç­çº§ */\r\n    level: number;\r\n    /** æå¨è¡æ°æ® */\r\n    data: any;\r\n    /** åç»å­æ®µå¼ */\r\n    value: any;\r\n    /** åç»è¡æ¯å¦å¯è§ */\r\n    [GROUP_VISIBLE_FIELD]: boolean;\r\n    /** æ¯å¦å±å¼åç»è¡ */\r\n    expanded: boolean;\r\n    /** åç»å­æ®µ */\r\n    field: string;\r\n    colspan: number;\r\n    /** åç»æ»è®°å½æ° */\r\n    total: number;\r\n    /** åç»æ°æ®è¡ */\r\n    rows: any;\r\n    /** ç¶çº§åç»è¡ */\r\n    [GROUP_ROW_FIELD]: any;\r\n}\r\n\r\n\r\nexport const IgnoreProperties = [\r\n    'afterEdit',\r\n    'app',\r\n    'beforeCheck',\r\n    'beforeClickCell',\r\n    'beforeEdit',\r\n    'beforeSelect',\r\n    'beforeSortColumn',\r\n    'beforeUncheck',\r\n    'beforeUnselect',\r\n    'beginEdit',\r\n    'cancelEdited',\r\n    'cd',\r\n    'cellClick',\r\n    'checkAll',\r\n    'checkValuesChange',\r\n    'checked',\r\n    'checkedChange',\r\n    'clientFilterService',\r\n    'colFormatSer',\r\n    'columnMoved',\r\n    'columnSorted',\r\n    'dataChange',\r\n    'dblclickRow',\r\n    'destroy$',\r\n    'dfs',\r\n    'dgColumns',\r\n    'dgContainer',\r\n    'dgPager',\r\n    'dgs',\r\n    'domSanitizer',\r\n    'editors',\r\n    'el',\r\n    'endEdit',\r\n    'farrisInstances',\r\n    'filterChanged',\r\n    'footerTemplate',\r\n    'groupFieldChange',\r\n    'groupFields$',\r\n    'inject',\r\n    'lastCellEnterHandle',\r\n    'loadSuccess',\r\n    'localeService',\r\n    'longTextArea',\r\n    'rowAppended',\r\n    'rowClick',\r\n    'rowDeleted',\r\n    'render2',\r\n    'pageSizeChanged',\r\n    'onDocumentMouseDown',\r\n    'pageChanged',\r\n    'resizeProxy',\r\n    'resizeProxyBg',\r\n    'ro',\r\n    'rowUpdated',\r\n    'scrollInstance',\r\n    'scrollY',\r\n    'scrollYLoad',\r\n    'selectAll',\r\n    'selectChanged',\r\n    'sms',\r\n    'selectValueChange',\r\n    'selectValuesChange',\r\n    'settingService',\r\n    'smartFilterService',\r\n    'subscriptions',\r\n    'trackByRows',\r\n    'unCheckAll',\r\n    'unChecked',\r\n    'unSelect',\r\n    'unSelectAll',\r\n    'zone',\r\n    '__component_type__',\r\n    '__pagination',\r\n    '_active_datagrid_cls',\r\n    '_autoFitColumns',\r\n    '_blured_datagrid_cls',\r\n    '_columns',\r\n    '_custom_datagrid_cls',\r\n    '_editable',\r\n    '_fields',\r\n    '_fit',\r\n    '_fitColumns',\r\n    '_footerData',\r\n    '_groupField',\r\n    '_isResized',\r\n    '_loading',\r\n    '_lockPagination',\r\n    '_selectedRow',\r\n    '_showRowGroupPanel',\r\n    '_sizeType',\r\n    '_total',\r\n];\r\n","/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-06 07:43:53\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-11-19 20:31:27\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nexport class Utils {\r\n\r\n    static uuid() {\r\n        function S4() {\r\n            // tslint:disable-next-line: no-bitwise\r\n            return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n        }\r\n        return (S4() + S4() + '-' + S4() + '-' + S4() + '-' + S4() + '-' + S4() + S4() + S4());\r\n    }\r\n\r\n\r\n    /**\r\n     * è·åå¯¹è±¡ä¸­æå®å­æ®µçå¼ã field: å¯ä»¥ä¸ºå¸¦æå±çº§ç»æçè·¯å¾ï¼å¦ï¼ user.firstName | name ç­\r\n     */\r\n    static getValue(field: string, data: any, safe = false) {\r\n        if (!data) {\r\n            return  '';\r\n        }\r\n        let resultVal = '';\r\n        if (field.indexOf('.') === -1 || data.hasOwnProperty(field)) {\r\n            resultVal = data[field];\r\n        } else {\r\n            resultVal = field.split('.').reduce((obj, key) => {\r\n                if (obj) {\r\n                    return obj[key];\r\n                } else {\r\n                    return null;\r\n                }\r\n            }, data);\r\n        }\r\n\r\n        if (safe) {\r\n            return this.escapeValue(resultVal);\r\n        }\r\n        return resultVal;\r\n    }\r\n\r\n    static setValue( field: string, val: any, obj: { [key: string]: any }, nest = true) {\r\n        if (field) {\r\n            if (field.indexOf('.') > -1 && nest) {\r\n                let lastObj = null;\r\n                const _fields = field.split('.');\r\n                _fields.reduce( (c, p) => {\r\n                    lastObj = c;\r\n                    return c[p];\r\n                }, obj);\r\n\r\n                if (lastObj) {\r\n                    lastObj[_fields.pop()] = val;\r\n                }\r\n            } else {\r\n                obj[field] = val;\r\n            }\r\n        }\r\n    }\r\n\r\n    /** è·åå¤è¯­å¼ */\r\n    static getMultilingualValue(valObj, localeId) {\r\n        if (valObj && typeof valObj === 'object' && Object.keys(valObj).length > 0) {\r\n            localeId = localeId || 'zh-CHS';\r\n            const val = valObj[localeId];\r\n            if (val !== undefined) {\r\n                return val;\r\n            } else {\r\n                return '';\r\n            }\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n\r\n    static escapeValue(val: any) {\r\n        if (val === null || val === undefined || val === '') {\r\n            return '';\r\n        }\r\n\r\n        const escapeHTML = (unsafe_str) => {\r\n            return unsafe_str\r\n                .replace(/&/g, '&amp;')\r\n                .replace(/</g, '&lt;')\r\n                .replace(/>/g, '&gt;')\r\n                .replace(/\\\"/g, '&quot;')\r\n                .replace(/\\'/g, '&#39;')\r\n                .replace(/\\//g, '&#x2F;');\r\n                // .replace('src','drc');\r\n        };\r\n\r\n        if (typeof val === 'string') {\r\n            return escapeHTML(val);\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    static eventPath(evt: any) {\r\n        const path = (evt.composedPath && evt.composedPath()) || evt.path;\r\n        const target = evt.target;\r\n\r\n        if (path != null) {\r\n            return (path.indexOf(window) < 0) ? path.concat(window) : path;\r\n        }\r\n\r\n        if (target === window) {\r\n            return [window];\r\n        }\r\n\r\n        const getParents = (node, memo = undefined) => {\r\n            memo = memo || [];\r\n            const parentNode = node.parentNode;\r\n\r\n            if (!parentNode) {\r\n                return memo;\r\n            } else {\r\n                return getParents(parentNode, memo.concat(parentNode));\r\n            }\r\n        };\r\n\r\n        return [target].concat(getParents(target), window);\r\n    }\r\n\r\n    static hasDialogOpen() {\r\n        // return document.body.classList.value.indexOf('modal-open') > -1;\r\n        // å¼å®¹IE 11\r\n        return document.body.className.indexOf('modal-open') > -1;\r\n    }\r\n\r\n    static on(el, evt, fn, opts: any = {}) {\r\n        const delegatorFn = e => e.target.matches(opts.target) && fn.call(e.target, e);\r\n        el.addEventListener(evt, opts.target ? delegatorFn : fn, opts.options || false);\r\n        return () => {\r\n            el.removeEventListener(evt, delegatorFn, opts);\r\n        };\r\n    }\r\n\r\n    static off(el, evt, fn= () => {}, opts: any = {}) {\r\n        el.removeEventListener(evt, fn, opts);\r\n    }\r\n    /** è·åå­ç¬¦é¿åº¦ï¼ä¸­ææ±å­å 2ä¸ªå­ç¬¦ */\r\n    static getBLen(str) {\r\n        if (str == null) {\r\n            return 0;\r\n        }\r\n        if (typeof str !== 'string') {\r\n          str += '';\r\n        }\r\n        return str.replace(/[^\\x00-\\xff]/g, '01').length;\r\n    }\r\n\r\n    // static difference(first: any[], second: any[]): any[] {\r\n    //     return first.filter(item => !second.includes(item));\r\n    // }\r\n\r\n    // static getDiffItems(arr1, arr2) {\r\n    //     const diff1 = Utils.difference(arr1, arr2);\r\n    //     const diff2 = Utils.difference(arr2, arr1);\r\n\r\n    //     return diff1.concat(diff2);\r\n    // }\r\n\r\n    static getWhenEmptyText(col: any, localeId) {\r\n\r\n        const EMPTY_INPUT_TEXT = {\r\n            'zh-CHS': 'è¯·è¾å¥',\r\n            'zh-CHT': 'è«è¼¸å¥',\r\n            en: 'Please input'\r\n        };\r\n\r\n        const EMPTY_SELECT_TEXT = {\r\n            'zh-CHS': 'è¯·éæ©',\r\n            'zh-CHT': 'è«é¸æ',\r\n            en: 'Please select'\r\n        };\r\n\r\n\r\n        if (col.editor) {\r\n            switch (col.editor.type) {\r\n                case 'datepicker':\r\n                case 'select':\r\n                case 'lookup':\r\n                case 'combolist':\r\n                case 'combo-lookup':\r\n                    return  EMPTY_SELECT_TEXT[localeId];\r\n                default:\r\n                    return EMPTY_INPUT_TEXT[localeId];\r\n            }\r\n        }\r\n\r\n        // æ§å¶é¢æ¿å\r\n        if (col.field === '_datagrid-setting-control_') {\r\n            return '';\r\n        }\r\n\r\n        return EMPTY_INPUT_TEXT[localeId];\r\n    }\r\n}\r\n\r\n","import { DataColumn, ColumnFilterType } from './../types/data-column';\r\nimport { bindCallback, of } from 'rxjs';\r\n\r\nexport class DatagridColumnsHelper {\r\n\r\n    static gridInstance = null;\r\n\r\n    /** è·åæ»åæ° */\r\n    private static getColumnTotal(firstCols: any[]) {\r\n        let total = 0;\r\n        firstCols.forEach(n => {\r\n            total += (n.colspan || 1);\r\n        });\r\n        return total;\r\n    }\r\n\r\n    // æ¥æ¾æªèµå¼é¡¹çç´¢å¼\r\n    private static findUndefinedItem(arr) {\r\n        for (let i = 0; i < arr.length; i++) {\r\n            if (arr[i] == undefined) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    private static getColumnFields(columns) {\r\n        const aa = [];\r\n        // æ ¹æ®ç¬¬ä¸è¡è®¡ç®æ»åæ°\r\n        const colTotal = DatagridColumnsHelper.getColumnTotal(columns[0]);\r\n        // åå»ºç©ºæ°ç»\r\n        for (let i = 0; i < columns.length; i++) {\r\n            aa[i] = new Array(colTotal);\r\n        }\r\n        for (let i = 0; i < columns.length; i++) {\r\n            columns[i].forEach(col => {\r\n                let k = DatagridColumnsHelper.findUndefinedItem(aa[i]);\r\n                if (k >= 0) {\r\n                    const field = col.field || col.id || '';\r\n                    for (let c = 0; c < (col.colspan || 1); c++) {\r\n                        for (let r = 0; r < (col.rowspan || 1); r++) {\r\n                            aa[i + r][k] = field;\r\n                        }\r\n                        k++;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return aa;\r\n    }\r\n\r\n    static columnIsVisible(col: any, ins: any) {\r\n        if (col.visible === undefined) {\r\n            col.visible = true;\r\n        }\r\n\r\n        const t = typeof col.visible;\r\n        if (t === 'boolean') {\r\n            return col.visible;\r\n        } else if ( t === 'function') {\r\n            return col.visible({instance: ins, column: col});\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    static getFields(columns) {\r\n        // ç§»é¤éèçå\r\n        const _cols = columns.map(cols => {\r\n            cols = cols.filter(col => DatagridColumnsHelper.columnIsVisible(col, DatagridColumnsHelper.gridInstance));\r\n            return cols;\r\n        });\r\n\r\n        const fields =  DatagridColumnsHelper.getColumnFields(_cols);\r\n        return fields.length ? fields[fields.length - 1] : fields;\r\n    }\r\n\r\n    static getFilterEnumOptions(column: DataColumn) {\r\n        let enumSetting = null;\r\n        if (column.filter.type === ColumnFilterType.enum) {\r\n            const fmt = column.formatter as any;\r\n            if (fmt) {\r\n                enumSetting = fmt.options;\r\n            } else {\r\n                if (column.filter.options) {\r\n                    enumSetting = column.filter.options;\r\n                }\r\n            }\r\n        }\r\n\r\n        return enumSetting;\r\n    }\r\n\r\n    static getEnumText(enumOpts: any, value1: any) {\r\n        if (!enumOpts) {\r\n            return  '';\r\n        }\r\n        const { valueField, textField, data } = enumOpts;\r\n        let str = '';\r\n        if (value1) {\r\n            str += ` ${value1.map(v => {\r\n                const enumItem = data.find(d => d[valueField] === v);\r\n                return enumItem[textField];\r\n            }).join(',')}`;\r\n        }\r\n        return str;\r\n    }\r\n\r\n    static columnVisibleAsObservable(col: DataColumn) {\r\n        if (typeof col.visible === 'function') {\r\n            const visibleAsObservable = bindCallback(col.visible);\r\n            return visibleAsObservable();\r\n        }\r\n        return of(col.visible);\r\n    }\r\n\r\n    static getParentColumns(col: DataColumn, allCols) {\r\n        const arr = [];\r\n        const _getParents = (c) => {\r\n            if (c && c.parentId) {\r\n                const parentCol = allCols.find(n => n.id === c.parentId);\r\n                // arr.splice(0, 0, parentCol);\r\n                arr.push(parentCol);\r\n                _getParents(parentCol);\r\n            }\r\n        };\r\n        _getParents(col);\r\n        return arr;\r\n    }\r\n\r\n    static getChildColumns(col: DataColumn, allCols) {\r\n        const arr = [];\r\n        const _getChilds = (c) => {\r\n            if (c && c.parentId) {\r\n                const childs = allCols.filter(n => n.parentId === c.id);\r\n                arr.splice(0, 0, ...childs);\r\n                childs.forEach(child => {\r\n                    _getChilds(child);\r\n                });\r\n            }\r\n        };\r\n        _getChilds(col);\r\n        return arr;\r\n    }\r\n\r\n    // æ£æ¥å¤è¡¨å¤´æ¶ï¼è®¾è®¡å¨ä¸­å°åè®¾ä¸ºéè\r\n    static checkGroupHeaderColumnVisible(allCols) {\r\n        const hiddenFields = allCols.filter(n => n.visible === false).map(n => n.field);\r\n        hiddenFields.forEach(field => {\r\n            const _col = allCols.find(col => col.field === field || col.id === field);\r\n            if (_col) {\r\n                const parents = DatagridColumnsHelper.getParentColumns(_col, allCols);\r\n\r\n                parents.forEach(p => {\r\n                    const _childs = allCols.filter(n => n.parentId === p.id && (n.visible || n.visible === undefined) );\r\n                    p.colspan = _childs.reduce(( r, c ) => {\r\n                        r = r + (c.colspan || 1);\r\n                        return r;\r\n                    }, 0);\r\n                    p.visible = !!p.colspan;\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    // å¤è¡¨å¤´ä¸ä»æä¸åæ¾ç¤º\r\n    static onlyOneColumn() {\r\n\r\n    }\r\n}\r\n","/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-06 07:43:53\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-11-20 07:39:45\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\n\r\nimport { Injectable, EventEmitter } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, merge, Subject } from 'rxjs';\r\nimport { map, distinctUntilChanged, filter, switchMap, auditTime, debounceTime, debounce } from 'rxjs/operators';\r\nimport { DataColumn, ColumnGroup, CalculationType } from '../types';\r\nimport { FarrisDatagridState, initDataGridState, DataResult, CellInfo, VirtualizedState, SelectedRow,\r\n        RowDataChanges, ROW_INDEX_FIELD, IS_GROUP_ROW_FIELD, GROUP_ROW_FIELD, IS_GROUP_FOOTER_ROW_FIELD, GROUP_VISIBLE_FIELD, GROUP_LEVEL_FIELD } from './state';\r\nimport { VirtualizedLoaderService } from './virtualized-loader.service';\r\nimport { DatagridRow } from '../types/datagrid-row';\r\nimport { cloneDeep, groupBy, sumBy, maxBy, minBy, meanBy, isPlainObject, flatten } from 'lodash-es';\r\nimport { Utils } from '../utils/utils';\r\nimport { DatagridColumnsHelper } from './datagrid-columns.helper';\r\nimport { BigNumber } from 'bignumber.js';\r\n@Injectable()\r\nexport class DatagridFacadeService {\r\n\r\n    localId = 'zh-CHS';\r\n\r\n    protected _state: FarrisDatagridState;\r\n    // public virtualizedService: VirtualizedLoaderService;\r\n\r\n    store = new BehaviorSubject<FarrisDatagridState>(null);\r\n\r\n    virtualRowSubject = new BehaviorSubject<any>(null);\r\n    gridSizeSubject = new Subject<any>();\r\n    errorSubject = new Subject();\r\n    private selectRowSubject = new Subject<any>();\r\n    private unSelectRowSubject = new Subject<any>();\r\n    private columnResizeSubject = new Subject<any>();\r\n    private clearSelectionSubject = new Subject();\r\n    private checkRowSubject = new Subject<any>();\r\n    private unCheckRowSubject = new Subject<any>();\r\n    private clearCheckedsSubject = new Subject<any>();\r\n    private clearAllSubject = new Subject<any>();\r\n    private checkAllSubject = new Subject();\r\n    private unCheckAllSubject =  new Subject();\r\n    private selectAllSubject = new Subject();\r\n    private selectCellSubject = new Subject();\r\n\r\n    error$ = this.errorSubject.asObservable();\r\n    selectRow$ = this.selectRowSubject.asObservable();\r\n    unSelectRow$ =  this.unSelectRowSubject.asObservable();\r\n    columnResize$ = this.columnResizeSubject.asObservable();\r\n    clearSelections$ = this.clearSelectionSubject.asObservable();\r\n    checkRow$ = this.checkRowSubject.asObservable();\r\n    unCheckRow$ = this.unCheckRowSubject.asObservable();\r\n    clearCheckeds$ = this.clearCheckedsSubject.asObservable();\r\n    clearAll$ = this.clearAllSubject.asObservable();\r\n    checkAll$ = this.checkAllSubject.asObservable();\r\n    unCheckAll$ = this.unCheckAllSubject.asObservable();\r\n    selectAll$ = this.selectAllSubject.asObservable();\r\n    currentCell$ = this.selectCellSubject.asObservable();\r\n    editCell$ = new EventEmitter();\r\n    clientSort$ = new EventEmitter();\r\n    rowAppend$ = new EventEmitter();\r\n    rowUpdate$ = new EventEmitter();\r\n    rowDelete$ = new EventEmitter();\r\n\r\n    expandGroupRow =  new EventEmitter();\r\n    collapseGroupRow =  new EventEmitter();\r\n\r\n    updateCheckboxState$ = new EventEmitter();\r\n\r\n    readonly state$ = this.store.asObservable().pipe(\r\n        filter( (state: any) => state)\r\n    );\r\n\r\n    readonly columnGroup$ = this.gridSizeSubject.asObservable().pipe(\r\n        filter( (state: any) => state),\r\n        map((state: FarrisDatagridState) => state.columnsGroup),\r\n        switchMap((colgroup: any) => {\r\n            return of( colgroup);\r\n        }),\r\n        distinctUntilChanged()\r\n    );\r\n\r\n    gridSize$ = this.gridSizeSubject.asObservable().pipe(\r\n        filter( (state: any) => state),\r\n        map((state: FarrisDatagridState) => {\r\n            const { headerHeight, pagerHeight, width, columnsGroup, height, rowHeight } = {...state};\r\n            return { headerHeight, pagerHeight, width, columnsGroup, height, rowHeight };\r\n        }),\r\n        distinctUntilChanged()\r\n    );\r\n\r\n    readonly data$ = this.virtualRowSubject.pipe(\r\n        filter(vs => vs),\r\n        switchMap((vs: VirtualizedState) => {\r\n            return of({\r\n                index: vs.startIndex || 0,\r\n                rows: vs.virtualRows || [],\r\n                top: vs.topHideHeight,\r\n                bottom: vs.bottomHideHeight,\r\n                scrolling: vs.isScrollChange\r\n            });\r\n        }),\r\n        distinctUntilChanged()\r\n    );\r\n\r\n    difference = (first: any[], second: any[]) => first.filter(item => !second.includes(item));\r\n    differenceBy = (a, b, fn) => {\r\n        const s = new Set(b.map(fn));\r\n        return a.map(fn).filter(el => !s.has(el));\r\n    }\r\n\r\n    constructor(private http: HttpClient) {\r\n        this._state =  cloneDeep(initDataGridState);\r\n    }\r\n\r\n    updateVirthualRows(scrolltop: number, isScrollChange = false) {\r\n        const virtual = this.getVirthualRows(scrolltop);\r\n        virtual.isScrollChange = isScrollChange;\r\n        this.updateState({virtual}, false);\r\n        this.virtualRowSubject.next(virtual);\r\n    }\r\n\r\n    getVirthualRows(scrolltop): VirtualizedState {\r\n        if (scrolltop === undefined) {\r\n            scrolltop = 0;\r\n        }\r\n\r\n        const data =  this._state.data || [];\r\n        const virtual = {rowIndex: 0, virtualRows: data, topHideHeight: 0, bottomHideHeight: 0 };\r\n\r\n        if (data.length === 0 || (this._state.autoHeight && !this._state.groupRows)) {\r\n            virtual.virtualRows = data;\r\n            return virtual;\r\n        }\r\n\r\n        if (this._state.flatColumns && this._state.flatColumns.length) {\r\n            // data = this._state.data;\r\n\r\n            // if (!this._state.groupRows) {\r\n            //     if (this._state.virtual && this._state.virtualized) {\r\n            //         this.virtualizedService.state = this._state;\r\n            //         const rows = this.virtualizedService.getRows(scrolltop);\r\n            //         virtual = { ...this._state.virtual, ...rows };\r\n            //     } else {\r\n            //         virtual.virtualRows = data;\r\n            //     }\r\n            // } else {\r\n            //     // è¡åç»æ°æ®å¤ç\r\n            //     const groupRows = this.groupRows2(cloneDeep(data));\r\n            //     virtual.virtualRows = groupRows;\r\n            // }\r\n            if (this._state.groupRows) {\r\n                // è¡åç»æ°æ®å¤ç\r\n                const groupRows = this.groupRows2(cloneDeep(data));\r\n                virtual.virtualRows = groupRows;\r\n            }\r\n        }\r\n\r\n        if (this._state.mergeCell && this._state.enableClientSortForMergeCell) {\r\n            virtual.virtualRows = this.sort(virtual.virtualRows);\r\n        }\r\n\r\n        return virtual;\r\n    }\r\n\r\n    getData(original = false) {\r\n        if (original) {\r\n            return this._state.originalData || [];\r\n        }\r\n        return this._state.data || [];\r\n    }\r\n\r\n    getState() {\r\n        return this._state;\r\n    }\r\n\r\n    getVirtualState() {\r\n        return this._state.virtual;\r\n    }\r\n\r\n    getPageInfo() {\r\n        const { pageIndex, pageSize } = {...this._state};\r\n        return { pageIndex, pageSize };\r\n\r\n    }\r\n\r\n    initState(state: Partial<FarrisDatagridState>) {\r\n        this.updateState(state, false);\r\n        this._state.originalData = cloneDeep(this._state.data);\r\n        this.initColumns();\r\n\r\n        this.gridSizeSubject.next(this._state);\r\n        this.updateVirthualRows(0);\r\n    }\r\n\r\n\r\n    /** å è½½æ°æ®\r\n     * @param data: æ°æ®åè¡¨\r\n     * @param updateOriginalData æ¯å¦æ´æ°åå§æ°æ®, é»è®¤ä¸º true\r\n     */\r\n    loadData(data: any, updateOriginalData = true, sortable = false) {\r\n        data = data || [];\r\n        this.updateState({ data }, false);\r\n\r\n        if (updateOriginalData) {\r\n            this._state.originalData = cloneDeep(this._state.data);\r\n        }\r\n        if (sortable && this._state.sortName) {\r\n            const sortedData = this.sort(this._state.data);\r\n            this.updateState({ data: sortedData }, false);\r\n        } else {\r\n            // this.updateState({ data: this._state.originalData }, false);\r\n        }\r\n\r\n        this.updateVirthualRows(this._state.virtual.scrollTop || 0);\r\n    }\r\n\r\n    /** å¤åæå®è¡çæ°æ® */\r\n    resetRow(rowId: any) {\r\n        const origData = this._state.originalData;\r\n        if (origData) {\r\n            const origRowData = origData.find(r => this.primaryId(r) === rowId);\r\n            this.getCurrentRow().data = cloneDeep(origRowData);\r\n            this.updateRow(rowId, origRowData);\r\n        }\r\n    }\r\n\r\n    // loadDataForVirtual(data: any) {\r\n    //     this.updateState({ data }, false);\r\n    //     // this.virtualizedService.state = this._state;\r\n    //     const virtual = { ...this._state.virtual, ...this.virtualizedService.reload() };\r\n    //     this.virtualRowSubject.next(virtual);\r\n    //     this.updateState({virtual});\r\n    // }\r\n\r\n    fetchData(url: string): Observable<DataResult> {\r\n        return this.http.get(url).pipe(\r\n            map( r => r as DataResult )\r\n        );\r\n    }\r\n\r\n    setTotal(total: number) {\r\n        this.updateState( {total}, false );\r\n    }\r\n\r\n    updateProperty(property: string, value: any) {\r\n        this.updateState({ [property]: value }, false);\r\n    }\r\n\r\n    setPagination(pageIndex: number, pageSize: number, total: number) {\r\n        this.updateState( { pageIndex, pageSize, total }, false);\r\n    }\r\n\r\n    setScrollTop(scrollTop: number) {\r\n        const virtual = { ...this._state.virtual, scrollTop};\r\n        this.updateState({virtual}, false);\r\n    }\r\n\r\n    isMultiSelect() {\r\n        return this._state.multiSelect;\r\n    }\r\n\r\n    private _isRowSelected(id: any) {\r\n        if (!id || !this._state.currentRow) {\r\n            return false;\r\n        } else {\r\n            return this._state.currentRow.id.toString() === id.toString();\r\n        }\r\n    }\r\n\r\n    isRowSelected(id: any, selections = null) {\r\n        const flag = this._isRowSelected(id);\r\n        if (!this.isMultiSelect() || this._state.onlySelectSelf) {\r\n           return flag;\r\n        } else {\r\n            if (!selections) {\r\n                selections = this._state.selections;\r\n            }\r\n\r\n            if (this._canCancelSelectWhenMulti()) {\r\n                return flag;\r\n            }\r\n\r\n            if (!selections || selections.length === 0) {\r\n                return false;\r\n            } else {\r\n                return selections.findIndex(sr => sr.id == id) > -1;\r\n            }\r\n        }\r\n    }\r\n\r\n    isRowChecked(id: any, checkeds = null) {\r\n        if (!checkeds) {\r\n            checkeds = this.getCheckeds();\r\n        }\r\n        if (!id || !checkeds.length) {\r\n            return false;\r\n        }\r\n\r\n        return checkeds.findIndex(sr => sr.id.toString() === id.toString()) > -1;\r\n    }\r\n\r\n    isCheckAll() {\r\n        const allRows = this.getAllRowsForLive().map(r => this.primaryId(r));\r\n        const checkIds = this._state.checkedRows.map(r => r.id);\r\n        if (this.difference(allRows, checkIds).length) {\r\n            return false; // this._state.checkedRows.length === allRows.length;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    getCurrentPageCheckeds() {\r\n        const allRows = this.getAllRowsForLive().map(r => this.primaryId(r));\r\n        return this._state.checkedRows.filter(n => allRows.indexOf(n.id) > -1);\r\n    }\r\n\r\n    getCurrentRow() {\r\n        return this._state.currentRow || undefined;\r\n    }\r\n\r\n    getSelections() {\r\n        // å¦ææ°æ®æºåäºï¼éè¦éæ°è®¡ç®\r\n        const data = this._state.data;\r\n        if (this._state.selections && this._state.selections.length) {\r\n            if (!data || !data.length) {\r\n                this._state.selections = [];\r\n            } else {\r\n                const temp: any[] = data.map(n => this.primaryId(n));\r\n                this._state.selections = this._state.selections.filter(n => {\r\n                    return temp.includes(n.id);\r\n                });\r\n            }\r\n        }\r\n        return this._state.selections || [];\r\n    }\r\n\r\n    private getCheckedRowsFromSource() {\r\n        return (this._state.checkedRows || []).map(n => {\r\n            const d = this.findRow(n.id);\r\n            if (d && d.data) {\r\n                n.data = d.data;\r\n            }\r\n            return n;\r\n        });\r\n    }\r\n\r\n    getCheckeds(fromDataSource = false) {\r\n        if (fromDataSource) {\r\n            this._state.checkedRows = this.getCheckedRowsFromSource();\r\n        }\r\n\r\n        return this._state.checkedRows || [];\r\n    }\r\n\r\n    updateCheckedData(rowid: any, rowData: { [key: string]: string }) {\r\n        const checkeds = this.getCheckeds();\r\n        if (checkeds.length) {\r\n            const item = checkeds.find(n => this.primaryId(n) == rowid);\r\n            if (item) {\r\n                Object.keys(rowData).forEach(k => {\r\n                    Utils.setValue(k, rowData[k], item.data);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    setCheckedRows(ids: string[], checked = true) {\r\n        if (ids && ids.length) {\r\n            let checkeds = this._state.checkedRows || [];\r\n\r\n            ids.forEach(id => {\r\n                const row = this.findRow(id);\r\n                if (checked && row) {\r\n                    if ( !this.isRowChecked(id, checkeds)) {\r\n                        const srow = { id: this.primaryId(row.data), data: row.data, index: row.index };\r\n                        checkeds.push(srow);\r\n                    }\r\n                } else {\r\n                    if (!this._state.enableMorePageSelect || !checked) {\r\n                        checkeds = checkeds.filter(sr => sr.id !== id);\r\n                    }\r\n                }\r\n            });\r\n            this._state.checkedRows = checkeds;\r\n        } else {\r\n            this._clearCheckeds();\r\n        }\r\n    }\r\n\r\n    checkRecord(id: any, checked = true) {\r\n        if (id) {\r\n            const row = this.findRow(id);\r\n            if (row) {\r\n                const {index: rowIndex, data: rowData} = {...row};\r\n                if (checked) {\r\n                    this.checkRow(rowIndex, rowData);\r\n                } else {\r\n                    this.unCheckRow(rowIndex, rowData);\r\n                }\r\n            } else {\r\n                this.errorSubject.next(`æªæ¾å°IDä¸º${id}çæ°æ®ã`);\r\n            }\r\n        } else {\r\n            this.errorSubject.next(`åæ°id ä¸è½ä¸ºç©ºã`);\r\n        }\r\n    }\r\n\r\n    checkRow(rowIndex: number, rowData: any, grid: any = null) {\r\n        if (!this._state.multiSelect) {\r\n            this._clearCheckeds();\r\n        }\r\n\r\n        const id = this.primaryId(rowData);\r\n        const checkeds = this._state.checkedRows || [];\r\n\r\n        const srow = { id, data: rowData, index: rowIndex };\r\n        if (id && !this.isRowChecked(id, checkeds)) {\r\n            checkeds.push(srow);\r\n            this._state.checkedRows = checkeds;\r\n\r\n            if (this._state.selectOnCheck) {\r\n                if (grid && grid.instance && grid.instance.beforeSelect) {\r\n                    grid.instance.beforeSelect({ rowIndex, rowData, gridInstance: grid.instance }).subscribe((e) => {\r\n                        if (e) {\r\n                            this.selectRow(rowIndex, rowData);\r\n                        }\r\n                    });\r\n                } else {\r\n                    this.selectRow(rowIndex, rowData);\r\n                }\r\n            }\r\n\r\n            this.checkRowSubject.next(srow);\r\n        }\r\n\r\n        this.updateCheckboxState$.emit({...srow, checked: true});\r\n    }\r\n\r\n    unCheckRow(rowIndex: number, rowData: any, grid: any = null) {\r\n        const id = this.primaryId(rowData);\r\n        let checkeds = this._state.checkedRows || [];\r\n        const srow = { id, data: rowData, index: rowIndex };\r\n        if (this.isRowChecked(id, checkeds)) {\r\n            checkeds = checkeds.filter(sr => '' + sr.id !== '' + id);\r\n            this._state.checkedRows = checkeds;\r\n\r\n            if (this._state.selectOnCheck) {\r\n                if (grid && grid.instance && grid.instance.beforeUnselect) {\r\n                    grid.instance.beforeUnselect({ rowIndex, rowData, gridInstance: grid.instance }).subscribe((e) => {\r\n                        if (e) {\r\n                            this.unSelectRow(rowIndex, rowData);\r\n                        }\r\n                    });\r\n                } else  {\r\n                    this.unSelectRow(rowIndex, rowData);\r\n                }\r\n            }\r\n\r\n            this.unCheckRowSubject.next(srow);\r\n        }\r\n\r\n        this.updateCheckboxState$.emit({...srow, checked: false});\r\n    }\r\n\r\n    setCurrentPageData(data: any) {\r\n        this._state.currentPageData = data;\r\n    }\r\n\r\n    getCurrentPageData() {\r\n        return this._state.currentPageData || [];\r\n    }\r\n\r\n\r\n    /** è·åææå¯ä»¥æä½çè¡ */\r\n    private getAllRowsForLive() {\r\n        let allData = this._state.data || [];\r\n\r\n        if (this._state.pagination && !this._state.pagerOnServer) {\r\n            // è·åå½åé¡µæ°æ®\r\n            allData = this.getCurrentPageData();\r\n        }\r\n\r\n        // æé¤æç¦ç¨çè¡\r\n        if (this._state.disableRow) {\r\n            allData = allData.filter((n, i) => !this._state.disableRow(n, i));\r\n        }\r\n        return allData;\r\n    }\r\n\r\n    checkAll() {\r\n        this._state.checkedRows = this._state.checkedRows || [];\r\n        const allData = this.getAllRowsForLive();\r\n        const allCheckeds = allData.map( (r, i) => {\r\n            return {\r\n                id: this.primaryId(r),\r\n                index: i,\r\n                data: r\r\n            };\r\n        });\r\n\r\n        if (!this._state.checkedRows.length) {\r\n            this._state.checkedRows = allCheckeds;\r\n        } else {\r\n            const _checkeds = [];\r\n            allCheckeds.forEach(element => {\r\n                if (!this._state.checkedRows.find(n => n.id == element.id)) {\r\n                    _checkeds.push(element);\r\n                }\r\n            });\r\n\r\n            this._state.checkedRows = this._state.checkedRows.concat(_checkeds);\r\n        }\r\n\r\n\r\n        if (this._state.selectOnCheck && !this._state.onlySelectSelf) {\r\n            this._state.selections = [];\r\n            this._state.selections = allData.map( (r, i) => {\r\n                return {\r\n                    id: this.primaryId(r),\r\n                    index: i,\r\n                    data: r\r\n                };\r\n            });\r\n        }\r\n\r\n        this.checkAllSubject.next(this._state.checkedRows);\r\n    }\r\n\r\n    selectAll() {\r\n        this._state.selections = [];\r\n\r\n        const allData = this.getAllRowsForLive();\r\n\r\n        this._state.selections = allData.map( (r, i) => {\r\n            return {\r\n                id: this.primaryId(r),\r\n                index: i,\r\n                data: r\r\n            };\r\n        });\r\n\r\n        if (this._state.checkOnSelect) {\r\n            this._state.checkedRows = [];\r\n            this._state.checkedRows = allData.map( (r, i) => {\r\n                return {\r\n                    id: this.primaryId(r),\r\n                    index: i,\r\n                    data: r\r\n                };\r\n            });\r\n        }\r\n\r\n        this.selectAllSubject.next(this._state.selections);\r\n    }\r\n\r\n    findRow(id): {index: number, data: any} {\r\n        if (this._state.data && this._state.data.length) {\r\n            let index = -1;\r\n            const data = this._state.data.find( (n, i) => {\r\n                const r = this.primaryId(n) == id;\r\n                if (r) {\r\n                    index = i;\r\n                }\r\n                return r;\r\n            });\r\n            if (index === -1) {\r\n                return null;\r\n            }\r\n            return {index, data};\r\n        }\r\n        return null;\r\n    }\r\n\r\n    findRowIndex(id) {\r\n        if (this._state.data && this._state.data.length) {\r\n            return this._state.data.findIndex(n => this.primaryId(n) === id);\r\n        }\r\n        return -1;\r\n    }\r\n    /**\r\n     * è®¾ç½®éä¸­è¡ï¼ä¸è§¦ågrid éä¸­äºä»¶ï¼åæ¶éä¸­äºä»¶\r\n     */\r\n    setSelectRow(id: string, select = true, emit = true) {\r\n        const row = this.findRow(id);\r\n        const {index: rowIndex, data: rowData} = {...row};\r\n        const srow = { id, data: rowData, index: rowIndex };\r\n\r\n        if (this.isMultiSelect()) {\r\n            if (select) {\r\n                this.selectRowForMulti(srow, false, emit);\r\n            } else {\r\n                this.unSelectRowForMulti(srow, false, emit);\r\n            }\r\n        }\r\n\r\n        const _sr = select ? srow : null;\r\n        this.updateState({ currentRow: _sr}, false);\r\n    }\r\n\r\n    selectRecord(id: any, select = true) {\r\n        if (id) {\r\n            const row = this.findRow(id);\r\n            if (row) {\r\n                const {index: rowIndex, data: rowData} = {...row};\r\n                if (select) {\r\n                    this.selectRow(rowIndex, rowData);\r\n                } else {\r\n                    this.unSelectRow(rowIndex, rowData);\r\n                }\r\n            } else {\r\n                this.errorSubject.next(`æªæ¾å°IDä¸º${id}çæ°æ®ã`);\r\n            }\r\n        } else {\r\n            this.errorSubject.next(`åæ°id ä¸è½ä¸ºç©ºã`);\r\n        }\r\n    }\r\n\r\n    selectRow(rowIndex: number, rowData: any, gridOpts = null) {\r\n        const isMultiSelect = this.isMultiSelect();\r\n        const id = this.primaryId(rowData);\r\n        const srow = { id, data: rowData, index: rowIndex };\r\n\r\n        if (!this.isRowSelected(id) || !this._state.currentRow) {\r\n            if (!isMultiSelect) {\r\n                this.updateState({ currentRow: srow }, false);\r\n                this.selectRowSubject.next(this._state.currentRow);\r\n\r\n                if (this._state.showCheckbox && this._state.checkOnSelect) {\r\n                    this._state.checkedRows = [ srow ];\r\n\r\n                    if (gridOpts && gridOpts.instance && gridOpts.instance.beforeCheck) {\r\n                        gridOpts.instance.beforeCheck({ rowIndex, rowData, gridInstance: gridOpts.instance }).subscribe(() => {\r\n                            this.checkRowSubject.next(srow);        \r\n                        })\r\n                    } else {\r\n                        this.checkRowSubject.next(srow);\r\n                    }\r\n                }\r\n            } else {\r\n                this.selectRowForMulti(srow, true, gridOpts);\r\n            }\r\n        }\r\n    }\r\n\r\n    private selectRowForMulti(srow: { id: any, data: any, index: any }, emit = true, gridOpts = null) {\r\n        if (this._state.onlySelectSelf) {\r\n            this._clearSelections();\r\n            this.updateState({ currentRow: srow, selections: [srow] }, false);\r\n        } else {\r\n            this._state.selections = this._state.selections || [];\r\n            this._state.selections = this._state.selections.filter(sr => sr.id !== srow.id);\r\n            this._state.selections.push(srow);\r\n        }\r\n        if (emit) {\r\n            this.selectRowSubject.next(srow);\r\n        }\r\n\r\n        if (this._state.checkOnSelect) {\r\n            this.checkRow(srow.index, srow.data, gridOpts);        \r\n        }\r\n    }\r\n\r\n    private unSelectRowForMulti(srow: { id: any, data: any, index: any }, emit = true, gridOpts = null) {\r\n        this._state.selections = this._state.selections.filter(sr => sr.id !== srow.id);\r\n\r\n        if (this._canCancelSelectWhenMulti() || (this._state.currentRow && this._state.currentRow.id === srow.id)) {\r\n            this.updateState({ currentRow: null });\r\n        }\r\n\r\n        if (this._state.checkOnSelect) {\r\n            this.unCheckRow(srow.index, srow.data, gridOpts);\r\n        }\r\n\r\n        if (emit) {\r\n            this.unSelectRowSubject.next(srow);\r\n        }\r\n\r\n    }\r\n\r\n    unSelectRow(rowIndex: number, rowData: any, gridOpts = null) {\r\n        const id = this.primaryId(rowData);\r\n        const isMultiSelect = this.isMultiSelect();\r\n        const srow = {id, index: rowIndex, data: rowData};\r\n        if (!isMultiSelect) {\r\n            if (this._state.currentRow) {\r\n                this.updateState({ currentRow: null });\r\n                this.unSelectRowSubject.next(srow);\r\n                if (this._state.showCheckbox) {\r\n                    this.unCheckRow(srow.index, srow.data, gridOpts);\r\n                }\r\n            }\r\n        } else {\r\n            this.unSelectRowForMulti(srow, true, gridOpts);\r\n        }\r\n    }\r\n\r\n    private _canCancelSelectWhenMulti() {\r\n        return !this._state.keepSelect && this._state.onlySelectSelf;\r\n    }\r\n\r\n    private _clearSelections(excludeIds?: string[]) {\r\n        this._state.currentRow = null;\r\n\r\n        if (!excludeIds || !excludeIds.length ) {\r\n            this._state.selections = [];\r\n        } else {\r\n            this._state.selections = this._state.selections.filter(n => {\r\n                return excludeIds.findIndex(i => i == n.id) > -1;\r\n            });\r\n        }\r\n    }\r\n\r\n    private _clearCheckeds(rows = []) {\r\n        if (!rows.length) {\r\n            this._state.checkedRows = [];\r\n        } else {\r\n            this._state.checkedRows = this._state.checkedRows.filter(n => rows.findIndex(r => this.primaryId(r) === n.id) == -1);\r\n        }\r\n    }\r\n\r\n    clearSelections(excludeIds?: string[]) {\r\n        const rows = this._state.selections;\r\n        excludeIds = excludeIds || [];\r\n        this._clearSelections(excludeIds);\r\n        const unCheckRows = rows.filter(n => excludeIds.findIndex(i => i == n.id) == -1);\r\n        if (this._state.checkOnSelect || (!this._state.multiSelect && this._state.showCheckbox)) {\r\n            // this._state.checkedRows = [];\r\n            // this.clearCheckedsSubject.next(rows);\r\n            this._state.checkedRows = this._state.checkedRows.filter(n => {\r\n                return !rows.find(t1 => t1.id == n.id && excludeIds.findIndex(i => i == n.id) == -1);\r\n            });\r\n            this.clearCheckedsSubject.next(unCheckRows);\r\n        }\r\n        this.clearSelectionSubject.next(unCheckRows);\r\n    }\r\n\r\n    clearCheckeds(clearAll = true) {\r\n        const rows = this.getAllRowsForLive();\r\n        const _rows = clearAll ? [] : rows;\r\n        this._clearCheckeds(_rows);\r\n        if (this._state.selectOnCheck) {\r\n           this._clearSelections();\r\n        }\r\n        this.clearCheckedsSubject.next(rows);\r\n    }\r\n\r\n    clearAll() {\r\n        this._clearCheckeds();\r\n        this._clearSelections();\r\n        this.clearAllSubject.next();\r\n    }\r\n\r\n    setMultiSelect(flag: boolean) {\r\n        this._state.multiSelect = flag;\r\n    }\r\n\r\n    setCheckOnSelect(flag: boolean) {\r\n        this._state.checkOnSelect = flag;\r\n    }\r\n\r\n    setSelectOnCheck(flag: boolean) {\r\n        this._state.selectOnCheck = flag;\r\n    }\r\n\r\n    setCurrentCell(dr: DatagridRow, field: string, cellElement?: any, cellRef?: any ) {\r\n        const { rowIndex, rowData } = {...dr};\r\n        let currentCell = {...this._state.currentCell, rowIndex, rowData, field, rowId: this.primaryId(rowData), cellElement };\r\n\r\n        if (field !== this._state.ControlPanelFeild) {\r\n            if (cellRef) {\r\n                currentCell.cellRef = cellRef;\r\n            }\r\n\r\n            if (field) {\r\n                currentCell.column = this.getColumn(field);\r\n            }\r\n\r\n            const isLastRow = rowIndex === this.getData().length - 1;\r\n            currentCell['lastRow'] = isLastRow;\r\n        } else {\r\n            currentCell = null;\r\n        }\r\n        this._state.currentCell = null;\r\n        this.updateState({currentCell}, false);\r\n        this.selectRow(rowIndex, rowData);\r\n        if (this._state.currentRow) {\r\n            this._state.currentRow.dr = dr;\r\n        }\r\n        this.selectCellSubject.next(currentCell);\r\n    }\r\n\r\n    cancelSelectCell() {\r\n        if (this._state.currentCell) {\r\n            this._state.currentCell = null;\r\n            this.updateState({currentCell: null}, false);\r\n            this.selectCellSubject.next(null);\r\n        }\r\n    }\r\n\r\n    primaryId(rowData: any) {\r\n        return rowData[this._state.idField];\r\n    }\r\n\r\n    getCurrentCell() {\r\n        return this._state.currentCell;\r\n    }\r\n\r\n    editCell() {\r\n        if (this._state.currentCell) {\r\n            if (!this._state.currentCell.isEditing) {\r\n                const cei = { ...this._state.currentCell, isEditing: true };\r\n                this.updateState({ currentCell: cei }, false);\r\n                this.selectCellSubject.next(cei);\r\n                // this.editCell$.next(cei);\r\n            }\r\n        }\r\n    }\r\n\r\n    endEditCell() {\r\n        if (this._state.currentCell && this._state.currentCell.isEditing) {\r\n            const cei = { ...this._state.currentCell, isEditing: false };\r\n            this.updateState({ currentCell: cei }, false);\r\n            this.selectCellSubject.next(cei);\r\n            // this.editCell$.next(cei);\r\n        }\r\n    }\r\n\r\n    appendRow(rowData: any) {\r\n        if (rowData && this.primaryId(rowData)) {\r\n            const pid = this.primaryId(rowData);\r\n            if (this.findRowIndex(pid) === -1) {\r\n                this._state.data.push(rowData);\r\n                const newData = [...this._state.data];\r\n                this.updateState({data: newData}, false);\r\n                this._state.originalData = cloneDeep(this._state.data);\r\n                this.refresh();\r\n                this.rowAppend$.emit(rowData);\r\n            } else {\r\n                throw new Error(`ä¸»é®ID å·²å­å¨ï¼ID: ${pid}`);\r\n            }\r\n        } else {\r\n            throw new Error(`ä¸»é®æ è¯å­æ®µä¸è½ä¸ºç©ºã`);\r\n        }\r\n    }\r\n\r\n    updateRow(rowid: any, rowData: any) {\r\n        const row = this.findRow(rowid);\r\n        if (row && row.data) {\r\n            if (rowData) {\r\n                const keys = Object.keys(rowData);\r\n                keys.forEach(field => {\r\n                    Utils.setValue(field, rowData[field], row.data);\r\n                });\r\n                // æ´æ°å·²å¾éçæ°æ®\r\n                this.updateCheckedData(rowid, rowData);\r\n                const rowUpdateParam = {...row, keyID: rowid};\r\n                this.rowUpdate$.emit(rowUpdateParam);\r\n            }\r\n        }\r\n    }\r\n\r\n    deleteRow(rowid) {\r\n        const row = this.findRow(rowid);\r\n        if (row) {\r\n            const newData = this.removeRow(this._state.data, rowid);\r\n            this.updateState({data: newData}, false);\r\n            this._state.originalData = cloneDeep(this._state.data);\r\n            this.refresh();\r\n            this.rowDelete$.emit(rowid);\r\n            return row;\r\n        }\r\n    }\r\n    /**\r\n     * ä»æ°ç»ä¸­å é¤æå®çID\r\n     * @param data æ°ç»\r\n     * @param rowId è¦å é¤çID\r\n     */\r\n    removeRow(data, rowId) {\r\n        const newData = data.filter(n => {\r\n            const id = this.primaryId(n);\r\n            return rowId !== id;\r\n        });\r\n\r\n        return newData;\r\n    }\r\n\r\n    isCellSelected(cellInfo: CellInfo) {\r\n        const cc = this.getCurrentCell();\r\n        if (!cc) {\r\n            return false;\r\n        } else {\r\n            if ( this._state.currentRow.index === cc.rowIndex) {\r\n                return cc.field === cellInfo.field;\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n\r\n    protected updateState(state: Partial<FarrisDatagridState>, emit = true) {\r\n        const newState = { ...this._state, ...state };\r\n        this._state = newState;\r\n        if (emit) {\r\n            this.store.next(this._state);\r\n        }\r\n    }\r\n\r\n    resize(newSize?: {width: number, height: number, [key: string]: any}) {\r\n        if (newSize) {\r\n            this.updateState(newSize, false);\r\n        }\r\n        this.resetColumnsSize();\r\n        if (!this._state.groupRows) {\r\n            this.updateVirthualRows(this._state.virtual.scrollTop);\r\n        }\r\n    }\r\n\r\n    fitColumns(fit) {\r\n        this.updateState({fitColumns: fit}, false);\r\n        // const r = this.useUserSetColumnSize();\r\n        // this.setFitColumnsWidth(this._state.columnsGroup, true, r);\r\n        // this.gridSizeSubject.next(this._state);\r\n        this.resetColumnsSize();\r\n    }\r\n\r\n    private useUserSetColumnSize() {\r\n        if (this._state.autoFitColumns) {\r\n            const gridWidth = this._state.width;\r\n            const userSetColumnWidth = this._state.columnsGroup.originalTotalWidth;\r\n            return userSetColumnWidth > gridWidth;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private resetColumnsSize() {\r\n        if (this._state.fitColumns) {\r\n            // 20200421\r\n            const r = this.useUserSetColumnSize();\r\n            this.setFitColumnsWidth(this._state.columnsGroup, r, r);\r\n        }\r\n        this.gridSizeSubject.next(this._state);\r\n    }\r\n\r\n    /**\r\n     * æ´æ°åè®¾ç½®\r\n     * @param columns æ°çåéå\r\n     * @param restitute æ¯å¦è¿ååå§å®½åº¦ é»è®¤ä¸º false\r\n     */\r\n    updateColumns(columns, restitute = false, emit = false) {\r\n        this._state.columns = columns;\r\n        this.initColumns(emit, restitute);\r\n        this.resizeColumns(restitute);\r\n    }\r\n\r\n\r\n    getGroupColumns(columns) {\r\n        let arr = [];\r\n        const allCols = this.getAllFlatColumns();\r\n        columns.forEach(c => {\r\n            if (!c.colspan || c.colspan == 1)            {\r\n                if (!arr.find(n => n.field === c.field)) {\r\n                    arr.push(c);\r\n                }\r\n            } else {\r\n                 arr = arr.concat(this.getGroupColumns(allCols.filter(n => n.parentId == c.id\t)));\r\n            }\r\n        });\r\n        return arr;\r\n    }\r\n\r\n\r\n\r\n    initColumns(emit = false, restColumnWidth = false) {\r\n        const columns = this._state.flatColumns;\r\n        let colgroup: any = {\r\n            leftFixed: [],\r\n            rightFixed: [],\r\n            normalColumns: [],\r\n            columns: []\r\n        };\r\n        if (columns && columns.length) {\r\n            const leftFixedCols = this.getFixedCols('left');\r\n            const rightFixedCols = this.getFixedCols('right');\r\n            const normalCols = this.getFixedCols();\r\n\r\n            columns.forEach(c => {\r\n                if (!c.originalWidth) {\r\n                    c.originalWidth = c.width;\r\n                } else {\r\n                    if (restColumnWidth) {\r\n                        c.width = c.originalWidth;\r\n                    }\r\n                }\r\n            });\r\n\r\n            colgroup = {\r\n                leftFixed: leftFixedCols,\r\n                rightFixed: rightFixedCols,\r\n                normalColumns: normalCols,\r\n                columns: leftFixedCols.concat(normalCols).concat(rightFixedCols)\r\n            };\r\n\r\n            this.initColumnsWidth(colgroup, restColumnWidth);\r\n\r\n            if (this._state.fitColumns) {\r\n                this.setFitColumnsWidth(colgroup, true);\r\n            }\r\n\r\n            this.updateState({ columnsGroup: colgroup }, emit);\r\n        } else {\r\n            colgroup.leftFixedWidth = 0;\r\n            colgroup.rightFixedWidth = 0;\r\n            colgroup.normalWidth = 0;\r\n            colgroup.totalWidth = 0;\r\n            this.updateState({ columnsGroup: colgroup }, emit);\r\n        }\r\n    }\r\n\r\n    getColumnIndex(field: string, fixed: 'right'| '' | 'left' | 'center' = '') {\r\n        const colgroup = this._state.columnsGroup;\r\n        if (!fixed || this._state.fast) {\r\n            return colgroup.normalColumns.findIndex(n => n.field === field);\r\n        } else {\r\n            if (fixed === 'left') {\r\n                return colgroup.leftFixed.findIndex(n => n.field === field);\r\n            } else if (fixed === 'right') {\r\n                return colgroup.rightFixed.findIndex(n => n.field === field);\r\n            }\r\n        }\r\n    }\r\n\r\n    columnResizeEnd() {\r\n        // const colgroup = this._state.columnsGroup;\r\n        // this.initColumnsWidth(colgroup, false);\r\n        // this.updateState({ columnsGroup:  {...colgroup} }, false);\r\n        // this.gridSizeSubject.next(this._state);\r\n        this.resizeColumns();\r\n    }\r\n\r\n\r\n    resizeColumns(restitute = false) {\r\n        const colgroup = this._state.columnsGroup;\r\n        this.initColumnsWidth(colgroup, restitute);\r\n        if (this._state.fitColumns) {\r\n            const r = this.useUserSetColumnSize();\r\n            if (r) {\r\n                this.setFitColumnsWidth(colgroup, restitute, r);\r\n            } else {\r\n                this.setFitColumnsWidth(colgroup, restitute);\r\n            }\r\n        }\r\n        this.updateState({ columnsGroup:  {...colgroup} }, false);\r\n        this.gridSizeSubject.next(this._state);\r\n    }\r\n\r\n    getAllFlatColumns() {\r\n        return flatten<DataColumn>(this._state.columns);\r\n    }\r\n\r\n    getColumn(fieldName: string) {\r\n        return this.getAllFlatColumns().find(n => n.field === fieldName);\r\n    }\r\n\r\n    setFitColumnsWidth(colgroup: ColumnGroup, restitute = false, useUserSetColumnSize = false) {\r\n        if (!colgroup) {\r\n            return;\r\n        }\r\n        colgroup.normalWidth = this._state.width - colgroup.leftFixedWidth - colgroup.rightFixedWidth;\r\n\r\n        if (!colgroup.normalWidth || colgroup.normalWidth < 0 ) {\r\n            return;\r\n        }\r\n\r\n\r\n        if (useUserSetColumnSize) {\r\n            colgroup.totalWidth = colgroup.originalTotalWidth;\r\n            if (restitute) {\r\n                colgroup.normalColumns.forEach( col => {\r\n                    col.width = col.originalWidth;\r\n                });\r\n            }\r\n            // æ´æ° normalColumns width\r\n            colgroup.normalWidth = colgroup.normalColumns.reduce((totalWidth, col) => {\r\n                if (!restitute && col.width) {\r\n                    return totalWidth += col.width;\r\n                } else {\r\n                    return totalWidth += col.originalWidth;\r\n                }\r\n            }, 0);\r\n\r\n            colgroup.totalWidth = colgroup.leftFixedWidth + colgroup.rightFixedWidth + colgroup.normalWidth;\r\n        } else {\r\n            const minWidth = colgroup.normalColumns.reduce((totalWidth, col) => {\r\n                if (!restitute) {\r\n                    return totalWidth += col.width;\r\n                } else {\r\n                    return totalWidth += col.originalWidth;\r\n                }\r\n            }, 0);\r\n\r\n            // colgroup.normalWidth = colgroup.normalWidth - 2;\r\n\r\n            colgroup.normalColumns.forEach( col => {\r\n                if (!restitute) {\r\n                    // col.width = Math.floor( col.width / minWidth * colgroup.normalWidth );\r\n                    col.width = Number((col.width / minWidth * colgroup.normalWidth ).toFixed(2));\r\n                } else {\r\n                    // col.width = Math.floor( col.originalWidth / minWidth * colgroup.normalWidth );\r\n                    col.width =  Number(( col.originalWidth / minWidth * colgroup.normalWidth ).toFixed(2));\r\n                }\r\n            });\r\n            colgroup.totalWidth = colgroup.leftFixedWidth + colgroup.rightFixedWidth + colgroup.normalWidth;\r\n        }\r\n\r\n    }\r\n\r\n    private getFixedCols(direction: 'left' | 'right' | '' = '') {\r\n        let cols = [];\r\n        if (!direction) {\r\n            cols = this._state.flatColumns.filter(col => !col.fixed);\r\n        } else {\r\n            cols = this._state.flatColumns.filter(col => col.fixed === direction);\r\n        }\r\n\r\n        // å¤è¡¨å¤´ï¼éæ°è®¡ç®åçé¡ºåº\r\n        if (this._state.columns.length > 1 && cols.length) {\r\n            const fields = DatagridColumnsHelper.getFields(this._state.columns);\r\n            const newcols = [];\r\n            fields.forEach(f => {\r\n                const c =  cols.find(col => (col.field || '' ) === f);\r\n                if (c) {\r\n                    newcols.push(c);\r\n                }\r\n            });\r\n            return newcols;\r\n        }\r\n\r\n        return cols;\r\n    }\r\n\r\n    // restitute: è¿ååå§å®½åº¦ï¼é»è®¤ false\r\n    private initColumnsWidth(colgroup: ColumnGroup,  restitute = false) {\r\n        let offset = 0;\r\n        offset = this._state.showLineNumber ? offset + this._state.lineNumberWidth : offset;\r\n        offset = this._state.showCheckbox ? offset + this._state.checkboxColumnWidth : offset;\r\n\r\n        const getColsWidth = (cols, val, reset) => {\r\n            return cols.reduce((r, c) => {\r\n                c.left = r;\r\n                if (!reset) {\r\n                    return r + c.width;\r\n                } else {\r\n                    return r + c.originalWidth;\r\n                }\r\n            }, val);\r\n        };\r\n\r\n        colgroup.leftFixedWidth = offset;\r\n        if (colgroup.leftFixed && colgroup.leftFixed.length) {\r\n            colgroup.leftFixedWidth = getColsWidth(colgroup.leftFixed, offset, restitute);\r\n        }\r\n\r\n        colgroup.rightFixedWidth = 0;\r\n        if (colgroup.rightFixed && colgroup.rightFixed.length) {\r\n            colgroup.rightFixedWidth = getColsWidth(colgroup.rightFixed, 0, restitute);\r\n        }\r\n\r\n        colgroup.normalWidth = 0;\r\n        if (this._state.columns && this._state.columns.length) {\r\n            colgroup.normalWidth = getColsWidth(colgroup.normalColumns, 0, restitute);\r\n            colgroup.originalTotalWidth = getColsWidth(colgroup.normalColumns, 0, true);\r\n        }\r\n\r\n        colgroup.totalWidth = colgroup.leftFixedWidth + colgroup.rightFixedWidth + colgroup.normalWidth;\r\n\r\n    }\r\n\r\n    showCheckbox(isShow = true) {\r\n        const colgroup = this._state.columnsGroup;\r\n        this.updateState({showCheckbox: isShow}, false);\r\n        if (isShow) {\r\n            colgroup.leftFixedWidth = colgroup.leftFixedWidth + this._state.checkboxColumnWidth;\r\n        } else {\r\n            colgroup.leftFixedWidth = colgroup.leftFixedWidth - this._state.checkboxColumnWidth;\r\n        }\r\n\r\n        this.columnResizeSubject.next(colgroup);\r\n    }\r\n\r\n    hideCheckbox() {\r\n        this.showCheckbox(false);\r\n    }\r\n\r\n    showLineNumber(isShow = true) {\r\n        const colgroup = this._state.columnsGroup;\r\n        this.updateState({showLineNumber: isShow}, false);\r\n        if (isShow) {\r\n            colgroup.leftFixedWidth = colgroup.leftFixedWidth + this._state.lineNumberWidth;\r\n        } else {\r\n            colgroup.leftFixedWidth = colgroup.leftFixedWidth - this._state.lineNumberWidth;\r\n        }\r\n\r\n        this.columnResizeSubject.next(colgroup);\r\n    }\r\n\r\n    hideLineNumber() {\r\n        this.showLineNumber(false);\r\n    }\r\n\r\n    setSortInfo(sortName, sortOrder) {\r\n        sortName = sortName || '';\r\n        sortOrder = sortOrder || '';\r\n        const fields = sortName.split(',');\r\n        const orders = sortOrder.split(',');\r\n        // if (!this._state.multiSort) {\r\n        const colgroup = this._state.columnsGroup;\r\n\r\n        const updateFieldOrder = (cols: DataColumn[]) => {\r\n            if (!cols || !cols.length) {\r\n                return;\r\n            }\r\n            cols.forEach( col => {\r\n                col.order = undefined;\r\n                const i = fields.findIndex(f => f === col.field);\r\n                if (i > -1) {\r\n                    col.order = orders[i];\r\n                }\r\n            });\r\n        };\r\n\r\n        updateFieldOrder(colgroup.normalColumns);\r\n        updateFieldOrder(colgroup.leftFixed);\r\n        updateFieldOrder(colgroup.rightFixed);\r\n        // }\r\n\r\n        this.updateState({sortName, sortOrder}, false);\r\n    }\r\n\r\n    orderBy(arr, props: any[], orders: any[]) {\r\n        const colObj = props.reduce((c, n) => {\r\n            c[n] = this.getColumn(n);\r\n            return c;\r\n        }, {});\r\n\r\n        return [...arr].sort((a, b) =>\r\n            props.reduce((acc, prop, i) => {\r\n                if (acc === 0) {\r\n                    let valA = Utils.getValue(prop, a);\r\n                    let valB = Utils.getValue(prop, b);\r\n\r\n                    if (colObj[prop] && colObj[prop]['isMultilingualField']) {\r\n                        valA = Utils.getMultilingualValue(valA, this.localId);\r\n                        valB = Utils.getMultilingualValue(valB, this.localId);\r\n                    }\r\n\r\n                    if (valA === undefined || valA === null) {\r\n                        valA = '';\r\n                    }\r\n                    if (valB === undefined || valB === null) {\r\n                        valB = '';\r\n                    }\r\n\r\n                    const [p1, p2] = orders && orders[i] === 'desc' ? [valB, valA] : [valA, valB];\r\n                    if (typeof p1 === 'string') {\r\n                        acc = p1.localeCompare(p2);\r\n                    } else {\r\n                        acc = p1 > p2 ? 1 : p1 < p2 ? -1 : 0;\r\n                    }\r\n                }\r\n                return acc;\r\n            }, 0)\r\n        );\r\n    }\r\n\r\n    sort(data: any) {\r\n        const orders = this._state.sortOrder.split(',');\r\n        const fields = this._state.sortName.split(',');\r\n\r\n        if (this._state.mergeCell && this._state.mergeFields && this._state.mergeFields.length) {\r\n            const newOrders = [];\r\n            const newFields = [...this._state.mergeFields];\r\n            fields.forEach((f, i) => {\r\n                let k = newFields.indexOf(f);\r\n                if (k == -1) {\r\n                    newFields.push(f);\r\n                    k = newFields.length - 1;\r\n                }\r\n                newOrders[k] = orders[i];\r\n            });\r\n\r\n            return this.orderBy(data, newFields, newOrders);\r\n        }\r\n\r\n        return this.orderBy(data, fields, orders);\r\n    }\r\n\r\n\r\n    clientSort(data?: any) {\r\n        if (this._state.sortName) {\r\n            if (data) {\r\n                this.updateState({ data }, false);\r\n            }\r\n            const sortedData = this.sort(this._state.data);\r\n            this.loadData(sortedData, false);\r\n        } else {\r\n            this.clearSort();\r\n        }\r\n\r\n        this.clientSort$.emit({sortName: this._state.sortName, sortOrder: this._state.sortOrder});\r\n    }\r\n\r\n    clearSort() {\r\n        this.loadData(this._state.originalData, false);\r\n    }\r\n\r\n    loadFilterData(filterData: any[]) {\r\n        this.loadData(filterData, false);\r\n    }\r\n\r\n\r\n    //#region åæ´é\r\n\r\n    private hasRowChanges(rowid: any) {\r\n        const _changes = this._state.changes;\r\n        if (!_changes) {\r\n            return false;\r\n        }\r\n        return _changes[rowid];\r\n    }\r\n\r\n    appendChanges(changes: RowDataChanges) {\r\n        if (!changes) {\r\n            return;\r\n        }\r\n        const id = changes[this._state.idField];\r\n        if (!id) {\r\n            return;\r\n        }\r\n        const _id = '' + id;\r\n        if (!this.hasRowChanges(_id)) {\r\n            this._state.changes = this._state.changes || {};\r\n            this._state.changes[_id] = changes;\r\n        } else {\r\n            this._state.changes[_id] = Object.assign(this._state.changes[_id], changes);\r\n        }\r\n    }\r\n\r\n    acceptChanges() {\r\n        const changes = this._state.changes;\r\n        if (changes) {\r\n            const keys = Object.keys(changes);\r\n            keys.forEach(id => {\r\n                this.updateRow(id, changes[id]);\r\n            });\r\n            this._state.originalData = cloneDeep(this._state.data);\r\n        }\r\n    }\r\n    rejectChanges(rowid = null) {\r\n        const changes = this._state.changes;\r\n        if (changes) {\r\n            if (!rowid) {\r\n                this._state.data = cloneDeep(this._state.originalData);\r\n                this._state.changes = null;\r\n            } else {\r\n                const rowChanges =  this._state.changes['' + rowid];\r\n                if (rowChanges) {\r\n                    const orgiRow = this._state.originalData.find(r => this.primaryId(r) === rowid);\r\n                    this._state.data.forEach(r => {\r\n                        if (this.primaryId(r) === rowid) {\r\n                            r = cloneDeep(orgiRow);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            this.refresh();\r\n        }\r\n    }\r\n\r\n    getChanges() {\r\n        return this._state.changes;\r\n    }\r\n\r\n    refresh() {\r\n        const data = cloneDeep(this._state.data);\r\n        this.loadData(data);\r\n    }\r\n\r\n    //#endregion\r\n\r\n    /**\r\n     * æé åè®¡è¡\r\n     * @param data æ°æ®éå\r\n     */\r\n    getFooterData(data) {\r\n        if (!data || !data.length) {\r\n            return [];\r\n        }\r\n\r\n        // const columns = this._state.flatColumns;\r\n        const columns = flatten<DataColumn>(this._state.columns).filter((col: DataColumn) => !col.colspan);\r\n        const footerRow = {};\r\n\r\n        columns.forEach(col => {\r\n            if (col.footer && col.footer.options) {\r\n                const options = col.footer.options;\r\n                const text = options.text;\r\n                const typ = options.calculationType as CalculationType;\r\n\r\n                if (typ !== undefined && typ != -1) {\r\n                    const val = this.calculation(data, typ, col);\r\n                    footerRow[col.field] = val;\r\n                } else {\r\n                    footerRow[col.field] = text || '';\r\n                }\r\n            } else {\r\n                footerRow[col.field] = '';\r\n            }\r\n        });\r\n\r\n        return [footerRow];\r\n    }\r\n\r\n    private arrToGroup(items, fields: string[]) {\r\n        if (fields.length) {\r\n            const first = fields.shift();\r\n            const g1 = groupBy(items, (n) => Utils.getValue(first, n));\r\n            this.toGroup(g1, fields);\r\n            return g1;\r\n        }\r\n    }\r\n\r\n    private toGroup(g1, fieldArr) {\r\n        if (fieldArr.length) {\r\n            Object.keys(g1).forEach((k) => {\r\n                const items = g1[k];\r\n                const _nextFields = fieldArr.map((n) => n);\r\n                const _f = _nextFields.shift();\r\n                g1[k] = groupBy(items, (n) => Utils.getValue(_f, n));\r\n                if (_nextFields.length) {\r\n                    this.toGroup(g1[k], _nextFields);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private groupRows2Flat(groupRows, initLevel, parent) {\r\n        let results = [];\r\n        if (initLevel === undefined) {\r\n            initLevel = 0;\r\n        }\r\n        const idfield = this._state.idField;\r\n        const columns = this._state.flatColumns;\r\n        const data = this._state.data;\r\n        const groupFieldArr = this._state.groupField.split(',');\r\n        const pid = parent ? parent[idfield] : null;\r\n        const colspan = this._state.columnsGroup.normalColumns.length;\r\n\r\n        const expandGroupRows = this._state.expandGroupRows;\r\n\r\n        Object.keys(groupRows).forEach((k, m) => {\r\n\r\n            const groupItem = { [idfield]: Utils.uuid(),\r\n                                [IS_GROUP_ROW_FIELD]: true, [GROUP_LEVEL_FIELD]: initLevel, data: { }, value: k,\r\n                                [GROUP_VISIBLE_FIELD]: true, expanded: expandGroupRows, field: groupFieldArr[initLevel],\r\n                                colspan, total: 0, rows: [], [GROUP_ROW_FIELD]: pid};\r\n\r\n            // TFS: 356955\r\n            if (parent) {\r\n                groupItem.rows = parent.rows.filter(n => !n[IS_GROUP_ROW_FIELD] &&\r\n                    !n[IS_GROUP_FOOTER_ROW_FIELD] &&  Utils.getValue(groupFieldArr[initLevel], n) === k);\r\n                \r\n                groupItem[GROUP_VISIBLE_FIELD] = expandGroupRows;\r\n            } else {\r\n                groupItem.rows = data.filter(n => '' + Utils.getValue(groupFieldArr[initLevel], n) === k);\r\n            }\r\n\r\n            if (parent) {\r\n                parent.rows.push(groupItem);\r\n            }\r\n\r\n            groupItem.total = groupItem.rows.filter(n => !n[IS_GROUP_ROW_FIELD] && !n[IS_GROUP_FOOTER_ROW_FIELD]).length;\r\n\r\n            results.push(groupItem);\r\n            let items = groupRows[k];\r\n            if (isPlainObject(items)) {\r\n                const level = initLevel + 1;\r\n                results = results.concat(this.groupRows2Flat(items, level, groupItem));\r\n            } else {\r\n                groupItem.total = items.length;\r\n                items = items.map(n => {\r\n                    n[GROUP_ROW_FIELD] = groupItem[idfield];\r\n                    n[GROUP_VISIBLE_FIELD] = expandGroupRows;\r\n                    n[GROUP_LEVEL_FIELD] = groupItem[GROUP_LEVEL_FIELD] + 1;\r\n                    return n;\r\n                });\r\n                groupItem.rows = items;\r\n                results = results.concat(items);\r\n            }\r\n\r\n            if (this._state.groupFooter) {\r\n                const footerItem = {\r\n                    [IS_GROUP_FOOTER_ROW_FIELD]: true,\r\n                    [GROUP_ROW_FIELD]: groupItem[idfield],\r\n                    [GROUP_VISIBLE_FIELD]: expandGroupRows,\r\n                    [GROUP_LEVEL_FIELD]: initLevel,\r\n                    data: {}\r\n                };\r\n                groupItem.rows.push(footerItem);\r\n                results.push(footerItem);\r\n            }\r\n        });\r\n        return results;\r\n    }\r\n\r\n    /** æ´æ°åç»åè®¡è¡æ°æ® */\r\n    private updateGroupFooterData(groupFooterRow: any, columns: any, groupRows: any) {\r\n        columns.forEach(col => {\r\n            if (col.groupFooter && col.groupFooter.options) {\r\n                const options = col.groupFooter.options;\r\n                const text = options.text;\r\n                const typ = options.calculationType as CalculationType;\r\n\r\n                if (typ !== undefined && typ != -1) {\r\n                    const val = this.calculation(groupRows, typ, col);\r\n                    groupFooterRow.data[col.field] = val;\r\n                } else {\r\n                    groupFooterRow.data[col.field] = text || '';\r\n                }\r\n            } else {\r\n                groupFooterRow.data[col.field] = '';\r\n            }\r\n        });\r\n    }\r\n\r\n    /** å¤å­æ®µåç»\r\n     * groupField ä»¥éå·åéï¼ä»å·¦å°å³ä¾æ¬¡è¿è¡åç»\r\n     */\r\n    private groupRows2(data: any[]) {\r\n        if (data && data.length) {\r\n            const columns = this._state.flatColumns;\r\n            const groupField = this._state.groupField || '';\r\n\r\n            if (!groupField) {\r\n                return data;\r\n            }\r\n\r\n            const groupData = this.arrToGroup(data, groupField.split(','));\r\n            const result = this.groupRows2Flat(groupData, 0, null);\r\n\r\n            let k = 0;\r\n\r\n            const prow = (pid) => result.find(n => n[this._state.idField] === pid);\r\n\r\n            result.map((n, i) => {\r\n                if (!n[IS_GROUP_ROW_FIELD] && !n[IS_GROUP_FOOTER_ROW_FIELD]) {\r\n                    n[ROW_INDEX_FIELD] = k;\r\n                    k++;\r\n                }\r\n\r\n                // æ´æ°åè®¡è¡æ°æ®\r\n                if (n[IS_GROUP_FOOTER_ROW_FIELD]) {\r\n                    const rows = prow(n[GROUP_ROW_FIELD]).rows.filter((r: any) => !r[IS_GROUP_ROW_FIELD] && !r[IS_GROUP_FOOTER_ROW_FIELD]);\r\n                    this.updateGroupFooterData(n, columns, rows);\r\n                }\r\n\r\n                return n;\r\n            });\r\n            return result;\r\n        }\r\n\r\n        return [];\r\n    }\r\n\r\n    showGroupFooter(groupFooter) {\r\n        this.updateState({groupFooter}, false);\r\n        this.updateVirthualRows(0);\r\n    }\r\n\r\n    updateGroupFooter(groupRowId: string) {\r\n        const groupRow = this._state.virtual.virtualRows.find((n: any) => {\r\n            return n['id'] === groupRowId;\r\n        });\r\n\r\n        if (groupRow) {\r\n            const groupRows = groupRow.rows;\r\n            const groupFooterRows = groupRows.filter((n: any) => n['__group_footer__']);\r\n            const columns = this._state.flatColumns;\r\n\r\n            const rows = groupRows.filter((n: any) => !n['__group_footer__']);\r\n\r\n            groupFooterRows.forEach((n: any) => {\r\n                this.updateGroupFooterData(n, columns, rows);\r\n            });\r\n        }\r\n    }\r\n\r\n    private calculation(data: any, typ: CalculationType, col: any) {\r\n        let val: any = '';\r\n        // TFS: 357000\r\n        // http://10.24.1.11:8080/tfs/GSP/GSPCloud/web/_queries?id=357000&triage=true&fullScreen=false&_a=edit\r\n        if (!data || !data.length) {\r\n            return '';\r\n        }\r\n        const field = col.field;\r\n        const arr = data.map((o) => Utils.getValue(field, o) || 0);\r\n        switch (typ) {\r\n            case CalculationType.sum:\r\n                // val = sumBy(data, (o) => Utils.getValue(field, o));\r\n                val = BigNumber.sum.apply(null, arr).toFixed();\r\n                break;\r\n            case CalculationType.max:\r\n                // const maxObj = maxBy(data, (o) => Utils.getValue(field, o));\r\n                // val = Utils.getValue(field, maxObj);\r\n                val = BigNumber.max.apply(null, arr).toFixed();\r\n                break;\r\n            case CalculationType.min:\r\n                // const minObj = minBy(data, (o) => Utils.getValue(field, o));\r\n                // val = Utils.getValue(field, minObj);\r\n                val = BigNumber.min.apply(null, arr).toFixed();\r\n                break;\r\n            case CalculationType.average:\r\n                // val = meanBy(data, (o) => Utils.getValue(field, o));\r\n                val = BigNumber.sum.apply(null, arr).div(arr.length).toFixed();\r\n                break;\r\n            case CalculationType.count:\r\n                val = data.length;\r\n                break;\r\n        }\r\n        return val;\r\n    }\r\n\r\n    setGroupRowsVisible(row, open: boolean, emit = true) {\r\n\r\n        if (row.rows) {\r\n\r\n            // if (!this._state.virtualized) {\r\n                const groupRows = row.rows.filter(n => n[IS_GROUP_ROW_FIELD]);\r\n                const footerRows = row.rows.filter(n => n[IS_GROUP_FOOTER_ROW_FIELD]);\r\n\r\n                if (footerRows && footerRows.length) {\r\n                    footerRows.forEach(n => {\r\n                        n[GROUP_VISIBLE_FIELD] = open && row.expanded;\r\n                    });\r\n                }\r\n\r\n                groupRows.forEach(t => {\r\n                    t[GROUP_VISIBLE_FIELD] = open && row.expanded && row[GROUP_VISIBLE_FIELD];\r\n                    this.setGroupRowsVisible(t, open, false);\r\n                });\r\n\r\n                if (!groupRows.length) {\r\n                    row.rows.forEach(t => {\r\n                        t[GROUP_VISIBLE_FIELD] = open && row.expanded && row[GROUP_VISIBLE_FIELD];\r\n                    });\r\n                }\r\n            // }\r\n\r\n            // è§¦åè¡å±å¼ææå äºä»¶\r\n            if (emit) {\r\n                if (open) {\r\n                    this.expandGroupRow.emit({ data: row });\r\n                } else {\r\n                    this.collapseGroupRow.emit({ data: row });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //#region ç»ä»¶åå§å±æ§\r\n\r\n    setinitialOptions(opts: {[key: string]: any}) {\r\n        this._state.initialOptions = {};\r\n        // åç»\r\n        this._state.initialOptions['groupField'] = opts.groupField;\r\n\r\n        // æåº\r\n        this._state.initialOptions['sort'] = {\r\n            sortName: opts.sortName,\r\n            sortOrder: opts.sortOrder\r\n        };\r\n        // åæ¾ç¤ºéèãå¯¹é½æ¹å¼\r\n        if (opts.columns && opts.columns[0]) {\r\n            this._state.initialOptions['columnFields'] = (opts.columns[0] as any).map(n => {\r\n                return {\r\n                    width: n.width || 100,\r\n                    field: n.field,\r\n                    halign: n.halign,\r\n                    align: n.align,\r\n                    visible: n.visible,\r\n                    footer: cloneDeep(n.footer || {}),\r\n                    groupFooter: cloneDeep(n.groupFooter || {})\r\n                };\r\n            });\r\n        }\r\n    }\r\n\r\n    //#endregion\r\n}\r\n","import { Utils } from './../utils/utils';\r\nimport { EventEmitter } from '@angular/core';\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-06 07:43:53\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-11-09 20:44:54\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { CellInfo } from './state';\r\nimport { Injectable } from '@angular/core';\r\nimport { Subject, BehaviorSubject } from 'rxjs';\r\nimport { RowEventParam, RowHoverEventParam } from '../types/event-params';\r\nimport { filter, map, debounceTime } from 'rxjs/operators';\r\nimport { CommonUtils, IdService } from '@farris/ui-common';\r\n\r\nexport type ScrollAction =\r\n    | 'psScrollY'\r\n    | 'psScrollX'\r\n    | 'psScrollUp'\r\n    | 'psScrollDown'\r\n    | 'psScrollLeft'\r\n    | 'psScrollRight'\r\n    | 'psYReachEnd'\r\n    | 'psYReachStart'\r\n    | 'psXReachEnd'\r\n    | 'psXReachStart';\r\n\r\nexport class DatagridService {\r\n    private scorllSubject = new Subject();\r\n    private scrollX = new BehaviorSubject(0);\r\n\r\n    private rowHoverSubject = new Subject<RowHoverEventParam>();\r\n    private rowSelectSubject = new Subject<Partial<RowHoverEventParam>>();\r\n\r\n    private dataSourceChangedSubject = new Subject();\r\n    /** ç¼è¾ååæ ¼ */\r\n    private editCellSubject = new Subject();\r\n    /** éä¸­ååæ ¼ */\r\n    private selectCellSubject = new Subject();\r\n    /** ç»æååç¼è¾ */\r\n    private endCellEdit = new Subject();\r\n    private changeCheckedRows = new Subject();\r\n    /** ç»æè¡ç¼è¾ */\r\n    // private endRowEdit = new BehaviorSubject(true);\r\n\r\n    public scorll$ = this.scorllSubject.asObservable();\r\n    public scrollX$ = this.scorll$.pipe(\r\n        filter((p: any) => p.type === 'psScrollX'),\r\n        map(t => t.x),\r\n        debounceTime(50)\r\n    );\r\n    public scrollY$ = this.scorll$.pipe(\r\n        filter((p: any) => p.type === 'psScrollY'),\r\n        map(t => t.x),\r\n        debounceTime(50)\r\n    );\r\n    public rowHover$ = this.rowHoverSubject.asObservable();\r\n    public rowClick$ = this.rowSelectSubject.asObservable();\r\n    public onDataSourceChange = this.dataSourceChangedSubject.asObservable();\r\n    public cellEdit$ = this.editCellSubject.asObservable();\r\n    public endCellEdit$ = this.endCellEdit.asObservable();\r\n    public checkedRowsTotalChanged$ = this.changeCheckedRows.asObservable();\r\n    public updateEmptyStyle$ = new EventEmitter();\r\n\r\n    public showGridHeader = new EventEmitter();\r\n    // åæ¶å¨é\r\n    public uncheckAll = new EventEmitter();\r\n    // å¨é¨éä¸­\r\n    public checkAll = new EventEmitter();\r\n\r\n    public columnResized = new EventEmitter();\r\n\r\n    public rowHeightChanged = new EventEmitter();\r\n\r\n    public loadVirtualData = new EventEmitter();\r\n    /** æ¾ç¤ºåºå®åéå½± */\r\n    public showFixedShadow = new EventEmitter();\r\n    // public endRowEdit$ = this.endRowEdit.asObservable();\r\n\r\n    public setSelecedRow = new EventEmitter();\r\n    public setCheckedRows = new EventEmitter();\r\n\r\n    public scrollToCurrentRow = new EventEmitter();\r\n\r\n    public columnsChanged = new EventEmitter();\r\n\r\n    public cellContentWrapChanged = new EventEmitter();\r\n\r\n    public onFilterChanged = new EventEmitter();\r\n    public clearFilter = new EventEmitter();\r\n    public filterTextChange = new EventEmitter();\r\n    public toggleFilterRow = new EventEmitter();\r\n\r\n    public refreshFooterData = new EventEmitter();\r\n\r\n    public disableHeader = new EventEmitter();\r\n    /** æ´æ°å¨éå¤éæ¡ç¶æ */\r\n    public changeCheckAllStatus = new EventEmitter();\r\n\r\n    public setScrollbarPosition = new EventEmitter();\r\n\r\n    public smartFilterBarExpand = new EventEmitter();\r\n    public smartFilterDataChange = new EventEmitter();\r\n\r\n    public scrollbarUpdate = new EventEmitter();\r\n\r\n    footerPositionChanged = new EventEmitter();\r\n\r\n    styleElement: HTMLStyleElement = null;\r\n    commonUtils: CommonUtils = null;\r\n\r\n    idService: IdService = null;\r\n\r\n    // ååæ ¼ç¼è¾å¨åå»ºå®æ\r\n    cellEditorCreated = new EventEmitter();\r\n    // ååæ ¼ç¼è¾å¨éæ¯\r\n    cellEditorDestory = new EventEmitter();\r\n    // ç¦ç¹è¡åæ¢\r\n    focusRowChanged = new EventEmitter();\r\n\r\n\r\n    toggleGroupRow$ = new EventEmitter<{ groupRowIndex: number, expand: boolean }>();\r\n    toggleAllGroupRows$ = new EventEmitter<{expand: boolean }>();\r\n\r\n    constructor() { }\r\n\r\n    onScrollMove(x: number, action: ScrollAction) {\r\n        this.scorllSubject.next({ x, type: action });\r\n    }\r\n\r\n    dataSourceChanged() {\r\n        this.dataSourceChangedSubject.next();\r\n    }\r\n\r\n    onRowHover(rowIndex: number, rowData: any, mouseEnter: boolean) {\r\n        this.rowHoverSubject.next({ index: rowIndex, data: rowData, mouseenter: mouseEnter });\r\n    }\r\n\r\n    onRowClick(rowIndex: number, rowData: any) {\r\n        this.rowSelectSubject.next({ index: rowIndex, data: rowData });\r\n    }\r\n\r\n    onCellEdit(tdElement: any) {\r\n        this.editCellSubject.next(tdElement);\r\n    }\r\n\r\n    onEndCellEdit(cell: CellInfo) {\r\n        this.endCellEdit.next(cell);\r\n    }\r\n\r\n    onSelectCell(cell: CellInfo) {\r\n        this.selectCellSubject.next(cell);\r\n    }\r\n\r\n    onCheckedRowsCountChange() {\r\n        this.changeCheckedRows.next();\r\n    }\r\n\r\n    onRowHeightChange(rowHeight: number) {\r\n        this.rowHeightChanged.emit(rowHeight);\r\n    }\r\n\r\n    onLoadVirtualData(data: any) {\r\n        this.loadVirtualData.emit({ data });\r\n    }\r\n\r\n    onClearFilter() {\r\n        this.clearFilter.emit();\r\n        this.filterTextChange.emit('');\r\n    }\r\n\r\n    onFilterTextChange(txt: string) {\r\n        this.filterTextChange.emit(txt);\r\n    }\r\n\r\n    restoreScrollbarPosition() {\r\n        this.setScrollbarPosition.emit();\r\n    }\r\n\r\n    updateEmptyStyle() {\r\n        this.updateEmptyStyle$.emit();\r\n    }\r\n\r\n    groupBy = (arr, fn) => arr.map(typeof fn === 'function' ? fn : val => Utils.getValue(fn, val)).reduce((acc, val, i) => {\r\n        acc[val] = (acc[val] || []).concat(arr[i]);\r\n        return acc;\r\n    }, {})\r\n\r\n    getMergeCellInfo(data, mergeFields) {\r\n        const result = {};\r\n        let firstVal = null;\r\n        let currVal;\r\n\r\n        mergeFields.forEach((f, i) => {\r\n            if (i === 0) {\r\n                data.forEach((d, j) => {\r\n                    const item = { [f]: { show: true, rowspan: 1 } };\r\n                    if (!result[j]) {\r\n                        result[j] = item;\r\n                    } else {\r\n                        if (!result[j][f]) {\r\n                            result[j] = Object.assign(result[j], item);\r\n                        }\r\n                    }\r\n\r\n                    const _item = result[j];\r\n\r\n                    currVal = d[f];\r\n                    if (firstVal === null || firstVal !== currVal) {\r\n                        firstVal = currVal;\r\n                        _item[f].show = true;\r\n                        _item[f].startIndex = j;\r\n                    } else {\r\n                        const strIndex = result[j - 1][f].startIndex;\r\n                        _item[f].startIndex = strIndex;\r\n                        _item[f].show = false;\r\n                        result[strIndex][f].rowspan++;\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    getMergeCellInfo0(data, field) {\r\n        const result = {};\r\n        let firstVal;\r\n        let currVal;\r\n        data.forEach((d, j) => {\r\n            const item = { [field]: { show: true, rowspan: 1, value: '' } };\r\n            if (!result[j]) {\r\n                result[j] = item;\r\n            }\r\n\r\n            const _item = result[j];\r\n            currVal = Utils.getValue(field, d);\r\n            _item[field].value = currVal;\r\n            if (firstVal === undefined || firstVal !== currVal) {\r\n                firstVal = currVal;\r\n                _item[field].show = true;\r\n                _item[field].startIndex = j;\r\n            } else {\r\n                const strIndex = result[j - 1][field].startIndex;\r\n                _item[field].startIndex = strIndex;\r\n                _item[field].show = false;\r\n                result[strIndex][field].rowspan++;\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    getMergeCellInfo2(data, mergeFields) {\r\n        let result = {};\r\n        let firstVal = null;\r\n        result = this.getMergeCellInfo0(data, mergeFields.splice(0, 1)[0]);\r\n\r\n        const groupData = this.groupBy(data, mergeFields[0]);\r\n        const groupKeys = Object.keys(groupData);\r\n        let startRowIndex = 0;\r\n        mergeFields.forEach((f, i) => {\r\n            groupKeys.forEach((k, j) => {\r\n                let currVal;\r\n                groupData[k].forEach((d, n) => {\r\n                    if (result[startRowIndex] && !result[startRowIndex][f]) {\r\n                        result[startRowIndex] = Object.assign(result[startRowIndex], { [f]: { show: true, rowspan: 1, value: '' } });\r\n                    }\r\n\r\n                    const _item = result[startRowIndex];\r\n                    currVal = Utils.getValue(f, d);\r\n                    _item[f].value = currVal;\r\n                    if (firstVal === null || firstVal !== currVal) {\r\n                        firstVal = currVal;\r\n                        _item[f].show = true;\r\n                        _item[f].startIndex = startRowIndex;\r\n                    } else {\r\n                        const strIndex = result[startRowIndex - 1][f].startIndex;\r\n                        _item[f].startIndex = strIndex;\r\n                        _item[f].show = false;\r\n                        result[strIndex][f].rowspan++;\r\n                    }\r\n\r\n                    startRowIndex++;\r\n                });\r\n            });\r\n        });\r\n        return result;\r\n    }\r\n\r\n\r\n    getMergeCellInfo3(data, mergeFields) {\r\n        let result = {};\r\n        const firstField = mergeFields.splice(0, 1)[0];\r\n        result = this.getMergeCellInfo0(data, firstField);\r\n        let prevGroupField = firstField;\r\n        // const groupData = this.groupBy(data, firstField);\r\n        // const groupKeys = Object.keys(groupData);\r\n        mergeFields.forEach((f, i) => {\r\n            let startRowIndex = 0;\r\n\r\n            let firstVal;\r\n            let currVal;\r\n\r\n            if (i > 0) {\r\n                prevGroupField = mergeFields[i - 1];\r\n            }\r\n\r\n            data.forEach((d, n) => {\r\n                if (result[startRowIndex] && !result[startRowIndex][f]) {\r\n                    result[startRowIndex] = Object.assign(result[startRowIndex], { [f]: { show: true, rowspan: 1, value: '' } });\r\n                }\r\n\r\n                const _item = result[startRowIndex];\r\n                currVal = Utils.getValue(f, d);\r\n                _item[f].value = currVal;\r\n\r\n                if (startRowIndex > 0) {\r\n                    const prevItem = result[startRowIndex - 1];\r\n                    const _c = Object.keys(_item).map(c => '' + _item[c].value).join(',');\r\n                    const _p = Object.keys(prevItem).map(p => '' + prevItem[p].value).join(',');\r\n\r\n                    if (_c !== _p) {\r\n                        firstVal = undefined;\r\n                    }\r\n                }\r\n\r\n                if ((firstVal === undefined || firstVal !== currVal)) {\r\n                    firstVal = currVal;\r\n                    _item[f].show = true;\r\n                    _item[f].startIndex = startRowIndex;\r\n                } else {\r\n                    const startIndex = result[startRowIndex - 1][f].startIndex;\r\n                    _item[f].startIndex = startIndex;\r\n                    _item[f].show = false;\r\n                    result[startIndex][f].rowspan++;\r\n                }\r\n\r\n                if (data.length - 1 > startRowIndex) {\r\n                    startRowIndex++;\r\n                }\r\n            });\r\n        });\r\n        return result;\r\n    }\r\n\r\n\r\n    getMergeInfo(rowIndex: number, field: string, mergeCellInfo: any) {\r\n        if (field && mergeCellInfo && mergeCellInfo[rowIndex] && mergeCellInfo[rowIndex][field]) {\r\n            return mergeCellInfo[rowIndex][field];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    removeStyleSheet() {\r\n        if (this.styleElement) {\r\n\r\n            // const styleText: any = document.querySelector('#'+this.styleElement.id+'_styles');\r\n            // if (styleText) {\r\n            //     styleText.remove();\r\n            // }\r\n\r\n            this.styleElement.remove();\r\n            this.styleElement = null;\r\n        }\r\n    }\r\n\r\n    createStyleElement(styleSheetId: string) {\r\n        this.styleElement = this._createStyleSheet(styleSheetId);\r\n    }\r\n\r\n    // private APPEND_STYLE_ELEMENT_TIMER = null;\r\n    appendCssRules(rules: string[]) {\r\n        if (this.styleElement) {\r\n            this._appendCssRules(rules, this.styleElement.sheet);\r\n            // const CSSTEXT = this._appendCssRules(rules, this.styleElement.sheet);\r\n\r\n            // const id = this.styleElement.id;\r\n            // let style = document.querySelector('#' + id + '_styles')\r\n            // if (!style) {\r\n            //     style = document.createElement('style');\r\n            //     style.id = id+'_styles';\r\n            // }\r\n            // style.innerHTML = style.innerHTML.replace(CSSTEXT, '') + CSSTEXT;\r\n            // document.querySelector('head').appendChild(style);\r\n            // if (this.APPEND_STYLE_ELEMENT_TIMER) {\r\n            //     clearTimeout(this.APPEND_STYLE_ELEMENT_TIMER);\r\n            // }\r\n            // this.APPEND_STYLE_ELEMENT_TIMER = setTimeout(() => {\r\n             \r\n            // }, 100);\r\n        }\r\n    }\r\n\r\n    removeCssRule(ruleName: string | Array<string>) {\r\n        if (this.styleElement) {\r\n            if (typeof ruleName === 'string') {\r\n                this._removeCssRule(ruleName, this.styleElement.sheet);\r\n            } else {\r\n                if (Array.isArray(ruleName)) {\r\n                    ruleName.forEach(n => {\r\n                        this._removeCssRule(n, this.styleElement.sheet);\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private _createStyleSheet(styleSheetId: string): HTMLStyleElement {\r\n        const htmlHead = document.querySelector('head');\r\n\r\n        const styleEleId = styleSheetId;\r\n        let styleElement = null;\r\n        if (document.querySelector('#' + styleEleId)) {\r\n            styleElement = document.querySelector('#' + styleEleId);\r\n            styleElement.innerText = '';\r\n        } else {\r\n            styleElement = document.createElement('style');\r\n            styleElement.id = styleEleId;\r\n            styleElement.type = 'text/css';\r\n            // styleElement.sheet = new CSSStyleSheet();\r\n            htmlHead.appendChild(styleElement);\r\n        }\r\n\r\n        return styleElement;\r\n    }\r\n\r\n    private _appendCssRules(rules: string[], styleSheet) {\r\n        let allCssText = '';\r\n        for (const rule of rules) {\r\n            const ruleName = rule.slice(0, rule.indexOf('{')).trim();\r\n            const removedCssRule = this._removeCssRule(ruleName, styleSheet);\r\n            \r\n            let cssText = '';\r\n            if (removedCssRule) {\r\n                cssText += removedCssRule.cssText.slice(removedCssRule.cssText.indexOf('{') + 1, removedCssRule.cssText.indexOf('}'));\r\n            }\r\n            cssText += rule.slice(rule.indexOf('{') + 1, rule.indexOf('}')).replace(/\"/g, '').replace(/,/g, ';') + ';';\r\n            const _newRule =  `${ruleName}{ ${cssText} }`;\r\n            allCssText += _newRule;\r\n\r\n            if (styleSheet.addRule) {\r\n                styleSheet.addRule(ruleName, cssText, 0);\r\n            } else {\r\n                styleSheet.insertRule(_newRule, 0);\r\n            }\r\n        }\r\n        return allCssText;\r\n    }\r\n\r\n    private _removeCssRule(ruleName: string, styleSheet) {\r\n\r\n        if (!styleSheet) {\r\n            return;\r\n        }\r\n\r\n        const cssRules = (styleSheet.cssRules || styleSheet.rules) as any;\r\n        let ii = 0;\r\n        let cssRule: any = false;\r\n\r\n        do {\r\n            cssRule = cssRules[ii];\r\n            if (cssRule) {\r\n                if (cssRule.selectorText.toLowerCase() == ruleName.toLowerCase()) {\r\n                    if (styleSheet.cssRules) {\r\n                        styleSheet.deleteRule(ii);\r\n                    } else {\r\n                        styleSheet.removeRule(ii);\r\n                    }\r\n\r\n                    return cssRule;\r\n                }\r\n            }\r\n            ii++;\r\n        } while (cssRule);\r\n    }\r\n\r\n    createConfigKey(gridID: string) {\r\n        const { host, hash, href, pathname } = location;\r\n        let formCode = '';\r\n        let menuId = '';\r\n        if (hash) {\r\n            const _searchArr = hash.split('?');\r\n            formCode = _searchArr[0];\r\n\r\n            const searchObj: any = {};\r\n            if (_searchArr[1]) {\r\n                _searchArr[1].split('&').map(n => {\r\n                    searchObj[n.split('=')[0]] = n.split('=')[1];\r\n                });\r\n            }\r\n\r\n            const catchFuncIdKEY = `${pathname}`;\r\n            if (searchObj && Object.keys(searchObj).length) {\r\n                menuId = searchObj.funcId || '';\r\n                if (menuId) {\r\n                    localStorage.setItem(catchFuncIdKEY, menuId);\r\n                }\r\n            }\r\n\r\n            if (!menuId) {\r\n                menuId = localStorage.getItem(catchFuncIdKEY);\r\n            }\r\n        }\r\n        const key = formCode + '_' + menuId + '_' + gridID;\r\n\r\n        if (!this.idService) {\r\n            this.idService = new IdService();\r\n        }\r\n\r\n        return this.idService.encrypt(key);\r\n    }\r\n\r\n\r\n    getCustomStyle(styler: any, args: any): { cls?: any, style?: any } {\r\n        if (typeof styler === 'object') {\r\n            return styler;\r\n        } else {\r\n            if (typeof styler === 'function') {\r\n                const p = args || [];\r\n                return styler(...p);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    findNextTr(nextTr, dir) {\r\n        const getNextElement = (target) => {\r\n            if (target && target.className.indexOf('f-datagrid-disable-row') == -1) {\r\n                return target;\r\n            }\r\n            return false;\r\n        };\r\n\r\n        const m = dir === 'down' ? 'nextElementSibling' : 'previousElementSibling';\r\n\r\n        const getEle = (t) => {\r\n            let n = null;\r\n            let next = true;\r\n            while (next) {\r\n                n = getNextElement(t);\r\n                if (n) {\r\n                    next = false;\r\n                } else {\r\n                    if (t && t[m]) {\r\n                        n = getNextElement(t[m]);\r\n                        if (n) {\r\n                            break;\r\n                        }\r\n                    } else {\r\n                        next = false;\r\n                    }\r\n                }\r\n            }\r\n            return n;\r\n        };\r\n\r\n        return getEle(nextTr);\r\n    }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { DataResult } from './state';\r\nimport { Observable } from 'rxjs';\r\nimport { InjectionToken } from '@angular/core';\r\n\r\nexport const DATAGRID_REST_SERVICEE = new InjectionToken<RestService>('DataGrid Request Data Service.');\r\n\r\nexport abstract class RestService {\r\n    abstract getData(url: string, param?: any): Observable<DataResult>;\r\n}\r\n\r\nexport class DefaultRestService implements RestService {\r\n    constructor(private http: HttpClient) {}\r\n    getData(url: string, param?: any): Observable<DataResult> {\r\n        return this.http.get<DataResult>(url, { params: param });\r\n    }\r\n}\r\n","/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-21 10:37:53\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-08-22 19:15:49\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\n\r\nexport type DatagridValidatorType = 'required' | 'min' | 'max' |'minLength' |'maxLength' | 'email' | 'requriedTrue' | 'pattern' | string;\r\n\r\nexport interface DatagridValidator {\r\n    type: DatagridValidatorType;\r\n    value?: any;\r\n    messager?: string;\r\n}\r\n\r\nexport const DefaultDatagridValidatorMessager = {\r\n    required: 'æ­¤å­æ®µä¸è½ä¸ºç©ºã',\r\n    min: 'æå°å¼ä¸è½å°äº${0}',\r\n    max: 'æå¤§å¼ä¸è½å¤§äº${0}',\r\n    minlength: 'è³å°è¾å¥${0}ä¸ªå­ç¬¦',\r\n    maxlength: 'å­ç¬¦é¿åº¦ä¸è½å¤§äº${0}',\r\n    email: 'Email æ ¼å¼ä¸æ­£ç¡®',\r\n    requriedtrue: 'å¡å¿éä¸­',\r\n    pattern: 'è¾å¥çæ ¼å¼ä¸æ­£ç¡®ã'\r\n};\r\n\r\n\r\n","/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-21 15:44:21\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-08-22 19:19:49\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { Injectable } from '@angular/core';\r\nimport { DatagridValidator } from '../types/datagrid-validator';\r\nimport { DefaultDatagridValidatorMessager as ddvm } from '../types/datagrid-validator';\r\n@Injectable()\r\nexport class ValidatorMessagerService {\r\n\r\n    getValidatorErrorMessage(validatorName: string, validators: DatagridValidator[]) {\r\n        validatorName = validatorName.toLowerCase();\r\n        const validator = validators.find(v => v.type.toLowerCase() === validatorName);\r\n        if (validator && validator.messager) {\r\n            return validator.messager;\r\n        } else {\r\n            return ddvm[validatorName] ? ddvm[validatorName] : 'éªè¯ä¸éè¿ï¼';\r\n        }\r\n    }\r\n\r\n}\r\n","/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-06 07:43:07\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-08-21 15:13:50\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nexport class DomHandler {\r\n    public static hasClass(element: any, className: string): boolean {\r\n        if (element.classList) {\r\n            return Array.from(element.classList).filter(n => n === className).length > 0;\r\n        } else {\r\n            return element.className.indexOf(className) > -1;\r\n        }\r\n    }\r\n\r\n    public static removeClass(element: any, className: string): void {\r\n        if (element.classList) {\r\n            element.classList.remove(className);\r\n        } else {\r\n            element.className = element.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\r\n        }\r\n    }\r\n\r\n    public static findSingle(element: any, selector: string): any {\r\n        if (element) {\r\n            return element.querySelector(selector);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public static getOffset(el) {\r\n        const rect = el.getBoundingClientRect();\r\n\r\n        return {\r\n            top: rect.top + document.body.scrollTop,\r\n            left: rect.left + document.body.scrollLeft\r\n        };\r\n    }\r\n\r\n    public static getOuterHeight(el, margin?) {\r\n        let height = el.offsetHeight;\r\n\r\n        if (margin) {\r\n            const style = getComputedStyle(el);\r\n            height += parseFloat(style.marginTop) + parseFloat(style.marginBottom);\r\n        }\r\n\r\n        return height;\r\n    }\r\n\r\n    public static getOuterWidth(el, margin?) {\r\n        let width = el.offsetWidth;\r\n\r\n        if (margin) {\r\n            const style = getComputedStyle(el);\r\n            width += parseFloat(style.marginLeft) + parseFloat(style.marginRight);\r\n        }\r\n\r\n        return width;\r\n    }\r\n}\r\n","import { LocaleService } from '@farris/ui-locale';\r\nimport { Injectable, Injector, EventEmitter, Optional } from '@angular/core';\r\nimport { Compare, FilterCondition } from '@farris/ui-common/types';\r\nimport { DatagridFacadeService } from './datagrid-facade.service';\r\nimport { Utils } from './../utils/utils';\r\nimport { DataColumn, ColumnFilterType, ColumnFilter, FilterCondition as ClientFilterCondition } from '../types/data-column';\r\nimport { DatagridColumnsHelper } from './datagrid-columns.helper';\r\n\r\n@Injectable()\r\nexport class DatagridFilterService {\r\n    removeField = new EventEmitter<string>();\r\n\r\n    constructor(private dfs: DatagridFacadeService, private localeSer: LocaleService, private inject: Injector) {\r\n    }\r\n\r\n    validateRowData(rowData: any, conditions: { [field: string]: ClientFilterCondition }) {\r\n        if (!conditions || Object.keys(conditions).length === 0) {\r\n            return true;\r\n        }\r\n        return this.checkAllFieldInRowData(rowData, conditions);\r\n    }\r\n\r\n    executeFilter(data: [], conditions: any): any[] {\r\n        if ( this.dfs.getState().enableSmartFilter) {\r\n            return this.executeSmartFilter(data, conditions);\r\n        }\r\n\r\n        if (data && data.length) {\r\n            return data.filter(n => this.validateRowData(n, conditions));\r\n        }\r\n        return data;\r\n    }\r\n\r\n    private getCompareResult(fieldDataValue: any, operator: Compare, targetValue: any) {\r\n        const op = parseInt('' + operator, 10);\r\n        switch (op) {\r\n            case Compare.Equal:\r\n                return fieldDataValue == targetValue;\r\n            case Compare.NotEqual:\r\n                return ('' + fieldDataValue).toLowerCase() !== ('' + targetValue).toLowerCase();\r\n            case Compare.Greater:\r\n                return fieldDataValue > targetValue;\r\n            case Compare.GreaterOrEqual:\r\n                return fieldDataValue >= targetValue;\r\n            case Compare.Less:\r\n                return fieldDataValue < targetValue;\r\n            case Compare.LessOrEqual:\r\n                return fieldDataValue <= targetValue;\r\n            case Compare.Like:\r\n                return ('' + fieldDataValue).toLowerCase().indexOf(targetValue.toLowerCase()) > -1;\r\n            case Compare.NotLike:\r\n                return ('' + fieldDataValue).toLowerCase().indexOf(targetValue.toLowerCase()) === -1;\r\n            case Compare.In:\r\n                targetValue = targetValue || [];\r\n                return targetValue.findIndex( n => n == fieldDataValue) > -1;\r\n            case 1001: // Empty\r\n                return fieldDataValue === '' || fieldDataValue === null;\r\n            case 1002:  // NotEmpty\r\n                return fieldDataValue !== '' && fieldDataValue !== null;\r\n            case 1003: // Null\r\n                return fieldDataValue === null;\r\n            case 1004: // NotNull\r\n                return fieldDataValue !== null;\r\n        }\r\n    }\r\n\r\n    private getRelationResult(result1: boolean, relation: 'and' | 'or', result2: boolean) {\r\n        const _relation = relation.toLowerCase();\r\n        if (_relation === 'and') {\r\n            return result1 && result2;\r\n        } else {\r\n            return result1 || result2;\r\n        }\r\n    }\r\n\r\n    private checkAllFieldResult(resultObj: { [key: string]: boolean }) {\r\n        if (!resultObj) {\r\n            return true;\r\n        }\r\n\r\n        return Object.values(resultObj).reduce((c, n) => {\r\n            return c && n;\r\n        }, true);\r\n    }\r\n\r\n    private checkAllFieldInRowData(rowData: any, conditions: { [field: string]: ClientFilterCondition }) {\r\n        // this.state = conditions;\r\n        let resultObj = null;\r\n        if (conditions) {\r\n            const fields = Object.keys(conditions);\r\n            resultObj = {};\r\n            fields.forEach(field => {\r\n                let fieldValue = Utils.getValue(field, rowData);\r\n                const columnObj = this.dfs.getColumn(field);\r\n                if (columnObj && columnObj.isMultilingualField) {\r\n                    fieldValue = Utils.getMultilingualValue(fieldValue, this.localeSer.localeId);\r\n                }\r\n\r\n                const where = conditions[field];\r\n                const { value1, operator1, relation, operator2, value2 } = where;\r\n                if (where) {\r\n                    const result = this.getCompareResult(fieldValue, operator1, value1);\r\n                    resultObj[field] = result;\r\n                    if (relation) {\r\n                        const result2 = this.getCompareResult(fieldValue, operator2, value2);\r\n                        resultObj[field] = this.getRelationResult(result, relation, result2);\r\n                    }\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n        return this.checkAllFieldResult(resultObj);\r\n    }\r\n\r\n    removeFilterField(field) {\r\n        this.removeField.emit(field);\r\n    }\r\n\r\n    convertFilterCondition2String(conditions: any) {\r\n        if (!conditions) {\r\n            return '';\r\n        }\r\n        let str = '';\r\n        const andText = this.localeSer.getValue('datagrid.filter.and');\r\n        const orText = this.localeSer.getValue('datagrid.filter.or');\r\n        const and = `<span class='badge badge-success'>${andText}</span>`;\r\n        const and2 = `<span class='badge badge-info'>${andText}</span>`;\r\n        const or = `<span class='badge badge-warning'>${orText}</span>`;\r\n        const lbracket = `<b>ã</b>`;\r\n        const rbracket = `<b>ã</b>`;\r\n        const ellipsis = `[ <span class=\"ellipsis\" title=\"$title$\">  $value$<i class=\"f-icon f-icon-lookup\"></i></span> ]`;\r\n\r\n        str = Object.keys(conditions).reduce((c, r) => {\r\n            const filter = conditions[r];\r\n            const col = this.dfs.getColumn(r);\r\n            const t = `<b>${col.title}</b>`;\r\n\r\n            let s = ` ${t} ${this.getCompareString(filter.operator1)} ${Utils.escapeValue(filter.value1)}  `;\r\n            if (filter.operator1 == Compare.In) {\r\n                let txt = filter.value1;\r\n                let txt2 = txt;\r\n                if (col.filter.type === ColumnFilterType.enum) {\r\n                    const enumOpts = DatagridColumnsHelper.getFilterEnumOptions(col);\r\n                    txt = DatagridColumnsHelper.getEnumText(enumOpts, filter.value1);\r\n                    txt2 = txt.split(',').slice(0, 2).join(',');\r\n                } else {\r\n                    txt2 = txt.slice(0, 2).join(',');\r\n                }\r\n\r\n                s = ` ${t} ${this.getCompareString(filter.operator1)} [ ${txt} ]  `;\r\n                if (filter.value1.length > 2) {\r\n                    s = ` ${t} ${this.getCompareString(filter.operator1)} ${ellipsis.replace('$title$', txt).replace('$value$', txt2)}  `;\r\n                }\r\n            } else {\r\n                if (filter.operator1 == Compare.Equal && Array.isArray(filter.value1)) {\r\n                    if (!filter.value1.length) {\r\n                        s = ` ${t} ${this.getCompareString(filter.operator1)} ''  `;\r\n                    }\r\n                }\r\n            }\r\n            if (filter.relation) {\r\n                const s2 = `${t} ${this.getCompareString(filter.operator2)} ${filter.value2}`;\r\n                s = `${lbracket} ${s} ${filter.relation === 'and' ? and2 : or} ${s2} ${rbracket}`;\r\n            }\r\n            return `${c} <span class=\"filter-field filter-column-${r}\"> ${s} AND </span>`;\r\n        }, '');\r\n        const lastANDidx = str.lastIndexOf('AND');\r\n        let resultStr = str.substr(0, lastANDidx);\r\n        resultStr += str.substr(lastANDidx + 3);\r\n        return resultStr.replace(/AND/g, and).replace(/OR/g, or);\r\n    }\r\n\r\n    private getCompareString(operator: Compare) {\r\n        const op = parseInt('' + operator, 10);\r\n        let code = '';\r\n        switch (op) {\r\n            case Compare.Equal:\r\n            case Compare.NotEqual:\r\n            case Compare.Greater:\r\n            case Compare.GreaterOrEqual:\r\n            case Compare.Less:\r\n            case Compare.LessOrEqual:\r\n            case Compare.Like:\r\n            case Compare.NotLike:\r\n            case Compare.In:\r\n                code = Compare[op];\r\n                code = code[0].toLowerCase() + code.substr(1);\r\n                return this.localeSer.getValue('datagrid.filter.operators.' + code);\r\n            case 1001: // Empty\r\n                return ' ' + this.localeSer.getValue('datagrid.filter.operators.empty');\r\n            case 1002:  // NotEmpty\r\n                return ' ' + this.localeSer.getValue('datagrid.filter.operators.notEmpty');\r\n            case 1003: // Null\r\n                return ' ' + this.localeSer.getValue('datagrid.filter.operators.null');\r\n            case 1004: // NotNull\r\n                return ' ' + this.localeSer.getValue('datagrid.filter.operators.notNull');\r\n        }\r\n    }\r\n\r\n\r\n    convert2FilterArray(condition: { [field: string]: any }): FilterCondition[] {\r\n        const filterArr = [];\r\n        if (condition) {\r\n            const fields = Object.keys(condition);\r\n            if (fields && fields.length) {\r\n                fields.forEach(field => {\r\n                    const obj = { filterField: field, value: '', lbracket: '', rbracket: '', relation: 1, compare: 0 };\r\n                    const conditionVal = condition[field];\r\n                    if (typeof conditionVal === 'object') {\r\n                        obj.compare = conditionVal.operator1;\r\n                        obj.value = conditionVal.value1;\r\n                        filterArr.push(obj);\r\n                        if (conditionVal.value2) {\r\n                            obj.lbracket = '(';\r\n                            obj.relation = conditionVal.relation === 'and' ? 1 : 2;\r\n\r\n                            const obj2 = { filterField: field, value: '', lbracket: '', rbracket: ')', relation: 1, compare: 0 };\r\n                            obj2.compare = conditionVal.operator2;\r\n                            obj2.value = conditionVal.value2;\r\n\r\n                            filterArr.push(obj2);\r\n                        } else {\r\n                            if (conditionVal.operator2) {\r\n                                const op2 = parseInt('' + conditionVal.operator2, 10); //  Empty: 1001, NotEmpty: 1002\r\n                                if (op2 === 1001 || op2 === 1002) {\r\n                                    obj.lbracket = '(';\r\n                                    obj.relation = conditionVal.relation === 'and' ? 1 : 2;\r\n\r\n                                    const obj2 = { filterField: field, value: '', lbracket: '', rbracket: ')', relation: 1, compare: 0 };\r\n                                    obj2.compare = op2 === 1001 ? Compare.Equal : Compare.NotEqual;\r\n                                    obj2.value = '';\r\n\r\n                                    filterArr.push(obj2);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    return obj;\r\n                });\r\n            }\r\n        }\r\n\r\n        if (filterArr.length) {\r\n            this.checkEnumTypeFilters(filterArr);\r\n            filterArr[filterArr.length - 1].relation = 0;\r\n        }\r\n\r\n        return filterArr;\r\n    }\r\n\r\n    private checkEnumTypeFilters(filterArr: FilterCondition[]) {\r\n        const enumFilters:{[key:string]: any[]} = { };\r\n        filterArr.forEach((f, i) => {\r\n            const enumFilterArr = this.convertEnumTypeFilter(f);\r\n            if (enumFilterArr && enumFilterArr.length) {\r\n                enumFilters[f.filterField] = enumFilterArr\r\n            }\r\n        });\r\n\r\n        const keys = Object.keys(enumFilters);\r\n        if (keys.length) {\r\n            keys.forEach((k) => {\r\n                const i = filterArr.findIndex(n => n.filterField === k);\r\n                filterArr.splice(i, 1, ...enumFilters[k]);\r\n            })\r\n        }\r\n\r\n        return filterArr;\r\n    }\r\n\r\n    // å°enum ç±»åçæ¡ä»¶è½¬æ¢å¤ä¸ªæ¡ä»¶\r\n    private convertEnumTypeFilter(filter: FilterCondition) : FilterCondition[] {\r\n        if (filter) {\r\n            const col = this.dfs.getColumn(filter.filterField) as DataColumn;\r\n            if (col && col.filter && col.filter.type ===  ColumnFilterType.enum)  {\r\n                if (Array.isArray(filter.value) && filter.value.length) {\r\n                    if (filter.value.length === 1) {\r\n                        filter.compare = Compare.Equal;\r\n                        filter.value = filter.value[0];\r\n                        return [];\r\n                    } else {\r\n                        // > 1\r\n                        let filterArr = filter.value.map((val: any) => {\r\n                            return {\r\n                                filterField: filter.filterField, \r\n                                value: val, \r\n                                lbracket: '',\r\n                                rbracket: '',\r\n                                relation: 2,  // or\r\n                                compare: 0\r\n                            }\r\n                        });\r\n                        filterArr[0].lbracket = '(';\r\n                        filterArr[filter.value.length -1].rbracket = ')';\r\n                        filterArr[filter.value.length -1].relation = 1;\r\n                        return filterArr;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return [];\r\n    }\r\n\r\n    createColumnFilterOptions(col: DataColumn) {\r\n        let filterTypeOptions: ColumnFilter = {\r\n            type: ColumnFilterType.string,\r\n            enableOperator: true\r\n        };\r\n        if (col.editor) {\r\n            switch (col.editor.type) {\r\n                case 'textarea':\r\n                case 'textbox':\r\n                case 'language-textbox':\r\n                    filterTypeOptions = {\r\n                        type: ColumnFilterType.string,\r\n                        enableOperator: true\r\n                    };\r\n                    break;\r\n                case 'checkbox':\r\n                case 'switch':\r\n                    filterTypeOptions = {\r\n                        type: ColumnFilterType.boolean,\r\n                        enableOperator: false\r\n                    };\r\n                    break;\r\n                case 'numberbox':\r\n                    filterTypeOptions = {\r\n                        type: ColumnFilterType.number,\r\n                        enableOperator: true\r\n                    };\r\n                    break;\r\n                case 'combolist':\r\n                case 'select':\r\n                    filterTypeOptions = {\r\n                        type: ColumnFilterType.enum,\r\n                        enableOperator: true,\r\n                        options: col.editor.options\r\n                    };\r\n                    break;\r\n                case 'datepicker':\r\n                    filterTypeOptions = {\r\n                        type: col['dataType'] === 'datetime' ? ColumnFilterType.datetime : ColumnFilterType.date,\r\n                        enableOperator: true,\r\n                        options: {\r\n                            dateFormat: col.editor.options.dateFormat,\r\n                            returnFormat: col.editor.options.returnFormat\r\n                        }\r\n                    };\r\n                    break;\r\n                case 'timepicker':\r\n                    filterTypeOptions = {\r\n                        type: ColumnFilterType.time,\r\n                        enableOperator: true\r\n                    };\r\n                    break;\r\n\r\n            }\r\n        } else if (col.formatter) {\r\n            if (typeof col.formatter === 'object' && Object.keys(col.formatter).length) {\r\n                const options: any = col.formatter['options'];\r\n                switch (col.formatter['type']) {\r\n                    case 'number':\r\n                        filterTypeOptions = {\r\n                            type: ColumnFilterType.number,\r\n                            enableOperator: true\r\n                        };\r\n                        break;\r\n                    case 'enum':\r\n                        filterTypeOptions = {\r\n                            type: ColumnFilterType.enum,\r\n                            enableOperator: true,\r\n                            options\r\n                        };\r\n                        break;\r\n                    case 'boolean':\r\n                        filterTypeOptions = {\r\n                            type: ColumnFilterType.boolean,\r\n                            enableOperator: false\r\n                        };\r\n                        break;\r\n                    case 'datetime':\r\n                        let tye = ColumnFilterType.datetime;\r\n                        let fmt = 'yyyy-MM-dd';\r\n                        let returnFmt = 'yyyy-MM-dd';\r\n                        if (options && options.format) {\r\n                            fmt = options.format;\r\n                            if (fmt.indexOf('HH:') == -1) {\r\n                                tye = ColumnFilterType.date;\r\n                            } else {\r\n                                returnFmt += ' HH:mm';\r\n                                if (fmt.indexOf('ss') > -1) {\r\n                                    returnFmt += ':ss';\r\n                                }\r\n                            }\r\n                        } else {\r\n                            tye = ColumnFilterType.date;\r\n                        }\r\n                        filterTypeOptions = {\r\n                            type: tye,\r\n                            enableOperator: true\r\n                        };\r\n\r\n                        filterTypeOptions.options = { dateFormat: fmt, returnFormat: returnFmt };\r\n                        break;\r\n                    default:\r\n                        filterTypeOptions = {\r\n                            type: ColumnFilterType.string,\r\n                            enableOperator: true\r\n                        };\r\n                }\r\n            }\r\n        } else {\r\n            filterTypeOptions = {\r\n                type: ColumnFilterType.string,\r\n                enableOperator: true\r\n            };\r\n        }\r\n        return filterTypeOptions;\r\n    }\r\n\r\n    //#region  Smart Filter\r\n\r\n    convertSmartFilter2EntityFilter(conditions: any[]) {\r\n        if (conditions && conditions.length) {\r\n            return conditions.map(n => {\r\n                return n;\r\n            });\r\n        }\r\n\r\n        return [];\r\n    }\r\n\r\n    private validateRowData2(rowData: any, conditions: any) {\r\n        if (!conditions || conditions.length === 0) {\r\n            return true;\r\n        }\r\n        return this.checkRowDataWithCondition(rowData, conditions);\r\n    }\r\n\r\n    private checkRowDataWithCondition(rowData: any, conditions) {\r\n        let resultObj = null;\r\n        if (conditions) {\r\n            resultObj = {};\r\n            conditions.forEach(condition => {\r\n                const field = condition.FilterField;\r\n                let fieldValue = Utils.getValue(field, rowData);\r\n                const columnObj = this.dfs.getColumn(field);\r\n                if (columnObj && columnObj.isMultilingualField) {\r\n                    fieldValue = Utils.getMultilingualValue(fieldValue, this.localeSer.localeId);\r\n                }\r\n\r\n                const where = condition;\r\n                const { Value, Relation, Compare: operator1 } = where;\r\n                if (where) {\r\n                    const r = this.getCompareResult(fieldValue, operator1, Value);\r\n                    if (resultObj[field] === undefined) {\r\n                        resultObj[field] = [ r ];\r\n                    } else {\r\n                        resultObj[field].push(r);\r\n                    }\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n        // return this.checkAllFieldResult(resultObj);\r\n        const fields = Object.keys(resultObj);\r\n        const result = [];\r\n        fields.forEach( (f) => {\r\n            const _filters = conditions.filter(n => n.FilterField === f);\r\n            if (resultObj[f].length === 1) {\r\n                result.push(resultObj[f][0]);\r\n            } else {\r\n                if (_filters[0].Relation === 1 && resultObj[f].length === 2) {  // and\r\n                    result.push(resultObj[f][0] && resultObj[f][1]);\r\n                } else {  // or\r\n                    result.push(resultObj[f].indexOf(true) > -1);\r\n                }\r\n            }\r\n        });\r\n\r\n        return result.indexOf(false) === -1;\r\n    }\r\n\r\n    executeSmartFilter(data: [], conditions: any[]) {\r\n        if (data && data.length) {\r\n            return data.filter(n => this.validateRowData2(n, conditions));\r\n        }\r\n        return data;\r\n    }\r\n\r\n    //#endregion\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n/**\r\n * @deprecated åé¨åç»ä»¶å·²åºå¼ï¼åé¡µç»ä»¶ä½¿ç¨farris-ui ä¸­çå¬å±ç»ä»¶\r\n */\r\n@NgModule({\r\n    declarations: [],\r\n    imports: [ CommonModule ],\r\n    exports: [],\r\n    providers: [\r\n    ],\r\n})\r\nexport class NgxPaginationModule {}\r\n","\r\nexport class PaginationService {}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport const SCROLLBAR_CONFIG = new InjectionToken(\r\n    'PERFECT_SCROLLBAR_CONFIG'\r\n);\r\n\r\nexport class Geometry {\r\n    public x: number;\r\n    public y: number;\r\n\r\n    public w: number;\r\n    public h: number;\r\n\r\n    constructor(x: number, y: number, w: number, h: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.w = w;\r\n        this.h = h;\r\n    }\r\n}\r\n\r\nexport class Position {\r\n    public x: number | 'start' | 'end';\r\n    public y: number | 'start' | 'end';\r\n\r\n    constructor(x: number | 'start' | 'end', y: number | 'start' | 'end') {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n}\r\n\r\nexport type ScrollbarEvent =\r\n    | 'psScrollY'\r\n    | 'psScrollX'\r\n    | 'psScrollUp'\r\n    | 'psScrollDown'\r\n    | 'psScrollLeft'\r\n    | 'psScrollRight'\r\n    | 'psYReachEnd'\r\n    | 'psYReachStart'\r\n    | 'psXReachEnd'\r\n    | 'psXReachStart';\r\n\r\nexport const ScrollbarEvents: ScrollbarEvent[] = [\r\n    'psScrollY',\r\n    'psScrollX',\r\n\r\n    'psScrollUp',\r\n    'psScrollDown',\r\n    'psScrollLeft',\r\n    'psScrollRight',\r\n\r\n    'psYReachEnd',\r\n    'psYReachStart',\r\n    'psXReachEnd',\r\n    'psXReachStart'\r\n];\r\n\r\nexport interface ScrollbarConfigInterface {\r\n    handlers?: string[];\r\n\r\n    wheelSpeed?: number;\r\n    swipeEasing?: boolean;\r\n\r\n    suppressScrollX?: boolean;\r\n    suppressScrollY?: boolean;\r\n\r\n    wheelPropagation?: boolean;\r\n    useBothWheelAxes?: boolean;\r\n\r\n    scrollingThreshold?: number;\r\n\r\n    minScrollbarLength?: number;\r\n    maxScrollbarLength?: number;\r\n\r\n    scrollXMarginOffset?: number;\r\n    scrollYMarginOffset?: number;\r\n}\r\n\r\nexport class ScrollbarConfig implements ScrollbarConfigInterface {\r\n    public handlers?: string[];\r\n\r\n    public wheelSpeed?: number;\r\n    public swipeEasing?: boolean;\r\n\r\n    public suppressScrollX?: boolean;\r\n    public suppressScrollY?: boolean;\r\n\r\n    public wheelPropagation?: boolean;\r\n    public useBothWheelAxes?: boolean;\r\n\r\n    public scrollingThreshold?: number;\r\n\r\n    public minScrollbarLength?: number;\r\n    public maxScrollbarLength?: number;\r\n\r\n    public scrollXMarginOffset?: number;\r\n    public scrollYMarginOffset?: number;\r\n\r\n    constructor(config: ScrollbarConfigInterface = {}) {\r\n        this.assign(config);\r\n    }\r\n\r\n    public assign(config: ScrollbarConfigInterface = {}) {\r\n        for (const key in config) {\r\n            this[key as keyof ScrollbarConfig] = config[key as keyof ScrollbarConfigInterface];\r\n        }\r\n    }\r\n}\r\n","import { AfterViewInit } from '@angular/core';\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-07-29 08:14:22\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-10-10 15:11:09\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { PLATFORM_ID } from '@angular/core';\r\nimport { isPlatformBrowser } from '@angular/common';\r\n\r\nimport PerfectScrollbar from 'perfect-scrollbar';\r\n\r\nimport ResizeObserver from 'resize-observer-polyfill';\r\n\r\nimport { Subject, fromEvent, Observable, interval } from 'rxjs';\r\nimport { auditTime, takeUntil, debounceTime, throttle } from 'rxjs/operators';\r\n\r\nimport {\r\n    NgZone, Inject, Optional, ElementRef, Directive,\r\n    OnInit, DoCheck, OnChanges, OnDestroy, Input, Output, EventEmitter,\r\n    SimpleChanges, KeyValueDiffer, KeyValueDiffers\r\n} from '@angular/core';\r\n\r\nimport { Geometry, Position } from './scrollbar.interfaces';\r\n\r\nimport {\r\n    SCROLLBAR_CONFIG, ScrollbarConfig, ScrollbarConfigInterface,\r\n    ScrollbarEvent, ScrollbarEvents\r\n} from './scrollbar.interfaces';\r\n\r\n@Directive({\r\n    selector: '[scrollbar]',\r\n    exportAs: 'ngxScrollbar'\r\n})\r\nexport class ScrollbarDirective implements OnInit, OnDestroy, DoCheck, OnChanges, AfterViewInit {\r\n    instance: PerfectScrollbar | null = null;\r\n\r\n    private ro: ResizeObserver | null = null;\r\n\r\n    private timeout: number | null = null;\r\n    private animation: number | null = null;\r\n\r\n    private configDiff: KeyValueDiffer<string, any> | null = null;\r\n\r\n    private readonly ngDestroy: Subject<void> = new Subject();\r\n\r\n    @Input() disabled = false;\r\n\r\n    @Input('scrollbar') config?: ScrollbarConfigInterface;\r\n\r\n    @Output() psScrollY: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psScrollX: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @Output() psScrollUp: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psScrollDown: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psScrollLeft: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psScrollRight: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @Output() psYReachEnd: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psYReachStart: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psXReachEnd: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psXReachStart: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    constructor(private zone: NgZone, private differs: KeyValueDiffers,\r\n                public elementRef: ElementRef, @Inject(PLATFORM_ID) private platformId: any,\r\n                @Optional() @Inject(SCROLLBAR_CONFIG) private defaults: ScrollbarConfigInterface) { }\r\n\r\n    ngOnInit(): void {\r\n        if (!this.disabled && isPlatformBrowser(this.platformId)) {\r\n            const config = new ScrollbarConfig(this.defaults);\r\n\r\n            config.assign(this.config); // Custom configuration\r\n\r\n            this.zone.runOutsideAngular(() => {\r\n                setTimeout(() => {\r\n                    this.instance = new PerfectScrollbar(this.elementRef.nativeElement, config);\r\n                });\r\n            });\r\n\r\n            if (!this.configDiff) {\r\n                this.configDiff = this.differs.find(this.config || {}).create();\r\n\r\n                this.configDiff.diff(this.config || {});\r\n            }\r\n\r\n            this.zone.runOutsideAngular(() => {\r\n                this.ro = new ResizeObserver(() => {\r\n                    this.update();\r\n                });\r\n\r\n                if (this.elementRef.nativeElement.children[0]) {\r\n                    this.ro.observe(this.elementRef.nativeElement.children[0]);\r\n                }\r\n\r\n                this.ro.observe(this.elementRef.nativeElement);\r\n            });\r\n\r\n            this.zone.runOutsideAngular(() => {\r\n                ScrollbarEvents.forEach((eventName: ScrollbarEvent) => {\r\n                    const eventType = eventName.replace(/([A-Z])/g, (c) => `-${c.toLowerCase()}`);\r\n\r\n                    if (eventName.indexOf('X') > -1 || eventName.indexOf('Left') > -1 || eventName.indexOf('Right') > -1) {\r\n                        fromEvent<Event>(this.elementRef.nativeElement, eventType).subscribe((event: Event) => {\r\n                            this[eventName].emit(event);\r\n                        });\r\n                    } else {\r\n                        fromEvent<Event>(this.elementRef.nativeElement, eventType).pipe(\r\n                            takeUntil(this.ngDestroy)\r\n                        ).pipe(\r\n                            // debounceTime(20),\r\n                            // throttle(ev => interval(20)),\r\n                            auditTime(20),  // auditTime éé»æå®çæ¶é´ï¼å¨æ­¤æ¶é´åå¿½ç¥ææååºçå¼ï¼æ¶é´è¿åï¼ååºææ°çå¼\r\n                        )\r\n                        .subscribe((event: Event) => {\r\n                            this[eventName].emit(event);\r\n                        });\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        // this.zone.runOutsideAngular(() => {\r\n        //     this.instance = new PerfectScrollbar(this.elementRef.nativeElement, this.config);\r\n        // });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (isPlatformBrowser(this.platformId)) {\r\n            this.ngDestroy.next();\r\n            this.ngDestroy.complete();\r\n\r\n            if (this.ro) {\r\n                this.ro.disconnect();\r\n            }\r\n\r\n            if (this.timeout && typeof window !== 'undefined') {\r\n                window.clearTimeout(this.timeout);\r\n            }\r\n\r\n            this.zone.runOutsideAngular(() => {\r\n                if (this.instance) {\r\n                    this.instance.destroy();\r\n                }\r\n            });\r\n\r\n            this.instance = null;\r\n        }\r\n    }\r\n\r\n    ngDoCheck(): void {\r\n        if (!this.disabled && this.configDiff && isPlatformBrowser(this.platformId)) {\r\n            const changes = this.configDiff.diff(this.config || {});\r\n\r\n            if (changes) {\r\n                this.ngOnDestroy();\r\n\r\n                this.ngOnInit();\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (changes['disabled'] && !changes['disabled'].isFirstChange() && isPlatformBrowser(this.platformId)) {\r\n            if (changes['disabled'].currentValue !== changes['disabled'].previousValue) {\r\n                if (changes['disabled'].currentValue === true) {\r\n                    this.ngOnDestroy();\r\n                } else if (changes['disabled'].currentValue === false) {\r\n                    this.ngOnInit();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public ps(): PerfectScrollbar | null {\r\n        return this.instance;\r\n    }\r\n\r\n    public update(): void {\r\n        if (typeof window !== 'undefined') {\r\n            if (this.timeout) {\r\n                window.clearTimeout(this.timeout);\r\n            }\r\n\r\n            this.timeout = window.setTimeout(() => {\r\n                if (!this.disabled && this.configDiff) {\r\n                    try {\r\n                        this.zone.runOutsideAngular(() => {\r\n                            if (this.instance) {\r\n                                this.instance.update();\r\n                            }\r\n                        });\r\n                    } catch (error) {\r\n                        // Update can be finished after destroy so catch errors\r\n                    }\r\n                }\r\n            }, 0);\r\n        }\r\n    }\r\n\r\n    public geometry(prefix: string = 'scroll'): Geometry {\r\n        return new Geometry(\r\n            this.elementRef.nativeElement[prefix + 'Left'],\r\n            this.elementRef.nativeElement[prefix + 'Top'],\r\n            this.elementRef.nativeElement[prefix + 'Width'],\r\n            this.elementRef.nativeElement[prefix + 'Height']\r\n        );\r\n    }\r\n\r\n    public position(absolute: boolean = false): Position {\r\n        if (!absolute && this.instance) {\r\n            return new Position(\r\n                this.instance.reach.x || 0,\r\n                this.instance.reach.y || 0\r\n            );\r\n        } else {\r\n            return new Position(\r\n                this.elementRef.nativeElement.scrollLeft,\r\n                this.elementRef.nativeElement.scrollTop\r\n            );\r\n        }\r\n    }\r\n\r\n    public scrollable(direction: string = 'any'): boolean {\r\n        const element = this.elementRef.nativeElement;\r\n\r\n        if (direction === 'any') {\r\n            return element.classList.contains('ps--active-x') ||\r\n                element.classList.contains('ps--active-y');\r\n        } else if (direction === 'both') {\r\n            return element.classList.contains('ps--active-x') &&\r\n                element.classList.contains('ps--active-y');\r\n        } else {\r\n            return element.classList.contains('ps--active-' + direction);\r\n        }\r\n    }\r\n\r\n    public scrollTo(x: number, y?: number, speed?: number): void {\r\n        if (!this.disabled) {\r\n            if (y == null && speed == null) {\r\n                this.animateScrolling('scrollTop', x, speed);\r\n            } else {\r\n                if (x != null) {\r\n                    this.animateScrolling('scrollLeft', x, speed);\r\n                }\r\n\r\n                if (y != null) {\r\n                    this.animateScrolling('scrollTop', y, speed);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public scrollToX(x: number, speed?: number): void {\r\n        this.animateScrolling('scrollLeft', x, speed);\r\n    }\r\n\r\n    public scrollToY(y: number, speed?: number): void {\r\n        this.animateScrolling('scrollTop', y, speed);\r\n    }\r\n\r\n    public scrollToTop(offset?: number, speed?: number): void {\r\n        this.animateScrolling('scrollTop', (offset || 0), speed);\r\n    }\r\n\r\n    public scrollToLeft(offset?: number, speed?: number): void {\r\n        this.animateScrolling('scrollLeft', (offset || 0), speed);\r\n    }\r\n\r\n    public scrollToRight(offset?: number, speed?: number): void {\r\n        const left = this.elementRef.nativeElement.scrollWidth -\r\n            this.elementRef.nativeElement.clientWidth;\r\n\r\n        this.animateScrolling('scrollLeft', left - (offset || 0), speed);\r\n    }\r\n\r\n    public scrollToBottom(offset?: number, speed?: number): void {\r\n        const top = this.elementRef.nativeElement.scrollHeight -\r\n            this.elementRef.nativeElement.clientHeight;\r\n\r\n        this.animateScrolling('scrollTop', top - (offset || 0), speed);\r\n    }\r\n\r\n    public scrollToElement(qs: string, offset?: number, speed?: number): void {\r\n        const element = this.elementRef.nativeElement.querySelector(qs);\r\n\r\n        if (element) {\r\n            const elementPos = element.getBoundingClientRect();\r\n\r\n            const scrollerPos = this.elementRef.nativeElement.getBoundingClientRect();\r\n\r\n            if (this.elementRef.nativeElement.classList.contains('ps--active-x')) {\r\n                const currentPos = this.elementRef.nativeElement['scrollLeft'];\r\n\r\n                const position = elementPos.left - scrollerPos.left + currentPos;\r\n\r\n                this.animateScrolling('scrollLeft', position + (offset || 0), speed);\r\n            }\r\n\r\n            if (this.elementRef.nativeElement.classList.contains('ps--active-y')) {\r\n                const currentPos = this.elementRef.nativeElement['scrollTop'];\r\n\r\n                const position = elementPos.top - scrollerPos.top + currentPos;\r\n\r\n                this.animateScrolling('scrollTop', position + (offset || 0), speed);\r\n            }\r\n        }\r\n    }\r\n\r\n    private animateScrolling(target: string, value: number, speed?: number): void {\r\n        if (this.animation) {\r\n            window.cancelAnimationFrame(this.animation);\r\n\r\n            this.animation = null;\r\n        }\r\n\r\n        if (!speed || typeof window === 'undefined') {\r\n            this.elementRef.nativeElement[target] = value;\r\n        } else if (value !== this.elementRef.nativeElement[target]) {\r\n            let newValue = 0;\r\n            let scrollCount = 0;\r\n\r\n            let oldTimestamp = performance.now();\r\n            let oldValue = this.elementRef.nativeElement[target];\r\n\r\n            const cosParameter = (oldValue - value) / 2;\r\n\r\n            const step = (newTimestamp: number) => {\r\n                scrollCount += Math.PI / (speed / (newTimestamp - oldTimestamp));\r\n\r\n                newValue = Math.round(value + cosParameter + cosParameter * Math.cos(scrollCount));\r\n\r\n                // Only continue animation if scroll position has not changed\r\n                if (this.elementRef.nativeElement[target] === oldValue) {\r\n                    if (scrollCount >= Math.PI) {\r\n                        this.animateScrolling(target, value, 0);\r\n                    } else {\r\n                        this.elementRef.nativeElement[target] = newValue;\r\n\r\n                        // On a zoomed out page the resulting offset may differ\r\n                        oldValue = this.elementRef.nativeElement[target];\r\n\r\n                        oldTimestamp = newTimestamp;\r\n\r\n                        this.animation = window.requestAnimationFrame(step);\r\n                    }\r\n                }\r\n            };\r\n\r\n            window.requestAnimationFrame(step);\r\n        }\r\n    }\r\n}\r\n","import { Subject, merge, fromEvent } from 'rxjs';\r\nimport { mapTo, takeUntil, distinctUntilChanged } from 'rxjs/operators';\r\n\r\nimport { PLATFORM_ID } from '@angular/core';\r\nimport { isPlatformBrowser } from '@angular/common';\r\nimport {\r\n    NgZone, Inject, Component,\r\n    OnInit, OnDestroy, DoCheck, Input, Output, EventEmitter, HostBinding,\r\n    ViewChild, ViewEncapsulation, ChangeDetectorRef\r\n} from '@angular/core';\r\n\r\nimport { ScrollbarDirective } from './scrollbar.directive';\r\n\r\nimport {\r\n    ScrollbarEvent, ScrollbarEvents,\r\n    ScrollbarConfigInterface\r\n} from './scrollbar.interfaces';\r\n\r\n// styleUrls: [\r\n//     './scrollbar.component.css'\r\n// ],\r\n\r\n@Component({\r\n    selector: 'scrollbar',\r\n    exportAs: 'ngxScrollbar',\r\n    templateUrl: './scrollbar.component.html',\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ScrollbarComponent implements OnInit, OnDestroy, DoCheck {\r\n    public states: any = {};\r\n\r\n    public indicatorX = false;\r\n    public indicatorY = false;\r\n\r\n    public interaction = false;\r\n\r\n    private scrollPositionX = 0;\r\n    private scrollPositionY = 0;\r\n\r\n    private scrollDirectionX = 0;\r\n    private scrollDirectionY = 0;\r\n\r\n    private usePropagationX = false;\r\n    private usePropagationY = false;\r\n\r\n    private allowPropagationX = false;\r\n    private allowPropagationY = false;\r\n\r\n    private stateTimeout: number | null = null;\r\n\r\n    private readonly ngDestroy: Subject<void> = new Subject();\r\n\r\n    private readonly stateUpdate: Subject<string> = new Subject();\r\n\r\n    @Input() disabled = false;\r\n\r\n    @Input() usePSClass = true;\r\n\r\n    @HostBinding('class.ps-show-limits')\r\n    @Input() autoPropagation = false;\r\n\r\n    @HostBinding('class.ps-show-active')\r\n    @Input() scrollIndicators = false;\r\n\r\n    @Input() config?: ScrollbarConfigInterface;\r\n\r\n    @Output() psScrollY: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psScrollX: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @Output() psScrollUp: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psScrollDown: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psScrollLeft: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psScrollRight: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @Output() psYReachEnd: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psYReachStart: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psXReachEnd: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psXReachStart: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @ViewChild(ScrollbarDirective) directiveRef?: ScrollbarDirective;\r\n\r\n    constructor(private zone: NgZone, private cdRef: ChangeDetectorRef,\r\n                @Inject(PLATFORM_ID) private platformId: any) { }\r\n\r\n    ngOnInit(): void {\r\n        if (isPlatformBrowser(this.platformId)) {\r\n            this.stateUpdate\r\n                .pipe( takeUntil(this.ngDestroy))\r\n                .pipe(\r\n                    distinctUntilChanged((a, b) => (a === b && !this.stateTimeout))\r\n                )\r\n                .subscribe((state: string) => {\r\n                    if (this.stateTimeout && typeof window !== 'undefined') {\r\n                        window.clearTimeout(this.stateTimeout);\r\n\r\n                        this.stateTimeout = null;\r\n                    }\r\n\r\n                    if (state === 'x' || state === 'y') {\r\n                        this.interaction = false;\r\n\r\n                        if (state === 'x') {\r\n                            this.indicatorX = false;\r\n\r\n                            this.states.left = false;\r\n                            this.states.right = false;\r\n\r\n                            if (this.autoPropagation && this.usePropagationX) {\r\n                                this.allowPropagationX = false;\r\n                            }\r\n                        } else if (state === 'y') {\r\n                            this.indicatorY = false;\r\n\r\n                            this.states.top = false;\r\n                            this.states.bottom = false;\r\n\r\n                            if (this.autoPropagation && this.usePropagationY) {\r\n                                this.allowPropagationY = false;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        if (state === 'left' || state === 'right') {\r\n                            this.states.left = false;\r\n                            this.states.right = false;\r\n\r\n                            this.states[state] = true;\r\n\r\n                            if (this.autoPropagation && this.usePropagationX) {\r\n                                this.indicatorX = true;\r\n                            }\r\n                        } else if (state === 'top' || state === 'bottom') {\r\n                            this.states.top = false;\r\n                            this.states.bottom = false;\r\n\r\n                            this.states[state] = true;\r\n\r\n                            if (this.autoPropagation && this.usePropagationY) {\r\n                                this.indicatorY = true;\r\n                            }\r\n                        }\r\n\r\n                        if (this.autoPropagation && typeof window !== 'undefined') {\r\n                            this.stateTimeout = window.setTimeout(() => {\r\n                                this.indicatorX = false;\r\n                                this.indicatorY = false;\r\n\r\n                                this.stateTimeout = null;\r\n\r\n                                if (this.interaction && (this.states.left || this.states.right)) {\r\n                                    this.allowPropagationX = true;\r\n                                }\r\n\r\n                                if (this.interaction && (this.states.top || this.states.bottom)) {\r\n                                    this.allowPropagationY = true;\r\n                                }\r\n\r\n                                this.cdRef.markForCheck();\r\n                            }, 500);\r\n                        }\r\n                    }\r\n\r\n                    this.cdRef.markForCheck();\r\n                    this.cdRef.detectChanges();\r\n                });\r\n\r\n            this.zone.runOutsideAngular(() => {\r\n                if (this.directiveRef) {\r\n                    const element = this.directiveRef.elementRef.nativeElement;\r\n\r\n                    fromEvent<WheelEvent>(element, 'wheel')\r\n                        .pipe(\r\n                            takeUntil(this.ngDestroy)\r\n                        )\r\n                        .subscribe((event: WheelEvent) => {\r\n                            if (!this.disabled && this.autoPropagation) {\r\n                                const scrollDeltaX = event.deltaX;\r\n                                const scrollDeltaY = event.deltaY;\r\n\r\n                                this.checkPropagation(event, scrollDeltaX, scrollDeltaY);\r\n                            }\r\n                        });\r\n\r\n                    fromEvent<TouchEvent>(element, 'touchmove')\r\n                        .pipe(\r\n                            takeUntil(this.ngDestroy)\r\n                        )\r\n                        .subscribe((event: TouchEvent) => {\r\n                            if (!this.disabled && this.autoPropagation) {\r\n                                const scrollPositionX = event.touches[0].clientX;\r\n                                const scrollPositionY = event.touches[0].clientY;\r\n\r\n                                const scrollDeltaX = scrollPositionX - this.scrollPositionX;\r\n                                const scrollDeltaY = scrollPositionY - this.scrollPositionY;\r\n\r\n                                this.checkPropagation(event, scrollDeltaX, scrollDeltaY);\r\n\r\n                                this.scrollPositionX = scrollPositionX;\r\n                                this.scrollPositionY = scrollPositionY;\r\n                            }\r\n                        });\r\n\r\n                    merge(\r\n                        fromEvent(element, 'ps-scroll-x')\r\n                            .pipe(mapTo('x')),\r\n                        fromEvent(element, 'ps-scroll-y')\r\n                            .pipe(mapTo('y')),\r\n                        fromEvent(element, 'ps-x-reach-end')\r\n                            .pipe(mapTo('right')),\r\n                        fromEvent(element, 'ps-y-reach-end')\r\n                            .pipe(mapTo('bottom')),\r\n                        fromEvent(element, 'ps-x-reach-start')\r\n                            .pipe(mapTo('left')),\r\n                        fromEvent(element, 'ps-y-reach-start')\r\n                            .pipe(mapTo('top')),\r\n                    )\r\n                        .pipe(\r\n                            takeUntil(this.ngDestroy)\r\n                        )\r\n                        .subscribe((state: string) => {\r\n                            if (!this.disabled && (this.autoPropagation || this.scrollIndicators)) {\r\n                                this.stateUpdate.next(state);\r\n                            }\r\n                        });\r\n                }\r\n            });\r\n\r\n            window.setTimeout(() => {\r\n                ScrollbarEvents.forEach((eventName: ScrollbarEvent) => {\r\n                    if (this.directiveRef) {\r\n                        this.directiveRef[eventName] = this[eventName];\r\n                    }\r\n                });\r\n            }, 0);\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (isPlatformBrowser(this.platformId)) {\r\n            this.ngDestroy.next();\r\n            this.ngDestroy.unsubscribe();\r\n\r\n            if (this.stateTimeout && typeof window !== 'undefined') {\r\n                window.clearTimeout(this.stateTimeout);\r\n            }\r\n        }\r\n    }\r\n\r\n    ngDoCheck(): void {\r\n        if (isPlatformBrowser(this.platformId)) {\r\n            if (!this.disabled && this.autoPropagation && this.directiveRef) {\r\n                const element = this.directiveRef.elementRef.nativeElement;\r\n\r\n                this.usePropagationX = element.classList.contains('ps--active-x');\r\n\r\n                this.usePropagationY = element.classList.contains('ps--active-y');\r\n            }\r\n        }\r\n    }\r\n\r\n    private checkPropagation(event: any, deltaX: number, deltaY: number): void {\r\n        this.interaction = true;\r\n\r\n        const scrollDirectionX = (deltaX < 0) ? -1 : 1;\r\n        const scrollDirectionY = (deltaY < 0) ? -1 : 1;\r\n\r\n        if ((this.usePropagationX && this.usePropagationY) ||\r\n            (this.usePropagationX && (!this.allowPropagationX ||\r\n                (this.scrollDirectionX !== scrollDirectionX))) ||\r\n            (this.usePropagationY && (!this.allowPropagationY ||\r\n                (this.scrollDirectionY !== scrollDirectionY)))) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        if (!!deltaX) {\r\n            this.scrollDirectionX = scrollDirectionX;\r\n        }\r\n\r\n        if (!!deltaY) {\r\n            this.scrollDirectionY = scrollDirectionY;\r\n        }\r\n\r\n        this.stateUpdate.next('interaction');\r\n\r\n        this.cdRef.detectChanges();\r\n    }\r\n}\r\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'scrollbar-arrows',\r\n    styleUrls: [\r\n        './scrollbar-arrows.css'\r\n    ],\r\n    templateUrl: './scrollbar-arrows.component.html',\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class ScrollbarArrowsComponent implements OnInit, OnChanges {\r\n\r\n    @Input() reachX: 'start'|'end' = 'start';\r\n    @Input() reachY: 'start'|'end' = 'start';\r\n\r\n\r\n    @Input() scrollbarXActive = false;\r\n    @Input() scrollbarYActive = false;\r\n\r\n    @Output() hasXScrollbar = new EventEmitter();\r\n    @Output() hasYScrollbar = new EventEmitter();\r\n\r\n    @Output() scrollMoveTo = new EventEmitter();\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit() { }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (changes.scrollbarYActive && !changes.scrollbarYActive.isFirstChange()) {\r\n            this.hasYScrollbar.emit(this.scrollbarYActive);\r\n        }\r\n    }\r\n\r\n\r\n    scrollTo($event: MouseEvent, dir: 'left'|'right'|'top'|'bottom') {\r\n        $event.stopPropagation();\r\n        this.scrollMoveTo.emit({ dir, event: $event });\r\n    }\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ScrollbarComponent } from './scrollbar.component';\r\nimport { ScrollbarDirective } from './scrollbar.directive';\r\nimport { ScrollbarArrowsComponent } from './arrow/scrollbar-arrows.component';\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    declarations: [\r\n        ScrollbarComponent, ScrollbarDirective,\r\n        ScrollbarArrowsComponent,\r\n    ],\r\n    exports: [\r\n        CommonModule, ScrollbarComponent, ScrollbarDirective,\r\n        ScrollbarArrowsComponent,\r\n    ]\r\n})\r\nexport class ScrollbarModule {\r\n}\r\n","import { Directive, TemplateRef } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[grid-cell-editor]',\r\n})\r\nexport class DatagridCellEditorDirective {\r\n    constructor(public template: TemplateRef<any>) {}\r\n}\r\n","import { OnInit, Directive, Input, ContentChild, AfterContentInit } from '@angular/core';\r\nimport { DatagridCellEditorDirective } from './column-cell-edit.directive';\r\n\r\n@Directive({\r\n    selector: 'farris-grid-column',\r\n})\r\nexport class DatagridColumnDirective implements OnInit, AfterContentInit {\r\n\r\n    @Input() field: string;\r\n    @Input() title: string;\r\n    @Input() width: number;\r\n    @Input() halign: 'left' | 'center' |'right' = 'left';\r\n    @Input() align: 'left' | 'center' |'right' = 'left';\r\n    @Input() formatter: (value, rowData, rowIndex) => any;\r\n    @Input() readonly = true;\r\n    @Input() editable = false;\r\n\r\n    @ContentChild(DatagridCellEditorDirective) editor: any;\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit(): void { }\r\n\r\n    ngAfterContentInit() {\r\n    }\r\n}\r\n","import { Subject } from 'rxjs';\r\nimport { Component, EventEmitter, Input, OnInit, Output, ElementRef, Renderer2, Injector, OnChanges, SimpleChanges, ViewChild, Optional, OnDestroy } from '@angular/core';\r\nimport { DatagridComponent } from '../../datagrid.component';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'smart-filter-toolbar',\r\n    templateUrl: './smart-filter-toolbar.component.html',\r\n})\r\nexport class SmartFilterToolbarComponent implements OnInit, OnChanges, OnDestroy {\r\n    @Input() padding = '';\r\n    @Input() height = 40;\r\n    @Input() filterData = [];\r\n    @Output() clearFilters = new EventEmitter();\r\n    @Output() removeFilter = new EventEmitter();\r\n    @Output() filterChange = new EventEmitter();\r\n\r\n    @Output() resize = new EventEmitter();\r\n\r\n    @ViewChild('farrisFilter') filtebar: any;\r\n    sk = '';\r\n    dg: DatagridComponent;\r\n    destory$ = new Subject();\r\n    constructor(private el: ElementRef, private render: Renderer2, private inject: Injector) { }\r\n\r\n    ngOnInit(): void {\r\n        this.dg = this.inject.get<DatagridComponent>(DatagridComponent);\r\n        this.sk =  'smartfilter_' + this.dg.dgs.createConfigKey(this.dg.id);\r\n\r\n\r\n        this.dg.dgs.clearFilter.pipe(takeUntil(this.destory$)).subscribe(() => {\r\n            this.clearFilters.emit(null);\r\n        });\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.destory$.next();\r\n        this.destory$.complete();\r\n    }\r\n\r\n    /** æ¡ä»¶ååäºä»¶ */\r\n    onQuery($event) {\r\n        const { data, filterItem } = $event;\r\n        if (data && data.length) {\r\n            const conditions = JSON.parse(data);\r\n            if (conditions && conditions.length)  {\r\n                this.filterChange.emit({conditions, filterItem});\r\n            }\r\n        }\r\n    }\r\n\r\n    /** æ¸é¤æææ¡ä»¶ */\r\n    onResetFilter($event) {\r\n        this.clearFilters.emit($event);\r\n    }\r\n\r\n    /** ç§»é¤åä¸ªæ¡ä»¶ */\r\n    onRemoveFilter($event) {\r\n        this.removeFilter.emit($event);\r\n    }\r\n\r\n    /** å±å¼æå äºä»¶ */\r\n    onResize($event) {\r\n        setTimeout(() => {\r\n            const smartFilterWrapper = this.el.nativeElement.querySelector('.f-filter-wrapper');\r\n            if (smartFilterWrapper) {\r\n                const h = smartFilterWrapper.offsetHeight;\r\n                if (h) {\r\n                    this.resize.emit(h + 6);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n","export function TextFilterControl(col: any) {\r\n    return {\r\n        controltype: 'text'\r\n    };\r\n}\r\n\r\nexport function BooleanFilterControl(col: any) {\r\n    return {\r\n        controltype: 'bool-check',\r\n        // enumValues: [\r\n        //     {value: true, name: 'true'},\r\n        //     {value: false, name: 'false'}\r\n        // ]\r\n    };\r\n}\r\n\r\nexport function EnumFilterControl(col: any, enumopts: any) {\r\n    const valueField = enumopts.valueField || enumopts.idField;\r\n    const data = enumopts.data.map(n => {\r\n        return {\r\n            value:  n[valueField],\r\n            name: n[enumopts.textField]\r\n        };\r\n    });\r\n\r\n    return {\r\n        controltype: 'checkboxgroup',\r\n        enumValues: data,\r\n    };\r\n}\r\n\r\nexport function DateFilterControl(col, options: any) {\r\n    let tye = 'datetime';\r\n    let fmt = 'yyyy-MM-dd';\r\n    let returnFmt = 'yyyy-MM-dd';\r\n    if (options && options.format) {\r\n        fmt = options.format;\r\n        if (fmt.indexOf('HH:') == -1) {\r\n            tye = 'date';\r\n        } else {\r\n            returnFmt += ' HH:mm';\r\n            if (fmt.indexOf('ss') > -1) {\r\n                returnFmt += ':ss';\r\n            }\r\n        }\r\n    } else {\r\n        tye = 'date';\r\n    }\r\n\r\n    // all = 1, å¹´ææ¥\r\n    // noDate = 2,  å¹´æ\r\n    // noDateAndMonth = 3,  å¹´\r\n\r\n    return {\r\n        controltype: 'flexibleDate',\r\n        dateFormat: fmt,\r\n        single: false,\r\n        showType: 1,\r\n        showTime: tye === 'datetime'\r\n    };\r\n}\r\n\r\nexport function NumberFilterControl(col) {\r\n    return  {\r\n        controltype: 'flexibleNumber',\r\n        single: false\r\n    };\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { ColumnFilterType } from '../types/data-column';\r\n\r\nimport { BooleanFilterControl, DateFilterControl, EnumFilterControl,\r\n        NumberFilterControl, TextFilterControl } from '../plugins/smart-filter/controlData/filter-control.options';\r\n\r\n@Injectable()\r\nexport class DatagridSmartFilterService {\r\n    private conditions: any[] = [];\r\n    controlData: any = [];\r\n\r\n    filterChanged = new Subject();\r\n\r\n    removeFilter = new Subject();\r\n    clearAllFilter = new Subject();\r\n\r\n    constructor() { }\r\n\r\n\r\n    getColumnFilterData(col: any) {\r\n        let filterControlData: any = {\r\n            controltype: 'text',\r\n        };\r\n        if (col.filter !== undefined) {\r\n            if (typeof col.filter === 'boolean') {\r\n                if (col.formatter) {\r\n                    if (typeof col.formatter === 'object' && Object.keys(col.formatter).length) {\r\n                        const options: any = col.formatter['options'];\r\n                        switch (col.formatter['type']) {\r\n                            case 'number':\r\n                                return NumberFilterControl(col);\r\n                            case 'enum':\r\n                                return EnumFilterControl(col, options);\r\n                            case 'boolean':\r\n                                return BooleanFilterControl(col);\r\n                            case 'datetime':\r\n                                let tye = 'datetime';\r\n                                let fmt = 'yyyy-MM-dd';\r\n                                let returnFmt = 'yyyy-MM-dd';\r\n                                if (options && options.format) {\r\n                                    fmt = options.format;\r\n                                    if (fmt.indexOf('HH:') == -1) {\r\n                                        tye = 'date';\r\n                                    } else {\r\n                                        returnFmt += ' HH:mm';\r\n                                        if (fmt.indexOf('ss') > -1) {\r\n                                            returnFmt += ':ss';\r\n                                        }\r\n                                    }\r\n                                } else {\r\n                                    tye = 'date';\r\n                                }\r\n                                filterControlData = {\r\n                                    controltype: 'flexibleDate',\r\n                                    dateFormat: fmt,\r\n                                    single: false,\r\n                                    showType: 3,\r\n                                    showTime: tye === 'datetime'\r\n                                };\r\n                                break;\r\n                            default:\r\n                                return TextFilterControl(col);\r\n                        }\r\n                    }\r\n                }\r\n                return filterControlData;\r\n            } else {\r\n                switch (col.filter.type) {\r\n                    case ColumnFilterType.enum:\r\n                        return EnumFilterControl(col, col.filter.options);\r\n                    case ColumnFilterType.date:\r\n                    case ColumnFilterType.datetime:\r\n                        return DateFilterControl(col, col.filter.options);\r\n                    case ColumnFilterType.number:\r\n                        return NumberFilterControl(col);\r\n                    case ColumnFilterType.boolean:\r\n                        return BooleanFilterControl(col);\r\n                }\r\n            }\r\n        }\r\n\r\n        return filterControlData;\r\n    }\r\n\r\n\r\n\r\n    filterConditionChanged(e: {conditions: any[], controlData: any, from: 'toolbar' | 'panel'}) {\r\n        const items = e.conditions;\r\n\r\n        if (!this.conditions || !this.conditions.length) {\r\n            this.conditions.push(...items);\r\n            this.controlData.push({...e.controlData});\r\n        } else {\r\n            /// TODO, CONTROLDATA çç´¢å¼ä¸conditions çç´¢å¼å¾å¯è½ä¸æ¯1ä¸ª\r\n            if (e.from === 'toolbar') {\r\n                this.conditions = [...items];\r\n            } else {\r\n                this.conditions = this.conditions.filter(n => n.FilterField !== items[0].FilterField);\r\n                if (items.length === 1) {\r\n                    this.conditions.push({ ...items[0] });\r\n                } else {\r\n                    this.conditions.push(...items);\r\n                }\r\n            }\r\n\r\n            if (e.controlData) {\r\n                const ctrlIdx = this.controlData.findIndex(n => n.labelCode === e.controlData.labelCode);\r\n                if (ctrlIdx > -1) {\r\n                    this.controlData[ctrlIdx] = {...e.controlData};\r\n                } else {\r\n                    this.controlData.push({...e.controlData});\r\n                }\r\n            }\r\n        }\r\n\r\n        this.filterChanged.next({conditions: [...this.conditions], controlData: [...this.controlData] });\r\n    }\r\n\r\n    removeCondition(e, emitRemove = false) {\r\n        if (this.conditions && this.conditions.length) {\r\n            this.conditions = this.conditions.filter(n => n.FilterField !== e.labelCode);\r\n            this.controlData = this.controlData.filter(n => n.labelCode !== e.labelCode);\r\n        }\r\n        this.filterChanged.next({conditions: [...this.conditions], controlData: [...this.controlData] });\r\n        if (emitRemove) {\r\n            this.removeFilter.next(e);\r\n        }\r\n    }\r\n\r\n    clearAll() {\r\n        this.conditions = [];\r\n        this.controlData = [];\r\n        this.clearAllFilter.next(null);\r\n    }\r\n}\r\n","import { DatagridComponent } from './../datagrid.component';\r\nimport { Injectable } from '@angular/core';\r\nimport { delay } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class SelectionModeService {\r\n    dgRef: DatagridComponent = null;\r\n    private oldSettings: any = null;\r\n    private selectStartEvent: any = null;\r\n    private events = null;\r\n    constructor(grid: DatagridComponent) {\r\n        this.dgRef = grid;\r\n        if (this.dgRef.selectionMode === 'default') {\r\n            grid.zone.runOutsideAngular(() => {\r\n                this.removeEvents();\r\n                this.events = this.registerStopSelectionEvent();\r\n            });\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.dgRef = null;\r\n        this.removeEvents();\r\n    }\r\n\r\n    removeEvents() {\r\n        if (this.events && this.events.length) {\r\n            this.events.forEach(e => {\r\n                e();\r\n            });\r\n\r\n            this.events = null;\r\n        }\r\n    }\r\n\r\n    public toggleMode() {\r\n        if (this.dgRef) {\r\n            if (this.dgRef.selectionMode === 'default') {\r\n                this.enableWindowsSelectionMode();\r\n            } else {\r\n                this.restoreSettings();\r\n            }\r\n        }\r\n    }\r\n\r\n    public enableWindowsSelectionMode() {\r\n        if (this.dgRef) {\r\n            this.oldSettings = {\r\n                showCheckbox: this.dgRef.showCheckbox,\r\n                keepSelect: this.dgRef.keepSelect,\r\n                onlySelectSelf: this.dgRef.onlySelectSelf,\r\n                selectOnCheck: this.dgRef.selectOnCheck,\r\n                checkOnSelect: this.dgRef.checkOnSelect\r\n            };\r\n\r\n            this.dgRef.showCheckbox = true;\r\n            this.dgRef.keepSelect = true;\r\n            this.dgRef.onlySelectSelf = false;\r\n            this.dgRef.selectOnCheck = true;\r\n            this.dgRef.checkOnSelect = true;\r\n\r\n            this.dgRef.dfs.updateProperty('keepSelect', true);\r\n            this.dgRef.dfs.updateProperty('onlySelectSelf', false);\r\n            this.dgRef.dfs.updateProperty('selectOnCheck', true);\r\n            this.dgRef.dfs.updateProperty('checkOnSelect', true);\r\n        }\r\n    }\r\n\r\n    public restoreSettings() {\r\n        if (this.dgRef && this.oldSettings) {\r\n            this.dgRef.showCheckbox = this.oldSettings.showCheckbox;\r\n            this.dgRef.keepSelect = this.oldSettings.keepSelect;\r\n            this.dgRef.onlySelectSelf = this.oldSettings.onlySelectSelf;\r\n            this.dgRef.selectOnCheck = this.oldSettings.selectOnCheck;\r\n            this.dgRef.checkOnSelect = this.oldSettings.checkOnSelect;\r\n\r\n\r\n            this.dgRef.dfs.updateProperty('keepSelect', this.oldSettings.keepSelect);\r\n            this.dgRef.dfs.updateProperty('onlySelectSelf', this.oldSettings.onlySelectSelf);\r\n            this.dgRef.dfs.updateProperty('selectOnCheck', this.oldSettings.selectOnCheck);\r\n            this.dgRef.dfs.updateProperty('checkOnSelect', this.oldSettings.checkOnSelect);\r\n        }\r\n    }\r\n\r\n\r\n    private registerStopSelectionEvent() {\r\n        const kd = this.dgRef.render2.listen(document, 'keydown', (event: any) => {\r\n            if (event.ctrlKey || event.shiftKey) {\r\n                this.unselectable();\r\n            }\r\n        });\r\n\r\n        const ku = this.dgRef.render2.listen(document, 'keyup', (event: any) => {\r\n            if (event.ctrlKey || event.shiftKey || event.keyCode === 17 || event.keyCode === 16) {\r\n                this.enableSelectable();\r\n            }\r\n        });\r\n\r\n        return [ kd, ku];\r\n    }\r\n\r\n    private unselectable() {\r\n        this.dgRef.render2.setAttribute(this.dgRef.dgContainer.nativeElement, 'unselectable', 'on');\r\n        this.dgRef.render2.setAttribute(this.dgRef.dgContainer.nativeElement, 'onselectstart', 'return false');\r\n        this.dgRef.render2.setStyle(this.dgRef.dgContainer.nativeElement, '-moz-user-select', 'none');\r\n    }\r\n\r\n    private enableSelectable() {\r\n        this.dgRef.render2.removeAttribute(this.dgRef.dgContainer.nativeElement, 'unselectable');\r\n        this.dgRef.render2.removeAttribute(this.dgRef.dgContainer.nativeElement, 'onselectstart');\r\n        this.dgRef.render2.removeStyle(this.dgRef.dgContainer.nativeElement, '-moz-user-select');\r\n    }\r\n\r\n    beforRowClick(param: any) {\r\n        if (this.dgRef && this.dgRef.selectionMode === 'default') {\r\n            const isSelected = this.dgRef.dfs.isRowSelected(param.id);\r\n            const isCtrlKey = param.e.ctrlKey;\r\n            const isShiftKey = param.e.shiftKey;\r\n\r\n            this.dgRef.endEditing();\r\n\r\n            if (!isCtrlKey && !isShiftKey) {\r\n                if (!isSelected) {\r\n                    this.dgRef.clearCheckeds();\r\n                } else {\r\n                    // å¦ææå¤æ¡éï¼ç§»é¤å¶ä»éä¸­è¡\r\n                    const currentPagerIds = this.dgRef.getRows().map(n => n.id);\r\n                    const unCheckIDs = this.dgRef.checkValues.filter(i => currentPagerIds.includes(i) && i != param.id);\r\n                    const unSelectIds = this.dgRef.checkValues.filter(n => !currentPagerIds.includes(n));\r\n                    // const unCheckIDs = this.dgRef.checkValues.filter(n => n != param.id);\r\n                    if (unCheckIDs && unCheckIDs.length) {\r\n                        this.dgRef.unCheckRows(unCheckIDs, true);\r\n                        this.dgRef.clearSelections([param.id, ...unSelectIds]);\r\n                    }\r\n                }\r\n            } else {\r\n                if (isShiftKey) {\r\n                    let focusIndex = this.dgRef.focusRowIndex;\r\n                    if (focusIndex === -1) {\r\n                        focusIndex = 0;\r\n                    }\r\n\r\n                    const endIndex = param.rowIndex;\r\n                    let start = focusIndex;\r\n                    let end = endIndex;\r\n                    if (focusIndex > endIndex) {\r\n                        start = endIndex;\r\n                        end = focusIndex;\r\n                    }\r\n\r\n                    const data = this.dgRef.getRows();\r\n                    const checkedItems = [...data].splice(start, end - start + 1);\r\n                    const willCheckIds = checkedItems.map(n => {\r\n                        return this.dgRef.dfs.primaryId(n);\r\n                    });\r\n\r\n                    if (!isCtrlKey) {\r\n                        this.dgRef.clearCheckeds(false, false);\r\n                    }\r\n                    // this.dgRef.selectValues = willCheckIds;\r\n                    this.dgRef.checkRows(willCheckIds, true);\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            if (isSelected && isCtrlKey) {\r\n                param.e.stopPropagation();\r\n                // æ§è¡åæ¶éæ©\r\n                this.dgRef.unCheckRow(param.id);\r\n                return true;\r\n            }\r\n            this.dgRef.beforeSelect(param).pipe(\r\n                delay(100)\r\n            ).subscribe((canSelect: boolean) => {\r\n                if (canSelect) {\r\n                    this.dgRef.dfs.selectRow(param.rowIndex, param.rowData);\r\n                    if (this.dgRef.selectedRow) {\r\n                        this.dgRef.selectedRow.dr = param.dr;\r\n                    }\r\n                }\r\n                this.dgRef.rowClick.emit({ data: param.rowData, grid: this.dgRef, dblclick: false });\r\n                this.dgRef.dgs.setSelecedRow.emit({ selected: true, id: this.dgRef.dfs.primaryId(param.rowData) });\r\n            });\r\n\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    endRowClick() {\r\n        if (this.dgRef && this.dgRef.selectionMode === 'default') {\r\n            this.dgRef.checkOnSelect = false;\r\n        }\r\n    }\r\n}\r\n\r\n","\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-06 07:43:07\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-11-30 16:42:51\r\n * @QQ: 1055818239\r\n * @Version: v0.8.0\r\n * - 2021/04/07 å¢å  enableHighlightCell å±æ§ï¼æ¯æéä¸­ååæ ¼é«äº®\r\n */\r\n\r\nimport {\r\n    Component, OnInit, Input, ViewEncapsulation,\r\n    ContentChildren, QueryList, Output, EventEmitter, Renderer2, OnDestroy, OnChanges,\r\n    SimpleChanges, ChangeDetectionStrategy, ChangeDetectorRef, Injector, HostBinding,\r\n    AfterContentInit, NgZone, ElementRef, ViewChild, AfterViewInit, ApplicationRef, TemplateRef, HostListener, DoCheck\r\n} from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { FormGroup, ValidatorFn } from '@angular/forms';\r\nimport ResizeObserver from 'resize-observer-polyfill';\r\nimport { of, Subscription, Observable, from, BehaviorSubject } from 'rxjs';\r\nimport { DataColumn, CustomStyle, MoveDirection, ColumnGroup, ColumnFilterType } from './types/data-column';\r\nimport { DatagridFacadeService } from './services/datagrid-facade.service';\r\nimport { DatagridColumnDirective } from './components/columns/datagrid-column.directive';\r\nimport { CellInfo, IgnoreProperties, IS_GROUP_ROW_FIELD, SelectedRow } from './services/state';\r\nimport { RestService, DATAGRID_REST_SERVICEE } from './services/rest.service';\r\nimport { DatagridService } from './services/datagrid.service';\r\nimport { GRID_EDITORS, CELL_SELECTED_CLS, GRID_VALIDATORS, SIZE_TYPE, GRID_SETTINGS_SERVICE, GRID_SETTINGS_HTTP, CELL_EDITING_CLS, TR_PREFIX, TR_ID_PREFIX } from './types/constant';\r\nimport { DomHandler } from './services/domhandler';\r\nimport { Utils } from './utils/utils';\r\nimport { CommonUtils, DebugService, FarrisComponentInstanceService } from '@farris/ui-common';\r\nimport { ColumnFormatService } from '@farris/ui-common/column';\r\nimport { flatten, cloneDeep } from 'lodash-es';\r\nimport { ScrollbarDirective } from './scrollbar/scrollbar.directive';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { BeforEventParam, RowEditParam } from './types/event-params';\r\nimport { DatagridColumnsHelper } from './services/datagrid-columns.helper';\r\nimport { DatagridFilterService } from './services/datagrid-filter.service';\r\nimport { debounceTime, takeUntil } from 'rxjs/operators';\r\n\r\nimport { SmartFilterToolbarComponent } from './components/filter-toolbar/smart-filter-toolbar.component';\r\nimport { DatagridSmartFilterService } from './services/datagrid-smart-filter.service';\r\nimport { IdService } from '@farris/ui-common';\r\nimport { SelectionModeService } from './services/selection-mode.service';\r\nimport { ContextMenuItem } from '@farris/ui-context-menu';\r\nimport { HttpClient } from '@angular/common/http';\r\n@Component({\r\n    selector: 'farris-datagrid',\r\n    templateUrl: './datagrid.component.html',\r\n    encapsulation: ViewEncapsulation.None,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [\r\n        DatagridFacadeService,\r\n        DatagridService,\r\n        DatagridSmartFilterService\r\n    ],\r\n    exportAs: 'datagrid',\r\n    styles:[\r\n        `.f-datagrid-header table{\r\n            background-color: #F1F3F7;\r\n        }`\r\n    ]\r\n})\r\nexport class DatagridComponent implements OnInit, OnDestroy, OnChanges, AfterContentInit, AfterViewInit, DoCheck {\r\n    private auther = `Lucas Huang - QQ:1055818239`;\r\n    private version = '0.8.x';\r\n    __component_type__ = 'DatagridComponent';\r\n\r\n    /** å¯ç¨æ§è½ä¼åçï¼é»è®¤ä¸º false */\r\n    @Input() fast = false;\r\n\r\n    @HostBinding('style.position') pos = 'relative';\r\n    @HostBinding('class.f-datagrid-full') hostCls = false;\r\n    @HostBinding('class.f-datagrid-auto-height') get autoHeightCls() {\r\n        return this.autoHeight;\r\n    }\r\n    /** ä½¿ç¨ä¸»é¢ */\r\n    @Input() useThemes = true;\r\n    // ç¨äºå­å¨ç¨æ·ä¸ªæ§åè®¾ç½®\r\n    @Input() id = '';\r\n    /** èªå¨é«åº¦ - å¯ç¨æ­¤å±æ§åï¼å°±æ¯ä¸ä¸ªæ®æ®ééç table , ä¸è½ç¼è¾ï¼ä¸è½æåºï¼ä¸è½åé¡µï¼ä¸è½... å°±æ¯ä¸å¡è */\r\n    @Input() useHtmlTable = false;\r\n    /** èªå¨é«åº¦ */\r\n    @Input() autoHeight = false;\r\n    /** éå autoHeight ä¸èµ·ä½¿ç¨ï¼å½æ­¤å¼å¤§äº0 æ¶ï¼ä¸autoHeight ä¸ºtrueæ¶ï¼æ°æ®æ»è¡é«è¾¾å°æå¤§é«åº¦æ¶ï¼å°åæ­¢èªå¨é«åº¦å¹¶ä½¿ç¨åé¨æ»å¨æ¡ */\r\n    @Input() maxHeight = 0;\r\n\r\n    /** æ¾ç¤ºè¾¹æ¡ */\r\n    @Input() showBorder = false;\r\n    /** å¯ç¨æé©¬çº¿  */\r\n    @Input() striped = true;\r\n    /** å®½åº¦ */\r\n    @Input() width = 800;\r\n    /** é«åº¦ */\r\n    @Input() height = 300;\r\n\r\n    /** æ¾ç¤ºè¡¨å¤´ */\r\n    @Input() showHeader = true;\r\n    /** è¡¨å¤´-åè¡é«åº¦ */\r\n    @Input() headerHeight = 35;\r\n    /** è¡¨å¤´æè¡ */\r\n    @Input() headerWrap = false;\r\n    /** æ¾ç¤ºé¡µè */\r\n    @Input() showFooter = false;\r\n    /** é¡µèé»è®¤è¡é« */\r\n    @Input() footerHeight = 29;\r\n    /** é¡µèæ°æ®æ¥æº, é»è®¤ä¸º client */\r\n    @Input() footerDataFrom: 'server' | 'client' = 'client';\r\n    /** é¡µèåè®¡è¡æ¨¡æ¿ */\r\n    @Input() footerTemplate: TemplateRef<any>;\r\n    /** åè®¡è¡æ¾ç¤ºä½ç½®ï¼é»è®¤ä¸ºåºé¨ */\r\n    @Input() footerPosition: 'top' | 'bottom' | 'both' = 'bottom';\r\n    /** é¡µèè¡èªå®ä¹æ ·å¼ */\r\n    @Input() footerStyler: () => { cls?: string, style?: any };\r\n    /** è¡é« */\r\n    @Input() rowHeight = 29;\r\n\r\n    /**\r\n     * è®¾ç½®grid è¡é«å°ºå¯¸\r\n     * sm: å°ï¼md: æ­£å¸¸ï¼ lg: å¤§ï¼xl: è¶å¤§\r\n     */\r\n    private _sizeType: 'sm' | 'md' | 'lg' | 'xl' = 'sm';\r\n    get sizeType() {\r\n        return this._sizeType;\r\n    }\r\n    @Input() set sizeType(val) {\r\n        this._sizeType = val;\r\n    }\r\n\r\n    /** å¡«åå®¹å¨ */\r\n    private _fit = false;\r\n    @Input() get fit() {\r\n        return this._fit;\r\n    }\r\n    set fit(val: boolean) {\r\n        this._fit = val;\r\n        this.hostCls = val;\r\n    }\r\n    /** å¦æä¸ºçï¼åèªå¨å±å¼/æ¶ç¼©åçå¤§å°ä»¥éåç½æ ¼å®½åº¦å¹¶é²æ­¢æ°´å¹³æ»å¨ã */\r\n    private _fitColumns = false;\r\n    @Input() get fitColumns() {\r\n        return this._fitColumns;\r\n    }\r\n    set fitColumns(val: boolean) {\r\n        if (this._fitColumns !== val) {\r\n            this._fitColumns = val;\r\n            if (val) {\r\n                this.setFitColumns(val);\r\n            } else {\r\n                this.dfs.fitColumns(false);\r\n                this.dfs.initColumns(false, true);\r\n                this.restituteColumnsSize();\r\n            }\r\n        }\r\n    }\r\n    /** æ ¹æ®gridçå®½åº¦èªå¨è°æ´åå®½åº¦ */\r\n    private _autoFitColumns = false;\r\n    @Input() get autoFitColumns() {\r\n        return this._autoFitColumns;\r\n    }\r\n    set autoFitColumns(val) {\r\n        this._autoFitColumns = val;\r\n        this.dfs.updateProperty('autoFitColumns', val);\r\n    }\r\n\r\n    /** ç¦ç¨ */\r\n    @Input() disabled = false;\r\n    /**\r\n     * æ»å¨æ¡æ¾ç¤ºæ¨¡å¼ï¼é»è®¤ä¸º auto\r\n     */\r\n    @Input() scrollBarShowMode: 'auto' | 'allways' = 'auto';\r\n    @Input() scrollBarOptions = {\r\n        width: 18,\r\n        height: 18\r\n    };\r\n    /** å½æ»å¨ä¸ç´æ¾ç¤ºæ¶ï¼æ¯å¦æ¾ç¤ºä¸¤ç«¯çç®­å¤´ */\r\n    @Input() showScrollArrow = false;\r\n\r\n    /** å¯æå¨åè®¾ç½®åå®½ */\r\n    @Input() resizeColumn = true;\r\n    /** æ¾ç¤ºè¡å· */\r\n    @Input() showLineNumber = false;\r\n    /** è¡å·è¡¨å¤´å­ç¬¦ */\r\n    @Input() lineNumberTitle = '';\r\n    /** è¡å·å®½åº¦ */\r\n    @Input() lineNumberWidth = 36;\r\n    /** é¼ æ æ»è¿ææå¼å³ï¼é»è®¤å¼å¯ */\r\n    @Input() rowHover = true;\r\n    /** åè®¸ç¼è¾æ¶ï¼åå»è¿å¥ç¼è¾ç¶æ; falseä¸ºåå»è¿å¥ç¼è¾ */\r\n    @Input() clickToEdit = true;\r\n\r\n    private _lockPagination = false;\r\n    /** éå®åé¡µæ¡ï¼éå®åé¡µç ç¹å»æ æ */\r\n    @Input() get lockPagination() {\r\n        return this._lockPagination;\r\n    }\r\n    set lockPagination(val: boolean) {\r\n        this._lockPagination = val;\r\n        if (this.dgPager) {\r\n            this.dgPager[val ? 'lock' : 'unlock']();\r\n        }\r\n    }\r\n\r\n    /** åé¡µä¿¡æ¯ */\r\n    private __pagination = true;\r\n    @Input() set pagination(val) {\r\n        if (this.__pagination !== val) {\r\n            this.__pagination = val;\r\n            this.dfs.updateProperty('pagination', val);\r\n            this.dgs.showGridHeader.emit();\r\n        }\r\n    }\r\n    get pagination() {\r\n        return this.__pagination;\r\n    }\r\n\r\n    /** åé¡µç»ä»¶èªå®ä¹åå®¹åºæ¨¡æ¿ */\r\n    @Input() pagerContentTemplate: TemplateRef<any> = null;\r\n    /** åé¡µæ¡å¯¹é½å±ç¤ºæ¹å¼ï¼ left, right, center   é»è®¤ä¸º right  */\r\n    @Input() pagerPos: 'left'|'center'| 'right' = 'right';\r\n\r\n    /** åé¡µæ¡æ¾ç¤ºæ¨¡å¼ï¼ default, simple */\r\n    @Input() pagerViewMode = 'default';\r\n    /** å¯ç¨æå¡å¨ç«¯åé¡µ */\r\n    @Input() pagerOnServer = true;\r\n    /** æ¯é¡µè®°å½æ° */\r\n    @Input() pageList = [10, 20, 30, 50, 100];\r\n    /** å½åé¡µç  */\r\n    @Input() pageIndex = 1;\r\n    /** æ¯é¡µè®°å½æ° */\r\n    @Input() pageSize = 20;\r\n    /** åé¡µåºé«åº¦ */\r\n    @Input() pagerHeight = 56;\r\n    /** æ¾ç¤ºæ¯é¡µè®°å½æ° */\r\n    @Input() showPageList = false;\r\n    /** æ¾ç¤ºåé¡µä¿¡æ¯ */\r\n    @Input() showPageInfo = true;\r\n    /** æ¾ç¤ºé¡µç  */\r\n    @Input() showPageNumber = true;\r\n    /** æ¾ç¤ºé¡µç æå¤§æ°é */\r\n    @Input() pagerLabelSize = 7;\r\n    /** æ¾ç¤ºè½¬è³æå®é¡µç è¾å¥æ¡ */\r\n    @Input() showGotoInput = false;\r\n    /** å¯ç¨è·¨é¡µå¤é */\r\n    @Input() enableMorePageSelect = false;\r\n    /** æ¾ç¤ºéä¸­åè¡¨ */\r\n    @Input() showSelectedList = false;\r\n    /** éä¸­åè¡¨ä¸­ï¼æ¯æ¡è®°å½æ¾ç¤ºçåå®¹ */\r\n    @Input() selectedItemFormatter: (data) => string;\r\n    /** ååæ ¼ä¿¡æ¯æç¤ºå»¶æ¶ï¼é»è®¤ 1000ms */\r\n    @Input() cellTipTimer = 1000;\r\n    /** grid åé¨å¤çåé¡µç¶æ */\r\n    @Input() controlPaginationState = true;\r\n    /** æ»è®°å½æ° */\r\n    private _total = 0;\r\n    get total() {\r\n        return this._total;\r\n    }\r\n\r\n    @Input() set total(val: number) {\r\n        this._total = val;\r\n        this.pagerOpts.totalItems = val;\r\n        if (!this.pagination) {\r\n            this.pagerOpts.itemsPerPage = val;\r\n        }\r\n        this.dfs.setTotal(val);\r\n    }\r\n    /** å¯ç¨éä¸­è¡ */\r\n    @Input() enableSelectRow = true;\r\n    /** å¯ç¨å¤é */\r\n    @Input() multiSelect = false;\r\n    /** å¯ç¨å¤éæ¶ï¼æ¯å¦æ¾ç¤ºcheckbox */\r\n    @Input() showCheckbox = false;\r\n    /** æ¾ç¤ºå¨écheckbox */\r\n    @Input() showAllCheckbox = false;\r\n    /** å½å¯ç¨å¤éæ¶ï¼ç¹å»è¡éä¸­ï¼åªåè®¸ä¸åªæä¸è¡è¢«éä¸­ã, é»è®¤ä¸º true */\r\n    @Input() onlySelectSelf = true;\r\n    /** å¯ç¨å¤éä¸æ¾ç¤ºcheckbox, éä¸­è¡åæ¶é©é, é»è®¤ä¸º false */\r\n    @Input() checkOnSelect = false;\r\n    /** å¯ç¨å¤éä¸æ¾ç¤ºcheckbox, é©éåéä¸­è¡, é»è®¤ä¸º false */\r\n    @Input() selectOnCheck = false;\r\n    /**\r\n     * è¡éä¸­æ¨¡å¼ï¼custom: èªå®ä¹ï¼ default: ä»¿Windowsèµæºç®¡çå¨éä¸­\r\n     * æ³¨æï¼ æ­¤å±æ§ä»å¤éï¼æ¾ç¤ºå¤éæ¡ææ\r\n     * é»è®¤å¼ï¼ custom\r\n     * addTime: 2021-12-14 by LUCAS HUANG\r\n     */\r\n    @Input() selectionMode: 'custom' | 'default' = 'custom';\r\n    /**\r\n     * åå»è¡éä¸­åï¼å¨æ¬¡ç¹å»ä¸ä¼è¢«åæ¶éä¸­ç¶æ;\r\n     */\r\n    @Input() keepSelect = true;\r\n    /** å½æ°æ®ä¸ºç©ºæ¶ï¼ä½¿ç¨ç©ºç½æ¾ç¤ºï¼ä¸é«åº¦ä¸ºä¸è¡çé«åº¦ã é»è®¤ä¸º false */\r\n    @Input() useBlankWhenDataIsEmpty = false;\r\n\r\n    /** æ°æ®ä¸ºç©ºæ¶çé«åº¦ */\r\n    @Input() emptyDataHeight = 240;\r\n    /** ç©ºæ°æ®æ¶ï¼æ¾ç¤ºçæç¤ºææ¬ */\r\n    @Input() emptyMessage = 'ææ æ°æ®';\r\n    /** æ æ°æ®æ¶çæ¨¡æ¿ */\r\n    @Input() emptyTemplate: TemplateRef<any> = null;\r\n\r\n    /** ä¸»é®å­æ®µ */\r\n    @Input() idField = 'id';\r\n    /** è¯·æ±æ°æ®æºçURL */\r\n    @Input() url: string;\r\n    /** æ°æ®æº */\r\n    @Input() data: any[];\r\n\r\n    /** é¡µèæ°æ® */\r\n    private _footerData: Observable<any> = of([]);\r\n    @Input() get footerData() {\r\n        return this._footerData;\r\n    }\r\n    set footerData(rows) {\r\n        if (rows && rows.subscribe) {\r\n            this._footerData = rows;\r\n        } else {\r\n            this._footerData = of(rows || []);\r\n        }\r\n        if (rows) {\r\n            this.setFooterHeight();\r\n        }\r\n        this.cd.detectChanges();\r\n    }\r\n\r\n    /** éªè¯ä¸éè¿æ¶å¯ä»¥ç»æç¼è¾ */\r\n    @Input() endEditByInvalid = true;\r\n\r\n    /** åéå */\r\n    private _columns = [];\r\n    @Input()\r\n    get columns() {\r\n        return this._columns;\r\n    }\r\n    set columns(values) {\r\n        this._columns = this.correctColumns(values);\r\n        this.dfs.updateProperty('columns', this._columns);\r\n    }\r\n\r\n    private _fields = [];\r\n    get fields() {\r\n        return this._fields;\r\n    }\r\n\r\n    @Input() set fields(cols) {\r\n        this._fields = cols;\r\n        this.columns = cols;\r\n        if (this.data) {\r\n            this.columnsChanged(false, true);\r\n        }\r\n    }\r\n    /** ç¦æ­¢æ°æ®æè¡ï¼é»è®¤å¼ï¼true,å³å¨ä¸è¡æ¾ç¤ºï¼ä¸æè¡ã */\r\n    @Input() nowrap = true;\r\n    /** èæå è½½ */\r\n    @Input() virtualized = false;\r\n    /** æ¯å¦å¯ç¨å¼æ­¥å è½½æ°æ® */\r\n    @Input() virtualizedAsyncLoad = false;\r\n    /** è¡æ ·å¼ */\r\n    @Input() rowStyler: (rowData, rowIndex?: number) => { cls?: string, style?: any };\r\n    /** ç¼è¾æ¹å¼ï¼ row(æ´è¡ç¼è¾)ãcell(ååæ ¼ç¼è¾)ï¼é»è®¤ä¸º row */\r\n    @Input() editMode: 'row' | 'cell' = 'row';\r\n    /** ç¼è¾ç¶æ */\r\n    private _editable = false;\r\n    get editable() {\r\n        return this._editable;\r\n    }\r\n    @Input() set editable(v) {\r\n        if (this._editable !== v) {\r\n            this._editable = v;\r\n            this.cd.detectChanges();\r\n            this.dgs.updateEmptyStyle();\r\n        }\r\n    }\r\n    /** å¯ç¨å¯ç¼è¾ååæ ¼æ ·å¼ã */\r\n    @Input() enableEditCellStyle = false;\r\n\r\n    /** è¿å¥ç¼è¾ç¶ææ¶éæ¯å¦éä¸­ææ¬ï¼é»è®¤ä¸º false\r\n     * ä»ææ¬æ¡æ¯ææ­¤ç¹æ§\r\n     */\r\n    @Input() selectOnEditing = false;\r\n\r\n    /** ç¼è¾å¨é«åº¦ */\r\n    @Input() editorHeight = 30;\r\n    /** å¯ç¨è¿ç«¯æåº */\r\n    @Input() remoteSort = false;\r\n    /** æåºå­æ®µ */\r\n    @Input() sortName: string;\r\n    /** æåºæ¹å¼ asc | desc */\r\n    @Input() sortOrder: string;\r\n    /** åè®¸å¤åæåº */\r\n    @Input() multiSort: boolean;\r\n\r\n    @Input() hoverRowCls = 'f-datagrid-row-hover';\r\n\r\n    /** åè®¸ææ½åé¡ºåº */\r\n    @Input() enableDragColumn = false;\r\n\r\n    /** è¡åç»é¢æ¿é«åº¦ï¼é»è®¤ 50PX */\r\n    @Input() rowGroupPanelHeight = 50;\r\n    /** å¯ç¨åç»è¡ */\r\n    @Input() groupRows = false;\r\n    /** å¯ç¨è¡åç»åè®¡è¡ */\r\n    @Input() groupFooter = false;\r\n    /** åç»è¡æ¯å¦å±å¼ï¼é»è®¤ä¸º å±å¼  */\r\n    @Input() expandGroupRows = true;\r\n    /**\r\n     * åç»åè®¡è¡èªå®ä¹æ ·å¼ï¼\r\n     * åè®¸çå¼ä¸º\r\n     * - { cls: 'cssclassname, ', style: { color: 'red', border: 1px solid } }\r\n     * - (groupFooterRowData): { cls: 'cssclassname, ', style: { color: 'red', border: 1px solid } } => {}\r\n     */\r\n    @Input() groupFooterStyler: any;\r\n    /** åè®¡æ°æ®æ¾ç¤ºä½ç½®\r\n     * inGroupRow: ä¸åç»å¨åä¸è¡ï¼åå«ç¸å³åè®¡å­æ®µå¯¹é½\r\n     * groupFooterRow: å¨åç»æ°æ®æåå¢å ä¸è¡\r\n     * é»è®¤ä¸º groupFooterRow\r\n     */\r\n    @Input() groupSummaryPosition: 'inGroupRow' | 'groupFooterRow' = 'groupFooterRow';\r\n    /** åç»ä¿¡æ¯åå¹¶åæ°\r\n     * é»è®¤ä¸º 1\r\n     */\r\n    @Input() groupCellColSpan = 1;\r\n\r\n    /** åç»å­æ®µåç§°, å¤å­æ®µåç»ä»¥è±æéå·åé */\r\n    private _groupField = '';\r\n    groupFields$ = new BehaviorSubject([]);\r\n    get groupField() {\r\n        return this._groupField;\r\n    }\r\n    @Input() set groupField(val) {\r\n        this._groupField = val || '';\r\n\r\n        if (Array.isArray(this._groupField)) {\r\n            this._groupField = this._groupField.join(',');\r\n        }\r\n\r\n        if (this._groupField) {\r\n            this.groupFields$.next(this._groupField.split(','));\r\n        } else {\r\n            this.groupFields$.next([]);\r\n        }\r\n\r\n        this.dfs.updateProperty('groupField', this._groupField);\r\n    }\r\n    /** æ¾ç¤ºåç»å */\r\n    @Input() showGroupColumn = true;\r\n    /** åç»æ ¼å¼å */\r\n    @Input() groupFormatter: (groupRow: any) => any;\r\n    /** åç»è¡æ ·å¼ */\r\n    @Input() groupStyler: (groupRow: any) => { cls?: string, style?: any };\r\n\r\n    /** æ¾ç¤ºåç»åé¢æ¿ãé»è®¤ä¸º false */\r\n    private _showRowGroupPanel = false;\r\n    @Input() set showRowGroupPanel(val) {\r\n        this._showRowGroupPanel = val;\r\n    }\r\n    get showRowGroupPanel() {\r\n        return this.groupRows && this._showRowGroupPanel;\r\n    }\r\n\r\n    /** åå»è¡¨å¤´éåºåå®¹å®½åº¦ */\r\n    @Input() AutoColumnWidthUseDblclick = true;\r\n    /** è¡é©éåéä¸­ç¦ç¨è¡¨è¾¾å¼ */\r\n    @Input() disableRow: (row, index?: any) => boolean;\r\n    /** ä½¿ç¨åé¨è¿æ»¤å¨; é»è®¤ä¸º false */\r\n    @Input() useDefaultFilter = false;\r\n    /** è¿æ»¤å¾æ ä¸æåºå¾æ åå¹¶ï¼æ­¤å±æ§ä¸ enableFilterRow äºæ¥ */\r\n    @Input() enableSmartFilter = false;\r\n    /** æ¾ç¤ºè¿æ»¤è¡ */\r\n    @Input() enableFilterRow = false;\r\n    /** æå¡å¨ç«¯è¿æ»¤ */\r\n    @Input() remoteFilter = false;\r\n    /** å¯ç¨è¿æ»¤æ¡ä»¶æ¾ç¤ºæ¡ */\r\n    @Input() showFilterBar = false;\r\n    /** è¿æ»¤æ¡ä»¶æ±æ»æ¡é«åº¦ï¼é»è®¤ 32px  */\r\n    @Input() filterBarHeight = 32;\r\n    @Input() filterRowHeight = 40;\r\n    @Input() conditions: any = {};\r\n\r\n    @Input() selectValue = null;\r\n    @Input() checkValues = [];\r\n    @Input() selectValues = [];\r\n\r\n    /** åå¹¶ååæ ¼ï¼åæ¯æçºµååå¹¶ */\r\n    @Input() mergeCell = false;\r\n    @Input() mergeFields = [];\r\n    /** åå¹¶ååæ ¼æ°æ®å¯ç¨å®¢æ·ç«¯æåº */\r\n    @Input() enableClientSortForMergeCell = false;\r\n    /** ä½¿ç¨é«çº§æ§å¶é¢æ¿(åè®¾ç½®) */\r\n    @Input() useControlPanel = false;\r\n    /** å¯ç¨ç®æ´æ§å¶é¢æ¿æ¨¡å¼ãé»è®¤ä¸º false */\r\n    @Input() enableSimpleMode = false;\r\n    /** ç¹å»åè®¾ç½®å¾æ ï¼é»è®¤æå¼çæ§å¶é¢æ¿ */\r\n    @Input() controlPanelMode: 'advanced' | 'simple' = 'advanced';\r\n    /** å¯ç¨åè®¾ç½®æ¹æ¡ */\r\n    @Input() enableScheme = false;\r\n    /** ç³»ç»é¢å¶æ¹æ¡åç§° */\r\n    @Input() defaultSchemeName = 'ç³»ç»é¢å¶';\r\n\r\n    /** é»æ­¢click äºä»¶åæ³¡ */\r\n    @Input() stopPropagation = true;\r\n    /**\r\n     * (202105 å¼ç¨)\r\n     * ç¹å»ååæ ¼è¿è¡ç¼è¾ç¶ææ¶ï¼å³é­å¶ä»Gridçç¼è¾å¨ãé»è®¤ falseï¼\r\n     * å¤ä¸ªåè¡¨å­æ¶ï¼ä»æä¸ä¸ªåè¡¨ä¸­æç¼è¾ç¶æï¼å¶ä»åè¡¨ç»æç¼è¾\r\n     */\r\n    @Input() closeOtherGridEditor = false;\r\n    /** å½æ°æ®æºä¸ºç©ºæ¶ï¼æ¸ç©ºå·²éè®°å½ */\r\n    @Input() clearSelectionsWhenDataIsEmpty = true;\r\n    /** å¯ç¨å³é®èåï¼é»è®¤ä¸º false */\r\n    @Input() enableContextMenu = false;\r\n    /** å³é®èåæ°æ® */\r\n    @Input() contextMenus: ContextMenuItem[] = null;\r\n\r\n    @Output() selectValueChange = new EventEmitter();\r\n    @Output() checkValuesChange = new EventEmitter();\r\n    @Output() selectValuesChange = new EventEmitter();\r\n\r\n    @Input() beforeEdit: (param: RowEditParam) => Observable<boolean>;\r\n    @Output() beginEdit = new EventEmitter<RowEditParam>();\r\n    @Input() afterEdit: (rowIndex: number, rowData: any, column?: DataColumn, editor?: any) => Observable<boolean>;\r\n    @Output() endEdit = new EventEmitter<{ rowIndex: number, rowData: any, column?: DataColumn, value?: any }>();\r\n    @Output() cancelEdited = new EventEmitter<string>();\r\n\r\n    @Output() scrollY = new EventEmitter();\r\n\r\n    @Output() pageSizeChanged = new EventEmitter();\r\n    @Output() pageChanged = new EventEmitter();\r\n\r\n    @Output() loadSuccess = new EventEmitter();\r\n\r\n    @Output() filterChanged = new EventEmitter();\r\n\r\n    @Input() beforeSelect: (params: BeforEventParam) => Observable<boolean>;\r\n    @Input() beforeUnselect: (params: BeforEventParam) => Observable<boolean>;\r\n    @Input() beforeCheck: (params: BeforEventParam) => Observable<boolean>;\r\n    @Input() beforeUncheck: (params: BeforEventParam) => Observable<boolean>;\r\n    @Input() beforeSortColumn: (field: string, order: string, instance: DatagridComponent) => Observable<boolean>;\r\n    /** å¯ç¨éä¸­ååæ ¼é«äº®æ¾ç¤º */\r\n    @Input() enableHighlightCell = false;\r\n    /**  éä¸­çæ°æ®å§ç»ä»æ°æ®æºä¸­è·å. é»è®¤ä¸º false */\r\n    @Input() checkedRowsDataFromSource = false;\r\n    /** å½åååæ ¼ä¸ºåªè¯»æ¶ï¼ä½¿ç¨tab é®è·³å°ä¸ä¸ªååæ ¼æ¶ï¼æ¯å¦åè®¸è¿å¥ç¼è¾ç¶æï¼é»è®¤ä¸º false;\r\n     * é»è®¤æåµä¸ï¼å½åååæ ¼åªè¯»ï¼æTABè·³å°ä¸ä¸ªCELL æ¶ï¼éä¸­CELL ï¼åè½¦è¿å¥ç¼è¾ã\r\n     * å¼å¯åï¼ä¸ä¸ªååæ ¼èªå¨è¿å¥ç¼è¾ç¶æã\r\n     */\r\n    @Input() editcellWhenTabKeydwon = false;\r\n\r\n    /** ååæ ¼ç¹å»åäºä»¶ */\r\n    @Output() beforeClickCell = new EventEmitter<RowEditParam>();\r\n\r\n    @Output() dblclickRow = new EventEmitter();\r\n    @Output() selectChanged = new EventEmitter<SelectedRow>();\r\n    @Output() unSelect = new EventEmitter<SelectedRow>();\r\n    @Output() selectAll = new EventEmitter<SelectedRow[]>();\r\n    @Output() unSelectAll = new EventEmitter();\r\n    /** å¼æ­¥è¯·æ±èæå è½½ */\r\n    @Output() scrollYLoad = new EventEmitter<{ pager: number, pageSize: number }>();\r\n\r\n    @Output() checked = new EventEmitter<SelectedRow>();\r\n    @Output() unChecked = new EventEmitter<SelectedRow>();\r\n    @Output() checkAll = new EventEmitter<SelectedRow[]>();\r\n    @Output() unCheckAll = new EventEmitter<SelectedRow[]>();\r\n    @Output() checkedChange = new EventEmitter<SelectedRow[]>();\r\n\r\n    @Output() columnSorted = new EventEmitter<any>();\r\n\r\n    @Output() rowClick = new EventEmitter();\r\n    @Output() rowAppended = new EventEmitter();\r\n    @Output() rowDeleted = new EventEmitter();\r\n    @Output() rowUpdated = new EventEmitter();\r\n\r\n    @Output() dataChange = new EventEmitter();\r\n\r\n    /** æåä¸è¡çæåååæ ¼åè½¦å¤çäºä»¶ */\r\n    @Output() lastCellEnterHandler = new EventEmitter();\r\n\r\n    /** åç»å­æ®µååå */\r\n    @Output() groupFieldChange = new EventEmitter();\r\n    /** æå¨åæ¹ååæ¾ç¤ºä½ç½®åè§¦å */\r\n    @Output() columnMoved = new EventEmitter();\r\n    /** ååæ ¼ç¹å»äºä»¶ */\r\n    @Output() cellClick = new EventEmitter();\r\n\r\n    @ContentChildren(DatagridColumnDirective) dgColumns?: QueryList<DatagridColumnDirective>;\r\n    @ViewChild('dgPager') dgPager: any;\r\n    @ViewChild('resizeProxy') resizeProxy: ElementRef;\r\n    @ViewChild('resizeProxyBg') resizeProxyBg: ElementRef;\r\n    @ViewChild('datagridContainer') dgContainer: ElementRef;\r\n    @ViewChild('longTextArea') longTextArea: ElementRef;\r\n    @ViewChild('smartfiltertoolbar') smartFilterToolbar: SmartFilterToolbarComponent;\r\n    colGroup: ColumnGroup;\r\n\r\n    private _loading = false;\r\n    get loading() {\r\n        return this._loading;\r\n    }\r\n    set loading(val: boolean) {\r\n        this._loading = val;\r\n        if (!this.cd['destroyed']) {\r\n            this.cd.detectChanges();\r\n        }\r\n    }\r\n\r\n    get selections(): SelectedRow[] {\r\n        return this.dfs.getSelections();\r\n    }\r\n\r\n    get checkeds() {\r\n        return this.checkedRows;\r\n    }\r\n\r\n    get checkedRows() {\r\n        const chkeds = this.dfs.getCheckeds();\r\n        if (this.enableMorePageSelect) {\r\n            if (chkeds && chkeds.length) {\r\n                if (!this.checkedRowsDataFromSource) {\r\n                    return [...chkeds];\r\n                }\r\n                // ä»æ°æ®æºä¸­è·åææ°æ°æ®\r\n                return chkeds.map(n => {\r\n                    const d = this.dfs.findRow(n.id);\r\n                    if (d) {\r\n                        n.data = d.data;\r\n                    }\r\n                    return n;\r\n                });\r\n            }\r\n        } else {\r\n            if (this.data && this.data.length) {\r\n                const temp = this.data.map(n => n[this.idField]);\r\n                if (!this.checkedRowsDataFromSource) {\r\n                    return chkeds.filter(n => temp.includes(n.id));\r\n                }\r\n                // ä»æ°æ®æºä¸­è·åææ°æ°æ®\r\n                return chkeds.filter(n => temp.includes(n.id)).map(n => {\r\n                    const d = this.dfs.findRow(n.id);\r\n                    if (d) {\r\n                        n.data = d.data;\r\n                    }\r\n                    return n;\r\n                });\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n\r\n    set checkedRows(rows: any[]) {\r\n        if (rows && rows.length) {\r\n            rows = rows.map(r => {\r\n                if (r.data) {\r\n                    return r;\r\n                }\r\n                return {\r\n                    id: r[this.idField],\r\n                    data: r\r\n                };\r\n            });\r\n        }\r\n\r\n        this.dfs.updateProperty('checkedRows', rows || []);\r\n        this.initSelectOrChecked();\r\n        this.cd.markForCheck();\r\n    }\r\n\r\n    private _selectedRow = null;\r\n    get selectedRow(): SelectedRow {\r\n        return this._selectedRow;\r\n    }\r\n    set selectedRow(row) {\r\n        if (row) {\r\n            if (this.selectValue != row.id) {\r\n                this._selectedRow = row;\r\n                this.selectValue = row.id;\r\n                this.selectValueChange.emit(row.id);\r\n                this.selectChanged.emit(row);\r\n            }\r\n        } else {\r\n            this.unSelect.emit(this._selectedRow);\r\n            this.selectValue = null;\r\n            this.selectValueChange.emit('');\r\n            this._selectedRow = null;\r\n        }\r\n        // this.cd.detectChanges();\r\n    }\r\n\r\n    ds = {\r\n        index: 0,\r\n        rows: [],\r\n        top: 0,\r\n        bottom: 0,\r\n        scrolling: false // æ¯å¦ç±æ»å¨æ¡è§¦å\r\n    };\r\n\r\n    pagerOpts: any = {};\r\n    restService: RestService;\r\n    editors: { [key: string]: any } = {};\r\n\r\n    validators: { name: string, value: ValidatorFn }[] = [];\r\n\r\n    currentCell: CellInfo;\r\n    flatColumns: DataColumn[];\r\n    footerWidth = 0;\r\n\r\n    clickDelay = 150;\r\n    private resizeColumnInfo = {\r\n        proxyLineEdge: 0,\r\n        startWidth: 0,\r\n        startX: 0,\r\n        left: 0\r\n    };\r\n\r\n    private ro: ResizeObserver | null = null;\r\n    subscriptions: Subscription[] = [];\r\n    realHeaderHeight = 0;\r\n    isSingleClick: boolean;\r\n\r\n    docuemntCellClickEvents: any;\r\n    documentCellClickHandler: any;\r\n    documentCellKeydownEvents: any;\r\n    documentCellKeydownHandler: any;\r\n\r\n    // å¼¹çªä¸­ä½¿ç¨æ¶ï¼çªå£ç¹å»äºä»¶å¤ç\r\n    private modalClickEvent = null;\r\n\r\n    // è¡éä¸­é®çäºä»¶\r\n    documentRowKeydownHandler: any;\r\n    // è¡ç¼è¾å¿«æ·é®\r\n    documentRowEditKeydownHanlder: any;\r\n    // document åå»æ¶ç»æè¡ç¼è¾\r\n    documentClickEndRowEditHandler: any;\r\n\r\n    pending = false;\r\n    public colFormatSer: ColumnFormatService;\r\n    scrollInstance: ScrollbarDirective = null;\r\n    // æ¬å°åæå¡\r\n    localeService: LocaleService;\r\n    // åå¹¶ååè¾å©ä¿¡æ¯\r\n    mergeCellInfo = {};\r\n    ignoreTarget = ['INPUT', 'SELECT', 'TEXTAREA'];\r\n    clientFilterService: DatagridFilterService = null;\r\n\r\n    settingService: any; // DatagridSettingsService;\r\n\r\n    /* æ§å¶åå­æ®µåç§°: _datagrid-setting-control_ */\r\n    ControlPanelFeild = '_datagrid-setting-control_';\r\n\r\n    private _isResized = false;\r\n\r\n    gridSize = { width: this.width + 'px', height: this.height + 'px' };\r\n    // å®¢æ·ç«¯è¿æ»¤æ¶ï¼æ¯å¦è¿æ»¤è¡åçåå\r\n    clientFilterChanged = false;\r\n    // style's ID\r\n    styleSheetId = '';\r\n\r\n    groupRowPanelPlaceholder = '';\r\n    commonUtils: CommonUtils = null;\r\n    smartFilterService: DatagridSmartFilterService = null;\r\n    smartFilterResult = { controlData: [], conditions: [] };\r\n    smartFilterBarHeight = 32;\r\n    private idService: IdService;\r\n    private _active_datagrid_cls = 'datagrid-active';\r\n    private _blured_datagrid_cls = 'datagrid-blurred';\r\n\r\n    // èªå®ä¹gridæ ·å¼ï¼åè¡¨åå§åï¼ä¼æ·»å ä¸ä¸ªèªå®ä¹åç§°çæ ·å¼\r\n    _custom_datagrid_cls = 'datagrid';\r\n    // å¤éä»¿ windows éæ©æ¨¡å¼\r\n    sms: SelectionModeService;\r\n    // ç¦ç¹è¡ç´¢å¼ï¼æ¯æ¬¡è¡ç¹å»åæ´æ°\r\n    focusRowIndex = -1;\r\n\r\n    private documentBodyMouseDown = null;\r\n    private farrisInstances: FarrisComponentInstanceService = null;\r\n    private currentPagerData = [];\r\n    private resizeTimer = null;\r\n    private debugSer: DebugService = null;\r\n    private DATA_CHANGED_TIMER = null;\r\n\r\n\r\n    formValidations = null;\r\n\r\n    constructor(\r\n        public cd: ChangeDetectorRef,\r\n        public el: ElementRef,\r\n        public inject: Injector, public zone: NgZone,\r\n        public dfs: DatagridFacadeService,\r\n        public dgs: DatagridService,\r\n        private app: ApplicationRef,\r\n        protected domSanitizer: DomSanitizer,\r\n        public render2: Renderer2) {\r\n\r\n        this.styleSheetId = 'DATAGRID-' + Utils.uuid();\r\n\r\n        this.localeService = this.inject.get(LocaleService);\r\n        this.restService = this.inject.get<RestService>(DATAGRID_REST_SERVICEE, null);\r\n        this.colFormatSer = this.inject.get(ColumnFormatService);\r\n        this.commonUtils = this.inject.get(CommonUtils, null);\r\n        this.clientFilterService = new DatagridFilterService(dfs, this.localeService, inject);\r\n        this.farrisInstances = this.inject.get(FarrisComponentInstanceService, null);\r\n        this.debugSer = this.inject.get(DebugService, null);\r\n\r\n        if (!this.debugSer) {\r\n            this.debugSer = new DebugService();\r\n        }\r\n\r\n        if (this.debugSer.useDebugMode) {\r\n            this.debugSer.useDebugMode();\r\n        }\r\n\r\n        this.smartFilterService = this.inject.get(DatagridSmartFilterService, null);\r\n        this.idService = this.inject.get(IdService, null);\r\n        this.dfs.localId = this.localeService.localeId;\r\n\r\n        this.settingService = this.inject.get(GRID_SETTINGS_SERVICE, null);\r\n        if (this.settingService) {\r\n            const settingsHttp = this.inject.get(GRID_SETTINGS_HTTP, null);\r\n            this.settingService.httpRestService = settingsHttp;\r\n        }\r\n\r\n        const dataSubscription = this.dfs.data$.subscribe((dataSource: any) => {\r\n            this.cleanDom();\r\n            const ds = { ...dataSource };\r\n\r\n            if (this.conditions && Object.keys(this.conditions).length && !this.remoteFilter && this.useDefaultFilter) {\r\n                ds.rows = this.clientFilterService.executeFilter(ds.rows, this.conditions);\r\n            }\r\n\r\n            this.ds = ds;\r\n\r\n            if (this.ds.rows && this.ds.rows.length) {\r\n                this.data = this.dfs.getData();\r\n\r\n                if (this.mergeCell && this.mergeFields && this.mergeFields.length) {\r\n                    this.mergeCellInfo = this.dgs.getMergeCellInfo3(this.ds.rows, [...this.mergeFields]);\r\n                }\r\n\r\n                this.setPagerTotal();\r\n                this.loadSuccess.emit(this.ds.rows);\r\n\r\n\r\n            } else {\r\n                this.data = [];\r\n                this.currentCell = null;\r\n                if (this.clearSelectionsWhenDataIsEmpty) {\r\n                    this.clearAll();\r\n                }\r\n\r\n            }\r\n\r\n            if (!this.ds.scrolling) {\r\n                this.updateFooterData();\r\n            }\r\n            // æ§è½ä¼å\r\n            this.cd.detectChanges();\r\n\r\n            \r\n            if (this.DATA_CHANGED_TIMER) {\r\n                clearTimeout(this.DATA_CHANGED_TIMER);\r\n            }\r\n\r\n            this.DATA_CHANGED_TIMER = setTimeout(() => {\r\n                if (this.autoHeight && this.maxHeight) {\r\n                    if (this.maxHeight < 55) {\r\n                        this.maxHeight = 60;\r\n                    }\r\n\r\n                    const gridContainerEl = this.el.nativeElement.parentElement;\r\n                    if (gridContainerEl.nodeName !== 'DIV') {\r\n                        this.writeConsole('Datagridç¶å®¹å¨å¿é¡»ä¸ºDIVã');\r\n                    } else {\r\n                        gridContainerEl.style.height = 'unset';\r\n                        gridContainerEl.style.maxHeight = this.maxHeight + 'px';\r\n                        gridContainerEl.style.minHeight = `${this.emptyDataHeight + this.realHeaderHeight}px`;\r\n                    }\r\n                }\r\n\r\n                if (this.useBlankWhenDataIsEmpty) {\r\n                    this.calculateGridSize(this.fit);\r\n                }\r\n            }, 100);\r\n        });\r\n        this.subscriptions.push(dataSubscription);\r\n\r\n        const columnGroupSubscription = this.dfs.columnGroup$.pipe(\r\n            debounceTime(60)\r\n        ).subscribe(cg => {\r\n            if (cg) {\r\n                this.colGroup = cg;\r\n                this.footerWidth = cg.totalWidth;\r\n\r\n                this.cd.detectChanges();\r\n            }\r\n        });\r\n        this.subscriptions.push(columnGroupSubscription);\r\n\r\n        this.subscriptions.push(\r\n            this.dfs.gridSize$.subscribe((cg: any) => {\r\n                if (cg && cg.columnsGroup) {\r\n                    this.colGroup = cg.columnsGroup;\r\n                    this.cd.detectChanges();\r\n                }\r\n            })\r\n        );\r\n\r\n        this.initEditorAndValidator();\r\n\r\n        const currentCellSubscription = this.dfs.currentCell$.subscribe((cell: any) => {\r\n            this.currentCell = cell;\r\n            if (cell && cell.cellRef) {\r\n                cell.cellRef.isEditing = cell.isEditing;\r\n            }\r\n            this.unbindMoveSelectRowEvent();\r\n            this.bindDocumentEditListener();\r\n        });\r\n\r\n\r\n        this.dfs.selectRow$.subscribe((sr: SelectedRow) => {\r\n            if (!this.currentCell) {\r\n                this.bindDocumentMoveSelectRowEvent();\r\n            }\r\n            this.selectedRow = sr;\r\n            // this.cd.detectChanges();\r\n            // this.selectChanged.emit(sr);\r\n        });\r\n\r\n        this.subscriptions.push(currentCellSubscription);\r\n\r\n        DatagridColumnsHelper.gridInstance = this;\r\n\r\n        const filterChangedSubscription = this.dgs.onFilterChanged.subscribe((conditions: any) => {\r\n            // æ´æ°ç¼å­è¿æ»¤æ¡ä»¶\r\n            this.conditions = conditions;\r\n            this.clientFilterChanged = true;\r\n            this.filterData(this.conditions);\r\n        });\r\n        this.subscriptions.push(filterChangedSubscription);\r\n        // this.initPaginationOptions();\r\n\r\n        const footerDataSubscription = this.dgs.refreshFooterData.subscribe(() => {\r\n            this.updateFooterData();\r\n            // this.cd.detectChanges();\r\n        });\r\n        this.subscriptions.push(footerDataSubscription);\r\n        this.dgs.commonUtils = this.commonUtils;\r\n\r\n\r\n        this.dgs.focusRowChanged.subscribe((e: any) => {\r\n            if (e) {\r\n                this.focusRowIndex = e.rowIndex;\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    setCurrentPagerData($data) {\r\n        this.currentPagerData = $data;\r\n    }\r\n\r\n    writeConsole(msg, type: 'info'|'log'|'warn'|'error' = 'warn') {\r\n        if (this.debugSer) {\r\n            if (this.debugSer[type]) {\r\n                this.debugSer[type](msg);\r\n            } else {\r\n                console[type](msg)\r\n            }\r\n        }\r\n    }\r\n\r\n    private updateFooterData() {\r\n        if ((this.showFooter || this.pagerContentTemplate ) && this.footerDataFrom === 'client' ) {\r\n            this.footerData = of(this.dfs.getFooterData(this.data));\r\n        }\r\n    }\r\n\r\n    //#region Ng Event\r\n\r\n    ngDoCheck() {\r\n        // if (!this.checkValues) {\r\n        //     this.checkValues = [];\r\n        // }\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        this.sms = new SelectionModeService(this);\r\n\r\n        this.checkFilterStyle();\r\n\r\n        if (this.useThemes) {\r\n            this._checkSize();\r\n        }\r\n        this.checkOptions();\r\n        this.groupRowPanelPlaceholder = this.localeService.getValue('datagrid.groupRow.tips');\r\n        // this._flatColumns();\r\n        // this.setHeaderHeight();\r\n\r\n        if (this.smartFilterService) {\r\n\r\n            if (this.enableSmartFilter && this.showFilterBar) {\r\n                if (this.smartFilterResult && this.smartFilterResult.controlData && this.smartFilterResult.controlData.length) {\r\n                    this.filterBarHeight = this.smartFilterBarHeight;\r\n                } else {\r\n                    this.filterBarHeight = 0;\r\n                }\r\n            }\r\n\r\n            this.smartFilterService.filterChanged.subscribe((e: any) => {\r\n\r\n                if (!this.smartFilterResult && !e) {\r\n                    return;\r\n                }\r\n\r\n                if (JSON.stringify(this.smartFilterResult) !== JSON.stringify(e)) {\r\n                    this.smartFilterResult = e;\r\n                    this.clientFilterChanged = true;\r\n                    this.filterData(e.conditions);\r\n                    if (!this.smartFilterResult || (this.smartFilterResult.controlData && !this.smartFilterResult.controlData.length)) {\r\n                        this.onFilterBarResize(0);\r\n                    } else {\r\n                        if (!this.filterBarHeight) {\r\n                            this.onFilterBarResize(this.smartFilterBarHeight);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n\r\n        // åå»ºèªå®ä¹style å®¹å¨\r\n        // \r\n\r\n        this.setHeaderHeight();\r\n        this.setPagerHeight();\r\n        this.initBeforeEvents();\r\n        if (this.fit) {\r\n            this.setGridNewSizeWhenFit();\r\n        }\r\n\r\n        this.initState();\r\n        if (this.el && this.farrisInstances) {\r\n            this.farrisInstances.add(this.el.nativeElement, this);\r\n        }\r\n        if (!this.data || !this.data.length) {\r\n            this.fetchData(1, this.pageSize).subscribe(res => {\r\n                if (!res) {\r\n                    return;\r\n                }\r\n                this.total = res.total;\r\n\r\n                if (res.footer) {\r\n                    this.footerData = res.footer;\r\n                }\r\n\r\n                this.loadData(res.items);\r\n            });\r\n        }\r\n\r\n        this.zone.runOutsideAngular(() => {\r\n            this.render2.addClass(this.dgContainer.nativeElement, this._custom_datagrid_cls);\r\n            this.ro = new ResizeObserver((e) => {\r\n                const target = e[0].target as any;\r\n                if (target.style.display === 'none') {\r\n                    return;\r\n                }\r\n\r\n                const _w = e[0].contentRect.width;\r\n                if (!_w) {\r\n                    return;\r\n                }\r\n                const _h = e[0].contentRect.height;\r\n                const _floowW = Math.floor(_w);\r\n                const _floorH = Math.floor(_h);\r\n                const _roundW = Math.round(_w);\r\n                const _roundH = Math.round(_h);\r\n                const _ceilW = Math.ceil(_w);\r\n                const _ceilH = Math.ceil(_h);\r\n\r\n                if ((this.width === _floowW || this.width === _roundW || this.width === _ceilW) && (this.height === _floorH || this.height === _roundH || this.height === _ceilH)) {\r\n                    this.dgs.restoreScrollbarPosition();\r\n                    return;\r\n                }\r\n\r\n                if (this.resizeTimer) {\r\n                    clearTimeout(this.resizeTimer);\r\n                }\r\n                this.resizeTimer = setTimeout(() => {\r\n                    this.calculateGridSize(this.fit);\r\n                }, 100);\r\n            });\r\n\r\n            this.ro.observe(this.el.nativeElement.parentElement);\r\n\r\n\r\n            document.body.removeEventListener('mousedown', this.documentBodyMouseDown, true);\r\n            document.body.addEventListener('mousedown', this.documentBodyMouseDown = (e) => {\r\n                if (!this.isEditing()) {\r\n                    return;\r\n                }\r\n                const target = e.target as any;\r\n                if (target.closest('td.f-datagrid-cell') ||\r\n                    target.closest('.date-overlay-container') ||\r\n                    target.closest('.time-picker-overlay') ||\r\n                    target.closest('.language-textbox-panel') ||\r\n                    target.closest('.farris-notify') ||\r\n                    target.closest('.comboPanel')) {\r\n                    return;\r\n                }\r\n                this.onDocumentMouseDown(e);\r\n            }, true);\r\n\r\n        });\r\n\r\n        if (this.showFooter) {\r\n            if (this.footerTemplate) {\r\n                const footerDom = this.el.nativeElement.querySelector('.f-datagrid-footer');\r\n                if (footerDom) {\r\n                    this.footerHeight = this.el.nativeElement.querySelector('.f-datagrid-footer').offsetHeight;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.fit) {\r\n            if (this.el.nativeElement.parentElement) {\r\n                this.el.nativeElement.parentElement.style.position = 'relative';\r\n            }\r\n            this.calculateGridSize(this.fit);\r\n        }\r\n\r\n\r\n        // æ£æ¥æ¯å¦å¯ç¨ä»¿windowsèµæºç®¡çå¨ä¸­çå¤éæ¨¡å¼\r\n        if (this.selectionMode && this.selectionMode === 'default' && this.multiSelect) {\r\n            this.sms.enableWindowsSelectionMode();\r\n        }\r\n\r\n        this.setCellStyle();\r\n    }\r\n\r\n    ngAfterContentInit() {\r\n        if (this.dgColumns && this.dgColumns.length) {\r\n            this.columns = this.dgColumns.map(dgc => {\r\n                return { ...dgc };\r\n            });\r\n        }\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.data && !changes.data.isFirstChange()) {\r\n            this.dfs.loadData(changes.data.currentValue);\r\n            this.dgs.dataSourceChanged();\r\n        }\r\n\r\n        if (changes.showAllCheckbox !== undefined && !changes.showAllCheckbox.isFirstChange()) {\r\n            if (changes.showAllCheckbox.currentValue != changes.showAllCheckbox.previousValue) {\r\n                this.columnsChanged(false);\r\n            }\r\n        }\r\n\r\n        if (changes.showCheckbox !== undefined && !changes.showCheckbox.isFirstChange()) {\r\n            this.dfs.showCheckbox(changes.showCheckbox.currentValue);\r\n        }\r\n\r\n        if (changes.showLineNumber !== undefined && !changes.showLineNumber.isFirstChange()) {\r\n            this.dfs.showLineNumber(changes.showLineNumber.currentValue);\r\n        }\r\n\r\n        if (changes.multiSelect !== undefined && !changes.multiSelect.isFirstChange()) {\r\n            this.dfs.setMultiSelect(changes.multiSelect.currentValue);\r\n        }\r\n\r\n        if (changes.checkOnSelect !== undefined && !changes.checkOnSelect.isFirstChange()) {\r\n            this.dfs.setCheckOnSelect(changes.checkOnSelect.currentValue);\r\n        }\r\n\r\n        if (changes.selectOnCheck !== undefined && !changes.selectOnCheck.isFirstChange()) {\r\n            this.dfs.setSelectOnCheck(changes.selectOnCheck.currentValue);\r\n        }\r\n\r\n        if (changes.onlySelectSelf !== undefined && !changes.onlySelectSelf.isFirstChange()) {\r\n            this.dfs.updateProperty('onlySelectSelf', changes.onlySelectSelf.currentValue);\r\n        }\r\n\r\n        if (changes.keepSelect !== undefined && !changes.keepSelect.isFirstChange()) {\r\n            this.dfs.updateProperty('keepSelect', changes.keepSelect.currentValue);\r\n        }\r\n\r\n        if (changes.headerWrap !== undefined && !changes.headerWrap.isFirstChange()) {\r\n            setTimeout(() => {\r\n                this.setHeaderHeight();\r\n                this.cd.detectChanges();\r\n                this.dfs.columnResizeEnd();\r\n            });\r\n        }\r\n\r\n        if (changes.nowrap !== undefined && !changes.nowrap.isFirstChange()) {\r\n            this.checkNowrap();\r\n            this.setRowHeight(false);\r\n            this.dgs.cellContentWrapChanged.emit();\r\n            this.dfs.updateProperty('nowrap', changes.nowrap.currentValue);\r\n        }\r\n\r\n        if (changes.multiSort !== undefined && !changes.multiSort.isFirstChange()) {\r\n            this.dfs.updateProperty('multiSort', changes.multiSort.currentValue);\r\n        }\r\n\r\n        if (changes.editable !== undefined && !changes.editable.isFirstChange()) {\r\n            this.dfs.updateProperty('editable', changes.editable.currentValue);\r\n            if (!changes.editable.currentValue) {\r\n                this.endCellEdit();\r\n            }\r\n            this.isSingleClick = null;\r\n\r\n            // if (this.editable) {\r\n            //     this.keepSelect = false;\r\n            // } else {\r\n            //     this.keepSelect = this.dfs._state.keepSelect;\r\n            // }\r\n            this.cd.detectChanges();\r\n        }\r\n\r\n        if (changes.showHeader !== undefined && !changes.showHeader.isFirstChange()) {\r\n            this.dfs.updateProperty('showHeader', changes.showHeader.currentValue);\r\n            this.headerHeightChange();\r\n            this.cd.detectChanges();\r\n        }\r\n\r\n        if (changes.showFilterBar !== undefined && !changes.showFilterBar.isFirstChange()) {\r\n            this.dfs.updateProperty('showFilterBar', changes.showFilterBar.currentValue);\r\n            this.dgs.showGridHeader.emit(this.realHeaderHeight);\r\n            // this.dgs.smartFilterBarExpand.emit();\r\n            let fh = 0;\r\n            if (this.conditions && this.conditions.length) {\r\n                fh = 32;\r\n            }\r\n            this.onFilterBarResize(fh);\r\n        }\r\n\r\n\r\n        if (changes.showFooter !== undefined && !changes.showFooter.isFirstChange()) {\r\n            this.dfs.updateProperty('showFooter', changes.showFooter.currentValue);\r\n            // this.cd.detectChanges();\r\n            this.calculateGridSize(this.fit);\r\n        }\r\n\r\n        if (changes.pagerOnServer !== undefined && !changes.pagerOnServer.isFirstChange()) {\r\n            this.dfs.updateProperty('pagerOnServer', changes.pagerOnServer.currentValue);\r\n            this.pagerOpts = Object.assign(this.pagerOpts, {\r\n                remote: this.pagerOnServer\r\n            });\r\n        }\r\n\r\n        if (changes.pageIndex !== undefined && !changes.pageIndex.isFirstChange()) {\r\n            this.dfs.updateProperty('pageIndex', changes.pageIndex.currentValue);\r\n            this.pagerOpts = Object.assign(this.pagerOpts, {\r\n                currentPage: this.pageIndex\r\n            });\r\n        }\r\n\r\n        if (changes.pageSize !== undefined && !changes.pageSize.isFirstChange()) {\r\n            this.dfs.updateProperty('pageSize', changes.pageSize.currentValue);\r\n            this.pagerOpts = Object.assign(this.pagerOpts, {\r\n                itemsPerPage: this.pageSize\r\n            });\r\n        }\r\n\r\n        if (changes.pageList !== undefined && !changes.pageList.isFirstChange()) {\r\n            this.dfs.updateProperty('pageList', changes.pageList.currentValue);\r\n            this.pagerOpts = Object.assign(this.pagerOpts, {\r\n                pageList: this.pageList\r\n            });\r\n        }\r\n\r\n        if (changes.columns !== undefined && !changes.columns.isFirstChange()) {\r\n            this.columnsChanged();\r\n        }\r\n\r\n        if (changes.sizeType !== undefined && !changes.sizeType.isFirstChange()) {\r\n            this._sizeType = changes.sizeType.currentValue;\r\n            this.setRowHeight(true);\r\n            this.dfs.updateProperty('rowHeight', this.rowHeight);\r\n            this.setFooterHeight();\r\n            this.refresh();\r\n            this.dgs.onRowHeightChange(this.rowHeight);\r\n        }\r\n\r\n        if (changes.rowHeight && !changes.rowHeight.isFirstChange()) {\r\n            this.setRowHeight(false);\r\n        }\r\n\r\n        if (changes.selectValue && !changes.selectValue.isFirstChange()) {\r\n            this.selectRow(this.selectValue, false);\r\n        }\r\n\r\n        if (changes.checkValues && !changes.checkValues.isFirstChange()) {\r\n            const checkIds = this.dfs.differenceBy(changes.checkValues.currentValue || [], changes.checkValues.previousValue || [], (v) => v);\r\n            if (checkIds && checkIds.length) {\r\n                this.checkRows(checkIds, false);\r\n            }\r\n\r\n            const uncheckIds = this.dfs.differenceBy(changes.checkValues.previousValue || [], changes.checkValues.currentValue || [], (v) => v);\r\n            if (uncheckIds && uncheckIds.length) {\r\n                this.unCheckRows(uncheckIds, false);\r\n            }\r\n\r\n            this.zone.runOutsideAngular(() => {\r\n                setTimeout(() => {\r\n                    this.checkValues = this.checkeds.map(r => r.id);\r\n                    this.checkValuesChange.emit(this.checkValues);\r\n                    this.checkedChange.emit(this.checkeds);\r\n\r\n                    this.updateAllCheckboxStatus();\r\n                }, 10);\r\n            });\r\n        }\r\n\r\n        if (changes.showGroupColumn && !changes.showGroupColumn.isFirstChange()) {\r\n            this.toggleVisibleColumn(this.groupField.split(','), changes.showGroupColumn.currentValue);\r\n            this.columnsChanged();\r\n        }\r\n\r\n        if (changes.autoFitColumns && !changes.autoFitColumns.isFirstChange()) {\r\n            this.dfs.updateProperty('autoFitColumns', changes.autoFitColumns.currentValue);\r\n        }\r\n\r\n        // if (changes.fitColumns && !changes.fitColumns.isFirstChange()) {\r\n        //     this.fitColumns = changes.fitColumns.currentValue;\r\n        // }\r\n\r\n        if (changes.groupRows && !changes.groupRows.isFirstChange()) {\r\n            this.dfs.updateProperty('groupRows', changes.groupRows.currentValue);\r\n            this.refresh();\r\n        }\r\n\r\n        if (changes.mergeCell && !changes.mergeCell.isFirstChange()) {\r\n            this.refresh();\r\n        }\r\n\r\n        if (changes.mergeFields && !changes.mergeFields.isFirstChange()) {\r\n            this.refresh();\r\n        }\r\n\r\n        if (changes.enableFilterRow && !changes.enableFilterRow.isFirstChange()) {\r\n            this.dfs.updateProperty('enableFilterRow', changes.enableFilterRow.currentValue);\r\n            if (this.showHeader) {\r\n                this.setHeaderHeight();\r\n                this.filterBarHeight = 32;\r\n                this.dgs.toggleFilterRow.emit(this.enableFilterRow);\r\n                this.dgs.showGridHeader.emit(this.realHeaderHeight);\r\n                this.cd.detectChanges();\r\n            }\r\n        }\r\n\r\n        if (changes.enableSmartFilter && !changes.enableSmartFilter.isFirstChange()) {\r\n            this.dfs.updateProperty('enableSmartFilter', changes.enableSmartFilter.currentValue);\r\n        }\r\n\r\n        if (changes.enableDragColumn && !changes.enableDragColumn.isFirstChange()) {\r\n            this.checkDragColumns();\r\n        }\r\n\r\n        if (changes.showRowGroupPanel && !changes.showRowGroupPanel.isFirstChange()) {\r\n            this.dgs.smartFilterBarExpand.emit();\r\n            this.dgs.showGridHeader.emit(this.realHeaderHeight);\r\n        }\r\n\r\n        if (changes.selectionMode && !changes.selectionMode.isFirstChange()) {\r\n            this.sms.toggleMode();\r\n        }\r\n    }\r\n\r\n    private checkFilterStyle() {\r\n        // è¿æ»¤è¡ä¸æºè½è¿æ»¤ åæ¶å¯ç¨æ¶ï¼å°è¿æ»¤è¡ç¦ç¨\r\n        if (this.enableFilterRow && this.enableSmartFilter) {\r\n            this.enableFilterRow = false;\r\n        }\r\n    }\r\n\r\n    private _checkSize() {\r\n        const themesKey = localStorage.getItem('gsp_rtf_themSKey');\r\n        let st: any = 'sm';\r\n        switch (themesKey) {\r\n            case 'default':\r\n                st = 'sm';\r\n                break;\r\n            case 'loose':\r\n                st = 'md';\r\n                break;\r\n        }\r\n\r\n        this.sizeType = st;\r\n    }\r\n\r\n    private checkDragColumns() {\r\n        if (this.isMultiHeader()) {\r\n            this.enableDragColumn = false;\r\n            // this.cd.detectChanges();\r\n        }\r\n    }\r\n\r\n    private checkOptions() {\r\n\r\n        this.gridSize = { width: this.width + 'px', height: this.height + 'px' };\r\n\r\n        if (!this.id) {\r\n            this.id = 'FarrisDataGrid' + Utils.uuid().replace(/-/g, '').substr(0, 10);\r\n            if (this.useControlPanel) {\r\n                this.useControlPanel = false;\r\n                this.writeConsole('å¯ç¨åéç½®å±æ§ï¼æªè®¾ç½®IDï¼æ­¤åè½å°ç¦ç¨ã');\r\n            }\r\n            this._custom_datagrid_cls = this.id;\r\n        } else {\r\n            this.styleSheetId = this.id + '_' + Utils.uuid().replace(/-/g, '').substr(0, 10);\r\n            this._custom_datagrid_cls = this.styleSheetId;\r\n        }\r\n        if (this.settingService && this.useControlPanel) {\r\n            this.settingService.registerGridInstance(this);\r\n        }\r\n\r\n        this.dgs.createStyleElement(this.styleSheetId);\r\n\r\n        if (!this.idField) {\r\n            throw new Error('The Datagrid\\'s idField can\\'t be Null. ');\r\n        }\r\n        this.checkNowrap();\r\n        this.checkSortInfo();\r\n        this.checkMergeCell();\r\n        this.setCheckboxBehavior();\r\n        this.initPaginationOptions();\r\n        if (!this.columns) {\r\n            this.columns = this.fields;\r\n        }\r\n\r\n        this.checkGroupHeaderColumns();\r\n\r\n        // TFS: 356956\r\n        this.checkGroupRowSetting();\r\n        this.checkColumnsType();\r\n\r\n        this.checkDragColumns();\r\n\r\n        const _defaultSetting = () => {\r\n            this._flatColumns();\r\n            // this.setHeaderHeight();\r\n            this.setRowHeight();\r\n        };\r\n\r\n\r\n        this.dfs.setinitialOptions({\r\n            columns: this.columns,\r\n            groupField: this.groupField,\r\n            sortName: this.sortName,\r\n            sortOrder: this.sortOrder\r\n        });\r\n\r\n        // å è½½ç¨æ·ä¸ªæ§åè®¾ç½® --ã åæ¾ç¤ºä¸åæåº\r\n        if (this.settingService && this.useControlPanel) {\r\n\r\n            const settings$ = this.settingService.getSettings(this.id);\r\n            if (!settings$) {\r\n                _defaultSetting();\r\n                return;\r\n            }\r\n            settings$.subscribe((sets) => {\r\n                if (sets) {\r\n                    this.userProfileSetting(sets);\r\n                    this.setRowHeight(false);\r\n                }\r\n\r\n                if (this.data && this.data.length) {\r\n                    this.dfs.updateProperty('data', this.data);\r\n                }\r\n\r\n                this.columnsChanged(this.groupRows && (this.data && !!this.data.length));\r\n            }, (err) => {\r\n                _defaultSetting();\r\n                this.writeConsole(err, 'error');\r\n            });\r\n        } else {\r\n            _defaultSetting();\r\n        }\r\n    }\r\n\r\n\r\n    refreshSelectedData() {\r\n        if (this.selectedRow && this.selectedRow.id) {\r\n            if (this.data && this.data.length) {\r\n                const rd = this.data.find(d => d[this.idField] === this.selectedRow.id);\r\n                this.selectedRow.data = rd;\r\n            } else {\r\n                this.selectedRow = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.unsubscribes();\r\n\r\n        if (this.ro) {\r\n            if (this.el.nativeElement.parentElement) {\r\n                this.ro.unobserve(this.el.nativeElement.parentElement);\r\n            }\r\n            this.ro.disconnect();\r\n        }\r\n\r\n        if (this.documentRowKeydownHandler) {\r\n            this.documentRowKeydownHandler();\r\n        }\r\n\r\n        this.currentCell = null;\r\n        this.clientFilterService = null;\r\n\r\n        this.cleanDom();\r\n\r\n        // ç§»é¤å¨æçstyle\r\n        this.dgs.removeStyleSheet();\r\n\r\n        if (this.settingService && this.settingService.destroy) {\r\n            this.settingService.destroy(this.id);\r\n        }\r\n\r\n        if (this.sms) {\r\n            this.sms.destroy();\r\n            this.sms = null;\r\n        }\r\n\r\n        document.body.removeEventListener('mousedown', this.documentBodyMouseDown, true);\r\n\r\n        if (this.farrisInstances) {\r\n            this.farrisInstances.destroy(this.el.nativeElement);\r\n        }\r\n        this._selectedRow = null;\r\n        this.editors = {};\r\n        DatagridColumnsHelper.gridInstance = null;\r\n        this.unbindMoveSelectRowEvent();\r\n        this.unbindDocumentEditListener();\r\n    }\r\n\r\n\r\n    @HostListener('click', ['$event'])\r\n    onClick(event: MouseEvent): void {\r\n        if (this.showSelectedList && this.dgPager) {\r\n            this.dgPager.closeSelectedList();\r\n        }\r\n\r\n        if (this.pending) {\r\n            return;\r\n        }\r\n\r\n        const target = event.target as any;\r\n        if (target.nodeName === 'TEXTAREA' || target.nodeName === 'INPUT') {\r\n            event.stopPropagation();\r\n            return;\r\n        }\r\n        if (this.currentCell && this.currentCell.editor && this.currentCell.editor._editorClickEvent) {\r\n            event.stopPropagation();\r\n            return;\r\n        }\r\n\r\n        /*\r\n        this.endCellEdit(event);\r\n        this.dfs.cancelSelectCell();\r\n        */\r\n        if (this.stopPropagation) {\r\n            event.stopPropagation();\r\n            return;\r\n        }\r\n    }\r\n\r\n    private initPaginationOptions() {\r\n        this.pagerOpts = {\r\n            id: this.id ? this.id + '-pager_' + Utils.uuid() : 'farris-datagrid-pager_' + Utils.uuid(),\r\n            itemsPerPage: this.pagination ? this.pageSize : this.total,\r\n            currentPage: this.pageIndex,\r\n            totalItems: this.total,\r\n            pageList: this.pageList,\r\n            remote: this.pagerOnServer\r\n        };\r\n    }\r\n\r\n    private updatePagerOptions() {\r\n        this.pagerOpts = Object.assign(this.pagerOpts, {\r\n            itemsPerPage: this.pageSize,\r\n            currentPage: this.pageIndex,\r\n            totalItems: this.total\r\n        });\r\n    }\r\n\r\n    private setPagerTotal() {\r\n        const _total = this.data.length;\r\n        if (this.pagination && this.total === 0 && this.virtualized) {\r\n            this.pagerOpts.totalItems = _total;\r\n        } else {\r\n            if (!this.pagination) {\r\n                this.pagerOpts.itemsPerPage = _total;\r\n            }\r\n        }\r\n    }\r\n\r\n    private setFooterHeight(rows?: []) {\r\n        if (this.showFooter && !this.footerTemplate) {\r\n            rows = rows || this._footerData['value'];\r\n\r\n            if (!rows || !rows.length) {\r\n                return;\r\n            }\r\n\r\n            if (this.nowrap) {\r\n                this.footerHeight = rows.length * this.footerHeight;\r\n            } else {\r\n                if (this['_footer_height_timer_']) {\r\n                    clearTimeout(this['_footer_height_timer_']);\r\n                }\r\n\r\n                this['_footer_height_timer_'] = setTimeout(() => {\r\n                    const topFooter = document.querySelector('.f-datagrid-footer-top');\r\n                    const bottomFooter = document.querySelector('.f-datagrid-footer-bottom');\r\n\r\n                    if (topFooter) {\r\n                        this.render2.setStyle(topFooter, 'height', '29px');\r\n                        this.footerHeight = Math.max(...Array.from(topFooter.querySelectorAll('table')).map(n => n.offsetHeight));\r\n                        this.render2.setStyle(topFooter, 'height', this.footerHeight + 'px');\r\n                    } else {\r\n                        if (bottomFooter) {\r\n                            this.render2.setStyle(bottomFooter, 'height', '29px');\r\n                            this.footerHeight = Math.max(...Array.from(bottomFooter.querySelectorAll('table')).map(n => n.offsetHeight));\r\n                            this.render2.setStyle(bottomFooter, 'height', this.footerHeight + 'px');\r\n                        }\r\n                    }\r\n                   \r\n                    this.dfs.columnResizeEnd();\r\n                }, 100);\r\n            }\r\n        }\r\n    }\r\n\r\n    customStyleKey() {\r\n        return `.${this._custom_datagrid_cls}`;\r\n    }\r\n\r\n    private setRowHeight(useSizeType = false) {\r\n        const _rowHeight = SIZE_TYPE[this._sizeType].row;\r\n        const _rh = 29;\r\n        if (useSizeType) {\r\n            this.rowHeight = _rowHeight;\r\n        } else {\r\n            this.rowHeight = _rowHeight > this.rowHeight ? _rowHeight : this.rowHeight;\r\n        }\r\n\r\n        this.filterRowHeight = SIZE_TYPE[this._sizeType].pager;\r\n\r\n        const key1 = `${this.customStyleKey()}.f-datagrid-body-row, ${this.customStyleKey()} .f-datagrid-cell`;\r\n        const key2 = `${this.customStyleKey()} .f-datagrid-cell-content`;\r\n\r\n        this.dgs.removeCssRule(key1);\r\n        this.dgs.removeCssRule(key2);\r\n\r\n        if (this.rowHeight !== _rh && this.nowrap) {\r\n            const rowHeightCSS = [\r\n                `${key1} { height: ${this.rowHeight}px }`,\r\n                `${key2} { height: ${this.rowHeight}px; line-height: ${this.rowHeight}px }`\r\n            ];\r\n\r\n            this.dgs.appendCssRules(rowHeightCSS);\r\n        }\r\n    }\r\n\r\n    initSelectOrChecked() {\r\n        const _data = this.dfs.getCurrentPageData();\r\n        if (!this.enableMorePageSelect && this.multiSelect) {\r\n            // this.clearAll();\r\n            if (this.checkeds && this.checkeds.length) {\r\n                this.checkeds.forEach(r => {\r\n                    if (!_data.find(n => n[this.idField] == r.id)) {\r\n                        this.unCheckRow(r.id, false);\r\n                    }\r\n                });\r\n            } else {\r\n                this.clearCheckeds();\r\n            }\r\n        }\r\n\r\n        if (this.selectValue) {\r\n            if (_data.find(n => n[this.idField] == this.selectValue)) {\r\n                this.selectRow(this.selectValue, false);\r\n                this.refreshSelectedData();\r\n            }\r\n        }\r\n\r\n        if (this.multiSelect) {\r\n            if (this.checkValues && this.checkValues.length) {\r\n                const chkids = this.checkeds.map(r => r.id);\r\n                const diffIds = this.dfs.difference(chkids, this.checkValues);\r\n\r\n                if (diffIds.length) {\r\n                    this.checkRows(diffIds, false);\r\n                } else {\r\n                    this.checkValues = [];\r\n                }\r\n            } else {\r\n                this.checkValues = [];\r\n            }\r\n\r\n            this.checkValues = this.checkeds.map(r => r.id);\r\n\r\n            if (!this._isResized || this.virtualized) {\r\n                this.checkValuesChange.emit(this.checkValues);\r\n                this.checkedChange.emit(this.checkeds);\r\n            }\r\n            this.updateAllCheckboxStatus(_data);\r\n        }\r\n    }\r\n\r\n    private updateAllCheckboxStatus(_data?: any) {\r\n        if (!_data) {\r\n            _data = this.dfs.getCurrentPageData();\r\n        }\r\n\r\n        let checkAllStatus = 0;\r\n        if (this.showAllCheckbox) {\r\n            const allDataIDs = _data.map(r => r[this.idField]);\r\n            const newCheckValues = allDataIDs.filter(n => this.checkValues.includes(n));\r\n\r\n            if (newCheckValues && newCheckValues.length) {\r\n                const isSame = !this.dfs.difference(allDataIDs, this.checkValues).length;\r\n                if (!this.checkValues || !this.checkValues.length) {\r\n                    // æ²¡æéä¸­çæ°æ®\r\n                    checkAllStatus = 0;\r\n\r\n                } else if (isSame) { // this.checkValues.length === this.data.length ||\r\n                    // å¨é¨éä¸­\r\n                    checkAllStatus = 1;\r\n                } else if (!isSame) { // this.checkValues.length !== this.data.length &&\r\n                    // æéä¸­çæ°æ®ï¼ä½ä¸æ¯å¨é¨éä¸­\r\n                    checkAllStatus = 2;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.dgs.changeCheckAllStatus.emit(checkAllStatus);\r\n    }\r\n\r\n    // å½åéå¹¶æ¾ç¤ºå¤éæ¡æ¶ï¼é»è®¤å° checkOnSelect, selectOnCheck è®¾ç½®ä¸º true;\r\n    private setCheckboxBehavior() {\r\n        if (!this.multiSelect && this.showCheckbox) {\r\n            // TFS: 380899\r\n            // this.checkOnSelect = true;\r\n            // this.selectOnCheck = true;\r\n        }\r\n    }\r\n\r\n    private _flatColumns() {\r\n        this.flatColumns = flatten<DataColumn>(this.columns).filter((col: DataColumn) => !col.colspan && this.columnIsVisible(col));\r\n        if (this.isMultiHeader() && this.fast) {\r\n            this.flatColumns = this.dfs.getGroupColumns(this.columns[0]);\r\n        }\r\n    }\r\n\r\n    columnIsVisible(col: DataColumn) {\r\n        return DatagridColumnsHelper.columnIsVisible(col, this);\r\n    }\r\n\r\n    // æ·»å åè®¾ç½®\r\n    private addControlCol() {\r\n        if (this.useControlPanel) {\r\n            const controlCol = this.columns[0].find(n => n.field === this.ControlPanelFeild);\r\n            if (!controlCol) {\r\n                const cp = { field: this.ControlPanelFeild, width: 24, rowspan: this.columns.length, fixed: 'right', visible: true };\r\n\r\n                // 2021-05-24 å¯ç¨è¿æ»¤è¡ååºé\r\n                // if (this.enableFilterRow) {\r\n                //     cp.rowspan += 1;\r\n                // }\r\n\r\n                this.columns[0].push(cp);\r\n            } else {\r\n                controlCol.visible = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    private checkGroupHeaderColumns() {\r\n        if (this.isMultiHeader()) {\r\n            const allCols = flatten<DataColumn>(this.columns);\r\n            DatagridColumnsHelper.checkGroupHeaderColumnVisible(allCols);\r\n        }\r\n    }\r\n\r\n    // æ£æ¥åéå: [] -> [[]]\r\n\r\n    private correctColumns(values) {\r\n        if (values && values.length && !Array.isArray(values[0])) {\r\n            return [values];\r\n        } else {\r\n            return values || [];\r\n        }\r\n    }\r\n\r\n    private checkColumnsType() {\r\n        if (this.columns && this.columns.length) {\r\n            // if (!Array.isArray(this.columns[0])) {\r\n            //     this.columns = [ this.columns ];\r\n            // }\r\n\r\n            this.addControlCol();\r\n\r\n            this.columns.forEach((cols, columnsIndex) => {\r\n                cols.forEach((col: DataColumn, index) => {\r\n                    if (!col.field) {\r\n                        col.field = `farris-datagrid-column_${columnsIndex}_${index}`;\r\n                    }\r\n\r\n                    if (!col.valign) {\r\n                        col.valign = 'middle';\r\n                    }\r\n\r\n                    if (col.width === undefined || col.width === null) {\r\n                        col.width = 100;\r\n                    } else {\r\n                        if (typeof col.width === 'string') {\r\n                            col.width = parseInt(col.width, 10);\r\n                        }\r\n                    }\r\n\r\n                    // è®°å½åå§å®½åº¦\r\n                    if (!col.originalWidth) {\r\n                        col.originalWidth = col.width;\r\n                    }\r\n\r\n                    if (col.formatter && typeof col.formatter !== 'function' && Object.keys(col.formatter).length === 0) {\r\n                        col.formatter = null;\r\n                    }\r\n\r\n                    if (!this.showGroupColumn && this.groupRows) {\r\n                        this.toggleVisibleColumn(this.groupField.split(','), false);\r\n                    }\r\n                    // è¿æ»¤è¡æ£æ¥\r\n                    if (col.filter) {\r\n                        if (typeof col.filter === 'boolean') {\r\n                            if (col.field) {\r\n                                col.filter = this.clientFilterService.createColumnFilterOptions(col);\r\n                            } else {\r\n                                col.filter = false;\r\n                            }\r\n                        } else {\r\n                            if (!col.filter.options || !Object.keys(col.filter.options).length) {\r\n                                switch (col.filter.type) {\r\n                                    case ColumnFilterType.enum:\r\n                                        col.filter.options = col.formatter['options'];\r\n                                        break;\r\n                                    case ColumnFilterType.date:\r\n                                        col.filter.options = { dateFormat: 'yyyy-MM-dd', returnFormat: 'yyyy-MM-dd' };\r\n                                        break;\r\n                                    case ColumnFilterType.datetime:\r\n                                        col.filter.options = { dateFormat: 'yyyy-MM-dd HH:mm:ss', returnFormat: 'yyyy-MM-dd HH:mm:ss' };\r\n                                        break;\r\n                                }\r\n                            }\r\n\r\n                        }\r\n                    }\r\n\r\n                    // å¼å®¹ hidden 2021-05-31\r\n                    if (col['hidden'] !== undefined && col.visible === undefined) {\r\n                        if (typeof col['hidden'] === 'boolean') {\r\n                            col.visible = !col['hidden'];\r\n                        } else {\r\n                            if (typeof col['hidden'] === 'function') {\r\n                                col.visible = () => {\r\n                                    const r = col['hidden'].bind(this);\r\n                                    return !r;\r\n                                };\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    private checkGroupRowSetting() {\r\n        // å¦æå¯ç¨åç»è¡ï¼ä½æªè®¾ç½®åç»å­æ®µæ¶ï¼å°å³é­åç»è¡åè½\r\n        // if (this.groupRows) {\r\n        //     if (!this.groupField) {\r\n        //         this.groupRows = false;\r\n        //     }\r\n        // }\r\n    }\r\n\r\n    private checkMergeCell() {\r\n        if (this.mergeCell) {\r\n            if (!this.mergeFields || !this.mergeFields.length) {\r\n                this.mergeCell = false;\r\n            } else {\r\n                this.virtualized = false;\r\n                this.virtualizedAsyncLoad = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    private checkSortInfo() {\r\n        if (this.sortName) {\r\n            if (!this.sortOrder) {\r\n                this.sortOrder = this.sortName.split(',').map(() => 'asc').join(',');\r\n            }\r\n        }\r\n    }\r\n\r\n    private checkNowrap() {\r\n        // å¯ç¨æè¡åï¼èæå è½½ç¹æ§å¤±æ\r\n        if (!this.nowrap) {\r\n            this.virtualized = false;\r\n        }\r\n    }\r\n\r\n    setHeaderHeight() {\r\n        this.realHeaderHeight = 0;\r\n        if (this.showHeader) {\r\n            // if (!this.headerWrap) {\r\n            //     this.realHeaderHeight = this.columns.length * this.headerHeight;\r\n\r\n            //     if (this.enableFilterRow) {\r\n            //         this.realHeaderHeight += this.filterRowHeight;\r\n            //     }\r\n            // } else {\r\n            //     const gridHeaderEl = this.el.nativeElement.querySelector('.f-datagrid-header');\r\n            //     if (gridHeaderEl) {\r\n            //         const trs = gridHeaderEl.querySelectorAll('table tr:not(.f-datagrid-filter-row)');\r\n            //         trs.forEach(n => {\r\n            //             n.style.height = 'auto';\r\n            //             Array.from(n.children).forEach((a: any) => a.style.height = 'auto');\r\n            //         });\r\n\r\n            //         // const h = Math.max(...Array.from(trs).map((n: any) => n.clientHeight));\r\n            //         // this.realHeaderHeight = h;\r\n            //         const tableEl = gridHeaderEl.querySelector('table');\r\n            //         if(tableEl) {\r\n            //             this.realHeaderHeight = tableEl.offsetHeight;\r\n            //         }\r\n\r\n            //     }\r\n            // }\r\n\r\n            const gridHeaderEl = this.el.nativeElement.querySelector('.f-datagrid-header');\r\n            if (!this.headerWrap) {\r\n\r\n                const { header: hh, pager: ph} = SIZE_TYPE[this._sizeType];\r\n                this.headerHeight = hh;\r\n                this.realHeaderHeight = this.columns.length * this.headerHeight;\r\n\r\n                if (this.enableFilterRow) {\r\n                    // è§£å³å®½æ¾çä¸\r\n                    this.filterRowHeight = ph;\r\n                    this.realHeaderHeight += this.filterRowHeight;\r\n                }\r\n\r\n                if (gridHeaderEl) {\r\n                    gridHeaderEl.style.minHeight = this.realHeaderHeight + 'px';\r\n                }\r\n            } else {\r\n                if (gridHeaderEl) {\r\n                    this.render2.removeStyle(gridHeaderEl, 'minHeight');\r\n                    const trs = gridHeaderEl.querySelectorAll('table tr:not(.f-datagrid-filter-row)');\r\n                    trs.forEach(n => {\r\n                        n.style.height = 'auto';\r\n                        Array.from(n.children).forEach((a: any) => a.style.height = 'auto');\r\n                    });\r\n\r\n                    const tableEls = Array.from(gridHeaderEl.querySelectorAll('table'));\r\n                    if(tableEls) {\r\n                        const heights = tableEls.map((t: any) => t.offsetHeight);\r\n                        const maxHeight = Math.max(...heights);\r\n                        this.realHeaderHeight = maxHeight;\r\n                        gridHeaderEl.style.minHeight = this.realHeaderHeight + 'px';\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this.realHeaderHeight;\r\n    }\r\n\r\n    // åéååå\r\n    columnsChanged(reloadData = true, useColumnSettingWidth = null) {\r\n        const _useColumnSettingWidth = useColumnSettingWidth === null ? this.fitColumns : useColumnSettingWidth;\r\n\r\n        this.dfs.updateProperty('expandGroupRows', this.expandGroupRows);\r\n\r\n        this.checkColumnsType();\r\n\r\n        this._flatColumns();\r\n        this.headerHeightChange();\r\n        this.dfs.updateProperty('flatColumns', this.flatColumns);\r\n        this.dfs.updateColumns(this.columns, _useColumnSettingWidth, true);\r\n\r\n        // this.colGroup = this.dfs.getState().columnsGroup;\r\n        // å¨æååè®¡è¡\r\n        this.updateFooterData();\r\n\r\n        this.dgs.columnsChanged.emit({ scrollToLeft: reloadData });\r\n\r\n        if (reloadData) {\r\n\r\n            if (this['_COLUMNS_CHANAGED_TIMER_']) {\r\n                clearTimeout(this['_COLUMNS_CHANAGED_TIMER_']);\r\n            }\r\n\r\n            this['_COLUMNS_CHANAGED_TIMER_'] = setTimeout(() => {\r\n                this.refresh();\r\n            }, 60);\r\n        }\r\n\r\n        this.setCellStyle();\r\n    }\r\n\r\n    // åå¤´åå\r\n    private headerHeightChange() {\r\n        this.setHeaderHeight();\r\n        this.dgs.showGridHeader.emit(this.realHeaderHeight);\r\n    }\r\n\r\n    /** å¤æ­æ¯å¦å¨å¼¹åºççªå£ä¸­ï¼è¿åundefind è¯´ææ²¡æå¨å¼¹åºççªå£ï¼å¦åè§ä¸ºå½ååè¡¨å¨å¼¹åºçªå£ä½¿ç¨ */\r\n    inDialog() {\r\n        return this.el.nativeElement.closest('.modal-body');\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region Init\r\n    /** åå§ç¼è¾å¨ä¸éªè¯å¨ */\r\n    private initEditorAndValidator() {\r\n        const Editors = this.inject.get<any[]>(GRID_EDITORS, []);\r\n\r\n        if (Editors.length) {\r\n            Editors.forEach(ed => {\r\n                this.editors[ed.name] = ed.value;\r\n            });\r\n        }\r\n        const _validators = this.inject.get<any[]>(GRID_VALIDATORS, []);\r\n        if (_validators && _validators.length) {\r\n            // _validators.forEach(vr => {\r\n            //     this.validators[vr.name] = vr.value;\r\n            // });\r\n            this.validators = _validators;\r\n        }\r\n    }\r\n\r\n    setPagerHeight() {\r\n        if (!this.useHtmlTable) {\r\n            if (!this.pagination) {\r\n                this.pagerHeight = 0;\r\n            } else {\r\n                this.pagerHeight = this.dgPager && this.dgPager.outerHeight || 40;\r\n            }\r\n        }\r\n    }\r\n\r\n    private initState() {\r\n        this.data = this.data || [];\r\n\r\n        let sta = {};\r\n        Object.keys(this).forEach((k: string) => {\r\n            if (!IgnoreProperties.includes(k)) {\r\n                sta[k] = this[k];\r\n            }\r\n        });\r\n\r\n        this.dfs.initState({ ...sta, fitColumns: this.fitColumns, fit: this.fit, groupField: this._groupField });\r\n        sta = null;\r\n    }\r\n\r\n    private setFitColumns(fitColumns = true) {\r\n        if (this.columns) {\r\n            this.dfs.fitColumns(fitColumns);\r\n        }\r\n    }\r\n\r\n    private setGridNewSizeWhenFit() {\r\n        const parent = this.el.nativeElement.parentElement;\r\n        if (parent) {\r\n            const { width, height } = parent.getBoundingClientRect();\r\n\r\n            const padding = this.getElementPadding(parent);\r\n            const border = this.getElementBorderWidth(parent);\r\n\r\n            let m = 'floor'\r\n            if (this.maxHeight && this.autoHeight) {\r\n                m = 'ceil';\r\n            }\r\n\r\n\r\n            this.width = Math[m](Math.ceil(width) - border.left - border.right - padding.left - padding.right);\r\n            this.height = Math[m](Math.ceil(height) - border.top - border.bottom - padding.top - padding.bottom);\r\n\r\n            if (this.maxHeight && this.autoHeight) {\r\n                this.height += 1;\r\n            }\r\n\r\n            if (!this.height) {\r\n                this.height = this.dfs.getState().height || 300;\r\n            }\r\n\r\n            if (!this.width) {\r\n                this.width = this.dfs.getState().width || 800;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    calculateGridSize(fit = true) {\r\n        if (this.useHtmlTable) {\r\n            return;\r\n        }\r\n\r\n        const setNewSize = () => {\r\n            let h = this.height;\r\n            if (this.useBlankWhenDataIsEmpty && (!this.data || !this.data.length)) {\r\n                h = this.emptyDataHeight + this.realHeaderHeight;\r\n            }\r\n\r\n\r\n            if (this.gridSize.height === h + 'px' && this.gridSize.width === this.width + 'px') {\r\n                return;\r\n            }\r\n\r\n            this.gridSize = { width: this.width + 'px', height: h + 'px' };\r\n            this.dfs.resize({ width: this.width, height: h });\r\n        }\r\n\r\n        if (fit) {\r\n            this.setGridNewSizeWhenFit();\r\n            if (this.width && this.height) {\r\n                this._isResized = true;\r\n                setNewSize();\r\n                \r\n                this._isResized = false;\r\n                if (!this.cd['destroyed']) {\r\n                    this.cd.detectChanges();\r\n                }\r\n            }\r\n        } else {\r\n            setNewSize();\r\n        }\r\n\r\n    }\r\n\r\n    private initBeforeEvents() {\r\n        if (!this.beforeSelect) {\r\n            this.beforeSelect = () => of(true);\r\n        }\r\n        if (!this.beforeUnselect) {\r\n            this.beforeUnselect = () => of(true);\r\n        }\r\n\r\n        if (!this.beforeCheck) {\r\n            this.beforeCheck = () => of(true);\r\n        }\r\n\r\n        if (!this.beforeUncheck) {\r\n            this.beforeUncheck = () => of(true);\r\n        }\r\n\r\n        if (!this.beforeSortColumn) {\r\n            this.beforeSortColumn = () => of(true);\r\n        }\r\n\r\n        if (!this.beforeEdit) {\r\n            this.beforeEdit = () => of(true);\r\n        }\r\n\r\n        if (!this.afterEdit) {\r\n            this.afterEdit = () => of(true);\r\n        }\r\n    }\r\n\r\n    trackByRows = (index: number, row: any) => {\r\n        if (row) {\r\n            return row[this.idField] || index;\r\n        }\r\n        return index;\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region å¿«æ·é®\r\n\r\n    private unbindMoveSelectRowEvent() {\r\n        if (this.documentRowKeydownHandler) {\r\n            this.documentRowKeydownHandler();\r\n            this.documentRowKeydownHandler = null;\r\n        }\r\n    }\r\n\r\n\r\n    private bindDocumentMoveSelectRowEvent() {\r\n        this.unbindMoveSelectRowEvent();\r\n        this.unbindDocumentEditListener();\r\n        this.documentRowKeydownHandler = this.render2.listen(document, 'keydown', (e: KeyboardEvent) => {\r\n            // e.preventDefault();\r\n            if (!this.isActived()) {\r\n                return;\r\n            }\r\n\r\n            // has loading\r\n            if (document.querySelectorAll('farris-loading').length) {\r\n                return;\r\n            }\r\n\r\n            if (e.target) {\r\n                const targetName = (e.target as any).nodeName;\r\n                if (this.ignoreTarget.indexOf(targetName) > -1) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if (e.keyCode === 40 || e.keyCode === 38) {\r\n                e.preventDefault();\r\n            }\r\n\r\n            switch (e.keyCode) {\r\n                case 40:\r\n                    this.selectNextRow();\r\n                    break;\r\n                case 38:\r\n                    this.selectPrevRow();\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n\r\n    private bindEditListenerInModal() {\r\n        // å¼¹çªä¸­äºä»¶å¤ç\r\n        if (Utils.hasDialogOpen()) {\r\n            const modalElement = this.inDialog();\r\n            if (modalElement) {\r\n                const _fmodal = modalElement.closest('.farris-modal');\r\n                if (_fmodal) {\r\n                    this.modalClickEvent = this.render2.listen(_fmodal, 'click', () => {\r\n                        this.endEditing();\r\n                        this.currentCell = null;\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    onDocumentMouseDown = (event) => {\r\n        const dgrid = event.target.closest('.f-datagrid');\r\n\r\n        if (this.pending) {\r\n            return false;\r\n        }\r\n\r\n        if (!dgrid) {\r\n            this.activeDataGrid(false);\r\n        } else {\r\n            if (dgrid.id === this.id) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (this.currentCell) {\r\n            if (Utils.hasDialogOpen()) {\r\n                const indlg = this.inDialog();\r\n                const currentTargetInDialog = event.target.closest('.modal-body');\r\n                if (indlg && currentTargetInDialog) {\r\n                    if (indlg != currentTargetInDialog) {\r\n                        return;\r\n                    }\r\n                } else {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if ( !this.currentCell.cellElement) {\r\n                return;\r\n            }\r\n\r\n            if (this.currentCell.isEditing) {\r\n\r\n                const zoneClick = event.target['__zone_symbol__clickfalse'];\r\n                const isBeBtn = event.target.closest('.bedesigner-toolbar');\r\n                const isOldBeBtn = event.target.className.indexOf('beEleGridButton') > -1;\r\n                const disableClickEvent = zoneClick && zoneClick.length && (event.target.closest('.f-section-in-mainsubcard') || isOldBeBtn || isBeBtn || event.target.closest('.datagrid-toolbars'));\r\n        \r\n                if (disableClickEvent && !dgrid) {\r\n                    event.target.style.pointerEvents = 'none';\r\n                    event.stopPropagation();\r\n                }\r\n\r\n                const _timer = disableClickEvent ? ((isBeBtn || isOldBeBtn)? 50: 200) : 0;\r\n                const stopEditingRowIndex = this.currentCell.rowIndex;\r\n                this.currentCell.cellElement.closeEdit().pipe(debounceTime(_timer)).subscribe(f => {\r\n                    if (this.currentCell && stopEditingRowIndex !== this.currentCell.rowIndex) {\r\n                        return;\r\n                    }\r\n                    if (f) {\r\n                        if (this.currentCell && this.currentCell.cellElement) {\r\n                            DomHandler.removeClass(this.currentCell.cellElement, CELL_SELECTED_CLS);\r\n                            DomHandler.removeClass(this.currentCell.cellElement, CELL_EDITING_CLS);\r\n                        }\r\n                        this.dfs.cancelSelectCell();\r\n                        this.unbindDocumentEditListener();\r\n                        this.currentCell = null;\r\n\r\n                        \r\n                        if (disableClickEvent) {\r\n                            zoneClick.forEach(n => {\r\n                                n.callback(event);\r\n                            });\r\n                            event.target.style.pointerEvents = 'auto';\r\n\r\n                            if (isBeBtn || isOldBeBtn) {\r\n                                this.app.tick();\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    private bindDocumentEditListener() {\r\n        this.unbindDocumentEditListener();\r\n /*\r\n        if (!this.documentCellClickHandler) {\r\n            this.bindEditListenerInModal();\r\n            this.documentCellClickHandler = (event) => {\r\n                if (this.pending) {\r\n                    return false;\r\n                }\r\n                if (this.currentCell) {\r\n                    if (Utils.hasDialogOpen()) {\r\n                        const indlg = this.inDialog();\r\n                        const currentTargetInDialog = event.target.closest('.modal-body');\r\n                        if (indlg && currentTargetInDialog) {\r\n                            if (indlg != currentTargetInDialog) {\r\n                                return;\r\n                            }\r\n                        } else {\r\n                            return;\r\n                        }\r\n                    }\r\n                    // DomHandler.removeClass(this.currentCell.cellElement, CELL_SELECTED_CLS);\r\n\r\n                    // if (this.currentCell.isEditing) {\r\n                    //     // this.dfs.endEditCell();\r\n                    //     this.currentCell.cellElement.closeEdit();\r\n                    // }\r\n                    // this.dfs.cancelSelectCell();\r\n                    // this.unbindDocumentEditListener();\r\n\r\n                    if (this.currentCell.isEditing) {\r\n                        // this.dfs.endEditCell();\r\n                        this.currentCell.cellElement.closeEdit().subscribe(f => {\r\n                            if (f) {\r\n                                DomHandler.removeClass(this.currentCell.cellElement, CELL_SELECTED_CLS);\r\n                                DomHandler.removeClass(this.currentCell.cellElement, CELL_EDITING_CLS);\r\n                                this.dfs.cancelSelectCell();\r\n                                this.unbindDocumentEditListener();\r\n                                this.currentCell = null;\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            };\r\n            this.docuemntCellClickEvents = this.render2.listen(document, 'click', this.documentCellClickHandler);\r\n        }\r\n*/\r\n        if (!this.documentCellKeydownHandler) {\r\n            this.documentCellKeydownHandler = (event) => {\r\n                if (!event.target.closest('.f-datagrid') && event.target.nodeName !== 'BODY') {\r\n                    return;\r\n                }\r\n\r\n                if (this.isActived()) {\r\n                    this.onKeyDownEvent(event);\r\n                }\r\n            };\r\n\r\n            this.documentCellKeydownEvents = this.render2.listen(document, 'keydown', this.documentCellKeydownHandler);\r\n        }\r\n    }\r\n\r\n    private unbindDocumentEditListener() {\r\n        if (this.documentCellClickHandler) {\r\n            this.docuemntCellClickEvents();\r\n            this.documentCellClickHandler = null;\r\n        }\r\n\r\n        if (this.documentCellKeydownHandler) {\r\n            this.documentCellKeydownEvents();\r\n            this.documentCellKeydownHandler = null;\r\n        }\r\n\r\n        if (this.modalClickEvent) {\r\n            this.modalClickEvent();\r\n            this.modalClickEvent = null;\r\n        }\r\n    }\r\n\r\n    private onKeyDownEvent(e: any) {\r\n        // if (e.ctrlKey || e.shiftKey || !this.editable) {\r\n        //     return;\r\n        // }\r\n\r\n        // if (!e.target.closest('.f-datagrid')) {\r\n        //     return;\r\n        // }\r\n\r\n        if (this.disabled) {\r\n            return;\r\n        }\r\n        const keyCode = e.keyCode;\r\n\r\n\r\n        if (this.currentCell && !this.currentCell.isEditing) {\r\n            if ([13, 40, 37, 38, 39, 9].indexOf(keyCode) > -1) {\r\n                e.preventDefault();\r\n            }\r\n            switch (keyCode) {\r\n                case 32: // ç©ºæ ¼\r\n                    if (this.currentCell && this.currentCell.column.onSpaceHandler) {\r\n                        e.stopPropagation();\r\n                        this.currentCell.column.onSpaceHandler({ grid: this, cell: this.currentCell, event: e });\r\n                    }\r\n                    break;\r\n                case 13: // Enter\r\n                    if (this.currentCell) {\r\n                        const fn = this.currentCell.cellElement['editCell'];\r\n                        if (fn) {\r\n                            fn.apply(this.currentCell.cellElement);\r\n                        } else {\r\n                            if (this.currentCell.column.onEnterHandler) {\r\n                                e.stopPropagation();\r\n                                this.currentCell.column.onEnterHandler({ grid: this, cell: this.currentCell, event: e });\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case 40: // â\r\n                    this.selectNextCell('down', e);\r\n                    break;\r\n                case 38: // â\r\n                    this.selectNextCell('up', e);\r\n                    break;\r\n                case 39: // â\r\n                    this.selectNextCell('right', e);\r\n                    break;\r\n                case 37: // â\r\n                    this.selectNextCell('left', e);\r\n                    break;\r\n                case 9: // Tab\r\n                    if (e.shiftKey) {\r\n                        this.selectNextCell('left', e);\r\n                    } else {\r\n                        this.selectNextCell('right', e);\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private unsubscribes() {\r\n        this.subscriptions.forEach(ss => {\r\n            if (ss) {\r\n                ss.unsubscribe();\r\n                ss = null;\r\n            }\r\n        });\r\n\r\n        this.subscriptions = [];\r\n\r\n        if (this.docuemntCellClickEvents) {\r\n            this.docuemntCellClickEvents();\r\n        }\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region Editing\r\n\r\n    isRowEditing() {\r\n        if (!this.selectedRow || this.selectedRow.index === -1) {\r\n            return false;\r\n        } else {\r\n            if (this.editMode === 'row') {\r\n                return this.selectedRow.editors && this.selectedRow.editors.length;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    isCellEditing() {\r\n        if (this.currentCell && this.editMode === 'cell') {\r\n            if (!this.currentCell.editor && !this.currentCell.column.editorTemplate) {\r\n                this.currentCell.isEditing = false;\r\n            }\r\n            return this.currentCell.isEditing;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isEditing() {\r\n        if (this.editMode === 'row') {\r\n            return this.isRowEditing();\r\n        } else {\r\n            return this.isCellEditing();\r\n        }\r\n    }\r\n\r\n    endEditing() {\r\n        if (this.editMode === 'row') {\r\n            this.endRowEdit();\r\n        } else if (this.editMode === 'cell') {\r\n            this.endCellEdit();\r\n        }\r\n    }\r\n\r\n    getEditors() {\r\n        return this.selectedRow.editors;\r\n    }\r\n\r\n    editCell(rowId: any, field: string, validation:  { isValid: boolean, message: string } = null) {\r\n        this.activeDataGrid();\r\n\r\n        const rowIndex = this.dfs.findRowIndex(rowId);\r\n        if (rowIndex > -1) {\r\n            this.endCellEdit();\r\n            const trId = TR_PREFIX + rowId;\r\n            const trDom = this.el.nativeElement.querySelector('#' + trId);\r\n\r\n            let tdDom = null;\r\n            if (trDom) {\r\n                tdDom = trDom.querySelector(`[field=\"${field}\"]`);\r\n            }\r\n            const col = this.getColumn(field);\r\n            if (!tdDom && col.fixed) {\r\n                if (col.fixed === 'left') {\r\n                    const trDomL = this.el.nativeElement.querySelector('#' + trId + '_fixedleft');\r\n                    tdDom = trDomL && trDomL.querySelector(`[field=\"${field}\"]`);\r\n                } else if (col.fixed === 'right') {\r\n                    const trDomR = this.el.nativeElement.querySelector('#' + trId + '_fixedright');\r\n                    tdDom = trDomR && trDomR.querySelector(`[field=\"${field}\"]`);\r\n                }\r\n            }\r\n\r\n            if (validation) {\r\n                this.formValidations = Object.assign( this.formValidations || {}, { [field]: validation});\r\n            }\r\n\r\n\r\n            if (tdDom && tdDom['editCell']) {\r\n                this.currentCell = null;\r\n                if (this['EDITCELL_TIMER']) {\r\n                    clearTimeout(this['EDITCELL_TIMER']);\r\n                }\r\n                this['EDITCELL_TIMER'] = setTimeout(() => {\r\n                    tdDom.editCell();\r\n                }, 0);\r\n            }\r\n        }\r\n    }\r\n\r\n    endCellEdit(event?: any) {\r\n        // document.body.click();\r\n        if (this.currentCell) {\r\n            DomHandler.removeClass(this.currentCell.cellElement, CELL_SELECTED_CLS);\r\n            if (this.currentCell.isEditing) {\r\n                // this.dfs.endEditCell();\r\n                if (this.currentCell.cellEditorRef) {\r\n                    this.currentCell.cellEditorRef.hideCover();\r\n                }\r\n\r\n                const stopEdit = this.currentCell.cellElement.closeEdit();\r\n                if (stopEdit) {\r\n                    stopEdit.subscribe();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    editRow(rowId?: any) {\r\n        if (!this.editable || this.editMode !== 'row') { return false; }\r\n\r\n        if (rowId) {\r\n            this.selectRow(rowId);\r\n        }\r\n\r\n\r\n        if (!this.selectedRow || this.selectedRow.index === -1) {\r\n            this.writeConsole('Please select a row.');\r\n            return false;\r\n        }\r\n\r\n        const { index: rowIndex, data: rowData } = { ...this.selectedRow };\r\n\r\n        const beforeEditEvent = this.beforeEdit({ rowIndex, rowData, gridInstance: this });\r\n        if (!beforeEditEvent || !beforeEditEvent.subscribe) {\r\n            this.writeConsole('please return an Observable Type.');\r\n            return;\r\n        }\r\n\r\n        const trId = TR_PREFIX + rowId;\r\n        const trDom = this.el.nativeElement.querySelector('#' + trId);\r\n\r\n        if (!this.selectedRow.dr) {\r\n            trDom.click();\r\n        }\r\n\r\n        beforeEditEvent.subscribe((flag: boolean) => {\r\n            if (flag) {\r\n                if (this.selectedRow.dr) {\r\n                    const cells = this.selectedRow.dr.cells.toArray();\r\n                    if (!cells || !cells.length) {\r\n                        return;\r\n                    }\r\n\r\n                    cells.forEach(cell => {\r\n                        if (cell.column.editor) {\r\n                            cell.isEditing = true;\r\n                        }\r\n                    });\r\n                    this.selectedRow.dr.cd.detectChanges();\r\n                    setTimeout(() => {\r\n                        const editors = cells.map(cell => {\r\n                            if (cell.cellEditor) {\r\n                                return cell.cellEditor.componentRef;\r\n                            }\r\n                        }).filter(editor => editor);\r\n                        this.selectedRow.editors = editors;\r\n\r\n                        if (editors && editors.length) {\r\n                            if (editors[0].instance.inputElement) {\r\n                                editors[0].instance.inputElement.focus();\r\n                            }\r\n                        }\r\n\r\n                        // ç»å®é®çäºä»¶\r\n                        this.bindRowEditorKeydownEvent();\r\n                        if (!this.cd['destroyed']) {\r\n                            this.cd.detectChanges();\r\n                        }\r\n                        this.beginEdit.emit({ rowIndex, rowData, gridInstance: this, editor: editors });\r\n                    });\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    endRowEdit() {\r\n        if (!this.isRowEditing()) {\r\n            return { canEnd: true };\r\n        }\r\n\r\n        if (!this.selectedRow || this.selectedRow.index === -1) {\r\n            this.writeConsole('Please select a row.');\r\n            return;\r\n        }\r\n        const { index: rowIndex, data: rowData, dr } = { ...this.selectedRow };\r\n        const { editor: currentEditor, column } = { ...this.currentCell };\r\n        // blur\r\n        document.body.click();\r\n\r\n        if (this.pending) {\r\n            return { canEnd: false };\r\n        }\r\n\r\n        const rowForm = dr.form as FormGroup;\r\n        rowForm.markAsTouched();\r\n        if (rowForm.invalid && !this.endEditByInvalid) {\r\n            return { canEnd: false };\r\n        }\r\n\r\n        // afterEdit è¦ä¼ éç¸å³åæ°ï¼å¨ç¼è¾ç¶ææ¶ï¼ç§»å¨æ»å¨æ¡ä¼åºäº\r\n        const afterEditEvent = this.afterEdit(rowIndex, rowData, column, currentEditor);\r\n        if (!afterEditEvent || !afterEditEvent.subscribe) {\r\n            this.writeConsole('please return an Observable Type.');\r\n            return { canEnd: false };\r\n        }\r\n\r\n        afterEditEvent.subscribe((flag: boolean) => {\r\n            if (flag) {\r\n                this.closeAllCellEditor();\r\n\r\n                if (this.selectedRow.dr.form) {\r\n                    this.selectedRow.dr.rowData = Object.assign(this.selectedRow.dr.rowData, this.selectedRow.dr.form.value);\r\n                    this.dfs.updateRow(this.selectedRow.id, this.selectedRow.dr.rowData);\r\n                    this.cd.detectChanges();\r\n                }\r\n\r\n                let val = '';\r\n                if (currentEditor && currentEditor.formControl) {\r\n                    val = currentEditor.formControl.value;\r\n                }\r\n\r\n                this.endEdit.emit({ rowIndex, rowData, column, value: val });\r\n\r\n                this.dgs.refreshFooterData.emit();\r\n            }\r\n        });\r\n    }\r\n\r\n    cancelEdit(rowId: any, emit = true) {\r\n\r\n        if (!this.isEditing()) {\r\n            return;\r\n        }\r\n\r\n        this.closeAllCellEditor();\r\n        if (rowId) {\r\n            this.dfs.rejectChanges(rowId);\r\n        }\r\n\r\n        this.cd.detectChanges();\r\n        if (emit) {\r\n            this.cancelEdited.emit();\r\n        }\r\n    }\r\n\r\n    closeAllCellEditor() {\r\n        if (this.selectedRow && this.selectedRow.dr) {\r\n            const cells = this.selectedRow.dr.cells;\r\n            if (cells) {\r\n                cells.forEach(cell => cell.isEditing = false);\r\n                if (this.currentCell) {\r\n                    this.currentCell.isEditing = false;\r\n                }\r\n            }\r\n            this.selectedRow.editors = null;\r\n        }\r\n\r\n        // åæ¶é®çäºä»¶\r\n        this.unbindRowEditorKeydownEvent();\r\n    }\r\n\r\n    private rowEditTabKeydwonEvent(e: any) {\r\n        const keyCode = e.which || e.keyCode;\r\n\r\n        if (keyCode === 9) {  // tab\r\n            const td = e.target.closest('td');\r\n            const tr = e.target.closest('tr');\r\n            const nextTd = td.nextElementSibling;\r\n\r\n            const hasNoEditor = (_td: any) => {\r\n                return !_td.querySelector('input') && !_td.querySelector('textarea') && !_td.querySelector('select');\r\n            };\r\n\r\n            const editNextRow = () => {\r\n                const nextTr = tr.nextElementSibling;\r\n                if (nextTr) {\r\n                    nextTr.click();\r\n                    const nextRowid = nextTr.getAttribute('id').replace(TR_PREFIX, '');\r\n                    if (nextRowid) {\r\n                        this.editRow(nextRowid);\r\n                    }\r\n                }\r\n            };\r\n\r\n            if (nextTd) {\r\n                if (hasNoEditor(nextTd)) {\r\n                    const tds = tr.querySelectorAll('td');\r\n                    let tdIdx = -1;\r\n                    tds.forEach((t, i) => {\r\n                        if (t === nextTd) {\r\n                            tdIdx = i;\r\n                        }\r\n                    });\r\n                    let nextTrEdit = true;\r\n                    while (tdIdx < tds.length) {\r\n                        const _ntd = tds[tdIdx];\r\n                        if (hasNoEditor(_ntd)) {\r\n                            tdIdx++;\r\n                        } else {\r\n                            nextTrEdit = false;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    if (nextTrEdit) {\r\n                        editNextRow();\r\n                    }\r\n                }\r\n            } else {\r\n                editNextRow();\r\n            }\r\n        }\r\n\r\n        e.stopPropagation();\r\n    }\r\n\r\n    private bindRowEditorKeydownEvent() {\r\n        if (!this.documentRowEditKeydownHanlder) {\r\n            this.documentRowEditKeydownHanlder = this.render2.listen(document, 'keydown', this.rowEditTabKeydwonEvent.bind(this));\r\n        }\r\n        this.documentClickEndRowEditHandler = this.render2.listen(document, 'click', (e: any) => {\r\n            if (this.pending) {\r\n                return false;\r\n            }\r\n            if (Utils.hasDialogOpen()) {\r\n                return;\r\n            }\r\n\r\n            if (this.isRowEditing()) {\r\n\r\n                // this.endRowEdit();\r\n            }\r\n        });\r\n    }\r\n\r\n    private unbindRowEditorKeydownEvent() {\r\n        // åæ¶é®çäºä»¶\r\n        if (this.documentRowEditKeydownHanlder) {\r\n            this.documentRowEditKeydownHanlder();\r\n            this.documentRowEditKeydownHanlder = null;\r\n        }\r\n\r\n        if (this.documentClickEndRowEditHandler) {\r\n            this.documentClickEndRowEditHandler();\r\n            this.documentClickEndRowEditHandler = null;\r\n        }\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region Load Data\r\n\r\n\r\n    private _clientFilter(conditions: any, excuteLocaleFilter = false) {\r\n        // å®¢æ·ç«¯è¿æ»¤\r\n        if (excuteLocaleFilter) {\r\n            const allClientData = this.dfs.getData(true);\r\n            if (conditions && Object.keys(conditions).length) {\r\n                const _data = this.clientFilterService.executeFilter(allClientData, conditions);\r\n                this.dfs.loadFilterData(_data);\r\n            } else {\r\n                this.loadData(allClientData, false, true);\r\n            }\r\n        }\r\n\r\n        if (!this.virtualized) {\r\n            this.scrollToTop();\r\n        }\r\n\r\n        this.filterChanged.emit(conditions);\r\n    }\r\n\r\n    private smartFilterData(conditions: any) {\r\n        if (this.remoteFilter) { // æå¡å¨ç«¯è¿æ»¤\r\n            const entityFilters = this.clientFilterService.convertSmartFilter2EntityFilter(conditions);\r\n            this.filterChanged.emit(entityFilters);\r\n        } else {\r\n            // å®¢æ·ç«¯è¿æ»¤\r\n            this._clientFilter(conditions, this.useDefaultFilter);\r\n        }\r\n\r\n    }\r\n\r\n    // smart fitler æ¸ç©ºæ¥è¯¢æ¡ä»¶\r\n    onClearSmartFilters($event?: any) {\r\n        this.smartFilterResult = { conditions: [], controlData: [] };\r\n        this.conditions = [];\r\n        this.smartFilterData([]);\r\n        this.smartFilterService.clearAll();\r\n        setTimeout(() => {\r\n            this.onFilterBarResize(0);\r\n        });\r\n    }\r\n\r\n    onRemoveSmartFilterItem($event) {\r\n        if ($event) {\r\n            const e = { ...$event };\r\n            e['labelCode'] = $event.fieldCode;\r\n            this.smartFilterService.removeCondition(e, true);\r\n        }\r\n    }\r\n\r\n    onFilterBarResize($event) {\r\n        this.filterBarHeight = $event;\r\n\r\n        const smartFilterEl = this.el.nativeElement.querySelector('.f-datagrid-column-drop-panel');\r\n        if (smartFilterEl && !$event) {\r\n            smartFilterEl.style.top = '0px';\r\n        }\r\n        this.dgs.showGridHeader.emit(this.realHeaderHeight);\r\n        this.dgs.smartFilterBarExpand.emit();\r\n    }\r\n\r\n    onSmartFilterChange($event) {\r\n        const { conditions, filterItem } = $event;\r\n\r\n        this.smartFilterService.filterConditionChanged({ conditions, controlData: filterItem, from: 'toolbar' });\r\n\r\n        // this.smartFilterData(conditions);\r\n        this.dgs.smartFilterDataChange.emit(filterItem);\r\n    }\r\n\r\n    filterData(conditions?: any) {\r\n        if (!conditions) {\r\n            conditions = this.conditions;\r\n        } else {\r\n            this.conditions = conditions;\r\n        }\r\n\r\n        this.scrollToTop();\r\n\r\n        if (this.enableSmartFilter) {\r\n            this.smartFilterData(conditions);\r\n            return;\r\n        }\r\n\r\n        if (this.remoteFilter) {\r\n            const entityFilters = this.clientFilterService.convert2FilterArray(conditions);\r\n            this.filterChanged.emit(entityFilters);\r\n        } else {\r\n            // å®¢æ·ç«¯è¿æ»¤\r\n            this._clientFilter(conditions, true);\r\n        }\r\n    }\r\n    /** æ¸ç©ºè¿æ»¤æ¡ä»¶ */\r\n    clearCondition() {\r\n        this.dgs.onClearFilter();\r\n    }\r\n\r\n    loadData(data?: any, keepSortState = false, keepScrollPosition = true) {\r\n        if (this.loading) {\r\n            this.closeLoading(!this.pagination);\r\n        }\r\n        data = data || [];\r\n\r\n        if (keepScrollPosition && this.scrollInstance && this.scrollInstance.instance) {\r\n            const lst = this.scrollInstance.instance.lastScrollTop;\r\n            const lsl = this.scrollInstance.instance.lastScrollLeft;\r\n            this.dfs.updateProperty('scrollInfo', { y: lst, x: lsl });\r\n        } else {\r\n            this.dfs.updateProperty('scrollInfo', { y: 0, x: 0 });\r\n        }\r\n\r\n        if (this.pagination) {\r\n            this.dfs.setPagination(this.pageIndex, this.pageSize, this.total);\r\n            this.updatePagerOptions();\r\n\r\n            if (!this.cd['destroyed']) {\r\n                this.cd.detectChanges();\r\n            }\r\n        }\r\n\r\n        // éæ°å è½½æ°æ®æ¶ï¼ç§»é¤ææç¼è¾å\r\n        // this.closeAllCellEditor();\r\n\r\n        this.data = data;\r\n        if (keepSortState) {\r\n            if (this.remoteSort) {\r\n                this.dfs.loadData(data);\r\n            } else {\r\n                this.dfs.loadData(data, true, true);\r\n            }\r\n        } else {\r\n            this.dfs.loadData(data);\r\n        }\r\n\r\n        this.setPagerHeight();\r\n        this.dgs.dataSourceChanged();\r\n    }\r\n\r\n    loadVirtualData(data: any) {\r\n        if (this.groupRows) {\r\n            this.writeConsole('if you using GROUPROWS, please set [virtualized]=\"false\" [virtualizedAsyncLoad]=\"false\"');\r\n            return;\r\n        }\r\n        if (this.virtualizedAsyncLoad) {\r\n            this.dgs.onLoadVirtualData(data);\r\n        }\r\n    }\r\n\r\n    fetchData(pageIndex, pageSize) {\r\n        if (this.restService) {\r\n            this.showLoading();\r\n            const params = { pageIndex, pageSize };\r\n            if (this.sortName) {\r\n                params['sortName'] = this.sortName;\r\n            }\r\n            if (this.sortOrder) {\r\n                params['sortOrder'] = this.sortOrder;\r\n            }\r\n\r\n            return this.restService.getData(this.url, params);\r\n        }\r\n        return of(undefined);\r\n    }\r\n\r\n    refresh() {\r\n        this.dfs.refresh();\r\n    }\r\n\r\n    reload() {\r\n        this.fetchData(1, this.pageSize).subscribe(res => {\r\n            if (res) {\r\n                this.pageIndex = 1;\r\n                this.total = res.total;\r\n                this.loadData(res.items);\r\n            }\r\n        });\r\n    }\r\n\r\n    /** è·åå½åé¡µæ°æ® */\r\n    getRows() {\r\n        if (this.groupRows || this.virtualized) {\r\n            if (this.pagerOnServer) {\r\n                return this.ds.rows;\r\n            } else {\r\n                return this.currentPagerData;\r\n            }\r\n        } else {\r\n            if (this.pagerOnServer) {\r\n                return this.data;\r\n            } else {\r\n                return this.currentPagerData;\r\n            }\r\n        }\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region Pagination\r\n\r\n    setPageIndex(pageIndex: number, detectChanges = true) {\r\n        this.pageIndex = pageIndex;\r\n        this.pagerOpts.currentPage = pageIndex;\r\n\r\n        if (detectChanges) {\r\n            this.cd.detectChanges();\r\n        }\r\n    }\r\n\r\n    // æ´æ°æ¯é¡µ\r\n    setPageList(pageList: number[], detectChanges = true) {\r\n        this.pageList = pageList;\r\n        this.pagerOpts.pageList = pageList;\r\n        if (detectChanges) {\r\n            this.cd.detectChanges();\r\n        }\r\n    }\r\n\r\n    onPageChange(pageIndex: number) {\r\n        if (this.lockPagination) {\r\n            return;\r\n        }\r\n\r\n        if (this.controlPaginationState) {\r\n            this.setPageIndex(pageIndex, false);\r\n        }\r\n\r\n\r\n        this.fetchData(pageIndex, this.pageSize).subscribe(res => {\r\n            if (res) {\r\n                this.loadData(res.items);\r\n            }\r\n        });\r\n        this.focusRowIndex = -1;\r\n        this.scrollToTop();\r\n        this.pageChanged.emit({ pageIndex, pageSize: this.pageSize });\r\n    }\r\n\r\n    onPageSizeChange(pageSize: number) {\r\n        if (this.lockPagination) {\r\n            return;\r\n        }\r\n        this.focusRowIndex = -1;\r\n        this.scrollToTop();\r\n        this.pageSize = pageSize;\r\n        this.pagerOpts.itemsPerPage = pageSize;\r\n\r\n        this.fetchData(1, pageSize).subscribe(res => {\r\n            if (res) {\r\n                this.pageIndex = 1;\r\n                this.loadData(res.items);\r\n            }\r\n        });\r\n        this.pageSizeChanged.emit({ pageSize, pageIndex: this.pageIndex });\r\n    }\r\n\r\n    onRemoveSelectedItem(id: any) {\r\n        if (this.dfs.findRowIndex(id) > -1) {\r\n            this.unCheckRow(id);\r\n            this.cd.detectChanges();\r\n        } else {\r\n            this.unCheckRow(id, false);\r\n            this.checkValues = this.checkeds.map(r => r.id);\r\n        }\r\n    }\r\n\r\n    onClearSelectedItem($event) {\r\n        // this.clearAll();\r\n        if (this.selectOnCheck) {\r\n            this.selectValue = '';\r\n        }\r\n        this.clearCheckeds(true);\r\n    }\r\n    //#endregion\r\n\r\n    //#region Loading\r\n    showLoading() {\r\n        this.loading = true;\r\n        this.cd.detectChanges();\r\n    }\r\n\r\n    closeLoading(detectChanges = true) {\r\n        this.loading = false;\r\n        if (detectChanges) {\r\n            this.cd.detectChanges();\r\n        }\r\n    }\r\n    //#endregion\r\n\r\n    //#region Dom\r\n\r\n    private replacePX2Empty(strNum: string) {\r\n        if (strNum) {\r\n            return Number.parseInt(strNum.replace('px', ''), 10);\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    renderCustomCls(cls: any, dom: any) {\r\n        if (cls) {\r\n            if (cls[0] === '!') {\r\n                const _cls = cls.slice(1).split(' ').filter(c => c);\r\n                _cls.forEach(c => {\r\n                    if (c) {\r\n                        this.render2.removeClass(dom, c);\r\n                    }\r\n                });\r\n            } else {\r\n                cls.split(' ').filter(c => c).forEach(c => {\r\n                    if (c) {\r\n                        this.render2.addClass(dom, c);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    renderCustomStyle(cs: CustomStyle, dom: any, cssRuleText = null) {\r\n        if (!cs) {\r\n            return;\r\n        }\r\n        if (cs.cls) {\r\n            this.renderCustomCls(cs.cls, dom);\r\n        }\r\n\r\n        if (cs.style) {\r\n            if (!cssRuleText) {\r\n\r\n                Object.keys(cs.style).forEach(n => {\r\n                    if (n.toLowerCase() === 'color' && cs.style[n] && cs.style[n].indexOf('!important') === -1 ) {\r\n                        cs.style[n] = cs.style[n] + '!important';\r\n                    }\r\n                });\r\n\r\n                cssRuleText = `${this.customStyleKey()} #${dom.id} ${JSON.stringify(cs.style)}`;\r\n            }\r\n\r\n            this.dgs.appendCssRules([cssRuleText]);\r\n        }\r\n    }\r\n\r\n    getBoundingClientRect(el: ElementRef) {\r\n        return el.nativeElement.getBoundingClientRect();\r\n    }\r\n\r\n    getElementPadding(el: HTMLElement) {\r\n        const style = getComputedStyle(el);\r\n        return {\r\n            top: this.replacePX2Empty(style.paddingTop),\r\n            left: this.replacePX2Empty(style.paddingLeft),\r\n            bottom: this.replacePX2Empty(style.paddingBottom),\r\n            right: this.replacePX2Empty(style.paddingRight)\r\n        };\r\n    }\r\n\r\n    getElementBorderWidth(el: HTMLElement) {\r\n        const style = getComputedStyle(el);\r\n        return {\r\n            top: this.replacePX2Empty(style.borderTopWidth),\r\n            bottom: this.replacePX2Empty(style.borderBottomWidth),\r\n            right: this.replacePX2Empty(style.borderRightWidth),\r\n            left: this.replacePX2Empty(style.borderLeftWidth)\r\n        };\r\n    }\r\n\r\n    formatData(field: any, data: any, formatter: any) {\r\n        const value = this.getFieldValue(field, data);\r\n        return this.colFormatSer.format(value, data, formatter);\r\n    }\r\n\r\n    getFieldValue(field, rowData) {\r\n        return Utils.getValue(field, rowData);\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region Select\r\n    private canOperateCheckbox() {\r\n        return this.multiSelect && this.showCheckbox;\r\n    }\r\n\r\n    findNextTd(nextColumn) {\r\n\r\n        if (!nextColumn) {\r\n            return null;\r\n        }\r\n\r\n        const rowid = TR_ID_PREFIX + this.selectedRow.id;\r\n        const leftTrID = TR_ID_PREFIX + this.selectedRow.id + '_fixedleft';\r\n        const rightTrID = TR_ID_PREFIX + this.selectedRow.id + '_fixedright';\r\n\r\n        let _tr = null;\r\n        let _td = null;\r\n\r\n        if (nextColumn.fixed === 'left') {\r\n            _tr = document.querySelector(leftTrID);\r\n            if (_tr) {\r\n                _td = _tr.querySelector(`[field=\"${nextColumn.field}\"]`);\r\n            }\r\n        } else if (nextColumn.fixed === 'right' ) {\r\n            _tr = document.querySelector(rightTrID);\r\n            if (_tr) {\r\n                _td = _tr.querySelector(`[field=\"${nextColumn.field}\"]`);\r\n            }\r\n        } else {\r\n            _tr = document.querySelector(rowid);\r\n            if (_tr) {\r\n                _td = _tr.querySelector(`[field=\"${nextColumn.field}\"]`);\r\n            }\r\n        }\r\n\r\n        return _td;\r\n    }\r\n\r\n    /**\r\n     * ä¾æ®å½åå­æ®µæ¥è¯¢ä¸ä¸ªå­æ®µçTD DOM\r\n     * @param field å½åå­æ®µåç§°\r\n     * @param dir ç§»å¨æ¹å\r\n     * @returns TD element\r\n     */\r\n    findNextCell(field: string, dir: MoveDirection) {\r\n        let td = null;\r\n        if (this.currentCell && this.currentCell.cellElement) {\r\n            const col = this.dfs.getColumn(field);\r\n            const fixed = col.fixed || '';\r\n            // let cellIndex = this.dfs.getColumnIndex(field, fixed);\r\n            let cellIndex = this.colGroup.columns.findIndex(n => (n.id && n.id === col.id) || n.field === col.field);\r\n\r\n            // if (fixed === 'left' || this.fast) {\r\n            //     if (this.showCheckbox) {\r\n            //         cellIndex += 1;\r\n            //     }\r\n\r\n            //     if (this.showLineNumber) {\r\n            //         cellIndex += 1;\r\n            //     }\r\n            // }\r\n\r\n            const currCellEl = this.currentCell.cellElement;\r\n            const tdSelector = `[field=\"${field}\"]`;\r\n            if (dir === 'up') {\r\n                const prevTr = this.dgs.findNextTr(currCellEl.parentElement.previousElementSibling, 'up');\r\n                if (prevTr) {\r\n                    td = prevTr.querySelector(tdSelector);\r\n                }\r\n            } else if (dir === 'down') {\r\n                const nextTr = this.dgs.findNextTr(currCellEl.parentElement.nextElementSibling, 'down');\r\n                if (nextTr) {\r\n                    td = nextTr.querySelector(tdSelector);\r\n                }\r\n            } else if (dir === 'left') {\r\n                const nextColumn = this.colGroup.columns[cellIndex - 1];\r\n                if (nextColumn) {\r\n                    td = this.findNextTd(nextColumn);\r\n                }\r\n            } else if (dir === 'right') {\r\n                const nextColumn = this.colGroup.columns[cellIndex + 1];\r\n                if (nextColumn) {\r\n                    td = this.findNextTd(nextColumn);\r\n                }\r\n            }\r\n        }\r\n        return td;\r\n    }\r\n\r\n    selectNextCell(dir: MoveDirection, event: Event) {\r\n        const nextTd = this.findNextCell(this.currentCell.field, dir);\r\n\r\n        if (dir === 'up' && !nextTd) {\r\n            return;\r\n        }\r\n\r\n        if (nextTd && nextTd.className.indexOf('f-datagrid-cell-rownumber') == -1 && nextTd.className.indexOf('f-datagrid-cell-checkbox') == -1) {\r\n            if (event['code'] === 'Tab' && this.editable && this.editcellWhenTabKeydwon) {\r\n                nextTd['click'].apply(nextTd, [event]);\r\n            } else {\r\n                if (nextTd.selectCell) {\r\n                    if (this.selectionMode === 'default' ) {\r\n                        this.clearCheckeds();\r\n                    }\r\n                    nextTd['selectCell'](event, nextTd);\r\n                }\r\n            }\r\n            // nextTd['selectCell'](event, nextTd);\r\n            return nextTd;\r\n        } else {\r\n\r\n            const nextCol = this.colGroup.columns[0];\r\n            const tdSeletor = `td[field=\"${nextCol.field}\"]`;\r\n            const tr = this.currentCell.cellElement.parentElement;\r\n\r\n            let _next = tr.nextElementSibling;\r\n            if (dir === 'left') {\r\n                _next = tr.previousElementSibling;\r\n            }\r\n            if (!_next) {\r\n                return;\r\n            }\r\n\r\n            const trDomId = _next.id.replace('_fixedleft','').replace('_fixedright','');\r\n            const leftTrSelector = '#' + trDomId + '_fixedleft';\r\n\r\n            if (_next.id.indexOf('_fixedright') > -1) {\r\n                if (this.colGroup.leftFixed && this.colGroup.leftFixed.length) {\r\n                    _next = document.querySelector(leftTrSelector);\r\n                }\r\n            }\r\n           \r\n            if (dir === 'left') {\r\n                if (_next.id.indexOf('_fixedleft') > -1) {\r\n                    _next = document.querySelector(leftTrSelector);\r\n                }\r\n            }\r\n\r\n\r\n            const nextTd = _next.querySelector(tdSeletor);\r\n            if (nextTd && nextTd.selectCell) {\r\n                if (this.selectionMode === 'default' ) {\r\n                    this.clearCheckeds();\r\n                }\r\n                nextTd.selectCell(event, nextTd);\r\n            }\r\n\r\n            /*\r\n            const nextTr = this.dgs.findNextTr(_next, dir === 'left' ? 'up' : 'down');\r\n            if (nextTr && nextTr.tagName === 'TR') {\r\n                // nextTr.children.find(td => td.editCell).editCell();\r\n                let firstEditor = false;\r\n                let i = 0;\r\n                while (!firstEditor) {\r\n                    firstEditor = !!nextTr.children[i].selectCell;\r\n                    if (!firstEditor) {\r\n                        i++;\r\n                    }\r\n                }\r\n                if (nextTr.children[i] && nextTr.children[i].selectCell) {\r\n                    if (this.selectionMode === 'default' ) {\r\n                        this.clearCheckeds();\r\n                    }\r\n                    nextTr.children[i].selectCell(event, nextTr.children[i]);\r\n                }\r\n            }\r\n            */\r\n        }\r\n    }\r\n\r\n    selectNextRow() {\r\n        if (this.selectedRow) {\r\n            const tr = this.selectedRow.dr.el.nativeElement;\r\n            if (tr.nextElementSibling) {\r\n                tr.nextElementSibling.click();\r\n            }\r\n        }\r\n    }\r\n    selectPrevRow() {\r\n        if (this.selectedRow) {\r\n            const tr = this.selectedRow.dr.el.nativeElement;\r\n            if (tr.previousElementSibling) {\r\n                tr.previousElementSibling.click();\r\n            }\r\n        }\r\n    }\r\n\r\n    removeCellSelectedCls() {\r\n        if (this.currentCell) {\r\n            DomHandler.removeClass(this.currentCell.cellElement, CELL_SELECTED_CLS);\r\n            this.render2.removeClass(this.currentCell.cellElement, CELL_EDITING_CLS);\r\n        }\r\n\r\n        const selectedCell = this.el.nativeElement.querySelectorAll('.' + CELL_SELECTED_CLS);\r\n        if (selectedCell.length) {\r\n            selectedCell.forEach(n => {\r\n                this.render2.removeClass(n, CELL_SELECTED_CLS);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * éä¸­è¡\r\n     * @param id éä¸­è¡ID\r\n     * @param emit è§¦åselect äºä»¶\r\n     * @param toCurrentPosition æ»å¨æ¡å®ä½å°å½åéæ©ä¸­è¡\r\n     */\r\n    selectRow(id: any, emit = true, toCurrentPosition = false) {\r\n        if (this.selectedRow && this.selectedRow.id === id) {\r\n            if (emit) {\r\n                this.dfs.selectRecord(id);\r\n            }\r\n            \r\n            if (toCurrentPosition) {\r\n                this.scrollToCurrentRow();\r\n            }\r\n            return;\r\n        }\r\n\r\n        const _selectRow = () => {\r\n            \r\n            this.removeCellSelectedCls();\r\n\r\n            if (!this.enableSelectRow) {\r\n                return;\r\n            }\r\n\r\n            if (!this.multiSelect && this.showCheckbox) {\r\n                this.clearCheckeds(false, false);\r\n            }\r\n\r\n            if (this.multiSelect && this.selectionMode === 'default' && !this.enableMorePageSelect) {\r\n                this.clearAll();\r\n            }\r\n\r\n            if (id && (!this.selectedRow || this.selectedRow.id != id)) {\r\n\r\n                const row = this.dfs.findRow(id);\r\n                if (row && this.disableRow) {\r\n                    if (this.disableRow(row.data, row.index)) {\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                if (emit) {\r\n                    this.dfs.selectRecord(id);\r\n                } else {\r\n                    this.dfs.setSelectRow(id, emit);\r\n                    this.selectedRow = this.dfs.getCurrentRow();\r\n                    if (this.checkOnSelect) {\r\n                        this.checkRows([id]);\r\n                    }\r\n                    this.dgs.setSelecedRow.emit({ id, selected: true });\r\n                }\r\n            } else {\r\n                if (this.checkOnSelect) {\r\n                    this.checkRows([id]);\r\n                }\r\n            }\r\n\r\n            if (toCurrentPosition) {\r\n                this.scrollToCurrentRow();\r\n            }\r\n        }\r\n\r\n\r\n        if (this.isEditing() ) {\r\n            const stopEdit = this.currentCell.cellElement.closeEdit();\r\n            if (stopEdit) {\r\n                stopEdit.subscribe(_selectRow);\r\n            }\r\n        } else {\r\n            _selectRow();\r\n        }\r\n\r\n\r\n    }\r\n\r\n    /**\r\n     * æ»å¨æ¡æ»å¨å°å½åè¡çä½ç½®\r\n     */\r\n    scrollToCurrentRow() {\r\n        this.dgs.scrollToCurrentRow.next();\r\n    }\r\n\r\n    unSelectRow(id: any, emit = true) {\r\n        if (id) {\r\n            this.closeAllCellEditor();\r\n\r\n            if (this.currentCell && this.currentCell.rowId == id) {\r\n                this.cancelSelectCell();\r\n            }\r\n\r\n            if (emit) {\r\n                this.dfs.selectRecord(id, false);\r\n            } else {\r\n                this.dfs.setSelectRow(id, false);\r\n                this.selectedRow = null;\r\n                this.dgs.setSelecedRow.emit({ id, selected: false });\r\n            }\r\n        }\r\n    }\r\n\r\n    selectAllRows() {\r\n        if (this.multiSelect && this.enableSelectRow) {\r\n            this.dfs.selectAll();\r\n        }\r\n    }\r\n\r\n    cancelSelectCell() {\r\n        if (this.currentCell) {\r\n            this.currentCell.cellElement.cancelSelected();\r\n            if (!this.currentCell.isEditing) {\r\n                this.currentCell = null;\r\n                this.dfs.cancelSelectCell();\r\n            }\r\n        }\r\n    }\r\n\r\n    clearSelections(excludeIds?: string[]) {\r\n        this.dfs.clearSelections(excludeIds);\r\n        this.selectedRow = null;\r\n        this.cancelSelectCell();\r\n        this.cd.detectChanges();\r\n    }\r\n\r\n    checkRow(id: any, emit = true) {\r\n        if (this.canOperateCheckbox()) {\r\n            if (emit) {\r\n                this.dfs.checkRecord(id);\r\n            } else {\r\n                this.checkRows([id]);\r\n            }\r\n        }\r\n    }\r\n\r\n    /** é©éè¡ï¼ä¸è§¦åéä¸­äºä»¶ */\r\n    checkRows(ids: any[], emit = false) {\r\n        if (ids && ids.length) {\r\n            this.dfs.setCheckedRows(ids, true);\r\n            this.dgs.setCheckedRows.next({ ids, checked: true });\r\n\r\n            if (this.selectionMode === 'default') {\r\n                this.dfs.updateProperty('selections', this.checkeds);\r\n            }\r\n\r\n            // this.cd.detectChanges();\r\n            if (emit) {\r\n                this.checkValues = this.checkeds.map(r => r.id);\r\n                this.checkValuesChange.emit(this.checkValues);\r\n                this.checkedChange.emit(this.checkeds);\r\n            }\r\n\r\n            this.updateAllCheckboxStatus();\r\n        }\r\n    }\r\n\r\n    /** åæ¶é©éï¼ä¸è§¦åéä¸­äºä»¶ */\r\n    unCheckRows(ids: any[], emit = false) {\r\n        if (ids && ids.length) {\r\n            this.dfs.setCheckedRows(ids, false);\r\n            this.dgs.setCheckedRows.next({ ids, checked: false });\r\n            // this.cd.detectChanges();\r\n            if (emit) {\r\n                this.checkValues = this.checkeds.map(r => r.id);\r\n                this.checkValuesChange.emit(this.checkValues);\r\n                this.checkedChange.emit(this.checkeds);\r\n            }\r\n\r\n            this.updateAllCheckboxStatus();\r\n        }\r\n    }\r\n\r\n    checkAllRows(emit = true) {\r\n        if (this.canOperateCheckbox()) {\r\n            this.dfs.checkAll();\r\n            this.dgs.checkAll.emit();\r\n            if (emit) {\r\n                this.checkAll.emit();\r\n            }\r\n        }\r\n    }\r\n\r\n    unCheckRow(id: any, emit = true) {\r\n        if (this.canOperateCheckbox()) {\r\n            if (this.currentCell && this.currentCell.rowId == id) {\r\n                this.cancelSelectCell();\r\n            }\r\n\r\n            if (emit) {\r\n                this.dfs.checkRecord(id, false);\r\n            } else {\r\n                this.unCheckRows([id]);\r\n            }\r\n\r\n            this.updateAllCheckboxStatus();\r\n        }\r\n    }\r\n    /** æ¸ç©ºé©éè¡ï¼é»è®¤åªæ¸ç©ºå½åé¡µçé©é\r\n     * clearAll: æ¸ç©ºææ é»è®¤ä¸º false; å¦åä»æ¸ç©ºå½åé¡µçé©éæ°æ®ã\r\n     */\r\n    clearCheckeds(clearAll = false, emitUnCheckAll = true) {\r\n        this.dfs.clearCheckeds(clearAll);\r\n        this.checkValues = [];\r\n        this.cancelSelectCell();\r\n        if (emitUnCheckAll) {\r\n            this.dgs.uncheckAll.emit();\r\n        }\r\n    }\r\n\r\n    clearAll() {\r\n        this.selectedRow = null;\r\n        this.checkValues = [];\r\n        this.dfs.clearAll();\r\n        this.dgs.uncheckAll.emit();\r\n        this.updateAllCheckboxStatus();\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region Resize Column\r\n\r\n    private getResizeProxyPosLeft(e: MouseEvent) {\r\n        const target = e.target as any;\r\n        const dgRect = this.getBoundingClientRect(this.dgContainer);\r\n        const td = target.parentElement;\r\n        const tdLeft = td.getBoundingClientRect().left;\r\n        const deltaEdge = td.offsetWidth - (e.pageX - tdLeft);\r\n        this.resizeColumnInfo.proxyLineEdge = deltaEdge;\r\n        this.resizeColumnInfo.startWidth = td.offsetWidth;\r\n        this.resizeColumnInfo.startX = e.pageX;\r\n        this.resizeColumnInfo.left = tdLeft - dgRect.left - 1 + deltaEdge;\r\n        return e.pageX - dgRect.left - 1 + deltaEdge;\r\n    }\r\n\r\n    private toggleResizeProxy(show = true) {\r\n        let display = 'block';\r\n        if (!show) {\r\n            display = 'none';\r\n        }\r\n        this.render2.setStyle(this.resizeProxyBg.nativeElement, 'display', display);\r\n        this.render2.setStyle(this.resizeProxy.nativeElement, 'display', display);\r\n    }\r\n\r\n    onColumnResizeBegin(e: MouseEvent) {\r\n        if (this.resizeProxy) {\r\n            this.render2.setStyle(document.body, 'cursor', 'e-resize');\r\n            const proxy = this.resizeProxy.nativeElement;\r\n            const proxyPosLeft = this.getResizeProxyPosLeft(e);\r\n            this.render2.setStyle(proxy, 'left', proxyPosLeft + 'px');\r\n\r\n            let top = 0;\r\n            if ((this.enableFilterRow || this.enableSmartFilter) && this.showFilterBar) {\r\n                top += this.filterBarHeight;\r\n            }\r\n\r\n            if (this.showRowGroupPanel) {\r\n                top += this.rowGroupPanelHeight;\r\n            }\r\n\r\n            this.render2.setStyle(proxy, 'top', `${top}px`);\r\n\r\n            if (!this.autoHeight) {\r\n                this.render2.setStyle(proxy, 'height', (this.height - this.pagerHeight) + 'px');\r\n            } else {\r\n                let bottomH = 0;\r\n                if (this.pagination) {\r\n                    bottomH += this.pagerHeight;\r\n                }\r\n                if (this.showFooter) {\r\n                    bottomH += this.footerHeight;\r\n                }\r\n                this.render2.setStyle(proxy, 'height', `calc(100% - ${bottomH}px)`);\r\n            }\r\n            this.toggleResizeProxy();\r\n        }\r\n    }\r\n\r\n    onColumnResize(e: MouseEvent) {\r\n        const proxy = this.resizeProxy.nativeElement;\r\n        const dgRect = this.getBoundingClientRect(this.dgContainer);\r\n        const proxyPosLeft = e.pageX - dgRect.left - 1 + this.resizeColumnInfo.proxyLineEdge;\r\n        if (proxyPosLeft - this.resizeColumnInfo.left > 20) {\r\n            this.render2.setStyle(proxy, 'left', proxyPosLeft + 'px');\r\n        } else {\r\n            this.render2.setStyle(proxy, 'left', (this.resizeColumnInfo.left + 20) + 'px');\r\n        }\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n    }\r\n\r\n    onColumnResizeEnd(e: MouseEvent, col: DataColumn) {\r\n        this.render2.removeStyle(document.body, 'cursor');\r\n        this.toggleResizeProxy(false);\r\n        this.resizeColumnInfo.proxyLineEdge = 0;\r\n\r\n        let newColWidth = this.resizeColumnInfo.startWidth + e.pageX - this.resizeColumnInfo.startX;\r\n\r\n        if (newColWidth < 20) {\r\n            newColWidth = 20;\r\n        }\r\n\r\n        if (col.width > newColWidth) {\r\n            const t = col.width - newColWidth;\r\n            if (!this.fitColumns && this.scrollInstance.elementRef.nativeElement.scrollLeft) {\r\n                const moveLeft = this.scrollInstance.elementRef.nativeElement.scrollLeft - t;\r\n                this.scrollInstance.scrollToX(moveLeft);\r\n            }\r\n        }\r\n        col.width = newColWidth;\r\n\r\n        if (!this.nowrap && this.showFooter) {\r\n            this.setFooterHeight();\r\n        }\r\n\r\n        if (this.useControlPanel && this.settingService) {\r\n            this.settingService.saveUserConfig(this.id).subscribe(() => {\r\n                this.dfs.columnResizeEnd();\r\n                this.dgs.columnResized.emit();\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        this.dfs.columnResizeEnd();\r\n        this.dgs.columnResized.emit();\r\n\r\n        this.updateFixedColumnCssForFastMode(col);\r\n    }\r\n\r\n    /** è¿ååå®½ */\r\n    restituteColumnsSize() {\r\n        this.dfs.resizeColumns(true);\r\n        this.dgs.columnResized.emit();\r\n    }\r\n\r\n    /** ååæ ¼åå®¹èªéåºåå®½ */\r\n    sizeToContent(col: DataColumn, th: ElementRef) {\r\n        if (!this.AutoColumnWidthUseDblclick) {\r\n            return false;\r\n        }\r\n        let longestText = '';\r\n        const items = this.data;\r\n\r\n        for (let i = items.length - 1; i >= 0; i--) {\r\n            // TFS: 356964 20200203\r\n            let value = Utils.getValue(col.field, items[i]);\r\n            if (value !== 0) {\r\n                value = value || '';\r\n            }\r\n            let text = '' + value;\r\n            if (col.formatter && value !== undefined) {\r\n                text = this.colFormatSer.format(value, items[i], col.formatter);\r\n            }\r\n\r\n            if (Utils.getBLen(text) > Utils.getBLen(longestText)) {\r\n                longestText = text;\r\n            } else {\r\n                this.longTextArea.nativeElement.innerHTML = text;\r\n                const w1 = this.longTextArea.nativeElement.offsetWidth;\r\n                this.longTextArea.nativeElement.innerHTML = longestText;\r\n                const w2 = this.longTextArea.nativeElement.offsetWidth;\r\n\r\n                if (w1 > w2) {\r\n                    longestText = text;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.longTextArea.nativeElement.innerHTML = longestText;\r\n        const maxWidth = this.longTextArea.nativeElement.offsetWidth + 26;\r\n\r\n        this.longTextArea.nativeElement.innerHTML = th.nativeElement.innerText;\r\n        let thMinWidth = this.longTextArea.nativeElement.offsetWidth + 26;\r\n\r\n        if (col.sortable) {\r\n            thMinWidth += 24;\r\n        }\r\n\r\n        col.width = (maxWidth > thMinWidth ? maxWidth : thMinWidth);\r\n\r\n        const colIndex = this.flatColumns.findIndex(c => c.field === col.field);\r\n        if (colIndex === this.flatColumns.length - 1) {\r\n            col.width += 6;\r\n        }\r\n        this.dfs.resizeColumns();\r\n        this.dgs.columnResized.emit();\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region Changes\r\n    getChanges() {\r\n        return this.dfs.getChanges();\r\n    }\r\n\r\n    acceptChanges() {\r\n        this.dfs.acceptChanges();\r\n    }\r\n\r\n    rejectChanges() {\r\n        this.dfs.rejectChanges();\r\n    }\r\n    //#endregion\r\n\r\n    //#region CRUD\r\n\r\n    appendRow(row: any) {\r\n        this.cancelEdit(null);\r\n        this.dfs.appendRow(row);\r\n        this.dataChange.emit(this.dfs.getData());\r\n        this.rowAppended.emit();\r\n    }\r\n\r\n    updateRow(rowId, newData: { [key: string]: any }) {\r\n        this.dfs.updateRow(rowId, newData);\r\n        this.dataChange.emit(this.dfs.getData());\r\n        this.rowUpdated.emit();\r\n    }\r\n\r\n    refreshRow(rowId) {\r\n        const row = this.dfs.findRow(rowId);\r\n        if (row && row.data) {\r\n            this.dfs.rowUpdate$.emit(row);\r\n        } else {\r\n            this.writeConsole('Can not found row by id. id: ' + rowId);\r\n        }\r\n    }\r\n\r\n\r\n    deleteRow(rowId?: any) {\r\n        this.cancelEdit(rowId, false);\r\n        if (!rowId) {\r\n            if (this.selectValue) {\r\n                rowId = this.selectValue;\r\n            } else {\r\n                throw new Error(`å é¤è¡æ¶ä¸»é®æ è¯ID ä¸è½ä¸ºç©ºã`);\r\n            }\r\n        }\r\n        const deleteRow = this.dfs.deleteRow(rowId);\r\n        this.dataChange.emit(this.dfs.getData());\r\n        this.currentCell = null;\r\n        this.dfs.updateProperty('currentCell', null);\r\n        this.cd.detectChanges();\r\n        this.rowDeleted.emit(deleteRow);\r\n    }\r\n\r\n    validateRow() { }\r\n\r\n    insertRow() { }\r\n\r\n    //#endregion\r\n\r\n    //#region Scrolling\r\n\r\n    scrollToLeft() {\r\n        if (this.scrollInstance) {\r\n            this.scrollInstance.scrollToLeft(0, 200);\r\n        }\r\n    }\r\n\r\n    scrollToRight() {\r\n        if (this.scrollInstance) {\r\n            this.scrollInstance.scrollToRight(0, 200);\r\n        }\r\n    }\r\n\r\n    scrollToTop() {\r\n        if (this.scrollInstance) {\r\n            this.scrollInstance.scrollToTop(0, 100);\r\n            this.dfs.updateProperty('scrollInfo', { y: 0, x: 0 });\r\n        }\r\n    }\r\n\r\n    scrollToBottom() {\r\n        if (this.scrollInstance) {\r\n            this.scrollInstance.scrollToBottom(0, 100);\r\n        }\r\n    }\r\n\r\n    //#endregion\r\n\r\n    private _setColumnReadonly(cols: DataColumn[], field: string, readonly = true) {\r\n        if (cols && cols.length && field) {\r\n            const col = cols.find(n => n.field === field);\r\n            if (col) {\r\n                col.readonly = readonly;\r\n            }\r\n        }\r\n    }\r\n\r\n    setColumnReadonly(field: string, readonly = true) {\r\n        this._setColumnReadonly(this.colGroup.leftFixed, field, readonly);\r\n        this._setColumnReadonly(this.colGroup.rightFixed, field, readonly);\r\n        this._setColumnReadonly(this.colGroup.normalColumns, field, readonly);\r\n    }\r\n\r\n    // æ¯å¦ä¸ºå¤è¡¨å¤´\r\n    isMultiHeader() {\r\n        return this.columns && this.columns.length > 1 && Array.isArray(this.columns[1]);\r\n    }\r\n\r\n    toggleVisibleColumn(fields: string[], visible = true) {\r\n        if (!this.isMultiHeader()) {\r\n            this.columns.forEach((cols: DataColumn[]) => {\r\n                fields.forEach(field => {\r\n                    const col = cols.find(c => c.field === field || c.id === field);\r\n                    if (col) {\r\n                        col.visible = visible;\r\n                    }\r\n                });\r\n            });\r\n        } else {\r\n            // å¤è¡¨å¤´\r\n            const allCols = flatten<DataColumn>(this.columns);\r\n\r\n            allCols.forEach(p => {\r\n                if (p.origianlColSpan === undefined) {\r\n                    p.origianlColSpan = p.colspan;\r\n                }\r\n            });\r\n\r\n            fields.forEach(field => {\r\n                const _col = allCols.find(col => col.field === field || col.id === field);\r\n                if (_col) {\r\n\r\n                    if (_col.visible === visible) {\r\n                        return;\r\n                    }\r\n\r\n                    _col.visible = visible;\r\n                    const parents = DatagridColumnsHelper.getParentColumns(_col, allCols);\r\n                    const childs = DatagridColumnsHelper.getChildColumns(_col, allCols);\r\n                    childs.forEach(c => {\r\n                        c.visible = visible;\r\n                    });\r\n                    if (visible && childs.length) {\r\n                        _col.colspan = _col.origianlColSpan;\r\n                    }\r\n\r\n                    const _colspan = _col.colspan || 1;\r\n                    parents.forEach(p => {\r\n                        if (!visible) {\r\n                            p.colspan = p.colspan - _colspan;\r\n                        } else {\r\n                            const _childs = allCols.filter(n => n.parentId === p.id && n.visible);\r\n                            p.colspan = _childs.reduce((r, c) => {\r\n                                r = r + (c.colspan || 1);\r\n                                return r;\r\n                            }, 0);\r\n                        }\r\n\r\n                        p.visible = !!p.colspan;\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    getColumn(field: string) {\r\n        const allCols = flatten<DataColumn>(this.columns);\r\n        return allCols.find(n => n.field === field || n.id === field);\r\n    }\r\n\r\n    showColumn(field: string | string[], reload = true) {\r\n        if (typeof field === 'string') {\r\n            this.toggleVisibleColumn([field], true);\r\n        } else {\r\n            this.toggleVisibleColumn(field, true);\r\n        }\r\n        this.columnsChanged(reload);\r\n    }\r\n\r\n    hideColumn(field: string | string[], reload = true) {\r\n        if (typeof field === 'string') {\r\n            this.toggleVisibleColumn([field], false);\r\n        } else {\r\n            this.toggleVisibleColumn(field, false);\r\n        }\r\n        this.columnsChanged(reload);\r\n    }\r\n\r\n    updateColumn(field: string, columnObject: { [key: string]: any }, detectChange = true) {\r\n        this.columns.forEach((cols: DataColumn[]) => {\r\n            let column = cols.find(col => col.field === field);\r\n            if (column) {\r\n                column = Object.assign(column, columnObject);\r\n            }\r\n        });\r\n\r\n        if (detectChange) {\r\n            this.columnsChanged();\r\n        }\r\n    }\r\n\r\n    setColumnFormatter(field: string, formatter: any, detectChange = true) {\r\n        this.columns.forEach((cols: DataColumn[]) => {\r\n            const column = cols.find(col => col.field === field);\r\n            if (column) {\r\n                column.formatter = formatter;\r\n            }\r\n        });\r\n\r\n        if (detectChange) {\r\n            this.columnsChanged();\r\n        }\r\n    }\r\n\r\n    updateColumnFormatterOptions(field: string, formatterOptions: any, detectChange = true) {\r\n        this.columns.forEach((cols: DataColumn[]) => {\r\n            const column = cols.find(col => col.field === field);\r\n            if (column && column.formatter) {\r\n                const colFormatter = column.formatter as any;\r\n                colFormatter.options = colFormatter.options || {};\r\n                colFormatter.options = Object.assign(colFormatter.options, formatterOptions || {});\r\n            }\r\n        });\r\n\r\n        if (detectChange) {\r\n            this.columnsChanged();\r\n        }\r\n    }\r\n\r\n    setColumnTitle(field: string, title: string, detectChange = true) {\r\n        this.columns.forEach((cols: DataColumn[]) => {\r\n            const column = cols.find(col => col.field === field);\r\n            if (column) {\r\n                column.title = title;\r\n            }\r\n        });\r\n\r\n        if (detectChange) {\r\n            this.columnsChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * æåº\r\n     * @param sortName æåºå­æ®µï¼å¦ï¼ 'name,age'\r\n     * @param sortOrder æåºæ¹å¼ï¼å¦ï¼'desc, asc'\r\n     */\r\n    sort(sortName?: string, sortOrder?: string) {\r\n        if (sortName === null || sortName === '' || sortOrder === null || sortOrder === '') {\r\n            this.clearSort();\r\n        } else {\r\n            if (sortName && sortOrder) {\r\n                // this.updateSortInfo(sortName, sortOrder);\r\n                this.sortName = sortName;\r\n                this.sortOrder = sortOrder;\r\n                this.dfs.setSortInfo(this.sortName, this.sortOrder);\r\n            }\r\n\r\n            if (!this.remoteSort) {\r\n                this.dfs.clientSort();\r\n            }\r\n            this.onColumnSorted();\r\n        }\r\n    }\r\n\r\n    clearSort() {\r\n        this.sortName = '';\r\n        this.sortOrder = '';\r\n        this.dfs.setSortInfo('', '');\r\n        if (!this.remoteSort) {\r\n            if (this.data && this.data.length) {\r\n                this.dfs.clearSort();\r\n            }\r\n        }\r\n        this.onColumnSorted();\r\n    }\r\n\r\n    onColumnSorted() {\r\n        let params = null;\r\n        if (this.sortName && this.sortOrder) {\r\n            const orders = this.sortOrder.split(',');\r\n            params = this.sortName.split(',').reduce((r, n, i) => {\r\n                r[n] = orders[i] || 'asc';\r\n                return r;\r\n            }, {});\r\n        }\r\n\r\n        if (!this.remoteSort) {\r\n            this.dfs.clientSort();\r\n        }\r\n\r\n        this.columnSorted.emit(params);\r\n    }\r\n\r\n    updateSortInfo(newSortName, newSortOrder) {\r\n        const sortName = this.sortName;\r\n        const sortOrder = this.sortOrder;\r\n        let sortFields = [];\r\n        let sortOrders = [];\r\n        if (sortName) {\r\n            sortFields = sortName.split(',');\r\n            sortOrders = sortOrder.split(',');\r\n        }\r\n\r\n        const _sortFields = newSortName.split(',');\r\n        const _sortOrders = newSortOrder.split(',');\r\n\r\n\r\n        _sortFields.forEach((nField, nIndex) => {\r\n            const colOrder = _sortOrders[nIndex] || 'asc';\r\n            let newOrder = colOrder;\r\n            const i = sortFields.findIndex(n => n === nField);\r\n            if (i >= 0) {\r\n                const _order = sortOrders[i] === 'asc' ? 'desc' : 'asc';\r\n                newOrder = _order;\r\n                if (this.multiSort && newOrder === 'asc') {\r\n                    newOrder = undefined;\r\n                    sortFields.splice(i, 1);\r\n                    sortOrders.splice(i, 1);\r\n                } else {\r\n                    sortOrders[i] = _order;\r\n                }\r\n\r\n            } else {\r\n                if (this.multiSort) {\r\n                    sortFields.push(nField);\r\n                    sortOrders.push(colOrder);\r\n                } else {\r\n                    sortFields = [nField];\r\n                    sortOrders = [colOrder];\r\n                }\r\n            }\r\n        });\r\n\r\n        this.sortName = sortFields.join(',');\r\n        this.sortOrder = sortOrders.join(',');\r\n    }\r\n    /** åè®¾ç½® */\r\n    showControlPanel($event: MouseEvent) {\r\n        $event.stopPropagation();\r\n        const self = this;\r\n        if (this.useControlPanel && this.settingService) {\r\n            this.checkSettingHttp();\r\n            this.settingService.show(self);\r\n        }\r\n    }\r\n\r\n    checkSettingHttp() {\r\n        if (!this.settingService.httpRestService || !this.settingService.httpRestService.befRepository) {\r\n            const settingsHttp = this.inject.get(GRID_SETTINGS_HTTP, null);\r\n            this.settingService.httpRestService = settingsHttp;\r\n        }\r\n    }\r\n\r\n    disableHeader(flag = true) {\r\n        this.dgs.disableHeader.emit(flag);\r\n    }\r\n\r\n    /** è·åç¨æ·ä¸ªæ§åè®¾ç½® */\r\n    private userProfileSetting(settings) {\r\n\r\n        const { sortInfo, viewColumns, groupField, columnFormat, expandGroupRows  } = settings;\r\n        let _sortName, _sortOrder;\r\n        if (sortInfo) {\r\n            const { sortName, sortOrder } = sortInfo;\r\n            _sortName = sortName;\r\n            _sortOrder = sortOrder\r\n            if (sortName && sortName.length) {\r\n                this.sortName = sortName.join(',');\r\n                if (sortOrder) {\r\n                    this.sortOrder = sortOrder.join(',');\r\n                }\r\n            }\r\n\r\n            this['__sortInfo'] = sortInfo;\r\n        }\r\n\r\n        if (viewColumns && viewColumns.length) {\r\n            this.columns = this.columns.map(cols => {\r\n                this.settingService.updateColumnFormat(cols, columnFormat, this);\r\n                return this.settingService.newVisibleOrderColumns(cols, viewColumns, columnFormat, this);\r\n            });\r\n\r\n            this.addControlCol();\r\n\r\n            this.columns.forEach(cols => {\r\n                cols.forEach(col => {\r\n                    if (_sortName && _sortName.length) {\r\n                        const i = _sortName.indexOf(col.field);\r\n                        if (i > -1) {\r\n                            col.order = _sortOrder[i];\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n        }\r\n\r\n        if (this.groupRows && (groupField !== null && groupField !== undefined)) {\r\n            this.groupField = groupField;\r\n            this.expandGroupRows = expandGroupRows === undefined ? this.expandGroupRows: expandGroupRows;\r\n        }\r\n    }\r\n\r\n    // æ¯å¦ä¸ºå½åæ´»å¨çè¡¨æ ¼\r\n    private isActived() {\r\n        return DomHandler.hasClass(this.dgContainer.nativeElement, this._active_datagrid_cls);\r\n    }\r\n\r\n    // æ¸çæ æçDOM\r\n    private cleanDom() {\r\n        // æ¸ç TOOL-TIP\r\n        const tips = document.querySelectorAll('.datagrid-cell-tooltip');\r\n        if (tips && tips.length) {\r\n            tips.forEach(n => {\r\n                n.remove();\r\n            });\r\n        }\r\n    }\r\n\r\n    cellIsReadOnly(col: DataColumn, rowData) {\r\n        let readOnly = false;\r\n        if (this.disableRow) {\r\n            readOnly = this.disableRow(rowData);\r\n        }\r\n\r\n        if (!readOnly) {\r\n            if (col.readonly !== undefined) {\r\n                if (typeof col.readonly === 'boolean') {\r\n                    readOnly = col.readonly;\r\n                } else if (typeof col.readonly === 'function') {\r\n                    readOnly = col.readonly(rowData);\r\n                }\r\n            }\r\n        }\r\n        return readOnly;\r\n    }\r\n\r\n\r\n    private groupFieldChanged() {\r\n        this.columnsChanged();\r\n        if (this.settingService) {\r\n            this.checkSettingHttp();\r\n            this.settingService.saveUserConfig(this.id).subscribe();\r\n        }\r\n        this.groupFieldChange.emit({ newGroupField: this.groupField, grid: this });\r\n    }\r\n\r\n    removeGroupField(field: string) {\r\n        const fields = this.groupField.split(',');\r\n        const delIdx = fields.indexOf(field);\r\n        if (delIdx > -1) {\r\n            fields.splice(delIdx, 1).join(',');\r\n        }\r\n        this.groupField = fields.join(',');\r\n        this.toggleVisibleColumn([field], true);\r\n        this.groupFieldChanged();\r\n    }\r\n\r\n    clearAllGrouppingField($event) {\r\n        this.showLoading();\r\n        setTimeout(() => {\r\n            const fields = this.groupField.split(',');\r\n            this.groupField = '';\r\n            this.toggleVisibleColumn(fields, true);\r\n            this.groupFieldChanged();\r\n            this.closeLoading();\r\n        });\r\n    }\r\n\r\n    setGroupFields(groupFields) {\r\n        this.groupField = groupFields;\r\n        this.columnsChanged();\r\n    }\r\n\r\n    activeDataGrid(active = true) {\r\n        const grids = document.querySelectorAll('.f-datagrid.datagrid-active');\r\n        if (grids.length) {\r\n            grids.forEach(n => {\r\n                this.render2.removeClass(n, this._active_datagrid_cls);\r\n            });\r\n        }\r\n        if (active) {\r\n            this.render2.addClass(this.dgContainer.nativeElement, this._active_datagrid_cls);\r\n        }\r\n    }\r\n\r\n\r\n    onDatagridContainerFocus($event) {\r\n        if (!this.disabled) {\r\n            this.activeDataGrid();\r\n        }\r\n    }\r\n\r\n\r\n    private setShadowColumnForFastMode() {\r\n        if (this.fast) {\r\n            const fixedLeft = this.flatColumns.filter(n => n.fixed === 'left');\r\n            const fixedRight = this.flatColumns.filter(n => n.fixed === 'right');\r\n\r\n            if (fixedLeft && fixedLeft.length) {\r\n                let leftWidthTotal = 0;\r\n                if (this.showCheckbox) {\r\n                    leftWidthTotal += 36;\r\n                }\r\n                if (this.showLineNumber) {\r\n                    leftWidthTotal += this.lineNumberWidth;\r\n                }\r\n                fixedLeft.forEach((n, index) => {\r\n                    leftWidthTotal += index ? fixedLeft[index - 1].width : 0;\r\n                    n.left = leftWidthTotal;\r\n                });\r\n\r\n                fixedLeft[fixedLeft.length - 1]['leftShadowCol'] = true;\r\n\r\n                this.dfs.getColumn(fixedLeft[fixedLeft.length - 1].field)['leftShadowCol'] = true;\r\n            }\r\n\r\n            if (fixedRight && fixedRight.length) {\r\n                fixedRight[0]['rightShadowCol'] = true;\r\n                let rightWidthTotal = fixedRight.reduce((r, c) => {\r\n                    return r + c.width;\r\n                }, 0);\r\n\r\n                fixedRight.forEach((n, index) => {\r\n                    rightWidthTotal -= n.width;\r\n                    n.right = rightWidthTotal;\r\n                });\r\n\r\n                this.dfs.getColumn(fixedRight[0].field)['rightShadowCol'] = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    // ååå¯¹é½æ¹å¼æ ·å¼å¨æçæ\r\n    private setCellStyle() {\r\n\r\n        if (!this.flatColumns || !this.flatColumns.length) {\r\n            return;\r\n        }\r\n\r\n        const cssarr = [];\r\n\r\n        const  verticalAlign = (column) => {\r\n            let va = 'center';\r\n            switch (column.valign) {\r\n                case 'top':\r\n                    va = 'flex-start';\r\n                    break;\r\n                case 'bottom':\r\n                    va = 'flex-end';\r\n                    break;\r\n                default:\r\n                    va = 'center';\r\n                    break;\r\n            }\r\n            return va;\r\n        };\r\n\r\n        const horizontalAlign = (column) => {\r\n            let ha = 'flex-start';\r\n            if (column.align === 'right') {\r\n                ha = 'flex-end';\r\n            } else if (column.align === 'center') {\r\n                ha = 'center';\r\n            }\r\n            return ha;\r\n        };\r\n\r\n        this.setShadowColumnForFastMode();\r\n\r\n        this.flatColumns.forEach(col => {\r\n            const css = `${this.customStyleKey()} .cell-text-align__${col.field} {align-items: ${verticalAlign(col)}, justify-content: ${horizontalAlign(col)}}`;\r\n            cssarr.push(css);\r\n\r\n            if (this.fast) {\r\n                if (col.fixed === 'left' || col.fixed === 'right') {\r\n                    let fixed = `${this.customStyleKey()} .f-datagrid-fast__fixed-${col.fixed}[field=\"${col.field}\"]{`;\r\n                    if (col.fixed === 'left') {\r\n                        fixed += `left: ${col.left}px}`;\r\n                    }\r\n\r\n                    if (col.fixed === 'right') {\r\n                        fixed += `right: ${col.right}px}`;\r\n                    }\r\n\r\n                    cssarr.push(fixed);\r\n                }\r\n            }\r\n        });\r\n\r\n        this.dgs.appendCssRules(cssarr);\r\n    }\r\n\r\n    private updateFixedColumnCssForFastMode(col: DataColumn) {\r\n        if (this.fast) {\r\n            // update css.\r\n            const colIndex = this.flatColumns.findIndex(n => n.field === col.field);\r\n            const nextColumn = this.flatColumns[colIndex + 1];\r\n            this.setShadowColumnForFastMode();\r\n            if (nextColumn && nextColumn.fixed) {\r\n                const ruleName =  `${this.customStyleKey()} .f-datagrid-fast__fixed-${nextColumn.fixed}[field=\"${nextColumn.field}\"]`;\r\n                const stylecss = ruleName + '{' + nextColumn.fixed + ':' + nextColumn[nextColumn.fixed] + 'px}';\r\n                this.dgs.appendCssRules([stylecss]);\r\n            }\r\n        }\r\n    }\r\n\r\n    expandGroupRow(groupRowIndex: number) {\r\n        this.dgs.toggleGroupRow$.emit({ expand: true, groupRowIndex });\r\n    }\r\n\r\n    collapseGroupRow(groupRowIndex: number) {\r\n        this.dgs.toggleGroupRow$.emit({ expand: false, groupRowIndex });\r\n    }\r\n   \r\n\r\n    expandAllGroupRows() {\r\n        this.dgs.toggleAllGroupRows$.emit({ expand: true });\r\n    }\r\n\r\n    collapseAllGroupRows() {\r\n        this.dgs.toggleAllGroupRows$.emit({ expand: false });\r\n    }\r\n}\r\n","import { cloneDeep } from 'lodash-es';\r\nimport { IdService } from '@farris/ui-common';\r\nimport {\r\n    Component, OnInit, ViewChild, TemplateRef, Renderer2, ElementRef,\r\n    NgZone, Injector, Input, OnDestroy, HostListener, Optional\r\n} from '@angular/core';\r\nimport { FilterPanelService, FilterPanelComponent } from '@farris/ui-filter-panel';\r\nimport { DatagridComponent } from '../../datagrid.component';\r\nimport { DatagridSmartFilterService } from '../../services/datagrid-smart-filter.service';\r\n\r\n@Component({\r\n    selector: 'datagrid-smart-filter, [datagrid-smart-filter]',\r\n    templateUrl: 'datagrid-smart-filter.component.html',\r\n    providers: [\r\n        FilterPanelService\r\n    ]\r\n})\r\nexport class DatagridSmartFilterComponent implements OnInit, OnDestroy {\r\n    @Input() column;\r\n    @Input() filterData = null;\r\n    @Input() disabled = false;\r\n\r\n    @ViewChild('sort') sortTmp: TemplateRef<any>;\r\n\r\n    filterPanelRef: FilterPanelComponent;\r\n    private idService: IdService;\r\n    private smartFilterDataChanged$ = null;\r\n    private removeFilter$ = null;\r\n    private clearAllFilter$ = null;\r\n    private smartFilterEvents = [];\r\n    constructor(\r\n        private render: Renderer2, private el: ElementRef,\r\n        private zone: NgZone, private inject: Injector,\r\n        private filterPanelService: FilterPanelService,\r\n        private smartFilterSer: DatagridSmartFilterService,\r\n        @Optional() private dg: DatagridComponent\r\n        ) {\r\n            this.idService = this.inject.get(IdService, null);\r\n        }\r\n\r\n    ngOnInit() {\r\n\r\n        if (!this.removeFilter$) {\r\n            this.removeFilter$ = this.smartFilterSer.removeFilter.subscribe((e: any) => {\r\n                if (e && e.labelCode  === this.column.field) {\r\n                    this.filterData = null;\r\n                    this.render.removeClass(this.el.nativeElement, 'active');\r\n                }\r\n            });\r\n\r\n            this.smartFilterEvents.push(this.removeFilter$);\r\n        }\r\n\r\n        if (!this.clearAllFilter$) {\r\n            this.clearAllFilter$ = this.smartFilterSer.clearAllFilter.subscribe( () => {\r\n                this.filterData = null;\r\n                this.render.removeClass(this.el.nativeElement, 'active');\r\n            });\r\n\r\n            this.smartFilterEvents.push(this.clearAllFilter$);\r\n        }\r\n        if (this.dg && !this.smartFilterDataChanged$) {\r\n            this.smartFilterDataChanged$ = this.dg.dgs['smartFilterDataChange'].subscribe((e: any) => {\r\n                if (e && this.column.field === e.fieldCode) {\r\n                    this.filterData.value = e.value;\r\n                    this.filterData.control.single = e.control.single;\r\n                }\r\n            });\r\n            this.smartFilterEvents.push(this.smartFilterDataChanged$);\r\n        }\r\n\r\n        this.dg.dgs.clearFilter.subscribe(() => {\r\n            this.filterData = null;\r\n            this.dg.smartFilterResult = { controlData: [], conditions: [] };\r\n            this.smartFilterSer.clearAll();\r\n            this.render.removeClass(this.el.nativeElement, 'active');\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.filterPanelRef) {\r\n            this.filterPanelService.hidePanel();\r\n            this.filterPanelRef = null;\r\n        }\r\n\r\n        if (this.smartFilterEvents && this.smartFilterEvents.length) {\r\n            this.smartFilterEvents.forEach(n => {\r\n                n.unsubscribe();\r\n                n = null;\r\n            });\r\n\r\n            this.smartFilterEvents = [];\r\n        }\r\n    }\r\n\r\n\r\n\r\n    private getFilterData() {\r\n        const { field, title } = this.column;\r\n        if (!this.filterData) {\r\n            this.filterData = this.smartFilterSer.controlData.find(n => n.id === field);\r\n        }\r\n\r\n        if (!this.filterData) {\r\n            this.filterData = {\r\n                id: field,\r\n                labelCode: field,\r\n                code: field,\r\n                name: title,\r\n                control: this.smartFilterSer.getColumnFilterData(this.column),\r\n                placeHolder: '',\r\n                value: {\r\n                    value: ''\r\n                }\r\n            };\r\n        }\r\n\r\n        return cloneDeep(this.filterData);\r\n    }\r\n\r\n\r\n    private getPanelPosition($event) {\r\n        let x = $event.pageX - 33;\r\n        const y = $event.pageY +  9;\r\n        const targetRect = $event.target.getBoundingClientRect();\r\n        let moveArrow = 0;\r\n        if (window.innerWidth - x < 380) {\r\n            const i = 380 - (window.innerWidth - x);\r\n            x = x - i - 20;\r\n            moveArrow = targetRect.left - x;\r\n        }\r\n\r\n        return { x, y, moveArrow};\r\n    }\r\n\r\n    private hideFilterPanel() {\r\n        if (this.filterPanelRef) {\r\n            this.filterPanelService.hidePanel();\r\n            this.filterPanelRef = null;\r\n            if (!this.filterData ||  (this.filterData.control.controltype === 'bool-check' ? !this.filterData.value.value : !this.filterData.valueText)) {\r\n                this.render.removeClass(this.el.nativeElement, 'active');\r\n            }\r\n        }\r\n    }\r\n\r\n    private clearColumnFilter(e) {\r\n        this.filterData = null;\r\n        this.hideFilterPanel();\r\n        this.smartFilterSer.removeCondition(e);\r\n    }\r\n\r\n    showFilterPanel($event) {\r\n        $event.stopPropagation();\r\n\r\n        this.render.addClass(this.el.nativeElement, 'active');\r\n        const { x, y, moveArrow } = this.getPanelPosition($event);\r\n        this.filterPanelRef = this.filterPanelService.showPanel({\r\n            left: x,\r\n            top: y,\r\n            item: this.getFilterData(),\r\n            panelExtendTemplate: this.column.sortable ? this.sortTmp : null,\r\n            localStorageKey: 'smartfilter_' + this.dg.dgs.createConfigKey(this.dg.id),\r\n            target: $event.target\r\n        });\r\n\r\n        if (moveArrow) {\r\n            const arrowEl = this.filterPanelRef['el'].querySelector('.f-filter-panel-arrow');\r\n            if (arrowEl) {\r\n                this.render.setStyle(arrowEl, 'left', `${moveArrow}px`);\r\n            }\r\n        }\r\n\r\n        this.filterPanelRef.dataChange.subscribe(item => {\r\n            if (this.filterData && this.filterData.id == item.id) {\r\n                if (item.value && item.value.single !== undefined) {\r\n                    this.filterData.value = item.value;\r\n                    this.filterData.control.single = item.value.single;\r\n                }\r\n            }\r\n        })\r\n\r\n        this.filterPanelRef.hidePanel.subscribe(e => {\r\n            this.hideFilterPanel();\r\n        });\r\n\r\n        this.filterPanelRef.filterSubmit.subscribe(e => {\r\n            \r\n            if (e.filter && e.filter.length) {\r\n                this.filterData = e.item || null;\r\n                this.hideFilterPanel();\r\n                this.smartFilterSer.filterConditionChanged({ conditions: e.filter, controlData: e.item , from: 'panel'});\r\n            } else {\r\n                this.clearColumnFilter(e.item);\r\n            }\r\n        });\r\n\r\n        this.filterPanelRef.clearFilter.subscribe((e: any) => {\r\n            this.clearColumnFilter(e);\r\n        });\r\n    }\r\n\r\n    @HostListener('click', ['$event'])\r\n    onClick($event) {\r\n        $event.stopPropagation();\r\n        if (this.disabled) {\r\n            return;\r\n        }\r\n        this.showFilterPanel($event);\r\n        return false;\r\n    }\r\n\r\n    onSort($event, order) {\r\n        $event.stopPropagation();\r\n\r\n        if (this.column.order === order) {\r\n            this.column.order = '';\r\n        } else {\r\n            this.column.order = order;\r\n        }\r\n\r\n        const sortName = this.dg.sortName;\r\n        const sortOrder = this.dg.sortOrder;\r\n        let sortFields = [];\r\n        let sortOrders = [];\r\n        if (sortName) {\r\n            sortFields = sortName.split(',');\r\n            sortOrders = sortOrder.split(',');\r\n        }\r\n\r\n        let newOrder =  this.column.order;\r\n        const i = sortFields.findIndex(n => n === this.column.field);\r\n        if (i >= 0) {\r\n            if (newOrder === '') {\r\n                newOrder = undefined;\r\n                sortFields.splice(i, 1);\r\n                sortOrders.splice(i, 1);\r\n            } else {\r\n                sortOrders[i] = newOrder;\r\n            }\r\n        } else {\r\n            if (this.dg.multiSort) {\r\n                sortFields.push(this.column.field);\r\n                sortOrders.push(newOrder);\r\n            } else {\r\n                sortFields = [this.column.field];\r\n                sortOrders = [newOrder];\r\n            }\r\n        }\r\n\r\n        this.hideFilterPanel();\r\n\r\n\r\n        this.dg.sortName = sortFields.join(',');\r\n        this.dg.sortOrder = sortOrders.join(',');\r\n        this.dg.dfs.setSortInfo(this.dg.sortName, this.dg.sortOrder);\r\n\r\n        this.dg.beforeSortColumn(this.dg.sortName, this.dg.sortOrder, this.dg).subscribe(() => {\r\n            this.dg.onColumnSorted();\r\n        });\r\n    }\r\n}\r\n","import { LocaleModule } from '@farris/ui-locale';\r\nimport { NgModule } from '@angular/core';\r\nimport { FilterPanelModule, FilterPanelComponent } from '@farris/ui-filter-panel';\r\nimport { DatagridSmartFilterComponent } from './datagrid-smart-filter.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        DatagridSmartFilterComponent\r\n    ],\r\n    imports: [\r\n        FilterPanelModule,\r\n        LocaleModule.forRoot(),\r\n    ],\r\n    exports: [\r\n        DatagridSmartFilterComponent\r\n    ]\r\n})\r\nexport class DatagridSmartFilterModule { }\r\n","import { DatagridComponent } from './../datagrid.component';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { Pipe, PipeTransform, Injector, Optional, ElementRef, LOCALE_ID } from '@angular/core';\r\nimport { Utils } from './utils';\r\nimport { ColumnFormatService } from '@farris/ui-common/column';\r\nimport { DataColumn } from '../types/data-column';\r\n\r\n@Pipe({name: 'formatCellData', pure: false})\r\nexport class FormatCellDataPipe implements PipeTransform {\r\n\r\n    private localeService: LocaleService;\r\n    private dataGrid: DatagridComponent;\r\n    private elRef: ElementRef;\r\n    private localeId = 'ZH-CHS';\r\n    constructor(private cfs: ColumnFormatService, @Optional() private injector?: Injector) {\r\n        this.localeId = this.injector.get(LOCALE_ID);\r\n    }\r\n\r\n    transform(col: any, rowData: any, groupFooter = false, footer = false): any {\r\n        if (rowData && col && col.field) {\r\n            const value = Utils.getValue(col.field, rowData);\r\n            if (col.editor && col.editor.options && col.editor.options.isPassword && !col.formatter) {\r\n                return  value ? '******' : '';\r\n            }\r\n\r\n            let formatterFn = col.formatter;\r\n            if (groupFooter) {\r\n                formatterFn = col.groupFooter ? col.groupFooter.formatter : undefined;\r\n            } else if (footer) {\r\n                formatterFn = col.footer ? col.footer.formatter : undefined;\r\n                if (typeof formatterFn === 'object') {\r\n                    if (!formatterFn.options) {\r\n                        const opts = { type: formatterFn.type, options: formatterFn };\r\n                        formatterFn = opts;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (!formatterFn) {\r\n                let resoultStr = value;\r\n                if (col.isMultilingualField) {\r\n                    resoultStr = this.getMultilingualValue(value);\r\n                } else {\r\n                    if (value !== null && value !== undefined && value !== '0' && typeof value === 'string') {\r\n                        if (value.indexOf('\\n') > -1) {\r\n                            // return value.replace(/\\n/g, '<br>');\r\n                            this.getDatagridInstance();\r\n                            if (this.dataGrid && this.dataGrid.nowrap) {\r\n                                resoultStr = value.replace(/\\n/g, ' ');\r\n                            }\r\n                        }\r\n                    }\r\n                    // value.replace(/ /g, '&ensp;');\r\n                }\r\n                return this.setPlaceHolderWhenEnableEditCellStyle(col, resoultStr, rowData, groupFooter || footer);\r\n            } else {\r\n                if (formatterFn) {\r\n                    if ( formatterFn.type === 'number') {\r\n                        if (!formatterFn.options || !Object.keys(formatterFn.options).length ) {\r\n                            formatterFn.options = {\r\n                                thousand: ',',\r\n                                precision: 2\r\n                            };\r\n                        }\r\n                    }\r\n                    if ( formatterFn.type === 'datetime') {\r\n                        if (formatterFn.options) {\r\n                            if (col.editor && col.editor.options) {\r\n                                const { dateRange, dateRangeDatesDelimiter } = col.editor.options;\r\n                                formatterFn.options = Object.assign({ dateRange, dateRangeDatesDelimiter }, formatterFn.options);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (formatterFn.type === 'timeago') {\r\n                        if (formatterFn.options ) {\r\n                            formatterFn.options.locale = formatterFn.options.locale || this.localeId;\r\n                        } else {\r\n                            formatterFn.options = {\r\n                                locale: this.localeId\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n\r\n                this.getDatagridInstance();\r\n                if (this.dataGrid) {\r\n                    const r = this.cfs.format(value, rowData, formatterFn, { utils: this.dataGrid.commonUtils, locale: this.localeId });\r\n                    return this.setPlaceHolderWhenEnableEditCellStyle(col, r, rowData, groupFooter || footer);\r\n                } else {\r\n                    return this.cfs.format(value, rowData, formatterFn, {locale: this.localeId });\r\n                }\r\n            }\r\n        }\r\n\r\n        return '';\r\n    }\r\n\r\n    // è·åå¤è¯­æ°æ®\r\n    private getMultilingualValue(valObj) {\r\n        if (valObj && typeof valObj === 'object' && Object.keys(valObj).length > 0) {\r\n            if (this.injector) {\r\n                this.localeService = this.injector.get(LocaleService);\r\n            }\r\n            if (this.localeService) {\r\n                const localeId = this.localeService.localeId;\r\n                return Utils.getMultilingualValue(valObj, localeId);\r\n            } else {\r\n                return valObj['zh-CHS'];\r\n            }\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    // å¯ç¨æ è¯å¯ç¼è¾ååæ ¼æ¶ï¼åå®¹ä¸ºç©ºæ¶è®¾ç½®æç¤ºè¯­\r\n    private setPlaceHolderWhenEnableEditCellStyle(col, val, rowData, isFooter) {\r\n        this.getDatagridInstance();\r\n        if (this.dataGrid) {\r\n            /*\r\n            if (!this.dataGrid.editable || (val !== null && val !== undefined && val !== '') || isFooter || this.cellIsReadOnly(col, rowData)) {\r\n                if (this.elRef) {\r\n                    const span = this.elRef.nativeElement.querySelector('.cell-text-box');\r\n                    if (span && span.className.indexOf('cell-empty') > -1) {\r\n                        span.className = span.className.replace('cell-empty', ' ');\r\n                    }\r\n                }\r\n\r\n                return val;\r\n            }\r\n*/\r\n            if (this.dataGrid.enableEditCellStyle ) {\r\n\r\n                if (!this.dataGrid.editable || (val !== null && val !== undefined && val !== '') || isFooter || this.cellIsReadOnly(col, rowData)) {\r\n                    if (this.elRef) {\r\n                        const span = this.elRef.nativeElement.querySelector('.cell-text-box');\r\n                        if (span && span.className.indexOf('cell-empty') > -1) {\r\n                            span.className = span.className.replace('cell-empty', ' ');\r\n                        }\r\n                    }\r\n    \r\n                    return val;\r\n                }\r\n\r\n\r\n                if (this.elRef) {\r\n                    const span = this.elRef.nativeElement.querySelector('.cell-text-box');\r\n                    if (span && span.className.indexOf('cell-empty') === -1) {\r\n                        span.className = span.className + ' cell-empty';\r\n                    }\r\n                }\r\n                return Utils.getWhenEmptyText(col, this.localeId);\r\n            }\r\n\r\n            return val;\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    private getDatagridInstance() {\r\n        if (!this.dataGrid) {\r\n            this.dataGrid = this.injector.get(DatagridComponent, null);\r\n        }\r\n\r\n        if (!this.elRef) {\r\n            this.elRef = this.injector.get(ElementRef, null);\r\n        }\r\n    }\r\n\r\n    cellIsReadOnly(col: DataColumn, rowData) {\r\n        return this.dataGrid.cellIsReadOnly(col, rowData);\r\n    }\r\n}\r\n","\r\nimport { first, switchMap, delay, debounceTime, tap, takeUntil, filter } from 'rxjs/operators';\r\nimport { Subscription, interval, of, Subject } from 'rxjs';\r\nimport ResizeObserver from 'resize-observer-polyfill';\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-12 07:47:12\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-11-26 10:21:25\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport {\r\n    Component, OnInit, Input, ViewChild, Renderer2,\r\n    ElementRef, OnDestroy, ChangeDetectorRef, AfterViewInit, AfterViewChecked,\r\n    OnChanges, SimpleChanges, ChangeDetectionStrategy, NgZone, Injector, forwardRef, Inject, Optional, ApplicationRef, HostListener, Output, EventEmitter\r\n} from '@angular/core';\r\n\r\nimport { DatagridFacadeService } from '../../services/datagrid-facade.service';\r\nimport { ScrollbarDirective } from '../../scrollbar/scrollbar.directive';\r\nimport { ColumnGroup } from '../../types';\r\nimport { SelectedRow, DataResult, ROW_INDEX_FIELD, IS_GROUP_ROW_FIELD, GROUP_ROW_FIELD, IS_GROUP_FOOTER_ROW_FIELD } from '../../services/state';\r\nimport { SCROLL_X_ACTION, SCROLL_Y_ACTION, SCROLL_X_REACH_START_ACTION, SCROLL_X_REACH_END_ACTION, TR_PREFIX } from '../../types/constant';\r\nimport { DatagridService } from '../../services/datagrid.service';\r\nimport { DatagridComponent } from '../../datagrid.component';\r\nimport { FormatCellDataPipe } from '../../utils/format-cell-data.pipe';\r\nimport { ColumnFormatService } from '@farris/ui-common/column';\r\nimport { ContextMenuItem } from '@farris/ui-context-menu';\r\nimport { Utils } from '../../utils/utils';\r\n\r\n@Component({\r\n    selector: 'datagrid-body',\r\n    templateUrl: './body.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DatagridBodyComponent implements OnInit, OnDestroy, OnChanges, AfterViewInit, AfterViewChecked {\r\n    // èªå¨é«åº¦æ¶ï¼ç¦ç¨çºµåæ»å¨æ¡\r\n    psConfig = { swipeEasing: false, minScrollbarLength: 15, handlers: ['click-rail', 'drag-thumb', 'wheel', 'touch'], suppressScrollY: this.dg.autoHeight && this.dg.maxHeight ? false: this.dg.autoHeight };\r\n\r\n    top: number;\r\n    height: number;\r\n    width: number;\r\n    colsWidth: number;\r\n    totalWidth: number;\r\n    leftFixedWidth: number;\r\n    rightFixedWidth: number;\r\n    rowHeight: number;\r\n    bodyStyle: any;\r\n    scrollTop = 0;\r\n    scrollLeft = 0;\r\n    deltaTopHeight = 0;\r\n    // wheelHeight = 0;\r\n    wheelWidth = 0;\r\n    private _fixedRightScrollLeft = 0;\r\n    get fixedRightScrollLeft() {\r\n        return this._fixedRightScrollLeft;\r\n    }\r\n    set fixedRightScrollLeft(val) {\r\n        this._fixedRightScrollLeft = val;\r\n    }\r\n\r\n    maxScrollLeft = 0;\r\n    showRightShadow = false;\r\n    @Input() footerHeight = 0;\r\n    @Input() canvasWidth;\r\n    @Input() columnsGroup: ColumnGroup;\r\n    // èæå è½½\r\n    @Input() topHideHeight = 0;\r\n    @Input() bottomHideHeight = 0;\r\n\r\n    @Input() startRowIndex = 0;\r\n    @Input() data: any;\r\n\r\n    @Output() dataChange = new EventEmitter();\r\n\r\n    @Input() scrollBarMode = 'auto';\r\n    @Input() contextMenuItems: ContextMenuItem[];\r\n\r\n    @Input() checkedRows = [];\r\n\r\n    /** æ§è½ä¼åçï¼é»è®¤ä¸º false */\r\n    @Input() fast = false;\r\n\r\n\r\n    @ViewChild('ps') ps?: ScrollbarDirective;\r\n    @ViewChild('mainRows') tableRowsCmp: any;\r\n    @ViewChild('rightRows') rightRowsCmp: any;\r\n    @ViewChild('fixedLeft') fixedLeftEl: ElementRef;\r\n    @ViewChild('fixedRight') fixedRightEl: ElementRef;\r\n    @ViewChild('main') mainArea: ElementRef;\r\n    @ViewChild('viewScrollContainer') viewScrollContainer: ElementRef;\r\n\r\n\r\n    visibleContextMenus = [];\r\n\r\n    currentRowId = undefined;\r\n\r\n    private _hoverRowIndex = -1;\r\n    get hoverRowIndex(): number {\r\n        return this._hoverRowIndex;\r\n    }\r\n    set hoverRowIndex(rowIdx: number) {\r\n        this._hoverRowIndex = rowIdx;\r\n        this.cd.detectChanges();\r\n    }\r\n\r\n    get selectedRows() {\r\n        return this.dg.selections;\r\n    }\r\n\r\n    private gridSizeSubscribe: Subscription;\r\n    private columnResizeSubscribe: Subscription;\r\n    private onDataSourceChangeSubscribe: Subscription;\r\n    private selectRowSubscribe: Subscription;\r\n    private unselectRowSubscribe: Subscription;\r\n    private selectAllSubscribe: Subscription;\r\n    private checkRowSubscribe: Subscription;\r\n    private clearSelectionsSubscribe: Subscription;\r\n    private checkAllSubscribe: Subscription;\r\n    private uncheckRowSubscribe: Subscription;\r\n    private clearCheckedsSubscribe: Subscription;\r\n\r\n    private subscriptions = [];\r\n\r\n    public dfs: DatagridFacadeService;\r\n    public dgs: DatagridService;\r\n    public ngZone: NgZone;\r\n    public render: Renderer2;\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    private viewportH;\r\n    viewportW;\r\n    canvasHeight;\r\n    private minRowBuffer = 3;\r\n    private vScrollDir = 1;\r\n    private rowsCache = {};\r\n    private lastRenderedScrollTop = 0;\r\n    private lastRenderedScrollLeft = 0;\r\n    prevScrollTop = 0;\r\n    prevScrollLeft = 0;\r\n    rows = [];\r\n    blankTopHeight = 0;\r\n    blankBottomHeight = 0;\r\n\r\n    //////////////////////////////////////////////////////////////////////////\r\n\r\n    get scrollbarXHeight() {\r\n        if (this.dg && this.ps && this.ps.instance) {\r\n            const h = this.dg.scrollBarShowMode === 'allways' && this.ps.instance['scrollbarXActive'] ? 22 : 0;\r\n            if (this.ps.instance['scrollbarYActive'] && h) {\r\n                return h + 18; // + (this.dg.showScrollArrow && this.ps.instance['scrollbarYActive'] ? 18 : 0);\r\n            }\r\n\r\n        }\r\n    }\r\n    get scrollbarYWidth() {\r\n        if (this.dg && this.ps && this.ps.instance) {\r\n            return this.dg.scrollBarShowMode === 'allways' && this.ps.instance['scrollbarYActive'] && this.showRightShadow ? 18 : 0;\r\n        }\r\n    }\r\n\r\n    cellContentFormatter: FormatCellDataPipe = null;\r\n\r\n    // å½å¯ç¨å¤éä¸åè®¸å¤éä¸­ï¼åè¡¨ä¸è½ç¼è¾æ¶ï¼åéä¸­åç¦æ­¢è§¦åbody çclick äºä»¶\r\n    private __triggerBodyClickEvent = true;\r\n    private destroy$ = new Subject();\r\n    private _onMouseClick = null;\r\n    private _scrollTimer: any = 0;\r\n    private _scrollXTimer: any = 0;\r\n    private ro: ResizeObserver | null = null;\r\n    private resizeObserverTimer: any = 0;\r\n    constructor(\r\n        private injector: Injector,\r\n        private app: ApplicationRef,\r\n        @Optional() public dg: DatagridComponent,\r\n        private cd: ChangeDetectorRef, private el: ElementRef\r\n    ) {\r\n        this.dfs = this.injector.get(DatagridFacadeService);\r\n        this.dgs = this.injector.get(DatagridService);\r\n        this.ngZone = this.injector.get(NgZone);\r\n        this.render = this.injector.get(Renderer2);\r\n\r\n        const columnFormatService = this.injector.get(ColumnFormatService);\r\n        this.cellContentFormatter = new FormatCellDataPipe(columnFormatService, this.injector);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n        this.listenSubjects();\r\n        this.dg.scrollInstance = this.ps;\r\n        const s1 = this.dgs.showGridHeader.subscribe(headerHeight => {\r\n            this.updateContainerSize(headerHeight);\r\n        });\r\n        this.subscriptions.push(s1);\r\n\r\n        const s10 = this.dgs.footerPositionChanged.subscribe(() => {\r\n            this.updateContainerSize();\r\n        });\r\n        this.subscriptions.push(s10);\r\n\r\n        const s2 = this.dgs.rowHeightChanged.subscribe(() => {\r\n            this.cd.detectChanges();\r\n        });\r\n        this.subscriptions.push(s2);\r\n\r\n        const s3 = this.dfs.clientSort$.subscribe(() => {\r\n            this.checkScrollbarPosition(true);\r\n            this.cd.detectChanges();\r\n            // this.dg.columnSorted.emit();\r\n        });\r\n        this.subscriptions.push(s3);\r\n       \r\n        const s5 = this.dg.dgs.columnsChanged.pipe(\r\n            delay(50)\r\n        ).subscribe((e: any) => {\r\n            if (e && e.scrollToLeft) {\r\n                this.ps.elementRef.nativeElement.scrollTo(0, 0);\r\n                this.ps.scrollToLeft(0, 100);\r\n            }\r\n        });\r\n        this.subscriptions.push(s5);\r\n       \r\n        this.viewScrollContainer.nativeElement.addEventListener('click', this._onMouseClick = (e) => {\r\n            this.onMouseClick(e);\r\n        });\r\n    }\r\n\r\n    private updateContainerSize(headerHeight?: any) {\r\n        const hh = headerHeight || this.dg.realHeaderHeight;\r\n        this.setPositionTop(hh);\r\n        this.height = this.dg.height - this.top;\r\n        this.bodyStyle = this.getBodyStyle();\r\n        this.cd.detectChanges();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.data && !changes.data.isFirstChange()) {\r\n            this.bodyStyle = this.getBodyStyle();\r\n            this.dfs.setCurrentPageData(changes.data.currentValue);\r\n\r\n            const isDiffrentDataSource = !!changes.data.currentValue.filter(n => !n['__group__']).map(n => n.id).filter(n => {\r\n                return !changes.data.previousValue.filter(n => !n['__group__']).find(p => p.id === n)\r\n            }).length;\r\n\r\n            const isSameLength = changes.data.currentValue.filter(n => !n['__group__']).length >= changes.data.previousValue.filter(n => !n['__group__']).length;\r\n            this.onDataChanged(isSameLength, isDiffrentDataSource);\r\n\r\n            if (!changes.data.currentValue || !changes.data.currentValue.length) {\r\n                setTimeout(() => {\r\n                    this.setPositionTop(this.dg.realHeaderHeight);\r\n                });\r\n            }\r\n        }\r\n\r\n        if (changes.footerHeight !== undefined && !changes.footerHeight.isFirstChange()) {\r\n            this.bodyStyle = this.getBodyStyle();\r\n        }\r\n\r\n        if (changes.scrollBarMode !== undefined && !changes.scrollBarMode.isFirstChange()) {\r\n            if (this.ps && this.ps.instance && this.scrollBarMode === 'allways' && this.ps.instance.scrollbarYActive) {\r\n                this.rightFixedWidth += this.showRightShadow ? 18 : 0;\r\n            } else {\r\n                this.rightFixedWidth = this.columnsGroup.rightFixedWidth;\r\n            }\r\n             \r\n            if (this.dg.scrollBarShowMode === 'allways' && this.ps && this.ps.instance && this.ps.instance.scrollbarXActive) {\r\n                this.blankBottomHeight += 22;\r\n            }\r\n        }\r\n\r\n        if (changes.showScrollArrow && !changes.showScrollArrow.isFirstChange()) {\r\n            this.ps && this.ps.update();\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n        this.cellContentFormatter = null;\r\n        this.dg.scrollInstance = null;\r\n        this.destroySubscriptions();\r\n        this.viewScrollContainer.nativeElement.removeEventListener('click', this._onMouseClick);\r\n\r\n        if (this.ro) {\r\n            this.ro.unobserve(this.viewScrollContainer.nativeElement);\r\n            this.ro.disconnect();\r\n        }\r\n\r\n        if (this.resizeObserverTimer) {\r\n            clearTimeout(this.resizeObserverTimer);\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.ro = new ResizeObserver((e) => {\r\n            if (this.viewScrollContainer.nativeElement.offsetParent) {\r\n                if (this.resizeObserverTimer) {\r\n                    clearTimeout(this.resizeObserverTimer);\r\n                }\r\n                this.resizeObserverTimer = setTimeout(() => {\r\n                    this.updateCanvasHeight();\r\n                    if (this.scrollBarMode === 'allways') {\r\n                        this.ps.update();\r\n                    }\r\n                    this.cd.detectChanges();\r\n                    this.dgs.scrollbarUpdate.emit({ scrollbarRef: this.ps.instance, rightWidth: this.rightFixedWidth });\r\n                }, 100);\r\n            }\r\n        });\r\n\r\n        this.ro.observe(this.viewScrollContainer.nativeElement);\r\n    }\r\n\r\n    ngAfterViewChecked() {\r\n    }\r\n\r\n    private setPositionTop(headerHeight: number) {\r\n        this.top = headerHeight;\r\n        \r\n        if ((this.dg.enableFilterRow || this.dg.enableSmartFilter) && this.dg.showFilterBar) {\r\n            this.top += this.dg.filterBarHeight;\r\n        }\r\n\r\n        if (this.dg.showRowGroupPanel) {\r\n            this.top += this.dg.rowGroupPanelHeight;\r\n        }\r\n\r\n        if (this.dg.showFooter && (this.dg.footerPosition === 'top' || this.dg.footerPosition === 'both')) {\r\n            // headerHeight å·²åæ¬è¿æ»¤è¡çé«åº¦ tfs 542471\r\n            if (this.data && this.data.length) {\r\n                this.top += this.dg.footerHeight;\r\n            }\r\n        }\r\n    }\r\n\r\n    private checkScrollbarPosition(toTop = false) {\r\n        if (!this.dg.data || !this.dg.data.length) {\r\n            return;\r\n        }\r\n        const scrollBar: any = this.ps.instance;\r\n        const scrollElRef = this.ps.elementRef.nativeElement;\r\n        // scrollBar.update();\r\n        const lastScrollLeft = scrollBar ? scrollBar.lastScrollLeft : 0;\r\n        const lastScrollTop = scrollBar ? scrollBar.lastScrollTop : 0;\r\n\r\n        // const lastScrollLeft = this.scrollLeft;\r\n        // const lastScrollTop = this.scrollTop;\r\n\r\n        const scrollTop = scrollElRef.scrollTop;\r\n        const scrollLeft = scrollElRef.scrollLeft;\r\n\r\n        if (!toTop) {\r\n            if (scrollTop != lastScrollTop) {\r\n                this.ps.scrollToTop(lastScrollTop);\r\n                this.dgs.onScrollMove(lastScrollTop, SCROLL_Y_ACTION);\r\n            }\r\n        } else {\r\n            this.ps.scrollToTop();\r\n            this.dgs.onScrollMove(lastScrollTop, SCROLL_Y_ACTION);\r\n        }\r\n\r\n        this.scrollLeft = lastScrollLeft;\r\n        if (scrollLeft != lastScrollLeft) {\r\n            this.ps.scrollToX(lastScrollLeft);\r\n            this.dgs.onScrollMove(lastScrollLeft, SCROLL_X_ACTION);\r\n        } else {\r\n            if (lastScrollLeft) {\r\n                this.dgs.onScrollMove(lastScrollLeft, SCROLL_X_ACTION);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * æ°æ®åçååï¼éæ°å è½½æ°æ®æ¶æ§è¡\r\n     * éç½®æ»å¨æ¡ä½ç½®\r\n     */\r\n    private onDataChanged(isSameLength = true, isDiffrentDataSource = false) {\r\n        this.dg.setPagerHeight();\r\n        this.viewportH = this.getViewPortHeight();\r\n        this.bodyStyle = this.getBodyStyle();\r\n\r\n        /**\r\n         * update:\r\n         * node_modules\\perfect-scrollbar\\types\\perfect-scrollbar.d.ts\r\n         * lastScrollTop: number\r\n         */\r\n        if (this.ps && this.ps.instance && !this.dg.isEditing() && !this.dg.clientFilterChanged && !this.dg.autoHeight ) {\r\n            this.scrollTop = 0;\r\n            this.lastRenderedScrollTop = 0;\r\n            this.ps.scrollToTop();\r\n            this.scrollLeft = 0;\r\n            this.ps.scrollToLeft();\r\n        }\r\n\r\n        this.rowsCache = {};\r\n        const keepscrollPos = () => {\r\n            const scrollInfo = this.dg.dfs.getState().scrollInfo;\r\n            if (scrollInfo ) {\r\n                if (scrollInfo.y) {\r\n                    this.scrollTop = scrollInfo.y;\r\n                    this.dg.scrollInstance.scrollToY(scrollInfo.y);\r\n                    this.dgs.onScrollMove(scrollInfo.y, SCROLL_Y_ACTION);\r\n                }\r\n\r\n                if (scrollInfo.x) {\r\n                    this.scrollLeft = scrollInfo.x;\r\n                    this.dg.scrollInstance.scrollToX(scrollInfo.x);\r\n                    this.dg.dgs.onScrollMove(scrollInfo.x, SCROLL_X_ACTION);\r\n                }\r\n            }\r\n        };\r\n\r\n        if (!this.dg.nowrap || this.dg.autoHeight) {\r\n            this.renderData(false);\r\n            setTimeout(() => {\r\n                this.updateRowHeight();\r\n            }, 100);\r\n        } else {\r\n            if (isSameLength) {\r\n                keepscrollPos();\r\n            }\r\n            this.renderData(false);\r\n            this.ps.update();\r\n        }\r\n       \r\n\r\n        if (isDiffrentDataSource) {\r\n            this.dg.initSelectOrChecked();\r\n        } else {\r\n            this.dg.refreshSelectedData();\r\n        }\r\n        this.dg.clientFilterChanged = false;\r\n        this.dataChange.emit(this.data);\r\n    }\r\n\r\n    private destroySubscriptions() {\r\n        if (this.subscriptions && this.subscriptions.length) {\r\n            this.subscriptions.forEach((sub: Subscription) => {\r\n                if (sub) {\r\n                    sub.unsubscribe();\r\n                    sub = null;\r\n                }\r\n            });\r\n\r\n            this.subscriptions = [];\r\n        }\r\n    }\r\n\r\n    private listenSubjects() {\r\n        this.destroySubscriptions();\r\n\r\n        this.gridSizeSubscribe = this.dfs.gridSize$.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).pipe(\r\n            debounceTime(50)\r\n        ).subscribe(state => {\r\n            if (state) {\r\n                this.dg.setPagerHeight();\r\n                const hh = this.dg.setHeaderHeight();\r\n                this.setPositionTop(hh);\r\n\r\n                this.height = state.height - this.top;\r\n\r\n                const oldWidth = this.width;\r\n                this.width = Math.floor(state.width);\r\n                this.rowHeight = state.rowHeight;\r\n\r\n                if (this.dg.showBorder) {\r\n                    this.width -= 2;\r\n                }\r\n\r\n                this.viewportW = this.width;\r\n                this.viewportH = this.getViewPortHeight();\r\n                this.canvasHeight = this.getCanvasHeight();\r\n\r\n                this.ngZone.runOutsideAngular(() => {\r\n                    this.columnsGroup = state.columnsGroup;\r\n                    this.checkScrollbarPosition();\r\n                    // this.setFixedRightPosition();\r\n                    this.updateColumnSize(state.columnsGroup);\r\n\r\n                    this.dgs.showFixedShadow.emit({ showRightShadow: this.showRightShadow, x: this.fixedRightScrollLeft });\r\n                    this.renderData(false);\r\n                    \r\n                    if (this._scrollXTimer) {\r\n                        clearTimeout(this._scrollXTimer);\r\n                    }\r\n                    if (!this.dg.nowrap || this.dg.autoHeight) {\r\n                        this._scrollXTimer = setTimeout(() => {\r\n                            this.updateRowHeight();\r\n                            this.keepScrollbarPosition(oldWidth);\r\n                        }, 100);\r\n                    } else {\r\n                        this._scrollXTimer = setTimeout(() => {\r\n                            this.keepScrollbarPosition(oldWidth);\r\n                        }, 100);\r\n                    }\r\n                    // this.ps.update();\r\n                });\r\n\r\n                if (this.scrollBarMode === 'allways') {\r\n                    setTimeout(() => {\r\n                        if (!this.dg.showScrollArrow) {\r\n                            this.dgs.scrollbarUpdate.emit({ scrollbarRef: this.ps.instance, rightWidth: this.rightFixedWidth });\r\n                        }\r\n                        this.keepScrollbarPosition(oldWidth);\r\n                    }, 100);\r\n                }\r\n            }\r\n        });\r\n\r\n        this.subscriptions.push(this.gridSizeSubscribe);\r\n\r\n        this.columnResizeSubscribe = this.dfs.columnResize$.subscribe((cg: ColumnGroup) => {\r\n            this.updateColumnSize(cg);\r\n            this.cd.detectChanges();\r\n        });\r\n        this.subscriptions.push(this.columnResizeSubscribe);\r\n\r\n        this.dgs.setSelecedRow.subscribe((r: any) => {\r\n            if (r && r.selected) {\r\n                this.currentRowId = r.id;\r\n            } else {\r\n                this.currentRowId = undefined;\r\n            }\r\n        });\r\n        this.selectRowSubscribe = this.dfs.selectRow$.subscribe((row: SelectedRow) => {\r\n            if (row) {\r\n                this.currentRowId = row.id;\r\n                // 20210817 æ¹åé®ç§»å¨åå·æ°è§å¾ç¶æ\r\n                this.cd.detectChanges();\r\n            }\r\n        });\r\n        this.subscriptions.push(this.selectRowSubscribe);\r\n\r\n        this.unselectRowSubscribe = this.dfs.unSelectRow$.subscribe((prevRow: SelectedRow) => {\r\n            if (prevRow && prevRow.id === this.currentRowId) {\r\n                this.currentRowId = undefined;\r\n                this.dg.selectedRow = null;\r\n            }\r\n\r\n            if (!this.dg.editable && this.dg.multiSelect) {\r\n                this.__triggerBodyClickEvent = this.dg.selectionMode === 'default';\r\n            }\r\n\r\n            this.cd.detectChanges();\r\n        });\r\n        this.subscriptions.push(this.unselectRowSubscribe);\r\n\r\n        this.selectAllSubscribe = this.dfs.selectAll$.subscribe((rows: SelectedRow[]) => {\r\n            this.dg.selectAll.emit(rows);\r\n            this.cd.detectChanges();\r\n        });\r\n        this.subscriptions.push(this.selectAllSubscribe);\r\n\r\n        this.checkRowSubscribe = this.dfs.checkRow$.subscribe((row: SelectedRow) => {\r\n            this.dg.checked.emit(row);\r\n            this.checkedRowsChanged();\r\n            // this.cd.detectChanges();\r\n        });\r\n        this.subscriptions.push(this.checkRowSubscribe);\r\n\r\n        this.clearSelectionsSubscribe = this.dfs.clearSelections$.subscribe(() => {\r\n            this.currentRowId = undefined;\r\n            if (this.dg.checkOnSelect) {\r\n                this.checkedRowsChanged();\r\n            }\r\n            this.dg.unSelectAll.emit();\r\n        });\r\n        this.subscriptions.push(this.clearSelectionsSubscribe);\r\n\r\n        this.uncheckRowSubscribe = this.dfs.unCheckRow$.subscribe((prevRow: SelectedRow) => {\r\n            this.dg.unChecked.emit(prevRow);\r\n            this.checkedRowsChanged();\r\n            // this.cd.detectChanges();\r\n        });\r\n        this.subscriptions.push(this.uncheckRowSubscribe);\r\n\r\n        this.checkAllSubscribe = this.dfs.checkAll$.subscribe((rows: SelectedRow[]) => {\r\n            this.dg.checkAll.emit(rows);\r\n            this.checkedRowsChanged();\r\n            // this.cd.detectChanges();\r\n        });\r\n        this.subscriptions.push(this.checkAllSubscribe);\r\n\r\n        this.clearCheckedsSubscribe = this.dfs.clearCheckeds$.subscribe((rows: SelectedRow[]) => {\r\n            if (this.dg.selectOnCheck) {\r\n                this.currentRowId = undefined;\r\n            }\r\n            this.dg.unCheckAll.emit(rows);\r\n            this.checkedRowsChanged();\r\n            this.cd.detectChanges();\r\n        });\r\n        this.subscriptions.push(this.clearCheckedsSubscribe);\r\n\r\n        this.subscriptions.push(this.dgs.setScrollbarPosition.subscribe(() => {\r\n            this.checkScrollbarPosition();\r\n            this.updateScrollPosition(this.scrollLeft);\r\n        }));\r\n\r\n        this.dgs.columnResized.pipe(\r\n            delay(100)\r\n        ).subscribe((e: any) => {\r\n            if (!this.dg.nowrap ||\r\n                (this.dg.currentCell && this.dg.currentCell.isEditing && this.dg.currentCell.column &&\r\n                    this.dg.currentCell.column.editor && this.dg.currentCell.column.editor.type === 'textarea')) {\r\n                const trdoms = this.dg.dgContainer.nativeElement.querySelectorAll('.f-datagrid-body-row:not(.f-datagrid-footer-row)');\r\n                trdoms.forEach(n => {\r\n                    this.render.setStyle(n, 'height', 'auto');\r\n                });\r\n\r\n                let trID = '';\r\n                if (e) {\r\n                    const rowId = e.id;\r\n                    trID = TR_PREFIX + rowId;\r\n                }\r\n\r\n                this.updateRowHeight(trID);\r\n                // trdoms.forEach(n => n.style.height = '');\r\n            }\r\n\r\n            if (this.dg.headerWrap) {\r\n                this.dg.setHeaderHeight();\r\n                this.dfs.columnResizeEnd();\r\n            }\r\n\r\n        });\r\n\r\n        this.dgs.cellContentWrapChanged.pipe(\r\n            delay(100)\r\n        ).subscribe(() => {\r\n            this.updateRowHeight();\r\n        });\r\n\r\n\r\n        this.dg.dfs.rowUpdate$.subscribe((row: { index: number, data: any }) => {\r\n            if (row && row.data) {\r\n                this.buildCustomCellStyle(row);\r\n            }\r\n        });\r\n\r\n        if (this.dg.groupRows) {\r\n            this.dfs.expandGroupRow.pipe(\r\n                takeUntil(this.destroy$)\r\n            ).subscribe((e: any) => this.groupRowStateChanged(e.data, true));\r\n            this.dfs.collapseGroupRow.pipe(\r\n                takeUntil(this.destroy$)\r\n            ).subscribe((e: any) => this.groupRowStateChanged(e.data, false));\r\n        }\r\n    }\r\n\r\n    private groupRowExpandUpdate(groupRow, isExpand) {\r\n        if (groupRow.rows && groupRow.rows.length) {\r\n            groupRow.rows.forEach(n => {\r\n                this.data.forEach(element => {\r\n                    if (element.id === n.id) {\r\n                        if (!isExpand) {\r\n                            element['__group_visible__'] = isExpand;\r\n                        } else {\r\n                            element['__group_visible__'] = groupRow.expanded;\r\n                        }\r\n\r\n                        if (element.rows && element.rows.length) {\r\n                            this.groupRowExpandUpdate(element, isExpand);\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n\r\n    private groupRowStateChanged(rowData, expand: boolean) {\r\n        if (this.dg.virtualized) {\r\n            const gr = this.data.find(n => n.id === rowData.id);\r\n            this.groupRowExpandUpdate(gr, expand);\r\n            this.renderData(false);\r\n        } else {\r\n            this.getCanvasHeight();\r\n        }\r\n\r\n        if (this['_psUpdateTimer_']) {\r\n            clearTimeout(this['_psUpdateTimer_']);\r\n        }\r\n\r\n        this['_psUpdateTimer_'] = setTimeout(() => {\r\n            this.ps.update();\r\n            this.cd.detectChanges();\r\n        }, 100)\r\n    }\r\n\r\n    private keepScrollbarPosition(oldWidth: number) {\r\n        if (!this.cd['destroyed']) {\r\n            this.cd.detectChanges();\r\n        }\r\n\r\n        this.ps.update();\r\n\r\n        if (!this.ps.instance) {\r\n            return;   \r\n        }\r\n\r\n        const scrollReach = this.ps.instance.reach;\r\n        let t = this.width - oldWidth;\r\n        let scrollLeft = t;\r\n        if (scrollReach.x === 'start' || !this.ps.instance.lastScrollLeft) {\r\n            scrollLeft = 0;\r\n            this.ps.scrollToX(0);\r\n        } else if (scrollReach.x === 'end') {\r\n            this.ps.scrollToRight(0);\r\n            scrollLeft = this.ps.elementRef.nativeElement.scrollLeft;\r\n        } else {\r\n            scrollLeft = this.ps.instance.lastScrollLeft - t;\r\n            this.ps.elementRef.nativeElement.scrollLeft = scrollLeft;\r\n        }\r\n\r\n        this.updateScrollPosition(scrollLeft);\r\n\r\n    }\r\n\r\n\r\n    private updateColumnSize(cg: ColumnGroup) {\r\n        if (cg) {\r\n            this.columnsGroup = cg;\r\n            this.rightFixedWidth = this.columnsGroup.rightFixedWidth;\r\n            this.leftFixedWidth = this.columnsGroup.leftFixedWidth;\r\n            this.colsWidth = this.columnsGroup.normalWidth;\r\n\r\n            this.scrollLeft = this.ps.elementRef.nativeElement.scrollLeft;\r\n            this.maxScrollLeft = this.colsWidth + this.leftFixedWidth;\r\n            this.fixedRightScrollLeft = this.maxScrollLeft;\r\n            // grid å®¹å¨å®½åº¦\r\n            const dgContainerWidth = this.dg.dgContainer.nativeElement.offsetWidth;\r\n            // ææåå®½ä¹å\r\n            const allColsWidth = Math.floor(this.columnsGroup.totalWidth);\r\n\r\n            this.bodyStyle = this.getBodyStyle();\r\n            if (dgContainerWidth > allColsWidth || dgContainerWidth === allColsWidth) {\r\n                this.showRightShadow = false;\r\n            } else {\r\n                this.showRightShadow = true;\r\n                // å³ä¾§åºå®åçä½ç½®\r\n                this.fixedRightScrollLeft = this.width  + this.scrollLeft;\r\n            }\r\n\r\n\r\n            if (this.ps && this.ps.instance && this.dg.scrollBarShowMode === 'allways' && this.ps.instance.scrollbarYActive) {\r\n                if (this.showRightShadow) {\r\n                    this.rightFixedWidth += 18;\r\n                    this.fixedRightScrollLeft = this.fixedRightScrollLeft - this.rightFixedWidth;\r\n                } else {\r\n                    if (this.canvasWidth > this.totalWidth && this.canvasWidth - this.totalWidth  < 18) {\r\n                        this.rightFixedWidth += 18;\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.totalWidth = this.columnsGroup.totalWidth;\r\n            if (this.scrollBarMode === 'allways' && !this.rightRowsCmp && !this.dg.useControlPanel) {\r\n                this.totalWidth += 18;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n    // private setFixedRightPosition() {\r\n    //     this.rightFixedWidth = this.columnsGroup.rightFixedWidth;\r\n    //     this.leftFixedWidth = this.columnsGroup.leftFixedWidth;\r\n    //     this.colsWidth = this.columnsGroup.normalWidth;\r\n\r\n    //     this.scrollLeft = this.ps.elementRef.nativeElement.scrollLeft;\r\n    //     this.maxScrollLeft = this.colsWidth + this.leftFixedWidth;\r\n    //     // grid å®¹å¨å®½åº¦\r\n    //     const dgContainerWidth = this.dg.dgContainer.nativeElement.offsetWidth;\r\n    //     // ææåå®½ä¹å\r\n    //     const allColsWidth = Math.floor(this.columnsGroup.totalWidth);\r\n\r\n\r\n    //     this.bodyStyle = this.getBodyStyle();\r\n    //     if (dgContainerWidth > allColsWidth || dgContainerWidth === allColsWidth) {\r\n    //         this.showRightShadow = false;\r\n    //         this.fixedRightScrollLeft = this.maxScrollLeft;\r\n    //     } else {\r\n    //         this.showRightShadow = true;\r\n    //         // å³ä¾§åºå®åçä½ç½®\r\n    //         this.fixedRightScrollLeft = this.width - this.rightFixedWidth + this.scrollLeft;\r\n    //     }\r\n    // }\r\n\r\n    private buildCustomCellStyle(row: { index: number, data: any }) {\r\n\r\n        let rightTrs = [];\r\n        let leftTrs = [];\r\n        if (this.fixedRightEl) {\r\n            rightTrs = this.fixedRightEl.nativeElement.querySelectorAll('tr');\r\n        }\r\n\r\n        if (this.fixedLeftEl) {\r\n            leftTrs = this.fixedLeftEl.nativeElement.querySelectorAll('.fixed-left-row');\r\n        }\r\n\r\n        const trs = this.mainArea.nativeElement.querySelectorAll('tr.f-datagrid-body-row');\r\n\r\n        const updateCellStyle = (arr, col, style) => {\r\n            if (arr.length) {\r\n                const td = arr[row.index].querySelector(`[field=\"${col.field}\"]`);\r\n                if (td) {\r\n                    this.dg.renderCustomStyle(style, td);\r\n                }\r\n            }\r\n        };\r\n\r\n        this.dg.flatColumns.forEach(col => {\r\n            if (col.styler) {\r\n                const _rd = row.data;\r\n                const val = Utils.getValue(col.field, _rd);\r\n                const cs = col.styler(val, _rd, row.index);\r\n                if (cs && Object.keys(cs).length) {\r\n                    updateCellStyle(leftTrs, col, cs);\r\n                    updateCellStyle(rightTrs, col, cs);\r\n                    updateCellStyle(trs, col, cs);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private checkedRowsChanged() {\r\n        this.dgs.onCheckedRowsCountChange();\r\n        const checkedRows = this.dg.checkeds;\r\n        this.dg.checkValues = checkedRows.map(r => r.id);\r\n        this.dg.checkValuesChange.emit(this.dg.checkValues);\r\n        this.dg.checkedChange.emit(checkedRows);\r\n    }\r\n\r\n    private getTrDomHeight() {\r\n        const list = [];\r\n        let rightTrs = [];\r\n        let leftTrs = [];\r\n        let trdoms = [];\r\n        if (this.fixedRightEl) {\r\n            rightTrs = this.fixedRightEl.nativeElement.querySelectorAll('tr');\r\n        }\r\n\r\n        if (this.fixedLeftEl) {\r\n            leftTrs = this.fixedLeftEl.nativeElement.querySelectorAll('.fixed-left-row');\r\n        }\r\n\r\n        if (this.mainArea) {\r\n            trdoms = this.mainArea.nativeElement.querySelectorAll('tr.f-datagrid-body-row');\r\n        }\r\n        trdoms.forEach((tr, i) => {\r\n            let t1 = 0;\r\n            const t2 = Math.ceil(tr.offsetHeight);\r\n            let t3 = 0;\r\n            if (leftTrs && leftTrs.length) {\r\n                t1 = Math.ceil(leftTrs[i].offsetHeight);\r\n            }\r\n\r\n            if (rightTrs && rightTrs.length) {\r\n                t3 = Math.ceil(rightTrs[i].offsetHeight);\r\n            }\r\n\r\n            const _h = Math.max(t1, t2, t3, this.dg.rowHeight);\r\n            list.push(_h);\r\n        });\r\n        return list;\r\n    }\r\n    /** åè®¸æ°æ®æè¡æ¶ï¼è®¡ç®è¡å·çè¡é« */\r\n    updateRowHeight(trDomId = null) {\r\n\r\n        if (this.fast) {\r\n            return;\r\n        }\r\n\r\n\r\n        if (!this.mainArea) {\r\n            return;\r\n        }\r\n\r\n        const dgBody = this.el.nativeElement.querySelector('div.f-datagrid-body');\r\n        if (dgBody) {\r\n            if (!this.dg.nowrap || this.dg.autoHeight) {\r\n                this.render.addClass(dgBody, 'data-wrap');\r\n            } else {\r\n                this.render.removeClass(dgBody, 'data-wrap');\r\n            }\r\n        }\r\n\r\n        let cssTextArr = [];\r\n\r\n        if (!trDomId) {\r\n            this.rows.forEach((r, i) => {\r\n                const rowId = this.dfs.primaryId(r);\r\n                const trID = TR_PREFIX + rowId;\r\n                const leftTrId = trID + '_fixedleft';\r\n                const rightTrId = trID + '_fixedright';\r\n\r\n                if (!this.dg.nowrap || this.dg.autoHeight) {\r\n                    const list = this.getTrDomHeight();\r\n                    const h = list[i];\r\n\r\n                    cssTextArr.push(`${this.dg.customStyleKey()} .f-datagrid-body.data-wrap #${leftTrId}{ height: ${h}px }`);\r\n                    cssTextArr.push(`${this.dg.customStyleKey()} .f-datagrid-body.data-wrap #${trID}{ height: ${h}px }`);\r\n                    cssTextArr.push(`${this.dg.customStyleKey()} .f-datagrid-body.data-wrap #${rightTrId}{ height: ${h}px }`);\r\n                } else {\r\n                    // cssTextArr.push(`${this.dg.customStyleKey()} .f-datagrid-body #${leftTrId}{ height: ${list[i]}px }`);\r\n                    // cssTextArr.push(`${this.dg.customStyleKey()} .f-datagrid-body #${trID}{ height: ${list[i]}px }`);\r\n                    // cssTextArr.push(`${this.dg.customStyleKey()} .f-datagrid-body #${rightTrId}{ height: ${list[i]}px }`);\r\n                    const key1 = `${this.dg.customStyleKey()} .f-datagrid-body #${leftTrId}`;\r\n                    const key2 = `${this.dg.customStyleKey()} .f-datagrid-body #${trID}`;\r\n                    const key3 = `${this.dg.customStyleKey()} .f-datagrid-body #${rightTrId}`;\r\n\r\n                    this.dgs.removeCssRule(key1);\r\n                    this.dgs.removeCssRule(key2);\r\n                    this.dgs.removeCssRule(key3);\r\n\r\n                }\r\n            });\r\n\r\n            this.dgs.appendCssRules(cssTextArr);\r\n        } else {\r\n            cssTextArr = [];\r\n            const domSel = '#' + trDomId;\r\n            const _arr = [];\r\n            if (this.fixedRightEl) {\r\n                const rtr = this.fixedRightEl.nativeElement.querySelector(domSel);\r\n                if (rtr) {\r\n                    _arr.push(Math.ceil(rtr.offsetHeight));\r\n                }\r\n            }\r\n\r\n            if (this.fixedLeftEl) {\r\n                const ltr = this.fixedLeftEl.nativeElement.querySelector(domSel);\r\n                if (ltr) {\r\n                    _arr.push(Math.ceil(ltr.offsetHeight));\r\n                }\r\n            }\r\n\r\n            if (this.mainArea) {\r\n                const tr = this.mainArea.nativeElement.querySelector(domSel);\r\n                if (tr) {\r\n                    _arr.push(Math.ceil(tr.offsetHeight));\r\n                }\r\n            }\r\n\r\n            const _h = Math.max(..._arr);\r\n\r\n            const leftTrId = trDomId + '_fixedleft';\r\n            const rightTrId = trDomId + '_fixedright';\r\n            if (!this.dg.nowrap || this.dg.autoHeight) {\r\n                cssTextArr.push(`${this.dg.customStyleKey()} .f-datagrid-body.data-wrap #${leftTrId}{ height: ${_h}px;}`);\r\n                cssTextArr.push(`${this.dg.customStyleKey()} .f-datagrid-body.data-wrap #${trDomId}{ height: ${_h}px;}`);\r\n                cssTextArr.push(`${this.dg.customStyleKey()} .f-datagrid-body.data-wrap #${rightTrId}{ height: ${_h}px;}`);\r\n            } else {\r\n                cssTextArr.push(`${this.dg.customStyleKey()} .f-datagrid-body #${leftTrId}{ height: ${_h}px }`);\r\n                cssTextArr.push(`${this.dg.customStyleKey()} .f-datagrid-body #${trDomId}{ height: ${_h}px }`);\r\n                cssTextArr.push(`${this.dg.customStyleKey()} .f-datagrid-body #${rightTrId}{ height: ${_h}px }`);\r\n            }\r\n\r\n            this.dgs.appendCssRules(cssTextArr);\r\n        }\r\n\r\n        this.updateCanvasHeight();\r\n\r\n        // ç§»é¤height: auto\r\n        const trdoms = this.dg.dgContainer.nativeElement.querySelectorAll('.f-datagrid-body-row:not(f-datagrid-footer-row)');\r\n        trdoms.forEach(n => n.style.height = '');\r\n\r\n        if (!this.cd['destroyed']) {\r\n            this.cd.detectChanges();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    private getBodyStyle() {\r\n        let h = this.getViewPortHeight();\r\n        if (!this.data.length) {\r\n\r\n            if (this.dg.useBlankWhenDataIsEmpty) {\r\n                h = this.dg.emptyDataHeight;\r\n            } else {\r\n                if (this.dg.autoHeight) {\r\n                    h = this.dg.emptyDataHeight;\r\n                }\r\n\r\n                if (this.dg.footerData && this.dg.showFooter) {\r\n                    let fd = this.dg.footerData;\r\n                    if (this.dg.footerData.subscribe) {\r\n                        fd = this.dg.footerData['value'];\r\n                    }\r\n\r\n                    if (fd && Array.isArray(fd) && fd.length) {\r\n                        h = h - this.dg.footerHeight;\r\n\r\n                        if (this.dg.footerPosition === 'both') {\r\n                            h = h - this.dg.footerHeight;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (this.dg.showFooter && this.dg.footerPosition === 'both') {\r\n                h = h - this.dg.footerHeight;\r\n            }\r\n        }\r\n        return {\r\n            height: `${Math.floor(h) + 1}px`\r\n        };\r\n    }\r\n\r\n    private updateScrollPosition(scrollLeft: any) {\r\n        this.scrollLeft = scrollLeft;\r\n\r\n        this.fixedRightScrollLeft = this.scrollLeft + this.width - this.rightFixedWidth;\r\n        if (this.fixedRightScrollLeft === this.maxScrollLeft || this.fixedRightScrollLeft > this.maxScrollLeft) {\r\n            this.fixedRightScrollLeft = this.maxScrollLeft;\r\n            this.showRightShadow = false;\r\n        } else {\r\n            this.showRightShadow = true;\r\n        }\r\n\r\n        if (this.fixedLeftEl) {\r\n            this.render.setStyle(this.fixedLeftEl.nativeElement, 'transform', `translate3d(${this.scrollLeft}px, 0px, 0px)`);\r\n        }\r\n\r\n        if (this.fixedRightEl) {\r\n            this.render.setStyle(this.fixedRightEl.nativeElement, 'transform', `translate3d(${this.fixedRightScrollLeft}px, 0px, 0px)`);\r\n        }\r\n    }\r\n\r\n    onScrollToX($event: any) {\r\n        const x = $event.target.scrollLeft;\r\n        this.updateScrollPosition(x);\r\n        // this.cd.detectChanges();\r\n        this.dgs.onScrollMove(x, SCROLL_X_ACTION);\r\n        this.dfs.updateProperty('scrollInfo', { y: $event.target.scrollTop, x });\r\n        this.dgs.showFixedShadow.emit({ showRightShadow: this.showRightShadow, x: this.fixedRightScrollLeft });\r\n    }\r\n\r\n    onScrollToY($event: any) {\r\n\r\n        if (this._scrollTimer) {\r\n            clearTimeout(this._scrollTimer);\r\n        }\r\n\r\n        this._scrollTimer = setTimeout(() => {\r\n            const y = $event.target.scrollTop;\r\n\r\n            if (this.dg.virtualized) {\r\n                this.handleScroll();\r\n            }\r\n\r\n            this.scrollTop = y;\r\n\r\n            this.dfs.updateProperty('scrollInfo', { y, x: $event.target.scrollLeft });\r\n\r\n            this.dg.scrollY.emit(y);\r\n            this.dgs.onScrollMove(y, SCROLL_Y_ACTION);\r\n        }, 100);\r\n    }\r\n\r\n    onPsXReachStart($event: any) {\r\n        const x = $event.target.scrollLeft;\r\n        this.updateScrollPosition(x);\r\n        this.dgs.onScrollMove(x, SCROLL_X_REACH_START_ACTION);\r\n    }\r\n\r\n    onPsXReachEnd($event: any) {\r\n        this.showRightShadow = false;\r\n        // const x = $event.target.scrollLeft;\r\n        // this.updateScrollPosition(x);\r\n        // this.cd.detectChanges();\r\n        // // this.dgs.onShowFixedShadow(this.showRightShadow);\r\n        // this.dgs.onScrollMove(x, SCROLL_X_REACH_END_ACTION);\r\n    }\r\n\r\n    isChecked(rowData: any) {\r\n        if (rowData) {\r\n            return this.dfs.isRowChecked(rowData[this.dg.idField]);\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    isSelected(rowData: any) {\r\n        if (rowData) {\r\n            return this.dfs.isRowSelected(rowData[this.dg.idField]);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    toggleGroupRow(row, open = true) {\r\n        row.expanded = open;\r\n        this.ps.update();\r\n    }\r\n\r\n\r\n\r\n    /** =================================== å ====== é ====== çº¿ =================================== */\r\n\r\n    /** è·åå¯è§åºåé«åº¦ */\r\n    public getViewPortHeight() {\r\n        let viewPortHeight = this.dg.height;\r\n        if (this.dg.showHeader) {\r\n            viewPortHeight = viewPortHeight - this.dg.realHeaderHeight;\r\n        }\r\n\r\n        if ((this.dg.enableFilterRow || this.dg.enableSmartFilter) && this.dg.showFilterBar) {\r\n            viewPortHeight -= this.dg.filterBarHeight;\r\n        }\r\n\r\n        if (this.dg.showRowGroupPanel) {\r\n            viewPortHeight -= this.dg.rowGroupPanelHeight;\r\n        }\r\n\r\n        if (this.dg.showFooter && this.data.length) {\r\n            viewPortHeight = viewPortHeight - this.dg.footerHeight;\r\n        }\r\n\r\n        if (this.dg.pagination) {\r\n            viewPortHeight = viewPortHeight - this.dg.pagerHeight - 2;\r\n        }\r\n\r\n        if (this.dg.showBorder) {\r\n            viewPortHeight -= 2;\r\n        }\r\n\r\n        this.viewportH = viewPortHeight;\r\n        return viewPortHeight;\r\n    }\r\n\r\n    // ä¸æè¡æ¶ï¼æææ°æ®çé«åº¦\r\n    private allRowsHeight() {\r\n        const rowHeightpatch = 1;  // this.dg.autoHeight ? 2 : 1;\r\n        const rowHeight = this.dg.rowHeight + rowHeightpatch;\r\n\r\n        let itemsCount = 0;\r\n        if (this.dg.groupRows) {\r\n            const data = this.data.filter(n => n['__group_visible__'] || n['__group_visible__']===undefined);\r\n            if (this.dg.groupSummaryPosition === 'inGroupRow') {\r\n                itemsCount = data.filter(n => !n['__group_footer__']).length;\r\n            } else {\r\n                itemsCount = data.length;\r\n            }\r\n        } else {\r\n            itemsCount = this.data.length;\r\n        }\r\n\r\n        let h = itemsCount * rowHeight;\r\n\r\n        if (this.dg.autoHeight) {\r\n            h += itemsCount;\r\n        } else {\r\n            h += 2;\r\n        }\r\n\r\n        return h;\r\n    }\r\n\r\n    private getCanvasHeight() {\r\n        let canvasHeight = 0;\r\n\r\n        if (!this.data || !this.data.length) {\r\n            this.canvasHeight = 0;\r\n            return 0;\r\n        }\r\n\r\n        if (this.dg.nowrap) {\r\n\r\n            if (this.dg.maxHeight && this.mainArea) {\r\n                canvasHeight = Math.floor(this.mainArea.nativeElement.getBoundingClientRect().height);\r\n            } else {\r\n                canvasHeight = this.allRowsHeight();\r\n            }\r\n        } else {\r\n            canvasHeight = this.getTrDomHeight().reduce((r, c) => r + c, 0);\r\n        }\r\n\r\n        if (!canvasHeight) {\r\n            canvasHeight = this.viewportH;\r\n        }\r\n\r\n        canvasHeight = canvasHeight + (this.dg.scrollBarShowMode === 'allways' && (this.ps.instance && this.ps.instance['scrollbarXActive']) ? 18 : 0);\r\n        this.canvasHeight = canvasHeight;\r\n        return canvasHeight;\r\n    }\r\n\r\n    updateCanvasHeight() {\r\n        this.canvasHeight = this.getCanvasHeight();\r\n    }\r\n\r\n\r\n    private getRowFromPosition(y) {\r\n        return Math.floor(y / (this.dg.rowHeight + 1));\r\n    }\r\n\r\n    getVisibleRange(viewportTop?: number, viewportLeft?: number) {\r\n        if (viewportTop == null) {\r\n            viewportTop = this.scrollTop;\r\n        }\r\n        if (viewportLeft == null) {\r\n            viewportLeft = this.scrollLeft;\r\n        }\r\n\r\n        return {\r\n            top: this.getRowFromPosition(viewportTop),\r\n            bottom: this.getRowFromPosition(viewportTop + this.viewportH) + 1,\r\n            leftPx: viewportLeft,\r\n            rightPx: viewportLeft + this.viewportW\r\n        };\r\n    }\r\n\r\n    private getRenderedRange(viewportTop?: number, viewportLeft?: number) {\r\n        const range = this.getVisibleRange(viewportTop, viewportLeft);\r\n        const buffer = Math.round(this.viewportH / (this.dg.rowHeight + 1));\r\n        const minBuffer = this.minRowBuffer;\r\n\r\n        if (this.vScrollDir == -1) {\r\n            range.top -= buffer;\r\n            range.bottom += minBuffer;\r\n        } else if (this.vScrollDir == 1) {\r\n            range.top -= minBuffer;\r\n            range.bottom += buffer;\r\n        } else {\r\n            range.top -= minBuffer;\r\n            range.bottom += minBuffer;\r\n        }\r\n\r\n        range.top = Math.max(0, range.top);\r\n        range.bottom = Math.min(this.data.length - 1, range.bottom);\r\n\r\n        range.leftPx -= this.viewportW;\r\n        range.rightPx += this.viewportW;\r\n\r\n        range.leftPx = Math.max(0, range.leftPx);\r\n        range.rightPx = Math.min(this.canvasWidth, range.rightPx);\r\n\r\n        return range;\r\n    }\r\n\r\n    private renderRows(range) {\r\n        const rows = [];\r\n        let dataLength = this.data.length;\r\n        let _data =  this.data;\r\n\r\n         // å¯ç¨åç»\r\n        if (this.dg.groupRows && this.dg.groupField) {\r\n            _data =  _data.filter(n => n['__group_visible__'] || n['__group_visible__']===undefined);\r\n\r\n            if (this.dg.groupSummaryPosition === 'inGroupRow') {\r\n                _data = _data.filter(n => !n['__group_footer__']);\r\n            }\r\n\r\n            dataLength = _data.length;\r\n            this.rowsCache = {};\r\n        }\r\n\r\n        for (let i = range.top; i <= range.bottom; i++) {\r\n            if (this.rowsCache[i] || (i == dataLength) ) {\r\n                continue;\r\n            }\r\n\r\n            rows.push(i);\r\n\r\n            // Create an entry right away so that appendRowHtml() can\r\n            // start populatating it.\r\n            this.rowsCache[i] = {\r\n                rowNode: null,\r\n\r\n                // ColSpans of rendered cells (by column idx).\r\n                // Can also be used for checking whether a cell has been rendered.\r\n                cellColSpans: [],\r\n\r\n                // Cell nodes (by column idx).  Lazy-populated by ensureCellNodesInRowsCache().\r\n                cellNodesByColumnIdx: [],\r\n\r\n                // Column indices of cell nodes that have been rendered, but not yet indexed in\r\n                // cellNodesByColumnIdx.  These are in the same order as cell nodes added at the\r\n                // end of the row.\r\n                cellRenderQueue: []\r\n            };\r\n        }\r\n\r\n        for (let i = 0, ii = rows.length; i < ii; i++) {\r\n            this.rowsCache[rows[i]].rowNode = _data[rows[i]];\r\n        }\r\n\r\n        return Object.keys(this.rowsCache).map(n => this.rowsCache[n].rowNode).filter(n => n);\r\n    }\r\n\r\n\r\n    private removeRowFromCache(row) {\r\n        const cacheEntry = this.rowsCache[row];\r\n        if (!cacheEntry) {\r\n            return;\r\n        }\r\n\r\n        delete this.rowsCache[row];\r\n    }\r\n\r\n    private cleanupRows(rangeToKeep) {\r\n        for (const i in this.rowsCache) {\r\n            if (i < rangeToKeep.top || i > rangeToKeep.bottom) {\r\n                this.removeRowFromCache(i);\r\n            }\r\n        }\r\n    }\r\n\r\n    hasYScrollbar(showYscrollbar: boolean) {\r\n        setTimeout(() => {\r\n            this.updateColumnSize(this.columnsGroup);\r\n            if (this.ps) {\r\n                this.ps.update();\r\n                this.cd.detectChanges();\r\n            }\r\n            this.dgs.scrollbarUpdate.emit({ scrollbarRef: this.ps.instance });\r\n        }, 60);\r\n    }\r\n\r\n    onClickScrollArrow($event) {\r\n        const { dir, event } = $event;\r\n        if (this.ps && this.ps.instance) {\r\n            const { x, y } = this.ps.instance.reach;\r\n    \r\n            switch(dir) {\r\n                case 'left':\r\n                    if (x!== 'start') {\r\n                        this.viewScrollContainer.nativeElement.scrollLeft = this.viewScrollContainer.nativeElement.scrollLeft - 40;\r\n                    }\r\n                    break;\r\n                case 'right':\r\n                    if (x!== 'end') {\r\n                        this.viewScrollContainer.nativeElement.scrollLeft = this.viewScrollContainer.nativeElement.scrollLeft + 40;\r\n                    }\r\n                    break;\r\n                case 'top':\r\n                    if (y !== 'start') {\r\n                        this.viewScrollContainer.nativeElement.scrollTop = this.viewScrollContainer.nativeElement.scrollTop - 40;\r\n                    }\r\n                    break;\r\n                case 'bottom':\r\n                    if (y !== 'end') {\r\n                        this.viewScrollContainer.nativeElement.scrollTop = this.viewScrollContainer.nativeElement.scrollTop + 40;\r\n                    }\r\n                    break;\r\n            }\r\n\r\n            this.ps.update();\r\n        }\r\n    }\r\n\r\n    private renderData(detectchanges = true) {\r\n        this.canvasHeight = this.getCanvasHeight();\r\n        if (!this.dg.virtualized || this.dg.autoHeight) {\r\n            this.rows = this.data;\r\n        } else {\r\n            const visible = this.getVisibleRange();\r\n            const rendered = this.getRenderedRange();\r\n\r\n            // remove rows no longer in the viewport\r\n            this.cleanupRows(rendered);\r\n\r\n            // render missing rows\r\n            this.rows = this.renderRows(rendered);\r\n            this.startRowIndex = rendered.top;\r\n           \r\n            this.lastRenderedScrollTop = this.scrollTop;\r\n            this.lastRenderedScrollLeft = this.scrollLeft;\r\n\r\n\r\n            \r\n            this.blankTopHeight = this.startRowIndex * (this.dg.rowHeight + 1);\r\n            this.blankBottomHeight = this.canvasHeight - this.blankTopHeight - (this.rows.length * (this.dg.rowHeight + 1));\r\n            if (this.dg.scrollBarShowMode === 'allways' && this.ps && this.ps.instance && this.ps.instance.scrollbarXActive) {\r\n                this.blankBottomHeight += 22;\r\n            }\r\n\r\n\r\n            if (detectchanges) {\r\n                this.cd.detectChanges();\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    private handleScroll() {\r\n        this.scrollTop = this.ps.elementRef.nativeElement.scrollTop;\r\n        this.scrollLeft = this.ps.elementRef.nativeElement.scrollLeft;\r\n        return this._handleScroll();\r\n    }\r\n\r\n    private _handleScroll() {\r\n        const viewportContainer = this.viewScrollContainer.nativeElement;\r\n        let maxScrollDistanceY = viewportContainer.scrollHeight - viewportContainer.clientHeight;\r\n        let maxScrollDistanceX = viewportContainer.scrollWidth - viewportContainer.clientWidth;\r\n\r\n        // Protect against erroneous clientHeight/Width greater than scrollHeight/Width.\r\n        // Sometimes seen in Chrome.\r\n        maxScrollDistanceY = Math.max(0, maxScrollDistanceY);\r\n        maxScrollDistanceX = Math.max(0, maxScrollDistanceX);\r\n\r\n        // Ceiling the max scroll values\r\n        if (this.scrollTop > maxScrollDistanceY) {\r\n            this.scrollTop = maxScrollDistanceY;\r\n        }\r\n        if (this.scrollLeft > maxScrollDistanceX) {\r\n            this.scrollLeft = maxScrollDistanceX;\r\n        }\r\n\r\n        const vScrollDist = Math.abs(this.scrollTop - this.prevScrollTop);\r\n        const hScrollDist = Math.abs(this.scrollLeft - this.prevScrollLeft);\r\n\r\n        if (hScrollDist) {\r\n            this.prevScrollLeft = this.scrollLeft;\r\n\r\n            // $viewportScrollContainerX[0].scrollLeft = scrollLeft;\r\n            // if (hasFrozenColumns()) {\r\n            //     if (hasFrozenRows) {\r\n            //         $viewportTopR[0].scrollLeft = scrollLeft;\r\n            //     }\r\n            // } else {\r\n            //     if (hasFrozenRows) {\r\n            //         $viewportTopL[0].scrollLeft = scrollLeft;\r\n            //     }\r\n            // }\r\n        }\r\n\r\n        const lastScrollTop = this.lastRenderedScrollTop;\r\n\r\n        if (vScrollDist) {\r\n            this.vScrollDir = this.prevScrollTop < this.scrollTop ? 1 : -1;\r\n            this.prevScrollTop = this.scrollTop;\r\n\r\n            // if (hasFrozenColumns()) {\r\n            //     if (hasFrozenRows && !options.frozenBottom) {\r\n            //         $viewportBottomL[0].scrollTop = scrollTop;\r\n            //     } else {\r\n            //         $viewportTopL[0].scrollTop = scrollTop;\r\n            //     }\r\n            // }\r\n\r\n            // switch virtual pages if needed\r\n            if (vScrollDist < this.viewportH) {\r\n                this._scrollTo(this.scrollTop);\r\n            }\r\n        }\r\n\r\n        if (hScrollDist || vScrollDist) {\r\n            const dx = Math.abs(this.lastRenderedScrollLeft - this.scrollLeft);\r\n            const dy = Math.abs(lastScrollTop - this.scrollTop);\r\n            if (dx > 20 || dy > 20) {\r\n                // if rendering is forced or scrolling is small enough to be \"easy\", just render\r\n                if (dy < this.viewportH && dx < this.viewportW) {\r\n                    this.renderData();\r\n                } else {\r\n                    this.renderData();\r\n                }\r\n            }\r\n        }\r\n\r\n        if (hScrollDist || vScrollDist) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private _scrollTo(y) {\r\n        const $viewportScrollContainerY = this.viewScrollContainer.nativeElement;\r\n        y = Math.max(y, 0);\r\n        y = Math.min(y, this.canvasHeight - this.viewportH);\r\n\r\n        const newScrollTop = y;\r\n\r\n        if (this.prevScrollTop != newScrollTop) {\r\n            this.vScrollDir = (this.prevScrollTop < newScrollTop) ? 1 : -1;\r\n            this.lastRenderedScrollTop = (this.scrollTop = this.prevScrollTop = newScrollTop);\r\n\r\n            // if (hasFrozenColumns()) {\r\n            //     $viewportTopL[0].scrollTop = newScrollTop;\r\n            // }\r\n\r\n            // if (hasFrozenRows) {\r\n            //     $viewportBottomL[0].scrollTop = $viewportBottomR[0].scrollTop = newScrollTop;\r\n            // }\r\n\r\n            // $viewportScrollContainerY.scrollTop = newScrollTop;\r\n        }\r\n    }\r\n\r\n    onMouseClick($event: MouseEvent) {\r\n        // document.body.click();\r\n        const target = $event.target as any;\r\n\r\n        if (target.nodeName === 'TEXTAREA' || target.nodeName === 'INPUT' ) {\r\n            return;\r\n        }\r\n\r\n\r\n        let td = target;\r\n        if (target.nodeName !== 'TD') {\r\n            td = target.closest('TD');\r\n        }\r\n\r\n        if (!this.dg.editable && this.__triggerBodyClickEvent) {\r\n            // è§£å³è¶é¾ç¹å»äºä»¶ï¼è¦åæ§è¡éä¸­è¡\r\n            if (td && td.selectCell ) {\r\n                $event.stopPropagation();\r\n                td.selectCell($event, td);  // æçè¯´å¯ä»¥å é¤çï¼ä½ä¸æ¢å¨å¦o(â§å£â¦)o\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (this.dg.editMode === 'row') {\r\n            return;\r\n        }\r\n        if (!td && this.dg.currentCell) {\r\n            td = this.dg.currentCell.cellElement;\r\n            if (td && td.closeEdit) {\r\n                $event.stopPropagation();\r\n                td.closeEdit();\r\n                return;\r\n            }\r\n        }\r\n\r\n\r\n        if (td) {\r\n            // è¡ç¦ç¨æ¶\r\n            if (this.dg.disableRow && td.gridCellData) {\r\n                const { rowData, rowIndex } = td.gridCellData;\r\n                if (this.dg.disableRow(rowData, rowIndex)) {\r\n                    return;\r\n                }\r\n            }\r\n            $event.stopPropagation();\r\n            if (this.dg.editable && this.dg.editMode === 'cell' && td.edit) {\r\n                td.edit($event);\r\n            } else {\r\n                if (td.selectCell) {\r\n                    if (this.dg.selectionMode === 'default' && this.dg.multiSelect) {\r\n                        this.dg.clearCheckeds();\r\n                    }\r\n                    td.selectCell($event, td);\r\n                } else {\r\n                    this.dg.endCellEdit();\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    onBeforeShowContextMenu = (e: any) => {\r\n        // row_1_fixedleft  row_1  row_1_fixedright\r\n        const { contextMenuDom, event } = e;\r\n\r\n        if (event.target.closest('.datagrid-editor')) {\r\n            return of({show: false});\r\n        }\r\n\r\n\r\n        let rowID = event.target.id;\r\n\r\n        if (contextMenuDom) {\r\n            // æé¤åç»è¡ãåç»åè®¡è¡\r\n            if (contextMenuDom.className.indexOf('f-datagrid-group-row') === -1 && contextMenuDom.className.indexOf('f-datagrid-group-footer') === -1) {\r\n                rowID = contextMenuDom.id.replace('row_', '').replace('_fixedleft', '').replace('_fixedright', '');\r\n                const rowData = this.dfs.findRow(rowID);\r\n                const focusTargetWidth = this.viewportW > this.totalWidth ? this.totalWidth : this.viewportW;\r\n                return of({ show: true, data: { data: rowData.data, grid: this.dg}, focusTargetWidth });\r\n            }\r\n        }\r\n        return of({ show: false });\r\n    }\r\n}\r\n","\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-06 07:43:07\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-09-26 17:17:32\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { Directive, Input, NgZone, OnInit, Renderer2, ElementRef, OnDestroy, Inject, forwardRef, ChangeDetectorRef, HostListener } from '@angular/core';\r\nimport { DatagridBodyComponent } from './datagrid-body.component';\r\nimport { DatagridComponent } from './../../datagrid.component';\r\nimport { Utils } from './../../utils/utils';\r\n@Directive({\r\n    selector: '[row-hover]',\r\n    exportAs: 'rowHover'\r\n})\r\nexport class DatagridRowHoverDirective implements OnInit, OnDestroy {\r\n\r\n    @Input() rowIndex: number;\r\n    @Input('row-hover') rowData: any;\r\n\r\n    private _mouseenter = null;\r\n    private _mouseleave = null;\r\n\r\n    constructor(\r\n        @Inject(forwardRef(() => DatagridComponent)) public dg: DatagridComponent,\r\n        @Inject(forwardRef(() => DatagridBodyComponent)) public dgb: DatagridBodyComponent,\r\n        private cd: ChangeDetectorRef,\r\n        private el: ElementRef, private zone: NgZone, private render: Renderer2) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (this.dg.rowHover && !this.dg.fast) {\r\n            this.zone.runOutsideAngular( () => {\r\n                this._mouseenter = Utils.on(this.el.nativeElement, 'mouseenter', this.onmouseenter.bind(this), { target: '.f-datagrid-body-row', options: { capture: true }});\r\n                this._mouseleave = Utils.on(this.el.nativeElement, 'mouseleave', this.onmouseleave.bind(this), { target: '.f-datagrid-body-row', options: { capture: true }});\r\n            });\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this._mouseenter) {\r\n            this._mouseenter();\r\n        }\r\n\r\n        if (this._mouseleave) {\r\n            this._mouseleave();\r\n        }\r\n    }\r\n\r\n    // @HostListener('mouseenter')\r\n    onmouseenter(event) {\r\n        this.setRowHoverCls(event);\r\n    }\r\n\r\n    // @HostListener('mouseleave')\r\n    onmouseleave(event) {\r\n        this.setRowHoverCls(event, false);\r\n    }\r\n\r\n    setRowHoverCls(event, hover = true) {\r\n        if (!this.dg.rowHover) {\r\n            return;\r\n        }\r\n\r\n        if (!event.target.matches('.f-datagrid-body-row')) {\r\n            return;\r\n        }\r\n\r\n        this.rowIndex = event.target.getAttribute('index');\r\n\r\n        const leftTableCls = 'f-datagrid-body-fixed-left';\r\n        const rightTableCls = 'f-datagrid-body-fixed-right';\r\n        const centerTableCls = 'f-datagrid-body-center';\r\n\r\n        const body = this.dg.el.nativeElement.querySelector('.f-datagrid-body');\r\n\r\n        if (!body) {\r\n            return;\r\n        }\r\n\r\n        const leftTableDom = body.querySelector(`.${leftTableCls}`);\r\n        const rightTableDom = body.querySelector(`.${rightTableCls}`);\r\n        const centerTableDom = body.querySelector(`.${centerTableCls}`);\r\n\r\n        const method = hover ? 'addClass' : 'removeClass';\r\n        const trSelector = `tr[index=\"${this.rowIndex}\"]`;\r\n        const dom = this.el.nativeElement.closest('div');\r\n        if (dom && dom.className) {\r\n            const trDom = centerTableDom.querySelector(trSelector);\r\n\r\n            if (!trDom) {\r\n                return;\r\n            }\r\n\r\n            if (trDom.className.indexOf('f-datagrid-disable-row') > -1) {\r\n                return;\r\n            }\r\n            let ltr = null;\r\n            let rtr = null;\r\n            if (rightTableDom) {\r\n                rtr = rightTableDom.querySelector(trSelector);\r\n            }\r\n            if (leftTableDom) {\r\n                ltr = leftTableDom.querySelector(trSelector);\r\n            }\r\n\r\n            if (leftTableDom && ltr) {\r\n                this.render[method](ltr, this.dg.hoverRowCls);\r\n            }\r\n            if (rightTableDom && rtr) {\r\n                this.render[method](rtr, this.dg.hoverRowCls);\r\n            }\r\n\r\n            this.render[method](trDom, this.dg.hoverRowCls);\r\n\r\n        }\r\n    }\r\n\r\n}\r\n","import { delay, filter, takeUntil } from 'rxjs/operators';\r\n\r\n/*\r\n* @Author: ç¯çç§æ(Lucas Huang)\r\n* @Date: 2019-08-12 07:47:12\r\n* @LastEditors: ç¯çç§æ(Lucas Huang)\r\n* @LastEditTime: 2019-11-27 13:31:43\r\n* @QQ: 1055818239\r\n* @Version: v0.0.1\r\n*/\r\nimport { Renderer2, Self, NgZone, SimpleChanges, OnChanges, ChangeDetectorRef, OnDestroy, Optional, ContentChildren, QueryList, ViewChildren } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport {\r\n    Directive, Input, Output, EventEmitter, HostListener,\r\n    OnInit, ElementRef, AfterViewInit, Injector, Inject, forwardRef\r\n} from '@angular/core';\r\nimport { DatagridFacadeService } from '../../services/datagrid-facade.service';\r\nimport { DatagridComponent } from '../../datagrid.component';\r\nimport { DatagridCellComponent } from './datagrid-cell.component';\r\nimport { DatagridRow } from '../../types/datagrid-row';\r\nimport { DatagridValidator } from '../../types/datagrid-validator';\r\nimport { DatagridRowHoverDirective } from './datagrid-row-hover.directive';\r\nimport { Utils } from '../../utils/utils';\r\nimport { DatagridBodyComponent } from './datagrid-body.component';\r\nimport { FormatCellDataPipe } from '../../utils/format-cell-data.pipe';\r\nimport { ALLOW_EDIT_CELL_HIGHLIGHT_CLS } from '../../types/constant';\r\n\r\n\r\n@Directive({\r\n    selector: '[grid-row]',\r\n    exportAs: 'gridRow'\r\n})\r\nexport class DatagridRowDirective implements OnInit, AfterViewInit, DatagridRow, OnChanges, OnDestroy {\r\n    @Input() editable = false;\r\n    @Input('grid-row') rowData: any;\r\n    @Input() rowIndex: number;\r\n    @Output() clickHandler = new EventEmitter();\r\n    @Output() rowUpdated = new EventEmitter();\r\n    // ç¨äºæ´è¡ç¼è¾ï¼å¿å¨ï¼ï¼ï¼\r\n    @ContentChildren(forwardRef(() => DatagridCellComponent), { descendants: true }) cells: QueryList<DatagridCellComponent>;\r\n\r\n\r\n    get rowId() {\r\n        if (this.rowData) {\r\n            return this.dfs.primaryId(this.rowData);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    get disabled() {\r\n        if (this.dg.disableRow) {\r\n            return this.dg.disableRow(this.rowData, this.rowIndex);\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    form: FormGroup = new FormGroup({});\r\n    private dfs: DatagridFacadeService;\r\n    private documentRowDblclickEvent: any = null;\r\n    private ngZone: NgZone;\r\n    private dgb: DatagridBodyComponent;\r\n    cd: ChangeDetectorRef;\r\n\r\n    columnsChangedSubscription: Subscription = null;\r\n    datasourceChangedSubscription: Subscription = null;\r\n    subscriptions: Subscription[] = [];\r\n    private destroy$ = new Subject();\r\n    constructor(\r\n        @Inject(forwardRef(() => DatagridComponent)) public dg: DatagridComponent,\r\n        private injector: Injector, private fb: FormBuilder, public el: ElementRef,\r\n        private render: Renderer2, @Optional() @Self() public drHover: DatagridRowHoverDirective) {\r\n        this.dfs = this.injector.get(DatagridFacadeService);\r\n        this.ngZone = this.injector.get(NgZone);\r\n        this.cd = this.injector.get(ChangeDetectorRef);\r\n        this.dgb = this.injector.get(DatagridBodyComponent);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.datasourceChangedSubscription = this.dg.dgs.onDataSourceChange.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).subscribe(() => {\r\n            this.renderCustomStyle();\r\n        });\r\n\r\n        this.columnsChangedSubscription = this.dg.dgs.columnsChanged.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).subscribe(() => {\r\n            this.createControl();\r\n        });\r\n\r\n        const s$ = this.dg.dfs.rowUpdate$.pipe(\r\n            takeUntil(this.destroy$),\r\n            filter((row: any) => {\r\n                return row.keyID === this.rowId;\r\n            })\r\n        ).subscribe((row: { index: number, data: any }) => {\r\n            if (row && row.data) {\r\n                // this.rowData = cloneDeep(row.data);\r\n                if (this.dfs.primaryId(row.data) === this.rowId) {\r\n                    this.renderCustomStyle(row.data);\r\n                }\r\n                // this.cd.detectChanges();\r\n                this.rowData = {...row.data}\r\n                this.rowUpdated.emit(this.rowData);\r\n                this.cd.detectChanges();\r\n            }\r\n        });\r\n        this.subscriptions.push(s$);\r\n\r\n        const s1$ = this.dg.dgs.updateEmptyStyle$.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).subscribe(() => {\r\n            this.updateCellEmptyStyle();\r\n        });\r\n        this.subscriptions.push(s1$);\r\n\r\n        const s2$ = this.dg.dfs.selectRow$.pipe(takeUntil(this.destroy$)).pipe(\r\n            filter((r: any) => {\r\n                return r.id === this.rowId;\r\n            })\r\n        ).subscribe(() => {\r\n            if (this.dg.selectedRow && !this.dg.selectedRow.dr) {\r\n                const p = this.getRowPosition();\r\n                if (p === 'left') {\r\n                    this.dg.selectedRow.drl = this;\r\n                } else if (p === 'right') {\r\n                    this.dg.selectedRow.drr = this;\r\n                } else {\r\n                    this.dg.selectedRow.dr = this;\r\n                }\r\n            }\r\n        });\r\n\r\n        this.subscriptions.push(s2$);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n        if (this.columnsChangedSubscription) {\r\n            this.columnsChangedSubscription.unsubscribe();\r\n            this.columnsChangedSubscription = null;\r\n        }\r\n\r\n        if (this.datasourceChangedSubscription) {\r\n            this.datasourceChangedSubscription.unsubscribe();\r\n            this.datasourceChangedSubscription = null;\r\n        }\r\n\r\n        if (this.subscriptions && this.subscriptions.length) {\r\n            this.subscriptions.forEach(n => n.unsubscribe());\r\n            this.subscriptions = [];\r\n        }\r\n\r\n        if (this.form) {\r\n            this.form = null;\r\n        }\r\n\r\n        this.cells = null;\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.rowData && !changes.rowData.isFirstChange()) {\r\n            this.updateCellEmptyStyle();\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.renderCustomStyle();\r\n        this.updateCellEmptyStyle();\r\n    }\r\n\r\n    private getRowPosition() {\r\n        const id = this.el.nativeElement.id;\r\n        if (id.indexOf('fixedleft') > -1) {\r\n            return 'left';\r\n        } else if (id.indexOf('fixedright') > -1) {\r\n            return 'right';\r\n        } else {\r\n            return 'center';\r\n        }\r\n    }\r\n\r\n\r\n    renderCustomStyle(rowData = null) {\r\n        if (this.dg.rowStyler) {\r\n            const _rd = rowData || this.rowData;\r\n            const trStyle = this.dg.rowStyler(_rd, this.rowIndex);\r\n            if (trStyle && Object.keys(trStyle).length) {\r\n                this.dg.renderCustomStyle(trStyle, this.el.nativeElement);\r\n            } else {\r\n                this.dg.dgs.removeCssRule(`#${this.dg.id} #${this.el.nativeElement.id}`);\r\n            }\r\n        }\r\n    }\r\n\r\n    @HostListener('click', ['$event'])\r\n    onRowClick(event: MouseEvent) {\r\n\r\n        if (event.target['className'] && event.target['className'].indexOf('checkbox-column') > -1) {\r\n            return;\r\n        }\r\n\r\n        if (!this.dg.enableSelectRow) {\r\n            return;\r\n        }\r\n\r\n        if (this.dg.disabled) {\r\n            return;\r\n        }\r\n\r\n        if (this.dg.currentCell && this.dg.currentCell.isEditing && this.rowId !== this.dg.currentCell.rowId ) {\r\n            return;\r\n        }\r\n\r\n\r\n        if (this.dg.disableRow) {\r\n            if (this.dg.disableRow(this.rowData, this.rowIndex)) {\r\n                event.stopPropagation();\r\n                return false;\r\n            }\r\n        }\r\n\r\n        // if (!this.dg.editable) {\r\n        //     event.stopPropagation();\r\n        // }\r\n\r\n        const rowId = this.dfs.primaryId(this.rowData);\r\n\r\n        if (!rowId) {\r\n            this.dg.writeConsole(`å¨ç¬¬ ${this.rowIndex + 1} è¡ï¼ä¸»é®å­æ®µ[${this.dg.idField}]çå¼ä¸º ç©ºï¼è¯·æ£æ¥ç¸å³æ°æ®ã`);\r\n        }\r\n\r\n        const beforEventParam = {\r\n            rowIndex: this.rowIndex,\r\n            rowData: this.rowData,\r\n            gridInstance: this.dg\r\n        };\r\n\r\n        if (!event.shiftKey) {\r\n            this.dg.dgs.focusRowChanged.emit({\r\n                rowIndex: this.rowIndex,\r\n                rowData: this.rowData\r\n            });\r\n        }\r\n        const useNewSelectionMode = this.dg.sms.beforRowClick({ ...beforEventParam, e: event, id: rowId, dr: this });\r\n        if (useNewSelectionMode) {\r\n            return;\r\n        }\r\n\r\n        if (!this.dfs.isRowSelected(rowId)) {\r\n            const canendedit = this.dg.endRowEdit();\r\n\r\n            if (!canendedit || canendedit.canEnd) {\r\n                this.dg.beforeSelect(beforEventParam).pipe( takeUntil(this.destroy$)).pipe(\r\n                    delay(200)\r\n                ).subscribe((canSelect: boolean) => {\r\n                    if (canSelect) {\r\n                        this.dg.removeCellSelectedCls();\r\n                        this.dfs.selectRow(this.rowIndex, this.rowData, {instance: this.dg});\r\n                        if (this.dg.selectedRow) {\r\n                            this.dg.selectedRow.dr = this;\r\n                        }\r\n                        const trCLS = this.el.nativeElement.className;\r\n                        if (trCLS.indexOf('f-datagrid-row-selected') === -1) {\r\n                            this.el.nativeElement.className = trCLS + ' f-datagrid-row-selected';\r\n                        }\r\n                        // this.drHover.setRowHoverCls(false);\r\n                        // this.dg.selectChanged.emit(this.dg.selectedRow);\r\n                        this.clickHandler.emit();\r\n                    }\r\n                    this.dg.rowClick.emit({ data: this.rowData, grid: this.dg, dblclick: false });\r\n                    this.dg.dgs.setSelecedRow.emit({ selected: true, id: this.dfs.primaryId(this.rowData) });\r\n                });\r\n            }\r\n        } else {\r\n            if (this.dg.selectedRow && !this.dg.selectedRow.dr) {\r\n                this.dg.selectedRow.dr = this;\r\n            }\r\n\r\n            if (!this.dg.keepSelect) {\r\n                this.dg.beforeUnselect(beforEventParam).pipe(\r\n                    takeUntil(this.destroy$),\r\n                ).subscribe((canUnselect: boolean) => {\r\n                    if (canUnselect) {\r\n                        // this.dg.unSelect.emit(this.dg.selectedRow);\r\n                        this.dfs.unSelectRow(this.rowIndex, this.rowData, {instance: this.dg});\r\n\r\n                        const trCLS = this.el.nativeElement.className;\r\n                        if (trCLS.indexOf('f-datagrid-row-selected') > -1) {\r\n                            this.el.nativeElement.className = trCLS.replace('f-datagrid-row-selected', '');\r\n                        }\r\n                    }\r\n                    this.dg.rowClick.emit({ data: this.rowData, grid: this.dg, dblclick: false });\r\n                    this.dg.dgs.setSelecedRow.emit();\r\n                });\r\n            } else {\r\n                this.dg.rowClick.emit({ data: this.rowData, grid: this.dg, dblclick: false });\r\n            }\r\n        }\r\n    }\r\n\r\n    initFormControl() {\r\n        this.form = this.fb.group({});\r\n        this.createControl();\r\n        this.form['bindingData'] = this.rowData;\r\n    }\r\n\r\n    createControl() {\r\n        if (this.dg && this.dg.flatColumns) {\r\n            this.dg.flatColumns.forEach(col => {\r\n                if (!col.editor && !col.editorTemplate) { return; }\r\n                if (!this.form.controls[col.field]) {\r\n                    const control = this.createFormControl(col);\r\n                    this.form.addControl(col.field, control);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private createFormControl(col) {\r\n        return this.fb.control(\r\n            Utils.getValue(col.field, this.rowData),\r\n            {\r\n                validators: col.editor ? this.bindValidations(col.editor.validators) : null\r\n            }\r\n        );\r\n    }\r\n\r\n    private bindValidations(validators: DatagridValidator[]) {\r\n        const validations = [];\r\n        if (validators && validators.length) {\r\n\r\n            validators.forEach((v: DatagridValidator) => {\r\n                let validation = null;\r\n                switch (v.type) {\r\n                    case 'required':\r\n                        validation = Validators.required;\r\n                        break;\r\n                    case 'min':\r\n                        validation = Validators.min(v.value);\r\n                        break;\r\n                    case 'max':\r\n                        validation = Validators.max(v.value);\r\n                        break;\r\n                    case 'minLength':\r\n                        validation = Validators.minLength(v.value);\r\n                        break;\r\n                    case 'maxLength':\r\n                        validation = Validators.maxLength(v.value);\r\n                        break;\r\n                    case 'email':\r\n                        validation = Validators.email;\r\n                        break;\r\n                    case 'requiredTrue':\r\n                        validation = Validators.requiredTrue;\r\n                        break;\r\n                    case 'pattern':\r\n                        validation = Validators.pattern(v.value);\r\n                        break;\r\n                }\r\n                if (validation) {\r\n                    validations.push(validation);\r\n                } else {\r\n                    if (this.dg.validators && this.dg.validators.length) {\r\n                        const vfn = this.dg.validators.find(vr => vr.name === v.type);\r\n                        if (vfn) {\r\n                            validation = vfn.value(this.rowData);\r\n                            validations.push(validation);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return validations;\r\n    }\r\n\r\n\r\n    refresh() {\r\n        this.updateRowHeight();\r\n        this.updateCellEmptyStyle();\r\n    }\r\n\r\n    updateRowHeight() {\r\n        if (!this.dg.nowrap) {\r\n            const centerTr = this.dgb.mainArea.nativeElement.querySelector('tr[index=\"' + this.rowIndex + '\"]');\r\n            centerTr.style.height = 'auto';\r\n            const trHeight = centerTr.offsetHeight;\r\n            let leftTrDom = null;\r\n            let rightTrDom = null;\r\n            const heightSizeList = [trHeight];\r\n            if (this.dgb) {\r\n                if (this.dgb.fixedLeftEl) {\r\n                    leftTrDom = this.dgb.fixedLeftEl.nativeElement.querySelector('tr[index=\"' + this.rowIndex + '\"]');\r\n                    if (leftTrDom) {\r\n                        leftTrDom.style.height = 'auto';\r\n                        heightSizeList.push(leftTrDom.offsetHeight);\r\n                    }\r\n                }\r\n                if (this.dgb.fixedRightEl) {\r\n                    rightTrDom = this.dgb.fixedRightEl.nativeElement.querySelector('tr[index=\"' + this.rowIndex + '\"]');\r\n                    if (rightTrDom) {\r\n                        rightTrDom.style.height = 'auto';\r\n                        heightSizeList.push(rightTrDom.offsetHeight);\r\n                    }\r\n                }\r\n\r\n                const maxHeight = Math.max(...heightSizeList);\r\n\r\n                centerTr.style.height = `${maxHeight}px`;\r\n                if (leftTrDom) {\r\n                    leftTrDom.style.height = `${maxHeight}px`;\r\n                }\r\n\r\n                if (rightTrDom) {\r\n                    rightTrDom.style.height = `${maxHeight}px`;\r\n                }\r\n\r\n                this.cd.markForCheck();\r\n                this.dgb.updateCanvasHeight();\r\n            }\r\n        }\r\n    }\r\n\r\n    private updateCellEmptyStyle() {\r\n\r\n        if (!this.dg.enableEditCellStyle) {\r\n            return;\r\n        }\r\n\r\n        let rowIsDisabled = false;\r\n        if (this.dg.disableRow) {\r\n            rowIsDisabled = this.dg.disableRow(this.rowData, this.rowIndex);\r\n        }\r\n\r\n        const updateCellEmptyText = (cells) => {\r\n            if (cells.length) {\r\n\r\n                for (let k = 0; k < cells.length; k++) {\r\n                    const field = cells[k].getAttribute('field');\r\n                    if (field) {\r\n                        const col = this.dfs.getColumn(field);\r\n                        if (col) {\r\n\r\n                            if (!col.editor) {\r\n                                continue;\r\n                            }\r\n                            const cls = col.align === 'right' ? 'allow-edit-cell-left' : 'allow-edit-cell';\r\n                            const emptyicon_cls = ALLOW_EDIT_CELL_HIGHLIGHT_CLS[col.editor.type];\r\n                            const span = cells[k].querySelector('.cell-text-box');\r\n                            const colVal = Utils.getValue(field, this.rowData);\r\n                            const fmtVal = this.dg.colFormatSer.format(colVal, this.rowData, col.formatter);\r\n                            if (!this.dg.editable || rowIsDisabled || this.dg.cellIsReadOnly(col, this.rowData)) {\r\n                                cells[k].className = cells[k].className.replace(cls, '');\r\n                                cells[k].className = cells[k].className.replace(emptyicon_cls, '');\r\n                                if (span) {\r\n                                    if (span.className.indexOf('cell-empty') > -1) {\r\n                                        span.className = span.className.replace('cell-empty', '');\r\n                                    }\r\n\r\n                                    if (colVal === '' || colVal === null || colVal === undefined) {\r\n                                        span.innerHTML = '';\r\n                                    } else {\r\n                                        span.innerHTML = fmtVal;\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                if (span) {\r\n                                    if (colVal === '' || colVal === null || colVal === undefined) {\r\n                                        if (span.className.indexOf('cell-empty') === -1) {\r\n                                            span.className = span.className + ' cell-empty';\r\n                                        }\r\n\r\n                                        span.innerHTML = Utils.getWhenEmptyText(col, this.dg.localeService.localeId);\r\n                                    } else {\r\n                                        span.innerHTML = fmtVal;\r\n                                    }\r\n                                }\r\n\r\n                                if (cells[k].className.indexOf('cell-readonly') > -1) {\r\n                                    cells[k].className = cells[k].className.replace('cell-readonly', '');\r\n                                }\r\n\r\n                                if (cells[k].className.indexOf(cls) === -1) {\r\n                                    this.render.addClass(cells[k], cls);\r\n                                }\r\n\r\n                                if (cells[k].className.indexOf(emptyicon_cls) === -1) {\r\n                                    this.render.addClass(cells[k], emptyicon_cls);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n\r\n        // if (this.dgb.fixedLeftEl) {\r\n        //     const leftTrDom = this.dgb.fixedLeftEl.nativeElement.querySelector('tr[index=\"' + this.rowIndex + '\"]');\r\n        //     if (leftTrDom) {\r\n        //         updateCellEmptyText(leftTrDom.querySelectorAll('td[field]'));\r\n        //     }\r\n        // }\r\n\r\n        const cells = this.el.nativeElement.querySelectorAll('td[field]:not([field=\"_datagrid-setting-control_\"])');\r\n        updateCellEmptyText(cells);\r\n    }\r\n}\r\n","import { ColumnFormatService } from '@farris/ui-common/column';\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-07-29 08:14:22\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-10-11 11:38:58\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { DatagridComponent } from './../../datagrid.component';\r\nimport {\r\n    ComponentFactoryResolver,\r\n    ComponentRef,\r\n    Directive,\r\n    Input,\r\n    OnInit,\r\n    AfterViewInit,\r\n    ViewContainerRef,\r\n    Injector,\r\n    OnDestroy,\r\n    Inject,\r\n    forwardRef,\r\n    ApplicationRef\r\n} from '@angular/core';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { DataColumn } from '../../types';\r\n\r\n@Directive({\r\n    selector: '[cell-editor]',\r\n})\r\nexport class GridCellEditorDirective implements OnInit, AfterViewInit, OnDestroy {\r\n    @Input() column: DataColumn;\r\n    @Input() group: FormGroup;\r\n    @Input() rowData: any;\r\n    @Input() value: any;\r\n    @Input() height: any;\r\n    componentRef: ComponentRef<any>;\r\n    private cfs: ColumnFormatService = null;\r\n    private timer = null;\r\n    constructor(\r\n        private resolver: ComponentFactoryResolver,\r\n        private container: ViewContainerRef,\r\n        private app: ApplicationRef,\r\n        private fb: FormBuilder,\r\n        @Inject(forwardRef(() => DatagridComponent)) public dg: DatagridComponent\r\n    ) {\r\n        this.cfs = this.dg.inject.get(ColumnFormatService);\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (this.column.editor) {\r\n            this.createCellEditor();\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.dg.dgs.cellEditorCreated.emit({ editorRef: this.componentRef, column: this.column, cellEditorRef: this});\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.dg.dgs.cellEditorDestory.emit({ editorRef: this.componentRef, column: this.column, cellEditorRef: this});\r\n        if (this.componentRef) {\r\n            this.componentRef.destroy();\r\n        }\r\n        this.componentRef = null;\r\n        if (this.timer) {\r\n            clearTimeout(this.timer);\r\n        }\r\n    }\r\n\r\n    private createCellEditor() {\r\n\r\n        const editorType = this.column.editor.type;\r\n\r\n        if (!this.dg.editors[editorType]) {\r\n            this.dg.writeConsole(`æ¾ä¸å°åç§°ä¸º ${editorType} å¯¹åºçç±»ã`, 'error');\r\n            return;\r\n        }\r\n\r\n        const factory = this.resolver.resolveComponentFactory(\r\n            this.dg.editors[editorType]\r\n        );\r\n        this.componentRef = this.container.createComponent(factory);\r\n\r\n        // this.componentRef.instance.dg = this.dg;\r\n        // this.app.attachView(this.componentRef.hostView);\r\n        this.componentRef.instance.column = this.column;\r\n        this.componentRef.instance.group = this.group;\r\n        this.componentRef.instance.height = this.height;\r\n        this.componentRef.instance.controlId = (this.dg.id || 'DATAGRID_EDITOR') + '_' + this.column.field;\r\n\r\n        this.updateControlValue();\r\n        this.componentRef.changeDetectorRef.markForCheck();\r\n        this.componentRef.changeDetectorRef.detectChanges();\r\n        // this.app.tick();\r\n        if (this.timer) {\r\n            clearTimeout(this.timer);\r\n        }\r\n        this.timer = setTimeout(() => {\r\n            if (this.componentRef.instance.instance) {\r\n                if (editorType === 'lookup') {\r\n                    if (!this.componentRef.instance.instance.changeDetector.destroyed) {\r\n                        this.componentRef.instance.instance.changeDetector.detectChanges();\r\n                    }\r\n                    // this.componentRef.instance['bindingData'] = this.rowData;\r\n                }\r\n                // if (editorType === 'textarea') {\r\n                //     const textareaEl = this.componentRef.instance.inputElement;\r\n                //     textareaEl.style.height = textareaEl.closest('tr').style.height;\r\n                // }\r\n            }\r\n        });\r\n    }\r\n\r\n    private updateControlValue() {\r\n        if (this.group) {\r\n            this.group['bindingData'] = this.rowData;\r\n            if (this.group.controls[this.column.field]) {\r\n                // if (this.column.editor.type === 'datepicker') {\r\n                //     const dateRef = this.componentRef.instance.instance;\r\n                //     if (dateRef) {\r\n                //         setTimeout(() => {\r\n                //             const { dateFormat } = dateRef.dateOpts;\r\n                //             const val = this.cfs.format(this.value, this.rowData, {type: 'datetime', options: { format: dateFormat}});\r\n                //             this.group.controls[this.column.field].setValue(val, { emitEvent: true });\r\n                //         });\r\n                //     }\r\n                // } else {\r\n                //     this.group.controls[this.column.field].setValue(this.value, { emitEvent: true });\r\n                // }\r\n\r\n                this.group.controls[this.column.field].setValue(this.value, { emitEvent: true });\r\n            }\r\n        }\r\n    }\r\n\r\n    hideCover() {\r\n        if (this.componentRef && this.column.editor && (this.column.editor.type === 'combolist' || this.column.editor.type === 'combo-lookup')) {\r\n            this.componentRef.instance.hide(!1);\r\n        }\r\n    }\r\n}\r\n","/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-12 10:11:59\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-08-12 10:12:05\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\n\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer, SafeHtml, SafeStyle, SafeScript, SafeUrl, SafeResourceUrl } from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n    name: 'safe'\r\n})\r\nexport class SafePipe implements PipeTransform {\r\n\r\n    private dangerWords = ['<script', 'onerror', 'alert('];\r\n\r\n    constructor(protected sanitizer: DomSanitizer) { }\r\n\r\n    public transform(value: any, type: string): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\r\n        switch (type) {\r\n            case 'html': {\r\n                if (value === '' || value === null || value === undefined) {\r\n                    return value;\r\n                }\r\n                // if (!this.hasDanger(value)) {\r\n                //     return value;\r\n                // }\r\n                return this.sanitizer.bypassSecurityTrustHtml(value);\r\n            }\r\n            case 'style': return this.sanitizer.bypassSecurityTrustStyle(value);\r\n            case 'script': return this.sanitizer.bypassSecurityTrustScript(value);\r\n            case 'url': return this.sanitizer.bypassSecurityTrustUrl(value);\r\n            case 'resourceUrl': return this.sanitizer.bypassSecurityTrustResourceUrl(value);\r\n            default: throw new Error(`Invalid safe type specified: ${type}`);\r\n        }\r\n    }\r\n\r\n    private hasDanger(value) {\r\n        if (typeof value  === 'number' || typeof value === 'boolean') {\r\n            return false;\r\n        }\r\n\r\n        let r = 0;\r\n\r\n        this.dangerWords.forEach(n => {\r\n            if (value.indexOf(n) > -1) {\r\n                r++;\r\n            }\r\n        });\r\n\r\n        return r !== 0;\r\n    }\r\n\r\n}\r\n","import { FormGroup } from '@angular/forms';\r\n\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-06 07:43:53\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-10-31 09:11:02\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { Component, OnInit, Input, Output, EventEmitter, OnChanges,\r\n    ViewChild, ElementRef, ChangeDetectionStrategy, ChangeDetectorRef, ViewContainerRef,\r\n    OnDestroy, Injector, Inject, forwardRef, AfterViewInit, SimpleChanges, Renderer2} from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\nimport { ColumnFormatService } from '@farris/ui-common/column';\r\nimport { DataColumn } from '../../types/data-column';\r\nimport { Utils } from '../../utils/utils';\r\nimport { DatagridFacadeService } from '../../services/datagrid-facade.service';\r\nimport { DatagridComponent } from '../../datagrid.component';\r\nimport { DatagridRowDirective } from './datagrid-row.directive';\r\nimport { CellInfo } from '../../services/state';\r\nimport { GridCellEditorDirective } from '../editors/cell-editor.directive';\r\nimport { DatagridService } from '../../services/datagrid.service';\r\nimport { SafePipe } from './../../utils/safe.pipe';\r\nimport { TR_PREFIX } from '../../types/constant';\r\n\r\n     // <ng-container *ngIf=\"!isEditing && !column.template\">\r\n        //     <ng-container *ngIf=\"column.formatter\">\r\n        //         <span *ngIf=\"cellFormatterIsFn\" [innerHtml]=\" column | formatCellData: rowData | safe: 'html'\"></span>\r\n        //         <span *ngIf=\"!cellFormatterIsFn\">{{  column | formatCellData: rowData }}</span>\r\n        //     </ng-container>\r\n        //     <span *ngIf=\"!column.formatter\" [class.grid-cell-nowrap]=\"dg.nowrap\" [class.grid-cell-wrap]=\"!dg.nowrap\">{{  column | formatCellData: rowData }}</span>\r\n        // </ng-container>\r\n        // <span *ngIf=\"!isEditing && !column.template\" cell-content [class.grid-cell-nowrap]=\"dg.nowrap\" [class.grid-cell-wrap]=\"!dg.nowrap\"\r\n        //     [rowData]=\"rowData\" [column]=\"column\" [nowrap]=\"dg.nowrap\"></span>\r\n@Component({\r\n    selector: 'grid-body-cell',\r\n    template: `\r\n    <div\r\n     [attr.cell-tooltip]=\"column.showTips && !isEditing\" [attr.tipMode]=\" column.tipMode || 'auto'\"\r\n     [attr.message]=\"column | tipmsg: rowData\"  [attr.position]=\" column?.tipOptions?.position || 'top-left'\"\r\n     [attr.tipWidth]=\"column?.tipOptions?.width\" [attr.tipHeight]=\"column?.tipOptions?.height\"\r\n     class=\"f-datagrid-cell-content cell-text-align__{{column.field}}\" #cellContainer\r\n    >\r\n        <ng-container *ngIf=\"!isEditing && !column.template\">\r\n            <ng-container *ngIf=\"column.formatter\">\r\n                <span class=\"cell-text-box\" *ngIf=\"cellFormatterIsFn\" [innerHtml]=\" column | formatCellData: rowData | safe: 'html'\"></span>\r\n                <span class=\"cell-text-box\" *ngIf=\"!cellFormatterIsFn\">{{  column | formatCellData: rowData }}</span>\r\n            </ng-container>\r\n            <span *ngIf=\"!column.formatter\" class=\"cell-text-box\" [class.grid-cell-nowrap]=\"dg.nowrap\" [class.grid-cell-wrap]=\"!dg.nowrap\">{{  column | formatCellData: rowData }}</span>\r\n        </ng-container>\r\n\r\n        <ng-container #cellTemplate *ngIf=\"!isEditing && column.template\" [ngTemplateOutlet]=\"column.template\" [ngTemplateOutletContext]=\"{$implicit: cellContext}\"></ng-container>\r\n        <ng-container #cellEditorTemplate *ngIf=\"isEditing && column.editorTemplate\" [ngTemplateOutlet]=\"column.editorTemplate\" [ngTemplateOutletContext]=\"{$implicit: cellContext}\"></ng-container>\r\n        <ng-container #editorTemplate *ngIf=\"isEditing && !column.editorTemplate\" cell-editor [height]=\"controlHeight\" [rowData]=\"rowData\" [value]=\"value\" [column]=\"column\" [group]=\"dr.form\"></ng-container>\r\n    </div>\r\n    `,\r\n    changeDetection: ChangeDetectionStrategy.Default\r\n})\r\nexport class DatagridCellComponent implements OnInit, OnDestroy, AfterViewInit, OnChanges {\r\n    @Input() width: number;\r\n    @Input() height: number;\r\n    @Input() cls = '';\r\n    @Input() column: DataColumn;\r\n    @Input() rowData: any;\r\n    @Input() rowIndex: number;\r\n    @Input() lastColumn = false;\r\n    // @ViewChild('celltip') celltip: DatagridCellTooltipDirective;\r\n\r\n    private _isEditing = false;\r\n    controlHeight = 'auto';\r\n    get isEditing() {\r\n        return this._isEditing;\r\n    }\r\n    @Input() set isEditing(v) {\r\n        if (this._isEditing === v) {\r\n            return;\r\n        }\r\n        this._isEditing = v;\r\n\r\n        if (v) {\r\n            if (!this.dr.form || !Object.keys(this.dr.form.controls).length ) {\r\n                this.dr.initFormControl();\r\n            }\r\n\r\n            if (this.column.editorTemplate && this.column.editorTemplate.elementRef) {\r\n                this.cellContext.formGroup = this.dr.form;\r\n\r\n                setTimeout(() => {\r\n\r\n                    if (this.el) {\r\n                        const input = this.el.nativeElement.querySelector('input,textarea');\r\n                        if (input) {\r\n                            input.focus();\r\n                        }\r\n                    }\r\n                }, 10);\r\n            }\r\n        }\r\n        if (this.column.editor && this.column.editor.type === 'textarea') {\r\n            if (!this.dg.nowrap) {\r\n                this.controlHeight = this.dr.el.nativeElement.offsetHeight;\r\n            }\r\n        }\r\n        if (!this.cd['destroyed']) {\r\n            this.cd.detectChanges();\r\n        }\r\n    }\r\n\r\n    @Input() isSelected = false;\r\n\r\n    @ViewChild('cellContainer') cellContainer: ElementRef;\r\n    @ViewChild('cellTemplate', {read: ViewContainerRef }) cellTemplateVcr: ViewContainerRef;\r\n\r\n\r\n    private _cellEditorTemplate = null;\r\n    @ViewChild('cellEditorTemplate', {read: ViewContainerRef })\r\n    get cellEditorTemplate(): ViewContainerRef {\r\n        return this._cellEditorTemplate;\r\n    }\r\n    set cellEditorTemplate(v) {\r\n        this._cellEditorTemplate = v;\r\n        if (v) {\r\n            this.dg.dgs.cellEditorCreated.emit({ editorRef: null, column: this.column, cellEditorRef: null, templateRef: v});\r\n        }\r\n    }\r\n\r\n    @ViewChild(GridCellEditorDirective) cellEditor;\r\n\r\n\r\n    @Output() cellClick = new EventEmitter();\r\n    @Output() cellDblClick = new EventEmitter();\r\n\r\n    cellContext: any = {};\r\n    get value() {\r\n        if (this.rowData && this.column && this.column.field) {\r\n            return Utils.getValue(this.column.field, this.rowData);\r\n        }\r\n        return '';\r\n    }\r\n\r\n    get formControl() {\r\n        if (this.cellEditor && this.cellEditor.componentRef) {\r\n            return this.cellEditor.componentRef.instance.formControl;\r\n        } else if (this.column.editorTemplate) {\r\n            return this.dr.form.get(this.column.field);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    // get verticalAlign() {\r\n    //     let va = 'center';\r\n    //     switch (this.column.valign) {\r\n    //         case 'top':\r\n    //             va = 'flex-start';\r\n    //             break;\r\n    //         case 'bottom':\r\n    //             va = 'flex-end';\r\n    //             break;\r\n    //         default:\r\n    //             va = 'center';\r\n    //             break;\r\n    //     }\r\n\r\n    //     return va;\r\n    // }\r\n\r\n    // get horizontalAlign() {\r\n    //     let ha = 'flex-start';\r\n    //     if (this.column.align === 'right') {\r\n    //         ha = 'flex-end';\r\n    //     } else if (this.column.align === 'center') {\r\n    //         ha = 'center';\r\n    //     }\r\n    //     return ha;\r\n    // }\r\n\r\n    // get cellStyle() {\r\n    //     // const w = this.lastColumn ? (this.column.width - 6) + 'px' : '100%';\r\n    //     // const style = {\r\n    //     //     width: w\r\n    //     // };\r\n    //     if (!this.isEditing) {\r\n    //         return Object.assign({}, {\r\n    //             'align-items': this.verticalAlign,\r\n    //             'justify-content': this.horizontalAlign\r\n    //         });\r\n    //     } else {\r\n    //         return Object.assign({}, {\r\n    //             'justify-content': this.horizontalAlign\r\n    //         });\r\n    //     }\r\n    // }\r\n\r\n    get cellFormatterIsFn() {\r\n        return typeof this.column.formatter === 'function' || this.column.formatter.type === 'boolean';\r\n    }\r\n\r\n    cellStyler: any = {};\r\n\r\n    private dfs: DatagridFacadeService;\r\n    private dgs: DatagridService;\r\n    private cellSubscription: Subscription;\r\n    private rowUpdateSubscription: Subscription;\r\n    private safePipe: SafePipe = null;\r\n    private render: Renderer2;\r\n    private ro: ResizeObserver = null;\r\n    canEdit = () => this.dg.editable && this.dg.editMode === 'cell' && this.column.editor;\r\n    constructor(\r\n        @Inject(forwardRef(() => DatagridComponent)) public dg: DatagridComponent,\r\n        @Inject(forwardRef(() => DatagridRowDirective)) public dr: DatagridRowDirective,\r\n        public el: ElementRef, public cd: ChangeDetectorRef, private injector: Injector,\r\n        public colFormatSer: ColumnFormatService,\r\n        private domSanitizer: DomSanitizer\r\n    ) {\r\n        this.dfs = this.injector.get(DatagridFacadeService);\r\n        this.dgs = this.injector.get(DatagridService);\r\n        this.safePipe = new SafePipe(this.domSanitizer);\r\n        this.render = this.injector.get(Renderer2);\r\n        // this.cellSubscription = this.dfs.currentCell$.pipe(\r\n        //     filter((cell: CellInfo) => {\r\n        //         return cell && this.column.editor && cell.rowIndex === this.rowIndex && cell.field === this.column.field;\r\n        //     })\r\n        // ).subscribe((cell: CellInfo) => {\r\n        //     if (cell && this.column.editor) {\r\n        //         this.isEditing = cell.isEditing;\r\n        //         cell.cellRef = this;\r\n        //         cell.column = this.column;\r\n\r\n        //         if (!this.cd['destroyed']) {\r\n        //             this.cd.detectChanges();\r\n        //         }\r\n        //     }\r\n        // });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.initCellTemplateContext();\r\n    }\r\n\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.rowData && !changes.rowData.isFirstChange()) {\r\n            this.initCellTemplateContext();\r\n            this.buildCustomCellStyle();\r\n\r\n            if (this.formControl) {\r\n                const val = Utils.getValue(this.column.field, this.rowData);\r\n                this.formControl.setValue(val);\r\n            }\r\n        }\r\n    }\r\n\r\n    private initCellTemplateContext() {\r\n        this.cellContext = {\r\n            field: this.column.field,\r\n            rowIndex: this.rowIndex,\r\n            rowData: this.rowData,\r\n            column: this.column,\r\n            instance: this,\r\n            formGroup: this.dr.form,\r\n            tools: {\r\n                utils: this.dg.commonUtils,\r\n                format: this.dg.colFormatSer,\r\n                number: this.dg.colFormatSer['numberhelper'],\r\n                date: this.dg.colFormatSer['datehelper']\r\n            },\r\n        };\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.buildCustomCellStyle();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.cellSubscription) {\r\n            this.cellSubscription.unsubscribe();\r\n            this.cellSubscription = null;\r\n        }\r\n\r\n        if (this.rowUpdateSubscription) {\r\n            this.rowUpdateSubscription.unsubscribe();\r\n            this.rowUpdateSubscription = null;\r\n        }\r\n\r\n\r\n        this.cellContext = null;\r\n    }\r\n\r\n\r\n    private buildCustomCellStyle(rowData = null) {\r\n        const td = this.el.nativeElement.parentNode;\r\n        if (!td.id) {\r\n            td.id = TR_PREFIX + this.dr.rowId + '_' + this.rowIndex + '-' + this.column.field;\r\n        }\r\n        td.id = td.id.replace(/\\./g, '_');\r\n\r\n        if (this.column.styler) {\r\n            const _rd = rowData || this.rowData;\r\n            const fieldValue = Utils.getValue(this.column.field, _rd);\r\n            const cs = this.column.styler(fieldValue, _rd, this.rowIndex);\r\n            if (cs && Object.keys(cs).length) {\r\n                this.dg.renderCustomStyle(cs, td);\r\n            }\r\n        } else {\r\n            this.dg.dgs.removeCssRule('#' + td.id);\r\n        }\r\n    }\r\n\r\n    updateValue(val?: any) {\r\n        if (this.dr.form) {\r\n            // this.rowData = Object.assign(this.rowData, this.dr.form.value);\r\n            Utils.setValue(this.column.field, val, this.rowData);\r\n            // this.rowData = {...this.rowData};\r\n            const rowid = this.rowData[this.dg.idField];\r\n            const item = this.dg.data.find(n => n[this.dg.idField] === rowid);\r\n            if (item) {\r\n                Utils.setValue(this.column.field, val, item);\r\n            }\r\n\r\n            this.dfs.updateCheckedData(rowid, { [this.column.field]: val });\r\n\r\n            if (!this.cd['destroyed']) {\r\n                this.cd.detectChanges();\r\n            }\r\n        }\r\n    }\r\n}\r\n","/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-06 07:43:07\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-11-19 15:48:27\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { Directive, Input, ElementRef, Renderer2, OnInit, ContentChild, OnDestroy, Injector, forwardRef, Inject, AfterViewInit, NgZone, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { filter, map, switchMap, takeLast, debounceTime, takeUntil } from 'rxjs/operators';\r\nimport { DatagridService } from './../../services/datagrid.service';\r\nimport { DatagridCellComponent } from './datagrid-cell.component';\r\nimport { DatagridBodyComponent } from './datagrid-body.component';\r\nimport { DatagridRowDirective } from './datagrid-row.directive';\r\nimport { DataColumn } from './../../types/data-column';\r\nimport { DatagridFacadeService } from '../../services/datagrid-facade.service';\r\nimport { DatagridComponent } from '../../datagrid.component';\r\nimport { CELL_SELECTED_CLS, CELL_EDITING_CLS, ALLOW_EDIT_CELL_HIGHLIGHT_CLS, TR_PREFIX, TR_ID_PREFIX } from '../../types/constant';\r\nimport { DomHandler } from '../../services/domhandler';\r\nimport { of, Subscription,  noop, Subject  } from 'rxjs';\r\nimport { Utils } from '../../utils/utils';\r\n\r\n@Directive({\r\n    selector: '[cell-editable]',\r\n    exportAs: 'cellEditable'\r\n})\r\nexport class DatagridCellEditableDirective implements OnInit, OnDestroy, OnChanges, AfterViewInit {\r\n    @Input('cell-editable') rowData: any;\r\n    @Input() column: DataColumn;\r\n\r\n    private clickTimer: any;\r\n\r\n    private cellclick: any;\r\n    private celldblclick: any;\r\n    private bindCellEventSubscription: Subscription;\r\n\r\n    private editorInputKeydownEvent: any;\r\n    editor: any;\r\n    formControl: FormControl;\r\n    cellEditorRef: any;\r\n    // get editor() {\r\n    //     if (this.dc.cellEditor) {\r\n    //         const _editor = this.dc.cellEditor.componentRef.instance;\r\n    //         this.dg.pending = _editor.pending;\r\n    //         return _editor;\r\n    //     }\r\n    //     return null;\r\n    // }\r\n\r\n    // get formControl() {\r\n    //     if (this.editor) {\r\n    //         return this.editor.formControl as FormControl;\r\n    //     }\r\n    //     return null;\r\n    // }\r\n\r\n    @ContentChild(DatagridCellComponent) dc: DatagridCellComponent;\r\n    private dgb: DatagridBodyComponent;\r\n    private dr: DatagridRowDirective;\r\n    private dfs: DatagridFacadeService;\r\n    private dgs: DatagridService;\r\n\r\n    // private _readonly$ = null;\r\n    private cellEditorCreatedSubscription = null;\r\n    private cellEditorDestorySubscription = null;\r\n    private destroy$ = new Subject();\r\n\r\n    private validMessageEle = null;\r\n    constructor(\r\n        private injector: Injector, public el: ElementRef, private render: Renderer2,\r\n        @Inject(forwardRef(() => DatagridComponent)) public dg: DatagridComponent, public ngZone: NgZone) {\r\n        this.dgb = this.injector.get(DatagridBodyComponent);\r\n        this.dr = this.injector.get(DatagridRowDirective);\r\n        this.dfs = this.injector.get(DatagridFacadeService);\r\n        this.dgs = this.injector.get(DatagridService);\r\n\r\n\r\n        if (!this.cellEditorCreatedSubscription) {\r\n            this.cellEditorCreatedSubscription = this.dgs.cellEditorCreated.pipe(\r\n                takeUntil(this.destroy$)\r\n            ).pipe(\r\n                filter(({ column, editorRef, cellEditorRef, templateRef }) => {\r\n                    return column.field === this.column.field && this.dg.selectedRow.id === this.dr.rowId;\r\n                })\r\n            ).subscribe(({ editorRef, cellEditorRef, templateRef }) => {\r\n                if (editorRef) {\r\n                    this['editor'] = editorRef.instance;\r\n                    this['formControl'] = this.editor.formControl as FormControl;\r\n                    this.cellEditorRef = cellEditorRef;\r\n                    this.emitBeginEdit();\r\n                } else {\r\n                    this['formControl'] = this.dr.form.get(this.column.field) as FormControl;\r\n                    this.bindEditorInputEvent();\r\n                    this.dg.beginEdit.emit({ editor: null, column: this.column, rowData: this.rowData, gridInstance: this.dg, template: templateRef });\r\n                }\r\n            });\r\n        }\r\n\r\n        this.dg.dgs.cellEditorDestory.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).pipe(\r\n            filter(({ column }) => {\r\n                return this.dg.selectedRow && column.field === this.column.field && this.dg.selectedRow.id === this.dr.rowId;\r\n            })\r\n        ).subscribe((e: any) => {\r\n            if (this.dg.editMode === 'cell') {\r\n                this.dg.selectedRow.editors = [];\r\n                if (this.dg.currentCell) {\r\n                    this.dg.currentCell.editor = null;\r\n                    this.dg.currentCell.cellEditorRef = null;\r\n                }\r\n            }\r\n            this.unBindEditorInputEvent();\r\n            this.cellEditorRef = null;\r\n            this.formControl = null;\r\n            this.editor = null;\r\n\r\n            this.removeValidMessage();\r\n        });\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.rowData && !changes.rowData.isFirstChange()) {\r\n            this.setCellClsWithEditorType();\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.initCellEvent();\r\n        this.setCellClsWithEditorType();\r\n    }\r\n\r\n    private initCellEvent() {\r\n        // this.cellclick = this.render.listen(this.el.nativeElement, 'click', (e) => this.onClickCell(e));\r\n        if (this.column && (this.column.editor || this.column.editorTemplate)) {\r\n            if (!this.dg.clickToEdit) {\r\n                this.celldblclick = this.render.listen(this.el.nativeElement, 'dblclick', (e) => {\r\n                    this.onDblClickCell(e);\r\n                });\r\n            }\r\n            this.el.nativeElement.edit = (e) => this.onClickCell(e);\r\n            this.el.nativeElement.editCell = (e) => {\r\n                this.openCellEditor();\r\n            };\r\n        } else {\r\n            this.clickTimer = 0;\r\n        }\r\n        this.el.nativeElement.gridCellData = { rowData: this.rowData, rowIndex: this.dr.rowIndex };\r\n        this.el.nativeElement.closeEdit = () => this.closeEditingCell();\r\n        this.el.nativeElement.selectCell = (e, el) => {\r\n            if (this.dg.disableRow && this.dg.disableRow(this.rowData, this.dr.rowIndex)) {\r\n                return;\r\n            }\r\n\r\n            if (this.dg.currentCell && this.dg.currentCell.cellElement.id === el.id && !this.dg.keepSelect) {\r\n                this.dg.cancelSelectCell();\r\n            } else {\r\n                this.selectCell(this.column.field, el);\r\n                this.dg.cellClick.emit({ column: this.column, rowData: this.rowData, gridInstance: this.dg, event: e });\r\n            }\r\n        };\r\n        this.el.nativeElement.cancelSelected = () => {\r\n            // DomHandler.removeClass(this.el.nativeElement, CELL_SELECTED_CLS);\r\n            // DomHandler.removeClass(this.el.nativeElement, CELL_EDITING_CLS);\r\n            this.render.removeClass(this.el.nativeElement, CELL_SELECTED_CLS);\r\n            this.render.removeClass(this.el.nativeElement, CELL_EDITING_CLS);\r\n        };\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n\r\n        if (this.cellclick) {\r\n            this.cellclick();\r\n        }\r\n\r\n        if (this.celldblclick) {\r\n            this.celldblclick();\r\n        }\r\n\r\n        this.unBindEditorInputEvent();\r\n\r\n        if (this.bindCellEventSubscription) {\r\n            this.bindCellEventSubscription.unsubscribe();\r\n            this.bindCellEventSubscription = null;\r\n        }\r\n\r\n        if (this.cellEditorCreatedSubscription) {\r\n            this.cellEditorCreatedSubscription.unsubscribe();\r\n            this.cellEditorCreatedSubscription = null;\r\n        }\r\n\r\n        if (this.cellEditorDestorySubscription) {\r\n            this.cellEditorDestorySubscription.unsubscribe();\r\n            this.cellEditorDestorySubscription = null;\r\n        }\r\n\r\n        this.editor = null;\r\n        this.cellEditorRef = null;\r\n        this.formControl = null;\r\n\r\n        if (this.el) {\r\n            this.el.nativeElement.cancelSelected = noop;\r\n            this.el.nativeElement.selectCell = noop;\r\n            this.el.nativeElement.closeEdit = noop;\r\n            this.el.nativeElement.gridCellData = noop;\r\n            this.el.nativeElement.edit = noop;\r\n            this.el.nativeElement.selectCell = noop;\r\n            this.el = null;\r\n        }\r\n    }\r\n\r\n    private isDifferentCell() {\r\n        if (!this.dg.currentCell) {\r\n            return true;\r\n        } else {\r\n            if (!this.dg.selectedRow || this.dg.selectedRow.index !== this.dr.rowIndex) {\r\n                return true;\r\n            } else {\r\n                if (this.dr.rowIndex !== this.dg.currentCell.rowIndex) {\r\n                    return true;\r\n                } else {\r\n                    return this.dg.currentCell.field !== this.column.field;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private onClickCell(event: any) {\r\n        // å³é­å¶ä»Grid çç¼è¾å¨\r\n        document.body.click();\r\n\r\n        this.dg.beforeClickCell.emit({ rowIndex: this.dr.rowIndex, rowData: this.rowData, column: this.column, gridInstance: this.dg });\r\n\r\n        if (this.dr.disabled) {\r\n            return;\r\n        }\r\n\r\n        // 20210422\r\n        // if (this.dg.closeOtherGridEditor) {\r\n        //     document.body.click();\r\n        // }\r\n\r\n        if (this.dg.disabled) {\r\n            return;\r\n        } else {\r\n            if (!this.dg.editable || this.isReadonly()) {\r\n                if (this.dg.enableHighlightCell) {\r\n                    event.stopPropagation();\r\n                    this.dg.endEditing();\r\n                    this.selectCell(this.column.field);\r\n                }\r\n                return;\r\n            } else {\r\n                if (this.dg.editMode === 'row') {\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.dg.selectionMode === 'default' && event) {\r\n            if (event.ctrlKey || event.shiftKey) {\r\n                return;\r\n            }\r\n        }\r\n\r\n\r\n        event.stopPropagation();\r\n        if (event.target['nodeName'] === 'INPUT') {\r\n            return;\r\n        }\r\n\r\n\r\n        // if (this.dg.clickToEdit && !this.dg.dblclickRow.observers.length) {\r\n        //     this.dg.clickDelay = 0;\r\n        // }\r\n\r\n\r\n        this.render.addClass(this.dg.el.nativeElement, 'f-datagrid-unselect');\r\n\r\n        if (!this.dg.isSingleClick && this.dg.editMode) {\r\n            this.dg.isSingleClick = true;\r\n\r\n            if (this.clickTimer) {\r\n                clearTimeout(this.clickTimer);\r\n            }\r\n\r\n            this.clickTimer = setTimeout(() => {\r\n                if (this.dg.isSingleClick && this.dg.editable && this.dg.editMode === 'cell') {\r\n                    this.dg.isSingleClick = false;\r\n                    clearTimeout(this.clickTimer);\r\n                    // if (!this.closeEditingCell()) {\r\n                    //     return;\r\n                    // }\r\n                    this.closeEditingCell().pipe(\r\n                        takeUntil(this.destroy$)\r\n                    ).subscribe((f: any) => {\r\n                        if (f) {\r\n                            if (this.dg.clickToEdit) {\r\n                                this.openCellEditor();\r\n                            } else {\r\n                                this.selectCell(this.column.field);\r\n                            }\r\n                            this.render.removeClass(this.dg.el.nativeElement, 'f-datagrid-unselect');\r\n                            event.preventDefault();\r\n                        }\r\n                    });\r\n                }\r\n            }, this.dg.clickDelay);\r\n        }\r\n    }\r\n\r\n    private onDblClickCell(event: MouseEvent) {\r\n        if (this.dg.disabled || this.isReadonly()) {\r\n            return;\r\n        }\r\n\r\n        if (event.target['nodeName'] === 'INPUT' || event.target['nodeName'] === 'TEXTAREA') {\r\n            return;\r\n        }\r\n        if (this.dg.editable && this.dg.editMode === 'cell') {\r\n            if (this.clickTimer) {\r\n                this.dg.isSingleClick = false;\r\n                clearTimeout(this.clickTimer);\r\n                this.clickTimer = null;\r\n            }\r\n            \r\n            this.closeEditingCell().pipe(takeUntil(this.destroy$)).subscribe(f => {\r\n                if (f) {\r\n                    setTimeout(() => {\r\n                        this.openCellEditor();\r\n                    });\r\n                }\r\n            });\r\n        }\r\n  \r\n    }\r\n\r\n    isReadonly(col = this.column) {\r\n        if (this.dg.editable) {\r\n            // åä¸åå¹¶çååæ ¼ä¸åè®¸ç¼è¾\r\n            if (this.dg.mergeCell && this.dg.mergeFields.indexOf(col.field) > -1) {\r\n                return true;\r\n            }\r\n            return this.getReadonlyValue(col);\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    private getReadonlyValue(col = this.column) {\r\n        if (col.readonly !== undefined) {\r\n            if (typeof col.readonly === 'boolean') {\r\n                return col.readonly;\r\n            } else if (typeof col.readonly === 'function') {\r\n                return col.readonly(this.rowData);\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    openCellEditor() {\r\n        // å½åè¡ç¦ç¨ï¼ä¸åè®¸ç¼è¾ã\r\n        if (this.dr.disabled) {\r\n            return;\r\n        }\r\n\r\n        if ((!this.column.editor && !this.column.editorTemplate) || !this.dg.editable || this.isReadonly()) {\r\n            if (this.dg.selectionMode === 'default' && this.dg.multiSelect) {\r\n                this.dg.clearCheckeds();\r\n            }\r\n            this.selectCell(this.column.field);\r\n            return;\r\n        }\r\n\r\n        const beforeEditEvent = this.dg.beforeEdit({ rowIndex: this.dr.rowIndex, rowData: this.rowData, column: this.column, gridInstance: this.dg });\r\n        if (!beforeEditEvent || !beforeEditEvent.subscribe) {\r\n            this.dg.writeConsole('please return an Observable Type.');\r\n            return;\r\n        }\r\n\r\n        if (this.dg.currentCell) {\r\n            if (!this.dg.currentCell.cellRef || this.dg.currentCell.cellRef.column.field !== this.column.field) {\r\n                this.dg.currentCell.cellRef = this.dc;\r\n            }\r\n        }\r\n\r\n\r\n        beforeEditEvent.pipe(takeUntil(this.destroy$)).subscribe((flag) => {\r\n            if (flag) {\r\n                if (this.isDifferentCell()) {\r\n\r\n                    if (this.dg.selectionMode === 'default' && this.dg.multiSelect) {\r\n                        this.dg.clearCheckeds();\r\n                    }\r\n\r\n                    this.selectCell(this.column.field);\r\n                }\r\n                this.dfs.editCell();\r\n            } else {\r\n                this.selectCell(this.column.field);\r\n            }\r\n        });\r\n    }\r\n\r\n    private emitBeginEdit() {\r\n\r\n        const _cellEditorRef = this.cellEditorRef || this.dc.cellEditor;\r\n\r\n        this.render.removeClass(this.dg.el.nativeElement, 'f-datagrid-unselect');\r\n\r\n        if (this.dg.editMode === 'cell') {\r\n            this.dg.selectedRow.editors = [this.editor];\r\n            this.dg.currentCell.editor = this.editor;\r\n            this.dg.currentCell.cellEditorRef = _cellEditorRef;\r\n            this.bindEditorInputEvent();\r\n\r\n            this.render.addClass(this.el.nativeElement, CELL_EDITING_CLS);\r\n\r\n            // this.formControl.setValue(this.dc.value);\r\n            this.dg.beginEdit.emit({ editor: _cellEditorRef, column: this.column, rowData: this.rowData, gridInstance: this.dg });\r\n\r\n            if (this.column.editor.type === 'textarea' && this.column.editor.options && this.column.editor.options.editType === 'dialog') {\r\n                this.editor.showDialog();\r\n            }\r\n        }\r\n\r\n        if (this.dr && !this.dg.nowrap) {\r\n            setTimeout(() => {\r\n                this.dr.updateRowHeight();\r\n            });\r\n        }\r\n\r\n        if (this.editor) {\r\n            this.validMessageEle = this.showValidMessage();\r\n        }\r\n    }\r\n\r\n    removeValidMessage() {\r\n        // ç§»é¤éªè¯ä¿¡æ¯\r\n        if (this.validMessageEle) {\r\n            this.validMessageEle.remove();\r\n            this.validMessageEle = null;\r\n            if (this.dg.formValidations) {\r\n                delete this.dg.formValidations[this.column.field];\r\n            }\r\n        }\r\n    }\r\n\r\n    showValidMessage() {\r\n        if (this.dg.formValidations && this.dg.formValidations[this.column.field]) {\r\n            const {isValid, message} = this.dg.formValidations[this.column.field];\r\n            if (!isValid && message) {\r\n                const tr = this.editor.el.nativeElement.closest('tr');\r\n                const td = this.editor.el.nativeElement.closest('td');\r\n                const parentContainver = this.editor.el.nativeElement.closest('.f-datagrid-table');\r\n\r\n                const box = document.createElement('div');\r\n                const msgWrap = document.createElement('span');\r\n                box.appendChild(msgWrap);\r\n                msgWrap.innerText = message;\r\n\r\n                box.style.position = 'absolute';\r\n                box.style.background = '#FDEFEF';\r\n                box.style.color = '#F46160';\r\n\r\n                let top = tr.offsetTop - 21;\r\n                if (tr.getAttribute('index') == '0') {\r\n                    top = tr.offsetHeight; \r\n                }\r\n\r\n                box.style.top = `${top}px`;\r\n                box.style.left = `${td.offsetLeft + 5}px`;\r\n                box.style.zIndex = '996';\r\n                box.style.padding = '0.1875rem 0.5rem';\r\n                box.style.fontSize = '.8125rem';\r\n                box.style.lineHeight = '14px';\r\n\r\n                // document.body.append(box);\r\n                parentContainver.append(box);\r\n\r\n                return box;\r\n            }\r\n\r\n            return null;\r\n        }\r\n    }\r\n\r\n    closeEditingCell() {\r\n        if (!this.dg.isCellEditing()) {\r\n            return of(true);\r\n        }\r\n\r\n        let currentCell = null;\r\n        let editor: any = null;\r\n        if (this.dg.currentCell) {\r\n            // this.dg.currentCell.isEditing = false;\r\n            // this.dfs.getCurrentCell().isEditing = false;\r\n\r\n            currentCell = this.dg.currentCell.cellRef as DatagridCellComponent;\r\n            if (currentCell) {\r\n                if (!currentCell.isEditing) {\r\n                    return of(true);\r\n                }\r\n\r\n                if (currentCell.cellEditor && currentCell.cellEditor.componentRef && !currentCell.column.editorTemplate) {\r\n                    editor = currentCell.cellEditor.componentRef.instance;\r\n\r\n                    if (editor) {\r\n                        // æ§è¡blur äºä»¶\r\n                        if (editor.inputElement) {\r\n                            const domName = editor.inputElement.nodeName;\r\n                            const blurFn =  editor.options && editor.options.onBlur;\r\n                            if (blurFn) {\r\n                                if ((domName === 'INPUT' || domName === 'TEXTAREA') &&  this.dg['focusElement'] === editor.inputElement) {\r\n                                    blurFn({ editorRef: editor, rowData: currentCell.rowData});\r\n                                }\r\n                            }\r\n                            if (editor.inputElement.blur) {\r\n                                editor.inputElement.blur();\r\n                            }\r\n\r\n                            this.dg['focusElement'] = null;\r\n                        }\r\n\r\n                        if (editor.blur) {\r\n                            editor.blur();\r\n                        }\r\n\r\n                        if (editor.pending) {\r\n                            return of(false);\r\n                        }\r\n\r\n                        if (editor.formControl) {\r\n                            if (editor.formControl.pending) {\r\n                                return of(false);\r\n                            }\r\n\r\n                            if (editor.formControl && editor.formControl.invalid && !this.dg.endEditByInvalid) {\r\n                                return of(false);\r\n                            }\r\n                        } else {\r\n                            return of(true);\r\n                        }\r\n                    } else {\r\n                        return of(true);\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            return of(true);\r\n        }\r\n\r\n        this.dg.isSingleClick = false;\r\n        const _col_ = (editor || currentCell).column;\r\n        const afterEditEvent = this.dg.afterEdit(currentCell.rowIndex, currentCell.rowData, _col_, editor);\r\n        if (!afterEditEvent || !afterEditEvent.subscribe) {\r\n            this.dg.writeConsole('please return an Observable Type.');\r\n            return of(undefined);\r\n        }\r\n\r\n        // let cellEndEdit = of(undefined);\r\n        let cellEndEdit = new Subject();\r\n\r\n        afterEditEvent.pipe(takeUntil(this.destroy$)).subscribe((flag: boolean) => {\r\n            if (flag) {\r\n\r\n                let val = currentCell.value === undefined ? '' : currentCell.value;\r\n                if (currentCell && currentCell.formControl && currentCell.formControl.value !== undefined && val !== currentCell.formControl.value) {\r\n                    val = currentCell.formControl.value;\r\n                    currentCell.isEditing = false;\r\n                    currentCell.updateValue(val);\r\n                }\r\n\r\n                this.dfs.endEditCell();\r\n                this.dgs.onEndCellEdit(this.dfs.getCurrentCell());\r\n                this.unBindEditorInputEvent();\r\n                // ç§»é¤ç¼è¾æ ·å¼\r\n                this.render.removeClass(this.el.nativeElement, CELL_EDITING_CLS);\r\n\r\n                if (this.dg.selectedRow) {\r\n                    this.dg.selectedRow.editors = [];\r\n                }\r\n                // this.dg.selectedRow.data = this.rowData;\r\n                // æ´æ°è¡æ ·å¼æèååæ ¼æ ·å¼\r\n                this.dfs.rowUpdate$.next({ index: currentCell.rowIndex, data: currentCell.rowData, cellRef: currentCell });\r\n\r\n                // æ´æ°footerData\r\n                this.dgs.refreshFooterData.emit();\r\n               \r\n                // å·æ°è¡æ°æ®\r\n                // this.dr.refresh();\r\n                if (this.dg.selectedRow && this.dg.selectedRow.dr) {\r\n                    this.dg.selectedRow.dr.refresh();\r\n                }\r\n\r\n                if (this['ENDEDIT_TIMER']) {\r\n                    clearTimeout(this['ENDEDIT_TIMER']);\r\n                }\r\n\r\n                const { rowIndex, rowData } = currentCell;\r\n\r\n                this['ENDEDIT_TIMER'] = setTimeout(() => {\r\n                    this.dg.endEdit.emit({ rowIndex, rowData, column: _col_, value: val});\r\n                    // cellEndEdit = of(true);\r\n                    cellEndEdit.next(true);\r\n                }, 100);\r\n            } else {\r\n                if (currentCell && currentCell.cellEditor && currentCell.cellEditor.componentRef && currentCell.cellEditor.componentRef.instance) {\r\n                    editor = currentCell.cellEditor.componentRef.instance;\r\n                    editor.inputElement.focus();\r\n                    // cellEndEdit = of(false);\r\n                    cellEndEdit.next(false);\r\n                } else {\r\n                    // cellEndEdit = of(true);\r\n                    cellEndEdit.next(true);\r\n                }\r\n            }\r\n        });\r\n        return cellEndEdit.asObservable();\r\n    }\r\n\r\n    cancelCellEditing() {\r\n        if (this.dg.currentCell && this.dg.currentCell.isEditing && this.dg.selectedRow.index > -1) {\r\n            // this.dfs.resetRow(this.dg.selectedRow.id);\r\n            this.dc.rowData = this.dg.selectedRow.data;\r\n            this.formControl.reset(Utils.getValue(this.column.field, this.dc.rowData));\r\n            this.closeEditingCell();\r\n        }\r\n    }\r\n\r\n\r\n    bindEditorInputEvent() {\r\n        const ceRef = this.cellEditorRef || this.dc.cellEditor;\r\n        let input = null;\r\n        if (ceRef) {\r\n            input = ceRef.componentRef.instance.inputElement;\r\n        } else {\r\n            if (this.column.editorTemplate) {\r\n                input = this.dc.el.nativeElement.querySelector('input,textarea');\r\n            }\r\n        }\r\n        if (input) {\r\n            input.focus();\r\n            if (this.dg.selectOnEditing && this.column.editorTemplate) {\r\n                setTimeout(() => {\r\n                    if (input.select) { input.select(); }\r\n                });\r\n            }\r\n\r\n            this.editorInputKeydownEvent = this.render.listen(input, 'keydown', (e) => {\r\n                this.onKeyDownForInput(e);\r\n            });\r\n        }\r\n    }\r\n\r\n    unBindEditorInputEvent() {\r\n        if (this.editorInputKeydownEvent) {\r\n            this.editorInputKeydownEvent();\r\n            this.editorInputKeydownEvent = null;\r\n        }\r\n    }\r\n\r\n    // private isLastCell() {\r\n    //     let i = this.dg.flatColumns.length;\r\n    //     while(i <= ) {\r\n    //         if (this.dg.flatColumns[i])\r\n    //     }\r\n    // }\r\n\r\n    findLastEditCell() {\r\n        let i = this.dg.colGroup.columns.length - 1;\r\n        let _col = null;\r\n        while(i >= 0) {\r\n            const col = this.dg.colGroup.columns[i];\r\n            if (col.editor || col.editorTemplate) {\r\n                _col = col;\r\n                break;\r\n            } else {\r\n                i--;\r\n            }\r\n        }\r\n\r\n        return _col;\r\n    }\r\n\r\n    onKeyDownForInput(e: KeyboardEvent) {\r\n        const keyCode = e.keyCode;\r\n        if (e.altKey || e.ctrlKey) {\r\n            return;\r\n        }\r\n        if ((this.editor && this.editor.stopPropagation) || keyCode === 13 || this.column.editorTemplate) {\r\n            e.stopPropagation();\r\n        }\r\n\r\n        switch (keyCode) {\r\n            case 32:  // SPACE\r\n                if (this.column.editor.type === 'switch') {\r\n                    e.preventDefault();\r\n                    this.editor.instance.updateChecked(e, false);\r\n                }\r\n                break;\r\n            case 13:  // Enter\r\n                this.closeEditingCell().pipe(takeUntil(this.destroy$)).pipe(\r\n                    debounceTime(100)\r\n                ).subscribe(f => {\r\n                    if (f) {\r\n                        this.dg.dgContainer.nativeElement.focus();\r\n                        const lastEditCell = this.findLastEditCell();\r\n                        \r\n                        const enterParam = { gird: this.dg, cell: this.dg.currentCell, event: e, lastCell: lastEditCell.field === this.column.field };\r\n                        if (this.column.onEnterHandler) {\r\n                            this.column.onEnterHandler(enterParam);\r\n                        } else {\r\n                            const nextTd = this.dg.findNextCell(this.column.field, 'right');\r\n                            if (this.dg.currentCell.lastRow && (!nextTd || lastEditCell.field === this.column.field)) {\r\n                                this.dg.lastCellEnterHandler.emit(enterParam);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n                break;\r\n            case 27: // ESC\r\n                this.cancelCellEditing();\r\n                break;\r\n            case 9: // Tab\r\n                e.stopPropagation();\r\n                this.dg.clickDelay = 0;\r\n                if (e.shiftKey) {\r\n                    this.closeEditingCell().pipe(takeUntil(this.destroy$)).subscribe(f => {\r\n                        if (f) {\r\n                            this.movePrevCellAndEdit();\r\n                        }\r\n                    });\r\n                } else {\r\n                    this.closeEditingCell().pipe(takeUntil(this.destroy$)).subscribe(f => {\r\n                        if (f) {\r\n                            this.moveNextCellAndEdit(e);\r\n                        }\r\n                    });\r\n                    e.preventDefault();\r\n                }\r\n                break;\r\n            case 40: // â\r\n                /** éä¸­ä¸ä¸è¡ï¼ä¸å½ååè¿å¥ç¼è¾æ; ä»æ®éææ¬è¾å¥æ¡æ¯æ */\r\n                if (this.column.editor.type === 'textbox') {\r\n                    this.closeEditingCell().pipe(takeUntil(this.destroy$)).subscribe(f => {\r\n                        if (f) {\r\n                            this.selectNextRowAndEditCell(this.column.field, 'down');\r\n                        }\r\n                    });\r\n                    e.preventDefault();\r\n                }\r\n                break;\r\n            case 38: // â\r\n                /** éä¸­ä¸ä¸è¡ï¼ä¸å½ååè¿å¥ç¼è¾æ; ä»æ®éææ¬è¾å¥æ¡æ¯æ */\r\n                if (this.column.editor.type === 'textbox') {\r\n                    this.closeEditingCell().pipe(takeUntil(this.destroy$)).subscribe(f => {\r\n                        if (f) {\r\n                            this.selectNextRowAndEditCell(this.column.field, 'up');\r\n                        }\r\n                    });\r\n                    e.preventDefault();\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    private selectCell(field: string, tdElement?: any) {\r\n        this.closeEditingCell().subscribe(t => {\r\n            if (!t) {\r\n                return;\r\n            }\r\n            tdElement = tdElement || this.el.nativeElement;\r\n            this.clearCellSelectedClass();\r\n\r\n            if (field !== this.dg.ControlPanelFeild) {\r\n                this.render.addClass(tdElement, CELL_SELECTED_CLS);\r\n            }\r\n\r\n            // this.dr.drHover.setRowHoverCls(false);\r\n            this.dfs.setCurrentCell(this.dr, field, tdElement, this.dc);\r\n            if (!this.dg.fast && this.column.fixed !== 'left' && this.column.fixed !== 'right') {\r\n                this.moveScrollbar(tdElement);\r\n            }\r\n        });\r\n    }\r\n\r\n    private moveScrollbar(td: any) {\r\n        const tdPosLeft = td.offsetLeft + td.offsetWidth;\r\n        const containerWidth = this.dg.width - this.dgb.columnsGroup.leftFixedWidth - this.dgb.columnsGroup.rightFixedWidth;\r\n        const tdRect = td.getBoundingClientRect();\r\n        const scrollContainer = this.dgb.ps.elementRef.nativeElement;\r\n        const psContainer = scrollContainer.getBoundingClientRect();\r\n        const scrollTop = scrollContainer.scrollTop;\r\n        const scrollLeft = scrollContainer.scrollLeft;\r\n        const scrollbarXLeft = this.dgb.ps.elementRef.nativeElement.scrollLeft;\r\n        if (tdPosLeft > containerWidth) {\r\n            const x = tdPosLeft - containerWidth + 2;\r\n            // const x = tdPosLeft - this.dgb.ps.instance.scrollbarXWidth + 2;\r\n            if (x > scrollbarXLeft) {\r\n                this.dgb.ps.scrollToX(x);\r\n            }\r\n        } else {\r\n            // if (tdRect.x < psContainer.x) {\r\n            //     const x = scrollLeft - tdRect.x;\r\n            //     this.dgb.ps.scrollToX(x);\r\n            // }\r\n            if (td.offsetLeft < scrollLeft) {\r\n                this.dgb.ps.scrollToX(td.offsetLeft);\r\n            }\r\n        }\r\n\r\n        const tdPosTop = tdRect.top - psContainer.top + tdRect.height;\r\n        if (tdPosTop > psContainer.height) {\r\n            const y = tdPosTop - psContainer.height;\r\n            this.dgb.ps.scrollToY(scrollTop + y);\r\n        } else {\r\n            if (tdRect.y < psContainer.y) {\r\n                this.dgb.ps.scrollToY(scrollTop - (psContainer.y - tdRect.y));\r\n            }\r\n        }\r\n    }\r\n\r\n    private moveNextCellAndEdit(event?: any) {\r\n        // if (!this.closeEditingCell()) {\r\n        //     return;\r\n        // }\r\n        // const fieldIndex = this.dfs.getColumnIndex(this.column.field);\r\n        const fieldIndex = this.dg.colGroup.columns.findIndex(n => (n.id && n.id === this.column.id) || n.field === this.column.field);\r\n        if (fieldIndex + 1 < this.dgb.columnsGroup.columns.length) {\r\n            const nextColumn = this.dgb.columnsGroup.columns[fieldIndex + 1];\r\n            const nextTd: any = this.dg.findNextTd(nextColumn);\r\n\r\n            if (nextTd && (!nextColumn.fixed || nextColumn.fixed === 'center')) {\r\n                this.moveScrollbar(nextTd);\r\n            }\r\n\r\n            // const nextTd = this.dg.currentCell.cellElement.nextElementSibling;\r\n            if (nextColumn && ((!nextColumn.editor && !nextColumn.editorTemplate) || this.isReadonly(nextColumn))) {\r\n                if (nextTd) {\r\n                    nextTd.selectCell(event, nextTd);\r\n                }\r\n                return;\r\n            }\r\n\r\n            if (nextTd) {\r\n                nextTd.focus();\r\n                if (nextColumn.editor || nextColumn.editorTemplate) {\r\n                    nextTd.editCell();\r\n                    this.dgs.onCellEdit(nextTd);\r\n                }\r\n            }\r\n        } else {\r\n            // next row's first cell to editing\r\n            const nextTr = this.dg.currentCell.cellElement.parentElement.nextElementSibling;\r\n            if (nextTr && nextTr.tagName === 'TR') {\r\n                // nextTr.children.find(td => td.editCell).editCell();\r\n                let firstEditor = false;\r\n                let i = 0;\r\n                while (!firstEditor) {\r\n                    firstEditor = !!nextTr.children[i].editCell;\r\n                    if (!firstEditor) {\r\n                        i++;\r\n                    }\r\n                }\r\n                if (this.dg.selectionMode === 'default') {\r\n                    this.dg.clearCheckeds();\r\n                }\r\n                nextTr.children[i].editCell();\r\n            }\r\n        }\r\n    }\r\n\r\n    private movePrevCellAndEdit() {\r\n        // if (!this.closeEditingCell()) {\r\n        //     return;\r\n        // }\r\n        const fieldIndex = this.dfs.getColumnIndex(this.column.field);\r\n        if (fieldIndex - 1 >= 0) {\r\n            const nextColumn = this.dgb.columnsGroup.normalColumns[fieldIndex - 1];\r\n            if (nextColumn && this.isReadonly(nextColumn)) {\r\n                return;\r\n            }\r\n            const nextTd = this.dg.currentCell.cellElement.previousElementSibling;\r\n            if (nextTd) {\r\n                // this.selectCell(nextColumn.field, nextTd);\r\n                nextTd.focus();\r\n                if (nextColumn.editor) {\r\n                    // this.dfs.editCell();\r\n                    nextTd.click();\r\n                    this.dgs.onCellEdit(nextTd);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private selectNextRowAndEditCell(cellFieldName: string, dir: 'down' | 'up') {\r\n        const p = dir === 'down' ? 'nextElementSibling': 'previousElementSibling';\r\n        const nextTr = this.dg.currentCell.cellElement.parentElement[p];\r\n        if (nextTr && nextTr.tagName === 'TR') {\r\n            const td: any = Array.from(nextTr.children).find((td: any) => td.getAttribute('field') == cellFieldName);\r\n            if (td && td.editCell) {\r\n                if (this.dg.selectionMode === 'default' ) {\r\n                    this.dg.clearCheckeds();\r\n                }\r\n                td.editCell();\r\n            }\r\n        }\r\n    }\r\n\r\n    private clearCellSelectedClass() {\r\n        // if (this.dg.currentCell) {\r\n        //     DomHandler.removeClass(this.dg.currentCell.cellElement, CELL_SELECTED_CLS);\r\n        //     this.render.removeClass(this.dg.currentCell.cellElement, CELL_EDITING_CLS);\r\n\r\n        //     const selectedCell = this.dg.el.nativeElement.querySelectorAll('.' + CELL_SELECTED_CLS);\r\n        //     if (selectedCell.length) {\r\n        //         selectedCell.forEach(n => {\r\n        //             this.render.removeClass(n, CELL_SELECTED_CLS);\r\n        //         });\r\n        //     }\r\n        // }\r\n\r\n        this.dg.removeCellSelectedCls();\r\n    }\r\n\r\n    private setCellClsWithEditorType() {\r\n\r\n        // è®¾ç½®å½åéä¸­ååæ ¼æ ·å¼\r\n        if (this.dg.currentCell && this.dg.enableHighlightCell) {\r\n            if (this.dg.currentCell.field === this.column.field && this.dg.currentCell.rowId === this.rowData[this.dg.idField] && !this.dc.isEditing) {\r\n                this.clearCellSelectedClass();\r\n                this.render.addClass(this.el.nativeElement, CELL_SELECTED_CLS);\r\n            }\r\n        }\r\n\r\n\r\n        if (!this.dg.enableEditCellStyle) {\r\n            return;\r\n        }\r\n\r\n        const td = this.el.nativeElement;\r\n        this.cleanOtherEditorIcon(td);\r\n        // å½åè¡ç¦ç¨ï¼ä¸åè®¸ç¼è¾ã\r\n        if (this.dr.disabled) {\r\n            return;\r\n        }\r\n\r\n        if (!this.column.editor) {\r\n            return;\r\n        }\r\n\r\n        if (this.isReadonly()) {\r\n            return;\r\n        }\r\n\r\n        const editorType = this.column.editor.type;\r\n        const cls = this.column.align === 'right' ? 'allow-edit-cell-left' : 'allow-edit-cell';\r\n        this.render.addClass(td, cls);\r\n        this.render.addClass(td, ALLOW_EDIT_CELL_HIGHLIGHT_CLS[editorType]);\r\n    }\r\n\r\n    private cleanOtherEditorIcon(td) {\r\n        const values = Object.values(ALLOW_EDIT_CELL_HIGHLIGHT_CLS);\r\n        values.forEach(v => {\r\n            if (td.className.indexOf(v) > -1) {\r\n                td.className = td.className.replace('allow-edit-cell-left', '').replace('allow-edit-cell', '');\r\n                td.className = td.className.replace(v, '');\r\n            }\r\n        });\r\n    }\r\n}\r\n","\r\n\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-06 07:43:07\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-11-20 08:19:06\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { Component, OnInit, Input, ViewChild, ElementRef, AfterViewInit, Injector, Inject, forwardRef } from '@angular/core';\r\nimport { ChangeDetectorRef, NgZone, OnDestroy } from '@angular/core';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { DataColumn, SCROLL_X_ACTION, TR_ID_PREFIX } from '../../types';\r\nimport { DatagridComponent } from '../../datagrid.component';\r\nimport { DatagridBodyComponent } from './datagrid-body.component';\r\nimport ResizeObserver from 'resize-observer-polyfill';\r\nimport { IS_GROUP_ROW_FIELD, GROUP_ROW_FIELD, IS_GROUP_FOOTER_ROW_FIELD, GROUP_VISIBLE_FIELD, GROUP_LEVEL_FIELD } from '../../services/state';\r\nimport { delay, takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'datagrid-rows',\r\n    templateUrl: './datagrid-rows.component.html',\r\n    // changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DatagridRowsComponent implements OnInit, AfterViewInit, OnDestroy {\r\n\r\n    @Input() startRowIndex: number;\r\n    @Input() data: any;\r\n    @Input() columns: DataColumn[];\r\n    @ViewChild('tableEl') tableEl: ElementRef;\r\n    /** æ¯å¦ä¸ºå³ä¾§åºå®åãé»è®¤ä¸º false */\r\n    @Input() fixedRight = false;\r\n    /** æ¯å¦æå·¦ä¾§åºå®å */\r\n    @Input() hasFixedColumns = false;\r\n\r\n    isGroupRow = IS_GROUP_ROW_FIELD;\r\n    groupRow = GROUP_ROW_FIELD;\r\n    isGroupFooter = IS_GROUP_FOOTER_ROW_FIELD;\r\n    visible = GROUP_VISIBLE_FIELD;\r\n    groupLevelField = GROUP_LEVEL_FIELD;\r\n\r\n    filterConditions = '';\r\n\r\n\r\n    get groupSummaryDataInGroupRow() {\r\n        return this.dg.groupSummaryPosition === 'inGroupRow';\r\n    }\r\n\r\n    checkedRows = [];\r\n\r\n    private ro: ResizeObserver = null;\r\n    private scrollToCurrentRowSubscription: Subscription;\r\n    private subscriptions: Subscription[] = [];\r\n    private destroy$ = new Subject();\r\n    constructor(\r\n        public cd: ChangeDetectorRef,\r\n        @Inject(forwardRef(() => DatagridComponent)) public dg: DatagridComponent,\r\n        @Inject(forwardRef(() => DatagridBodyComponent)) public dgb: DatagridBodyComponent,\r\n        public el: ElementRef, private injector: Injector, private ngZone: NgZone) {\r\n\r\n    }\r\n\r\n    private listenEvent() {\r\n        const _s3 = this.dg.dgs.setSelecedRow.pipe(takeUntil(this.destroy$)).subscribe((r: any) => {\r\n            this.detectChanges();\r\n        });\r\n        this.subscriptions.push(_s3);\r\n\r\n        const _s4 = this.dg.dfs.rowAppend$.pipe(takeUntil(this.destroy$)).subscribe(() => {\r\n            this.detectChanges();\r\n        });\r\n        this.subscriptions.push(_s4);\r\n\r\n        const _s5 = this.dg.dfs.rowUpdate$.pipe(takeUntil(this.destroy$)).subscribe((row: { index: number; data: any; }) => {\r\n            if (row) {\r\n                if (this.dg.groupRows) {\r\n                    if (this.dg.groupFooter) {\r\n                        this.dg.dfs.updateGroupFooter(row.data[this.groupRow]);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        this.subscriptions.push(_s5);\r\n\r\n        this.scrollToCurrentRowSubscription = this.dg.dgs.scrollToCurrentRow.pipe(\r\n            delay(50),\r\n        ).subscribe(() => {\r\n            this.scrollToFirstSelectedRow();\r\n            this.dg.scrollInstance.scrollToLeft();\r\n        });\r\n\r\n\r\n        this.dg.dfs.checkRow$.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).subscribe( () => {\r\n            this.checkedRows = this.dg.dfs.getCheckeds();\r\n            this.detectChanges();\r\n        });\r\n\r\n        this.dg.dfs.clearCheckeds$.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).subscribe( () => {\r\n            this.checkedRows =  this.dg.dfs.getCheckeds();\r\n            this.detectChanges();\r\n        });\r\n\r\n\r\n        this.dg.dgs.toggleGroupRow$.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).subscribe(({ expand, groupRowIndex }) => {\r\n            this._toggleGroupRow(groupRowIndex, expand);\r\n            setTimeout(() => {\r\n                if (this.dgb.ps){\r\n                    this.dgb.ps.update();\r\n                }\r\n            }, 10);\r\n        });\r\n\r\n        this.dg.dgs.toggleAllGroupRows$.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).subscribe(({expand}) => {\r\n            this.toggleAllGroupRows(expand);\r\n            // setTimeout(() => {\r\n            //     this.dg.scrollToTop();\r\n            // });\r\n            setTimeout(() => {\r\n                if (this.dgb.ps){\r\n                    this.dgb.ps.update();\r\n                }\r\n            }, 10)\r\n        })\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.listenEvent();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.unSubscriptions();\r\n    }\r\n\r\n    private _toggleGroupRow(groupRowIndex: number, expand: boolean = true) {\r\n        if (groupRowIndex > -1) {\r\n            const groupRows = this.data.filter(n => n[IS_GROUP_ROW_FIELD]);\r\n            const gr = groupRows[groupRowIndex];\r\n            this.toggleGroupRow(gr, groupRowIndex, expand);\r\n        }\r\n    }\r\n\r\n    private toggleAllGroupRows(expand = true) {\r\n        const groupRows = this.data.filter(n => n[IS_GROUP_ROW_FIELD]);\r\n        groupRows.forEach(gr => {\r\n            gr.expanded = expand;\r\n            this.dg.dfs.setGroupRowsVisible(gr, expand, false);\r\n        });\r\n\r\n        this.cd.detectChanges();\r\n        if (expand){\r\n            this.dg.dfs.expandGroupRow.emit();\r\n        } else {\r\n            this.dg.dfs.collapseGroupRow.emit();\r\n        }\r\n    }\r\n\r\n\r\n\r\n    private unSubscriptions() {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n        if (this.scrollToCurrentRowSubscription) {\r\n            this.scrollToCurrentRowSubscription.unsubscribe();\r\n            this.scrollToCurrentRowSubscription = null;\r\n        }\r\n\r\n        if (this.subscriptions && this.subscriptions.length) {\r\n            this.subscriptions.forEach(n => n.unsubscribe);\r\n            this.subscriptions = [];\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.ngZone.runOutsideAngular(() => {\r\n            setTimeout(() => {\r\n                if (!this.dg.nowrap) {\r\n                    // this.dgb.updateRowHeight();\r\n                    this.dg.calculateGridSize();\r\n                }\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    getGroupColumn(field) {\r\n        return this.dg.flatColumns.find(col => col.field === field);\r\n    }\r\n\r\n    private detectChanges() {\r\n        if (!this.cd['destroyed']) {\r\n            this.cd.detectChanges();\r\n        }\r\n    }\r\n\r\n    trackByField(index, item) {\r\n        return item.field;\r\n    }\r\n\r\n    isElementInViewport(el) {\r\n        const container = this.dgb.ps.instance.element.getBoundingClientRect();\r\n        const box = el.getBoundingClientRect();\r\n        const top = (box.top <= container.height + container.top);\r\n        const bottom = (box.bottom <= (container.bottom));\r\n\r\n        return (top && bottom);\r\n    }\r\n\r\n    private _elementIntoView(tr: any, rowIndex: number) {\r\n        if (tr) {\r\n            if (tr.scrollIntoViewIfNeeded) {\r\n                tr.scrollIntoViewIfNeeded(false);\r\n            } else {\r\n                tr.scrollIntoView({ block: 'nearest', inline: 'nearest' });\r\n            }\r\n        } else {\r\n            const currentTrTop = rowIndex * this.dg.rowHeight;\r\n            if (currentTrTop) {\r\n                this.dg.scrollInstance.scrollToY(currentTrTop);\r\n            }\r\n        }\r\n    }\r\n\r\n    private scrollToFirstSelectedRow() {\r\n        if (this.dg.selectedRow) {\r\n            const rowIndex = this.dg.selectedRow.index;\r\n            const rowId = TR_ID_PREFIX + this.dg.selectedRow.id;\r\n            const tr: any = document.querySelector(rowId);\r\n\r\n            if (rowIndex === 0) {\r\n                if (this.dgb.ps && this.dgb.ps.instance) {\r\n                    if (this.dgb.ps.instance.element.scrollTop === 0) {\r\n                        return;\r\n                    } else {\r\n                        this.dg.scrollInstance.scrollToY(0);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n\r\n            const { top, bottom } = this.dgb.getVisibleRange();\r\n            if (rowIndex === top || rowIndex === bottom) {\r\n                this._elementIntoView(tr, rowIndex);\r\n                return;\r\n            } else {\r\n                if (rowIndex > top && rowIndex < bottom && tr && this.isElementInViewport(tr)) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            this._elementIntoView(tr, rowIndex);\r\n\r\n        }\r\n    }\r\n\r\n\r\n    toggleGroupRow(row, index, open, $event?: MouseEvent) {\r\n        if ($event) {\r\n            $event.stopPropagation();\r\n        }\r\n        row.expanded = open;\r\n        this.dg.dfs.setGroupRowsVisible(row, open);\r\n    }\r\n\r\n    private mergeInfo(field: string, rowIndex: number) {\r\n        return this.dg.dgs.getMergeInfo(rowIndex, field, this.dg.mergeCellInfo);\r\n    }\r\n\r\n    showCell(col: DataColumn, rowIndex: number) {\r\n        const mergeInfo = this.mergeInfo(col.field, rowIndex);\r\n        let show = true;\r\n        if (mergeInfo) {\r\n            show = mergeInfo.show;\r\n        }\r\n\r\n        return show;\r\n    }\r\n\r\n    getRowSpan(col: DataColumn, rowIndex: number) {\r\n        const mergeInfo = this.mergeInfo(col.field, rowIndex);\r\n        if (!mergeInfo) {\r\n            return 1;\r\n        }\r\n        if (this.showCell(col, rowIndex)) {\r\n            col.readonly = true;\r\n            return mergeInfo.rowspan;\r\n        } else {\r\n            return 1;\r\n        }\r\n    }\r\n\r\n    getGroupSummaryData(groupId: string) {\r\n        const row = this.data.find(n =>  n['__group_parent_id__'] === groupId && n['__group_footer__']);\r\n        if (row) {\r\n            return row.data;\r\n        }\r\n        return null;\r\n    }\r\n}\r\n\r\n\r\n","import { Component } from '@angular/core';\r\n\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-09-06 08:30:18\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-09-06 08:34:35\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\n/** å¼å®¹èçæ¬ï¼xxxxxxx */\r\n@Component({\r\n    selector: 'grid-editor-textbox',\r\n    template: ''\r\n})\r\nexport class TextboxEditorComponent {}\r\n","import { QueryList, OnDestroy } from '@angular/core';\r\n/*\r\n* @Author: ç¯çç§æ(Lucas Huang)\r\n* @Date: 2019-08-06 07:43:53\r\n* @LastEditors: ç¯çç§æ(Lucas Huang)\r\n* @LastEditTime: 2019-11-20 20:14:11\r\n* @QQ: 1055818239\r\n* @Version: v0.0.1\r\n*/\r\n\r\nimport { ComponentFactoryResolver, ViewContainerRef, OnChanges, SimpleChanges, ComponentRef, ViewChildren } from '@angular/core';\r\n\r\nimport {\r\n    Component, OnInit, Input, Renderer2, ViewChild, ElementRef,\r\n    AfterViewInit, ViewEncapsulation, Injector, ChangeDetectorRef, Directive, Optional, NgZone\r\n} from '@angular/core';\r\n\r\nimport { DataColumn } from './../../types/data-column';\r\nimport { ColumnGroup } from '../../types/data-column';\r\nimport { DatagridService } from '../../services/datagrid.service';\r\nimport { SCROLL_X_ACTION, FIXED_LEFT_SHADOW_CLS, SCROLL_X_REACH_START_ACTION, FIXED_RIGHT_SHADOW_CLS, SCROLL_X_REACH_END_ACTION, GRID_FILTER_ROW } from '../../types/constant';\r\nimport { DatagridComponent } from '../../datagrid.component';\r\nimport { DatagridHeaderCheckboxComponent } from '../checkbox/datagrid-header-checkbox.component';\r\nimport { DatagridFacadeService } from '../../services/datagrid-facade.service';\r\nimport ResizeObserver from 'resize-observer-polyfill';\r\nimport { DatagridFilterService } from '../../services/datagrid-filter.service';\r\nimport { of, Observable, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'datagrid-header',\r\n    templateUrl: './header.component.html',\r\n    encapsulation: ViewEncapsulation.None,\r\n    exportAs: 'dgHeader'\r\n})\r\nexport class DatagridHeaderComponent implements OnInit, AfterViewInit, OnChanges, OnDestroy {\r\n    @Input() height = 35;\r\n    @Input() columns = [];\r\n    @Input() columnsGroup: ColumnGroup;\r\n    @Input() enableDragColumn = false;\r\n    @Input() wrapHeader = false;\r\n    @Input() enableFilterRow = false;\r\n\r\n    @Input() scrollbarMode = 'auto';\r\n\r\n    /** å¯ç¨æ§è½ä¼åç */\r\n    @Input() fast = false;\r\n\r\n\r\n    @ViewChild('header') header: ElementRef;\r\n    @ViewChild('headerContainer') headerColumnsTable: ElementRef;\r\n    @ViewChild('fixedLeft') fixedLeft: ElementRef;\r\n\r\n    private _chkall: DatagridHeaderCheckboxComponent;\r\n    @ViewChild('chkAll') set chkAll(v) {\r\n        this._chkall = v;\r\n    }\r\n\r\n    private fixedRight: ElementRef;\r\n    @ViewChild('fixedRight') set fr(val) {\r\n        if (val) {\r\n            this.fixedRight = val;\r\n        }\r\n    }\r\n\r\n    private dgs: DatagridService;\r\n    private dfs: DatagridFacadeService;\r\n    private ro: ResizeObserver | null = null;\r\n    private cfr: ComponentFactoryResolver;\r\n    private dfrs: DatagridFilterService;\r\n    private el: ElementRef;\r\n    rightFixedColumnWidth = 0;\r\n    normalColumnWidth = 0;\r\n\r\n    private cd: ChangeDetectorRef;\r\n    showOverlay = false;\r\n    disableSort = false;\r\n    private scrollX = 0;\r\n    showShadowCls = false;\r\n\r\n    top = 0;\r\n\r\n    // è¡å· ã å¤éæ¡ï¼å¨å¤è¡¨å¤´ä¸çåå¹¶è¡æ°\r\n    get rowSpan() {\r\n        // TFS 495872\r\n        // return this.columns.length + (this.dg.enableFilterRow ? 1 : 0);\r\n        return this.columns.length;\r\n    }\r\n\r\n    hasFixedLeftColumns = false;\r\n\r\n    private ps;\r\n    private destroy$ = new Subject();\r\n    lineNumberTitle = 'åºå·';\r\n    constructor(\r\n        private render2: Renderer2, private injector: Injector,\r\n        @Optional() public dg: DatagridComponent, private ngZone: NgZone) {\r\n        this.dfs = this.injector.get(DatagridFacadeService);\r\n        this.dgs = this.injector.get(DatagridService);\r\n        this.cfr = this.injector.get(ComponentFactoryResolver);\r\n        this.cd = this.injector.get(ChangeDetectorRef);\r\n        this.el = this.injector.get(ElementRef);\r\n        this.dfrs = this.dg.clientFilterService;\r\n\r\n\r\n        this.dgs.scorll$.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).subscribe((d: any) => {\r\n\r\n            if (d.type === SCROLL_X_ACTION || d.type === SCROLL_X_REACH_END_ACTION || d.type === SCROLL_X_REACH_START_ACTION) {\r\n                this.scrollX = d.x;\r\n                this.render2.setStyle(this.headerColumnsTable.nativeElement, 'transform', `translate3d(-${d.x}px, 0px, 0px)`);\r\n                if (!this.dg.groupRows) {\r\n                    if (this.fixedLeft) {\r\n                        if (d.x) {\r\n                            this.render2.addClass(this.fixedLeft.nativeElement, FIXED_LEFT_SHADOW_CLS);\r\n                        } else {\r\n                            this.render2.removeClass(this.fixedLeft.nativeElement, FIXED_LEFT_SHADOW_CLS);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (d.type === SCROLL_X_REACH_START_ACTION) {\r\n                if (this.fixedLeft) {\r\n                    this.render2.removeClass(this.fixedLeft.nativeElement, FIXED_LEFT_SHADOW_CLS);\r\n                }\r\n            }\r\n        });\r\n\r\n        this.dgs.showFixedShadow.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).subscribe((e: any) => {\r\n            if (this.fixedRight) {\r\n                this.setFixedColumnPosition(e.showRightShadow, e.x);\r\n            }\r\n        });\r\n\r\n        this.dgs.disableHeader.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).subscribe((flag: any) => {\r\n            this.showOverlay = flag;\r\n            this.disableSort = flag;\r\n            this.cd.detectChanges();\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.dgs.checkedRowsTotalChanged$.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).subscribe(() => {\r\n            if (this._chkall) {\r\n                const checkedsCount = this.dfs.getCurrentPageCheckeds().length;\r\n                const isCheckAll = this.dfs.isCheckAll();\r\n                const isIndeterminate = isCheckAll || !checkedsCount;\r\n                this._chkall.chk.nativeElement.indeterminate = !isIndeterminate;\r\n                const _checked = isCheckAll && checkedsCount > 0;\r\n                this._chkall.updateStatus(_checked);\r\n            }\r\n        });\r\n\r\n        this.dgs.uncheckAll.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).subscribe(() => {\r\n            if (this.dg.showAllCheckbox && this._chkall) {\r\n                this._chkall.chk.nativeElement.indeterminate = false;\r\n                this._chkall.chk.nativeElement.checked = false;\r\n            }\r\n        });\r\n\r\n        this.dgs.checkAll.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).subscribe(() => {\r\n            if (this._chkall) {\r\n                this._chkall.chk.nativeElement.checked = true;\r\n            }\r\n        });\r\n\r\n        this.dgs.scrollbarUpdate.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).subscribe((ps: any) => {\r\n            this.ps = ps.scrollbarRef;\r\n            const rw = ps.rightWidth || 0;\r\n            if (!rw) {\r\n                this.rightFixedColumnWidth = this.getRightFixedColWidth(this.ps);\r\n            } else {\r\n                this.rightFixedColumnWidth = rw;\r\n            }\r\n            if (this.fixedRight) {\r\n                this.setFixedColumnPosition(this.showShadowCls, 0);\r\n            }\r\n            this.cd.detectChanges();\r\n        });\r\n\r\n\r\n        this.dgs.showGridHeader.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).subscribe(() => {\r\n            this.setHeaderPosition();\r\n        });\r\n\r\n        this.dgs.smartFilterBarExpand.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).subscribe(() => {\r\n            this.setHeaderPosition();\r\n        });\r\n\r\n        this.rightFixedColumnWidth = this.getRightFixedColWidth(this.ps);\r\n        this.hasFixedLeftColumns = this.columnsGroup && this.columnsGroup.leftFixed && !!this.columnsGroup.leftFixed.length;\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        setTimeout(() => {\r\n            this.setHeaderPosition();\r\n        });\r\n\r\n        this.lineNumberTitle = this.getLineNumberTitle();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        // if (changes.scrollbarMode && !changes.scrollbarMode.isFirstChange()) {\r\n        //     this.rightFixedColumnWidth = this.getRightFixedColWidth(this.ps);\r\n        //     this.cd.detectChanges();\r\n        // }\r\n\r\n        if (changes.columnsGroup && !changes.columnsGroup.isFirstChange()) {\r\n            this.rightFixedColumnWidth = this.getRightFixedColWidth(this.ps);\r\n            this.hasFixedLeftColumns = this.columnsGroup && this.columnsGroup.leftFixed && !!this.columnsGroup.leftFixed.length;\r\n            // if (!this.dg.useControlPanel) {\r\n            //     this.fixedRight = null;\r\n            // }\r\n            this.cd.detectChanges();\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n\r\n        this.fixedRight = null;\r\n    }\r\n\r\n    private getLineNumberTitle() {\r\n        if (this.dg.lineNumberTitle) {\r\n            return this.dg.lineNumberTitle;\r\n        } else {\r\n            return this.dg.localeService.getValue('datagrid.lineNumberTitle');\r\n        }\r\n    }\r\n\r\n    private getRightFixedColWidth(ps = null) {\r\n        if (!this.columnsGroup) {\r\n            return 0;\r\n        }\r\n\r\n\r\n        let w = this.columnsGroup.rightFixedWidth;\r\n\r\n        if (!ps) {\r\n            ps = this.dg.scrollInstance.instance;\r\n        }\r\n\r\n        if (ps && ps.scrollbarYActive && this.scrollbarMode === 'allways') {\r\n            return w += this.showShadowCls ? 18 : 0;\r\n        }\r\n        return w;\r\n    }\r\n\r\n    private setHeaderPosition() {\r\n        let top = 0;\r\n        if ((this.dg.enableFilterRow || this.dg.enableSmartFilter) && this.dg.showFilterBar) {\r\n            top += this.dg.filterBarHeight;\r\n        }\r\n\r\n        if (this.dg.showRowGroupPanel) {\r\n            top += this.dg.rowGroupPanelHeight;\r\n        }\r\n\r\n        this.top = top;\r\n        this.render2.setStyle(this.el.nativeElement, 'top', `${top}px`);\r\n    }\r\n\r\n    isShowShadow(fixedLeftWidth) {\r\n        const dgContainerWidth = this.dg.dgContainer.nativeElement.offsetWidth;\r\n        return dgContainerWidth < this.dg.colGroup.totalWidth;\r\n\r\n    }\r\n\r\n    isColspan(left, right, col, isdatafield = false) {\r\n        // if (this.fast) {\r\n        //     if (isdatafield) {\r\n        //         return !col.colspan;\r\n        //     } else {\r\n        //         return col.colspan;\r\n        //     }\r\n        // }\r\n        if (!left && !right) {\r\n            if (isdatafield) {\r\n                return !col.colspan && (!col.fixed || col.fixed === 'none');\r\n            } else {\r\n                return col.colspan && (!col.fixed || col.fixed === 'none');\r\n            }\r\n        } else if (left) {\r\n            if (isdatafield) {\r\n                return !col.colspan && col.fixed && col.fixed === 'left';\r\n            } else {\r\n                return col.colspan && col.fixed && col.fixed === 'left';\r\n            }\r\n        } else if (right) {\r\n            if (isdatafield) {\r\n                return !col.colspan && col.fixed && col.fixed === 'right';\r\n            } else {\r\n                return col.colspan && col.fixed && col.fixed === 'right';\r\n            }\r\n        }\r\n    }\r\n\r\n    setFixedColumnPosition(isShow, scrollLeft) {\r\n        this.showShadowCls = isShow;\r\n        const method = isShow ? 'addClass' : 'removeClass';\r\n        this.render2[method](this.fixedRight.nativeElement, FIXED_RIGHT_SHADOW_CLS);\r\n\r\n        const realWidth = this.columnsGroup.leftFixedWidth + this.columnsGroup.normalWidth + this.rightFixedColumnWidth;\r\n        const gridWidth = this.dg.width;\r\n        let l = this.dg.width - (this.dg.showBorder ? 2 : 1) - this.rightFixedColumnWidth;\r\n        if (gridWidth > realWidth) {\r\n            l = this.columnsGroup.leftFixedWidth + this.columnsGroup.normalWidth;\r\n        }\r\n\r\n        this.render2.setStyle(this.fixedRight.nativeElement, 'left', l + 'px');\r\n    }\r\n\r\n    onRowNumerColumnDblClick(e: MouseEvent, rntd: any) {\r\n        let maxRowNumber = this.dg.getRows().length;\r\n        if (this.dg.pagination) {\r\n            const pageSize = this.dg.pageSize;\r\n            const pageIndex = this.dg.pageIndex;\r\n            maxRowNumber = pageSize * pageIndex + pageSize;\r\n        }\r\n\r\n        this.dg.longTextArea.nativeElement.innerHTML = maxRowNumber;\r\n        const w1 = this.dg.longTextArea.nativeElement.offsetWidth;\r\n\r\n        const currentWidth = rntd.offsetWidth;\r\n\r\n        if (w1 > currentWidth) {\r\n            this.dg.lineNumberWidth = w1 + 10;\r\n            this.dfs.updateProperty('lineNumberWidth', this.dg.lineNumberWidth);\r\n            this.dfs.resizeColumns();\r\n        }\r\n    }\r\n\r\n    onSortColumnClick(e: MouseEvent, col: DataColumn) {\r\n        if (this.disableSort) {\r\n            return;\r\n        }\r\n\r\n        if (!col.sortable) {\r\n            return;\r\n        }\r\n        // ç»æç¼è¾\r\n        this.dg.cancelEdit(null);\r\n        const sortName = this.dg.sortName;\r\n        const sortOrder = this.dg.sortOrder;\r\n        let sortFields = [];\r\n        let sortOrders = [];\r\n        if (sortName) {\r\n            sortFields = sortName.split(',');\r\n            sortOrders = sortOrder.split(',');\r\n        }\r\n\r\n        const colOrder = col.order || 'asc';\r\n        let newOrder = colOrder;\r\n        const i = sortFields.findIndex(n => n === col.field);\r\n        if (i >= 0) {\r\n            const _order = sortOrders[i] === 'asc' ? 'desc' : 'asc';\r\n            newOrder = _order;\r\n            // if (this.dg.multiSort && newOrder === 'asc') {\r\n            if (newOrder === 'asc') {\r\n                newOrder = undefined;\r\n                sortFields.splice(i, 1);\r\n                sortOrders.splice(i, 1);\r\n            } else {\r\n                sortOrders[i] = _order;\r\n            }\r\n        } else {\r\n            if (this.dg.multiSort) {\r\n                sortFields.push(col.field);\r\n                sortOrders.push(colOrder);\r\n            } else {\r\n                sortFields = [col.field];\r\n                sortOrders = [colOrder];\r\n            }\r\n        }\r\n\r\n        col.order = newOrder;\r\n\r\n        this.dg.sortName = sortFields.join(',');\r\n        this.dg.sortOrder = sortOrders.join(',');\r\n        this.dfs.setSortInfo(this.dg.sortName, this.dg.sortOrder);\r\n\r\n        this.dg.beforeSortColumn(this.dg.sortName, this.dg.sortOrder, this.dg).subscribe(() => {\r\n            this.dg.onColumnSorted();\r\n        });\r\n    }\r\n}\r\n\r\n@Directive({\r\n    selector: '[filter-row-creator]'\r\n})\r\nexport class FilterRowCreateDirective implements OnInit, OnChanges, OnDestroy {\r\n    @Input() left: boolean;\r\n    @Input() right: boolean;\r\n\r\n    private dgs: DatagridService;\r\n    private dfs: DatagridFacadeService;\r\n    private cfr: ComponentFactoryResolver;\r\n    private dfrs: DatagridFilterService;\r\n    private filterRowType: any;\r\n    private filterRowRef: ComponentRef<any>;\r\n    private cd: ChangeDetectorRef;\r\n    constructor(private vc: ViewContainerRef, private injector: Injector,\r\n        public dg: DatagridComponent, private ngZone: NgZone) {\r\n\r\n        this.dfs = this.injector.get(DatagridFacadeService);\r\n        this.dgs = this.injector.get(DatagridService);\r\n        this.cfr = this.injector.get(ComponentFactoryResolver);\r\n        this.cd = this.injector.get(ChangeDetectorRef);\r\n        this.dfrs = this.dg.clientFilterService;\r\n\r\n        this.filterRowType = this.injector.get(GRID_FILTER_ROW, null);\r\n\r\n        this.dgs.clearFilter.subscribe(() => {\r\n            if (this.filterRowRef) {\r\n                this.filterRowRef.instance.clearFilterValue(false);\r\n            }\r\n        });\r\n        this.dgs.columnsChanged.subscribe(() => {\r\n            this.createFilterRow(true);\r\n        });\r\n\r\n\r\n        if (this.dfrs) {\r\n            this.dfrs.removeField.subscribe((f) => {\r\n                if (this.filterRowRef && f) {\r\n                    let flag = false;\r\n                    let _cols = [];\r\n                    if (this.left) {\r\n                        _cols = this.dg.colGroup.leftFixed || [];\r\n                    } else if (this.right) {\r\n                        _cols = this.dg.colGroup.rightFixed || [];\r\n                    } else {\r\n                        _cols = this.dg.colGroup.normalColumns || [];\r\n                    }\r\n\r\n                    flag = !!_cols.find(n => n.field === f);\r\n                    if (flag) {\r\n                        this.filterRowRef.instance.removeField(f);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.createFilterRow(true);\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n\r\n    }\r\n\r\n    ngOnDestroy() {\r\n    }\r\n\r\n    /** è¿æ»¤è¡ */\r\n    createFilterRow(rebuild = false) {\r\n        if (rebuild && this.filterRowRef) {\r\n            this.filterRowRef.destroy();\r\n            this.filterRowRef = null;\r\n        }\r\n        if (this['_FILTERROW_CREATE_TIMER_']) {\r\n            clearTimeout(this['_FILTERROW_CREATE_TIMER_']);\r\n        }\r\n        this['_FILTERROW_CREATE_TIMER_'] = setTimeout(() => {\r\n            this._createFilterRow();\r\n            if (rebuild) {\r\n                this.cd.detectChanges();\r\n            }\r\n        }, 50);\r\n    }\r\n\r\n    private _createFilterRow() {\r\n        if (this.dg.enableFilterRow) {\r\n            if (!this.filterRowType) {\r\n                return;\r\n            }\r\n\r\n            let columnsData = this.dg.colGroup.normalColumns;\r\n            if (this.left) {\r\n                columnsData = this.dg.colGroup.leftFixed;\r\n            } else if (this.right) {\r\n                columnsData = this.dg.colGroup.rightFixed;\r\n            }\r\n\r\n            if (!this.filterRowRef && this.vc) {\r\n                const cf = this.cfr.resolveComponentFactory(this.filterRowType);\r\n                this.filterRowRef = this.vc.createComponent(cf);\r\n                this.filterRowRef.instance.fixedLeft = this.left;\r\n                this.filterRowRef.instance.columns = columnsData;\r\n                this.filterRowRef.instance.gridInstance = this.dg;\r\n                this.filterRowRef.instance.conditionChange.subscribe(n => {\r\n                    const conditions = this.mergeFilterConditions(n || {});\r\n                    this.dgs.onFilterChanged.emit(conditions);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    private mergeFilterConditions(conditions: any) {\r\n        const _conditions = Object.assign(this.dg.conditions || {}, conditions || {});\r\n        Object.keys(_conditions).forEach(n => {\r\n            if (_conditions[n] === null) {\r\n                delete _conditions[n];\r\n            }\r\n        });\r\n\r\n        return _conditions;\r\n    }\r\n}\r\n\r\n","import { Directive, Input, NgZone, ElementRef, Renderer2, AfterViewInit, OnDestroy, Optional, HostListener } from '@angular/core';\r\nimport { DataColumn } from '../../types/data-column';\r\nimport { DatagridComponent } from './../../datagrid.component';\r\nimport { DatagridHeaderComponent } from './datagrid-header.component';\r\nimport { fromEvent } from 'rxjs';\r\nimport { buffer, debounceTime, map, filter, takeUntil } from 'rxjs/operators';\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-10 09:04:53\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-11-20 17:09:09\r\n * @QQ: 1055818239\r\n * @Version: v0.0.12\r\n */\r\n@Directive({\r\n    selector: '[resize-column]',\r\n})\r\nexport class DatagridResizeColumnDirective implements AfterViewInit, OnDestroy {\r\n    @Input('resize-column') col: DataColumn;\r\n    resizer: HTMLSpanElement;\r\n    resizerMouseDownListener: any;\r\n    documentMouseMoveListener: any;\r\n    documentMouseUpListener: any;\r\n    dblclickListener: any;\r\n    private dg: DatagridComponent;\r\n    constructor(\r\n        @Optional() public dh: DatagridHeaderComponent,\r\n        public ngzone: NgZone, public el: ElementRef, public render: Renderer2\r\n    ) {\r\n        this.dg = this.dh.dg;\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        if (this.isEnable()) {\r\n            this.render.addClass(this.el.nativeElement, 'f-datagrid-header-cell-resize');\r\n\r\n            this.resizer = document.createElement('span');\r\n            this.resizer.className = 'column-resize-bar';\r\n            this.el.nativeElement.appendChild(this.resizer);\r\n\r\n            this.ngzone.runOutsideAngular(() => {\r\n                // this.resizerMouseDownListener = this.onMouseDown.bind(this);\r\n                // this.resizer.addEventListener('mousedown', this.resizerMouseDownListener);\r\n                const mouseUp$ = fromEvent(this.resizer, 'mouseup');\r\n                this.resizerMouseDownListener = fromEvent(this.resizer, 'mousedown').pipe(\r\n                    // debounceTime(260),\r\n                    takeUntil(mouseUp$)\r\n                ).subscribe((e: any) =>\r\n                    this.onMouseDown(e)\r\n                );\r\n            });\r\n\r\n            // const mouse$ = fromEvent(this.resizer, 'click');\r\n            // const buff$ = mouse$.pipe(\r\n            //     debounceTime(250)\r\n            // );\r\n\r\n            // const click$ = mouse$.pipe(\r\n            //     buffer(buff$),\r\n            //     map(list => {\r\n            //         return {event: list[0], count: list.length};\r\n            //     }),\r\n            //     filter(x => x.count === 2),\r\n            //     map(x => x.event),\r\n            //     takeUntil(mouseUp$)\r\n            // );\r\n\r\n            // click$.subscribe((e) => {\r\n            //     this.onDblClickHandler(e);\r\n            //     // this.onMouseUp(e);\r\n            // });\r\n        }\r\n    }\r\n\r\n    @HostListener('dblclick')\r\n    onDblClickHandler() {\r\n        if (this.col.field && this.col.field !== this.dg.ControlPanelFeild) {\r\n            const thRef = this.el;\r\n            this.dg.sizeToContent(this.col, thRef);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private isEnable() {\r\n        if (this.dg.resizeColumn) {\r\n\r\n            if ( this.col.field === this.dg.ControlPanelFeild) {\r\n                this.col.resizable = false;\r\n            }\r\n\r\n            if (this.col.resizable === undefined) {\r\n                this.col.resizable = true;\r\n            }\r\n\r\n            return this.col.resizable;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    bindDocumentEvents() {\r\n        this.ngzone.runOutsideAngular(() => {\r\n            this.documentMouseMoveListener = this.onMouseMove.bind(this);\r\n            document.addEventListener('mousemove', this.documentMouseMoveListener);\r\n\r\n            this.documentMouseUpListener = this.onMouseUp.bind(this);\r\n            document.addEventListener('mouseup', this.documentMouseUpListener);\r\n        });\r\n    }\r\n\r\n    unbindDocumentEvents() {\r\n        if (this.documentMouseMoveListener) {\r\n            document.removeEventListener('mousemove', this.documentMouseMoveListener);\r\n            this.documentMouseMoveListener = null;\r\n        }\r\n\r\n        if (this.documentMouseUpListener) {\r\n            document.removeEventListener('mouseup', this.documentMouseUpListener);\r\n            this.documentMouseUpListener = null;\r\n        }\r\n    }\r\n\r\n    onMouseDown(event: MouseEvent) {\r\n        event.stopPropagation();\r\n        this.dg.onColumnResizeBegin(event);\r\n        this.render.addClass(this.el.nativeElement, 'column-resizeing');\r\n        this.bindDocumentEvents();\r\n    }\r\n\r\n    onMouseMove(event: MouseEvent) {\r\n        this.dg.onColumnResize(event);\r\n    }\r\n\r\n    onMouseUp(event: MouseEvent) {\r\n        this.dg.onColumnResizeEnd(event, this.col);\r\n        this.render.removeClass(this.el.nativeElement, 'column-resizeing');\r\n        this.unbindDocumentEvents();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.resizerMouseDownListener) {\r\n            // this.resizer.removeEventListener('mousedown', this.resizerMouseDownListener);\r\n            this.resizerMouseDownListener.unsubscribe();\r\n        }\r\n\r\n        this.unbindDocumentEvents();\r\n\r\n        if (this.dblclickListener) {\r\n            this.dblclickListener();\r\n        }\r\n\r\n        this.resizer = null;\r\n    }\r\n}\r\n","import { takeUntil } from 'rxjs/operators';\r\nimport { DatagridComponent } from './../../datagrid.component';\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-12 15:01:21\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-11-09 15:24:45\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { Component, OnInit, Input, ElementRef, Renderer2, ViewChild, OnDestroy, Injector, Inject, forwardRef, OnChanges, SimpleChanges, ChangeDetectorRef } from '@angular/core';\r\nimport { DatagridService } from '../../services/datagrid.service';\r\nimport { FIXED_LEFT_SHADOW_CLS, FIXED_RIGHT_SHADOW_CLS, SCROLL_X_ACTION, SCROLL_X_REACH_START_ACTION } from '../../types/constant';\r\nimport { Subscription, Subject } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'datagrid-footer',\r\n    templateUrl: './datagrid-footer.component.html'\r\n})\r\nexport class DatagridFooterComponent implements OnInit, OnChanges, OnDestroy {\r\n    private _footerData = [];\r\n    @Input() get data() {\r\n        return this._footerData;\r\n    }\r\n    set data(val: any[]) {\r\n        this._footerData = val;\r\n    }\r\n\r\n    @Input() height: number;\r\n    @Input() width: number;\r\n    @Input() columns: any[];\r\n    @Input() columnsGroup: any;\r\n\r\n    /** æ¾ç¤ºä½ç½®ï¼é»è®¤ä¸º åºé¨ */\r\n    @Input() position: 'top' | 'bottom' = 'bottom';\r\n    /** æ¯å¦æå·¦ä¾§åºå®å */\r\n    @Input() hasFixedColumns = false;\r\n    @Input() fast = false;\r\n\r\n    @ViewChild('footerContainer') footerContainer: ElementRef;\r\n    @ViewChild('footerBody') footerBody: ElementRef;\r\n    @ViewChild('footerBody2') footerBody2: ElementRef;\r\n    @ViewChild('fixedLeft') fixedLeft: ElementRef;\r\n    private fixedRight: ElementRef;\r\n    @ViewChild('fixedRight') set fr(val) {\r\n        if (val) {\r\n            this.fixedRight = val;\r\n        }\r\n    }\r\n    scrollXSubscription: Subscription;\r\n\r\n    private dgs: DatagridService;\r\n    private scrollX = 0;\r\n    private showShadowCls = false;\r\n    rightFixedColumnWidth = 0;\r\n    private cdRef: ChangeDetectorRef = null;\r\n    private destroy$ = new Subject();\r\n    constructor(\r\n        private render: Renderer2, private injector: Injector,\r\n        @Inject(forwardRef(() => DatagridComponent)) public dg: DatagridComponent\r\n    ) {\r\n        this.dg = this.injector.get(DatagridComponent);\r\n        this.dgs = this.injector.get(DatagridService);\r\n        this.cdRef = this.injector.get(ChangeDetectorRef);\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.scrollEvents();\r\n        this.renderFooterStyle();\r\n        this.setFooterPosition(false);\r\n\r\n        this.rightFixedColumnWidth = this.getRightFixedColWidth();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.position) {\r\n            this.setFooterPosition(true);\r\n        }\r\n\r\n        if (changes.columnsGroup && !changes.columnsGroup.isFirstChange()) {\r\n            this.rightFixedColumnWidth = this.getRightFixedColWidth();\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n\r\n        if (this.scrollXSubscription) {\r\n            this.scrollXSubscription.unsubscribe();\r\n            this.scrollXSubscription = null;\r\n        }\r\n    }\r\n\r\n    private scrollEvents() {\r\n        this.dgs.showGridHeader.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).subscribe(hh => {\r\n            this.setFooterPosition(false);\r\n        });\r\n\r\n        this.scrollXSubscription = this.dgs.scorll$.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).subscribe((d: any) => {\r\n            this.scrollX = d.x;\r\n\r\n            if (this.fast) {\r\n                if (d.type === SCROLL_X_ACTION && this.footerBody2) {\r\n                    this.footerBody2.nativeElement.scrollLeft = d.x;\r\n                }\r\n            } else  {\r\n                if (d.type === SCROLL_X_ACTION) {\r\n                    if (!this.dg.footerTemplate) {\r\n                        this.render.setStyle(this.footerBody.nativeElement,  'transform', `translate3d(-${d.x}px, 0px, 0px)` );\r\n\r\n                        if (this.fixedLeft) {\r\n                            if (d.x) {\r\n                                this.render.addClass(this.fixedLeft.nativeElement, FIXED_LEFT_SHADOW_CLS);\r\n                            } else {\r\n                                this.render.removeClass(this.fixedLeft.nativeElement, FIXED_LEFT_SHADOW_CLS);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (d.type === SCROLL_X_REACH_START_ACTION) {\r\n                    if (this.fixedLeft) {\r\n                        this.render.removeClass(this.fixedLeft.nativeElement, FIXED_LEFT_SHADOW_CLS);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        if (!this.fast) {\r\n\r\n            this.dgs.showFixedShadow.pipe(\r\n                takeUntil(this.destroy$)\r\n            ).subscribe((e: any) => {\r\n                if (this.fixedRight) {\r\n                    this.setFixedColumnPosition(e.showRightShadow, e.x);\r\n                }\r\n            });\r\n\r\n\r\n            this.dgs.scrollbarUpdate.pipe(\r\n                takeUntil(this.destroy$)\r\n            ).subscribe((ps: any) => {\r\n                this.rightFixedColumnWidth = this.getRightFixedColWidth(ps.scrollbarRef);\r\n                if (this.fixedRight) {\r\n                    this.setFixedColumnPosition(this.showShadowCls, 0);\r\n                }\r\n                if (this.cdRef) {\r\n                    this.cdRef.detectChanges();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private getRightFixedColWidth(ps = null) {\r\n        if (!this.columnsGroup) {\r\n            return 0;\r\n        }\r\n\r\n        let w = this.columnsGroup.rightFixedWidth;\r\n\r\n        if (!ps) {\r\n            ps = this.dg.scrollInstance.instance;\r\n        }\r\n\r\n        if (ps && ps.scrollbarYActive && this.dg.scrollBarShowMode === 'allways') {\r\n            // return w += 18;\r\n            return w += this.showShadowCls ? 18 : 0;\r\n        }\r\n        return w;\r\n    }\r\n\r\n    private setFooterPosition(emit = true) {\r\n        if (this.position === 'bottom') {\r\n            let positionBottom = 0;\r\n            if (this.dg.pagination) {\r\n                positionBottom = this.dg.pagerHeight || 40;\r\n            }\r\n            this.render.removeStyle(this.footerContainer.nativeElement, 'top');\r\n            this.render.setStyle(this.footerContainer.nativeElement, 'bottom', `${positionBottom}px`);\r\n        }\r\n        if (this.position === 'top') {\r\n            let positionTop = 0;\r\n            if (this.dg.showHeader) {\r\n                positionTop = this.dg.realHeaderHeight || 35;\r\n            }\r\n\r\n            if (this.dg.showRowGroupPanel) {\r\n                positionTop += this.dg.rowGroupPanelHeight;\r\n            }\r\n\r\n            if (this.dg.showFilterBar) {\r\n                positionTop += this.dg.filterBarHeight;\r\n            }\r\n\r\n            this.render.removeStyle(this.footerContainer.nativeElement, 'bottom');\r\n            this.render.setStyle(this.footerContainer.nativeElement, 'top', `${positionTop}px`);\r\n        }\r\n        if (emit) {\r\n            this.dgs.footerPositionChanged.emit();\r\n        }\r\n    }\r\n\r\n    private renderFooterStyle() {\r\n        if (this.dg.footerStyler) {\r\n\r\n            const trStyleAndCls = this.dgs.getCustomStyle(this.dg.footerStyler, null);\r\n\r\n            const cssRuleID = `${this.dg.customStyleKey()} .f-datagrid-footer`;\r\n            const cssRuleId2 = `${this.dg.customStyleKey()} .f-datagrid-footer .f-datagrid-body-fixed-left,${this.dg.customStyleKey()} .f-datagrid-footer .f-datagrid-body-fixed-right`;\r\n            const cssRuleId3 = `${this.dg.customStyleKey()}.f-datagrid-fast .f-datagrid-cell.f-datagrid-fast__fixed-left,${this.dg.customStyleKey()}.f-datagrid-fast .f-datagrid-cell.f-datagrid-fast__fixed-right`;\r\n\r\n            if (trStyleAndCls && Object.keys(trStyleAndCls).length) {\r\n                const cssRule = [];\r\n                if (trStyleAndCls.style) {\r\n                    cssRule.push(`${cssRuleID} ${JSON.stringify(trStyleAndCls.style)}`);\r\n                    cssRule.push(`${cssRuleId2} ${JSON.stringify(trStyleAndCls.style)}`);\r\n\r\n                    if (this.fast) {\r\n                        cssRule.push(`${cssRuleId3} ${JSON.stringify(trStyleAndCls.style)}`);\r\n                    }\r\n                }\r\n\r\n                this.dgs.appendCssRules(cssRule);\r\n\r\n                // this.dg.renderCustomStyle(trStyleAndCls, this.footerContainer.nativeElement, cssRule);\r\n            } else {\r\n                this.dgs.removeCssRule([cssRuleID, cssRuleId2]);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    setFixedColumnPosition(isShow, scrollLeft) {\r\n        this.showShadowCls = isShow;\r\n        const method = isShow ? 'addClass' : 'removeClass';\r\n        this.render[method](this.fixedRight.nativeElement, FIXED_RIGHT_SHADOW_CLS);\r\n\r\n        const realWidth = this.columnsGroup.leftFixedWidth + this.columnsGroup.normalWidth + this.rightFixedColumnWidth;\r\n        const gridWidth = this.dg.width;\r\n        let l = this.dg.width - (this.dg.showBorder ? 2 : 0) - this.rightFixedColumnWidth;\r\n        if (gridWidth > realWidth) {\r\n            l = this.columnsGroup.leftFixedWidth + this.columnsGroup.normalWidth;\r\n        }\r\n        this.render.setStyle(this.fixedRight.nativeElement, 'left', l + 'px');\r\n    }\r\n}\r\n","import { Subscription } from 'rxjs';\r\nimport { DatagridComponent } from './../../datagrid.component';\r\nimport { NotifyService } from '@farris/ui-notify';\r\nimport { ChangeDetectorRef, Injector, Optional, OnChanges, SimpleChanges, TemplateRef } from '@angular/core';\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-06 07:43:07\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-10-17 20:20:21\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { Component, OnInit, Input, Output, EventEmitter, ElementRef, AfterViewInit, ViewChild, HostBinding } from '@angular/core';\r\nimport { PaginationControlsComponent, PaginationControlsDirective } from '@farris/ui-pagination';\r\nimport { OverLayHiddenService } from '@farris/ui-common';\r\n\r\n@Component({\r\n    selector: 'datagrid-pager',\r\n    templateUrl: './page.component.html'\r\n})\r\nexport class DatagridPagerComponent implements OnInit, AfterViewInit, OnChanges {\r\n    @Input() pagerPos = 'right';\r\n    @Input() id = 'farris-datagrid-pager';\r\n    /** æ¾ç¤ºé¡µç çæ°é */\r\n    @Input() maxSize = 7;\r\n    /** æ¯å¦æ¾ç¤ºé¡µç  */\r\n    @Input() directionLinks = true;\r\n\r\n    @Input() autoHide = false;\r\n\r\n    @Input() responsive = false;\r\n    /** ä¸é¡µæ ç­¾ */\r\n    @Input() previousLabel = 'ä¸é¡µ';\r\n    /** ä¸é¡µæ ç­¾ */\r\n    @Input() nextLabel = 'ä¸é¡µ';\r\n    @Input() showPageList = false;\r\n    @Input() showPageInfo = true;\r\n    @Input() showPageNumber = true;\r\n    @Input() locked = false;\r\n\r\n    @Input() selectedData = [];\r\n    @Input() viewMode: 'default' | 'simple' = 'default';\r\n    @Input() listItemFormatter: (data) => string;\r\n\r\n    @Input() showSelectedList = false;\r\n\r\n    @Input() showGotoInput = false;\r\n\r\n    /** åé¡µæ¡èªå®ä¹åå®¹åºæ¨¡æ¿ */\r\n    @Input() contentTemplate: TemplateRef<any> = null;\r\n    @Input() data = null;\r\n\r\n    @Output() pageChange = new EventEmitter();\r\n    @Output() pageSizeChange = new EventEmitter();\r\n\r\n    @Output() removeSelectedItem = new EventEmitter();\r\n    @Output() clearSelectedItem = new EventEmitter();\r\n\r\n    @ViewChild('pagerContainer') pc: ElementRef;\r\n    @ViewChild('pager') pager: PaginationControlsComponent;\r\n    @ViewChild('selectItemPanel') selectItemPanel: ElementRef;\r\n\r\n    get pagination(): PaginationControlsDirective {\r\n        return this.pager.paginationDirective;\r\n    }\r\n\r\n\r\n    get pageSize() {\r\n        return this.pagination.getPageSize();\r\n    }\r\n\r\n    get total() {\r\n        return this.pagination.getTotalItems();\r\n    }\r\n\r\n    get outerHeight() {\r\n        if (this.pc) {\r\n            return this.pc.nativeElement.offsetHeight;\r\n        }\r\n        return 40;\r\n    }\r\n    styles = { opacity: 1 };\r\n\r\n    mouseInSelectedList = false;\r\n    openSelectedList = false;\r\n\r\n    private selectionDataChange$: Subscription = null;\r\n\r\n    private notifySer: NotifyService;\r\n    private overLayService: OverLayHiddenService = null;\r\n    constructor(public el: ElementRef, private cd: ChangeDetectorRef, @Optional() private inject: Injector) {\r\n        if (this.inject) {\r\n            this.notifySer = this.inject.get<NotifyService>(NotifyService, null);\r\n        }\r\n\r\n        this.overLayService = new OverLayHiddenService();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.listenCheckDataChanged();\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.lockedStyles();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.selectedData && !changes.selectedData.isFirstChange()) {\r\n            if (!this.selectedData || !this.selectedData.length) {\r\n                this.closeSelectedList();\r\n            }\r\n        }\r\n\r\n        if (changes.showSelectedList && !changes.showSelectedList.isFirstChange()) {\r\n            this.listenCheckDataChanged();\r\n        }\r\n\r\n        if (changes.locked && !changes.locked.isFirstChange()) {\r\n            this.lockedStyles();\r\n        }\r\n    }\r\n\r\n    private listenCheckDataChanged() {\r\n        if (this.showSelectedList) {\r\n            const dg = this.inject.get(DatagridComponent, null);\r\n            if (dg) {\r\n                this.selectionDataChange$ = dg.checkedChange.subscribe((data: any) => {\r\n                    this.selectedData = data;\r\n                    if (!this.cd['destroyed']) {\r\n                        this.cd.detectChanges();\r\n                    }\r\n                });\r\n            }\r\n        } else {\r\n            if (this.selectionDataChange$) {\r\n                this.selectionDataChange$.unsubscribe();\r\n                this.selectionDataChange$ = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    onPageChange(pageIndex: any) {\r\n        if (typeof pageIndex === 'object') {\r\n            pageIndex = pageIndex.pageIndex || 1;\r\n        }\r\n        this.pageChange.emit(Number.parseInt(pageIndex, 10));\r\n    }\r\n\r\n    onPageSizeChange(pageSize: any) {\r\n        this.pageSizeChange.emit(Number.parseInt(pageSize, 10));\r\n    }\r\n\r\n    lock() {\r\n        this.locked = true;\r\n        this.lockedStyles();\r\n    }\r\n    unlock() {\r\n        this.locked = false;\r\n        this.lockedStyles();\r\n    }\r\n\r\n    private lockedStyles() {\r\n        this.styles = { opacity: this.locked? 0.5 : 1 };\r\n        this.cd.detectChanges();\r\n    }\r\n\r\n    onMouseEnter($event) {\r\n        $event.stopPropagation();\r\n\r\n        if (this.locked) {\r\n            return;\r\n        }\r\n        this.mouseInSelectedList = true;\r\n        if (this.selectedData && this.selectedData.length) {\r\n            this.openSelectedList = !this.openSelectedList;\r\n        } else {\r\n            this.openSelectedList = false;\r\n        }\r\n\r\n        let target = $event.target;\r\n        if (!target.classList.contains('selected-list-badge')) {\r\n            target = $event.target.closest('.selected-list-badge');\r\n        }\r\n\r\n\r\n        if (this.openSelectedList) {\r\n\r\n            const selectedListContainer = this.el.nativeElement.querySelector('.pager-overlay-container');\r\n            const isInModal = target.closest('.modal-dialog');\r\n\r\n            let { top, left } = target.getBoundingClientRect();\r\n            if (selectedListContainer) {\r\n                if (isInModal) {\r\n                    const { top: mtop, left: mleft } = isInModal.getBoundingClientRect();\r\n                    top = top - mtop;\r\n                    left = left - mleft;\r\n                }\r\n\r\n                selectedListContainer.style.top = `${top}px`;\r\n                selectedListContainer.style.left = `${left - 10}px`;\r\n            }\r\n\r\n            this.overLayService.registerMouseEvent(this.selectItemPanel.nativeElement, (e) => {\r\n                if (this.selectItemPanel.nativeElement.contains(e.target) || e.target.classList.contains('selected-list-badge') || e.target.closest('.selected-list-badge')) {\r\n                    return;\r\n                }\r\n\r\n                this.closeSelectedList();\r\n                this.overLayService.destory(this.selectItemPanel.nativeElement);\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    closeSelectedList() {\r\n        this.openSelectedList = false;\r\n        this.mouseInSelectedList = false;\r\n        if (!this.cd['destroyed']) {\r\n            this.cd.detectChanges();\r\n        }\r\n    }\r\n\r\n    onDelSelectedItem(id: any) {\r\n        this.removeSelectedItem.emit(id);\r\n    }\r\n\r\n    onClearSelected($event) {\r\n        this.clearSelectedItem.emit();\r\n        this.closeSelectedList();\r\n    }\r\n\r\n    onSelectListPanelClose($event) {\r\n        this.closeSelectedList();\r\n    }\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\r\n\r\nconst loading_style_ring =\r\n`<svg width=\"100%\" height=\"100%\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n  <circle cx=\"50\" cy=\"50\" fill=\"none\" r=\"30\" stroke=\"#2c7dff\" stroke-width=\"10\"></circle>\r\n  <circle cx=\"50\" cy=\"50\" fill=\"none\" r=\"30\" stroke=\"#d0eaff\" stroke-width=\"10\" stroke-linecap=\"square\" transform=\"rotate(178.821 50 50)\">\r\n      <animateTransform attributeName=\"transform\" type=\"rotate\"\r\n          calcMode=\"linear\" values=\"0 50 50;180 50 50;720 50 50\" keyTimes=\"0;0.5;1\" dur=\"1.6s\" begin=\"0s\"\r\n          repeatCount=\"indefinite\"></animateTransform>\r\n      <animate attributeName=\"stroke-dasharray\" calcMode=\"linear\"\r\n          values=\"9.42477796076938 179.0707812546182;150.79644737231007 37.6991118430775;9.42477796076938 179.0707812546182\"\r\n          keyTimes=\"0;0.5;1\" dur=\"1.6\" begin=\"0s\" repeatCount=\"indefinite\"></animate>\r\n  </circle>\r\n</svg>`;\r\n\r\n@Component({\r\n    selector: 'datagrid-loading',\r\n    template: `\r\n    <div style=\"width:100%;height:100%;position:absolute;top:0;left: 0;background:rgba(255,255,255,0);z-index: 90000000;pointer-events: unset;\">\r\n        <div style=\"width: 50px;height: 50px;position: relative;top: 50%;margin-top: -25px;left: 50%;margin-left: -25px;\"\r\n        [innerHTML]=\"loading\" >\r\n        </div>\r\n    </div>\r\n    `\r\n})\r\nexport class DataGridLoadingComponent implements OnInit {\r\n\r\n    @Input() loading: any;\r\n\r\n    constructor(private domSanitizer: DomSanitizer) { }\r\n\r\n    ngOnInit(): void {\r\n        if (this.loading) {\r\n            this.loading = this.domSanitizer.bypassSecurityTrustHtml(this.loading);\r\n        } else {\r\n            this.loading = this.domSanitizer.bypassSecurityTrustHtml(loading_style_ring);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { debounce } from 'rxjs/operators';\r\nimport { Component, OnInit, EventEmitter, Output, Input, OnChanges, SimpleChanges, ViewChild, ElementRef } from '@angular/core';\r\nimport { interval } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'pager-selected-list',\r\n    templateUrl: './selected-list.component.html',\r\n})\r\nexport class PagerSelectedListComponent implements OnInit, OnChanges {\r\n\r\n    @Input() data = [];\r\n\r\n    @Output() close = new EventEmitter();\r\n    @Output() remove = new EventEmitter();\r\n    @Output() clear = new EventEmitter();\r\n\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit(): void { }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n    }\r\n\r\n    onClose($event: MouseEvent) {\r\n        $event.stopPropagation();\r\n        this.close.emit();\r\n    }\r\n\r\n    onRemoveClick($event: MouseEvent, id: any) {\r\n        $event.stopPropagation();\r\n        this.remove.emit(id);\r\n    }\r\n\r\n    onClearClick($event: MouseEvent) {\r\n        $event.stopPropagation();\r\n        this.clear.emit();\r\n    }\r\n\r\n    onClick($event: MouseEvent) {\r\n        $event.stopPropagation();\r\n        return false;\r\n    }\r\n\r\n    trackByFn = (index, item) => {\r\n        return item.id;\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({name: 'selectedItem'})\r\nexport class SelectedItemPipe implements PipeTransform {\r\n    transform(data: any, formatter: any): any {\r\n        if (data) {\r\n            if (formatter) {\r\n                data = data.map( d => {\r\n                    return {id: d.id, text:  formatter(d.data) };\r\n                });\r\n            } else  {\r\n                data = data.map(d => {\r\n                    const txt = [];\r\n                    const keys = Object.keys(d.data);\r\n                    keys.forEach(k => {\r\n                        txt.push(d.data[k]);\r\n                    });\r\n                    return {id: d.id, text: txt.join(', ') };\r\n                });\r\n            }\r\n\r\n            return data;\r\n        }\r\n    }\r\n}\r\n","import { ErrorHandler, Injector } from '@angular/core';\r\n\r\nexport class DatagridErrorHandler implements ErrorHandler {\r\n    handleError(error: any): void {\r\n        console.error(error);\r\n    }\r\n}\r\n\r\nexport class Éµs implements ErrorHandler {\r\n    handleError(error: any): void {\r\n        console.error(error);\r\n    }\r\n}\r\n","import { Subject, Subscription } from 'rxjs';\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-06 07:43:07\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-10-30 16:08:56\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { DatagridComponent } from './../../datagrid.component';\r\nimport { Component, OnInit, Input, ViewChild, ElementRef, Injector, Inject, forwardRef, ChangeDetectorRef, OnDestroy, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { DatagridFacadeService } from './../../services/datagrid-facade.service';\r\nimport { filter, map, takeUntil } from 'rxjs/operators';\r\nimport { IS_GROUP_ROW_FIELD } from '../../services/state';\r\n\r\n@Component({\r\n    selector: 'datagrid-checkbox',\r\n    template: ` <div class=\"custom-control custom-checkbox f-checkradio-single\">\r\n        <input type=\"checkbox\" #chk class=\"custom-control-input\" [disabled]=\"disabled\" [checked]=\"checked\">\r\n        <label class=\"custom-control-label\" (click)=\"handleClick($event)\"></label>\r\n    </div>`,\r\n    styles: [\r\n        `\r\n        :host {\r\n            vertical-align: middle;\r\n        }\r\n        :host .custom-checkbox {\r\n            opacity: 1;\r\n            float: none;\r\n            top: 2px;\r\n        }\r\n        `\r\n    ]\r\n})\r\nexport class DatagridCheckboxComponent implements OnInit, OnDestroy, OnChanges {\r\n    @Input() rowData: any;\r\n    @Input() rowIndex: any;\r\n    @Input() checked: boolean;\r\n    @Input() disabled: boolean;\r\n\r\n    @Input() indeterminate = false;\r\n    @ViewChild('chk') chk: ElementRef;\r\n\r\n    private dfs: DatagridFacadeService;\r\n    private cd: ChangeDetectorRef;\r\n\r\n    checked$ = null;\r\n    private destroy$ = new Subject();\r\n    subscriptions: Subscription[] = [];\r\n    constructor(private injector: Injector, @Inject(forwardRef(() => DatagridComponent)) public dg: DatagridComponent) {\r\n        this.dfs = this.injector.get(DatagridFacadeService);\r\n        this.cd = this.injector.get(ChangeDetectorRef);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        if (this.indeterminate) {\r\n            this.chk.nativeElement.indeterminate = true;\r\n        }\r\n        this.listenSubjects();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.checked && !changes.checked.isFirstChange()) {\r\n            this.changeCheckedStatus(changes.checked.currentValue);\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n\r\n        if (this.subscriptions && this.subscriptions.length) {\r\n            this.subscriptions.forEach(n => n.unsubscribe());\r\n            this.subscriptions = [];\r\n        }\r\n    }\r\n\r\n    private listenSubjects() {\r\n\r\n        const rid = this.dfs.primaryId(this.rowData);\r\n\r\n        this.subscriptions.push(\r\n            this.dg.checkAll.pipe(\r\n                takeUntil(this.destroy$)\r\n            ).subscribe(() => {\r\n               \r\n                let flag = true;\r\n\r\n                if (this.dg.disableRow) {\r\n                    flag = !this.dg.disableRow(this.rowData, this.rowIndex);\r\n                    if (!flag) {\r\n                        flag = this.dg.dfs.isRowChecked(rid);\r\n                    }\r\n                }\r\n                this.changeCheckedStatus(flag);\r\n            })\r\n        );\r\n\r\n        this.subscriptions.push(\r\n            this.dg.unCheckAll.pipe(\r\n                takeUntil(this.destroy$)\r\n            ).subscribe((e: any) => {\r\n                if (e && e.length) {\r\n                    if (e.find(n => n[this.dg.idField] === this.rowData[this.dg.idField])) {\r\n                        this.changeCheckedStatus(false);\r\n                    }\r\n                } else {\r\n                    this.changeCheckedStatus(false);\r\n                }\r\n            })\r\n        );\r\n\r\n        const _setcheckrows = this.dg.dgs.setCheckedRows.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).pipe(\r\n            filter((r: any) => {\r\n                return r.ids.includes(rid) || r.ids.includes('' + rid);\r\n            }),\r\n            map((r: any) => {\r\n                const flag = r.ids.includes(rid) || r.ids.includes('' + rid);\r\n                if (flag) {\r\n                    return flag && r.checked;\r\n                }\r\n                return false;\r\n            }),\r\n        ).subscribe(r => {\r\n            this.checked = r;\r\n            this.changeCheckedStatus(r);\r\n        });\r\n        this.subscriptions.push(_setcheckrows);\r\n\r\n        this.dfs.updateCheckboxState$.pipe(\r\n            takeUntil(this.destroy$),\r\n        ).pipe(\r\n            filter((r: any) => {\r\n                return r.id === rid;\r\n            }),\r\n            map((r: any) => {\r\n                return !!r.checked;\r\n            })\r\n        ).subscribe((r: any) => {\r\n            this.checked = r;\r\n            this.changeCheckedStatus(r);\r\n        });\r\n    }\r\n\r\n    handleClick(event: MouseEvent) {\r\n        if (!this.disabled) {\r\n            const beforEventParam = {\r\n                rowIndex: this.rowIndex,\r\n                rowData: this.rowData,\r\n                gridInstance: this.dg\r\n            };\r\n            this.dg.endCellEdit();\r\n            const _checked = this.chk.nativeElement.checked;\r\n            if (!_checked) {\r\n                this.dg.beforeCheck(beforEventParam).subscribe((canCheck: boolean) => {\r\n                    if (canCheck) {\r\n                        this.dfs.checkRow(this.rowIndex, this.rowData, { instance: this.dg});\r\n                        this.checked = true;\r\n                        this.changeCheckedStatus(true);\r\n                    }\r\n                });\r\n            } else {\r\n                this.dg.beforeUncheck(beforEventParam).subscribe((canUncheck: boolean) => {\r\n                    if (canUncheck) {\r\n                        this.dfs.unCheckRow(this.rowIndex, this.rowData, { instance: this.dg});\r\n                        this.checked = false;\r\n                        this.changeCheckedStatus(false);\r\n                        if (this.dg.showSelectedList) {\r\n                            this.dg.cd.detectChanges();\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            // this.checked = !this.checked;\r\n            // this.cd.detectChanges();\r\n        }\r\n        event.stopPropagation();\r\n    }\r\n\r\n    private changeCheckedStatus(status: boolean) {\r\n        this.chk.nativeElement.checked = status;\r\n    }\r\n\r\n}\r\n","import { takeUntil } from 'rxjs/operators';\r\nimport { DatagridComponent } from './../../datagrid.component';\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-06 07:43:07\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-09-18 10:30:21\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { Component, OnInit, Input, ViewChild, ElementRef, Injector, OnDestroy } from '@angular/core';\r\nimport { DatagridFacadeService } from './../../services/datagrid-facade.service';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'datagrid-header-checkbox',\r\n    template: ` <div class=\"custom-control custom-checkbox f-checkradio-single\">\r\n        <input type=\"checkbox\" #chk class=\"custom-control-input\" [disabled]=\"disabled\" [checked]=\"checked\">\r\n        <label class=\"custom-control-label\" (click)=\"handleClick($event)\"></label>\r\n    </div>`,\r\n    styles: [\r\n        `\r\n        :host {\r\n            vertical-align: middle;\r\n        }\r\n        :host .custom-checkbox {\r\n            opacity: 1;\r\n            float: none;\r\n            top: 2px;\r\n        }\r\n        `\r\n    ]\r\n})\r\nexport class DatagridHeaderCheckboxComponent implements OnInit, OnDestroy {\r\n    @Input() checked: boolean;\r\n    @Input() disabled: boolean;\r\n\r\n    @Input() indeterminate = false;\r\n\r\n    @ViewChild('chk') chk: ElementRef;\r\n    private dfs: DatagridFacadeService;\r\n    private dg: DatagridComponent;\r\n    private destroy$ = new Subject();\r\n    constructor(private injector: Injector) {\r\n        this.dfs = this.injector.get(DatagridFacadeService);\r\n        this.dg = this.injector.get(DatagridComponent);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        if (this.indeterminate) {\r\n            this.chk.nativeElement.indeterminate = true;\r\n        }\r\n\r\n        this.dg.dgs.changeCheckAllStatus.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).subscribe((status: number) => {\r\n            if (status === 2) {\r\n                this.chk.nativeElement.indeterminate = true;\r\n            } else {\r\n                this.chk.nativeElement.indeterminate = false;\r\n                this.updateStatus(!!status);\r\n            }\r\n        });\r\n    }\r\n    ngOnDestroy() {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n    }\r\n\r\n    updateStatus(checked: boolean) {\r\n        this.checked = checked;\r\n        this.chk.nativeElement.checked = checked;\r\n    }\r\n\r\n\r\n    handleClick(event: MouseEvent) {\r\n        if (!this.dg.data || !this.dg.data.length) {\r\n            return;\r\n        }\r\n\r\n        if (!this.disabled) {\r\n            this.checked = !this.checked;\r\n\r\n            this.indeterminate = false;\r\n            this.chk.nativeElement.indeterminate = false;\r\n            if (this.checked) {\r\n                this.dfs.checkAll();\r\n                this.chk.nativeElement.checked = true;\r\n                // this.dg.checkAll.emit();\r\n            } else {\r\n                this.dfs.clearCheckeds(!this.dg.enableMorePageSelect);\r\n\r\n                if (this.dg.selectedRow && this.dg.checkOnSelect && this.dg.selectOnCheck) {\r\n                    this.dg.unSelectRow(this.dg.selectedRow.id);\r\n                }\r\n                this.chk.nativeElement.checked = false;\r\n                // this.dg.unCheckAll.emit();\r\n            }\r\n        }\r\n        event.stopPropagation();\r\n    }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { TR_PREFIX } from './../types/constant';\r\nimport { DatagridFacadeService } from '../services/datagrid-facade.service';\r\n\r\n@Pipe({name: 'rowDataId'})\r\nexport class RowDataIdPipe implements PipeTransform {\r\n\r\n    constructor(private dfs: DatagridFacadeService) {}\r\n\r\n    transform(rowData: any, fixedRight = false, fixedLeft = false): any {\r\n        if (rowData) {\r\n            let rowID = TR_PREFIX + this.dfs.primaryId(rowData);\r\n            if (fixedRight) {\r\n                rowID += '_fixedright';\r\n            } else if (fixedLeft) {\r\n                rowID += '_fixedleft';\r\n            }\r\n            return rowID;\r\n        }\r\n        return null;\r\n    }\r\n}\r\n","import { Optional, Pipe, PipeTransform } from '@angular/core';\r\nimport { DatagridFacadeService } from './../services/datagrid-facade.service';\r\n\r\n@Pipe({name: 'formatGroupRow'})\r\nexport class FormatGroupRowPipe implements PipeTransform {\r\n\r\n    constructor(@Optional() private dfs: DatagridFacadeService) {}\r\n\r\n\r\n    transform(row: any, col: any, fn?: any): any {\r\n        if (row) {\r\n            let val = row['value'];\r\n            if (!col && this.dfs) {\r\n                col = this.dfs.getColumn(row.field);\r\n            }\r\n\r\n            if (col && col.formatter) {\r\n                if (col.formatter.type === 'enum') {\r\n                    const enumOpts: {valueField: string, textField: string, data: any} = col.formatter.options;\r\n                    const { valueField, textField, data } = {...enumOpts};\r\n                    const enumItem = data.find(item => item[valueField] === row['value']);\r\n                    val = enumItem ? enumItem[textField] : '';\r\n                }\r\n            }\r\n\r\n            return fn ? fn(row) : val;\r\n        }\r\n\r\n        return '';\r\n    }\r\n}\r\n","import { takeUntil } from 'rxjs/operators';\r\nimport { Component, OnInit, ChangeDetectorRef, ElementRef, Injector, NgZone, Input, Output, EventEmitter, OnDestroy, OnChanges, SimpleChanges, Renderer2 } from '@angular/core';\r\nimport { Subscription, Subject } from 'rxjs';\r\nimport { DatagridService } from './../../services/datagrid.service';\r\nimport { DatagridComponent } from '../../datagrid.component';\r\nimport { DatagridBodyComponent } from './datagrid-body.component';\r\nimport { ROW_INDEX_FIELD, IS_GROUP_ROW_FIELD, GROUP_ROW_FIELD, IS_GROUP_FOOTER_ROW_FIELD, GROUP_VISIBLE_FIELD } from '../../services/state';\r\nimport { DatagridFacadeService } from '../../services/datagrid-facade.service';\r\n\r\n\r\n@Component({\r\n    selector: 'fixed-left-rows',\r\n    templateUrl: 'fixed-left-rows.component.html'\r\n})\r\n\r\nexport class FixedLeftRowsComponent implements OnInit, OnDestroy {\r\n\r\n    @Input() columns = [];\r\n    @Output() toggle = new EventEmitter();\r\n    @Input() checkedRows = [];\r\n    @Input() selectedRows = [];\r\n    @Input() data = [];\r\n\r\n    /** å¯ç¨åç»æ¶ï¼æ°æ®æºä¸­èªå¨è®¾ç½®è¡ç´¢å¼å­æ®µ */\r\n    groupRowIndex = ROW_INDEX_FIELD;\r\n    isGroupRow = IS_GROUP_ROW_FIELD;\r\n    groupRow = GROUP_ROW_FIELD;\r\n    isGroupFooter = IS_GROUP_FOOTER_ROW_FIELD;\r\n    visible = GROUP_VISIBLE_FIELD;\r\n\r\n    filterConditions = '';\r\n\r\n    subscriptions: Subscription[] = [];\r\n\r\n    dgs: DatagridService = null;\r\n    render2: Renderer2;\r\n    private destroy$ = new Subject();\r\n    constructor(\r\n        private cd: ChangeDetectorRef,\r\n        public dg: DatagridComponent,\r\n        public dgb: DatagridBodyComponent,\r\n        public dfs: DatagridFacadeService,\r\n        public el: ElementRef, private injector: Injector, private ngZone: NgZone) {\r\n            this.dgs = this.injector.get(DatagridService);\r\n            this.render2 = this.injector.get(Renderer2);\r\n        }\r\n\r\n    private listenSubject() {\r\n        // const _selectrow = this.dfs.selectRow$.subscribe(() => {\r\n        //     this.detectChanges();\r\n        // });\r\n        // this.subscriptions.push(_selectrow);\r\n\r\n        // const _unselectrow = this.dfs.unSelectRow$.subscribe(() => {\r\n        //     this.detectChanges();\r\n        // });\r\n        // this.subscriptions.push(_unselectrow);\r\n\r\n        const _setselectrow = this.dgs.setSelecedRow.pipe(\r\n            takeUntil(this.destroy$)\r\n        )\r\n        .subscribe((r: any) => {\r\n            this.detectChanges();\r\n        });\r\n        this.subscriptions.push(_setselectrow);\r\n\r\n        this.dfs.checkRow$.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).subscribe( () => {\r\n            this.checkedRows = this.dfs.getCheckeds();\r\n            this.detectChanges();\r\n        });\r\n\r\n        this.dfs.clearCheckeds$.pipe(\r\n            takeUntil(this.destroy$)\r\n        ).subscribe( () => {\r\n            this.checkedRows = this.dfs.getCheckeds();\r\n            this.detectChanges();\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.listenSubject();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n        if (this.subscriptions && this.subscriptions.length) {\r\n            this.subscriptions.forEach(n => n.unsubscribe());\r\n            this.subscriptions = [];\r\n        }\r\n    }\r\n\r\n\r\n    private detectChanges() {\r\n        if (!this.cd['destroyed']) {\r\n            // this.cd.markForCheck();\r\n            this.cd.detectChanges();\r\n        }\r\n\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n/**\r\n * ä½¿ç¨è¯´æ\r\n * let message = \"ä»å¤©å¤©æ° {0}ï¼å¤å¤å¥½ {1}ã\"\r\n * template:\r\n * <h1>{{ message| replaceX: 'æ´æ', 'é£å' }}</h1>\r\n * resule:\r\n * <h1>ä»å¤©å¤©æ° æ´æï¼å¤å¤å¥½ é£åã</h1>\r\n */\r\n@Pipe({name: 'replaceX'})\r\nexport class ReplaceXPipe implements PipeTransform {\r\n    transform(value: any, ...args: any[]) {\r\n        args.forEach((v, i) => {\r\n            value = value.replace(`{${i}}`, v);\r\n        });\r\n\r\n        return value;\r\n    }\r\n}\r\n","import { Directive, Input, Injector, Renderer2, ElementRef, OnInit } from '@angular/core';\r\nimport { DatagridComponent } from './../../datagrid.component';\r\n\r\n@Directive({\r\n    selector: '[group-row]',\r\n})\r\nexport class DatagridGroupRowDirective implements OnInit {\r\n    @Input('group-row') groupRow;\r\n\r\n    constructor(private injector: Injector, private render: Renderer2, private el: ElementRef, private dg: DatagridComponent) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (this.dg && this.dg.groupStyler) {\r\n            const styler = this.dg.groupStyler(this.groupRow);\r\n            const tr = this.el.nativeElement;\r\n            if (!tr.id) {\r\n                tr.id = 'group-tr_' + this.groupRow.id;\r\n            }\r\n            this.dg.renderCustomStyle(styler, tr);\r\n        }\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({name: 'showStar'})\r\nexport class ShowRequiredStarPipe implements PipeTransform {\r\n    transform(validators: any): any {\r\n        if (validators && validators.length) {\r\n            const isRequired = validators.find(v => v.type === 'required');\r\n            return isRequired;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({name: 'disableRow'})\r\nexport class DisableRowPipe implements PipeTransform {\r\n    transform(rowData: any, rowIndex: number, disableRowFn: (row, index) => {}): any {\r\n        if (disableRowFn) {\r\n            return disableRowFn(rowData, rowIndex);\r\n        }\r\n\r\n        return false;\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DatagridFacadeService } from './../services/datagrid-facade.service';\r\n\r\n@Pipe({name: 'selectedRow'})\r\nexport class SelectedRowPipe implements PipeTransform {\r\n    constructor(private dfs: DatagridFacadeService) {}\r\n    transform(rowId: any): any {\r\n        return this.dfs.isRowSelected(rowId);\r\n    }\r\n}\r\n","import { Utils } from './utils';\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({name: 'fieldvalue'})\r\nexport class FieldValuePipe implements PipeTransform {\r\n    transform(field: any, rowdata: any, safe = false): any {\r\n        return Utils.getValue(field, rowdata, safe);\r\n    }\r\n}\r\n","import { DatagridComponent } from './../../datagrid.component';\r\nimport { Utils } from './../../utils/utils';\r\nimport { OnDestroy, Input, HostListener, ElementRef, Directive, Injector, OnInit, NgZone, Renderer2 } from '@angular/core';\r\nimport { CommonUtils } from '@farris/ui-common';\r\nimport { DomHandler } from '../../services/domhandler';\r\n\r\n@Directive({\r\n    selector: '[cell-tooltip]',\r\n    exportAs: 'cellTooltip'\r\n})\r\nexport class DatagridCellTooltipDirective implements OnInit, OnDestroy {\r\n    @Input('cell-tooltip') enable: boolean;\r\n    @Input() position: 'top' | 'bottom' | 'left' | 'right' | 'top-left' | 'top-center' | 'top-right' = 'top-left';\r\n    @Input() positionStyle: string;\r\n    @Input() tooltipStyleClass: string;\r\n    @Input() message: string;\r\n    @Input() delay = 1000;\r\n\r\n    @Input() cls = '';\r\n    @Input() type: 'danger' | 'success' | 'info' | 'warning' = 'info';\r\n    @Input() tipMode: 'allways' | 'auto' = 'auto';\r\n\r\n    // @HostBinding('style.width') cmpWidth = '100%';\r\n\r\n    container: any;\r\n    private commonUtils: CommonUtils;\r\n    private showTipTimer = null;\r\n\r\n\r\n    private _mouseenter = null;\r\n    private _mouseleave = null;\r\n    private _mouseclick = null;\r\n    private ngZone: NgZone = null;\r\n    private render: Renderer2 = null;\r\n    private dg: DatagridComponent;\r\n    constructor(private el: ElementRef, private injector: Injector) {\r\n        if (this.injector) {\r\n            this.commonUtils = this.injector.get(CommonUtils, new CommonUtils());\r\n            this.ngZone = this.injector.get(NgZone);\r\n            this.render = this.injector.get(Renderer2);\r\n\r\n            this.dg = this.injector.get(DatagridComponent);\r\n        } else {\r\n            this.commonUtils = new CommonUtils();\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (this.ngZone) {\r\n            this.ngZone.runOutsideAngular(() => {\r\n                this._mouseenter = Utils.on(this.el.nativeElement, 'mouseenter', this.onMouseEnter.bind(this), { target: '.f-datagrid-cell-content', options: { capture: true }});\r\n                this._mouseleave = Utils.on(this.el.nativeElement, 'mouseleave', this.onMouseLeave.bind(this), { target: '.f-datagrid-cell-content', options: { capture: true }});\r\n                this._mouseclick = Utils.on(this.el.nativeElement, 'mousedown', this.onClick.bind(this));\r\n            });\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.hide();\r\n        if (this._mouseenter) {\r\n            this._mouseenter();\r\n        }\r\n\r\n        if (this._mouseleave) {\r\n            this._mouseleave();\r\n        }\r\n\r\n        if (this._mouseclick) {\r\n            this._mouseclick();\r\n        }\r\n\r\n        // this.dg = null;\r\n    }\r\n\r\n    onMouseEnter($event: any) {\r\n\r\n        if ($event.fromElement) {\r\n            if (!$event.fromElement.closest('.f-datagrid')) {\r\n                return;\r\n            }\r\n        }\r\n\r\n\r\n        const cellTiptimer = this.dg ? this.dg.cellTipTimer : 1000;\r\n\r\n        if (this.showTipTimer) {\r\n            clearTimeout(this.showTipTimer);\r\n            this.showTipTimer = null;\r\n        }\r\n        this.showTipTimer = setTimeout(() => {\r\n            this.show($event);\r\n        }, cellTiptimer);\r\n    }\r\n\r\n    onMouseLeave() {\r\n        this.hide();\r\n    }\r\n\r\n    onClick(e: MouseEvent) {\r\n        // e.stopPropagation();\r\n        this.hide();\r\n    }\r\n\r\n    private getTextContainer() {\r\n        return DomHandler.findSingle(this.container, '.f-tooltip-text');\r\n    }\r\n\r\n    private donotShowTips(target: any) {\r\n        const tdWidth = target.offsetWidth;\r\n        const tagetSty =  window.getComputedStyle(target);\r\n        const txtWidth = this.commonUtils.getTextWidth(this.message, tagetSty.font);\r\n        const { paddingLeft, paddingRight } = tagetSty;\r\n        const _width = tdWidth - (Number(paddingLeft.replace('px', '')) || 0) - (Number(paddingRight.replace('px', '')) || 0);\r\n\r\n        let tr = target.closest('tr');\r\n        if (tr) {\r\n            const trId = tr.id;\r\n            tr = document.querySelector('#'+ trId);\r\n        }\r\n\r\n        if (this.tipMode === 'auto') {\r\n            if (tr) {\r\n                return _width && _width > txtWidth;\r\n            }\r\n            return true;\r\n        } else {\r\n            return tr ? false : true;\r\n        }\r\n    }\r\n\r\n    hide() {\r\n        if (this.showTipTimer) {\r\n            clearTimeout(this.showTipTimer);\r\n            this.showTipTimer = null;\r\n        }\r\n\r\n        if (this.container && this.container.parentElement) {\r\n            document.body.removeChild(this.container);\r\n        }\r\n        this.container = null;\r\n    }\r\n\r\n    show($event: MouseEvent) {\r\n        const cellEl = $event.target as any;\r\n        this.enable = cellEl.getAttribute('cell-tooltip') === 'true';\r\n        this.message = cellEl.getAttribute('message');\r\n        this.tipMode = cellEl.getAttribute('tipMode') || 'auto';\r\n\r\n        if (!this.enable || !this.message) {\r\n            return;\r\n        }\r\n\r\n        const tipWidth = cellEl.getAttribute('tipWidth');\r\n        const tipHeight = cellEl.getAttribute('tipHeight');\r\n        this.position = cellEl.getAttribute('position') || 'top-left';\r\n\r\n        // æ£æ¥ä¸åå®¹å®½åº¦æ¯å¦è¶åºåå®½\r\n        if (this.donotShowTips($event.target)) {\r\n            return;\r\n        }\r\n\r\n        // const boxEl = this.el.nativeElement;\r\n        const boxEl = $event.target;\r\n        const elSize = this.getBoxSizeObj(boxEl);\r\n\r\n\r\n        /** å¦æå­å¨åä¸æ°å»ºï¼åªéè¦ä¿®æ¹éé¢çåå®¹ */\r\n        if (!this.container) {\r\n            this.create(elSize);\r\n        } else {\r\n            DomHandler.findSingle(this.container, '.f-tooltip-text').innerHTML = this.message;\r\n        }\r\n\r\n        this.container.style.maxWidth = `${window.innerWidth - 30}px`;\r\n        this.container.style.minWidth = '35px';\r\n\r\n        if (tipWidth) {\r\n            this.container.style.width = tipWidth;\r\n        }\r\n\r\n        if (tipHeight) {\r\n            this.container.style.height = tipHeight;\r\n        }\r\n\r\n\r\n        const offset = DomHandler.getOffset(boxEl);\r\n        const targetTop = offset.top;\r\n        const targetLeft = offset.left;\r\n        let left: number;\r\n        let top: number;\r\n        this.container.style.display = 'block';\r\n\r\n        this.changeTooltipPosition(boxEl);\r\n        const arrow = DomHandler.findSingle(this.container, '.f-tooltip-arrow');\r\n        const tooltipSize = this.getTooltipSize();\r\n\r\n        // æ£æ¥åå®¹é«åº¦\r\n        if (window.innerHeight - 10 < tooltipSize.height) {\r\n            this.container.style.height = `${window.innerHeight - 20}px`;\r\n\r\n            tooltipSize.height = window.innerHeight - 25;\r\n            const textContainer = this.getTextContainer();\r\n            textContainer.style.height = `${tooltipSize.height}px`;\r\n            textContainer.style.overflow = 'hidden';\r\n        }\r\n\r\n\r\n        const n = this.updateArrowPosition(arrow, offset, $event);\r\n        switch (this.position) {\r\n            case 'right':\r\n                left = targetLeft + elSize.width;\r\n                top = n;\r\n                break;\r\n            case 'left':\r\n                left = targetLeft - tooltipSize.width;\r\n                top = n;\r\n                break;\r\n            case 'top-left':\r\n                top = targetTop - tooltipSize.height - 7;\r\n                left = n;\r\n                break;\r\n        }\r\n\r\n        if (left) {\r\n            this.container.style.left = left + 'px';\r\n        }\r\n\r\n        this.container.style.top = top + 'px';\r\n        this.container.style.zIndex = 999999;\r\n    }\r\n\r\n    private updateArrowPosition(arrow: any, elOffset: { top, left }, $event: any) {\r\n        const tooltipSize = this.getTooltipSize();\r\n        if (this.position === 'left' || this.position === 'right') {\r\n            const targetTop = elOffset.top;\r\n            const halfHeight = tooltipSize.height / 2;\r\n            let top = 10;\r\n            if (targetTop > halfHeight && window.innerHeight - targetTop > halfHeight) {\r\n                top = targetTop - tooltipSize.height / 2;\r\n            }\r\n\r\n            // è°æ´ç®­å¤´çä½ç½®\r\n            if (arrow) {\r\n                arrow.style.top = `${targetTop - top}px`;\r\n            }\r\n\r\n            return top;\r\n        } else if (this.position === 'top-left') {\r\n            let left = $event.pageX - tooltipSize.width / 2;\r\n\r\n            if (left < 10) {\r\n                left = elOffset.left;\r\n            }\r\n\r\n            if (left + tooltipSize.width > window.innerWidth) {\r\n                left = window.innerWidth - tooltipSize.width - 20;\r\n            }\r\n            // è°æ´ç®­å¤´çä½ç½®\r\n            if (arrow) {\r\n                if ($event.pageX - left > 28) {\r\n                    if ($event.pageX - left + 28 > tooltipSize.width) {\r\n                        arrow.style.left = `${tooltipSize.width - 28 }px`;\r\n                    } else {\r\n                        arrow.style.left = `${$event.pageX - left }px`;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return left;\r\n        }\r\n    }\r\n\r\n    create(elSize: any) {\r\n        let styleClass = this.tooltipCls();\r\n        this.container = document.createElement('div');\r\n        if (this.tooltipStyleClass) {\r\n            styleClass += ' ' + this.tooltipStyleClass;\r\n        }\r\n        this.container.className = styleClass;\r\n\r\n        const tooltipArrow = document.createElement('div');\r\n        tooltipArrow.className = 'f-tooltip-arrow ';\r\n        this.container.appendChild(tooltipArrow);\r\n\r\n        const tooltipText = document.createElement('div');\r\n        tooltipText.className = 'f-tooltip-text ';\r\n        tooltipText.innerHTML = this.message;\r\n\r\n        const maxWidth = window.innerWidth - 50;\r\n        tooltipText.style.maxWidth = `${maxWidth}px`;\r\n\r\n        tooltipText.style.wordBreak = 'break-all';\r\n        this.container.style.textAlign = 'center';\r\n\r\n        if (this.positionStyle) {\r\n            this.container.style.position = this.positionStyle;\r\n        }\r\n\r\n        this.container.appendChild(tooltipText);\r\n        document.body.appendChild(this.container);\r\n    }\r\n\r\n    private tooltipCls() {\r\n        return 'datagrid-cell-tooltip f-tooltip ' + this.getThemeCls() + ' f-tooltip-' + this.position + ' ' + this.cls;\r\n    }\r\n\r\n    private getThemeCls() {\r\n        if (this.type) {\r\n            return 'f-tooltip-' + this.type;\r\n        }\r\n        return '';\r\n    }\r\n\r\n    /** è·åå®¿ä¸»å°ºå¯¸ */\r\n    private getBoxSizeObj(boxEl) {\r\n        const p = boxEl.getBoundingClientRect();\r\n        return {\r\n            width: DomHandler.getOuterWidth(boxEl),\r\n            height: DomHandler.getOuterHeight(boxEl),\r\n            left: p.left,\r\n            right: p.right,\r\n            top: p.top,\r\n            bottom: p.bottom\r\n        };\r\n    }\r\n\r\n    /** è·åtooltip å®¹å¨å°ºå¯¸ */\r\n    private getTooltipSize() {\r\n        return {\r\n            width: DomHandler.getOuterWidth(this.container),\r\n            height: DomHandler.getOuterHeight(this.container)\r\n        };\r\n    }\r\n\r\n    /** è·åçªå£å°ºå¯¸ */\r\n    private getWindowSize() {\r\n        return {\r\n            width: window.innerWidth,\r\n            height: window.innerHeight\r\n        };\r\n    }\r\n\r\n    /** æ ¹æ®åå®¹çå¤å°ï¼èªå¨æ´æ¹tooltip çä½ç½® */\r\n    private changeTooltipPosition(boxEl: any) {\r\n        const boxSize = this.getBoxSizeObj(boxEl);\r\n        const tooltip = this.getTooltipSize();\r\n        const winSize = this.getWindowSize();\r\n\r\n        this.container.className = this.tooltipCls();\r\n\r\n        if (tooltip.width < winSize.width && tooltip.height < boxSize.top) {\r\n            // this.position = 'top-left';\r\n            return;\r\n        } else {\r\n            const elOffset = DomHandler.getOffset(boxEl);\r\n            const elLeft = elOffset.left;\r\n            const elRight = winSize.width - elLeft - boxSize.width;\r\n\r\n            if (elLeft > elRight) {\r\n                this.position = 'left';\r\n            } else {\r\n                this.position = 'right';\r\n            }\r\n\r\n            const toolTipTextWidth = elLeft > elRight ? elLeft : elRight;\r\n            const textEl = this.getTextContainer();\r\n            textEl.style.maxWidth = `${toolTipTextWidth - 30}px`;\r\n            this.container.style.maxWidth = `${toolTipTextWidth}px`;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { Pipe, PipeTransform, Injector } from '@angular/core';\r\nimport { ColumnFormatService } from '@farris/ui-common/column';\r\nimport { Utils } from './../../utils/utils';\r\nimport { DataColumn } from './../../types/data-column';\r\n\r\n@Pipe({ name: 'tipmsg' , pure: false})\r\nexport class CellTootipMessagePipe implements PipeTransform {\r\n\r\n    private colFormatSer: ColumnFormatService;\r\n    constructor( private injector: Injector) {\r\n    }\r\n\r\n    transform(col: any, ...args: any[]) {\r\n        if (col.showTips) {\r\n            this.colFormatSer = this.injector.get(ColumnFormatService);\r\n            const msg = this.getCellTooltipContent(col, args[0]);\r\n            return msg;\r\n        }\r\n        return '';\r\n    }\r\n\r\n    private getCellTooltipContent(col: DataColumn, rowData) {\r\n        let txt = Utils.getValue(col.field, rowData);\r\n        if (col.tipContent) {\r\n            if ( typeof col.tipContent === 'string') {\r\n                txt = col.tipContent;\r\n            } else {\r\n                if (typeof col.tipContent === 'function') {\r\n                    txt = col.tipContent(txt, rowData, col);\r\n                }\r\n            }\r\n        } else {\r\n            if (col.formatter && (typeof col.formatter === 'function' ||\r\n                (typeof col.formatter === 'object' && Object.keys(col.formatter).length))) {\r\n                txt = this.colFormatSer.format(txt, rowData, col.formatter);\r\n            } else {\r\n                txt = Utils.escapeValue(txt);\r\n            }\r\n        }\r\n        return txt;\r\n    }\r\n}\r\n","import { takeUntil } from 'rxjs/operators';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { Component, OnInit, ViewEncapsulation, Injector, ChangeDetectorRef, ElementRef, ViewChild, Renderer2, Input, NgZone, OnDestroy, Optional, Host } from '@angular/core';\r\nimport { DatagridService } from './../../services/datagrid.service';\r\nimport { DatagridFilterService } from './../../services/datagrid-filter.service';\r\nimport {  } from './../../services/datagrid-facade.service';\r\nimport ResizeObserver from 'resize-observer-polyfill';\r\nimport { DatagridComponent } from '../../datagrid.component';\r\n\r\n\r\n@Component({\r\n    selector: 'filter-toolbar',\r\n    template: `\r\n        <div class=\"f-datagrid-filter-toolbar-panel\" #filterPanel [class.show]=\"openFilterPanel\" style=\"width: auto\">\r\n            <span class=\"filter-text\" #filterPanelText [innerHTML]=\"filterText\"></span>\r\n        </div>\r\n        <div class=\"f-datagrid-filter-toolbar\" #filterToolbar>\r\n            <span class=\"title\">{{'datagrid.filter.title'| locale}}ï¼</span>\r\n            <span #filterbarTxt class=\"filter-text\" [innerHTML]=\"filterText\"> </span>\r\n            <span class=\"filter-action\" *ngIf=\"filterText !== empty \">\r\n                <span *ngIf=\"showExpand\" class=\"f-icon filter-action-item\"\r\n                    [class.f-icon-arrow-chevron-up]=\"openFilterPanel\"\r\n                    [class.f-icon-arrow-chevron-down]=\"!openFilterPanel\"\r\n                (click)=\"showFilterTextPanel()\" title=\"{{'datagrid.filter.more'|locale}}\"></span>\r\n                <span title=\"{{'datagrid.filter.clearAll'|locale}}\" class=\"f-icon f-icon-x filter-action-item filter-clear\" (click)=\"clearFilter($event)\"></span>\r\n                <span title=\"refresh\" class=\"f-icon f-icon-reload-sm filter-action-item filter-refresh\" style=\"color: #388fff\" (click)=\"refreshFilter($event)\"></span>\r\n                <span *ngIf=\"enableFilterSetting\" class=\"f-icon f-icon-cog filter-action-item\" title=\"{{'datagrid.filter.setting'|locale}}\"></span>\r\n            </span>\r\n        </div>\r\n    `,\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class DatagridFilterToolbarComponent implements OnInit, OnDestroy {\r\n    empty = '[ æ  ]';\r\n    filterText = this.empty;\r\n\r\n    openFilterPanel = false;\r\n    showExpand = false;\r\n\r\n    @Input() enableFilterSetting = false;\r\n\r\n    @ViewChild('filterPanel') filterPanelRef: ElementRef;\r\n    @ViewChild('filterPanelText') filterPanelTextRef: ElementRef;\r\n    @ViewChild('filterbarTxt') filterTextRef: ElementRef;\r\n    @ViewChild('filterToolbar') filterToolbarRef: ElementRef;\r\n\r\n    get toolbarWidth() {\r\n        return this.filterToolbarRef.nativeElement.offsetWidth;\r\n    }\r\n\r\n    get filterTextContainerWidth() {\r\n        let actionW = 52;\r\n        if (this.enableFilterSetting) {\r\n            actionW = 65;\r\n        }\r\n        return this.toolbarWidth - 85 - actionW;\r\n    }\r\n\r\n    get filterTextRealWidth() {\r\n        this.render.setStyle(this.filterPanelTextRef.nativeElement, 'white-space', 'nowrap');\r\n        const w = this.filterPanelTextRef.nativeElement.scrollWidth;\r\n        this.render.setStyle(this.filterPanelTextRef.nativeElement, 'white-space', 'normal');\r\n        return w;\r\n    }\r\n\r\n    filterChangeSubscription: Subscription;\r\n    windowResizeHandler = null;\r\n    ro: ResizeObserver = null;\r\n    private destory$ = new Subject();\r\n    private dfrs: DatagridFilterService;\r\n    private dg: DatagridComponent;\r\n    constructor(\r\n        private inject: Injector,\r\n        private el: ElementRef,\r\n        private cd: ChangeDetectorRef,\r\n        private dgs: DatagridService,\r\n        private render: Renderer2,\r\n        private ngZone: NgZone,\r\n        private localeSer: LocaleService,\r\n      ) {\r\n            this.empty = this.localeSer.getValue('datagrid.filter.nofilter');\r\n            this.filterText = this.empty;\r\n        }\r\n\r\n    ngOnInit(): void {\r\n        this.dg = this.inject.get<DatagridComponent>(DatagridComponent);\r\n        this.dfrs = this.dg.clientFilterService;\r\n\r\n        this.dgs.clearFilter.pipe(takeUntil(this.destory$)).subscribe(() => {\r\n            this.filterText = this.empty;\r\n            this.openFilterPanel = false;\r\n            this.dgs.onFilterTextChange(this.filterText);\r\n            this.cd.detectChanges();\r\n        });\r\n\r\n        this.filterChangeSubscription = this.dgs.onFilterChanged.pipe(takeUntil(this.destory$)).subscribe((n) => {\r\n            this.filterText = this.dfrs.convertFilterCondition2String(n);\r\n            if (!this.filterText) {\r\n                this.filterText = this.empty;\r\n            }\r\n\r\n            this.updateExpandState();\r\n            setTimeout(() => {\r\n                this.bindEvent();\r\n            }, 100);\r\n            if (!this.showExpand) {\r\n                this.openFilterPanel = false;\r\n            }\r\n            this.cd.detectChanges();\r\n            this.dgs.onFilterTextChange(this.filterText);\r\n        });\r\n\r\n        this.ngZone.runOutsideAngular(() => {\r\n\r\n            this.ro = new ResizeObserver(() => {\r\n                if (this['_CONTAINER_SIZE_CHANGED_TIMER_']) {\r\n                    clearTimeout(this['_CONTAINER_SIZE_CHANGED_TIMER_']);\r\n                }\r\n                this['_CONTAINER_SIZE_CHANGED_TIMER_'] = setTimeout(() => {\r\n                    this.updateExpandState();\r\n                    this.cd.detectChanges();\r\n                }, 100);\r\n            });\r\n\r\n            this.ro.observe(this.el.nativeElement.closest('div.f-datagrid'));\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destory$.next();\r\n        this.destory$.complete();\r\n        this.ro.disconnect();\r\n        if (this.filterChangeSubscription) {\r\n            this.filterChangeSubscription.unsubscribe();\r\n            this.filterChangeSubscription = null;\r\n        }\r\n        if (this.windowResizeHandler) {\r\n            this.windowResizeHandler();\r\n            this.windowResizeHandler = null;\r\n        }\r\n    }\r\n\r\n    private bindEvent() {\r\n        this.ngZone.runOutsideAngular(() => {\r\n            const filterFields = this.filterToolbarRef.nativeElement.querySelectorAll('.filter-field');\r\n            this.bindFilterFieldHandler(filterFields);\r\n\r\n            const dropdownFilterFields = this.filterPanelTextRef.nativeElement.querySelectorAll('.filter-field');\r\n            this.bindFilterFieldHandler(dropdownFilterFields, false);\r\n        });\r\n    }\r\n\r\n    private bindFilterFieldHandler(filterFields: any, hidePanel = true) {\r\n        if (filterFields && filterFields.length) {\r\n            filterFields.forEach(ff => {\r\n                this.render.listen(ff, 'click', () => {\r\n                    this.removeFilterField(ff, hidePanel);\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    private removeFilterField(ff: any, hidePanel = true) {\r\n        const field = ff.classList[1].replace('filter-column-', '');\r\n        delete this.dg.conditions[field];\r\n        this.dfrs.removeFilterField(field);\r\n        ff.remove();\r\n        if (hidePanel) {\r\n            this.openFilterPanel = false;\r\n            this.updateExpandState();\r\n        }\r\n    }\r\n\r\n    private updateExpandState() {\r\n        this.showExpand = this.isShowExpand();\r\n    }\r\n\r\n    isShowExpand() {\r\n\r\n        if (this.filterTextContainerWidth > this.filterTextRealWidth) {\r\n            return false;\r\n        } else if (this.filterTextRealWidth > this.filterTextContainerWidth) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    clearFilter($event) {\r\n        this.filterText = this.empty;\r\n        this.dgs.onClearFilter();\r\n        this.dgs.onFilterChanged.emit({});\r\n        return false;\r\n    }\r\n\r\n    refreshFilter($event) {\r\n        this.dg.filterData();\r\n        return false;\r\n    }\r\n\r\n    showFilterTextPanel() {\r\n        this.openFilterPanel = !this.openFilterPanel;\r\n        this.cd.detectChanges();\r\n    }\r\n}\r\n","import { Directive, ElementRef, Renderer2, Injector, Input, OnInit } from '@angular/core';\r\nimport { DataColumn, HeaderStyleFn } from './../../types/data-column';\r\n\r\n@Directive({\r\n    selector: '[header-style]',\r\n    exportAs: 'HeaderStyler'\r\n})\r\nexport class HeaderStyleDirective implements OnInit {\r\n    @Input('header-style') column: DataColumn;\r\n\r\n    constructor(private el: ElementRef, private render: Renderer2, private inject: Injector) {}\r\n\r\n    ngOnInit() {\r\n        this.renderCss2Element();\r\n    }\r\n\r\n    private renderCss2Element() {\r\n        if (this.column && this.column.headerStyler) {\r\n            const styler = this.column.headerStyler;\r\n            const dom = this.el.nativeElement;\r\n            const st = typeof this.column.headerStyler;\r\n\r\n            if (st === 'string') {\r\n                this.render.addClass(this.el.nativeElement, styler as string);\r\n            } else if (st === 'function') {\r\n                const r = (this.column.headerStyler as HeaderStyleFn)(this.column);\r\n                if (r.cls) {\r\n                    this.render.addClass(this.el.nativeElement, r.cls);\r\n                }\r\n                if (r.style) {\r\n                    this.renderStyle(dom, r.style);\r\n                }\r\n            } else if (st === 'object' && Object.keys(st).length) {\r\n                this.renderStyle(dom, styler);\r\n            }\r\n        }\r\n    }\r\n\r\n    private renderStyle(targetEl: any, styleObj: any) {\r\n        const cssKeys = Object.keys(styleObj);\r\n        cssKeys.forEach(k => {\r\n            this.render.setStyle(targetEl, k, styleObj[k]);\r\n        });\r\n    }\r\n\r\n}\r\n","import { DatagridComponent } from './../../datagrid.component';\r\nimport { Component, OnInit, Injector, Input } from '@angular/core';\r\n\r\n\r\n/**\r\n * èªå¨é«åº¦\r\n * ç¦ç¨åé¡µï¼ç¦ç¨åºå®è¡¨å¤´ï¼ç¦ç¨èæå è½½ï¼ç¦ç¨åºå®å\r\n * æ¯æååæ ¼ç¼è¾, æ¯ææåº, æ¯ææå¨åå®½\r\n */\r\n\r\n@Component({\r\n    selector: 'auto-height',\r\n    templateUrl: './auto-height.component.html'\r\n})\r\nexport class AutoHeightComponent implements OnInit {\r\n\r\n    @Input() columns: any[];\r\n    @Input() columnsGroup: any;\r\n    @Input() data: any;\r\n\r\n    constructor(public dg: DatagridComponent, private inject: Injector) { }\r\n\r\n    ngOnInit(): void { }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DatagridFacadeService } from '../services/datagrid-facade.service';\r\n\r\n@Pipe({name: 'rowIsSelected', pure: false})\r\nexport class RowIsSelectedPipe implements PipeTransform {\r\n    constructor(private dfs: DatagridFacadeService) {}\r\n    transform(rowData: any, selections?: any[]): any {\r\n        if (!rowData) {\r\n            return false;\r\n        }\r\n        const id = this.dfs.primaryId(rowData);\r\n\r\n        if (id) {\r\n            return this.dfs.isRowSelected(id, selections);\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DatagridFacadeService } from './../services/datagrid-facade.service';\r\n\r\n@Pipe({name: 'rowIsChecked', pure: false})\r\nexport class RowIsCheckedPipe implements PipeTransform {\r\n    constructor(private dfs: DatagridFacadeService) {}\r\n    transform(rowData: any, checkeds: any[]): any {\r\n        if (!rowData) {\r\n            return false;\r\n        }\r\n\r\n        const id = this.dfs.primaryId(rowData);\r\n        if (id) {\r\n            return this.dfs.isRowChecked(id, checkeds);\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n","import { Directive, ElementRef, Renderer2, Injector, Input, OnInit, AfterViewInit } from '@angular/core';\r\nimport { DatagridComponent } from '../../datagrid.component';\r\n\r\n@Directive({\r\n    selector: '[group-footer-row-styler]',\r\n})\r\nexport class GroupFooterRowStylerDirective implements OnInit, AfterViewInit {\r\n    @Input() column: any;\r\n    @Input('group-footer-row-styler') rowData: any;\r\n    @Input() rowIndex: any;\r\n\r\n    constructor(private el: ElementRef, private render: Renderer2, private inject: Injector, public dg: DatagridComponent) { }\r\n\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.buildCustomGroupFooterRowStyle(this.rowData);\r\n    }\r\n\r\n    private buildCustomGroupFooterRowStyle(rowData) {\r\n\r\n        if (this.dg.groupFooterStyler) {\r\n\r\n            const cs = this.dg.dgs.getCustomStyle(this.dg.groupFooterStyler, [rowData]);\r\n            if (cs) {\r\n                this.dg.renderCustomCls(cs.cls, this.el.nativeElement);\r\n                if (cs.style) {\r\n                    Object.keys(cs.style).forEach(n => {\r\n                        this.el.nativeElement.style[n] = cs.style[n];\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { DatagridComponent } from '../../datagrid.component';\r\nimport { Component, Directive, OnInit, Injector, Input, ElementRef, AfterViewInit, OnChanges, SimpleChanges, DoCheck } from '@angular/core';\r\nimport { DatagridBodyComponent } from '../body';\r\n\r\n@Directive({\r\n    selector: '[auto-height]',\r\n})\r\nexport class AutoHeightDirective implements OnInit, AfterViewInit, OnChanges, DoCheck {\r\n\r\n    @Input('auto-height') autoHeight = false;\r\n    /** æ°æ®åè¡¨æ»é«åº¦ */\r\n    @Input() wheelHeight: number;\r\n\r\n    private _timer = null;\r\n    private _dgb = null;\r\n\r\n    constructor(public dg: DatagridComponent, private inject: Injector, private el: ElementRef) {\r\n        this._dgb = this.inject.get(DatagridBodyComponent);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        // this.updateDatagridHeight(this.wheelHeight);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.updateDatagridHeight(this.wheelHeight);\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.wheelHeight) {\r\n            this.updateDatagridHeight(this.wheelHeight);\r\n        }\r\n    }\r\n\r\n    ngDoCheck() {\r\n        // this.checkScrollbarPosition();\r\n    }\r\n\r\n    private updateDatagridHeight(wheelHeight) {\r\n\r\n        if (this.el && this.el.nativeElement && this.el.nativeElement.parentElement) {\r\n            if (this.autoHeight) {\r\n                if (!wheelHeight) {\r\n                    wheelHeight = 240;\r\n\r\n                    if (!this.dg.ds || !this.dg.ds.rows || !this.dg.ds.rows.length) {\r\n                        wheelHeight = (!this.dg.emptyDataHeight || this.dg.emptyDataHeight < 0 ) ? 240 : this.dg.emptyDataHeight;\r\n                    }\r\n                }\r\n                let h =  parseInt(wheelHeight, 10);\r\n\r\n                if (this.dg.showHeader) {\r\n\r\n                    if (!this.dg.realHeaderHeight) {\r\n                        h += this.dg.setHeaderHeight();\r\n                    } else {\r\n                        h += this.dg.realHeaderHeight;\r\n                    }\r\n                }\r\n\r\n                if (this.dg.showFooter) {\r\n                    h += this.dg.footerHeight;\r\n                }\r\n\r\n                if (this.dg.pagination) {\r\n                    const ph = this.dg.pagerHeight || 40;\r\n                    h += ph;\r\n                }\r\n\r\n                if (this.dg.showFilterBar) {\r\n                    h += this.dg.filterBarHeight;\r\n                }\r\n\r\n                let wh =  `${wheelHeight}px`;\r\n\r\n                if (this.dg.maxHeight && h > this.dg.maxHeight) {\r\n                    wh = this._dgb.getViewPortHeight();\r\n                }\r\n                this.el.nativeElement.parentElement.style.height = wh;\r\n                this.el.nativeElement.parentElement.parentElement.style.height = wh;    \r\n\r\n                if (this.dg.dgContainer) {\r\n\r\n                    if (this.dg.maxHeight && h > this.dg.maxHeight) {\r\n                        h = this.dg.maxHeight;\r\n                    }\r\n\r\n                    const dgHeight = `${h}px`;\r\n                    // æ´æ°grid æå¤å±çé«åº¦\r\n                    this.dg.dgContainer.nativeElement.style.height = dgHeight;\r\n                    // farris-datagrid å¢å é«åº¦\r\n                    this.dg.el.nativeElement.style.height = dgHeight;\r\n\r\n                    this.dg.height = h;\r\n                } else {\r\n                    this.dg.el.nativeElement.querySelector('.f-datagrid').style.height = `${h}px`;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n","import { Directive, ElementRef, Injector, OnInit, NgZone, Renderer2, OnDestroy, HostListener } from '@angular/core';\r\nimport { DatagridComponent } from '../../datagrid.component';\r\nimport { TR_PREFIX } from '../../types/constant';\r\nimport { Utils } from '../../utils/utils';\r\n\r\n@Directive({\r\n    selector: '[row-dblclick]',\r\n})\r\nexport class DatagridRowDblClickDirective implements OnInit, OnDestroy {\r\n\r\n\r\n    constructor(private el: ElementRef, private injector: Injector, private ngZone: NgZone, private render: Renderer2,\r\n                public dg: DatagridComponent) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n    }\r\n\r\n    ngOnDestroy() {\r\n\r\n    }\r\n\r\n\r\n    @HostListener('dblclick', ['$event'])\r\n    dblclickRowEvent(event: any) {\r\n\r\n        const tr = event.target.closest('tr');\r\n\r\n        const rowid = tr.id.replace(TR_PREFIX, '').replace('_fixedright', '').replace('_fixedleft', '');\r\n        const rowIndex = tr.getAttribute('index');\r\n        const rowData = this.dg.dfs.findRow(rowid);\r\n\r\n        if (this.dg.disableRow) {\r\n            if (this.dg.disableRow(rowData.data, rowData.index)) {\r\n                event.stopPropagation();\r\n                return false;\r\n            }\r\n        }\r\n\r\n        if (this.dg.editable) {\r\n            if (this.dg.editMode === 'row' && this.dg.clickToEdit) {\r\n                this.dg.editRow(rowid);\r\n            } else {\r\n                this.dg.isSingleClick = false;\r\n                this.dg.dblclickRow.emit({ rowData, id: rowid, index: rowIndex, grid: this.dg, dblclick: true });\r\n            }\r\n        } else {\r\n            this.dg.dblclickRow.emit({ rowData, id: rowid, index: rowIndex, grid: this.dg,  dblclick: true });\r\n        }\r\n\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n    }\r\n}\r\n","import { Directive, ElementRef, Renderer2, Injector, Input, OnInit, AfterViewInit } from '@angular/core';\r\nimport { DatagridComponent } from '../../datagrid.component';\r\n\r\n@Directive({\r\n    selector: '[footer-cell-styler]',\r\n})\r\nexport class FooterCellStylerDirective implements OnInit, AfterViewInit {\r\n    @Input() column: any;\r\n    @Input() rowData: any;\r\n    @Input() rowIndex: any;\r\n    @Input() isGroupFooter = false;\r\n\r\n    constructor(private el: ElementRef, private render: Renderer2, private inject: Injector, public dg: DatagridComponent) { }\r\n\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        if (this.isGroupFooter) {\r\n            this.setGroupFooterCellStyle(this.column);\r\n        } else {\r\n            this.buildCustomCellStyle(this.column, this.rowData);\r\n        }\r\n    }\r\n\r\n    private buildCustomCellStyle(column, rowData) {\r\n\r\n        const tr = this.el.nativeElement.parentNode;\r\n        if (!tr.id) {\r\n            tr.id = 'footer-row-' + this.dg.dfs.primaryId(rowData);\r\n        }\r\n\r\n        if (!this.el.nativeElement.id) {\r\n            this.el.nativeElement.id = 'footer-td_' + this.rowIndex + '_' + this.column.field;\r\n        }\r\n\r\n        if (column && column.footer && column.footer.styler) {\r\n            const _rd = rowData;\r\n            const styler = column.footer.styler;\r\n            const cs = styler(_rd[column.field], _rd);\r\n            if (cs && Object.keys(cs).length) {\r\n                this.dg.renderCustomStyle(cs, this.el.nativeElement);\r\n            } else {\r\n                this.dg.dgs.removeCssRule('#' + this.el.nativeElement.id);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private setGroupFooterCellStyle(col: any) {\r\n        // åç»åè®¡è¡èªå®ä¹æ ·å¼ 20210909\r\n        if (col.groupFooter && col.groupFooter.styler) {\r\n            const val = this.dg.commonUtils.getValue(col.field, this.rowData);\r\n            const _customStyles = this.dg.dgs.getCustomStyle(col.groupFooter.styler, [val, this.rowData]);\r\n            if (_customStyles) {\r\n                this.dg.renderCustomCls(_customStyles.cls, this.el.nativeElement);\r\n                if (_customStyles.style) {\r\n                    Object.keys(_customStyles.style).forEach(n => {\r\n                        this.el.nativeElement.style[n] = _customStyles.style[n];\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class DragDropColumnService {\r\n    private initColumns;\r\n    constructor() {}\r\n\r\n    /** åç´ ä½ç½®è°æ´\r\n     * arr: æ°ç»\r\n     * newIndex: æ°ä½ç½®ç´¢å¼\r\n     * removedIndex: èä½ç½®ç´¢å¼\r\n     */\r\n    moveItem(arr, newIndex, removedIndex) {\r\n        const removedItem = arr.splice(removedIndex, 1);\r\n        arr.splice(newIndex, 0, ...removedItem);\r\n        return arr;\r\n    }\r\n\r\n    backupColumns(columns) {\r\n        this.initColumns = columns.map( cols => {\r\n            return cols.map( n => {\r\n                return {\r\n                    id: n.id,\r\n                    field: n.field\r\n                };\r\n            });\r\n        });\r\n    }\r\n}\r\n","\r\nimport { Directive, NgZone, Injector, Renderer2, ElementRef, AfterViewInit, Input, OnChanges, SimpleChanges, OnDestroy } from '@angular/core';\r\nimport { dropHandlers, smoothDnD as SmoothDnDForHeader, DropResult, ContainerOptions, constants } from '@farris/smooth-dnd';\r\nimport { DatagridComponent } from '../../datagrid.component';\r\nimport { DatagridHeaderComponent } from './datagrid-header.component';\r\nimport { DragDropColumnService } from './drag-drop-column.service';\r\n\r\n\r\nconst { wrapperClass, animationClass } = constants;\r\nSmoothDnDForHeader.dropHandler = dropHandlers.reactDropHandler().handler;\r\nSmoothDnDForHeader.wrapChild = false;\r\n\r\nexport interface DragStartEndInfo {\r\n    isSource: boolean;\r\n    payload: any;\r\n    willAcceptDrop: boolean;\r\n}\r\n\r\n@Directive({\r\n    selector: '[drag-column]',\r\n    providers: [\r\n        DragDropColumnService\r\n    ]\r\n})\r\nexport class DragColumnDirective implements AfterViewInit, OnChanges, OnDestroy {\r\n    private container: any;\r\n    @Input('drag-column') enableDrag = true;\r\n    @Input() groupName = '';\r\n\r\n    @Input() options: ContainerOptions = {\r\n        groupName: this.groupName,\r\n        orientation: 'horizontal',\r\n        behaviour: 'move',\r\n        dragHandleSelector: '.drag-column-bar',\r\n        dragClass: 'drag-column-moving',\r\n        dropPlaceholder: {\r\n            className: 'drop-group-field',\r\n        },\r\n        getGhostParent: () => {\r\n            return document.body;\r\n        },\r\n        getChildPayload: this.getChildPayload.bind(this),\r\n        shouldAcceptDrop: (sourceContainerOptions, payload) => {\r\n            if (typeof payload === 'number') {\r\n                return false;\r\n            }\r\n\r\n            if (sourceContainerOptions.groupName !== this.groupName) {\r\n                return false;\r\n            }\r\n\r\n            return !this.dg.isMultiHeader();\r\n        },\r\n        onDropReady: (dropResult: DropResult) => {\r\n            this.ngzone.run(() => {\r\n                this.onDropReady(dropResult);\r\n            });\r\n        },\r\n        onDrop: (dropResult: DropResult) => {\r\n            this.ngzone.run(() => {\r\n                this.onDrop(dropResult);\r\n            });\r\n        },\r\n        onDragEnter: () => {\r\n            this.ngzone.run(() => {\r\n                this.onDragEnter();\r\n            });\r\n        },\r\n        onDragStart: (info: DragStartEndInfo) => {\r\n            this.ngzone.run(() => {\r\n                this.onDragStart(info);\r\n            });\r\n        },\r\n        onDragEnd: (info: DragStartEndInfo) => {\r\n            this.ngzone.run(() => {\r\n                this.onDragEnd(info);\r\n            });\r\n        }\r\n    };\r\n\r\n    constructor(private ngzone: NgZone, private injector: Injector, private render: Renderer2,\r\n                private el: ElementRef, private header: DatagridHeaderComponent, private dg: DatagridComponent,\r\n                private dndSer: DragDropColumnService) { }\r\n\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.enableDrag && !changes.enableDrag.isFirstChange()) {\r\n            if (this.enableDrag) {\r\n                this.initDnD();\r\n            } else {\r\n                this.disposeDnd();\r\n            }\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.initDnD();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.disposeDnd();\r\n    }\r\n\r\n    private disposeDnd() {\r\n        if (this.container) {\r\n            this.container.dispose();\r\n            this.container = null;\r\n        }\r\n    }\r\n\r\n    private initDnD() {\r\n        if (this.dg.editable) {\r\n            return;\r\n        }\r\n        if (this.groupName === 'left' || this.groupName === 'right') {\r\n            const { left, right } = this.columnsGroup();\r\n\r\n            if (this.groupName === 'left' && !left.length) {\r\n                return;\r\n            }\r\n\r\n            if (this.groupName === 'right' && (!right.length || (right.length === 1 && right[0].field === '_datagrid-setting-control_'))) {\r\n                return;\r\n            }\r\n        }\r\n\r\n\r\n        this.options.groupName = this.groupName;\r\n        this.disposeDnd();\r\n\r\n\r\n        if (this.enableDrag) {\r\n            this.container = SmoothDnDForHeader(\r\n                this.el.nativeElement,\r\n                this.options\r\n            );\r\n\r\n            this.dndSer.backupColumns(this.header.columns);\r\n        }\r\n    }\r\n\r\n    private getChildPayload(index) {\r\n        if (this.groupName === 'left') {\r\n            if (this.dg.showCheckbox) {\r\n                index--;\r\n            }\r\n            if (this.dg.showLineNumber) {\r\n                index--;\r\n            }\r\n        }\r\n\r\n        const groupColumns = this.columnsGroup();\r\n\r\n        if (this.groupName === 'left') {\r\n            return groupColumns.left.filter((n, i) => this.dg.columnIsVisible(n))[index];\r\n        }\r\n\r\n        return groupColumns.middle.filter((n, i) => this.dg.columnIsVisible(n))[index];\r\n    }\r\n\r\n    onDropReady(dropResult) {\r\n    }\r\n\r\n    private onDrop(dropResult: DropResult) {\r\n        const { addedIndex, payload, removedIndex } = dropResult;\r\n        if (addedIndex === null) {\r\n            return;\r\n        }\r\n\r\n        const groupColumns = this.columnsGroup();\r\n\r\n        const cols = this.dg.columns[0];\r\n        const currIndex = cols.findIndex(n => n.field === payload.field);\r\n\r\n        let newIndex = addedIndex;\r\n\r\n        const moveColumn = (columns: any) => {\r\n            if (columns) {\r\n                const targetColumn = columns.filter(n => n.visible || n.visible === undefined)[newIndex];\r\n                if (targetColumn) {\r\n                    const realTagetIndex = cols.findIndex(n => n.field === targetColumn.field);\r\n                    this.dg.columns[0] = this.dndSer.moveItem(this.dg.columns[0], realTagetIndex, currIndex);\r\n\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        };\r\n\r\n        let columns = [];\r\n        if (this.groupName === 'left') {\r\n            if (this.dg.showCheckbox) {\r\n                newIndex--;\r\n            }\r\n            if (this.dg.showLineNumber) {\r\n                newIndex--;\r\n            }\r\n            columns = groupColumns.left;\r\n        } else if (this.groupName === 'center') {\r\n            columns = groupColumns.middle;\r\n        } else if (this.groupName === 'right') {\r\n            columns = groupColumns.right;\r\n        }\r\n\r\n        if (moveColumn(columns)) {\r\n            this.dg.columnsChanged(false);\r\n\r\n            if (this.dg.useControlPanel && this.dg.settingService) {\r\n                this.dg.settingService.saveUserConfig(this.dg.id);\r\n            }\r\n\r\n            this.dg.columnMoved.emit({ newColumns: this.dg.columns, grid: this.dg });\r\n        }\r\n    }\r\n\r\n    private onDragStart(info) {\r\n    }\r\n\r\n    private onDragEnd(info) {\r\n    }\r\n\r\n\r\n    private onDragEnter() {\r\n    }\r\n\r\n\r\n    private columnsGroup() {\r\n        const leftColumns = this.dg.columns[0].filter(n => n.fixed === 'left');\r\n        const rightColumns = this.dg.columns[0].filter(n => n.fixed === 'right');\r\n        const middleColumns = this.dg.columns[0].filter(n => n.fixed !== 'right' && n.fixed !== 'left');\r\n\r\n        return {\r\n            left: leftColumns,\r\n            right: rightColumns,\r\n            middle: middleColumns\r\n        };\r\n    }\r\n}\r\n\r\n","\r\nimport { Directive, NgZone, Injector, Renderer2, ElementRef, AfterViewInit, Input, OnDestroy } from '@angular/core';\r\nimport { dropHandlers, smoothDnD, DropResult, ContainerOptions, constants } from '@farris/smooth-dnd';\r\nimport { DatagridComponent } from './../../datagrid.component';\r\nimport { DragStartEndInfo } from './datagrid-drag-column.directive';\r\nimport { DragDropColumnService } from './drag-drop-column.service';\r\n\r\n\r\nsmoothDnD.dropHandler = dropHandlers.reactDropHandler().handler;\r\nsmoothDnD.wrapChild = false;\r\nconst { wrapperClass, animationClass } = constants;\r\n\r\n@Directive({\r\n    selector: '[drop-column]',\r\n    providers: [\r\n        DragDropColumnService\r\n    ]\r\n})\r\nexport class DropColumnDirective implements AfterViewInit, OnDestroy {\r\n    @Input() options: ContainerOptions = {\r\n        orientation: 'horizontal',\r\n        behaviour: 'move',\r\n        dragHandleSelector: '.group-field',\r\n        dropPlaceholder: {\r\n            className: 'drop-group-field',\r\n        },\r\n        getGhostParent: () => {\r\n            return document.body;\r\n        },\r\n        shouldAcceptDrop: (sourceContainerOptions, payload) => {\r\n            if (typeof payload === 'number') {\r\n                return true;\r\n            }\r\n\r\n            if (this.getGroupFields().length < 3) {\r\n                return payload.allowGrouping === undefined || payload.allowGrouping;\r\n            }\r\n            return false;\r\n        },\r\n        getChildPayload: (index) => {\r\n            return index;\r\n        },\r\n        // dragClass: 'drag-column-moving',\r\n        onDropReady: (dropResult: DropResult) => {\r\n            this.ngzone.run(() => {\r\n                this.onDropReady(dropResult);\r\n            });\r\n        },\r\n        onDrop: (dropResult: DropResult) => {\r\n            this.ngzone.run(() => {\r\n                this.onDrop(dropResult);\r\n            });\r\n        },\r\n        onDragEnter: () => {\r\n            this.ngzone.run(() => {\r\n                this.onDragEnter();\r\n            });\r\n        },\r\n        onDragStart: (info: DragStartEndInfo) => {\r\n            this.ngzone.run(() => {\r\n                this.onDragStart(info);\r\n            });\r\n        },\r\n        onDragEnd: (info: DragStartEndInfo) => {\r\n            this.ngzone.run(() => {\r\n                this.onDragEnd(info);\r\n            });\r\n        }\r\n    };\r\n\r\n    private container: any;\r\n    constructor(private ngzone: NgZone, private injector: Injector, private render: Renderer2, private el: ElementRef,\r\n                private dg: DatagridComponent, private dndSer: DragDropColumnService) { }\r\n\r\n    ngAfterViewInit() {\r\n        this.initDnD();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.disposeDnd();\r\n    }\r\n\r\n    private disposeDnd() {\r\n        if (this.container) {\r\n            this.container.dispose();\r\n            this.container = null;\r\n        }\r\n    }\r\n\r\n    private initDnD() {\r\n        this.disposeDnd();\r\n        if (this.dg.showRowGroupPanel) {\r\n            this.container = smoothDnD(\r\n                this.el.nativeElement,\r\n                this.options\r\n            );\r\n        }\r\n    }\r\n\r\n    private onDropReady(dropResult) {\r\n    }\r\n\r\n    private getGroupFields() {\r\n        return this.dg.groupField ? this.dg.groupField.split(',') : [];\r\n    }\r\n\r\n\r\n    private onDrop(dropResult: DropResult) {\r\n        const { addedIndex, payload, removedIndex } = dropResult;\r\n\r\n        if (addedIndex === null) {\r\n            return;\r\n        }\r\n\r\n        const newGroupFields = this.getGroupFields();\r\n\r\n        if (removedIndex === null) {\r\n            if (!newGroupFields.some((v) => v === payload.field)) {\r\n                // newGroupFields.splice(0, 0, payload.field);\r\n                newGroupFields.push(payload.field);\r\n            }\r\n        } else {\r\n            this.dndSer.moveItem(newGroupFields, addedIndex, removedIndex);\r\n        }\r\n        this.dg.groupField = newGroupFields.join(',');\r\n        // this.dg.toggleVisibleColumn([this.dg.groupField], false);\r\n\r\n        if (this.dg.useControlPanel && this.dg.settingService) {\r\n            this.dg.checkSettingHttp();\r\n            this.dg.settingService.saveUserConfig(this.dg.id).subscribe( () => {\r\n                this.dg.columnsChanged();\r\n            });\r\n        } else {\r\n            this.dg.columnsChanged();\r\n        }\r\n\r\n        this.dg.groupFieldChange.emit({ newGroupField: this.dg.groupField, grid: this.dg });\r\n    }\r\n\r\n    private onDragStart(info) {\r\n    }\r\n\r\n    private onDragEnd(info) {\r\n    }\r\n\r\n\r\n    private onDragEnter() {\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'cellReadonly'\r\n})\r\nexport class CellIsReadonlyPipe implements PipeTransform {\r\n    transform(col: any, ...args: any[]): any {\r\n        return this.isReadonly(col, args[0], args[1]);\r\n    }\r\n\r\n    private isReadonly(col, rowData, dg) {\r\n        if (dg.editable) {\r\n            // åä¸åå¹¶çååæ ¼ä¸åè®¸ç¼è¾\r\n            if (dg.mergeCell && dg.mergeFields.indexOf(col.field) > -1) {\r\n                return true;\r\n            }\r\n            return this.getReadonlyValue(col, rowData);\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    private getReadonlyValue(col, rowData) {\r\n        if (col.readonly !== undefined) {\r\n            if (typeof col.readonly === 'boolean') {\r\n                return col.readonly;\r\n            } else if (typeof col.readonly === 'function') {\r\n                return col.readonly(rowData);\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n","\r\n\r\n\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-06 07:43:53\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-10-28 09:28:28\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { NgModule, ModuleWithProviders, Provider, ErrorHandler } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { DataColumnModule } from '@farris/ui-common/column';\r\nimport { LocaleModule } from '@farris/ui-locale';\r\nimport { NotifyModule } from '@farris/ui-notify';\r\nimport { PaginationModule } from '@farris/ui-pagination';\r\nimport { SimpleFilterModule } from '@farris/ui-filter';\r\n// import { FilterPanelModule, FilterPanelComponent } from '@farris/ui-filter-panel';\r\n\r\nimport { DatagridSmartFilterModule } from './plugins/smart-filter/datagrid-smart-filter.module';\r\n\r\nimport { DatagridComponent } from './datagrid.component';\r\nimport { NgxPaginationModule } from './pagination/ngx-pagination.module';\r\nimport { DatagridPagerComponent } from './components/pager/pager.component';\r\nimport { DataGridLoadingComponent } from './components/loading.component';\r\nimport { DatagridHeaderComponent, FilterRowCreateDirective } from './components/header/datagrid-header.component';\r\nimport { DatagridCellEditableDirective } from './components/body/datagrid-cell-editable.directive';\r\nimport { DatagridCellComponent } from './components/body/datagrid-cell.component';\r\nimport { DatagridRowDirective } from './components/body/datagrid-row.directive';\r\nimport { DatagridBodyComponent } from './components/body/datagrid-body.component';\r\nimport { DatagridCellEditorDirective } from './components/columns/column-cell-edit.directive';\r\nimport { DatagridColumnDirective } from './components/columns/datagrid-column.directive';\r\nimport { GridCellEditorDirective } from './components/editors/cell-editor.directive';\r\nimport { ScrollbarModule } from './scrollbar/scrollbar.module';\r\nimport { ScrollbarConfigInterface, SCROLLBAR_CONFIG } from './scrollbar/scrollbar.interfaces';\r\n\r\nimport { DatagridRowHoverDirective } from './components/body/datagrid-row-hover.directive';\r\nimport { DatagridRowsComponent } from './components/body/datagrid-rows.component';\r\nimport { DatagridCheckboxComponent } from './components/checkbox/datagrid-checkbox.component';\r\nimport { DatagridHeaderCheckboxComponent } from './components/checkbox/datagrid-header-checkbox.component';\r\nimport { DatagridResizeColumnDirective } from './components/header/datagrid-resize-column.directive';\r\nimport { DatagridFooterComponent } from './components/footer/datagrid-footer.component';\r\nimport { SafePipe } from './utils/safe.pipe';\r\nimport { FormatCellDataPipe } from './utils/format-cell-data.pipe';\r\nimport { RowDataIdPipe } from './utils/rowid.pipe';\r\nimport { FormatGroupRowPipe } from './utils/format-group-row.pipe';\r\nimport { FixedLeftRowsComponent } from './components/body/fixed-left-rows.component';\r\n\r\n/** å¼å®¹ä¸èçæ¬ */\r\nimport { TextboxEditorComponent } from './components/editors/text-editor.component';\r\n\r\nimport { ReplaceXPipe } from './utils/rexplaceX.pipe';\r\nimport { DatagridGroupRowDirective } from './components/body/datagrid-grouprow.directive';\r\nimport { ShowRequiredStarPipe } from './utils/show-required-label.pipe';\r\nimport { DisableRowPipe } from './utils/disable-row.pipe';\r\nimport { SelectedRowPipe } from './utils/select-row.pipe';\r\nimport { FieldValuePipe } from './utils/field-value.pipe';\r\nimport { DatagridCellTooltipDirective } from './components/tooltip/cell-tooltip.directive';\r\nimport { CellTootipMessagePipe } from './components/tooltip/tip-message.pipe';\r\nimport { DatagridFilterToolbarComponent } from './components/filter-toolbar/filter-toolbar.component';\r\nimport { HeaderStyleDirective } from './components/header/header-style.directive';\r\nimport { AutoHeightComponent } from './components/auto-height/auto-height.component';\r\nimport { RowIsSelectedPipe } from './utils/row-is-selected.pipe';\r\nimport { RowIsCheckedPipe } from './utils/row-is-checked.pipe';\r\nimport { DatagridErrorHandler } from './datagrid-error-handler';\r\nimport { AutoHeightDirective } from './components/auto-height/auto-height.directive';\r\nimport { ValidatorMessagerService } from './services/validator-messager.service';\r\nimport { PagerSelectedListComponent } from './components/pager/selected-list/selected-list.component';\r\nimport { SelectedItemPipe } from './components/pager/selected-item.pipe';\r\nimport { DatagridRowDblClickDirective } from './components/body/datagrid-row-dblclick.directive';\r\nimport { FooterCellStylerDirective } from './components/footer/datagrid-footer-cell.styler.directive';\r\nimport { DragColumnDirective } from './components/header/datagrid-drag-column.directive';\r\nimport { DropColumnDirective } from './components/header/datagrid-drop-column.directive';\r\nimport { SmartFilterToolbarComponent } from './components/filter-toolbar/smart-filter-toolbar.component';\r\n\r\nimport { FarrisContextMenuModule } from '@farris/ui-context-menu';\r\nimport { GroupFooterRowStylerDirective } from './components/body/datagrid-group-footer-styler.directive';\r\nimport { CellIsReadonlyPipe } from './utils/cell-readonly.pipe';\r\n\r\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: ScrollbarConfigInterface = {\r\n    minScrollbarLength: 20\r\n};\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        HttpClientModule,\r\n        PaginationModule,\r\n        NgxPaginationModule,\r\n        ScrollbarModule,\r\n        LocaleModule.forRoot(),\r\n        DataColumnModule.forRoot(),\r\n        NotifyModule.forRoot(),\r\n        SimpleFilterModule,\r\n        DatagridSmartFilterModule,\r\n        FarrisContextMenuModule\r\n    ],\r\n    declarations: [\r\n        SafePipe,\r\n        FormatCellDataPipe,\r\n        RowDataIdPipe,\r\n        FormatGroupRowPipe,\r\n        ShowRequiredStarPipe,\r\n        FieldValuePipe,\r\n        ReplaceXPipe,\r\n        DisableRowPipe,\r\n        SelectedRowPipe,\r\n        CellIsReadonlyPipe,\r\n        CellTootipMessagePipe,\r\n        DatagridComponent,\r\n        DatagridHeaderComponent,\r\n        DatagridFooterComponent,\r\n        DatagridResizeColumnDirective,\r\n        DatagridCellEditableDirective,\r\n        DatagridCellComponent,\r\n        DatagridRowDirective,\r\n        DatagridBodyComponent,\r\n        DatagridPagerComponent,\r\n        DatagridCellEditorDirective,\r\n        DatagridColumnDirective,\r\n        DatagridRowsComponent,\r\n        FixedLeftRowsComponent,\r\n        DatagridRowHoverDirective,\r\n        DataGridLoadingComponent,\r\n        DatagridCheckboxComponent,\r\n        DatagridHeaderCheckboxComponent,\r\n        GridCellEditorDirective,\r\n        TextboxEditorComponent,\r\n        DatagridGroupRowDirective,\r\n        DatagridCellTooltipDirective,\r\n        DatagridFilterToolbarComponent,\r\n        HeaderStyleDirective,\r\n        AutoHeightDirective,\r\n        AutoHeightComponent,\r\n        RowIsSelectedPipe,\r\n        RowIsCheckedPipe,\r\n        SelectedItemPipe,\r\n        PagerSelectedListComponent,\r\n        DatagridRowDblClickDirective,\r\n        FooterCellStylerDirective,\r\n        DragColumnDirective,\r\n        DropColumnDirective,\r\n        FilterRowCreateDirective,\r\n        SmartFilterToolbarComponent,\r\n        GroupFooterRowStylerDirective,\r\n    ],\r\n    providers: [\r\n        { provide: ErrorHandler, useClass: DatagridErrorHandler },\r\n        {\r\n            provide: SCROLLBAR_CONFIG,\r\n            useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG\r\n        },\r\n        ValidatorMessagerService\r\n    ],\r\n    exports: [\r\n        SafePipe,\r\n        DatagridComponent,\r\n        DatagridHeaderComponent,\r\n        DatagridColumnDirective,\r\n        DatagridCellEditorDirective,\r\n        DatagridCellEditableDirective,\r\n        DatagridRowHoverDirective,\r\n        DatagridResizeColumnDirective,\r\n        TextboxEditorComponent,\r\n        FormatCellDataPipe,\r\n        RowDataIdPipe,\r\n        ReplaceXPipe,\r\n        FieldValuePipe,\r\n        CellTootipMessagePipe,\r\n        ShowRequiredStarPipe,\r\n        DatagridCellTooltipDirective,\r\n        DatagridFilterToolbarComponent,\r\n        RowIsSelectedPipe,\r\n        RowIsCheckedPipe,\r\n        DatagridRowDblClickDirective,\r\n        FooterCellStylerDirective,\r\n        DragColumnDirective,\r\n        DropColumnDirective,\r\n        FilterRowCreateDirective,\r\n        SmartFilterToolbarComponent,\r\n        DatagridSmartFilterModule,\r\n        GroupFooterRowStylerDirective,\r\n        FarrisContextMenuModule,\r\n        CellIsReadonlyPipe\r\n    ],\r\n    entryComponents: [\r\n        // FilterPanelComponent\r\n    ]\r\n})\r\nexport class DatagridModule {\r\n    static forRoot(editors?: Provider[]): ModuleWithProviders {\r\n        return {\r\n            ngModule: DatagridModule,\r\n            providers: editors || []\r\n        };\r\n    }\r\n}\r\n"]}