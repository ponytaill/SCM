{"version":3,"sources":["ng://@farris/ui-forms/lib/radio/radio-group.component.ts","ng://@farris/ui-forms/lib/radio/radio.component.ts","ng://@farris/ui-forms/lib/radio/radio-button.component.ts","ng://@farris/ui-forms/lib/radio/radiogroup.component.ts","ng://@farris/ui-forms/lib/checkbox/checkbox-group.component.ts","ng://@farris/ui-forms/lib/checkbox/checkbox.component.ts","ng://@farris/ui-forms/lib/checkbox/checkboxgroup.component.ts","ng://@farris/ui-forms/lib/textarea-autosize.directive.ts","ng://@farris/ui-forms/lib/textarea-wordcount.directive.ts","ng://@farris/ui-forms/lib/textarea-zoom.directive.ts","ng://@farris/ui-forms/lib/input-append.directive.ts","ng://@farris/ui-forms/lib/shortcut-tab.directive.ts","ng://@farris/ui-forms/lib/comments/get-data.interface.ts","ng://@farris/ui-forms/lib/comments/single-list.component.ts","ng://@farris/ui-forms/lib/textarea-comments.directive.ts","node_modules/tslib/tslib.es6.js","ng://@farris/ui-forms/lib/forms.module.ts"],"names":["RadioGroupComponent","prototype","ngOnInit","this","name","idSer","generate","replace","changeModel","value","model","modelChange","emit","controlChange","writeValue","registerOnChange","fn","registerOnTouched","controlTouch","Component","args","selector","template","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","IdService","Input","Output","EventEmitter","subscriber","RadioComponent","Object","defineProperty","hasParent","el","nativeElement","radioGroup","nyModel","changeModelHandler","label","element","parentElement","classList","contains","decorators","type","Optional","ElementRef","HostBinding","blockClass","RadioButtonComponent","isGroupModel","encapsulation","ViewEncapsulation","None","FarrisRadioGroupComponent","clickHandler","item","val","_getValue","changeValue","_getText","commonUtils","getValue","textField","valueField","exportAs","Injector","inject","data","get","CommonUtils","CheckboxGroupComponent","index","findIndex","ele","splice","push","join","CheckboxComponent","checkbox","_this","find","FarrisCheckboxGroupComponent","setCheckboxData","loadData","loadDataSubscription","subscribe","res","ngOnChanges","changes","ngOnDestroy","unsubscribe","arrValue","transformToArr","String","length","some","filter","n","transformToStr","checked","isStringValue","split","separator","allVals","map","r","forEach","tabIndex","TextareaAutoSizeDirective","init","enable","isFirstChange","sizeToFit","ngAfterViewInit","minHeight","textarea","getBoundingClientRect","height","document","ownerDocument","documentElement","ngControl","valueChanges","v","previousValue","onInput","onValueChange","overflowOffset","offsetTop","body","offsetParent","top","defaultView","pageYOffset","bottom","clientHeight","offsetHeight","isUserResized","offsetWidth","textareaStyle","getComputedStyle","topBorderWidth","Number","borderTopWidth","bottomBorderWidth","borderBottomWidth","borderAddOn","boxSizing","maxHeight","style","container","HTMLElement","containerHeight","h","scrollHeight","Directive","NgControl","HostListener","injector","TextareaWordcountDirective","initWordCount","useWordCount","control","e","updateWordsCount","destroy","ro","disconnect","unobserve","wordCountElement","remove","onlyShowInDialog","createWordCountElement","createWordCountID","tagName","id","max","maxLength","wordCountSPAN","render","createElement","className","setStyle","_a","width","parentWidth","right","ResizeObserver","entries","observer","_pw","contentRect","observe","after","currentLengthSPAN","appendChild","currentLengthElement","listen","countType","tip","innerText","title","localeSer","Renderer2","eventManager","EventManager","LocaleService","TextareaZoomDirective","useZoom","createZoomButton","onMouseEnter","onMouseLeave","onClick","altEnterHandler","zoomButtonElement","bindEventHandler","addEventListener","event","target","preventDefault","stopPropagation","createZoombarID","zoomSPAN","zoomTextarea","opts","dialogWidth","dialogHeight","showFontSize","inputType","saveSize","window","localStorage","key","messagerService","getKeyString","getItem","lastSetting","JSON","parse","fontSize","showText","readOnly","disabled","readonly","showOkButton","prompt2","enableWordCount","wordCountRef","setValue","fullscreen","MessagerService","InputAppendDirective","_enableAppend","appendWrapElement","createStruct","resetStruct","_appendType","removeClass","addClass","ev","inputAppendClickEvent","_inputAppendText","removeChild","appendTextElement","innerHTML","_disabled","disabledCls","elWrapElement","inputAppendControlType","wrapParent","parentNode","inputAppendText","enableAppend","buttonWrap","inputAppendType","buttonTextWrap","textParent","inputWrap","outerHTML","indexOf","inputGroupEl","querySelector","ngZone","runOutsideAngular","setTimeout","inputGroupEl2","ViewContainerRef","viewRef","NgZone","ShortCutTabKeyDirective","onTabKeydownHandler","currentTarget","allInputs","querySelectorAll","nextInputIndex","Array","from","nextInputTarget","focus","CommentsHttpToken","InjectionToken","SingleListComponent","$event","items","cdr","detectChanges","formatData","rowObj","formatter","onItemClick","itemClick","evnet","setActiveItem","activeIndex","ChangeDetectorRef","ViewChild","showButtons","buttons","maxItems","emptyDataMsg","TextareaCommentsDirective","listenAttributesChanged","useComments","createCommentsButton","hideListPanel","targetNode","MutationObserver","mutationsList","mutationsList_1","__values","o","m","Symbol","iterator","i","call","next","done","tslib_1.__values","mutationsList_1_1","mutation","attributeName","attributes","commentsBtnElement","createID","commentsBtn","icon","listPanelElRef","showListPanel","listPanelEl","left","append","singListCmf","cfr","resolveComponentFactory","singListRef","create","instance","text","mgrText","iconCls","handler","commentSer","showCommentManageDialog","console","log","_text","patchValue","location","changeDetectorRef","overlaySer","registerMouseEvent","destory","getCommonComments","resetPosition","panelHeight","innerHeight","removeStyle","ComponentFactoryResolver","OverLayHiddenService","FarrisFormsModule","NgModule","declarations","imports","CommonModule","FormsModule","MessagerModule","forRoot","FarrisCommonModule","LocaleModule","exports","entryComponents"],"mappings":"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","sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter, forwardRef, HostBinding } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\nimport { IdService } from '@farris/ui-common';\r\n@Component({\r\n    selector: 'farris-radio-group',\r\n    template: `\r\n    <div class=\"farris-radio-group btn-group\"\r\n    [class.farris-input-wrap]=\"type!=='button'\"\r\n    [class.btn-group-toggle]=\"type==='button'\"\r\n    [class.farris-checkradio-hor]=\"horizontal\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  `,\r\n    providers: [{\r\n        provide: NG_VALUE_ACCESSOR,\r\n        useExisting: forwardRef(() => RadioGroupComponent),\r\n        multi: true,\r\n    }],\r\n    styles: [`\r\n    `],\r\n})\r\nexport class RadioGroupComponent implements OnInit, ControlValueAccessor {\r\n    /* radio ç±»å */\r\n    @Input() type: string;\r\n\r\n    /* åå§å radio çå¼ */\r\n    @Input() model: any;\r\n\r\n    @Input() name: string;\r\n\r\n    @Input() horizontal: boolean;\r\n\r\n    @Output() modelChange = new EventEmitter<any>();\r\n\r\n    // tslint:disable-next-line:ban-types\r\n    subscriber: Function[] = [];\r\n\r\n    constructor(private idSer: IdService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.name = this.idSer.generate().replace(/-/g, '_');\r\n    }\r\n\r\n    changeModel(value: any) {\r\n        this.model = value;\r\n        this.modelChange.emit(this.model);\r\n        this.controlChange(value);\r\n    }\r\n\r\n    writeValue(value: any): void {\r\n        this.model = value;\r\n        this.changeModel(this.model);\r\n    }\r\n\r\n    registerOnChange(fn: Function): void {\r\n        this.controlChange = fn\r\n    }\r\n\r\n    registerOnTouched(fn: Function): void {\r\n        this.controlTouch = fn\r\n    }\r\n\r\n    private controlChange: Function = () => { }\r\n    private controlTouch: Function = () => { }\r\n\r\n}\r\n","import { Component, Input, Output, EventEmitter, forwardRef, Optional, ElementRef, HostBinding, ChangeDetectorRef, OnInit } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { RadioGroupComponent } from './radio-group.component';\r\n\r\n@Component({\r\n  selector: 'farris-radio',\r\n  templateUrl: './radio.component.html',\r\n  styleUrls: ['./radio.component.css'],\r\n  providers: [{\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => RadioComponent),\r\n    multi: true,\r\n  }]\r\n  // changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class RadioComponent implements ControlValueAccessor, OnInit {\r\n\r\n  /* radio åçname ç¨äºå¤ä¸ªradioåéä½¿ç¨ */\r\n  // get name() {\r\n  //   if (this.hasParent(this.el.nativeElement)) {\r\n  //     return this.radioGroup.name;\r\n  //   }\r\n  // }\r\n \r\n  /* radio å¼ */\r\n  @Input()\r\n  get model(): any {\r\n    if (this.hasParent(this.el.nativeElement)) {\r\n      return this.radioGroup.model;\r\n    }\r\n    return this.nyModel;\r\n  }\r\n\r\n  set model(model: any) {\r\n    this.nyModel = model;\r\n  }\r\n\r\n\r\n  @Input() id: string;\r\n\r\n  /* radio å¼ */\r\n  @Input() label: any = '';\r\n\r\n  /* ç¦ç¨ */\r\n  @Input() disabled: boolean;\r\n\r\n  nyModel: any;\r\n\r\n  name = '';\r\n\r\n  @Output() modelChange = new EventEmitter<any>();\r\n\r\n  @HostBinding('class.d-block') blockClass = true;\r\n\r\n  constructor(\r\n    @Optional() private radioGroup: RadioGroupComponent,\r\n    private el: ElementRef\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.name = this.radioGroup.name;\r\n  }\r\n\r\n  changeModelHandler() {\r\n    // ç¶åç´ è·ålabel  å­åç´ åä»ç¶åç´ è·åmodel\r\n    if (this.hasParent(this.el.nativeElement)) {\r\n      return this.radioGroup.changeModel(this.label);\r\n    }\r\n    this.model = this.label;\r\n    this.modelChange.emit(this.model);\r\n    this.controlChange(this.label);\r\n  }\r\n\r\n  /* æ¯å¦å­å¨ç¶åç´   å­å¨å³åéç»*/\r\n  hasParent(element: any) {\r\n    return element.parentElement.classList.contains('farris-radio-group');\r\n  }\r\n\r\n  writeValue(value: any): void {\r\n    this.model = value;\r\n  }\r\n\r\n  registerOnChange(fn: Function): void {\r\n    this.controlChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: Function): void {\r\n    this.controlTouch = fn;\r\n  }\r\n\r\n  private controlChange: Function = () => { };\r\n  private controlTouch: Function = () => { };\r\n\r\n}\r\n","import { Component, Input, Output, EventEmitter, forwardRef, Optional, ElementRef, ViewEncapsulation, OnInit } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { RadioGroupComponent } from './radio-group.component';\r\nimport { HostBinding } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'farris-radio-button',\r\n    template: `\r\n    <label [class]=\"'btn btn-'+type\" [class.active]=\"isGroupModel()\" [class.disabled]=\"disabled\">\r\n        <input class=\"custom-control-input\" [name]=\"name\" [value]=\"label\"\r\n        [ngModel]=\"model\" (ngModelChange)=\"changeModelHandler()\" type=\"radio\" [disabled]=\"disabled\">\r\n          <ng-content>\r\n          </ng-content>\r\n    </label>\r\n  `,\r\n    styles: [\r\n        `\r\n        .farris-radio-button>.btn{\r\n            margin-left:-1px\r\n          }\r\n          .farris-radio-button>.btn.active, .farris-radio-button>.btn:hover{\r\n            position: relative;\r\n          }\r\n      `\r\n    ],\r\n    providers: [{\r\n        provide: NG_VALUE_ACCESSOR,\r\n        useExisting: forwardRef(() => RadioButtonComponent),\r\n        multi: true,\r\n    }],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class RadioButtonComponent implements ControlValueAccessor, OnInit {\r\n\r\n    /* radio åçname ç¨äºå¤ä¸ªradioåéä½¿ç¨ */\r\n    // get name() {\r\n\r\n    // }\r\n    name = '';\r\n\r\n    /* æé®ç±»å */\r\n    @Input()\r\n    type = 'secondary';\r\n\r\n    /* radio å¼ */\r\n    @Input()\r\n    get model(): any {\r\n        if (this.hasParent(this.el.nativeElement)) {\r\n            return this.radioGroup.model;\r\n        }\r\n        return this.nyModel;\r\n    }\r\n\r\n    set model(model: any) {\r\n        this.nyModel = model;\r\n    }\r\n\r\n\r\n    @Input()\r\n    id: string;\r\n\r\n    /* radio å¼ */\r\n    @Input()\r\n    label: any = '';\r\n\r\n    /* ç¦ç¨ */\r\n    @Input()\r\n    disabled: boolean;\r\n\r\n    nyModel: any;\r\n\r\n    @Output()\r\n    modelChange = new EventEmitter<any>();\r\n\r\n\r\n    @HostBinding('class.farris-radio-button')\r\n    get farrisRadioButtonClass() { return true; }\r\n\r\n    constructor(\r\n        @Optional() public radioGroup: RadioGroupComponent,\r\n        private el: ElementRef\r\n    ) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.name = this.hasParent(this.el.nativeElement) ? this.radioGroup.name : '';\r\n    }\r\n\r\n    isGroupModel() {\r\n        return this.label === this.radioGroup.model;\r\n    }\r\n\r\n    changeModelHandler() {\r\n        // ç¶åç´ è·ålabel  å­åç´ åä»ç¶åç´ è·åmodel\r\n        if (this.hasParent(this.el.nativeElement)) {\r\n            return this.radioGroup.changeModel(this.label);\r\n        }\r\n        this.model = this.label;\r\n        this.modelChange.emit(this.model);\r\n        this.controlChange(this.label);\r\n    }\r\n\r\n    /* æ¯å¦å­å¨ç¶åç´   å­å¨å³åéç»*/\r\n    hasParent(element: any) {\r\n        return element.parentElement.classList.contains('farris-input-wrap') || element.parentElement.classList.contains('btn-group');\r\n    }\r\n\r\n    writeValue(value: any): void {\r\n        this.model = value;\r\n    }\r\n\r\n    registerOnChange(fn: Function): void {\r\n        this.controlChange = fn\r\n    }\r\n\r\n    registerOnTouched(fn: Function): void {\r\n        this.controlTouch = fn\r\n    }\r\n\r\n    private controlChange: Function = () => { }\r\n    private controlTouch: Function = () => { }\r\n\r\n}\r\n","import { Component, Input, forwardRef, OnInit, EventEmitter, Optional, Injector } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, RadioControlValueAccessor } from '@angular/forms';\r\nimport { IdService, CommonUtils } from '@farris/ui-common';\r\nimport { Radio } from './radio';\r\nimport { Output } from '@angular/core';\r\n@Component({\r\n    selector: 'farris-radiogroup',\r\n    templateUrl: './radiogroup.component.html',\r\n    providers: [{\r\n        provide: NG_VALUE_ACCESSOR,\r\n        useExisting: forwardRef(() => FarrisRadioGroupComponent),\r\n        multi: true,\r\n    }],\r\n    exportAs: 'FarrisRadioGroupComponent'\r\n})\r\nexport class FarrisRadioGroupComponent implements ControlValueAccessor, OnInit {\r\n    @Input('tab-index') tabIndex: number;\r\n    /* radio æ°ç» */\r\n    @Input() data: Radio[] = [];\r\n\r\n    /* radio ç±»å   åçæèæé®ç±»å*/\r\n    @Input() type: string;\r\n\r\n    /* nameæ è¯ */\r\n    @Input() name: string;\r\n\r\n    /* æ°´å¹³æå */\r\n    @Input() horizontal: boolean;\r\n\r\n    /* ç¦ç¨ */\r\n    @Input() disabled: boolean;\r\n\r\n    /* radio å¼ */\r\n    @Input() value: any;\r\n    @Input() textField = 'name';\r\n    @Input() valueField = 'value';\r\n    /* ç¹å»äºä»¶ */\r\n    @Output() changeValue = new EventEmitter<any>();\r\n    private commonUtils: CommonUtils;\r\n    constructor(private idSer: IdService, @Optional() private inject: Injector) {\r\n        if (this.inject) {\r\n            this.commonUtils = this.inject.get(CommonUtils);\r\n        }\r\n    }\r\n\r\n\r\n    ngOnInit() {\r\n        this.name = this.idSer.generate().replace(/-/g, '_');\r\n    }\r\n\r\n    clickHandler(item: any) {\r\n        let val = this._getValue(item);\r\n        if(this.value == val) return;\r\n        // æ´æ¹controlçå¼\r\n        this.value = val;\r\n        this.controlChange(this.value);\r\n        this.controlTouch(this.value);\r\n        this.changeValue.emit(this.value);\r\n    }\r\n\r\n    _getText(item) {\r\n        if (item) {\r\n            if (this.commonUtils && this.commonUtils.getValue) {\r\n                return this.commonUtils.getValue(this.textField, item);\r\n            } else {\r\n                return item[this.textField];\r\n            }\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    _getValue(item) {\r\n        if (item) {\r\n            if (this.commonUtils && this.commonUtils.getValue) {\r\n                return this.commonUtils.getValue(this.valueField, item);\r\n            } else {\r\n                return item[this.valueField];\r\n            }\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n\r\n    writeValue(value: any): void {\r\n        this.value = value;\r\n    }\r\n\r\n    registerOnChange(fn: () => void): void {\r\n        this.controlChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: () => void): void {\r\n        this.controlTouch = fn;\r\n    }\r\n\r\n    private controlChange: (value: any) => void = () => { };\r\n    private controlTouch: (value: any) => void = () => { };\r\n\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, forwardRef } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\nimport { IdService } from '@farris/ui-common';\r\n@Component({\r\n    selector: 'farris-checkbox-group',\r\n    template: `\r\n    <div class=\"farris-input-wrap\" [class.farris-checkradio-hor]=\"horizontal\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  `,\r\n    providers: [{\r\n        provide: NG_VALUE_ACCESSOR,\r\n        useExisting: forwardRef(() => CheckboxGroupComponent),\r\n        multi: true,\r\n    }],\r\n    styles: [],\r\n})\r\nexport class CheckboxGroupComponent implements OnInit, ControlValueAccessor {\r\n\r\n    /* åå§å checkbox çå¼ */\r\n    @Input()\r\n    model = [];\r\n\r\n    /* è®¾ç½®é»è®¤nameå¼ */\r\n    @Input()\r\n    name: string;\r\n\r\n    /* æ§ä»¶æ°´å¹³æå */\r\n    @Input()\r\n    horizontal: boolean;\r\n\r\n    /*  */\r\n    @Output()\r\n    modelChange = new EventEmitter<any>();\r\n\r\n    constructor(private idSer: IdService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.name = this.idSer.generate();\r\n    }\r\n\r\n    changeModel(value: any) {\r\n        const index = this.model.findIndex(ele => {\r\n            return ele === value;\r\n        });\r\n        // å¦æå·²ç»éä¸­  åè®¾ç½®ä¸ºä¸éä¸­\r\n        if (index > -1) {\r\n            this.model.splice(index, 1);\r\n            return this.modelChange.emit(this.model);\r\n        }\r\n        // å¦ææ²¡æéä¸­  è®¾ç½®ä¸ºéä¸­\r\n        this.model.push(value);\r\n        // controlçå¼è®¾ç½®ä¸ºéå·åéçå­ç¬¦ä¸²  ä¾¿äºå­å¨åä¼ é\r\n        this.controlChange(this.model.join());\r\n        this.modelChange.emit(this.model);\r\n    }\r\n    writeValue(value: any): void {\r\n        this.model = value\r\n        this.changeModel(this.model)\r\n    }\r\n\r\n    registerOnChange(fn: Function): void {\r\n        this.controlChange = fn\r\n    }\r\n\r\n    registerOnTouched(fn: Function): void {\r\n        this.controlTouch = fn\r\n    }\r\n\r\n    private controlChange: Function = () => { }\r\n    private controlTouch: Function = () => { }\r\n\r\n}\r\n","import { Component, OnInit, Input, ElementRef, forwardRef, Output, EventEmitter } from '@angular/core';\r\nimport { CheckboxGroupComponent } from './checkbox-group.component';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\n@Component({\r\n  selector: 'farris-checkbox',\r\n  templateUrl: './checkbox.component.html',\r\n  providers: [{\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => CheckboxComponent),\r\n    multi: true,\r\n  }],\r\n  styles: ['./checkbox.component.css']\r\n})\r\nexport class CheckboxComponent implements OnInit, ControlValueAccessor {\r\n\r\n   /* radio åçname ç¨äºå¤ä¸ªradioåéä½¿ç¨ */\r\n   get name() {\r\n    if (this.hasParent(this.el.nativeElement)) {\r\n      return this.checkbox.name;\r\n    }\r\n    return '';\r\n  }\r\n\r\n  /* model */\r\n  @Input()\r\n  get model() {\r\n    if (this.hasParent(this.el.nativeElement)) {\r\n      return this.checkbox.model.find(ele => {\r\n        return ele === this.label;\r\n      });\r\n    }\r\n    return this.nyModel;\r\n  }\r\n\r\n  set model(model: any) {\r\n    this.nyModel = model;\r\n  }\r\n\r\n  /* checkboxå¼ */\r\n  @Input()\r\n  label: any;\r\n\r\n  /* ç¦ç¨ */\r\n  @Input()\r\n  disabled: boolean;\r\n\r\n  @Output()\r\n  modelChange = new EventEmitter<any>();\r\n  nyModel: any;\r\n  constructor(\r\n    private checkbox: CheckboxGroupComponent,\r\n    private el: ElementRef) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  /* å¼ä¼ é */\r\n  changeModelHandler() {\r\n    // ç¶åç´ è·ålabel  å­åç´ åä»ç¶åç´ è·åmodel\r\n    if (this.hasParent(this.el.nativeElement)) {\r\n      return this.checkbox.changeModel(this.label);\r\n    }\r\n    this.model = this.label;\r\n    this.modelChange.emit(this.model);\r\n    this.controlChange(this.label);\r\n  }\r\n\r\n\r\n  /* æ¯å¦å­å¨ç¶åç´   å­å¨å³åéç»*/\r\n  hasParent(element: any) {\r\n    return element.parentElement.classList.contains('farris-input-wrap');\r\n  }\r\n\r\n  writeValue(value: any): void {\r\n    this.model = value;\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.controlChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    this.controlTouch = fn;\r\n  }\r\n  private controlChange: Function = () => { }\r\n  private controlTouch: Function = () => { }\r\n\r\n}\r\n","import { OnDestroy, SimpleChanges, OnChanges, Optional, Injector } from '@angular/core';\r\n/*\r\n * @Author: è¡çæ´(Yuyang)\r\n * @Date: 2019-08-29\r\n * @LastEditors:  è¡çæ´(Yuyang)\r\n * @LastEditTime: 2019-08-29\r\n * @QQ: 664927877\r\n * @Version: v0.0.8\r\n */\r\nimport { Component, Input, forwardRef, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\nimport { IdService, CommonUtils } from '@farris/ui-common';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, Subscription } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'farris-checkboxgroup',\r\n    templateUrl: './checkboxgroup.component.html',\r\n    providers: [{\r\n        provide: NG_VALUE_ACCESSOR,\r\n        useExisting: forwardRef(() => FarrisCheckboxGroupComponent),\r\n        multi: true,\r\n    }],\r\n    exportAs: 'FarrisCheckboxGroupComponent'\r\n})\r\nexport class FarrisCheckboxGroupComponent implements ControlValueAccessor, OnInit, OnDestroy, OnChanges {\r\n\r\n    @Input('tab-index') tabIndex = 0;\r\n\r\n    /* radio æ°ç» */\r\n    @Input() data: any[] = [];\r\n\r\n    /* checkbox ç±»å   åçæèæé®ç±»å*/\r\n    @Input() type: string;\r\n\r\n    /* å¤éæ¡name */\r\n    @Input() name: string;\r\n\r\n    /* æ¯å¦æ°´å¹³åå¸ */\r\n    @Input() horizontal: boolean;\r\n\r\n    /* åéç¬¦ é»è®¤éå·*/\r\n    @Input() separator = ',';\r\n\r\n    /* ç¦ç¨ */\r\n    @Input() disable: boolean;\r\n\r\n    /* å¤éæ¡ç»çå¼ */\r\n    @Input() value: any;\r\n\r\n    /* å¼ç±»åæ¯å¦æ¯string */\r\n    @Input() isStringValue = true;\r\n\r\n    @Input() textField = 'name';\r\n    @Input() valueField = 'value';\r\n\r\n    /** å è½½æ°æ®äºä»¶ */\r\n    @Input() loadData: (emptyData?: any[]) => Observable<any>;\r\n    loadDataSubscription: Subscription;\r\n\r\n    @Output() changeValue = new EventEmitter<any>();\r\n\r\n    /* checkboxèµå¼äºä»¶ */\r\n    @Output() setCheckboxData = new EventEmitter<any>();\r\n\r\n    private commonUtils: CommonUtils;\r\n\r\n    constructor(private idSer: IdService, @Optional() private inject: Injector) {\r\n        if (this.inject) {\r\n            this.commonUtils = this.inject.get(CommonUtils);\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        // åå§åname\r\n        this.name = this.idSer.generate().replace(/-/g, '_');\r\n\r\n        this.setCheckboxData.emit(this);\r\n        // todo åå¼å¯ä»¥å®ç°promise\r\n        if (this.loadData) {\r\n            this.loadDataSubscription = this.loadData().subscribe(res => this.data = res.data);\r\n        }\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.loadDataSubscription) {\r\n            this.loadDataSubscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    _getText(item) {\r\n        if (item) {\r\n            if (this.commonUtils && this.commonUtils.getValue) {\r\n                return this.commonUtils.getValue(this.textField, item);\r\n            } else {\r\n                return item[this.textField];\r\n            }\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    _getValue(item) {\r\n        if (item) {\r\n            if (this.commonUtils && this.commonUtils.getValue) {\r\n                return this.commonUtils.getValue(this.valueField, item);\r\n            } else {\r\n                return item[this.valueField];\r\n            }\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    /* éä¸­inputå¼ */\r\n    clickHandler(item: any, index: number) {\r\n        let arrValue = this.transformToArr(this.value) || [];\r\n\r\n        const val = String(this._getValue(item));\r\n        if (!arrValue || !arrValue.length) {\r\n            arrValue.push(val);\r\n        } else {\r\n            if (arrValue.some(item => item == val)) {\r\n                arrValue = arrValue.filter(n => n !== val);\r\n            } else {\r\n                arrValue.push(val);\r\n            }\r\n        }\r\n\r\n        // æ´æ°valueå¼\r\n        this.value = this.transformToStr(arrValue);\r\n\r\n        // ä¼ å¼formcontrol\r\n        this.controlChange(this.value);\r\n        this.controlTouch(this.value);\r\n        this.changeValue.emit(this.value);\r\n    }\r\n\r\n    /* è¢«éä¸­ */\r\n    checked(item: any) {\r\n        const val = String(this._getValue(item));\r\n        const checkedValue = this.transformToArr(this.value);\r\n        // å¤å¼\r\n        return checkedValue.some(item => item == val);\r\n    }\r\n\r\n    /* å¼å°æ°ç»å¼çè½¬æ¢ */\r\n    transformToArr(value: any): string[] {\r\n        if (!value) {\r\n            return [];\r\n        }\r\n        if (!this.isStringValue) {\r\n            return value;\r\n        }\r\n\r\n        return value.split(this.separator);\r\n    }\r\n\r\n    /* å¼å°å­ç¬¦ä¸²å¼çè½¬æ¢ */\r\n    transformToStr(value: Array<string>) {\r\n\r\n        const allVals = this.data.map(n => this._getValue(n));\r\n        const r = [];\r\n        allVals.forEach(n => {\r\n            if (value.some(item => item == n)) {\r\n                r.push(n);\r\n            }\r\n        });\r\n\r\n        if (!this.isStringValue) {\r\n            return r;\r\n        }\r\n        return r.join(this.separator);\r\n    }\r\n\r\n\r\n    writeValue(value: any): void {\r\n        this.value = value;\r\n    }\r\n\r\n    /* changeæä½å¼åå  æ¹æ³éå*/\r\n    registerOnChange(fn: () => void): void {\r\n        this.controlChange = fn;\r\n    }\r\n\r\n    /* blurå¼åå  æ¹æ³éå*/\r\n    registerOnTouched(fn: () => void): void {\r\n        this.controlTouch = fn;\r\n    }\r\n\r\n    private controlChange: (value: any) => void = () => { };\r\n    private controlTouch: (value: any) => void = () => { };\r\n\r\n}\r\n","import { Directive, Input, Injector, OnInit, ElementRef, HostListener, AfterViewInit, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\n\r\n@Directive({\r\n    selector: '[auto-size]',\r\n})\r\nexport class TextareaAutoSizeDirective implements OnInit, AfterViewInit, OnChanges{\r\n    @Input('auto-size') enable = true;\r\n    @Input() maxHeight: number;\r\n\r\n    private previousValue = null;\r\n    private isUserResized = false;\r\n\r\n    private textarea;\r\n    private document;\r\n    private documentElement;\r\n    private minHeight;\r\n\r\n    constructor(private el: ElementRef, private ngControl: NgControl, private injector: Injector) {\r\n        this.textarea = this.el.nativeElement;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.init();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.enable && !changes.enable.isFirstChange()) {\r\n            this.sizeToFit();\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.minHeight = this.textarea.getBoundingClientRect().height;\r\n    }\r\n\r\n    private init() {\r\n        if (this.enable) {\r\n            this.document = this.textarea.ownerDocument;\r\n            this.documentElement = this.document.documentElement;\r\n            if (this.textarea) {\r\n                if (this.textarea.value) {\r\n                    this.sizeToFit();\r\n                }\r\n            }\r\n\r\n            if (this.ngControl) {\r\n                this.ngControl.valueChanges.subscribe(v => {\r\n                    if (v !== this.previousValue) {\r\n                        this.sizeToFit();\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    @HostListener('input')\r\n    onInput() {\r\n        this.sizeToFit();\r\n    }\r\n\r\n    @HostListener('change')\r\n    onValueChange() {\r\n        this.sizeToFit();\r\n    }\r\n\r\n\r\n    private overflowOffset() {\r\n        let offsetTop = 0;\r\n        let el = this.textarea;\r\n\r\n        while (el !== document.body && el !== null) {\r\n            offsetTop += el.offsetTop || 0;\r\n            el = el.offsetParent;\r\n        }\r\n\r\n        const top = offsetTop - document.defaultView.pageYOffset;\r\n        const bottom = this.documentElement.clientHeight - (top + this.textarea.offsetHeight);\r\n        return { top, bottom };\r\n    }\r\n\r\n    private sizeToFit() {\r\n        if (!this.enable) {\r\n            return;\r\n        }\r\n\r\n        const textarea = this.textarea;\r\n        const viewportMarginBottom = 100;\r\n        if (this.isUserResized) { return; }\r\n        if (this.textarea.value === this.previousValue) { return; }\r\n        if (this.textarea.offsetWidth <= 0 && this.textarea.offsetHeight <= 0) { return; }\r\n\r\n        // const { top, bottom } = this.overflowOffset();\r\n        // if (top < 0 || bottom < 0) {\r\n        //     return;\r\n        // }\r\n\r\n        const textareaStyle = getComputedStyle(textarea);\r\n\r\n        const topBorderWidth = Number(textareaStyle.borderTopWidth.replace(/px/, ''));\r\n        const bottomBorderWidth = Number(textareaStyle.borderBottomWidth.replace(/px/, ''));\r\n\r\n        const isBorderBox = textareaStyle.boxSizing === 'border-box';\r\n        const borderAddOn = isBorderBox ? topBorderWidth + bottomBorderWidth : 0;\r\n\r\n        // const maxHeight = Number(textareaStyle.height.replace(/px/, '')) + bottom;\r\n        // const adjustedViewportMarginBottom = bottom < viewportMarginBottom ? bottom : viewportMarginBottom;\r\n        // textarea.style.maxHeight = `${maxHeight - adjustedViewportMarginBottom}px`;\r\n\r\n        if (this.maxHeight) {\r\n            textarea.style.maxHeight = `${this.maxHeight}px`;\r\n        }\r\n\r\n        const container = textarea.parentElement;\r\n        if (container instanceof HTMLElement) {\r\n            const containerHeight = container.style.height;\r\n            container.style.height = getComputedStyle(container).height;\r\n            textarea.style.height = 'auto';\r\n\r\n            let h = textarea.scrollHeight + borderAddOn;\r\n            if (this.minHeight > h) {\r\n                h = this.minHeight;\r\n            }\r\n            textarea.style.height = `${h}px`;\r\n            container.style.height = containerHeight;\r\n        }\r\n\r\n        this.previousValue = textarea.value;\r\n    }\r\n}\r\n","import { Directive, ElementRef, Injector, Input, Renderer2,\r\n    OnInit, AfterViewInit, OnDestroy, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { EventManager } from '@angular/platform-browser';\r\nimport ResizeObserver from 'resize-observer-polyfill';\r\n@Directive({\r\n    selector: '[word-count]',\r\n    exportAs: 'WordCountRef'\r\n})\r\nexport class TextareaWordcountDirective implements OnInit, AfterViewInit, OnDestroy, OnChanges {\r\n    @Input('word-count') useWordCount = true;\r\n    /**\r\n     * ç»è®¡å­æ°çæ¹å¼ï¼ surplus å©ä½å¯è¾å¥å­æ°; length: å½åå·²è¾å¥å­æ°ï¼\r\n     *\r\n     * é»è®¤ä¸º surplus\r\n     */\r\n    @Input() countType: 'surplus' | 'length' = 'surplus';\r\n\r\n    @Input() onlyShowInDialog = false;\r\n\r\n    wordCountElement = null;\r\n    // å½åå­æ°\r\n    private currentLengthElement = null;\r\n    private eventManager: EventManager;\r\n    private ngControl: NgControl;\r\n    private onInput = null;\r\n    private localeSer: LocaleService;\r\n    private ro: ResizeObserver = null;\r\n    constructor(private el: ElementRef, private render: Renderer2, private injector: Injector) {\r\n        this.eventManager = this.injector.get(EventManager);\r\n        this.localeSer = this.injector.get(LocaleService);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.ngControl = this.injector.get(NgControl, null);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.initWordCount();\r\n        if (this.ngControl && this.useWordCount) {\r\n            this.ngControl.control.valueChanges.subscribe((e) => {\r\n                this.updateWordsCount();\r\n            });\r\n        }\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n\r\n        if (changes.useWordCount && !changes.useWordCount.isFirstChange()) {\r\n            if (this.useWordCount) {\r\n                this.initWordCount();\r\n            } else {\r\n                this.destroy();\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy();\r\n\r\n        if(this.ro) {\r\n            this.ro.disconnect();\r\n            this.ro.unobserve(this.el.nativeElement.parentElement);\r\n        }\r\n    }\r\n\r\n\r\n    private destroy() {\r\n        if (this.onInput) {\r\n            this.onInput();\r\n        }\r\n\r\n        if (this.wordCountElement) {\r\n            this.wordCountElement.remove();\r\n        }\r\n    }\r\n\r\n    initWordCount() {\r\n        if (this.useWordCount && !this.onlyShowInDialog) {\r\n            this.createWordCountElement();\r\n        }\r\n    }\r\n\r\n    private createWordCountID() {\r\n        const tagName = this.el.nativeElement.tagName;\r\n        if (this.ngControl) {\r\n            const ctrlName = this.ngControl.name;\r\n            return `${tagName}_WORDCOUNT_${ctrlName}`;\r\n        } else {\r\n            if (this.el.nativeElement.id) {\r\n                return `${tagName}_WORDCOUNT_${this.el.nativeElement.id}`;\r\n            }\r\n        }\r\n        return '';\r\n    }\r\n\r\n    private createWordCountElement() {\r\n        const max = this.el.nativeElement.maxLength;\r\n        if (!max || max < 0) {\r\n            // console.info('æªè®¾ç½®æå¤§å­ç¬¦æ°ï¼è®¡æ°åè½å¤±æã');\r\n            return;\r\n        }\r\n\r\n        const wordCountSPAN = this.render.createElement('span');\r\n        wordCountSPAN.className = 'textarea-wordcount';\r\n\r\n        const id = this.createWordCountID();\r\n        if (id) {\r\n            wordCountSPAN.id = id;\r\n        }\r\n\r\n        this.render.setStyle(wordCountSPAN, 'position', 'absolute');\r\n        this.render.setStyle(wordCountSPAN, 'bottom', '0px');\r\n\r\n        const { width, right } = this.el.nativeElement.getBoundingClientRect();\r\n        const { width: parentWidth } = this.el.nativeElement.parentElement.getBoundingClientRect();\r\n        if (parentWidth !== width) {\r\n            this.render.setStyle(wordCountSPAN, 'right', `${parentWidth - width + 10}px`);\r\n\r\n            this.ro = new ResizeObserver((entries, observer) => {\r\n                if (entries && entries[0]) {\r\n                    const _pw = entries[0].contentRect.width;\r\n\r\n                    this.render.setStyle(wordCountSPAN, 'right', `${_pw - width + 10}px`);\r\n                }\r\n            });\r\n            this.ro.observe(this.el.nativeElement.parentElement);\r\n\r\n        } else {\r\n            this.render.setStyle(wordCountSPAN, 'right', '10px');\r\n        }\r\n        this.render.setStyle(wordCountSPAN, 'cursor', 'pointer');\r\n\r\n        this.el.nativeElement.after(wordCountSPAN);\r\n        this.wordCountElement = wordCountSPAN;\r\n\r\n        const currentLengthSPAN = this.render.createElement('span');\r\n        wordCountSPAN.appendChild(currentLengthSPAN);\r\n        this.currentLengthElement = currentLengthSPAN;\r\n        currentLengthSPAN.after( ` / ${max}` );\r\n\r\n        this.updateWordsCount();\r\n        this.onInput = this.render.listen(this.el.nativeElement, 'input', () => {\r\n            // value.replace(/\\n|\\r/gi, '') // ç§»é¤æ¢è¡ç¬¦\r\n            this.updateWordsCount();\r\n        });\r\n    }\r\n\r\n    updateWordsCount() {\r\n        if (!this.useWordCount || !this.currentLengthElement) {\r\n            return;\r\n        }\r\n        const max = this.el.nativeElement.maxLength;\r\n        const val = this.countType === 'surplus' ? max - this.el.nativeElement.value.length : this.el.nativeElement.value.length;\r\n        const tip = 'messager.prompt.tips.' + this.countType;\r\n\r\n        this.currentLengthElement.innerText = val;\r\n        this.wordCountElement.title = this.localeSer.getValue(tip).replace('{0}', val);\r\n    }\r\n}\r\n","import { TextareaWordcountDirective } from './textarea-wordcount.directive';\r\nimport { NgControl } from '@angular/forms';\r\nimport { Directive, ElementRef, Renderer2, Injector, OnInit, Input,\r\n            AfterViewInit, OnDestroy, OnChanges, SimpleChanges, Optional } from '@angular/core';\r\nimport { EventManager } from '@angular/platform-browser';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { LocaleService } from '@farris/ui-locale';\r\n@Directive({\r\n    selector: '[textarea-zoom]',\r\n})\r\nexport class TextareaZoomDirective implements OnInit, AfterViewInit, OnDestroy, OnChanges {\r\n    @Input('textarea-zoom') useZoom = true;\r\n    @Input() dialogWidth = 500;\r\n    @Input() dialogHeight = 400;\r\n    @Input() fullscreen = false;\r\n    @Input() title = '';\r\n    @Input() value = '';\r\n\r\n    onMouseEnter = null;\r\n    onMouseLeave = null;\r\n    onClick = null;\r\n    altEnterHandler = null;\r\n\r\n    zoomButtonElement = null;\r\n    private messagerService: MessagerService;\r\n    private eventManager: EventManager;\r\n    private ngControl: NgControl;\r\n    private localeSer: LocaleService\r\n    constructor(private el: ElementRef, private render: Renderer2, private injector: Injector,\r\n                @Optional() private wordCountRef: TextareaWordcountDirective ) {\r\n        this.messagerService = this.injector.get(MessagerService);\r\n        this.eventManager = this.injector.get(EventManager);\r\n        this.localeSer = this.injector.get(LocaleService, null);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.ngControl = this.injector.get(NgControl, null);\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.useZoom && !changes.useZoom.isFirstChange()) {\r\n            if (this.useZoom) {\r\n                this.createZoomButton();\r\n            } else {\r\n                this.destroy();\r\n            }\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        if (this.useZoom) {\r\n            this.createZoomButton();\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy();\r\n    }\r\n\r\n    private destroy() {\r\n        if (this.onMouseEnter) {\r\n            this.onMouseEnter();\r\n        }\r\n        if (this.onMouseLeave) {\r\n            this.onMouseLeave();\r\n        }\r\n\r\n        if (this.onClick) {\r\n            this.onClick();\r\n        }\r\n        if (this.altEnterHandler) {\r\n            this.altEnterHandler();\r\n        }\r\n\r\n        if (this.zoomButtonElement) {\r\n            this.zoomButtonElement.remove();\r\n        }\r\n    }\r\n\r\n    private bindEventHandler() {\r\n        this.altEnterHandler = this.eventManager.addEventListener(this.el.nativeElement, 'keydown.alt.enter',\r\n        (event: KeyboardEvent) => {\r\n            const target = (event.target as any);\r\n            const val = target.value + '\\n';\r\n            target.value = val;\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            return false;\r\n        });\r\n    }\r\n\r\n    private createZoombarID() {\r\n        const tagName = this.el.nativeElement.tagName;\r\n        if (this.ngControl) {\r\n            const ctrlName = this.ngControl.name;\r\n            return `${tagName}_ZOOMBAR_${ctrlName}`;\r\n        } else {\r\n            if (this.el.nativeElement.id) {\r\n                return `${tagName}_ZOOMBAR_${this.el.nativeElement.id}`;\r\n            }\r\n        }\r\n        return '';\r\n    }\r\n\r\n    private createZoomButton() {\r\n        const zoomSPAN = this.render.createElement('span');\r\n        zoomSPAN.className = 'f-icon modal_maximize textarea-zoom';\r\n        zoomSPAN.title =  this.localeSer.getValue('text.zoom') || 'ç¹å»åå¼¹åºè¿è¡ç¼è¾';\r\n\r\n        \r\n\r\n        const id = this.createZoombarID();\r\n        if (id) {\r\n            zoomSPAN.id = id;\r\n        }\r\n\r\n        this.render.setStyle(zoomSPAN, 'position', 'absolute');\r\n        this.render.setStyle(zoomSPAN, 'top', '2px');\r\n\r\n        const { width } = this.el.nativeElement.getBoundingClientRect();\r\n        const { width: parentWidth } = this.el.nativeElement.parentElement.getBoundingClientRect();\r\n        if (parentWidth !== width) {\r\n            this.render.setStyle(zoomSPAN, 'left', `${width - 18}px`);\r\n        } else {\r\n            this.render.setStyle(zoomSPAN, 'right', '2px');\r\n        }\r\n        this.render.setStyle(zoomSPAN, 'cursor', 'pointer');\r\n\r\n        this.el.nativeElement.after(zoomSPAN);\r\n\r\n        this.zoomButtonElement = zoomSPAN;\r\n\r\n        this.onMouseEnter = this.render.listen(zoomSPAN, 'mouseenter', () => {\r\n            this.render.setStyle(zoomSPAN, 'fontSize', '22px');\r\n        });\r\n        this.onMouseLeave = this.render.listen(zoomSPAN, 'mouseleave', () => {\r\n            this.render.setStyle(zoomSPAN, 'fontSize', '1rem');\r\n        });\r\n\r\n        this.onClick = this.render.listen(zoomSPAN, 'click', () => {\r\n            this.zoomTextarea();\r\n        });\r\n    }\r\n\r\n    private zoomTextarea() {\r\n        const opts: any = {\r\n            width: this.dialogWidth || 500,\r\n            height: this.dialogHeight || 400,\r\n            showFontSize: true,\r\n            inputType: 'textarea',\r\n            saveSize: true    // å¯ç¨ä¸ªæ§åå­å¨ï¼localStorage\r\n        };\r\n\r\n        if (window.localStorage) {\r\n            const key = this.messagerService.getKeyString();\r\n            const val = localStorage.getItem(key);\r\n            if (val) {\r\n                const lastSetting = JSON.parse(val);\r\n                opts.fontSize = lastSetting.fontSize || 18;\r\n                opts.width = lastSetting.width || opts.width;\r\n                opts.height = lastSetting.height || opts.height;\r\n            }\r\n        }\r\n\r\n        const tagName = this.el.nativeElement.tagName;\r\n        let showText = this.el.nativeElement.value;\r\n        if (this.ngControl) {\r\n            showText = this.ngControl.value;\r\n        } else {\r\n            showText = this.el.nativeElement.value;\r\n        }\r\n\r\n        showText = this.value || showText;\r\n\r\n\r\n        if (tagName === 'FARRIS-TEXT' || this.el.nativeElement.readOnly || this.el.nativeElement.disabled) {\r\n            opts.readonly = true;\r\n            opts.showOkButton = false;\r\n            this.messagerService.prompt2(this.title, showText, opts).subscribe();\r\n        } else {\r\n            opts.maxLength = this.el.nativeElement.maxLength;\r\n            opts.enableWordCount = this.wordCountRef ? this.wordCountRef.useWordCount : false;\r\n            opts.countType = this.wordCountRef ? this.wordCountRef.countType : 'length';\r\n            this.messagerService.prompt2(this.title, showText, opts).subscribe(v => {\r\n                if (typeof v === 'boolean' && !v) {\r\n                    return;\r\n                } else {\r\n                    this.ngControl.control.setValue(v);\r\n                    if (this.wordCountRef) {\r\n                        this.wordCountRef.updateWordsCount();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n}\r\n","import {\r\n    Directive, ElementRef, Renderer2, Injector, OnInit, Input,\r\n    AfterViewInit, OnDestroy, OnChanges, SimpleChanges, Output, ViewContainerRef, TemplateRef, NgZone\r\n} from '@angular/core';\r\nimport { EventEmitter } from '@angular/core';\r\n\r\n\r\n@Directive({\r\n    selector: '[input-append]',\r\n})\r\nexport class InputAppendDirective implements OnInit, AfterViewInit, OnDestroy {\r\n    private _enableAppend = true;\r\n    // ç¸å½äºå¯ç¨ç¦ç¨æ­¤åè½\r\n    @Input('input-append')\r\n    set enableAppend(value: string | boolean) {\r\n        if (value === '' || value) {\r\n            this._enableAppend = true;\r\n            // éè¦\r\n            if (!this.appendWrapElement) {\r\n                this.createStruct();\r\n            }\r\n        } else {\r\n            this._enableAppend = false;\r\n            if (this.appendWrapElement) {\r\n                this.resetStruct();\r\n            }\r\n        }\r\n    }\r\n    get enableAppend() {\r\n        return this._enableAppend;\r\n    }\r\n    // è¿½å å°åªä¸ªç±»åä¸ TextBoxãMultiTextBoxã StaticText\r\n    @Input() inputAppendControlType = 'InputGroup';\r\n    // æ ¹æ®ç±»åä¸ä¸æ ·ï¼å¨æ§ä»¶å¤äºç¦ç¨ãåªè¯»æ¶ï¼å³å®é¢è²æ¯å¦å¯ç¨\r\n    // æä¸¤ç§ï¼æé® button ææ¬ text\r\n    private _appendType = 'button';\r\n    @Input()\r\n    set inputAppendType(value: string) {\r\n        if (value) {\r\n            if (['button', 'text'].findIndex(item => item == value) < 0) {\r\n                // ç±»åå¨æ¯æèå´å\r\n                value = 'button';\r\n            }\r\n            if (value != this._appendType) {\r\n                if (this.appendWrapElement) {\r\n                    // ç§»é¤åæ¥ï¼è¿½å æ°ç\r\n                    this.render.removeClass(this.appendWrapElement, 'input-append-' + this._appendType);\r\n                    this.render.addClass(this.appendWrapElement, 'input-append-' + value);\r\n                    if (this._appendType == 'button') {\r\n                        // åæ¥æ¯æé®\r\n                        if (this.clickHandler) {\r\n                            this.clickHandler();\r\n                            this.clickHandler = null;\r\n                        }\r\n                    } else {\r\n                        this.clickHandler = this.render.listen(this.appendWrapElement, 'click', (ev) => {\r\n                            this.inputAppendClickEvent.emit(ev);\r\n                        });\r\n                    }\r\n                }\r\n                this._appendType = value;\r\n            }\r\n        }\r\n\r\n    }\r\n    get inputAppendType() {\r\n        return this._appendType;\r\n    }\r\n    // è¿½å çææ¬\r\n    private _inputAppendText = '';\r\n    @Input()\r\n    set inputAppendText(value: string) {\r\n        if (value != this._inputAppendText) {\r\n            this._inputAppendText = value;\r\n            if (this.appendWrapElement && this._enableAppend) {\r\n                this.render.removeChild(this.appendWrapElement, this.appendTextElement);\r\n                this.appendTextElement.innerHTML = value;\r\n                this.render.appendChild(this.appendWrapElement, this.appendTextElement);\r\n            } else {\r\n                this.createStruct();\r\n            }\r\n        }\r\n    }\r\n    get inputAppendText() {\r\n        return this._inputAppendText;\r\n    }\r\n    // æ¨¡æ¿\r\n    // @Input() inputAppendTmpl: TemplateRef<any>;\r\n    private _disabled = false;\r\n    @Input()\r\n    set inputAppendDisabled(value) {\r\n        if (value != this._disabled) {\r\n            this._disabled = value;\r\n            if (this.appendWrapElement) {\r\n                value && this.render.addClass(this.appendWrapElement, this.disabledCls);\r\n                !value && this.render.removeClass(this.appendWrapElement, this.disabledCls);\r\n            }\r\n        }\r\n    }\r\n    get inputAppendDisabled() {\r\n        return this._disabled;\r\n    }\r\n\r\n    /*\r\n    * ææ¬ç¹å»äºä»¶\r\n    */\r\n    @Output() inputAppendClickEvent = new EventEmitter();\r\n    // æ è®°nativeçå¤å±\r\n    private elWrapElement = null;\r\n    // æ è®°åç´ \r\n    private appendWrapElement = null;\r\n    // ææ¶ä¸ç¨\r\n    private appendTextElement = null;\r\n    private clickHandler = null;\r\n    private disabledCls = 'f-state-disabled';\r\n    private ngZone: NgZone = null;\r\n    // private ngControl: NgControl;\r\n    constructor(private viewRef: ViewContainerRef, private el: ElementRef, private render: Renderer2, private injector: Injector) {\r\n        this.ngZone = this.injector.get(NgZone);\r\n    }\r\n\r\n    ngOnInit() {\r\n        //this.ngControl = this.injector.get(NgControl, null);\r\n    }\r\n\r\n\r\n    ngAfterViewInit() {\r\n        this.createStruct();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        //this.resetStruct();\r\n        if (this.clickHandler) {\r\n            this.clickHandler();\r\n            this.clickHandler = null;\r\n        }\r\n        if (this.appendWrapElement) {\r\n            this.appendWrapElement.remove();\r\n            this.appendWrapElement = null;\r\n        }\r\n        if (this.elWrapElement) {\r\n            this.elWrapElement.remove();\r\n            this.elWrapElement = null;\r\n        }\r\n    }\r\n    /**\r\n     * éç½®\r\n     */\r\n    private resetStruct() {\r\n        if (this.clickHandler) {\r\n            this.clickHandler();\r\n            this.clickHandler = null;\r\n        }\r\n        // åç±»åç§»é¤ä¸åæ°å¢å çç»æææ ·å¼\r\n        switch (this.inputAppendControlType) {\r\n            case 'StaticText':\r\n                this.render.removeClass(this.el.nativeElement, 'f-cmp-static-text-input-append');\r\n                break;\r\n            case 'TextBox':\r\n            case 'MultiTextBox':\r\n                if (this.elWrapElement) {\r\n                    let wrapParent = this.render.parentNode(this.elWrapElement);\r\n                    this.render.appendChild(wrapParent, this.el.nativeElement);\r\n                    this.elWrapElement.remove();\r\n                    this.elWrapElement = null;\r\n                }\r\n                break;\r\n        }\r\n        if (this.appendWrapElement) {\r\n            this.appendWrapElement.remove();\r\n            this.appendWrapElement = null;\r\n        }\r\n    }\r\n    /**\r\n     * åå»º\r\n     */\r\n    private createStruct() {\r\n        if (!this.inputAppendText || !this.enableAppend || this.appendWrapElement) {\r\n            return;\r\n        }\r\n        const buttonWrap = this.render.createElement('div');\r\n        buttonWrap.className = 'input-group-append input-append-wrapper';\r\n        buttonWrap.className += ' input-append-' + this.inputAppendType;\r\n        if (this._disabled) {\r\n            buttonWrap.className += ' ' + this.disabledCls;\r\n        }\r\n        const buttonTextWrap = this.render.createElement('div');\r\n        buttonTextWrap.className = 'input-group-text';\r\n        buttonTextWrap.innerHTML = this.inputAppendText;\r\n        this.appendTextElement = buttonTextWrap;\r\n        this.appendWrapElement = buttonWrap;\r\n        this.render.appendChild(buttonWrap, buttonTextWrap);\r\n        switch (this.inputAppendControlType) {\r\n            case 'StaticText':\r\n                // æ­¤æ¶è¿æ²¡æçæåé¨çæ ·å¼\r\n                // let textareaEl = this.el.nativeElement.querySelector('.f-form-control-textarea');\r\n                this.render.addClass(this.el.nativeElement, 'f-cmp-static-text-input-append' + (this._disabled ? ' ' + this.disabledCls : ''));\r\n                this.render.appendChild(this.el.nativeElement, buttonWrap);\r\n                break;\r\n            case 'TextBox':\r\n            case 'MultiTextBox':\r\n                let textParent = this.render.parentNode(this.el.nativeElement);\r\n                const inputWrap = this.render.createElement('div');\r\n                inputWrap.className = 'f-cmp-text-input-append' + (this._disabled ? ' ' + this.disabledCls : '');\r\n                if (this.el.nativeElement.outerHTML.indexOf('textarea') > -1) {\r\n                    inputWrap.className = 'f-cmp-textarea-input-append' + (this._disabled ? ' ' + this.disabledCls : '');\r\n                }\r\n                this.elWrapElement = inputWrap;\r\n                this.render.appendChild(inputWrap, this.el.nativeElement);\r\n                this.render.appendChild(inputWrap, buttonWrap);\r\n                this.render.appendChild(textParent, inputWrap);\r\n                break;\r\n            default:\r\n                // å­å¨ç±»ä¼¼ä¸æè¿æ ·çæ§ä»¶ï¼åé¨è°ç¨input-groupç»æè¿æ²¡æåå§å\r\n                let inputGroupEl = this.el.nativeElement.querySelector('.input-group');\r\n                if (inputGroupEl) {\r\n                    this.render.appendChild(inputGroupEl, buttonWrap);\r\n                } else {\r\n                    if (this.ngZone) {\r\n                        this.ngZone.runOutsideAngular(() => {\r\n                            setTimeout(() => {\r\n                                let inputGroupEl2 = this.el.nativeElement.querySelector('.input-group');\r\n                                this.render.appendChild(inputGroupEl2, buttonWrap);\r\n                            });\r\n                        });\r\n                    }\r\n                }\r\n\r\n        }\r\n\r\n        if (this.inputAppendType == 'button') {\r\n            this.clickHandler = this.render.listen(this.appendWrapElement, 'click', (ev) => {\r\n                this.inputAppendClickEvent.emit(ev);\r\n            });\r\n        }\r\n    }\r\n}\r\n","import { EventManager } from '@angular/platform-browser';\r\nimport { Directive, ElementRef, Injector, OnInit, AfterViewInit } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: 'shortcut-tab',\r\n})\r\nexport class ShortCutTabKeyDirective implements OnInit, AfterViewInit {\r\n\r\n    constructor(public el: ElementRef, public injector: Injector, private eventManager: EventManager) {}\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.eventManager.addEventListener(this.el.nativeElement, 'keydown',  (e: KeyboardEvent) => {\r\n            e.stopPropagation();\r\n            if (e.key === 'Tab') {\r\n                this.onTabKeydownHandler(e.target);\r\n            }\r\n        });\r\n    }\r\n\r\n    private onTabKeydownHandler(currentTarget) {\r\n        let allInputs = this.el.nativeElement.querySelectorAll('input,textarea');\r\n        allInputs = Array.from(allInputs);\r\n        const currentInputIndex = allInputs.findIndex(n => n === currentTarget);\r\n        let nextInputIndex = currentInputIndex + 1;\r\n        if (nextInputIndex >= allInputs.length) {\r\n            nextInputIndex = 0;\r\n        }\r\n        const nextInputTarget = allInputs[nextInputIndex];\r\n        if (nextInputTarget) {\r\n            setTimeout(() => {\r\n                nextInputTarget.focus();\r\n            });\r\n        }\r\n    }\r\n}\r\n","import { InjectionToken } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\n\r\nexport interface ICommentsHttpService {\r\n    getCommonComments(filter: any): Observable<any>;\r\n    showCommentManageDialog(filter: any): Observable<any>;\r\n}\r\nexport const CommentsHttpToken = new InjectionToken<ICommentsHttpService>('Common comments HTTP service');","import { ChangeDetectorRef, Component, ElementRef, EventEmitter, HostBinding, HostListener, Injector, Input, OnInit, Output, ViewChild } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'single-list',\r\n    templateUrl: './single-list.component.html'\r\n})\r\n\r\nexport class SingleListComponent implements OnInit {\r\n\r\n    @Input() showButtons = true;\r\n    @Input() buttons = [];\r\n    @Input() data: Array<any> = [];\r\n    @Input() textField: string = '';\r\n    @Input() formatter: (rowObj: any) => string;\r\n    @Input() maxItems = 10;\r\n    @Input() emptyDataMsg = 'ææ æ°æ®';\r\n\r\n    @Output() itemClick = new EventEmitter();\r\n\r\n    @ViewChild('itemsContainer') itemsContainer: ElementRef<any>;\r\n\r\n    activeIndex = -1;\r\n\r\n    constructor(private injector: Injector, private cdr: ChangeDetectorRef) { }\r\n\r\n    @HostListener('mousedown', ['$event'])\r\n    onClick($event: MouseEvent) {\r\n        $event.stopPropagation();\r\n    }\r\n\r\n    ngOnInit() { }\r\n\r\n    loadData(items: any) {\r\n        this.data = items;\r\n\r\n        if (!this.cdr['destroyed']) {\r\n            this.cdr.detectChanges();\r\n        }\r\n    }\r\n\r\n    formatData(rowObj: any) {\r\n        return this.formatter(rowObj);\r\n    }\r\n\r\n    onItemClick($event, item) {\r\n        this.itemClick.emit({data: item, evnet: $event});\r\n    }\r\n\r\n    setActiveItem(index: number) {\r\n        this.activeIndex = index;\r\n        if (!this.cdr['destroyed']) {\r\n            this.cdr.detectChanges();\r\n        }\r\n    }\r\n}","import { AfterViewInit, ComponentFactoryResolver, ComponentRef, Directive, ElementRef, Injector, Input, OnChanges, OnDestroy, OnInit, Renderer2, SimpleChanges } from \"@angular/core\";\r\nimport { NgControl } from \"@angular/forms\";\r\nimport { EventManager } from \"@angular/platform-browser\";\r\nimport { OverLayHiddenService } from \"@farris/ui-common\";\r\nimport { LocaleService } from \"@farris/ui-locale\";\r\nimport { CommentsHttpToken, ICommentsHttpService } from \"./comments/get-data.interface\";\r\nimport { SingleListComponent } from \"./comments/single-list.component\";\r\n\r\n\r\n@Directive({\r\n    selector: '[common-comments]',\r\n})\r\nexport class TextareaCommentsDirective implements OnInit, AfterViewInit, OnChanges, OnDestroy {\r\n\r\n    @Input('common-comments') useComments = true;\r\n    @Input() maxHeight = 300;\r\n    @Input() title = '';\r\n    @Input() mgrText = '';\r\n\r\n    private commentSer: ICommentsHttpService;\r\n    private eventManager: EventManager;\r\n    private ngControl: NgControl;\r\n    commentsBtnElement = null;\r\n    singListRef: ComponentRef<SingleListComponent> = null;\r\n    listPanelElRef = null;\r\n    private overlaySer: OverLayHiddenService;\r\n\r\n    private observer: MutationObserver;\r\n\r\n    constructor(private injector: Injector, private el: ElementRef, private render: Renderer2, \r\n        private localeSer: LocaleService, private cfr: ComponentFactoryResolver) {\r\n        this.commentSer = this.injector.get(CommentsHttpToken, null);\r\n        this.overlaySer = this.injector.get(OverLayHiddenService, null);\r\n        if (!this.overlaySer) {\r\n            this.overlaySer = new OverLayHiddenService();\r\n        }\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.ngControl = this.injector.get(NgControl, null);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.init();\r\n        this.listenAttributesChanged();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.useComments && !changes.useComments.isFirstChange()) {\r\n            this.init();\r\n        }\r\n    }\r\n\r\n    private init() {\r\n        const readonly = this.el.nativeElement.readOnly;\r\n        const disabled = this.el.nativeElement.disabled;\r\n        if (this.useComments && (!readonly && !disabled)) {\r\n            this.createCommentsButton();\r\n        } else {\r\n            this.destroy();\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.destroy();\r\n        this.hideListPanel();\r\n        // åæ­¢è§å¯å±æ§åå\r\n        this.observer.disconnect();\r\n        this.observer = null;\r\n    }\r\n\r\n    listenAttributesChanged() {\r\n        // éæ©éè¦è§å¯åå¨çèç¹\r\n        const targetNode = this.el.nativeElement;\r\n\r\n        // è§å¯å¨çéç½®ï¼éè¦è§å¯ä»ä¹åå¨ï¼\r\n        const config = { attributes: true };\r\n\r\n        // å½è§å¯å°åå¨æ¶æ§è¡çåè°å½æ°\r\n        const callback = (mutationsList, observer) => {\r\n            // Use traditional 'for loops' for IE 11\r\n            for(let mutation of mutationsList) {\r\n                if (mutation.type === 'attributes' && (mutation.attributeName === 'readonly' || mutation.attributeName === 'disabled')) {\r\n                    this.init();\r\n                }\r\n            }\r\n        };\r\n\r\n        // åå»ºä¸ä¸ªè§å¯å¨å®ä¾å¹¶ä¼ å¥åè°å½æ°\r\n        this.observer = new MutationObserver(callback);\r\n\r\n        // ä»¥ä¸è¿°éç½®å¼å§è§å¯ç®æ èç¹\r\n        this.observer.observe(targetNode, config);\r\n    }\r\n\r\n\r\n    destroy() {\r\n        if (this.commentsBtnElement) {\r\n            this.commentsBtnElement.remove();\r\n        }\r\n    }\r\n\r\n    private createID() {\r\n        const tagName = this.el.nativeElement.tagName;\r\n        if (this.ngControl) {\r\n            const ctrlName = this.ngControl.name;\r\n            return `${tagName}_COMMENTS_${ctrlName}`;\r\n        } else {\r\n            if (this.el.nativeElement.id) {\r\n                return `${tagName}_COMMENTS_${this.el.nativeElement.id}`;\r\n            }\r\n        }\r\n        return '';\r\n    }\r\n\r\n    private createCommentsButton() {\r\n        const commentsBtn = this.render.createElement('span');\r\n        commentsBtn.className = 'dropdown-toggle';\r\n        commentsBtn.title = this.title ? this.title : (this.localeSer.getValue('text.comments.title') || 'å¸¸ç¨æè§');\r\n        const id = this.createID();\r\n        if (id) {\r\n            commentsBtn.id = id;\r\n        }\r\n\r\n        this.render.setStyle(commentsBtn, 'position', 'absolute');\r\n        this.render.setStyle(commentsBtn, 'left', '3px');\r\n        this.render.setStyle(commentsBtn, 'bottom', '0px');\r\n        this.render.setStyle(commentsBtn, 'cursor', 'pointer');\r\n\r\n        const icon = this.render.createElement('span');\r\n        this.render.appendChild(commentsBtn, icon);\r\n\r\n        icon.className = 'f-icon f-icon-message';\r\n        this.render.setStyle(icon, 'position', 'relative');\r\n        // this.render.setStyle(icon, 'margin-right', '3px');\r\n        this.render.setStyle(icon, 'top', '1px');\r\n        this.render.setStyle(icon, 'font-size', '13px');\r\n\r\n        this.el.nativeElement.after(commentsBtn);\r\n        this.commentsBtnElement = commentsBtn;\r\n\r\n        this.render.listen(commentsBtn, 'click', (e: MouseEvent) => {\r\n            e.stopPropagation();\r\n            if (!this.listPanelElRef) {\r\n                this.showListPanel();\r\n            } else {\r\n                this.hideListPanel();\r\n            }\r\n        })\r\n    }\r\n\r\n    private showListPanel() {\r\n        const listPanelEl = this.render.createElement('div');\r\n        const { left, bottom } = this.commentsBtnElement.getBoundingClientRect();\r\n        this.render.setStyle(listPanelEl, 'width', '200px');\r\n        this.render.setStyle(listPanelEl, 'max-height', `${this.maxHeight}px`);\r\n        this.render.setStyle(listPanelEl, 'position', 'absolute');\r\n        this.render.setStyle(listPanelEl, 'left', `${left}px`);\r\n        this.render.setStyle(listPanelEl, 'top', '0px');\r\n        this.render.setStyle(listPanelEl, 'z-index', '9999999');\r\n        this.render.setStyle(listPanelEl, 'box-shadow', '0 2px 8px 0 #dedede');\r\n        this.render.setStyle(listPanelEl, 'border-radius', '6px');\r\n        this.render.setStyle(listPanelEl, 'background', 'white');\r\n        this.render.setStyle(listPanelEl, 'visibility', 'hidden');\r\n        document.body.append(listPanelEl);\r\n\r\n        this.listPanelElRef = listPanelEl;\r\n\r\n        const singListCmf = this.cfr.resolveComponentFactory(SingleListComponent);\r\n        this.singListRef = singListCmf.create(this.injector);\r\n\r\n        this.singListRef.instance.showButtons = true;\r\n        this.singListRef.instance.emptyDataMsg = this.localeSer.getValue('text.comments.empty');\r\n        this.singListRef.instance.buttons = [\r\n            { \r\n                text: this.mgrText ? this.mgrText : this.localeSer.getValue('text.comments.manager'), \r\n                iconCls: 'f-icon f-icon-home-setup', handler: () => {\r\n                    if (this.commentSer) {\r\n                        this.hideListPanel();\r\n                        this.commentSer.showCommentManageDialog({type: 'forms'}).subscribe((e) => {\r\n                            console.log(e);\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        ];\r\n        this.singListRef.instance.textField = 'message';\r\n        this.singListRef.instance.maxItems = 999999;\r\n\r\n        this.singListRef.instance.itemClick.subscribe((e) => {\r\n            const val = e.data['message'];\r\n            let _text = this.el.nativeElement.value || '';\r\n            _text += val;\r\n            if (this.ngControl) {\r\n                this.ngControl.control.patchValue(_text);\r\n            } else {\r\n                this.el.nativeElement.value = _text;\r\n            }\r\n\r\n            this.hideListPanel();\r\n        })\r\n\r\n        listPanelEl.appendChild(this.singListRef.location.nativeElement);\r\n        this.singListRef.changeDetectorRef.detectChanges();\r\n\r\n        this.loadData(this.singListRef);\r\n\r\n\r\n        this.overlaySer.registerMouseEvent(listPanelEl, (e) => {\r\n            if (this.listPanelElRef.contains(e.target) || this.commentsBtnElement === e.target || this.commentsBtnElement.contains(e.target)) {\r\n                return;\r\n            }\r\n            this.hideListPanel();\r\n        });\r\n    }\r\n\r\n    hideListPanel() {\r\n        if (this.singListRef) {\r\n            this.singListRef.destroy();\r\n            this.singListRef = null;\r\n        }\r\n\r\n        if (this.listPanelElRef) {\r\n            this.listPanelElRef.remove();\r\n            this.overlaySer.destory(this.listPanelElRef);\r\n            this.listPanelElRef = null;\r\n        }\r\n    }\r\n\r\n    private loadData(singListRef: ComponentRef<SingleListComponent>) {\r\n        if (this.commentSer) {\r\n            this.commentSer.getCommonComments({type: 'forms'}).subscribe((data) => {\r\n                singListRef.instance.loadData(data);\r\n                setTimeout(() => {\r\n                    this.resetPosition();\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    private resetPosition() {\r\n        const { top, bottom, left } = this.commentsBtnElement.getBoundingClientRect();\r\n        const panelHeight = this.listPanelElRef.offsetHeight;\r\n        if (window.innerHeight - bottom  > this.maxHeight || window.innerHeight - bottom > panelHeight) {\r\n            this.render.setStyle(this.listPanelElRef, 'top', `${bottom}px`);\r\n            this.render.removeStyle(this.listPanelElRef, 'visibility');\r\n            return;\r\n        } else {\r\n            if (top > this.maxHeight || top > panelHeight) {\r\n                this.render.setStyle(this.listPanelElRef, 'top', `${top - panelHeight}px`);\r\n            } else {\r\n                this.render.setStyle(this.listPanelElRef, 'top', '0px');\r\n                if (left > 200) {\r\n                    this.render.setStyle(this.listPanelElRef, 'left', `${ left - 200 }px` );\r\n                }\r\n            }\r\n            this.render.removeStyle(this.listPanelElRef, 'visibility');\r\n        }\r\n    }\r\n}","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IdService, FarrisCommonModule } from '@farris/ui-common';\r\n\r\nimport { RadioComponent } from './radio/radio.component';\r\nimport { RadioButtonComponent } from './radio/radio-button.component';\r\nimport { RadioGroupComponent } from './radio/radio-group.component';\r\nimport { FarrisRadioGroupComponent } from './radio/radiogroup.component';\r\nimport { CheckboxComponent } from './checkbox/checkbox.component';\r\nimport { CheckboxGroupComponent } from './checkbox/checkbox-group.component';\r\nimport { FarrisCheckboxGroupComponent } from './checkbox/checkboxgroup.component';\r\nimport { TextareaAutoSizeDirective } from './textarea-autosize.directive';\r\nimport { TextareaZoomDirective } from './textarea-zoom.directive';\r\nimport {InputAppendDirective} from './input-append.directive';\r\nimport { MessagerModule } from '@farris/ui-messager';\r\nimport { ShortCutTabKeyDirective } from './shortcut-tab.directive';\r\nimport { TextareaWordcountDirective } from './textarea-wordcount.directive';\r\nimport { LocaleModule } from '@farris/ui-locale';\r\nimport { TextareaCommentsDirective } from './textarea-comments.directive';\r\nimport { SingleListComponent } from './comments/single-list.component';\r\n@NgModule({\r\n    declarations: [\r\n        RadioComponent,\r\n        RadioGroupComponent,\r\n        CheckboxComponent,\r\n        CheckboxGroupComponent,\r\n        RadioButtonComponent,\r\n        FarrisRadioGroupComponent,\r\n        FarrisCheckboxGroupComponent,\r\n        TextareaAutoSizeDirective,\r\n        TextareaZoomDirective,\r\n        ShortCutTabKeyDirective,\r\n        TextareaWordcountDirective,\r\n        InputAppendDirective,\r\n        TextareaCommentsDirective,\r\n        SingleListComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        MessagerModule.forRoot(),\r\n        FarrisCommonModule.forRoot(),\r\n        LocaleModule,\r\n    ],\r\n    exports: [\r\n        RadioComponent,\r\n        RadioGroupComponent,\r\n        CheckboxComponent,\r\n        CheckboxGroupComponent,\r\n        RadioButtonComponent,\r\n        FarrisRadioGroupComponent,\r\n        FarrisCheckboxGroupComponent,\r\n        TextareaAutoSizeDirective,\r\n        TextareaZoomDirective,\r\n        ShortCutTabKeyDirective,\r\n        TextareaWordcountDirective,\r\n        InputAppendDirective,\r\n        TextareaCommentsDirective\r\n    ],\r\n    entryComponents: [\r\n        SingleListComponent\r\n    ],\r\n    providers: [IdService],\r\n})\r\nexport class FarrisFormsModule { }\r\n"]}