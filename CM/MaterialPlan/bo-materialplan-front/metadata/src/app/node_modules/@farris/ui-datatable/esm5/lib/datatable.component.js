/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { InputGroupComponent } from '@farris/ui-input-group';
import { ChangeDetectorRef } from '@angular/core';
/*
 * @Author: 疯狂秀才(Lucas Huang)
 * @Date: 2019-07-10 11:44:49
 * @LastEditors: 疯狂秀才(Lucas Huang)
 * @LastEditTime: 2019-11-05 11:44:18
 * @QQ: 1055818239
 * @Version: v0.0.1
 */
import { Component, ViewChild, ElementRef, Input, ContentChild, TemplateRef, QueryList, ContentChildren, Output, EventEmitter, ViewEncapsulation, NgZone } from '@angular/core';
import { of } from 'rxjs';
import { PerfectScrollbarComponent } from '@farris/ui-perfect-scrollbar';
import { PaginationControlsComponent } from '@farris/ui-pagination';
import { IdService } from '@farris/ui-common';
import { deepCopy } from './datatable-column';
import { ColumnDirective } from './datatable-column.component';
import { DataTableService } from './datatable.service';
import { DataTableHeaderComponent } from './table/datatable-header.component';
var DataTableComponent = /** @class */ (function () {
    function DataTableComponent(dataService, idService, el, cd, ngZone) {
        var _this = this;
        this.dataService = dataService;
        this.idService = idService;
        this.el = el;
        this.cd = cd;
        this.ngZone = ngZone;
        this.searchButtonText = '<i class="f-icon f-icon-search"></i>';
        this.keydownEnterEdit = false;
        this.allColumnsTitle = '所有列';
        // 数据表高度
        // 是否填充
        this.fill = false;
        // 默认分页
        this.pagination = true;
        this.pagerOnServer = true;
        this.pageSize = 10;
        this.pageIndex = 1;
        this.showPageInfo = true;
        this.showPageNumber = true;
        this.showPageList = true;
        this.pagerViewMode = 'default';
        /**
         * 显示表头
         */
        this.showHeader = true;
        this._pageList = [10, 20, 30, 50, 100];
        this.total = 0;
        // 可筛选
        this.showFilterBar = false;
        // table  数据
        this._data = [];
        this.remote = 'client';
        /**
         * 启用远端排序
         */
        this.remoteSort = true;
        /**
         * 允许多列排序
         */
        this.multiSort = false;
        // 多选  单选
        this.singleSelect = true;
        this.idField = 'id';
        // 显示鼠标悬停高亮
        this.hover = true;
        // 分页事件
        this.pageChanged = new EventEmitter();
        this.pageSizeChanged = new EventEmitter();
        this.search = new EventEmitter();
        this.columnSorted = new EventEmitter();
        this.rowDblClick = new EventEmitter();
        this.selectedRow = new EventEmitter();
        // 兼容
        this.selectRows = new EventEmitter();
        this.unSelectRow = new EventEmitter();
        this.cellClick = new EventEmitter();
        this.clearSearchValue = new EventEmitter();
        this.checkAll = new EventEmitter();
        this.searchValueChange = new EventEmitter();
        this.sortChange = new EventEmitter();
        // 是否可拖拽  默认可以
        this.resizableColumns = true;
        /**
         * 针对同一条记录，单选时，多次单击后不取消选中。
         */
        this.keepSelect = true;
        // 是否有行模板
        this.hasRowTepml = false;
        // 设置拖拽停止器
        this.moveable = false;
        this.searchData = { field: '*', value: '' };
        // 事件订阅存储  便于销毁
        this.subscription = [];
        // 原数据
        this.filter = '';
        this.maxSize = 7;
        this.directionLinks = true;
        this.autoHide = false;
        this.responsive = true;
        this.paginationOptions = {
            id: 'Farris-DataTable-Pagination',
            itemsPerPage: this.pageSize,
            currentPage: this.pageIndex,
            pageList: this.pageList,
            totalItems: this.total,
            remote: this.pagerOnServer
        };
        this.labels = {
            previousLabel: ' ',
            nextLabel: ' ',
            screenReaderPaginationLabel: 'Pagination',
            screenReaderPageLabel: 'page',
            screenReaderCurrentLabel: "You're on page"
        };
        this._currentRowIndex = -1;
        this._currentRow = undefined;
        this.isCheckAll = (/**
         * @return {?}
         */
        function () {
            if (!_this.selections || !_this.selections.length) {
                return false;
            }
            if (!_this.data || !_this.data.length) {
                return false;
            }
            /** @type {?} */
            var total = 0;
            _this.selections.forEach((/**
             * @param {?} n
             * @return {?}
             */
            function (n) {
                if (_this.data.find((/**
                 * @param {?} d
                 * @return {?}
                 */
                function (d) { return d[_this.idField] === n[_this.idField]; }))) {
                    total += 1;
                }
            }));
            return _this.data.length === total;
        });
        this.mouseEnterOnPager = null;
        this.mouseLeaveOnPager = null;
        this.mouseWheelOnPager = null;
        this.trackByRows = (/**
         * @param {?} index
         * @param {?} row
         * @return {?}
         */
        function (index, row) {
            return row[_this.idField];
        });
        this.dataService.selectedRow.subscribe((/**
         * @param {?} e
         * @return {?}
         */
        function (e) {
            if (_this.singleSelect) {
                _this._currentRowIndex = e.rowIndex;
                _this._currentRow = e.rowData;
            }
            else {
                if (_this.selections) {
                    _this.dtHeader.isCheckAll = _this.isCheckAll();
                }
            }
        }));
        this.dataService.unSelectedRow.subscribe((/**
         * @param {?} e
         * @return {?}
         */
        function (e) {
            if (_this.singleSelect) {
                _this._currentRow = undefined;
                _this._currentRowIndex = -1;
            }
            else {
                _this.dtHeader.isCheckAll = false;
            }
        }));
    }
    Object.defineProperty(DataTableComponent.prototype, "pageList", {
        get: /**
         * @return {?}
         */
        function () {
            return this._pageList;
        },
        set: /**
         * @param {?} val
         * @return {?}
         */
        function (val) {
            this._pageList = val;
            if (this.pager) {
                this.pager.setPageList(val);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataTableComponent.prototype, "data", {
        get: /**
         * @return {?}
         */
        function () {
            return this._data;
        },
        set: /**
         * @param {?} data
         * @return {?}
         */
        function (data) {
            this._data = data;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataTableComponent.prototype, "selections", {
        get: /**
         * @return {?}
         */
        function () {
            return this.dtBody.selections;
        },
        set: /**
         * @param {?} v
         * @return {?}
         */
        function (v) {
            this.dtBody.selections = v ? v : {};
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataTableComponent.prototype, "currentRowIndex", {
        get: /**
         * @return {?}
         */
        function () {
            return this._currentRowIndex;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataTableComponent.prototype, "currentRow", {
        get: /**
         * @return {?}
         */
        function () {
            return this._currentRow;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    DataTableComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        setTimeout((/**
         * @return {?}
         */
        function () {
            _this.setBodyHeight(false);
            _this.ps = _this.perfectScrollbar.directiveRef.ps();
        }));
        if (!this.id) {
            this.id = "datatable_" + this.idService.generate();
        }
        this.paginationOptions.id = this.paginationOptions.id + this.id;
        this.copyData = deepCopy(this.data);
        if (!this.beforeSortColumn) {
            this.beforeSortColumn = (/**
             * @return {?}
             */
            function () { return of(true); });
        }
    };
    /**
     * @private
     * @param {?=} refresh
     * @return {?}
     */
    DataTableComponent.prototype.setBodyHeight = /**
     * @private
     * @param {?=} refresh
     * @return {?}
     */
    function (refresh) {
        if (refresh === void 0) { refresh = true; }
        /** @type {?} */
        var _tableheight = this.height;
        if (this.showFilterBar) {
            _tableheight = this.height - 46;
        }
        this.tableHeight = _tableheight;
        /** @type {?} */
        var _scorllableBodyHeight = 0;
        if (this.showHeader) {
            _scorllableBodyHeight = this.tableHeight - this.tableHeader.nativeElement.clientHeight;
        }
        if (this.pagination) {
            _scorllableBodyHeight = this.scorllableBodyHeight - 50;
        }
        this.scorllableBodyHeight = _scorllableBodyHeight;
        if (refresh && this.cd && !this.cd['destroyed']) {
            this.cd.detectChanges();
        }
    };
    /**
     * @return {?}
     */
    DataTableComponent.prototype.onClearSearchValue = /**
     * @return {?}
     */
    function () {
        this.searchData.value = '';
        this.cd.detectChanges();
        this.clearSearchValue.emit();
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    DataTableComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        if (changes.height && !changes.height.isFirstChange()) {
            this.setBodyHeight();
        }
        if (changes.total && !changes.total.isFirstChange()) {
            this.paginationOptions.totalItems = changes.total.currentValue;
        }
        if (changes.pageSize) {
            this.paginationOptions.itemsPerPage = changes.pageSize.currentValue;
        }
        if (changes.pageIndex && !changes.pageIndex.isFirstChange()) {
            this.paginationOptions.currentPage = changes.pageIndex.currentValue;
        }
        if (changes.data && !changes.data.isFirstChange()) {
            /** @type {?} */
            var rows = changes.data.currentValue;
            this.updateCheckboxState(rows);
            this.paginationOptions = tslib_1.__assign({}, this.paginationOptions);
            this.dataService.loadSuccess.next(changes.data.currentValue);
        }
    };
    /**
     * @return {?}
     */
    DataTableComponent.prototype.ngAfterContentInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        // 支持列组件写入
        if (!this.columns) {
            if (this.columnsRef && this.columnsRef.length) {
                this.columns = this.columnsRef.map((/**
                 * @param {?} col
                 * @return {?}
                 */
                function (col) {
                    return {
                        width: col.width,
                        title: col.title,
                        field: col.field,
                        align: col.align,
                        fixed: col.fixed,
                        className: col.className,
                        multipleFilter: col.multipleFilter,
                        filter: col.filter,
                        media: col.media,
                        sortable: col.sortable,
                        edit: col.edit
                    };
                }));
            }
        }
        setTimeout((/**
         * @return {?}
         */
        function () {
            if (_this.tablePager) {
                _this.tablePager.nativeElement.addEventListener('mouseenter', _this.mouseEnterOnPager = (/**
                 * @param {?} e
                 * @return {?}
                 */
                function (e) {
                    /** @type {?} */
                    var overflowX = 'auto';
                    if (e.target.className.indexOf('pg-pagelist') > -1 || e.target.closest('.pg-pagelist')) {
                        overflowX = "unset";
                        _this.pgScrollbar.nativeElement.scrollLeft = 0;
                    }
                    _this.pgScrollbar.nativeElement.style.overflowX = overflowX;
                }), true);
                _this.tablePager.nativeElement.addEventListener('mouseleave', _this.mouseLeaveOnPager = (/**
                 * @param {?} e
                 * @return {?}
                 */
                function (e) {
                    _this.pgScrollbar.nativeElement.style.overflowX = "hidden";
                }));
                _this.tablePager.nativeElement.addEventListener('wheel', _this.mouseWheelOnPager = (/**
                 * @param {?} e
                 * @return {?}
                 */
                function (e) {
                    /** @type {?} */
                    var box = _this.tablePager.nativeElement;
                    /** @type {?} */
                    var sw = _this.pgScrollbar.nativeElement.scrollWidth;
                    /** @type {?} */
                    var ow = box.offsetWidth;
                    if (sw > ow) {
                        /** @type {?} */
                        var right = sw - ow;
                        /** @type {?} */
                        var sl = Math.abs(_this.pgScrollbar.nativeElement.scrollLeft);
                        if (sl < right && e.deltaY > 0) {
                            e.preventDefault();
                            _this.pgScrollbar.nativeElement.scrollLeft = sl + 50;
                        }
                        if (sl > 0 && e.deltaY < 0) {
                            e.preventDefault();
                            _this.pgScrollbar.nativeElement.scrollLeft = sl - 50;
                        }
                    }
                }));
            }
        }));
    };
    /**
     * @return {?}
     */
    DataTableComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this.subscription.forEach((/**
         * @param {?} sub
         * @return {?}
         */
        function (sub) {
            sub.unsubscribe();
        }));
        this.subscription = [];
        this.pager = null;
        if (this.tablePager && this.tablePager.nativeElement) {
            this.tablePager.nativeElement.removeEventListener('mouseenter', this.mouseEnterOnPager);
            this.tablePager.nativeElement.removeEventListener('mouseleave', this.mouseLeaveOnPager);
            this.tablePager.nativeElement.removeEventListener('wheel', this.mouseWheelOnPager);
        }
    };
    /**
     * @return {?}
     */
    DataTableComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        // 获取表格容器  即表格
        this.datatableContainer = this.el.nativeElement.querySelector('.farris-datatable');
        // this.headerTr = this.tableHeader.nativeElement.querySelectorAll('tr');
    };
    /**
     * @param {?} rows
     * @return {?}
     */
    DataTableComponent.prototype.updateCheckboxState = /**
     * @param {?} rows
     * @return {?}
     */
    function (rows) {
        var _this = this;
        /** @type {?} */
        var updateCheckAllStatus = (/**
         * @param {?} f
         * @return {?}
         */
        function (f) {
            if (_this.showHeader && _this.dtHeader) {
                _this.dtHeader.isCheckAll = f;
            }
        });
        if (rows && rows.length) {
            if (this.selections) {
                /** @type {?} */
                var keys = Object.keys(this.dtBody._selections);
                if (keys.length) {
                    /** @type {?} */
                    var count_1 = 0;
                    /** @type {?} */
                    var ids_1 = rows.map((/**
                     * @param {?} row
                     * @return {?}
                     */
                    function (row) {
                        return row[_this.idField].toString();
                    }));
                    keys.forEach((/**
                     * @param {?} id
                     * @return {?}
                     */
                    function (id) {
                        if (ids_1.indexOf(id) > -1) {
                            count_1++;
                        }
                    }));
                    updateCheckAllStatus(ids_1.length === count_1);
                }
                else {
                    updateCheckAllStatus(false);
                }
            }
            else {
                updateCheckAllStatus(false);
            }
        }
        else {
            updateCheckAllStatus(false);
        }
    };
    /**
     * 获取表格容器的位置  距离左边视口和上边视口的距离  如果页面有滚动条  需要加上滚动条滚动的数值
     */
    /**
     * 获取表格容器的位置  距离左边视口和上边视口的距离  如果页面有滚动条  需要加上滚动条滚动的数值
     * @return {?}
     */
    DataTableComponent.prototype.getContainerOffset = /**
     * 获取表格容器的位置  距离左边视口和上边视口的距离  如果页面有滚动条  需要加上滚动条滚动的数值
     * @return {?}
     */
    function () {
        /** @type {?} */
        var rect = this.datatableContainer.getBoundingClientRect();
        return {
            left: rect.left + document.body.scrollLeft,
            top: rect.top + document.body.scrollTop,
            right: rect.right,
            bottom: rect.bottom,
        };
    };
    /**
     *  鼠标按下  开始记录拖拽线的位置  拖拽线到达当前鼠标位置
     * @param e 鼠标对象
     */
    /**
     *  鼠标按下  开始记录拖拽线的位置  拖拽线到达当前鼠标位置
     * @param {?} e 鼠标对象
     * @return {?}
     */
    DataTableComponent.prototype.beginDrag = /**
     *  鼠标按下  开始记录拖拽线的位置  拖拽线到达当前鼠标位置
     * @param {?} e 鼠标对象
     * @return {?}
     */
    function (e) {
        this.dragLineX = e.pageX;
        event.preventDefault();
    };
    /**
     * 鼠标移动 移动拖拽线位置变动
     * @param e 鼠标对象
     */
    /**
     * 鼠标移动 移动拖拽线位置变动
     * @param {?} e 鼠标对象
     * @return {?}
     */
    DataTableComponent.prototype.moveDrag = /**
     * 鼠标移动 移动拖拽线位置变动
     * @param {?} e 鼠标对象
     * @return {?}
     */
    function (e) {
        // 获取表格的左边距离
        /** @type {?} */
        var containerLeft = this.getContainerOffset().left;
        // 设置拖拽线的高度  即获取表头+表内容+表尾的高度  此表格结构包含了分页  因此要去掉分页的高度
        if (this.tablePager) {
            this.dragLine.nativeElement.style.height = this.datatableContainer.offsetHeight -
                this.tablePager.nativeElement.offsetHeight + 'px';
        }
        else {
            // const headerHeight = this.el.nativeElement.querySelector('.farris-table-header');
            // const bodyHeight = this.el.nativeElement.querySelector('.ps-content');
            this.dragLine.nativeElement.style.height = this.datatableContainer.offsetHeight + 'px';
        }
        // 设置拖拽线的高度 拖拽线相对于表格relative定位是absolute，因此是0
        this.dragLine.nativeElement.style.top = 0 + 'px';
        // 鼠标移动时，拖拽线相对于表格的位置
        this.dragLine.nativeElement.style.left = (e.pageX - containerLeft) + 'px';
        // 鼠标移动  设置拖拽线总是可见
        this.dragLine.nativeElement.style.display = 'block';
    };
    // 重新计算表格宽度
    /**
     * 鼠标抬起 重新计算单元格宽度
     * 鼠标对象
     */
    // 重新计算表格宽度
    /**
     * 鼠标抬起 重新计算单元格宽度
     * 鼠标对象
     * @param {?} e
     * @param {?} column
     * @return {?}
     */
    DataTableComponent.prototype.stopDrag = 
    // 重新计算表格宽度
    /**
     * 鼠标抬起 重新计算单元格宽度
     * 鼠标对象
     * @param {?} e
     * @param {?} column
     * @return {?}
     */
    function (e, column) {
        this.resizeColumn(e, column);
    };
    /**
     * @param {?} e
     * @param {?} column
     * @return {?}
     */
    DataTableComponent.prototype.resizeColumn = /**
     * @param {?} e
     * @param {?} column
     * @return {?}
     */
    function (e, column) {
        if (this.isCheckBox(column, 'dt-checkbox-cell')) {
            this.dragLine.nativeElement.style.display = 'none';
            return;
        }
        // 偏移量
        /** @type {?} */
        var delta = e.pageX - this.dragLineX;
        // 拖拽前列宽
        /** @type {?} */
        var columnWidth = column.offsetWidth;
        // 拖拽后列宽
        /** @type {?} */
        var newColumnWidth = columnWidth + delta;
        // 最小宽度
        /** @type {?} */
        var minWidth = column.style.minWidth || 30;
        // 新宽度大于或等于最小宽度时
        newColumnWidth = newColumnWidth > minWidth ? newColumnWidth : minWidth;
        // 重新设置宽度
        /** @type {?} */
        var colIndex = -1;
        /** @type {?} */
        var othersCol = [];
        /** @type {?} */
        var cols = this.tableHeader.nativeElement.querySelectorAll('th');
        // 父节点宽度
        /** @type {?} */
        var parentWidth = column.parentElement.offsetWidth;
        // 判断是不是有checkbox
        /** @type {?} */
        var firstElement = column.parentElement.firstElementChild;
        /** @type {?} */
        var checkBoxWidth = this.isCheckBox(firstElement, 'dt-checkbox-cell') ? firstElement.offsetWidth : 0;
        // 其他列宽度
        /** @type {?} */
        var othersWidth = parentWidth - columnWidth - checkBoxWidth;
        /** @type {?} */
        var newOthersWidth = parentWidth - newColumnWidth - checkBoxWidth;
        for (var i = 0; i < cols.length; i++) {
            if (cols[i] === column) {
                colIndex = i;
            }
            else {
                if (this.isCheckBox(cols[i], 'dt-checkbox-cell')) {
                    continue;
                }
                /** @type {?} */
                var rate = cols[i].offsetWidth / othersWidth;
                if (rate > 1) {
                    // console.log(cols[i]);
                }
                /** @type {?} */
                var colWidth = newOthersWidth * rate;
                if (newOthersWidth * rate > 15) {
                    colWidth = newOthersWidth * rate;
                }
                else {
                    colWidth = 15;
                    othersWidth = othersWidth - colWidth;
                    newOthersWidth = newOthersWidth - colWidth;
                    newColumnWidth = newColumnWidth - 15 + newOthersWidth * rate;
                }
                othersCol.push({ colIndex: i, colWidth: colWidth });
            }
        }
        this.resizeColGroup(this.dtHeader.el.nativeElement, colIndex, newColumnWidth, othersCol);
        this.resizeColGroup(this.dtBody.el.nativeElement, colIndex, newColumnWidth, othersCol);
        // 计算宽度完毕  设置拖拽线隐藏
        this.dragLine.nativeElement.style.display = 'none';
    };
    /**
     * @param {?} elements
     * @param {?} cName
     * @return {?}
     */
    DataTableComponent.prototype.isCheckBox = /**
     * @param {?} elements
     * @param {?} cName
     * @return {?}
     */
    function (elements, cName) {
        return !!elements.className.match(new RegExp('(\\s|^)' + cName + '(\\s|$)'));
    };
    /**
     * @param {?} table
     * @param {?} resizeColumnIndex
     * @param {?} newColumnWidth
     * @param {?} othersColumn
     * @return {?}
     */
    DataTableComponent.prototype.resizeColGroup = /**
     * @param {?} table
     * @param {?} resizeColumnIndex
     * @param {?} newColumnWidth
     * @param {?} othersColumn
     * @return {?}
     */
    function (table, resizeColumnIndex, newColumnWidth, othersColumn) {
        if (table) {
            // 此处要视不同的表格结构来确定 本组件中  header和body结构相同
            /** @type {?} */
            var colGroup = table.childNodes[0].children[0].nodeName === 'COLGROUP' ?
                table.childNodes[0].children[0] : null;
            if (colGroup) {
                /** @type {?} */
                var col = colGroup.children[resizeColumnIndex];
                col.style.width = newColumnWidth + 'px';
                for (var i = 0; i < othersColumn.length; i++) {
                    /** @type {?} */
                    var otherCol = colGroup.children[othersColumn[i].colIndex];
                    if (otherCol && othersColumn[i].colWidth) {
                        otherCol.style.width = othersColumn[i].colWidth + 'px';
                    }
                }
            }
            else {
                throw new Error('Scrollable tables require a colgroup to support resizable columns');
            }
        }
    };
    /**
     * @param {?} e
     * @return {?}
     */
    DataTableComponent.prototype.onScrollX = /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
        // 横向滚动 非固定表头滚动
        /** @type {?} */
        var x = e.srcElement.scrollLeft;
        this.tableHeader.nativeElement.scrollTo(x, 0);
    };
    /**
     * 滚动条纵向滚动
     */
    /**
     * 滚动条纵向滚动
     * @param {?} e
     * @return {?}
     */
    DataTableComponent.prototype.onScrollY = /**
     * 滚动条纵向滚动
     * @param {?} e
     * @return {?}
     */
    function (e) {
        if (!this.hasFixed) {
            return;
        }
        /** @type {?} */
        var y = e.srcElement.scrollTop;
        this.dtLeftFixed.nativeElement.style.top = -y + 'px';
        this.dtRightFixed.nativeElement.style.top = -y + 'px';
    };
    /**
     * @param {?} page
     * @return {?}
     */
    DataTableComponent.prototype.onPageChange = /**
     * @param {?} page
     * @return {?}
     */
    function (page) {
        if (this.pageIndex !== page.pageIndex) {
            this.pageIndex = page.pageIndex;
            this.paginationOptions.currentPage = page.pageIndex;
            this.pageChanged.emit({ pageInfo: page, search: this.searchData, sortName: this.sortName, sortOrder: this.sortOrder });
        }
    };
    /**
     * @param {?} pageSize
     * @return {?}
     */
    DataTableComponent.prototype.onPageSizeChange = /**
     * @param {?} pageSize
     * @return {?}
     */
    function (pageSize) {
        if (this.pageSize !== pageSize && this.total) {
            this.paginationOptions.itemsPerPage = pageSize;
            this.pageSize = pageSize;
            /** @type {?} */
            var total = this.total;
            /** @type {?} */
            var pageLength = Math.floor(total / pageSize);
            if (total % pageSize > 0) {
                pageLength += 1;
            }
            if (pageLength && this.pageIndex > pageLength) {
                this.pageIndex = pageLength;
                this.paginationOptions.currentPage = this.pageIndex;
            }
            this.pageSizeChanged.emit({
                pageInfo: { pageIndex: this.pageIndex, pageSize: pageSize },
                search: this.searchData, sortName: this.sortName, sortOrder: this.sortOrder
            });
        }
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    DataTableComponent.prototype.onSearch = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        if ($event.originalEvent) {
            $event.originalEvent.stopPropagation();
        }
        this.search.emit(this.searchData);
    };
    /**
     * @param {?} state
     * @return {?}
     */
    DataTableComponent.prototype.onCheckAll = /**
     * @param {?} state
     * @return {?}
     */
    function (state) {
        this.dataService.selectedAll.next(state);
        this.checkAll.emit(state);
    };
    /**
     * @param {?} e
     * @return {?}
     */
    DataTableComponent.prototype.onSelectedRow = /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
        this.selectedRow.emit({ data: e.rowData, index: e.rowIndex });
        // 兼容
        this.selectRows.emit({ data: e.rowData, index: e.rowIndex });
    };
    // tslint:disable-next-line:no-shadowed-variable
    // tslint:disable-next-line:no-shadowed-variable
    /**
     * @param {?} size
     * @return {?}
     */
    DataTableComponent.prototype.resize = 
    // tslint:disable-next-line:no-shadowed-variable
    /**
     * @param {?} size
     * @return {?}
     */
    function (size) {
        if (!size) {
            return;
        }
        if (this.width !== size.width || this.height !== size.height) {
            this.width = size.width;
            this.height = size.height;
            this.setBodyHeight();
        }
    };
    /**
     * @param {?} e
     * @return {?}
     */
    DataTableComponent.prototype.loadData = /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
        this.data = e.data;
        if (this.pagination) {
            var _a = tslib_1.__assign({}, e), _b = _a.total, total = _b === void 0 ? 0 : _b, _c = _a.pageSize, pageSize = _c === void 0 ? 20 : _c, _d = _a.pageIndex, pageIndex = _d === void 0 ? 1 : _d;
            this.paginationOptions.totalItems = total;
            this.paginationOptions.itemsPerPage = pageSize;
            this.paginationOptions.currentPage = pageIndex;
            this.paginationOptions.pageList = this.pageList;
            this.paginationOptions = tslib_1.__assign({}, this.paginationOptions);
            this.total = total;
            this.pageSize = pageSize;
            this.pageIndex = pageIndex;
        }
        this.cd.detectChanges();
        this.updateCheckboxState(this.data);
    };
    /*
     */
    /*
         */
    /**
     * @param {?} e
     * @return {?}
     */
    DataTableComponent.prototype.onCellClick = /*
         */
    /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
        this.cellClick.emit(e);
    };
    /* 添加行 */
    /* 添加行 */
    /**
     * @param {?} dataItem
     * @return {?}
     */
    DataTableComponent.prototype.addRows = /* 添加行 */
    /**
     * @param {?} dataItem
     * @return {?}
     */
    function (dataItem) {
        this.data = this.data.concat(dataItem);
    };
    /* 删除行 */
    /* 删除行 */
    /**
     * @return {?}
     */
    DataTableComponent.prototype.removeRows = /* 删除行 */
    /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var SELECTIONS = this.selections;
        if (this.singleSelect) {
            for (var i = 0; i < this.data.length; i++) {
                if (this.data[i] === SELECTIONS) {
                    this.data.splice(i, 1);
                }
            }
        }
        else {
            for (var i = 0; i < SELECTIONS.length; i++) {
                for (var j = 0; j < this.data.length; j++) {
                    if (SELECTIONS[i][this.idField] === this.data[j][this.idField]) {
                        this.data.splice(j, 1);
                    }
                }
            }
        }
    };
    /**
     * @param {?} rid
     * @param {?=} emit
     * @return {?}
     */
    DataTableComponent.prototype.checkRow = /**
     * @param {?} rid
     * @param {?=} emit
     * @return {?}
     */
    function (rid, emit) {
        var _this = this;
        if (emit === void 0) { emit = false; }
        var _a, _b;
        /** @type {?} */
        var rowIndex = -1;
        /** @type {?} */
        var rowData = this.data.find((/**
         * @param {?} n
         * @param {?} i
         * @return {?}
         */
        function (n, i) {
            if (n[_this.idField] == rid) {
                rowIndex = i;
                return true;
            }
        }));
        if (!rowData) {
            return;
        }
        if (!this.selections) {
            this.selections = (_a = {}, _a[rid] = rowData, _a);
        }
        else {
            this.selections = tslib_1.__assign((_b = {}, _b[rid] = rowData, _b), this.selections.reduce((/**
             * @param {?} r
             * @param {?} n
             * @return {?}
             */
            function (r, n) {
                r[n[_this.idField]] = n;
                return r;
            }), {}));
        }
        this.dataService.selectedRow.next({
            rowIndex: rowIndex,
            rowData: rowData
        });
        if (emit) {
            /** @type {?} */
            var p = { data: rowData, index: rowIndex };
            this.selectedRow.emit(p);
            // 兼容
            this.selectRows.emit(p);
        }
    };
    /**
     * @param {?} rid
     * @param {?=} emit
     * @return {?}
     */
    DataTableComponent.prototype.unCheckRow = /**
     * @param {?} rid
     * @param {?=} emit
     * @return {?}
     */
    function (rid, emit) {
        var _this = this;
        if (emit === void 0) { emit = false; }
        /** @type {?} */
        var rowIndex = -1;
        /** @type {?} */
        var rowData = this.data.find((/**
         * @param {?} n
         * @param {?} i
         * @return {?}
         */
        function (n, i) {
            if (n[_this.idField] == rid) {
                rowIndex = i;
                return true;
            }
        }));
        if (this.selections) {
            this.selections = this.selections.filter((/**
             * @param {?} n
             * @return {?}
             */
            function (n) { return n[_this.idField] != rid; })).reduce((/**
             * @param {?} r
             * @param {?} n
             * @return {?}
             */
            function (r, n) {
                r[n[_this.idField]] = n;
                return r;
            }), {});
            this.dataService.unSelectedRow.next({
                rowIndex: rowIndex,
                rowData: rowData
            });
            if (emit) {
                this.unSelectRow.emit({ data: rowData, index: rowIndex });
            }
        }
    };
    /**
     * @return {?}
     */
    DataTableComponent.prototype.clearSelections = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    DataTableComponent.prototype.onKeydownEvent = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        var _this = this;
        if (!$event || !this.singleSelect || !this.data || !this.data.length) {
            return;
        }
        if (!['ArrowDown', 'ArrowUp'].includes($event.code)) {
            return;
        }
        /** @type {?} */
        var newIdx;
        if ($event.code === 'ArrowDown') {
            newIdx = this._currentRowIndex + 1;
            if (newIdx >= this.data.length) {
                newIdx = 0;
            }
        }
        else if ($event.code === 'ArrowUp') {
            if (this._currentRowIndex !== -1) {
                newIdx = this._currentRowIndex - 1;
            }
        }
        if (newIdx >= 0) {
            this.dtBody.selectedRow($event, newIdx, this.data[newIdx]);
        }
        setTimeout((/**
         * @return {?}
         */
        function () {
            // scroll intoView
            /** @type {?} */
            var trDoms = _this.dtBody.el.nativeElement.querySelectorAll('.ui-table-tbody tr');
            if (trDoms && trDoms[_this._currentRowIndex]) {
                trDoms[_this._currentRowIndex].scrollIntoView({ block: 'nearest' });
            }
        }));
    };
    DataTableComponent.decorators = [
        { type: Component, args: [{
                    selector: 'farrisui-datatable,farris-datatable',
                    template: "<div class=\"filter-row\" [style.width]=\"width + 'px'\" *ngIf=\"showFilterBar\">\r\n    <form style=\"display: flex; width: 100%;\">\r\n        <div class=\"search-fields\">\r\n            <select class=\"custom-select\" [(ngModel)]=\"searchData.field\" name=\"field\">\r\n                <option value=\"*\">{{allColumnsTitle}}</option>\r\n                <option *ngFor=\"let col of searchFields\" value=\"{{col.value}}\">{{ col.label }}</option>\r\n            </select>\r\n        </div>\r\n        <div class=\"search-text flex-fill\">\r\n            <input-group [groupText]=\"searchButtonText\" name=\"searchValue\" (clear)=\"onClearSearchValue()\" #inputgroup\r\n                [(ngModel)]=\"searchData.value\" (clickHandle)=\"onSearch($event)\" (enterHandle)=\"onSearch($event)\"\r\n                (keydownHandle)=\"onKeydownEvent($event)\" (valueChange)=\"searchValueChange.emit(searchData)\"></input-group>\r\n        </div>\r\n    </form>\r\n</div>\r\n<div [ngStyle]=\"{'height': tableHeight +'px', 'width': width +'px' }\" class=\"farris-datatable-container\">\r\n    <div class=\"farris-datatable\">\r\n        <div #tableHeader class=\"farris-table-header\" [style.display]=\"showHeader? '': 'none'\">\r\n            <datatable-header #dtHeader [size]=\"size\" [columns]=\"columns\" [singleSelect]=\"singleSelect\" [data]=\"data\"\r\n                (loadData)=\"loadData\" (checkedAll)=\"onCheckAll($event)\">\r\n                <ng-content select=\"data-columns\"></ng-content>\r\n            </datatable-header>\r\n        </div>\r\n        <div #scorllableBody class=\"farris-table-scorllable-body\" [style.height]=\"scorllableBodyHeight + 'px'\">\r\n            <perfect-scrollbar #perfectScrollbar [config]=\"{}\" (psScrollX)=\"onScrollX($event)\" (psScrollY)=\"onScrollY($event)\">\r\n                <ng-container [style.display]=\"data && data.length ? 'block': 'none'\">\r\n                    <datatable-body #dtBody [rows]=\"pagination ? (data | paginate: paginationOptions) : data\" [size]=\"size\" [columns]=\"columns\" [striped]=\"striped\"\r\n                        [bordered]=\"bordered\" [rowClassName]=\"rowClassName\" [cellClassName]=\"cellClassName\" (cellClick)=\"onCellClick($event)\">\r\n                    </datatable-body>\r\n                </ng-container>\r\n                <!-- <ng-container *ngIf=\"!(data && data.length)\">\r\n                    <h1 style=\"text-align:center;color:#ccc; margin-top: 50px;\"></h1>\r\n                </ng-container> -->\r\n            </perfect-scrollbar>\r\n        </div>\r\n        <div class=\"farris-table-header\" *ngIf=\"footer\">\r\n            <ng-template [ngTemplateOutlet]=\"footer\">\r\n            </ng-template>\r\n        </div>\r\n        <div *ngIf=\"pagination\" #tablePager class=\"farris-table-pager\" >\r\n            <div #pgScrollbar style=\"width: 100%;position: absolute;overflow-x: unset;\">\r\n                <pagination-controls #pager [id]=\"paginationOptions.id\" [maxSize]=\"maxSize\" [directionLinks]=\"directionLinks\"\r\n                    [autoHide]=\"autoHide\" [responsive]=\"responsive\" [previousLabel]=\"labels.previousLabel\" [nextLabel]=\"labels.nextLabel\"\r\n                    [screenReaderPaginationLabel]=\"labels.screenReaderPaginationLabel\" [screenReaderPageLabel]=\"labels.screenReaderPageLabel\"\r\n                    [screenReaderCurrentLabel]=\"labels.screenReaderCurrentLabel\" (pageChange)=\"onPageChange($event)\"\r\n                    (pageSizeChange)=\"onPageSizeChange($event)\" [viewMode]=\"pagerViewMode\" [showGoToFirst]=\"true\" [showGoToLast]=\"true\"\r\n                    [showPageInfo]=\"showPageInfo\" [showPageNumber]=\"showPageNumber\" [showPageList]=\"showPageList\" style=\"position: relative;\"\r\n                >\r\n                </pagination-controls>\r\n            </div>\r\n        </div>\r\n        <div #dragLine *ngIf=\"resizableColumns\" class=\"column-resizer-helper\"></div>\r\n    </div>\r\n</div>",
                    encapsulation: ViewEncapsulation.None,
                    providers: [
                        DataTableService
                    ],
                    styles: [".farris-ui-datatable{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;height:100%;font-size:13px}.farris-ui-datatable table{border-collapse:collapse;width:100%;table-layout:fixed}.farris-ui-datatable .farris-table-footer,.farris-ui-datatable .farris-table-header{position:relative;min-height:34px}.farris-ui-datatable .farris-table-footer thead>tr>th,.farris-ui-datatable .farris-table-header thead>tr>th{padding:.571em .857em;border:1px solid #c8c8c8;font-weight:700;color:#333;background-color:#fff;border-top:0;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.farris-ui-datatable .farris-table-footer thead>tr>th .tt-checkbox,.farris-ui-datatable .farris-table-header thead>tr>th .tt-checkbox{margin-right:0;vertical-align:top;min-height:1rem}.farris-ui-datatable .farris-table-footer thead>tr>th:first-child,.farris-ui-datatable .farris-table-header thead>tr>th:first-child{border-left:0}.farris-ui-datatable .farris-table-footer thead>tr>th:last-child,.farris-ui-datatable .farris-table-header thead>tr>th:last-child{border-right:0}.farris-ui-datatable .farris-table-footer .checkbox-cell,.farris-ui-datatable .farris-table-header .checkbox-cell{width:40px}.farris-ui-datatable .farris-table-scorllable-body{overflow:hidden}.farris-ui-datatable .farris-table-scorllable-body .ui-table-tbody tr>td{background:inherit;border:1px solid #c8c8c8;padding:6px 10px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.farris-ui-datatable .farris-table-scorllable-body .ui-table-tbody .tt-checkbox{margin-right:0;vertical-align:top}.farris-ui-datatable .farris-table-scorllable-body .ui-table-tbody .checkbox-cell{width:40px}.farris-ui-datatable .farris-table-scorllable-body .row-hight-light{background-color:#b7d7ff;color:#000}.farris-ui-datatable .farris-table-scorllable-body .ui-table-tbody tr:not(.row-hight-light):hover{cursor:pointer;background-color:#e7f2ff}.farris-ui-datatable .farris-table-scorllable-body .ui-table-tbody>tr:first-child>td{border-top:0}.farris-ui-datatable .farris-table-scorllable-body table>.ui-table-tbody>tr>td:last-child{border-right:0}.farris-ui-datatable .farris-table-scorllable-body table>.ui-table-tbody>tr>td:first-child{border-left:0}.farris-ui-datatable .farris-table-pager{background-color:#f3f3f3;height:50px;min-height:50px;width:100%;border-top:1px solid #c8c8c8}.filter-row{display:-webkit-box;display:flex;margin:10px 0}.filter-row .search-fields{min-width:140px}.filter-row .search-text{-webkit-box-flex:1;flex:1;margin-left:10px}.filter-row .search-text .btn-outline-secondary{border-color:#ced4da}.filter-row .search-text .btn-outline-secondary:active,.filter-row .search-text .btn-outline-secondary:focus{box-shadow:none}.filter-row .form-control:focus{border-color:#ced4da;box-shadow:none}.filter-row .custom-select:focus{box-shadow:none}.farris-datatable{position:relative}.resizable-column{background-clip:padding-box;position:relative}.column-resizer{display:block;position:absolute!important;top:0;right:0;margin:0;width:.5em;height:100%;padding:0;cursor:col-resize;border:1px solid transparent}.column-resizer-helper{width:1px;position:absolute;z-index:10;display:none;background-color:#6c757d;opacity:.6}.farris-table-fixed-body,.farris-table-fixed-header{position:absolute;top:0;left:0;overflow:hidden;box-shadow:2px 0 6px -2px rgba(0,0,0,.2)}.farris-table-fixed-right-body,.farris-table-fixed-right-header{position:absolute;top:0;right:0;overflow:hidden;box-shadow:-2px 0 6px -2px rgba(0,0,0,.2)}.td-hidden{visibility:hidden}@media (min-width:576px){.td-sm-hidden{visibility:hidden!important}.td-sm-visible{visibility:visible!important}}@media (min-width:768px){.td-md-hidden{visibility:hidden!important}.td-md-visible{visibility:visible!important}}@media (min-width:992px){.td-lg-hidden{visibility:hidden!important}.td-lg-visible{visibility:visible!important}}@media (min-width:1200px){.td-xl-hidden{visibility:hidden!important}.td-xl-visible{visibility:visible!important}}"]
                }] }
    ];
    /** @nocollapse */
    DataTableComponent.ctorParameters = function () { return [
        { type: DataTableService },
        { type: IdService },
        { type: ElementRef },
        { type: ChangeDetectorRef },
        { type: NgZone }
    ]; };
    DataTableComponent.propDecorators = {
        keydownEnterEdit: [{ type: Input }],
        id: [{ type: Input }],
        size: [{ type: Input }],
        allColumnsTitle: [{ type: Input }],
        width: [{ type: Input }],
        height: [{ type: Input }],
        fill: [{ type: Input }],
        pagination: [{ type: Input }],
        pagerOnServer: [{ type: Input }],
        pageSize: [{ type: Input }],
        pageIndex: [{ type: Input }],
        showPageInfo: [{ type: Input }],
        showPageNumber: [{ type: Input }],
        showPageList: [{ type: Input }],
        pagerViewMode: [{ type: Input }],
        showHeader: [{ type: Input }],
        pageList: [{ type: Input }],
        total: [{ type: Input }],
        columns: [{ type: Input }],
        searchFields: [{ type: Input }],
        showFilterBar: [{ type: Input }],
        data: [{ type: Input }],
        remote: [{ type: Input }],
        remoteSort: [{ type: Input }],
        sortName: [{ type: Input }],
        sortOrder: [{ type: Input }],
        multiSort: [{ type: Input }],
        beforeSortColumn: [{ type: Input }],
        singleSelect: [{ type: Input }],
        idField: [{ type: Input }],
        hover: [{ type: Input }],
        striped: [{ type: Input }],
        bordered: [{ type: Input }],
        rowClassName: [{ type: Input }],
        cellClassName: [{ type: Input }],
        rowStyler: [{ type: Input }],
        cellStyler: [{ type: Input }],
        selections: [{ type: Input }],
        scorllableBody: [{ type: ViewChild, args: ['scorllableBody',] }],
        tableHeader: [{ type: ViewChild, args: ['tableHeader',] }],
        tablePager: [{ type: ViewChild, args: ['tablePager',] }],
        dtHeader: [{ type: ViewChild, args: ['dtHeader',] }],
        dtBody: [{ type: ViewChild, args: ['dtBody',] }],
        dtLeftBody: [{ type: ViewChild, args: ['dtLeftBody',] }],
        dtRightBody: [{ type: ViewChild, args: ['dtRightBody',] }],
        dtLeftFixed: [{ type: ViewChild, args: ['dtLeftFixed',] }],
        dtRightFixed: [{ type: ViewChild, args: ['dtRightFixed',] }],
        pager: [{ type: ViewChild, args: ['pager',] }],
        inputGroup: [{ type: ViewChild, args: ['inputgroup',] }],
        pgScrollbar: [{ type: ViewChild, args: ['pgScrollbar',] }],
        pageChanged: [{ type: Output }],
        pageSizeChanged: [{ type: Output }],
        search: [{ type: Output }],
        columnSorted: [{ type: Output }],
        rowDblClick: [{ type: Output }],
        selectedRow: [{ type: Output }],
        selectRows: [{ type: Output }],
        unSelectRow: [{ type: Output }],
        cellClick: [{ type: Output }],
        clearSearchValue: [{ type: Output }],
        checkAll: [{ type: Output }],
        searchValueChange: [{ type: Output }],
        sortChange: [{ type: Output }],
        columnsRef: [{ type: ContentChildren, args: [ColumnDirective,] }],
        footer: [{ type: ContentChild, args: ['footer',] }],
        dragLine: [{ type: ViewChild, args: ['dragLine',] }],
        resizableColumns: [{ type: Input }],
        keepSelect: [{ type: Input }],
        perfectScrollbar: [{ type: ViewChild, args: ['perfectScrollbar',] }]
    };
    return DataTableComponent;
}());
export { DataTableComponent };
if (false) {
    /** @type {?} */
    DataTableComponent.prototype.searchButtonText;
    /** @type {?} */
    DataTableComponent.prototype.keydownEnterEdit;
    /** @type {?} */
    DataTableComponent.prototype.id;
    /** @type {?} */
    DataTableComponent.prototype.size;
    /** @type {?} */
    DataTableComponent.prototype.allColumnsTitle;
    /** @type {?} */
    DataTableComponent.prototype.width;
    /** @type {?} */
    DataTableComponent.prototype.height;
    /** @type {?} */
    DataTableComponent.prototype.tableHeight;
    /** @type {?} */
    DataTableComponent.prototype.fill;
    /** @type {?} */
    DataTableComponent.prototype.pagination;
    /** @type {?} */
    DataTableComponent.prototype.pagerOnServer;
    /** @type {?} */
    DataTableComponent.prototype.pageSize;
    /** @type {?} */
    DataTableComponent.prototype.pageIndex;
    /** @type {?} */
    DataTableComponent.prototype.showPageInfo;
    /** @type {?} */
    DataTableComponent.prototype.showPageNumber;
    /** @type {?} */
    DataTableComponent.prototype.showPageList;
    /** @type {?} */
    DataTableComponent.prototype.pagerViewMode;
    /**
     * 显示表头
     * @type {?}
     */
    DataTableComponent.prototype.showHeader;
    /**
     * @type {?}
     * @private
     */
    DataTableComponent.prototype._pageList;
    /** @type {?} */
    DataTableComponent.prototype.total;
    /** @type {?} */
    DataTableComponent.prototype.columns;
    /** @type {?} */
    DataTableComponent.prototype.searchFields;
    /** @type {?} */
    DataTableComponent.prototype.showFilterBar;
    /** @type {?} */
    DataTableComponent.prototype._data;
    /** @type {?} */
    DataTableComponent.prototype.copyData;
    /** @type {?} */
    DataTableComponent.prototype.remote;
    /**
     * 启用远端排序
     * @type {?}
     */
    DataTableComponent.prototype.remoteSort;
    /**
     * 排序字段
     * @type {?}
     */
    DataTableComponent.prototype.sortName;
    /**
     * 排序方式 asc | desc
     * @type {?}
     */
    DataTableComponent.prototype.sortOrder;
    /**
     * 允许多列排序
     * @type {?}
     */
    DataTableComponent.prototype.multiSort;
    /** @type {?} */
    DataTableComponent.prototype.beforeSortColumn;
    /** @type {?} */
    DataTableComponent.prototype.singleSelect;
    /** @type {?} */
    DataTableComponent.prototype.idField;
    /** @type {?} */
    DataTableComponent.prototype.hover;
    /** @type {?} */
    DataTableComponent.prototype.striped;
    /** @type {?} */
    DataTableComponent.prototype.bordered;
    /** @type {?} */
    DataTableComponent.prototype.rowClassName;
    /** @type {?} */
    DataTableComponent.prototype.cellClassName;
    /** @type {?} */
    DataTableComponent.prototype.rowStyler;
    /** @type {?} */
    DataTableComponent.prototype.cellStyler;
    /** @type {?} */
    DataTableComponent.prototype.scorllableBody;
    /** @type {?} */
    DataTableComponent.prototype.tableHeader;
    /** @type {?} */
    DataTableComponent.prototype.tablePager;
    /** @type {?} */
    DataTableComponent.prototype.dtHeader;
    /** @type {?} */
    DataTableComponent.prototype.dtBody;
    /** @type {?} */
    DataTableComponent.prototype.dtLeftBody;
    /** @type {?} */
    DataTableComponent.prototype.dtRightBody;
    /** @type {?} */
    DataTableComponent.prototype.dtLeftFixed;
    /** @type {?} */
    DataTableComponent.prototype.dtRightFixed;
    /** @type {?} */
    DataTableComponent.prototype.pager;
    /** @type {?} */
    DataTableComponent.prototype.inputGroup;
    /** @type {?} */
    DataTableComponent.prototype.pgScrollbar;
    /** @type {?} */
    DataTableComponent.prototype.pageChanged;
    /** @type {?} */
    DataTableComponent.prototype.pageSizeChanged;
    /** @type {?} */
    DataTableComponent.prototype.search;
    /** @type {?} */
    DataTableComponent.prototype.columnSorted;
    /** @type {?} */
    DataTableComponent.prototype.rowDblClick;
    /** @type {?} */
    DataTableComponent.prototype.selectedRow;
    /** @type {?} */
    DataTableComponent.prototype.selectRows;
    /** @type {?} */
    DataTableComponent.prototype.unSelectRow;
    /** @type {?} */
    DataTableComponent.prototype.cellClick;
    /** @type {?} */
    DataTableComponent.prototype.clearSearchValue;
    /** @type {?} */
    DataTableComponent.prototype.checkAll;
    /** @type {?} */
    DataTableComponent.prototype.searchValueChange;
    /** @type {?} */
    DataTableComponent.prototype.sortChange;
    /** @type {?} */
    DataTableComponent.prototype.columnsRef;
    /** @type {?} */
    DataTableComponent.prototype.footer;
    /** @type {?} */
    DataTableComponent.prototype.dragLine;
    /** @type {?} */
    DataTableComponent.prototype.resizableColumns;
    /**
     * 针对同一条记录，单选时，多次单击后不取消选中。
     * @type {?}
     */
    DataTableComponent.prototype.keepSelect;
    /** @type {?} */
    DataTableComponent.prototype.hasRowTepml;
    /** @type {?} */
    DataTableComponent.prototype.datatableContainer;
    /** @type {?} */
    DataTableComponent.prototype.dragLineX;
    /** @type {?} */
    DataTableComponent.prototype.moveable;
    /** @type {?} */
    DataTableComponent.prototype.currentColumn;
    /** @type {?} */
    DataTableComponent.prototype.hasFixed;
    /** @type {?} */
    DataTableComponent.prototype.fixedLeftWidth;
    /** @type {?} */
    DataTableComponent.prototype.fixedRightWidth;
    /** @type {?} */
    DataTableComponent.prototype.searchData;
    /** @type {?} */
    DataTableComponent.prototype.subscription;
    /** @type {?} */
    DataTableComponent.prototype.headerTr;
    /** @type {?} */
    DataTableComponent.prototype.leftFixedHeaderTr;
    /** @type {?} */
    DataTableComponent.prototype.rightFixedHeaderTr;
    /** @type {?} */
    DataTableComponent.prototype.filter;
    /** @type {?} */
    DataTableComponent.prototype.maxSize;
    /** @type {?} */
    DataTableComponent.prototype.directionLinks;
    /** @type {?} */
    DataTableComponent.prototype.autoHide;
    /** @type {?} */
    DataTableComponent.prototype.responsive;
    /** @type {?} */
    DataTableComponent.prototype.paginationOptions;
    /** @type {?} */
    DataTableComponent.prototype.labels;
    /**
     * @type {?}
     * @private
     */
    DataTableComponent.prototype._currentRowIndex;
    /**
     * @type {?}
     * @private
     */
    DataTableComponent.prototype._currentRow;
    /** @type {?} */
    DataTableComponent.prototype.perfectScrollbar;
    /**
     * @type {?}
     * @private
     */
    DataTableComponent.prototype.isCheckAll;
    /** @type {?} */
    DataTableComponent.prototype.scorllableBodyHeight;
    /** @type {?} */
    DataTableComponent.prototype.mouseEnterOnPager;
    /** @type {?} */
    DataTableComponent.prototype.mouseLeaveOnPager;
    /** @type {?} */
    DataTableComponent.prototype.mouseWheelOnPager;
    /**
     * @type {?}
     * @private
     */
    DataTableComponent.prototype.ps;
    /** @type {?} */
    DataTableComponent.prototype.trackByRows;
    /**
     * @type {?}
     * @private
     */
    DataTableComponent.prototype.dataService;
    /**
     * @type {?}
     * @private
     */
    DataTableComponent.prototype.idService;
    /**
     * @type {?}
     * @private
     */
    DataTableComponent.prototype.el;
    /** @type {?} */
    DataTableComponent.prototype.cd;
    /**
     * @type {?}
     * @private
     */
    DataTableComponent.prototype.ngZone;
}
//# sourceMappingURL=data:application/json;base64,