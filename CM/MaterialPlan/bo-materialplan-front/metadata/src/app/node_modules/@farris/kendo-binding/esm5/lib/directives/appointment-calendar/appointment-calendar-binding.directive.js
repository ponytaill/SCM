import { Directive, HostListener, Injector, Input } from '@angular/core';
import { ChangeType, FrameContext } from '@farris/devkit';
import { AppointmentCalendarComponent } from '@farris/appointment-calendar';
import { ViewType } from './types';
var AppointmentCalendarBindingDirective = /** @class */ (function () {
    function AppointmentCalendarBindingDirective(injector, frameContext, calendarComponent) {
        this.injector = injector;
        this.frameContext = frameContext;
        this.calendarComponent = calendarComponent;
        /**
         * 房间列表api url
         */
        this.url = null;
        /**
         * http method, default PUT
         */
        this.method = 'PUT';
        this.startDateVariable = 'startDate';
        this.endDateVariable = 'endDate';
        this.viewTypeVariable = 'viewType';
    }
    Object.defineProperty(AppointmentCalendarBindingDirective.prototype, "bindingData", {
        get: function () {
            return this.frameContext.bindingData;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AppointmentCalendarBindingDirective.prototype, "viewModel", {
        get: function () {
            return this.frameContext.viewModel;
        },
        enumerable: true,
        configurable: true
    });
    AppointmentCalendarBindingDirective.prototype.restService = function () {
        return this.frameContext.repository.restService;
    };
    Object.defineProperty(AppointmentCalendarBindingDirective.prototype, "bindingList", {
        /**
         * 获取绑定数据
         */
        get: function () {
            // 根实体
            if (this.viewModel.bindingPath === '/' || !this.viewModel.bindingPath) {
                return this.bindingData.list;
            }
            // 子实体
            var bindingPath = this.viewModel.bindingPath.substr(1);
            bindingPath = bindingPath[0].toLowerCase() + bindingPath.substring(1, bindingPath.length);
            var paths = bindingPath.split('/');
            var filteredPaths = paths.filter(function (part) {
                return part !== '';
            });
            return this.bindingData.getValue(filteredPaths);
        },
        enumerable: true,
        configurable: true
    });
    AppointmentCalendarBindingDirective.prototype.ngOnInit = function () {
        this.loadPlacements();
        this.registerBindingDataChangeEvent();
    };
    AppointmentCalendarBindingDirective.prototype.ngOnChanges = function (changes) {
    };
    AppointmentCalendarBindingDirective.prototype.ngOnDestroy = function () {
        this.unRegisterBindingDataChangeEvent();
    };
    AppointmentCalendarBindingDirective.prototype.bindData = function (change) {
        // 再toJSON
        var data = this.bindingList.toJSON();
        this.calendarComponent.loadReserveData(data);
    };
    AppointmentCalendarBindingDirective.prototype.onBindingDataChange = function (change) {
        this.bindData(change);
        this.updateSelectedRow(change);
    };
    AppointmentCalendarBindingDirective.prototype.registerBindingDataChangeEvent = function () {
        var _this = this;
        this.bindingDataChangeEvent = this.bindingData.changes.subscribe(function (change) {
            _this.onBindingDataChange(change);
        });
    };
    /**
     * 取消bindingdata变化订阅
     */
    AppointmentCalendarBindingDirective.prototype.unRegisterBindingDataChangeEvent = function () {
        if (this.bindingDataChangeEvent && typeof (this.bindingDataChangeEvent.unsubscribe) === 'function') {
            this.bindingDataChangeEvent.unsubscribe();
        }
    };
    AppointmentCalendarBindingDirective.prototype.loadPlacements = function () {
        var _this = this;
        if (!this.url) {
            console.log('无法加载房间信息，请配置房间列表api地址');
            return;
        }
        var requestInfo = this.restService().buildRequestInfo();
        var options = {
            body: {
                requestInfo: requestInfo
            }
        };
        this.restService().request(this.url, this.method, null, options).subscribe(function (returnValue) {
            _this.bindPlacements(returnValue);
        });
    };
    AppointmentCalendarBindingDirective.prototype.bindPlacements = function (placments) {
        this.calendarComponent.loadPlaceData(placments);
    };
    AppointmentCalendarBindingDirective.prototype.updateState = function (startDate, endDate, viewType) {
        this.viewModel.uiState.setPropertyValue(this.startDateVariable, startDate);
        this.viewModel.uiState.setPropertyValue(this.endDateVariable, endDate);
        this.viewModel.uiState.setPropertyValue(this.viewTypeVariable, viewType);
    };
    AppointmentCalendarBindingDirective.prototype.updateSelectedRow = function (change) {
        if (!this.bindingList || !this.bindingList.currentId) {
            return;
        }
        // 页码切换时不执行当前行切换
        if (change && change.type === ChangeType.PaginationInfoChange) {
            return;
        }
        if (this.viewModel && this.viewModel.frameContext.bindingData.rowSelectedEventSuspend === true) {
            return;
        }
        var id = this.calendarComponent.selectedId;
        var currentId = this.bindingList.currentId;
        // grid当前行与bingingList当前行一致，无须切换
        if (id === currentId) {
            return;
        }
        this.selectCalendarRow(this.bindingList.currentId);
    };
    AppointmentCalendarBindingDirective.prototype.selectCalendarRow = function (id) {
        this.calendarComponent.selectItem(id);
    };
    AppointmentCalendarBindingDirective.prototype.filterChanged = function (event) {
        var _a = event || {}, _b = _a.dateValue, dateValue = _b === void 0 ? null : _b, _c = _a.place, place = _c === void 0 ? null : _c, _d = _a.viewType, viewType = _d === void 0 ? null : _d;
        var startDate = null;
        var endDate = null;
        if (!dateValue) {
            return;
        }
        if (viewType === ViewType.day) {
            startDate = dateValue + " 00:00:00";
            endDate = dateValue + " 23:59:59";
        }
        else if (viewType === ViewType.week && dateValue.indexOf('~') !== -1) {
            var sections = dateValue.split('~');
            startDate = sections[0] + " 00:00:00";
            endDate = sections[1] + " 23:59:59";
        }
        this.updateState(startDate, endDate, viewType);
    };
    AppointmentCalendarBindingDirective.prototype.setSelectionIdToBindingData = function (id) {
        // 如果当前行不存在，则强制设置
        if (this.bindingList.currentId !== id) {
            this.bindingList.setCurrentId(id, true);
        }
    };
    AppointmentCalendarBindingDirective.prototype.selectChange = function (event) {
        var _a = event.item.id, id = _a === void 0 ? null : _a;
        this.setSelectionIdToBindingData(id);
    };
    AppointmentCalendarBindingDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[farris-appointment-calendar-binding]'
                },] }
    ];
    /** @nocollapse */
    AppointmentCalendarBindingDirective.ctorParameters = function () { return [
        { type: Injector },
        { type: FrameContext },
        { type: AppointmentCalendarComponent }
    ]; };
    AppointmentCalendarBindingDirective.propDecorators = {
        url: [{ type: Input }],
        method: [{ type: Input }],
        startDateVariable: [{ type: Input }],
        endDateVariable: [{ type: Input }],
        viewTypeVariable: [{ type: Input }],
        filterChanged: [{ type: HostListener, args: ['filterChange', ['$event'],] }],
        selectChange: [{ type: HostListener, args: ['selectChange', ['$event'],] }]
    };
    return AppointmentCalendarBindingDirective;
}());
export { AppointmentCalendarBindingDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwb2ludG1lbnQtY2FsZW5kYXItYmluZGluZy5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL2tlbmRvLWJpbmRpbmcvIiwic291cmNlcyI6WyJsaWIvZGlyZWN0aXZlcy9hcHBvaW50bWVudC1jYWxlbmRhci9hcHBvaW50bWVudC1jYWxlbmRhci1iaW5kaW5nLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ0wsU0FBUyxFQUErQyxZQUFZLEVBQzlDLFFBQVEsRUFBRSxLQUFLLEVBQ3RDLE1BQU0sZUFBZSxDQUFDO0FBR3ZCLE9BQU8sRUFBb0MsVUFBVSxFQUF5QixZQUFZLEVBQWdGLE1BQU0sZ0JBQWdCLENBQUM7QUFDak0sT0FBTyxFQUFFLDRCQUE0QixFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDNUUsT0FBTyxFQUFpQyxRQUFRLEVBQUUsTUFBTSxTQUFTLENBQUM7QUFFbEU7SUE0Q0UsNkNBQW9CLFFBQWtCLEVBQVUsWUFBMEIsRUFBVSxpQkFBK0M7UUFBL0csYUFBUSxHQUFSLFFBQVEsQ0FBVTtRQUFVLGlCQUFZLEdBQVosWUFBWSxDQUFjO1FBQVUsc0JBQWlCLEdBQWpCLGlCQUFpQixDQUE4QjtRQVpuSTs7V0FFRztRQUNNLFFBQUcsR0FBVyxJQUFJLENBQUM7UUFDNUI7O1dBRUc7UUFDTSxXQUFNLEdBQVcsS0FBSyxDQUFDO1FBQ3ZCLHNCQUFpQixHQUFXLFdBQVcsQ0FBQztRQUN4QyxvQkFBZSxHQUFXLFNBQVMsQ0FBQztRQUNwQyxxQkFBZ0IsR0FBVyxVQUFVLENBQUM7SUFFd0YsQ0FBQztJQXZDeEksc0JBQVksNERBQVc7YUFBdkI7WUFDRSxPQUFPLElBQUksQ0FBQyxZQUFZLENBQUMsV0FBVyxDQUFDO1FBQ3ZDLENBQUM7OztPQUFBO0lBQ0Qsc0JBQVksMERBQVM7YUFBckI7WUFDRSxPQUFPLElBQUksQ0FBQyxZQUFZLENBQUMsU0FBUyxDQUFDO1FBQ3JDLENBQUM7OztPQUFB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LFdBQVcsQ0FBQyxTQUFTLEVBQUUsT0FBTyxFQUFFLFFBQVEsQ0FBQyxDQUFDO0lBQ2pELENBQUM7SUFDUyx5RUFBMkIsR0FBckMsVUFBc0MsRUFBVTtRQUM5QyxpQkFBaUI7UUFDakIsSUFBSSxJQUFJLENBQUMsV0FBVyxDQUFDLFNBQVMsS0FBSyxFQUFFLEVBQUU7WUFDckMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxZQUFZLENBQUMsRUFBRSxFQUFFLElBQUksQ0FBQyxDQUFDO1NBQ3pDO0lBQ0gsQ0FBQztJQUVNLDBEQUFZLEdBRG5CLFVBQ29CLEtBQUs7UUFDUCxJQUFBLGtCQUFTLEVBQVQsOEJBQVMsQ0FBYTtRQUN0QyxJQUFJLENBQUMsMkJBQTJCLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDdkMsQ0FBQzs7Z0JBdkpGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsdUNBQXVDO2lCQUNsRDs7OztnQkFWdUIsUUFBUTtnQkFJOEMsWUFBWTtnQkFDakYsNEJBQTRCOzs7c0JBc0NsQyxLQUFLO3lCQUlMLEtBQUs7b0NBQ0wsS0FBSztrQ0FDTCxLQUFLO21DQUNMLEtBQUs7Z0NBaUZMLFlBQVksU0FBQyxjQUFjLEVBQUUsQ0FBQyxRQUFRLENBQUM7K0JBd0J2QyxZQUFZLFNBQUMsY0FBYyxFQUFFLENBQUMsUUFBUSxDQUFDOztJQUsxQywwQ0FBQztDQUFBLEFBeEpELElBd0pDO1NBckpZLG1DQUFtQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XHJcbiAgRGlyZWN0aXZlLCBPbkluaXQsIE9uQ2hhbmdlcywgT25EZXN0cm95LCBTaW1wbGVDaGFuZ2VzLCBIb3N0TGlzdGVuZXIsXHJcbiAgRXZlbnRFbWl0dGVyLCBPdXRwdXQsIEluamVjdG9yLCBJbnB1dFxyXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBTdWJqZWN0LCBTdWJzY3JpcHRpb24gfSBmcm9tICdyeGpzJztcclxuaW1wb3J0IHsgZGVib3VuY2VUaW1lLCBmaW5hbGl6ZSB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcclxuaW1wb3J0IHsgQmluZGluZ0RhdGEsIEJpbmRpbmdMaXN0LCBDaGFuZ2UsIENoYW5nZVR5cGUsIFZpZXdNb2RlbCwgQXBwQ29udGV4dCwgRnJhbWVDb250ZXh0LCBGaWVsZE1ldGFkYXRhVXRpbCwgRGF0YVR5cGVJbmZvLCBCaW5kaW5nT2JqZWN0LCBFbnRpdHlQYXRoQ29udmVydGVyLCBSdW5Nb2RlIH0gZnJvbSAnQGZhcnJpcy9kZXZraXQnO1xyXG5pbXBvcnQgeyBBcHBvaW50bWVudENhbGVuZGFyQ29tcG9uZW50IH0gZnJvbSAnQGZhcnJpcy9hcHBvaW50bWVudC1jYWxlbmRhcic7XHJcbmltcG9ydCB7IEJlZlJlc3RTZXJ2aWNlLCBCZWZSZXBvc2l0b3J5LCBWaWV3VHlwZSB9IGZyb20gJy4vdHlwZXMnO1xyXG5cclxuQERpcmVjdGl2ZSh7XHJcbiAgc2VsZWN0b3I6ICdbZmFycmlzLWFwcG9pbnRtZW50LWNhbGVuZGFyLWJpbmRpbmddJ1xyXG59KVxyXG5leHBvcnQgY2xhc3MgQXBwb2ludG1lbnRDYWxlbmRhckJpbmRpbmdEaXJlY3RpdmUgaW1wbGVtZW50cyBPbkluaXQsIE9uQ2hhbmdlcywgT25EZXN0cm95IHtcclxuICBwcml2YXRlIGJpbmRpbmdEYXRhQ2hhbmdlRXZlbnQ6IFN1YnNjcmlwdGlvbjtcclxuICBwcml2YXRlIGdldCBiaW5kaW5nRGF0YSgpOiBCaW5kaW5nRGF0YSB7XHJcbiAgICByZXR1cm4gdGhpcy5mcmFtZUNvbnRleHQuYmluZGluZ0RhdGE7XHJcbiAgfVxyXG4gIHByaXZhdGUgZ2V0IHZpZXdNb2RlbCgpOiBWaWV3TW9kZWwge1xyXG4gICAgcmV0dXJuIHRoaXMuZnJhbWVDb250ZXh0LnZpZXdNb2RlbDtcclxuICB9XHJcbiAgcHJpdmF0ZSByZXN0U2VydmljZSgpOiBCZWZSZXN0U2VydmljZSB7XHJcbiAgICByZXR1cm4gKHRoaXMuZnJhbWVDb250ZXh0LnJlcG9zaXRvcnkgYXMgQmVmUmVwb3NpdG9yeSkucmVzdFNlcnZpY2U7XHJcbiAgfVxyXG4gIC8qKlxyXG4gICAqIOiOt+WPlue7keWumuaVsOaNrlxyXG4gICAqL1xyXG4gIHByb3RlY3RlZCBnZXQgYmluZGluZ0xpc3QoKTogQmluZGluZ0xpc3Qge1xyXG4gICAgLy8g5qC55a6e5L2TXHJcbiAgICBpZiAodGhpcy52aWV3TW9kZWwuYmluZGluZ1BhdGggPT09ICcvJyB8fCAhdGhpcy52aWV3TW9kZWwuYmluZGluZ1BhdGgpIHtcclxuICAgICAgcmV0dXJuIHRoaXMuYmluZGluZ0RhdGEubGlzdDtcclxuICAgIH1cclxuICAgIC8vIOWtkOWunuS9k1xyXG4gICAgbGV0IGJpbmRpbmdQYXRoID0gdGhpcy52aWV3TW9kZWwuYmluZGluZ1BhdGguc3Vic3RyKDEpO1xyXG4gICAgYmluZGluZ1BhdGggPSBiaW5kaW5nUGF0aFswXS50b0xvd2VyQ2FzZSgpICsgYmluZGluZ1BhdGguc3Vic3RyaW5nKDEsIGJpbmRpbmdQYXRoLmxlbmd0aCk7XHJcbiAgICBjb25zdCBwYXRocyA9IGJpbmRpbmdQYXRoLnNwbGl0KCcvJyk7XHJcblxyXG4gICAgY29uc3QgZmlsdGVyZWRQYXRocyA9IHBhdGhzLmZpbHRlcigocGFydDogc3RyaW5nKSA9PiB7XHJcbiAgICAgIHJldHVybiBwYXJ0ICE9PSAnJztcclxuICAgIH0pO1xyXG4gICAgcmV0dXJuIHRoaXMuYmluZGluZ0RhdGEuZ2V0VmFsdWUoZmlsdGVyZWRQYXRocyk7XHJcbiAgfVxyXG4gIC8qKlxyXG4gICAqIOaIv+mXtOWIl+ihqGFwaSB1cmxcclxuICAgKi9cclxuICBASW5wdXQoKSB1cmw6IHN0cmluZyA9IG51bGw7XHJcbiAgLyoqXHJcbiAgICogaHR0cCBtZXRob2QsIGRlZmF1bHQgUFVUXHJcbiAgICovXHJcbiAgQElucHV0KCkgbWV0aG9kOiBzdHJpbmcgPSAnUFVUJztcclxuICBASW5wdXQoKSBzdGFydERhdGVWYXJpYWJsZTogc3RyaW5nID0gJ3N0YXJ0RGF0ZSc7XHJcbiAgQElucHV0KCkgZW5kRGF0ZVZhcmlhYmxlOiBzdHJpbmcgPSAnZW5kRGF0ZSc7XHJcbiAgQElucHV0KCkgdmlld1R5cGVWYXJpYWJsZTogc3RyaW5nID0gJ3ZpZXdUeXBlJztcclxuXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBpbmplY3RvcjogSW5qZWN0b3IsIHByaXZhdGUgZnJhbWVDb250ZXh0OiBGcmFtZUNvbnRleHQsIHByaXZhdGUgY2FsZW5kYXJDb21wb25lbnQ6IEFwcG9pbnRtZW50Q2FsZW5kYXJDb21wb25lbnQpIHsgfVxyXG5cclxuICBuZ09uSW5pdCgpOiB2b2lkIHtcclxuICAgIHRoaXMubG9hZFBsYWNlbWVudHMoKTtcclxuICAgIHRoaXMucmVnaXN0ZXJCaW5kaW5nRGF0YUNoYW5nZUV2ZW50KCk7XHJcbiAgfVxyXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkIHtcclxuXHJcbiAgfVxyXG4gIG5nT25EZXN0cm95KCk6IHZvaWQge1xyXG4gICAgdGhpcy51blJlZ2lzdGVyQmluZGluZ0RhdGFDaGFuZ2VFdmVudCgpO1xyXG4gIH1cclxuICBwcml2YXRlIGJpbmREYXRhKGNoYW5nZTogQ2hhbmdlKSB7XHJcbiAgICAvLyDlho10b0pTT05cclxuICAgIGxldCBkYXRhOiBhbnkgPSB0aGlzLmJpbmRpbmdMaXN0LnRvSlNPTigpO1xyXG4gICAgdGhpcy5jYWxlbmRhckNvbXBvbmVudC5sb2FkUmVzZXJ2ZURhdGEoZGF0YSk7XHJcbiAgfVxyXG4gIHByaXZhdGUgb25CaW5kaW5nRGF0YUNoYW5nZShjaGFuZ2U6IENoYW5nZSkge1xyXG4gICAgdGhpcy5iaW5kRGF0YShjaGFuZ2UpO1xyXG4gICAgdGhpcy51cGRhdGVTZWxlY3RlZFJvdyhjaGFuZ2UpO1xyXG4gIH1cclxuICBwcml2YXRlIHJlZ2lzdGVyQmluZGluZ0RhdGFDaGFuZ2VFdmVudCgpIHtcclxuICAgIHRoaXMuYmluZGluZ0RhdGFDaGFuZ2VFdmVudCA9IHRoaXMuYmluZGluZ0RhdGEuY2hhbmdlcy5zdWJzY3JpYmUoKGNoYW5nZTogQ2hhbmdlKSA9PiB7XHJcbiAgICAgIHRoaXMub25CaW5kaW5nRGF0YUNoYW5nZShjaGFuZ2UpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG4gIC8qKlxyXG4gICAqIOWPlua2iGJpbmRpbmdkYXRh5Y+Y5YyW6K6i6ZiFXHJcbiAgICovXHJcbiAgcHJpdmF0ZSB1blJlZ2lzdGVyQmluZGluZ0RhdGFDaGFuZ2VFdmVudCgpIHtcclxuICAgIGlmICh0aGlzLmJpbmRpbmdEYXRhQ2hhbmdlRXZlbnQgJiYgdHlwZW9mICh0aGlzLmJpbmRpbmdEYXRhQ2hhbmdlRXZlbnQudW5zdWJzY3JpYmUpID09PSAnZnVuY3Rpb24nKSB7XHJcbiAgICAgIHRoaXMuYmluZGluZ0RhdGFDaGFuZ2VFdmVudC51bnN1YnNjcmliZSgpO1xyXG4gICAgfVxyXG4gIH1cclxuICBwcml2YXRlIGxvYWRQbGFjZW1lbnRzKCkge1xyXG4gICAgaWYgKCF0aGlzLnVybCkge1xyXG4gICAgICBjb25zb2xlLmxvZygn5peg5rOV5Yqg6L295oi/6Ze05L+h5oGv77yM6K+36YWN572u5oi/6Ze05YiX6KGoYXBp5Zyw5Z2AJyk7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIGNvbnN0IHJlcXVlc3RJbmZvID0gdGhpcy5yZXN0U2VydmljZSgpLmJ1aWxkUmVxdWVzdEluZm8oKTtcclxuICAgIGNvbnN0IG9wdGlvbnMgPSB7XHJcbiAgICAgIGJvZHk6IHtcclxuICAgICAgICByZXF1ZXN0SW5mb1xyXG4gICAgICB9XHJcbiAgICB9O1xyXG4gICAgdGhpcy5yZXN0U2VydmljZSgpLnJlcXVlc3QodGhpcy51cmwsIHRoaXMubWV0aG9kLCBudWxsLCBvcHRpb25zKS5zdWJzY3JpYmUoKHJldHVyblZhbHVlOiBhbnkpID0+IHtcclxuICAgICAgdGhpcy5iaW5kUGxhY2VtZW50cyhyZXR1cm5WYWx1ZSk7XHJcbiAgICB9KTtcclxuICB9XHJcbiAgcHJpdmF0ZSBiaW5kUGxhY2VtZW50cyhwbGFjbWVudHM6IGFueSkge1xyXG4gICAgdGhpcy5jYWxlbmRhckNvbXBvbmVudC5sb2FkUGxhY2VEYXRhKHBsYWNtZW50cyk7XHJcbiAgfVxyXG4gIHByaXZhdGUgdXBkYXRlU3RhdGUoc3RhcnREYXRlOiBzdHJpbmcsIGVuZERhdGU6IHN0cmluZywgdmlld1R5cGU6IHN0cmluZykge1xyXG4gICAgdGhpcy52aWV3TW9kZWwudWlTdGF0ZS5zZXRQcm9wZXJ0eVZhbHVlKHRoaXMuc3RhcnREYXRlVmFyaWFibGUsIHN0YXJ0RGF0ZSk7XHJcbiAgICB0aGlzLnZpZXdNb2RlbC51aVN0YXRlLnNldFByb3BlcnR5VmFsdWUodGhpcy5lbmREYXRlVmFyaWFibGUsIGVuZERhdGUpO1xyXG4gICAgdGhpcy52aWV3TW9kZWwudWlTdGF0ZS5zZXRQcm9wZXJ0eVZhbHVlKHRoaXMudmlld1R5cGVWYXJpYWJsZSwgdmlld1R5cGUpO1xyXG4gIH1cclxuICBwcml2YXRlIHVwZGF0ZVNlbGVjdGVkUm93KGNoYW5nZT86IENoYW5nZSkge1xyXG4gICAgaWYgKCF0aGlzLmJpbmRpbmdMaXN0IHx8ICF0aGlzLmJpbmRpbmdMaXN0LmN1cnJlbnRJZCkge1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICAvLyDpobXnoIHliIfmjaLml7bkuI3miafooYzlvZPliY3ooYzliIfmjaJcclxuICAgIGlmIChjaGFuZ2UgJiYgY2hhbmdlLnR5cGUgPT09IENoYW5nZVR5cGUuUGFnaW5hdGlvbkluZm9DaGFuZ2UpIHtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgaWYgKHRoaXMudmlld01vZGVsICYmIHRoaXMudmlld01vZGVsLmZyYW1lQ29udGV4dC5iaW5kaW5nRGF0YS5yb3dTZWxlY3RlZEV2ZW50U3VzcGVuZCA9PT0gdHJ1ZSkge1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBjb25zdCBpZCA9IHRoaXMuY2FsZW5kYXJDb21wb25lbnQuc2VsZWN0ZWRJZDtcclxuICAgIGNvbnN0IGN1cnJlbnRJZCA9IHRoaXMuYmluZGluZ0xpc3QuY3VycmVudElkO1xyXG4gICAgLy8gZ3JpZOW9k+WJjeihjOS4jmJpbmdpbmdMaXN05b2T5YmN6KGM5LiA6Ie077yM5peg6aG75YiH5o2iXHJcbiAgICBpZiAoaWQgPT09IGN1cnJlbnRJZCkge1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICB0aGlzLnNlbGVjdENhbGVuZGFyUm93KHRoaXMuYmluZGluZ0xpc3QuY3VycmVudElkKTtcclxuICB9XHJcbiAgcHJpdmF0ZSBzZWxlY3RDYWxlbmRhclJvdyhpZDogc3RyaW5nKSB7XHJcbiAgICB0aGlzLmNhbGVuZGFyQ29tcG9uZW50LnNlbGVjdEl0ZW0oaWQpO1xyXG4gIH1cclxuICBASG9zdExpc3RlbmVyKCdmaWx0ZXJDaGFuZ2UnLCBbJyRldmVudCddKVxyXG4gIHB1YmxpYyBmaWx0ZXJDaGFuZ2VkKGV2ZW50OiBhbnkpIHtcclxuICAgIGNvbnN0IHsgZGF0ZVZhbHVlID0gbnVsbCwgcGxhY2UgPSBudWxsLCB2aWV3VHlwZSA9IG51bGwgfSA9IGV2ZW50IHx8IHt9O1xyXG4gICAgbGV0IHN0YXJ0RGF0ZSA9IG51bGw7XHJcbiAgICBsZXQgZW5kRGF0ZSA9IG51bGw7XHJcbiAgICBpZiAoIWRhdGVWYWx1ZSkge1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBpZiAodmlld1R5cGUgPT09IFZpZXdUeXBlLmRheSkge1xyXG4gICAgICBzdGFydERhdGUgPSBgJHtkYXRlVmFsdWV9IDAwOjAwOjAwYDtcclxuICAgICAgZW5kRGF0ZSA9IGAke2RhdGVWYWx1ZX0gMjM6NTk6NTlgO1xyXG4gICAgfSBlbHNlIGlmICh2aWV3VHlwZSA9PT0gVmlld1R5cGUud2VlayAmJiBkYXRlVmFsdWUuaW5kZXhPZignficpICE9PSAtMSkge1xyXG4gICAgICBjb25zdCBzZWN0aW9ucyA9IGRhdGVWYWx1ZS5zcGxpdCgnficpO1xyXG4gICAgICBzdGFydERhdGUgPSBgJHtzZWN0aW9uc1swXX0gMDA6MDA6MDBgO1xyXG4gICAgICBlbmREYXRlID0gYCR7c2VjdGlvbnNbMV19IDIzOjU5OjU5YDtcclxuICAgIH1cclxuICAgIHRoaXMudXBkYXRlU3RhdGUoc3RhcnREYXRlLCBlbmREYXRlLCB2aWV3VHlwZSk7XHJcbiAgfVxyXG4gIHByb3RlY3RlZCBzZXRTZWxlY3Rpb25JZFRvQmluZGluZ0RhdGEoaWQ6IHN0cmluZyk6IHZvaWQge1xyXG4gICAgLy8g5aaC5p6c5b2T5YmN6KGM5LiN5a2Y5Zyo77yM5YiZ5by65Yi26K6+572uXHJcbiAgICBpZiAodGhpcy5iaW5kaW5nTGlzdC5jdXJyZW50SWQgIT09IGlkKSB7XHJcbiAgICAgIHRoaXMuYmluZGluZ0xpc3Quc2V0Q3VycmVudElkKGlkLCB0cnVlKTtcclxuICAgIH1cclxuICB9XHJcbiAgQEhvc3RMaXN0ZW5lcignc2VsZWN0Q2hhbmdlJywgWyckZXZlbnQnXSlcclxuICBwdWJsaWMgc2VsZWN0Q2hhbmdlKGV2ZW50KSB7XHJcbiAgICBjb25zdCB7IGl0ZW06IHsgaWQgPSBudWxsIH0gfSA9IGV2ZW50O1xyXG4gICAgdGhpcy5zZXRTZWxlY3Rpb25JZFRvQmluZGluZ0RhdGEoaWQpO1xyXG4gIH1cclxufSJdfQ==