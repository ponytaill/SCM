import { Injectable } from '@angular/core';
import * as Mousetrap from 'mousetrap';
/**
 * 快捷键服务
 * @scope FormModule
 */
var KeybindingService = /** @class */ (function () {
    function KeybindingService() {
        this.keyMap = new Map();
        this.bindingProvider = Mousetrap.default;
        this.ready = true;
    }
    /**
     * 对视图模型设置的快捷键进行绑定处理
     * @param viewModel 视图模型
     */
    KeybindingService.prototype.bind = function (viewModel) {
        var _this = this;
        viewModel.keybindingMap.forEach(function (keyBinding, method) {
            _this.register(keyBinding, function () {
                return viewModel[method]();
            });
        });
    };
    /**
     * 注册快捷键
     * @param binding 键盘绑定信息
     * @param handler 响应事件
     */
    KeybindingService.prototype.register = function (binding, handler) {
        var combo = this._getCombo(binding);
        if (combo) {
            this.keyMap.set(combo, handler);
            if (binding.ctrlKey && binding.altKey && !binding.shiftKey) {
                // 实际发现，ctrl+alt组合，只能触发keyup事件
                this.bindingProvider.bind(combo, this._dispatch.bind(this), 'keyup');
            }
            else {
                this.bindingProvider.bind(combo, this._dispatch.bind(this));
            }
        }
    };
    /**
     * 取消快捷键注册
     * @param binding 键盘绑定信息
     */
    KeybindingService.prototype.unregister = function (binding) {
        var combo = this._getCombo(binding);
        if (combo) {
            this.keyMap.delete(combo);
            this.bindingProvider.unbind(combo);
        }
    };
    KeybindingService.prototype._dispatch = function (e) {
        var _this = this;
        if (e.repeat)
            return false;
        if (this.ready) {
            var combo = this._getCombo(e);
            if (combo && this.keyMap.has(combo)) {
                this.ready = false;
                this.keyMap.get(combo)().subscribe(function () {
                    _this.ready = true;
                }, function (error) {
                    _this.ready = true;
                }, function () {
                    _this.ready = true;
                });
            }
        }
        return false;
    };
    /**
     * 返回ctrl+shift+alt+a形式的组合字符串，全部为小写
     * @param keyInfo
     */
    KeybindingService.prototype._getCombo = function (keyInfo) {
        var key = keyInfo.key.toLowerCase();
        if (key.length != 1 || key.charCodeAt(0) < 97 /* a */ || key.charCodeAt(0) > 122 /* z */) {
            console.warn("快捷键字母形式为a-z");
            return null;
        }
        var combo = (keyInfo.ctrlKey ? 'ctrl+' : '')
            + (keyInfo.shiftKey ? 'shift+' : '')
            + (keyInfo.altKey ? 'alt+' : '')
            + (keyInfo.metaKey ? 'meta+' : '')
            + key;
        if (combo.length == 1) {
            console.warn("快捷键至少包含一个Modifier键");
            return null;
        }
        return combo;
    };
    KeybindingService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    KeybindingService.ctorParameters = function () { return []; };
    return KeybindingService;
}());
export { KeybindingService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoia2V5YmluZGluZy1zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy9jb21tYW5kLXNlcnZpY2VzLyIsInNvdXJjZXMiOlsibGliL2tleWJpbmRpbmctc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTNDLE9BQU8sS0FBSyxTQUFTLE1BQU0sV0FBVyxDQUFDO0FBdUV2Qzs7O0dBR0c7QUFDSDtJQU1FO1FBQ0UsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLEdBQUcsRUFBaUMsQ0FBQztRQUN2RCxJQUFJLENBQUMsZUFBZSxHQUFHLFNBQVMsQ0FBQyxPQUFPLENBQUM7UUFDekMsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUM7SUFDcEIsQ0FBQztJQUVEOzs7T0FHRztJQUNJLGdDQUFJLEdBQVgsVUFBWSxTQUFvQjtRQUFoQyxpQkFNQztRQUxDLFNBQVMsQ0FBQyxhQUFhLENBQUMsT0FBTyxDQUFDLFVBQUMsVUFBVSxFQUFFLE1BQU07WUFDakQsS0FBSSxDQUFDLFFBQVEsQ0FBQyxVQUFVLEVBQUU7Z0JBQ3hCLE9BQU8sU0FBUyxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUM7WUFDN0IsQ0FBQyxDQUFDLENBQUM7UUFDTCxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRjs7OztPQUlHO0lBQ0ssb0NBQVEsR0FBZixVQUFnQixPQUFtQixFQUFFLE9BQThCO1FBQ2pFLElBQUksS0FBSyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDcEMsSUFBSSxLQUFLLEVBQUU7WUFDVCxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxLQUFLLEVBQUUsT0FBTyxDQUFDLENBQUM7WUFDaEMsSUFBSSxPQUFPLENBQUMsT0FBTyxJQUFJLE9BQU8sQ0FBQyxNQUFNLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxFQUFFO2dCQUMxRCw4QkFBOEI7Z0JBQzlCLElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxPQUFPLENBQUMsQ0FBQzthQUN0RTtpQkFBTTtnQkFDTCxJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQzthQUM3RDtTQUNGO0lBQ0gsQ0FBQztJQUVEOzs7T0FHRztJQUNJLHNDQUFVLEdBQWpCLFVBQWtCLE9BQW1CO1FBQ25DLElBQUksS0FBSyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDcEMsSUFBSSxLQUFLLEVBQUU7WUFDVCxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUMxQixJQUFJLENBQUMsZUFBZSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztTQUNwQztJQUNILENBQUM7SUFFTyxxQ0FBUyxHQUFqQixVQUFrQixDQUFnQjtRQUFsQyxpQkFnQkM7UUFmQyxJQUFJLENBQUMsQ0FBQyxNQUFNO1lBQUUsT0FBTyxLQUFLLENBQUM7UUFDM0IsSUFBSSxJQUFJLENBQUMsS0FBSyxFQUFFO1lBQ2QsSUFBSSxLQUFLLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUM5QixJQUFJLEtBQUssSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsRUFBRTtnQkFDbkMsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7Z0JBQ25CLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsU0FBUyxDQUFDO29CQUNqQyxLQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQztnQkFDcEIsQ0FBQyxFQUFFLFVBQUMsS0FBSztvQkFDUCxLQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQztnQkFDcEIsQ0FBQyxFQUFFO29CQUNELEtBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDO2dCQUNwQixDQUFDLENBQUMsQ0FBQzthQUNKO1NBQ0Y7UUFDRCxPQUFPLEtBQUssQ0FBQztJQUNmLENBQUM7SUFFRjs7O09BR0c7SUFDTSxxQ0FBUyxHQUFqQixVQUFrQixPQUFtQztRQUNuRCxJQUFJLEdBQUcsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQ3BDLElBQUksR0FBRyxDQUFDLE1BQU0sSUFBSSxDQUFDLElBQUksR0FBRyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsYUFBYSxJQUFJLEdBQUcsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLGNBQWEsRUFBRTtZQUN2RixPQUFPLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDO1lBQzVCLE9BQU8sSUFBSSxDQUFDO1NBQ2I7UUFDRCxJQUFJLEtBQUssR0FBRyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO2NBQ3hDLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7Y0FDbEMsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztjQUM5QixDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO2NBQ2hDLEdBQUcsQ0FBQztRQUVSLElBQUksS0FBSyxDQUFDLE1BQU0sSUFBSSxDQUFDLEVBQUU7WUFDckIsT0FBTyxDQUFDLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDO1lBQ25DLE9BQU8sSUFBSSxDQUFDO1NBQ2I7UUFFRCxPQUFPLEtBQUssQ0FBQztJQUNmLENBQUM7O2dCQTlGRixVQUFVOzs7O0lBK0ZYLHdCQUFDO0NBQUEsQUEvRkQsSUErRkM7U0E5RlksaUJBQWlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgS2V5YmluZGluZywgVmlld01vZGVsIH0gZnJvbSAnQGZhcnJpcy9kZXZraXQnXG5pbXBvcnQgKiBhcyBNb3VzZXRyYXAgZnJvbSAnbW91c2V0cmFwJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcblxuY29uc3QgZW51bSBDaGFyQ29kZSB7XG5cbiAgRGlnaXQwID0gNDgsXG4gIERpZ2l0MSA9IDQ5LFxuICBEaWdpdDIgPSA1MCxcbiAgRGlnaXQzID0gNTEsXG4gIERpZ2l0NCA9IDUyLFxuICBEaWdpdDUgPSA1MyxcbiAgRGlnaXQ2ID0gNTQsXG4gIERpZ2l0NyA9IDU1LFxuICBEaWdpdDggPSA1NixcbiAgRGlnaXQ5ID0gNTcsXG5cbiAgQSA9IDY1LFxuICBCID0gNjYsXG4gIEMgPSA2NyxcbiAgRCA9IDY4LFxuICBFID0gNjksXG4gIEYgPSA3MCxcbiAgRyA9IDcxLFxuICBIID0gNzIsXG4gIEkgPSA3MyxcbiAgSiA9IDc0LFxuICBLID0gNzUsXG4gIEwgPSA3NixcbiAgTSA9IDc3LFxuICBOID0gNzgsXG4gIE8gPSA3OSxcbiAgUCA9IDgwLFxuICBRID0gODEsXG4gIFIgPSA4MixcbiAgUyA9IDgzLFxuICBUID0gODQsXG4gIFUgPSA4NSxcbiAgViA9IDg2LFxuICBXID0gODcsXG4gIFggPSA4OCxcbiAgWSA9IDg5LFxuICBaID0gOTAsXG5cbiAgYSA9IDk3LFxuICBiID0gOTgsXG4gIGMgPSA5OSxcbiAgZCA9IDEwMCxcbiAgZSA9IDEwMSxcbiAgZiA9IDEwMixcbiAgZyA9IDEwMyxcbiAgaCA9IDEwNCxcbiAgaSA9IDEwNSxcbiAgaiA9IDEwNixcbiAgayA9IDEwNyxcbiAgbCA9IDEwOCxcbiAgbSA9IDEwOSxcbiAgbiA9IDExMCxcbiAgbyA9IDExMSxcbiAgcCA9IDExMixcbiAgcSA9IDExMyxcbiAgciA9IDExNCxcbiAgcyA9IDExNSxcbiAgdCA9IDExNixcbiAgdSA9IDExNyxcbiAgdiA9IDExOCxcbiAgdyA9IDExOSxcbiAgeCA9IDEyMCxcbiAgeSA9IDEyMSxcbiAgeiA9IDEyMlxufVxuXG4vKipcbiAqIOW/q+aNt+mUruacjeWKoVxuICogQHNjb3BlIEZvcm1Nb2R1bGVcbiAqL1xuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIEtleWJpbmRpbmdTZXJ2aWNlIHtcbiAgcHJpdmF0ZSBrZXlNYXA6IE1hcDxTdHJpbmcsICgpID0+IE9ic2VydmFibGU8YW55Pj47XG4gIHByaXZhdGUgYmluZGluZ1Byb3ZpZGVyOiBNb3VzZXRyYXA7XG4gIHByaXZhdGUgcmVhZHk6IGJvb2xlYW47XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5rZXlNYXAgPSBuZXcgTWFwPFN0cmluZywgKCkgPT4gT2JzZXJ2YWJsZTxhbnk+PigpO1xuICAgIHRoaXMuYmluZGluZ1Byb3ZpZGVyID0gTW91c2V0cmFwLmRlZmF1bHQ7XG4gICAgdGhpcy5yZWFkeSA9IHRydWU7XG4gIH1cblxuICAvKipcbiAgICog5a+56KeG5Zu+5qih5Z6L6K6+572u55qE5b+r5o236ZSu6L+b6KGM57uR5a6a5aSE55CGXG4gICAqIEBwYXJhbSB2aWV3TW9kZWwg6KeG5Zu+5qih5Z6LXG4gICAqL1xuICBwdWJsaWMgYmluZCh2aWV3TW9kZWw6IFZpZXdNb2RlbCkge1xuICAgIHZpZXdNb2RlbC5rZXliaW5kaW5nTWFwLmZvckVhY2goKGtleUJpbmRpbmcsIG1ldGhvZCkgPT4ge1xuICAgICAgdGhpcy5yZWdpc3RlcihrZXlCaW5kaW5nLCAoKSA9PiB7XG4gICAgICAgIHJldHVybiB2aWV3TW9kZWxbbWV0aG9kXSgpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuXHQvKipcblx0ICog5rOo5YaM5b+r5o236ZSuXG5cdCAqIEBwYXJhbSBiaW5kaW5nIOmUruebmOe7keWumuS/oeaBr1xuXHQgKiBAcGFyYW0gaGFuZGxlciDlk43lupTkuovku7Zcblx0ICovXG4gIHB1YmxpYyByZWdpc3RlcihiaW5kaW5nOiBLZXliaW5kaW5nLCBoYW5kbGVyOiAoKSA9PiBPYnNlcnZhYmxlPGFueT4pIHtcbiAgICB2YXIgY29tYm8gPSB0aGlzLl9nZXRDb21ibyhiaW5kaW5nKTtcbiAgICBpZiAoY29tYm8pIHtcbiAgICAgIHRoaXMua2V5TWFwLnNldChjb21ibywgaGFuZGxlcik7XG4gICAgICBpZiAoYmluZGluZy5jdHJsS2V5ICYmIGJpbmRpbmcuYWx0S2V5ICYmICFiaW5kaW5nLnNoaWZ0S2V5KSB7XG4gICAgICAgIC8vIOWunumZheWPkeeOsO+8jGN0cmwrYWx057uE5ZCI77yM5Y+q6IO96Kem5Y+Ra2V5dXDkuovku7ZcbiAgICAgICAgdGhpcy5iaW5kaW5nUHJvdmlkZXIuYmluZChjb21ibywgdGhpcy5fZGlzcGF0Y2guYmluZCh0aGlzKSwgJ2tleXVwJyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLmJpbmRpbmdQcm92aWRlci5iaW5kKGNvbWJvLCB0aGlzLl9kaXNwYXRjaC5iaW5kKHRoaXMpKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvKipcbiAgICog5Y+W5raI5b+r5o236ZSu5rOo5YaMXG4gICAqIEBwYXJhbSBiaW5kaW5nIOmUruebmOe7keWumuS/oeaBryBcbiAgICovXG4gIHB1YmxpYyB1bnJlZ2lzdGVyKGJpbmRpbmc6IEtleWJpbmRpbmcpIHtcbiAgICB2YXIgY29tYm8gPSB0aGlzLl9nZXRDb21ibyhiaW5kaW5nKTtcbiAgICBpZiAoY29tYm8pIHtcbiAgICAgIHRoaXMua2V5TWFwLmRlbGV0ZShjb21ibyk7XG4gICAgICB0aGlzLmJpbmRpbmdQcm92aWRlci51bmJpbmQoY29tYm8pO1xuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgX2Rpc3BhdGNoKGU6IEtleWJvYXJkRXZlbnQpOiBib29sZWFuIHtcbiAgICBpZiAoZS5yZXBlYXQpIHJldHVybiBmYWxzZTtcbiAgICBpZiAodGhpcy5yZWFkeSkge1xuICAgICAgdmFyIGNvbWJvID0gdGhpcy5fZ2V0Q29tYm8oZSk7XG4gICAgICBpZiAoY29tYm8gJiYgdGhpcy5rZXlNYXAuaGFzKGNvbWJvKSkge1xuICAgICAgICB0aGlzLnJlYWR5ID0gZmFsc2U7XG4gICAgICAgIHRoaXMua2V5TWFwLmdldChjb21ibykoKS5zdWJzY3JpYmUoKCkgPT4ge1xuICAgICAgICAgIHRoaXMucmVhZHkgPSB0cnVlO1xuICAgICAgICB9LCAoZXJyb3IpID0+IHtcbiAgICAgICAgICB0aGlzLnJlYWR5ID0gdHJ1ZTtcbiAgICAgICAgfSwgKCkgPT4ge1xuICAgICAgICAgIHRoaXMucmVhZHkgPSB0cnVlO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cblx0LyoqXG5cdCAqIOi/lOWbnmN0cmwrc2hpZnQrYWx0K2HlvaLlvI/nmoTnu4TlkIjlrZfnrKbkuLLvvIzlhajpg6jkuLrlsI/lhplcblx0ICogQHBhcmFtIGtleUluZm8gXG5cdCAqL1xuICBwcml2YXRlIF9nZXRDb21ibyhrZXlJbmZvOiBLZXliaW5kaW5nIHwgS2V5Ym9hcmRFdmVudCk6IFN0cmluZyB8IG51bGwge1xuICAgIHZhciBrZXkgPSBrZXlJbmZvLmtleS50b0xvd2VyQ2FzZSgpO1xuICAgIGlmIChrZXkubGVuZ3RoICE9IDEgfHwga2V5LmNoYXJDb2RlQXQoMCkgPCBDaGFyQ29kZS5hIHx8IGtleS5jaGFyQ29kZUF0KDApID4gQ2hhckNvZGUueikge1xuICAgICAgY29uc29sZS53YXJuKFwi5b+r5o236ZSu5a2X5q+N5b2i5byP5Li6YS16XCIpO1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHZhciBjb21ibyA9IChrZXlJbmZvLmN0cmxLZXkgPyAnY3RybCsnIDogJycpXG4gICAgICArIChrZXlJbmZvLnNoaWZ0S2V5ID8gJ3NoaWZ0KycgOiAnJylcbiAgICAgICsgKGtleUluZm8uYWx0S2V5ID8gJ2FsdCsnIDogJycpXG4gICAgICArIChrZXlJbmZvLm1ldGFLZXkgPyAnbWV0YSsnIDogJycpXG4gICAgICArIGtleTtcblxuICAgIGlmIChjb21iby5sZW5ndGggPT0gMSkge1xuICAgICAgY29uc29sZS53YXJuKFwi5b+r5o236ZSu6Iez5bCR5YyF5ZCr5LiA5LiqTW9kaWZpZXLplK5cIik7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICByZXR1cm4gY29tYm87XG4gIH1cbn0iXX0=