{"version":3,"file":"farris-extend-fileupload-adapt-unifile.js","sources":["ng://@farris/extend-fileupload-adapt-unifile/lib/ffileupload-adapt-unifile.config.ts","ng://@farris/extend-fileupload-adapt-unifile/lib/ffilepreview-adapt-unifile.service.ts","ng://@farris/extend-fileupload-adapt-unifile/lib/ffilepreview-adapt-unifile-simple.directive.ts","ng://@farris/extend-fileupload-adapt-unifile/lib/ffilepreview-adapt-seeimg/ffilepreview-adapt-seeimg.component.ts","ng://@farris/extend-fileupload-adapt-unifile/lib/ffileupload-adapt-unifile.service.ts","ng://@farris/extend-fileupload-adapt-unifile/lib/ffilepreview-adapt-unifile.directive.ts","ng://@farris/extend-fileupload-adapt-unifile/lib/ffileupload-adapt-unifile.module.ts"],"sourcesContent":["import { Injectable, Optional, InjectionToken, Inject, } from '@angular/core';\r\n\r\nexport interface FFileUploadAdaptUnifileConfig {\r\n    rootId?: string;\r\n    formId?: string;\r\n    mode?: number;//0 代表正式，1代表临时\r\n    options?:any;\r\n}\r\nexport const FFileUploadAdaptUnifileConfigToken = new InjectionToken<FFileUploadAdaptUnifileConfig>('MFFileUploadAdaptUnifileConfig');\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class FFileUploadAdaptUnifileConfigService {\r\n    private config = {\r\n        rootId: '',\r\n        formId: '',\r\n        mode: 0\r\n    } as FFileUploadAdaptUnifileConfig;\r\n    \r\n    constructor(@Optional() @Inject(FFileUploadAdaptUnifileConfigToken) exConfig: FFileUploadAdaptUnifileConfig) {\r\n        if (exConfig) {\r\n            Object.assign(this.config, exConfig);\r\n        }\r\n    }\r\n    /**\r\n     * 获取config属性的值\r\n     */\r\n    getConfig() {\r\n        return this.config;\r\n    }\r\n    /**\r\n     * 设置config的属性值\r\n     * @param key \r\n     * @param value \r\n     */\r\n    setConfig(key, value) {\r\n        this.config[key] = value;\r\n    }\r\n};","import { Injectable, Optional } from '@angular/core';\r\nimport { FUploadFileExtend } from '@farris/extend-file-upload';\r\nimport { NotifyService } from '@farris/ui-notify';\r\nimport { FileViewerService } from '@gsp-svc/file-viewer';\r\nimport { DownloadService } from '@gsp-svc/formdoc-upload';\r\nimport { FFileUploadAdaptUnifileConfigService, FFileUploadAdaptUnifileConfig } from './ffileupload-adapt-unifile.config';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class FfilepreviewAdaptUnifileService {\r\n    extendData;// 暂时用于简单合并\r\n    private previewExtendServerConfig: FFileUploadAdaptUnifileConfig = null;\r\n    notifySer: NotifyService = null;\r\n    constructor(private fileviewSer: FileViewerService, private configSer: FFileUploadAdaptUnifileConfigService, @Optional() private downloadSer: DownloadService) {\r\n        this.extendData = this.configSer.getConfig();\r\n        this.notifySer = this.fileviewSer['injector'].get(NotifyService, null);\r\n    }\r\n    /**\r\n     * 返回最终属性值\r\n     * @param key \r\n     * @param configValue \r\n     * @param extendValue \r\n     */\r\n    private getFinallyConfig(key, extendValue) {\r\n        if (extendValue && extendValue.hasOwnProperty(key)) {\r\n            return extendValue[key];\r\n        }\r\n        // 避免下载等其他指令再传入扩展配置\r\n        if (this.previewExtendServerConfig && this.previewExtendServerConfig.hasOwnProperty(key)) {\r\n            return this.previewExtendServerConfig[key];\r\n        }\r\n        // 来自module中forRoot的配置\r\n        if (this.extendData.hasOwnProperty(key)) {\r\n            return this.extendData[key];\r\n        }\r\n           return null;\r\n        \r\n    }\r\n    /**\r\n     * 预览单个文件\r\n     * @param info \r\n     */\r\n    previewFile(info: FUploadFileExtend, extendService: FFileUploadAdaptUnifileConfig) {\r\n        return this.previewFileList([info], extendService);\r\n    }\r\n    /**\r\n     * 预览整个列表\r\n     * @param infos \r\n     */\r\n    previewFileList(infos: FUploadFileExtend[], extendService: FFileUploadAdaptUnifileConfig) {\r\n        //metadataIdList: string[]\r\n        let rootId = this.getFinallyConfig('rootId', extendService);\r\n        let metadataIdList = [];\r\n        infos.forEach(item => {\r\n            metadataIdList.push(item.extend['metadataId']);\r\n        });\r\n        let options = this.getFinallyConfig('options', extendService);\r\n        if(options){\r\n            return this.fileviewSer.viewerFileList(metadataIdList, rootId, options);\r\n        }else{\r\n            return this.fileviewSer.viewerFileList(metadataIdList, rootId);\r\n        }\r\n    }\r\n    /**\r\n     * 下载附件\r\n     * @param info \r\n     */\r\n    downloadFile(info: FUploadFileExtend, extendService: FFileUploadAdaptUnifileConfig) {\r\n        if (!info.id) {\r\n            throw new Error('请设置要下载的附件');\r\n        }\r\n        window.open(this.getImgSrc(info, extendService));\r\n    }\r\n    /**\r\n   * 下载附件\r\n   * @param info \r\n   */\r\n    multiDownloadFiles(infos: FUploadFileExtend[], extendService: FFileUploadAdaptUnifileConfig) {\r\n        //metadataIdList: string[]\r\n        if (infos.length == 1) {\r\n            this.downloadFile(infos[0], extendService);\r\n        } else {\r\n            let rootId = this.getFinallyConfig('rootId', extendService);\r\n            let metadataIdList = [];\r\n            infos.forEach(item => {\r\n                metadataIdList.push(item.extend['metadataId']);\r\n            });\r\n            let url = this.downloadSer.getMultipleDownloadUrl(JSON.stringify(metadataIdList), rootId);\r\n            window.open(url);\r\n        }\r\n    }\r\n    multiDownloadFilesWidthName(infos: FUploadFileExtend[], name = \"\", extendService: FFileUploadAdaptUnifileConfig) {\r\n        //metadataIdList: string[]\r\n        if (infos.length == 1) {\r\n            this.downloadFile(infos[0], extendService);\r\n        } else {\r\n            let rootId = this.getFinallyConfig('rootId', extendService);\r\n            let metadataIdList = [];\r\n            infos.forEach(item => {\r\n                metadataIdList.push(item.extend['metadataId']);\r\n            });\r\n            let url = this.downloadSer.getMultipleDownloadUrlWithName(JSON.stringify(metadataIdList), rootId, name);\r\n            window.open(url);\r\n        }\r\n    }\r\n    /**\r\n     * 获取下载链接\r\n    */\r\n    getImgSrc(info: FUploadFileExtend, extendService: FFileUploadAdaptUnifileConfig) {\r\n        if (!info.id) {\r\n            throw new Error('请设置要下载的附件');\r\n        }\r\n        let url = '';\r\n        let attachId = info.extend['metadataId'];\r\n        let rootId = this.getFinallyConfig('rootId', extendService);\r\n        // 文档服务服务单元名进行规范性调整，由document修改为dfs\r\n        if (this.downloadSer) {\r\n            if (rootId) {\r\n                url = this.downloadSer.getDownloadUrl(attachId, rootId);\r\n            }\r\n        } else if (rootId) {\r\n            console.warn('因为安全问题，附件下载提供安全校验机制，附件下载功能需要重新编译')\r\n            url = `/api/runtime/dfs/v1.0/formdoc/filecontent?metadataid=${attachId}&rootid=${rootId}`;\r\n        }\r\n        return url;\r\n    }\r\n    /**\r\n     * 根据预览指令的扩展配置获取\r\n     * @param value \r\n     */\r\n    setPreviwExtendServerConfig(value) {\r\n        this.previewExtendServerConfig = value;\r\n    }\r\n    getPreviewExtendServerConfig() {\r\n        return this.previewExtendServerConfig;\r\n    }\r\n\r\n}","import { Directive, HostListener, Input } from '@angular/core';\r\nimport { FfilepreviewAdaptUnifileService } from './ffilepreview-adapt-unifile.service';\r\n\r\n@Directive({\r\n    selector: '[fFileAdaptPreviewFile]'\r\n})\r\nexport class FFileAdaptPreviewFileDirective {\r\n    // 附件信息\r\n    @Input('fFileAdaptPreviewFile') fileInfo;\r\n    /**\r\n     * 捕获预览事件\r\n     * @param fileInfo \r\n     */\r\n    @HostListener('click', ['$event'])\r\n    filePreviewEventHandler() {\r\n        if (!this.fileInfo || this.viewDisabled) {\r\n            return;\r\n        }\r\n        this.previewSer.previewFile(this.fileInfo, this.extendServerConfig);\r\n    }\r\n    // 是否禁用预览\r\n    @Input() viewDisabled = false;\r\n    // 处理扩展的服务器端配置\r\n    @Input() extendServerConfig = null;\r\n    constructor(private previewSer: FfilepreviewAdaptUnifileService) {\r\n\r\n    }\r\n}\r\n\r\n@Directive({\r\n    selector: '[fFileAdaptDownloadFile]'\r\n})\r\nexport class FFileAdaptDownloadFileDirective {\r\n    //  附件信息\r\n    @Input('fFileAdaptDownloadFile') fileInfo;\r\n    /**\r\n     * 捕获预览事件\r\n     * @param fileInfo \r\n     */\r\n    @HostListener('click', ['$event'])\r\n    filePreviewEventHandler() {\r\n        if (!this.fileInfo || this.downloadDisabled) {\r\n            return;\r\n        }\r\n        if (this.enableMulti && this.fileInfo instanceof Array) {\r\n            this.previewSer.multiDownloadFilesWidthName(this.fileInfo,this.zipName,this.extendServerConfig);\r\n        } else {\r\n            this.previewSer.downloadFile(this.fileInfo, this.extendServerConfig);\r\n        }\r\n    }\r\n    //重命名\r\n    @Input() zipName='';\r\n    // 是否禁用下载\r\n    @Input() downloadDisabled = false;\r\n    // 处理扩展的服务器端配置\r\n    @Input() extendServerConfig = null;\r\n    // 是否启用批量下载\r\n    @Input() enableMulti = false;\r\n    constructor(private previewSer: FfilepreviewAdaptUnifileService) {\r\n\r\n    }\r\n}\r\n\r\n","import { Component, OnInit, ElementRef, Input, HostBinding } from '@angular/core';\r\nimport { FUploadFileExtend } from '@farris/extend-file-upload';\r\nimport { FfilepreviewAdaptUnifileService } from './../ffilepreview-adapt-unifile.service';\r\n\r\n@Component({\r\n  selector: 'ffilepreview-adapt-seeimg',\r\n  templateUrl: './ffilepreview-adapt-seeimg.component.html',\r\n  styleUrls: ['./ffilepreview-adapt-seeimg.component.css']\r\n})\r\nexport class FfilepreviewAdaptSeeimgComponent implements OnInit {\r\n  @HostBinding('class.ffilepreview-adapt-seeimg') cls = true;\r\n  // 是否启用图片的缩略图，默认为false；如果启用，图片类型会出现缩略图；不启用，根据类型显示图标\r\n  @Input() enableThumbnail = false;\r\n  // 图标的样式前缀\r\n  @Input() clsPrefix = 'ffilepreview--filetype';\r\n  // 显示缩略图中时，定义哪些后缀属于图片;\r\n  @Input() supportImgSuffix = 'jpeg,jpg,gif,png,bmp';\r\n  // 附件信息\r\n  @Input() fileInfo: FUploadFileExtend;\r\n  @Input() iconWidth=38;\r\n  // 缩略图的最大宽度\r\n  @Input() maxThumbnailWidth = '100%';\r\n  // 缩略图的最小宽度\r\n  @Input() maxThumbnailHeight = '100%';\r\n  // 处理扩展的服务器端配置，这样可以支持每个指令预览不同的目录，比如{'rootId':'default-root','formId':'formId'}\r\n  @Input() extendServerConfig =null;\r\n  constructor(private adpSer: FfilepreviewAdaptUnifileService, private elementRef: ElementRef) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n  /**\r\n   * 获取图片的链接\r\n   */\r\n  imgSrc() {\r\n    return this.adpSer.getImgSrc(this.fileInfo, this.extendServerConfig);\r\n  }\r\n  /**\r\n   * 判断是否是图片\r\n   */\r\n  isImage() {\r\n    // 没有数据\r\n    if (!this.fileInfo) {\r\n      return false;\r\n    }\r\n    // 没有名称\r\n    let fileName = this.fileInfo.name;\r\n    if (!fileName) {\r\n      return false;\r\n    }\r\n    let lastDotIndex = fileName.lastIndexOf(\".\");\r\n    let fileSuffix = '';\r\n    if (lastDotIndex > -1) {\r\n      fileSuffix = fileName.substring(lastDotIndex + 1).toLocaleLowerCase();\r\n    }\r\n    if (!fileSuffix) {\r\n      return false;\r\n    }\r\n    let tImgSuffixArray = this.supportImgSuffix.split(',');\r\n    let tIndex = tImgSuffixArray.findIndex(item => {\r\n      return item == fileSuffix;\r\n    });\r\n    if (tIndex > -1) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  /**\r\n   * 获取文件类型样式\r\n   */\r\n  getFileTypeClassName() {\r\n\r\n    let clsName = this.clsPrefix;\r\n    // 如果名称为空\r\n    if (!this.fileInfo || !this.fileInfo['name']) {\r\n      return clsName + '-any';\r\n    }\r\n    let fileName = this.fileInfo['name'];\r\n    let lastDotIndex = fileName.lastIndexOf(\".\");\r\n    let fileSuffix = '';\r\n    if (lastDotIndex > -1) {\r\n      fileSuffix = fileName.substring(lastDotIndex + 1).toLocaleLowerCase();\r\n    }\r\n    switch (fileSuffix) {\r\n      case 'pdf':\r\n        clsName += '-pdf';\r\n        break;\r\n      case 'jpeg':\r\n      case 'jpg':\r\n      case 'gif':\r\n      case 'png':\r\n      case 'bmp':\r\n        clsName += '-img';\r\n        break;\r\n      case 'ppt':\r\n        clsName += '-ppt';\r\n        break;\r\n      case 'doc':\r\n      case 'docx':\r\n        clsName += '-doc';\r\n        break;\r\n      case 'xls':\r\n      case 'xlsx':\r\n        clsName += '-xls';\r\n        break;\r\n      case 'txt':\r\n        clsName += '-txt';\r\n        break;\r\n      case 'zip':\r\n        clsName += '-zip';\r\n        break;\r\n      default:\r\n        clsName += '-any';\r\n    }\r\n    return clsName;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { UploadServerService, UploadFile, UploadInput, UploadStatus } from '@farris/extend-file-upload';\r\nimport { Observable, forkJoin, of, EMPTY, concat, Subject } from 'rxjs';\r\nimport { UploadService, GspFormUploadListEntity, GspFormRemoveListEntity, GspFormDocInfo, GspFormUploadEntity, FileInfo, OperatingModes, GspDocMetaProperty } from '@gsp-svc/formdoc-upload';\r\nimport { FFileUploadAdaptUnifileConfigService, FFileUploadAdaptUnifileConfig } from './ffileupload-adapt-unifile.config';\r\nimport { catchError, delay, expand, last, map, switchMap, tap } from 'rxjs/operators';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class FfileuploadAdaptUnifileService extends UploadServerService {\r\n    extendData;// 暂时用于简单合并\r\n    bufferSize = 1024 * 1024;\r\n    private static previous = 0;\r\n    private uploadedChunk = {};\r\n    private fileTotalChunk = {};\r\n\r\n\r\n    \r\n\r\n    constructor(private uploadSer: UploadService, private configSer: FFileUploadAdaptUnifileConfigService) {\r\n        super();\r\n        this.extendData = this.configSer.getConfig();\r\n    }\r\n\r\n    private uuid() {\r\n        let S4 = function () {\r\n            return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n        };\r\n        let nGuid = S4() + S4() + S4() + S4() + S4() + S4() + S4() + S4();\r\n        return nGuid;\r\n    }\r\n    /**\r\n     * 删除文件\r\n     * @param file \r\n     * @param event \r\n     */\r\n    remove(files: UploadFile[], event: UploadInput, extendService: FFileUploadAdaptUnifileConfig): Observable<any> {\r\n        return this.innerRemoveList(files, event, extendService);\r\n    }\r\n\r\n    private innerRemoveList(files: UploadFile[], event: UploadInput, extendService = null): Observable<any> {\r\n        return new Observable(observer => {\r\n            let removeFileInfo = new GspFormRemoveListEntity;\r\n            let metadataIdList = [];\r\n            files.forEach(fileItem => {\r\n                if (fileItem['response']) {\r\n                    metadataIdList.push(fileItem['response']['metadataId']);\r\n                }\r\n            });\r\n\r\n            removeFileInfo.mode = this.getFinallyConfig('mode', extendService);\r\n            let rootId = this.getFinallyConfig('rootId', extendService);\r\n            removeFileInfo.metadataIdList = [].concat(metadataIdList);\r\n\r\n            this.uploadSer.removeList(metadataIdList, rootId).subscribe(result => {\r\n                // 没有需要整合的服务器端返回数据\r\n                observer.next({ type: 'removed', files: files });\r\n            }, error => {\r\n                observer.error(error);\r\n                observer.complete();\r\n            }, () => {\r\n                observer.complete();\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * 上传文件\r\n     * @param file \r\n     * @param event \r\n     */\r\n    upload(files: UploadFile[], event: UploadInput, extendService: FFileUploadAdaptUnifileConfig): Observable<any> {\r\n        if (event.type == 'sliceUpload') {\r\n            return this.uploadBigFile(files, event, extendService);\r\n        }\r\n        return this.innerUploadList(files, event, extendService);\r\n    }\r\n    /**\r\n     * 内部上传方式\r\n     * @param files \r\n     * @param event \r\n     * @param extendService \r\n     */\r\n    private innerUploadList(files: UploadFile[], event: UploadInput, extendService: FFileUploadAdaptUnifileConfig): Observable<any> {\r\n        return new Observable(observer => {\r\n\r\n            let uploadInfo = new GspFormUploadListEntity;\r\n            uploadInfo.formId = this.getFinallyConfig('formId', extendService);\r\n            uploadInfo.mode = this.getFinallyConfig('mode', extendService);\r\n\r\n            let rootId = this.getFinallyConfig('rootId', extendService);\r\n            uploadInfo.docInfoList = [];\r\n            let readerObserable: Observable<any>[] = [];\r\n            files.forEach((fileItem: UploadFile) => {\r\n                let sub = new Observable(obser => {\r\n                    let reader = new FileReader();\r\n                    // 暂不处理异常\r\n                    reader.readAsBinaryString(fileItem.nativeFile);\r\n                    reader.onload = (e) => {\r\n                        let info = { 'fileName': '', 'fileContent': '' } as any;\r\n                        info['fileName'] = fileItem.name;\r\n                        info['fileContent'] = btoa(reader.result.toString());\r\n                        // 如果data里有数据，并且属性是配置的扩展属性\r\n                        if (event.hasOwnProperty('data') && event['data'] && event['data'].hasOwnProperty('extProperty')) {\r\n                            // \r\n                            info['extProperty'] = event['data']['extProperty'];\r\n                        }\r\n                        uploadInfo.docInfoList.push(info);\r\n                        obser.next();\r\n                        obser.complete();\r\n                    }\r\n                });\r\n                readerObserable.push(sub);\r\n            });\r\n\r\n            forkJoin(readerObserable).subscribe(datas => {\r\n                //     metadataId: string;\r\n                //  fileName: string;\r\n                this.uploadSer.uploadList(uploadInfo, rootId).subscribe(result => {\r\n                    if (result.error) {\r\n                        // 此接口一旦出现问题，所有附件都上传不通过\r\n                        observer.error(this.errorInfoFormat(result.error, files));\r\n                        observer.complete();\r\n                        return;\r\n                    }\r\n                    // 合并返回结果到此处\r\n                    result.forEach(item => {\r\n                        var findIndex = this.findFileIndexByFileName(files, item.fileName);\r\n                        if (findIndex > -1) {\r\n                            files[findIndex]['response'] = item;\r\n                            files[findIndex]['progress']['status'] = UploadStatus.Done;\r\n                        }\r\n                    });\r\n\r\n                    observer.next({ type: 'done', files: files });\r\n\r\n                }, error => {\r\n                    observer.error(this.errorInfoFormat(error, files));\r\n                    observer.complete();\r\n                }, () => {\r\n                    observer.complete();\r\n                });\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 分片加载\r\n     * @param file \r\n     * @param event \r\n     * @param extendService \r\n     */\r\n    multipartUpload(file: UploadFile, event: UploadInput, extendService: FFileUploadAdaptUnifileConfig): Observable<any> {\r\n\r\n        return new Observable(observer => {\r\n\r\n            // let fileInfo: FileInfo;\r\n            let uuid = this.uuid();\r\n            // let uuid = UUID.UUID();\r\n            //reader.readAsBinaryString(selectedFile);\r\n            //reader.onload = (e) => {\r\n            let fileName = file.name;\r\n            // fileInfo = {\r\n            //   id: uuid,\r\n            //   name: fileName,\r\n            //   type: file.type,\r\n            //   source: \"\",\r\n            //   size: this.formatFileSize(file.size),\r\n            //   fileSize: file.size,\r\n            //   picListDisplayName: this.getMultipartDisplayName(fileName),\r\n            //   queueListDisplayName: fileName,\r\n            //   //content: reader.result.toString(),\r\n            //   hasUploaded: false,\r\n            //   mouseOn: false,\r\n            //   selectd: false,\r\n            //   isUploading: true,\r\n            //   uploadResult: false,\r\n            //   uploadProcess: 0,\r\n            //   errorMessage: \"\",\r\n            //   extensionDropListId: 0,\r\n            //   extensionName: \"\"\r\n            // }\r\n\r\n            let chunkTotal: number = Math.ceil(file.size / this.bufferSize);\r\n            // 标记当前附件总的分片数\r\n            this.fileTotalChunk[uuid] = chunkTotal;\r\n            let chunkIndex: number = 0;\r\n            // 标记当前附件成功的分片数\r\n            this.uploadedChunk[uuid] = 0;\r\n            while (chunkIndex < chunkTotal) {\r\n                let uploadInfo = new GspFormUploadEntity;\r\n                uploadInfo.mode = OperatingModes.Temp;\r\n                uploadInfo.formId = this.getFinallyConfig('formId', extendService);\r\n                uploadInfo.rootId = this.getFinallyConfig('rootId', extendService);\r\n\r\n                let docInfo: GspFormDocInfo = new GspFormDocInfo;\r\n                docInfo.fileName = fileName;\r\n                docInfo.metadataId = uuid;\r\n                docInfo.total = chunkTotal;\r\n                // 如果data里有数据，并且属性是配置的扩展属性\r\n                if (event.hasOwnProperty('data') && event['data'] && event['data'].hasOwnProperty('extProperty')) {\r\n                    docInfo['extProperty'] = event['data']['extProperty'] as GspDocMetaProperty;\r\n                }\r\n                // 下一个文件大小\r\n                let nextSize = Math.min((chunkIndex + 1) * this.bufferSize, file.size);\r\n                // File类型\r\n                let fileData = file['nativeFile'].slice(chunkIndex * this.bufferSize, nextSize);\r\n                // 读取文件\r\n                let reader = new FileReader();\r\n                reader.readAsBinaryString(fileData);\r\n                let innerIndex = chunkIndex;\r\n                reader.onload = () => {\r\n                    // 附件上传\r\n                    docInfo.fileContent = btoa(reader.result.toString());\r\n                    docInfo.index = innerIndex;\r\n\r\n                    uploadInfo.docInfo = docInfo;\r\n                    let info = uploadInfo;\r\n\r\n                    this.uploadSer.uploadFile(info).subscribe(result => {\r\n                        if (result && result.error) {\r\n                            // 分片上传有返回结果就是报错了\r\n                            observer.error(this.errorInfoFormat(result.error, [file]));\r\n                            observer.complete();\r\n                            return;\r\n                        } else {\r\n                            this.uploadedChunk[uuid]++;\r\n                            if (this.uploadedChunk[docInfo.metadataId] == this.fileTotalChunk[docInfo.metadataId]) {\r\n                                // 判断是所有分片都上传完成\r\n                                file.progress = {\r\n                                    status: UploadStatus.Done,\r\n                                    data: {\r\n                                        percentage: 100\r\n                                    }\r\n                                };\r\n                                file.response = docInfo;\r\n                                delete this.uploadedChunk[uuid];\r\n                                delete this.fileTotalChunk[uuid];\r\n                                observer.next({ type: 'done', files: [file] });\r\n                                observer.complete();\r\n\r\n                            } else {\r\n                                // 分片上传正常\r\n                                const percentage = Number.parseInt((this.uploadedChunk[uuid] / this.fileTotalChunk[uuid] * 100).toFixed(0));\r\n                                // 判断未上传完成\r\n                                file.progress = {\r\n                                    status: UploadStatus.Uploading,\r\n                                    data: {\r\n                                        percentage: percentage\r\n                                    }\r\n                                };\r\n                                observer.next({ type: 'uploading', files: [file] });\r\n                            }\r\n                        }\r\n                    }, error => {\r\n                        delete this.uploadedChunk[uuid];\r\n                        delete this.fileTotalChunk[uuid];\r\n                        observer.error(this.errorInfoFormat(error, [file]));\r\n                        observer.complete();\r\n                    });\r\n                }\r\n                chunkIndex = chunkIndex + 1;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * 获取分片的附件大小\r\n     * @param size \r\n     */\r\n    private formatFileSize(size: number) {\r\n        if (size < 102400)\r\n            return (size / 1024).toFixed(1) + \"K\";\r\n        else if (size < 1024 * 1024)\r\n            return (size / 1024).toFixed(0) + \"K\";\r\n        else if (size < 100 * 1024 * 1024)\r\n            return (size / 1024 / 1024).toFixed(1) + \"M\";\r\n        else if (size < 1024 * 1024 * 1024)\r\n            return (size / 1024 / 1024).toFixed(0) + \"M\";\r\n        else\r\n            return (size / 1024 / 1024 / 1024).toFixed(1) + \"G\";\r\n    }\r\n    /**\r\n     * 获取分片的 附件名称\r\n     * @param fileName \r\n     */\r\n    private getMultipartDisplayName(fileName: string) {\r\n        if (fileName.length <= 10)\r\n            return fileName;\r\n        else {\r\n            let headContent = fileName.substring(0, 2);\r\n            let tailContent = fileName.substring(fileName.lastIndexOf('.') - 2);\r\n            return headContent + \"…\" + tailContent;\r\n        }\r\n    }\r\n    private errorInfoFormat(error, files) {\r\n        // \r\n        let errorFiles = files.map(item => {\r\n            return { id: item.id, name: item.name };\r\n        });\r\n        if (error) {\r\n            return Object.assign(error, { files: errorFiles }, { message: error['Message'] || error['extensionMessage'] || '上传失败', type: 'error' });\r\n        } else {\r\n            return Object.assign({ files: errorFiles }, { message: '上传失败', type: 'error' });\r\n        }\r\n    }\r\n    /**\r\n     * 返回最终属性值\r\n     * @param key \r\n     * @param configValue \r\n     * @param extendValue \r\n     */\r\n    private getFinallyConfig(key, extendValue) {\r\n        if (extendValue && extendValue.hasOwnProperty(key)) {\r\n            return extendValue[key];\r\n        }\r\n        return this.extendData[key];\r\n    }\r\n\r\n    private findFileIndexByFileName(files: UploadFile[], fileName) {\r\n        // 按照肯定能找到文件来处理\r\n        let findIndex = files.findIndex(file => file.name == fileName);\r\n        return findIndex;\r\n    }\r\n\r\n\r\n    //#region 大文件分片上传\r\n\r\n    uploadBigFile(files: UploadFile[], event: UploadInput, extendService: FFileUploadAdaptUnifileConfig) {\r\n\r\n        const uploadChunks$ = new Subject();\r\n\r\n        const _files = files.map(n => {\r\n            const chunks = this._getBigFileChunks(n, event, extendService)\r\n            return { ...n, ...chunks};\r\n        });\r\n\r\n        \r\n        const uploadchunks$: Observable<any>[] =  _files.map((f) => this.uploadChunks(f, uploadChunks$));\r\n        concat(...uploadchunks$).subscribe(\r\n            (f: any) => {\r\n                // console.log(`file: ${f.name} - upload complete`);\r\n                f.progress = {\r\n                    status: UploadStatus.Done,\r\n                    data:  {\r\n                        percentage: 100\r\n                    }\r\n                };\r\n                f.response = JSON.parse(f.chunks[0].get('docInfo'));\r\n                uploadChunks$.next({type: 'done', files:[f]});\r\n            },\r\n            error => {\r\n                uploadChunks$.error(this.errorInfoFormat(error, files));\r\n                uploadChunks$.complete();\r\n            },\r\n            () => {\r\n                uploadChunks$.complete();\r\n                // console.log(\"all files uploaded\")\r\n            }\r\n        );\r\n\r\n        return uploadChunks$.asObservable();\r\n    }\r\n\r\n    private uploadFileChunk(file: any) {\r\n        const url = \"/api/runtime/dfs/v1.0/formdoc/slice\";\r\n\r\n        return this.uploadSer['http']['http'].post(url, file.chunks[file.total]).pipe(\r\n            switchMap(() => {\r\n                return of(file);\r\n            }),\r\n            catchError((error: HttpErrorResponse) => {\r\n                return of(error);\r\n            }\r\n        ));\r\n    }\r\n\r\n    \r\n    private uploadChunks(file, upChunk$: Subject<any>) {\r\n\r\n        const doChunksRemain = (i) => i > -1;\r\n        const completeUpload = (f) => of(f);\r\n        const uploadChunk = (f) => {\r\n            return this.uploadFileChunk(f).pipe(\r\n                delay(100),\r\n                map((f: any) => {\r\n                    // 块数为0 时，即为此文件的所有块均上传成功\r\n                    f.progress = {\r\n                        status: UploadStatus.Uploading,\r\n                        data:  {\r\n                            percentage: (f.total / f.chunks.length * 100).toFixed(0)\r\n                        }\r\n                    };\r\n                    upChunk$.next({ type: 'uploading', files: [f] });\r\n\r\n                    return f;\r\n                })\r\n            )\r\n        };\r\n        const createMultipartUpload = (f) => of(f);\r\n\r\n\r\n        return createMultipartUpload(file).pipe(\r\n            // tap((f) => console.log(\"upload file\", f.name)),\r\n            expand((f) => {\r\n                if (doChunksRemain(--file.total)) {\r\n                    return uploadChunk(file);\r\n                }\r\n                return EMPTY;\r\n            }),\r\n            // tap((f: any) => {\r\n            //     console.log(`file: ${f.name} - remaining chunks: ${f.total}`);\r\n            // }),\r\n            last(),\r\n            switchMap((res: any) => {\r\n                return completeUpload(file);\r\n            })\r\n        );\r\n    }\r\n\r\n\r\n    private _getBigFileChunks(file: UploadFile, event: UploadInput, extendService: FFileUploadAdaptUnifileConfig) {\r\n        let uuid = this.uuid();\r\n\r\n        let chunkTotal: number = Math.ceil(file.size / this.bufferSize * (event.chunkSize || 1));\r\n        let chunkIndex: number = 0;\r\n        const fileChunks = {chunks: [], total: chunkTotal};\r\n\r\n        while (chunkIndex < chunkTotal) {\r\n            let uploadInfo = new GspFormUploadEntity;\r\n            uploadInfo.mode = OperatingModes.Temp;\r\n            uploadInfo.formId = this.getFinallyConfig('formId', extendService);\r\n            uploadInfo.rootId = this.getFinallyConfig('rootId', extendService);\r\n\r\n            let docInfo: GspFormDocInfo = new GspFormDocInfo;\r\n\r\n            docInfo.fileName = file.name;\r\n            docInfo.metadataId = uuid;\r\n            docInfo.total = chunkTotal;\r\n\r\n            let nextSize = Math.min((chunkIndex + 1) * this.bufferSize, file.size);\r\n            // File类型\r\n            let fileData = file['nativeFile'].slice(chunkIndex * this.bufferSize, nextSize);\r\n\r\n            docInfo.size = file.size;\r\n            docInfo.index = chunkIndex;\r\n            docInfo.fileContent = \"\"\r\n            \r\n            // 如果data里有数据，并且属性是配置的扩展属性\r\n            if (event.hasOwnProperty('data') && event['data'] && event['data'].hasOwnProperty('extProperty')) {\r\n                docInfo['extProperty'] = event['data']['extProperty'] as GspDocMetaProperty;\r\n            }\r\n\r\n\r\n            uploadInfo.docInfo = docInfo;\r\n      \r\n            //封装请求formdata\r\n            let formData = new FormData();\r\n            formData.append('uploadInfo', JSON.stringify(uploadInfo));\r\n            formData.append('docInfo', JSON.stringify(docInfo));\r\n            formData.append('file', fileData);\r\n\r\n            fileChunks.chunks.push(formData);\r\n            chunkIndex = chunkIndex + 1;\r\n        }\r\n\r\n        return fileChunks;\r\n    \r\n    }\r\n\r\n\r\n    // private showProgressBar() {\r\n    //     // overlay Div\r\n    //     const div = document.createElement('div');\r\n    //     div.style.cssText = 'position: absolute;top: 0;left: 0;width: 100vw;height: 100vh;z-index: 999999;background: #fdfdfd54;';\r\n\r\n    //     // panel Div\r\n    //     const progressPanelDiv = document.createElement('div');\r\n    //     div.style.cssText =`background: white;width: 500px;height: 130px;left: 50%;top: 50%;position: relative;\r\n    //     margin-top: -50px;margin-left: -250px;align-items: center;justify-content: center;display: flex;flex-direction: column;\r\n    //     border-radius: 15px;box-shadow: 1px 1px 7px #ced4da;`;\r\n\r\n    //     div.appendChild(progressPanelDiv);\r\n\r\n    //     const progressNumEl = document.createElement('h2');\r\n        \r\n    // }\r\n\r\n\r\n    //#endregion\r\n\r\n}\r\n\r\n","import { Directive, HostListener, Input, Optional } from '@angular/core';\r\nimport { NotifyService } from '@farris/ui-notify';\r\nimport { FfilepreviewAdaptUnifileService } from './ffilepreview-adapt-unifile.service';\r\n\r\n@Directive({\r\n    selector: '[fFilePreviewAdaptUnifile]',\r\n    providers:[FfilepreviewAdaptUnifileService]\r\n})\r\nexport class FFilePreviewAdaptUnifileDirective {\r\n    /**\r\n     * 捕获预览事件\r\n     * @param fileInfo \r\n     */\r\n    @HostListener('filePreviewEvent', ['$event'])\r\n    filePreviewEventHandler(fileInfo) {\r\n        const previewOpts = Object.assign(this.extendServerConfig || {});\r\n        previewOpts.options = Object.assign(previewOpts.options || {}, {showDownload: !!fileInfo.showDownload});\r\n        \r\n        if (previewOpts.options.showHeader === undefined) {\r\n            previewOpts.options.showHeader = true;\r\n        }\r\n\r\n        if (previewOpts.options.showFileList === undefined) {\r\n            previewOpts.options.showFileList = true;\r\n        }\r\n\r\n        // 文件扩展名\r\n        const extendName = fileInfo.name.substr(fileInfo.name.lastIndexOf('.') + 1).toLowerCase();\r\n        const enablePreviews = [ 'doc','docx','xls','xlsx','ppt','pptx','jpg','jpeg','png', 'gif', 'bmp', 'pdf', 'txt' ];\r\n\r\n        if (enablePreviews.includes(extendName)) {\r\n            this.previewSer.previewFile(fileInfo, previewOpts);\r\n        } else {\r\n            const msg = '此文件不支持预览';\r\n            if (this.previewSer.notifySer) {\r\n                this.previewSer.notifySer.warning('此文件不支持预览');\r\n            } else {\r\n                alert(msg);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 捕获下载事件\r\n     * @param fileInfo \r\n     */\r\n    @HostListener('fileDownloadEvent', ['$event'])\r\n    fileDownloadEventHandler(downloadEv) {\r\n        // 如果是批量下载, downloadEv={fileInfos:[],name:}\r\n        if (downloadEv&&downloadEv['fileInfos'].length > 0) {\r\n            if (downloadEv['fileInfos'].length > 1) {\r\n                this.previewSer.multiDownloadFilesWidthName(downloadEv['fileInfos'],downloadEv['name'], this.extendServerConfig);\r\n            }else{\r\n                this.previewSer.downloadFile(downloadEv['fileInfos'][0], this.extendServerConfig);\r\n            }\r\n        }        \r\n    }\r\n\r\n    /**\r\n     * 处理扩展的服务器端配置\r\n     */\r\n    private _extendServeConfig=null;\r\n    @Input() \r\n    set extendServerConfig(value){\r\n        this._extendServeConfig=value;\r\n        this.previewSer.setPreviwExtendServerConfig(value);\r\n    } \r\n    get extendServerConfig(){\r\n        return this._extendServeConfig;\r\n    }\r\n    constructor(private previewSer: FfilepreviewAdaptUnifileService ) {\r\n\r\n    }\r\n\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FFileUploadModule } from '@farris/extend-file-upload';\r\nimport { UploadDialogMoudle } from '@gsp-svc/formdoc-upload';\r\nimport { FfileuploadAdaptUnifileService } from './ffileupload-adapt-unifile.service';\r\nimport { FfilepreviewAdaptUnifileService } from './ffilepreview-adapt-unifile.service';\r\nimport { FFilePreviewAdaptUnifileDirective } from './ffilepreview-adapt-unifile.directive';\r\nimport { FileListModule, FileViewerService } from '@gsp-svc/file-viewer';\r\nimport { FFileUploadAdaptUnifileConfig, FFileUploadAdaptUnifileConfigToken, FFileUploadAdaptUnifileConfigService } from './ffileupload-adapt-unifile.config';\r\nimport { FfilepreviewAdaptSeeimgComponent } from './ffilepreview-adapt-seeimg/ffilepreview-adapt-seeimg.component';\r\nimport { FFileAdaptDownloadFileDirective, FFileAdaptPreviewFileDirective } from './ffilepreview-adapt-unifile-simple.directive';\r\nimport { NotifyModule } from '@farris/ui-notify';\r\n\r\n\r\n@NgModule({\r\n  declarations: [FFilePreviewAdaptUnifileDirective, FfilepreviewAdaptSeeimgComponent,FFileAdaptDownloadFileDirective,FFileAdaptPreviewFileDirective],\r\n  imports: [\r\n    CommonModule,\r\n    UploadDialogMoudle,\r\n    FileListModule,\r\n    FFileUploadModule.forRoot(null, FfileuploadAdaptUnifileService)\r\n  ],\r\n  exports: [\r\n    FFileUploadModule,\r\n    FFilePreviewAdaptUnifileDirective, \r\n    FfilepreviewAdaptSeeimgComponent,\r\n    FFileAdaptDownloadFileDirective,\r\n    FFileAdaptPreviewFileDirective],\r\n  providers: [\r\n    FFileUploadAdaptUnifileConfigService,\r\n    FfilepreviewAdaptUnifileService,\r\n    FileViewerService\r\n  ]\r\n})\r\nexport class FfileuploadAdaptUnifileModule {\r\n\r\n  static forRoot(config?: FFileUploadAdaptUnifileConfig): ModuleWithProviders {\r\n    return {\r\n      ngModule: FfileuploadAdaptUnifileModule,\r\n      providers: [\r\n        { provide: FFileUploadAdaptUnifileConfigToken, useValue: config },\r\n        FFileUploadAdaptUnifileConfigService,\r\n        FfilepreviewAdaptUnifileService,\r\n        FileViewerService\r\n      ]\r\n    };\r\n  }\r\n}\r\n"],"names":[],"mappings":"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"}