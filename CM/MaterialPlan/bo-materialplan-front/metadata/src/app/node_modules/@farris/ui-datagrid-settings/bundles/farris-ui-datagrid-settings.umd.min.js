!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("rxjs/operators"),require("rxjs"),require("@angular/core"),require("@farris/ui-modal"),require("@farris/ui-messager"),require("@farris/ui-locale"),require("lodash-es"),require("@farris/ui-common"),require("@farris/ui-notify"),require("@farris/ui-datagrid"),require("@farris/ui-multi-select"),require("@angular/forms"),require("@angular/common"),require("@farris/ui-combo-list"),require("@farris/ui-switch"),require("@farris/ui-tooltip"),require("@farris/ui-organization-selector"),require("@farris/smooth-dnd"),require("@farris/ui-language-textbox")):"function"==typeof define&&define.amd?define("@farris/ui-datagrid-settings",["exports","rxjs/operators","rxjs","@angular/core","@farris/ui-modal","@farris/ui-messager","@farris/ui-locale","lodash-es","@farris/ui-common","@farris/ui-notify","@farris/ui-datagrid","@farris/ui-multi-select","@angular/forms","@angular/common","@farris/ui-combo-list","@farris/ui-switch","@farris/ui-tooltip","@farris/ui-organization-selector","@farris/smooth-dnd","@farris/ui-language-textbox"],t):t(((e=e||self).farris=e.farris||{},e.farris["ui-datagrid-settings"]={}),e.rxjs.operators,e.rxjs,e.ng.core,e.uiModal,e.uiMessager,e.uiLocale,e.lodashEs,e.uiCommon,e.uiNotify,e.uiDatagrid,e.uiMultiSelect,e.ng.forms,e.ng.common,e.uiComboList,e.uiSwitch,e.uiTooltip,e.uiOrganizationSelector,e.smoothDnd,e.uiLanguageTextbox)}(this,function(e,t,n,i,s,r,o,l,a,c,u,d,h,p,m,g,f,v,y,b){"use strict";var S=function(){return(S=Object.assign||function(e){for(var t,n=1,i=arguments.length;n<i;n++)for(var s in t=arguments[n])Object.prototype.hasOwnProperty.call(t,s)&&(e[s]=t[s]);return e}).apply(this,arguments)};function C(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var i,s,r=n.call(e),o=[];try{for(;(void 0===t||t-- >0)&&!(i=r.next()).done;)o.push(i.value)}catch(l){s={error:l}}finally{try{i&&!i.done&&(n=r["return"])&&n.call(r)}finally{if(s)throw s.error}}return o}function I(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(C(arguments[t]));return e}var w=function(){function e(e,t){this.cd=e,this.inject=t,this.activeTabIndex=1,this.sortTreeData=[],this.sortNames=[],this.sortInfo={},this.viewTreeData=[],this.viewColumns=[],this.columnFormat=[],this.groupField=[],this.groupRowState=!0,this.canSetColumnSort=!0,this.canSetColumnVisible=!0,this.enableReset=!1,this.cancelHandle=new i.EventEmitter,this.submitHandle=new i.EventEmitter,this.reset=new i.EventEmitter,this.concise=new i.EventEmitter,this.schemeInfo=null,this.searchItems=[],this.alignItems=[],this.summaryItems=[],this.summaryItems2=[],this.messager=this.inject.get(r.MessagerService,null),this.localeSer=this.inject.get(o.LocaleService),this.render2=this.inject.get(i.Renderer2,null),this.searchItems=[{value:"all",title:this.localeSer.getValue("datagrid.settings.allColumns")},{value:"visible",title:this.localeSer.getValue("datagrid.settings.visibleColumns")},{value:"hidden",title:this.localeSer.getValue("datagrid.settings.hiddenColumns")}],this.alignItems=[{value:"left",title:this.localeSer.getValue("datagrid.settings.alignLeft")},{value:"center",title:this.localeSer.getValue("datagrid.settings.alignCenter")},{value:"right",title:this.localeSer.getValue("datagrid.settings.alignRight")}],this.summaryItems=[{value:-1,title:this.localeSer.getValue("datagrid.settings.summaryNone")},{value:2,title:this.localeSer.getValue("datagrid.settings.summarySum")},{value:0,title:this.localeSer.getValue("datagrid.settings.summaryMax")},{value:1,title:this.localeSer.getValue("datagrid.settings.summaryMin")},{value:3,title:this.localeSer.getValue("datagrid.settings.summaryAverage")},{value:4,title:this.localeSer.getValue("datagrid.settings.summarCount")}],this.summaryItems2=[{value:-1,title:this.localeSer.getValue("datagrid.settings.summaryNone")},{value:4,title:this.localeSer.getValue("datagrid.settings.summarCount")}]}return e.prototype.initData=function(){this.sortNames=this.gridInstance.sortName?this.gridInstance.sortName.split(","):[],this.viewColumns=this.getViewColumns(),this.sortInfo=this.gridInstance.__sortInfo||{},this.columnFormat=I(this.columns[0]),this.groupField=this.gridInstance.groupField?this.gridInstance.groupField.split(","):[],this.groupRowState=this.gridInstance.expandGroupRows},e.prototype.ngOnInit=function(){if(this.gridInstance.enableScheme){if(this.schemeInfo)return this.sortInfo=this.schemeInfo.sortInfo||{},this.sortInfo&&(this.sortNames=this.sortInfo.sortName||""),this.viewColumns=this.schemeInfo.viewColumns,this.columnFormat=this.schemeInfo.columnFormat,this.columnFormat||(this.columnFormat=I(this.columns[0])),void(this.schemeInfo.groupField?"string"==typeof this.schemeInfo.groupField?this.groupField=this.schemeInfo.groupField.split(","):this.groupField=this.schemeInfo.groupField||[]:this.groupField=[]);this.initData()}else this.initData()},e.prototype.ngOnChanges=function(e){},e.prototype.close=function(e){e.stopPropagation(),this.modalRef&&this.modalRef.close()},e.prototype.setCurrentTab=function(){if(this.render2){var e=0;switch(this.activeTabIndex){case 2:e=68;break;case 3:e=130;break;default:e=0}this.render2.setStyle(this.activeTab.nativeElement,"transform","translate3d("+e+"px, 0px, 0px)")}},e.prototype.changeTabs=function(e,t){e.stopPropagation(),this.activeTabIndex=t,this.setCurrentTab()},e.prototype.onSortInfoChange=function(e){this.sortInfo=e},e.prototype.getViewColumns=function(){var e=this,t=[];return this.columns.length>1?this.columns.forEach(function(n){t=t.concat(e._getViewColumns(n))}):t=this.columns[0].filter(function(e){return e.visible||e.visible===undefined}),t.map(function(e){return e.field})},e.prototype._getViewColumns=function(e){return e.filter(function(e){return!e.colspan&&(e.visible||e.visible===undefined)})},e.prototype.mergeColumnFormats=function(){var e=this;if(this.sortInfo&&Object.keys(this.sortInfo).length&&this.columnFormat&&this.columnFormat.length){var t=this.sortInfo,n=t.sortName,i=t.sortOrder;n&&n.length&&n.forEach(function(t,n){var s=e.columnFormat.find(function(e){return e.field===t});s&&(s.sortable=!0,s.order=i[n]||"asc")})}},e.prototype.onColumnFormatChange=function(e){this.columnFormat=e},e.prototype.onSubmitClick=function(e){this.mergeColumnFormats(),this.submitHandle.emit(e)},e.prototype.onCancelClick=function(e){this.cancelHandle.emit(e)},e.prototype.onSettingReset=function(e){var t=this,n=this.localeSer.getValue("datagrid.settings.restoreDefaultSettingsText")||"确认要恢复默认设置吗？";this.messager.confirm(n).subscribe(function(e){e&&t.reset2Default()})},e.prototype.reset2Default=function(){var e=this,t=this.gridInstance.dfs._state.initialOptions;if(t.columnFields&&t.columnFields.length){var n=[];t.columnFields.forEach(function(t){if("_datagrid-setting-control_"!==t.field){var i=e.gridInstance.columns[0].find(function(e){return e.field===t.field});i&&(i.visible=t.visible,i.halign=t.halign,i.align=t.align,i.width=t.width,i.footer=S({},t.footer||{}),i.groupFooter=S({},t.groupFooter||{}),n.push(i))}}),this.columns=[n]}if(this.viewColumns=this.getViewColumns(),t.sort){var i=t.sort.sortOrder?t.sort.sortOrder.split(","):[];this.sortNames=t.sort.sortName?t.sort.sortName.split(","):[],this.sortInfo={sortName:this.sortNames,sortOrder:i}}else this.sortNames=[],this.sortInfo={};this.columnFormat=I(this.columns[0]),this.groupField=t.groupField?t.groupField.split(","):[]},e.prototype.showConcise=function(e){e&&e.stopPropagation(),this.mergeColumnFormats(),this.concise.emit()},e.decorators=[{type:i.Component,args:[{selector:"datagrid-settings",template:'<div class="f-datagrid-settings d-flex flex-column" style="height: 100%;">\r\n\r\n    <div class="d-flex justify-content-between header" #header>\r\n        <div class="title">{{\'datagrid.settings.title\' | locale}}</div>\r\n\r\n        <div style="width: 100%;" class="tabs">\r\n            <div class="d-flex justify-content-center">\r\n                <div class="d-flex tabs-labels" (mousedown)="$event.stopPropagation()">\r\n\r\n                    <div class="active-tab" #activeTab ></div>\r\n\r\n                    <div class="navitem" [class.active]="activeTabIndex === 1" (click)="changeTabs($event, 1)"\r\n                        style="border: 0; z-index:2">\r\n                        <span style="padding: 0 14px;display: block;">\r\n                            {{\'datagrid.settings.visible\' | locale}}\r\n                        </span>\r\n                    </div>\r\n                    <div class="navitem" *ngIf="canSetColumnSort" [class.active]="activeTabIndex === 2 && canSetColumnSort" (click)="changeTabs($event, 2)" style="border: 0;z-index:2">\r\n                        <span style="padding: 0 14px;display: block;">\r\n                            {{\'datagrid.settings.sortting\' | locale}}\r\n                        </span>\r\n                    </div>\r\n                    <div class="navitem" *ngIf="gridInstance?.groupRows"\r\n                        [class.active]="activeTabIndex === 3" (click)="changeTabs($event, 3)" style="border: 0;z-index:2">\r\n                        <span style="padding: 0 14px; display: block;">\r\n                            {{\'datagrid.settings.groupping\' | locale}}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class="close">\r\n            <span class="f-icon modal_close" (click)="close($event)"></span>\r\n        </div>\r\n    </div>\r\n\r\n    <div class="f-utils-fill tabs-container" [ngSwitch]="activeTabIndex" >\r\n        <ng-container *ngSwitchCase="1">\r\n            <column-format-setting [(fields)]="viewColumns" [columns]="columns"\r\n                (formatChange)="onColumnFormatChange($event)"></column-format-setting>\r\n        </ng-container>\r\n        <ng-container *ngSwitchCase="2">\r\n            <sort-setting [treeData]="sortTreeData" [selectedIds]="sortNames"\r\n                (sortInfoChange)="onSortInfoChange($event)"></sort-setting>\r\n        </ng-container>\r\n\r\n        <ng-container *ngSwitchCase="3">\r\n            <column-group-setting [(groupFields)]="groupField" [(groupRowState)]="groupRowState" [fields]="viewColumns" [columns]="columns"\r\n                [(formatColumns)]="columnFormat"></column-group-setting>\r\n        </ng-container>\r\n    </div>\r\n\r\n    <div class="buttons">\r\n        <button class="btn btn-link" (click)="showConcise($event)" *ngIf="gridInstance.enableSimpleMode"\r\n            style="width: 66px;height: 32px; float: left;">{{ \'datagrid.settings.conciseMode\' | locale: \'简洁模式\' }}</button>\r\n        <button class="btn btn-link reset" (click)="onSettingReset($event)"\r\n            *ngIf="enableReset">{{ \'datagrid.settings.reset\' | locale: \'恢复默认\' }}</button>\r\n        <button class="btn btn-secondary cancel"\r\n            (click)="onCancelClick($event)">{{\'datagrid.settings.cancel\' | locale}}</button>\r\n        <button class="btn btn-primary ok"\r\n            (click)="onSubmitClick($event)">{{\'datagrid.settings.ok\' | locale}}</button>\r\n    </div>\r\n\r\n</div>',encapsulation:i.ViewEncapsulation.None}]}],e.ctorParameters=function(){return[{type:i.ChangeDetectorRef},{type:i.Injector}]},e.propDecorators={enableReset:[{type:i.Input}],columns:[{type:i.Input}],cancelHandle:[{type:i.Output}],submitHandle:[{type:i.Output}],reset:[{type:i.Output}],concise:[{type:i.Output}],schemeInfo:[{type:i.Input}],header:[{type:i.ViewChild,args:["header"]}],activeTab:[{type:i.ViewChild,args:["activeTab"]}]},e}();function x(e,t){if(e&&"object"==typeof e&&Object.keys(e).length>0){var n=e[t=t||"zh-CHS"];return n!==undefined?n:""}return""}var F=function(){function e(e,t){this.injector=e,this.cd=t,this.enableScheme=!1,this.seartTypes=[],this.columns=[],this.fields=[],this.clickToHidden=!0,this.top=0,this._schemeList=[],this.cls="f-datagrid-settings-simple-host",this.formatChange=new i.EventEmitter,this.fieldsChange=new i.EventEmitter,this.submit=new i.EventEmitter,this.closed=new i.EventEmitter,this.advanced=new i.EventEmitter,this.addNewScheme=new i.EventEmitter,this.showSchemeList=new i.EventEmitter,this.activeItemChange=new i.EventEmitter,this.schemeChanged=new i.EventEmitter,this.allCols=[],this.columnType="all",this.isEn=!1,this.showSchemePanel=!1,this.switchValue=!1,this.currentSchemeItem=null,this.searchResultIsVisibleAll=!1,this.defaultSchemeName="系统预制",this.settings={},this.localeSer=this.injector.get(o.LocaleService,null),this.messager=this.injector.get(r.MessagerService,null),this.notify=this.injector.get(c.NotifyService,null)}return Object.defineProperty(e.prototype,"schemeList",{get:function(){return this._schemeList},set:function(e){var t=this;e&&e.length&&e.forEach(function(e){e._title_=x(JSON.parse(e.name),t.localeSer.localeId)}),this._schemeList=e||[]},enumerable:!0,configurable:!0}),e.prototype.onClick=function(e){e.stopPropagation(),(e.target.className||"").indexOf("f-datagrid-settings-simple-host")>-1&&this.clickToHidden&&this.close(),this.showSchemePanel=!1},e.prototype.onEscKeydown=function(e){e.stopPropagation(),document.querySelector("modal-container")||this.close()},e.prototype.onEnterKeydown=function(e){e.stopPropagation(),document.querySelector("modal-container")||this.onSubmitClick()},e.prototype.onControlGKeydown=function(e){e.ctrlKey&&!document.querySelector("modal-container")&&(e.preventDefault(),e.stopPropagation(),"g"===e.key.toLowerCase()?this.showAdvanced(e):"r"===e.key.toLowerCase()?this.onSettingReset():"s"===e.key.toLowerCase()&&this.searchInput.nativeElement.focus())},e.prototype.getCurrentSchemeSettings=function(){return this.currentSchemeItem&&this.currentSchemeItem.queryConditionString?JSON.parse(this.currentSchemeItem.queryConditionString)[this.localeSer.localeId]:null},e.prototype.ngOnInit=function(){this.allCols=this.columns[0],this.gridInstance.enableScheme&&this.currentSchemeItem&&(this.settings=this.getCurrentSchemeSettings()||{}),this.settings&&this.settings.viewColumns&&this.settings.viewColumns.length?(this.fields=this.settings.viewColumns,this.dirtySettings(!0)):this.fields=this.getViewColumns(),this.container.nativeElement.focus(),this.defaultSchemeName=this.localeSer.getValue("datagrid-scheme.syspreset")||this.gridInstance.defaultSchemeName},e.prototype.getViewColumns=function(){var e=this,t=[];return this.columns.length>1?this.columns.forEach(function(n){t=t.concat(e._getViewColumns(n))}):t=this.columns[0].filter(function(e){return e.visible||e.visible===undefined}),t.map(function(e){return e.field})},e.prototype._getViewColumns=function(e){return e.filter(function(e){return!e.colspan&&(e.visible||e.visible===undefined)})},e.prototype.filterColumns=function(e){var t=this;void 0===e&&(e="");var n=[];n=this.switchValue?this.columns[0].filter(function(e){return t.fields.indexOf(e.field)>-1}):this.columns[0],e&&(n=n.filter(function(t){return t.title.toLowerCase().indexOf(e.toLowerCase())>-1})),this.allCols=n,this.searchResultIsVisibleAll=this.allCols.filter(function(e){return e.visible}).length===this.allCols.length},e.prototype.onFieldsChanged=function(){this.gridInstance.enableScheme||this.fieldsChange.emit(this.fields)},e.prototype.onDblClick=function(e,t){this.onCheckboxClick(e,t)},e.prototype.onCheckboxClick=function(e,t){var n=this;e.stopPropagation(),this.showSchemePanel=!1;var i=this.fields.indexOf(t.field);-1===i?this.fields.push(t.field):this.fields.splice(i,1),this.columns[0].forEach(function(e){e.visible=n.fields.indexOf(e.field)>-1}),this.fields=this.columns[0].filter(function(e){return e.visible}).map(function(e){return e.field}),this.searchResultIsVisibleAll=this.allCols.length===this.fields.length,this.dirtySettings(!0),this.onFieldsChanged()},e.prototype.searchColumn=function(e){var t=e.target.value;this.filterColumns(t)},e.prototype.onFieldDrop=function(e,t,n){var i;this.showSchemePanel=!1;var s=e.removedIndex,r=e.addedIndex,o=this.allCols[s],l=this.allCols[r],a=this.columns[0].findIndex(function(e){return e.field===o.field}),c=this.columns[0].findIndex(function(e){return e.field===l.field}),u=this.columns[0].splice(a,1);(i=this.columns[0]).splice.apply(i,I([c,0],u)),this.fields=this.columns[0].filter(function(e){return e.visible}).map(function(e){return e.field}),this.onFieldsChanged(),this.filterColumns(t)},e.prototype.getCheckAllState=function(){if(!this.searchInput.nativeElement.value)return 0===this.fields.length?0:this.fields.length===this.columns[0].length?1:2;var e=this.allCols.filter(function(e){return e.visible}).length;return e===this.allCols.length?1:e<this.allCols.length?0===e?0:1:void 0},e.prototype.onCheckAllClick=function(e,t){var n=this;e.stopPropagation(),this.showSchemePanel=!1;var i=this.getCheckAllState(),s=0===i||2===i;t?this.columns[0].forEach(function(e){var t=n.allCols.find(function(t){return e.field==t.field});t&&(e.visible=s,t.visible=s)}):this.columns[0].forEach(function(e){return e.visible=s}),this.fields=this.columns[0].filter(function(e){return e.visible}).map(function(e){return e.field}),this.searchResultIsVisibleAll=this.allCols.length===this.fields.length,this.dirtySettings(!0),this.onFieldsChanged(),this.filterColumns(t)},e.prototype.close=function(e){e&&e.stopPropagation(),this.closed.emit()},e.prototype.showAdvanced=function(e){this.close(e),this.advanced.emit({viewFields:this.fields})},e.prototype.onSettingReset=function(e){var t=this;e&&e.stopPropagation(),this.showSchemePanel=!1;var n=this.localeSer.getValue("datagrid.settings.restoreDefaultSettingsText")||"您确定要恢复默认设置吗？";this.messager.confirm(n,2035).subscribe(function(e){e&&(t.reset2Default(),t.dirtySettings(!0))})},e.prototype.reset2Default=function(){var e=this,t=this.gridInstance.dfs._state.initialOptions;if(t.columnFields&&t.columnFields.length){var n=[];t.columnFields.forEach(function(t){if("_datagrid-setting-control_"!==t.field){var i=e.columns[0].find(function(e){return e.field===t.field});i&&(i.visible=t.visible,i.halign=t.halign,i.align=t.align,i.width=t.width,i.footer=S({},t.footer||{}),i.groupFooter=S({},t.groupFooter||{}),n.push(i))}}),this.columns=[n]}if(this.allCols=this.columns[0],this.settings={},this.fields=this.getViewColumns(),this.settings.viewColumns=this.fields,this.settings.columnFormat=I(this.columns[0]),t.sort){var i=t.sort.sortOrder?t.sort.sortOrder.split(","):[],s=t.sort.sortName?t.sort.sortName.split(","):[];this.settings.sortInfo={sortName:s,sortOrder:i}}else this.settings.sortInfo={};this.settings.groupField=t.groupField?t.groupField.split(","):[]},e.prototype.onSubmitClick=function(e){if(e&&e.stopPropagation(),this.fields&&this.fields.length){if(this.showSchemePanel=!1,this.settings.viewColumns=this.fields,this.enableScheme&&this.currentSchemeItem){var t=this.getCurrentSchemeSettings();t&&(this.settings=Object.assign(t||{},this.settings))}else this.settings.columnFormat||(this.settings.columnFormat=I(this.columns[0])),this.settings.sortInfo||(this.settings.sortInfo={sortName:this.gridInstance.sortName?this.gridInstance.sortName.split(","):[],sortOrder:this.gridInstance.sortOrder?this.gridInstance.sortOrder.split(","):[]}),this.settings.groupField===undefined&&(this.settings.groupField=this.gridInstance.groupField?this.gridInstance.groupField.split(","):[]);this.submit.emit({content:this.settings,close:this.close.bind(this),target:this.btnOk.nativeElement,currentScheme:this.currentSchemeItem})}else this.notify.warning("请选择要显示的字段")},e.prototype.collectSettings=function(){return this.settings.viewColumns=this.fields,this.settings.columnFormat||(this.settings.columnFormat=I(this.columns[0])),this.settings.sortInfo||(this.settings.sortInfo={sortName:this.gridInstance.sortName?this.gridInstance.sortName.split(","):[],sortOrder:this.gridInstance.sortOrder?this.gridInstance.sortOrder.split(","):[]}),this.settings.groupField===undefined&&(this.settings.groupField=this.gridInstance.groupField?this.gridInstance.groupField.split(","):[]),S({},this.settings)},e.prototype.onChooseScheme=function(e){var t=this;e&&e.stopPropagation(),this.showSchemePanel=!this.showSchemePanel,setTimeout(function(){if(t.schemeitemsEleRef&&t.currentSchemeItem){var e=t.schemeitemsEleRef.nativeElement.querySelector("#schemeitem_"+t.currentSchemeItem.id);e&&(e.scrollIntoViewIfNeeded?e.scrollIntoViewIfNeeded():e.scrollIntoView())}})},e.prototype.onlySeeVisibleColumns=function(e){this.switchValue=e,this.filterColumns()},e.prototype.refresh=function(){this.cd.destroyed||this.cd.detectChanges()},e.prototype.hidePanel=function(){this.showSchemePanel=!1,this.refresh()},e.prototype.onNewSchemeClick=function(e,t){void 0===t&&(t="new"),e&&e.stopPropagation(),this.hidePanel(),this.addNewScheme.emit({type:t||"new"})},e.prototype.onShowSchemeList=function(e){e&&e.stopPropagation(),this.hidePanel(),this.showSchemeList.emit()},e.prototype.onSchemeItemClick=function(e,t){var n=this;setTimeout(function(){n.currentSchemeItem=t,n.showSchemePanel=!1;var e=null;t&&t.queryConditionString&&(e=(e=JSON.parse(t.queryConditionString))[n.localeSer.localeId])?(n.settings=e,n.fields=e.viewColumns,n.columns[0].forEach(function(e){e.visible=n.fields.indexOf(e.field)>-1})):n.reset2Default(),n.schemeChanged.emit(t),n.refresh()})},e.prototype.dirtySettings=function(e){},e.prototype.clearSearch=function(e,t){t&&t.value&&(this.filterColumns(""),t.value="")},e.decorators=[{type:i.Component,args:[{selector:"datagrid-settings-simple",template:'<div class="d-flex flex-column f-datagrid-settings-simple" tabindex="0" #colcontainer\r\n    [style.top.px]="top" [style.height]="\'calc(100vh - \' +  top + \'px)\'" >\r\n\r\n    <div class="header d-flex">\r\n        <div class="f-utils-fill title d-flex flex-row"> {{ \'datagrid.settings.simple.title\' | locale }} \r\n            <button #btnSchemeName class="btn ml-3 px-2 scheme-name d-flex flex-row"  *ngIf="enableScheme" (click)="onChooseScheme($event)">\r\n                \x3c!-- <span *ngIf="isChanged">*</span> --\x3e\r\n                <span>{{ currentSchemeItem? currentSchemeItem._title_ : defaultSchemeName }}</span>\r\n                <span class="f-icon f-icon-arrow-s ml-2" style="font-size: 12px;"></span>\r\n            </button>\r\n        </div>\r\n        <div class="closed" (click)="close($event)">\r\n            <span class="f-icon f-icon-close" style="font-size: 20px;"></span>\r\n        </div>\r\n    </div>\r\n    <div class="scheme-manager-dropdown" [style.display]="showSchemePanel? \'\': \'none\'" [style.left.px]="btnRef? btnRef.nativeElement.offsetLeft : 97"  (click)="$event.stopPropagation()">\r\n        <div class="f-utils-fill f-utils-flex-column m-2">\r\n            <div class="pb-2" style="max-height: calc(100vh - 300px);overflow: auto">\r\n                <ul #schemeitems>\r\n                    <li class="scheme-manager__item" [class.active]="!currentSchemeItem" (click)="onSchemeItemClick($event, null)"> \r\n                        \x3c!-- <span *ngIf="isChanged && !activeSchemeItem">*</span> --\x3e\r\n                        {{\'datagrid-scheme.syspreset\' | locale}}\r\n                    </li>\r\n                    <li [attr.id]="\'schemeitem_\'+ item.id" class="scheme-manager__item d-flex flex-row" \r\n                        [class.active]="currentSchemeItem && currentSchemeItem?.id === item.id"  \r\n                        *ngFor="let item of schemeList" (click)="onSchemeItemClick($event, item)" title="{{item._title_}}">\r\n                        \x3c!-- <span *ngIf="isChanged && activeSchemeItem?.id==item.id">*</span> --\x3e\r\n                        <span class="f-utils-fill mr-1" style="text-overflow: ellipsis;">{{item._title_}}</span>\r\n                        <span class="scheme-manager__label default" *ngIf="item.isDefault">{{\'datagrid-scheme.isDefault\' | locale}}</span>\r\n                        <span class="scheme-manager__label public" *ngIf="item.type === \'public\'">{{\'datagrid-scheme.isPublic\' | locale}}</span>\r\n                        <span class="scheme-manager__label private" *ngIf="!item.isDefault && item.type === \'private\'">{{\'datagrid-scheme.isPrivate\' | locale}}</span>\r\n                        <span class="scheme-manager__label org" *ngIf="item.type === \'org\'">{{\'datagrid-scheme.isOrg\' | locale}}</span>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n            <div class="d-flex scheme-manager__button-add">\r\n                <button (click)="onNewSchemeClick($event)">\r\n                    <span class="f-icon f-icon-plus"></span>{{\'datagrid-scheme.newScheme\' | locale}}\r\n                </button>\r\n            </div>\r\n\r\n            <div class="p-2 mt-2">\r\n                <div class="btn-toolbar" style="justify-content: flex-end;">\r\n                    <button class="btn btn-link mr-3" (click)="onShowSchemeList($event)">{{\'datagrid-scheme.mgrScheme\' | locale}}</button>\r\n                    <button class="btn btn-primary mr-1" (click)="onNewSchemeClick($event, \'saveas\')">{{\'datagrid-scheme.saveas\' | locale}} </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="f-utils-fill content d-flex flex-column">\r\n        <div>\r\n            <div class="d-flex flex-row mb-2" style="align-items: center;">\r\n                <h5 class="count f-utils-fill m-0" [innerHTML]="\'datagrid.settings.simple.count\' | locale | replaceX: fields.length"></h5>\r\n                <div class="d-flex flex-row">{{\'datagrid-scheme.onlyshowcolumns\' | locale}} \r\n                    <farris-switch style="position: relative;\r\n                    top: 2px;\r\n                    margin-left: 5px;"\r\n                    id="only-visible-columns"\r\n                    [square]="false" [size]="\'small\'"\r\n                    [ngModel]="switchValue" \r\n                    (valueChange)="onlySeeVisibleColumns($event)"\r\n                    ></farris-switch>\r\n                </div>\r\n            </div>\r\n\r\n            <div class="tip">\r\n                {{ \'datagrid.settings.simple.tip\' | locale }}\r\n            </div>\r\n            <div class="input-group mb-2 scheme-manager__search-box">\r\n                <input #inputWord type="text" class="form-control" placeholder="{{\'datagrid.settings.searchPlaceholder\' | locale}}"\r\n                (input)="searchColumn($event)" style="height: 26px;">\r\n                <div  class="input-group-append" style="cursor: pointer">\r\n                    <span  class="fa f-icon-search" [class.f-icon-close]="inputWord.value" (click)="clearSearch($event, inputWord)"></span>\r\n                </div>\r\n            </div>\r\n            \r\n\r\n            <div style="padding: 5px 0px;">\r\n                <button class="btn btn-link " style="height: 32px;padding-left: 4px;" (click)="onCheckAllClick($event,inputWord.value)">\r\n                    <span class="f-icon f-icon-minus-outline checkall" [class.f-icon-checkbox]=" inputWord.value ? !searchResultIsVisibleAll : !fields.length"\r\n                        [class.f-icon-checkbox-checked]=" searchInput.nativeElement.value ?  searchResultIsVisibleAll : fields.length && fields.length === allCols.length"></span>\r\n                    {{ \'datagrid.settings.checkall\' | locale }}\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <div style="overflow: auto;padding-right:3px" class="f-utils-fill">\r\n            <ul class="list-group list-group-flush" #ul column-visible-drag (drop)="onFieldDrop($event, inputWord.value, ul)">\r\n                <li class="list-group-item list-group-item-action smooth-dnd-draggable-wrapper format-setting-column" *ngFor="let col of allCols" \r\n                    (click)="onDblClick($event, col)">\r\n                    <span class="f-icon checkbox"\r\n                        [class.f-icon-checkbox-checked]="fields.length && fields.indexOf(col.field) > -1"\r\n                        [class.f-icon-checkbox]="!fields.length || fields.indexOf(col.field) == -1"\r\n                        (click)="onCheckboxClick($event, col)"></span>\r\n                    {{ col.title}} \r\n\r\n                    <span class="f-icon f-icon-drag-vertical field-drag-handle" *ngIf="!inputWord.value"></span>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n\r\n    </div>\r\n    <div class="footer">\r\n\r\n        <div class="buttons">\r\n            <button class="btn btn-link advanced" (click)="showAdvanced($event)">{{ \'datagrid.settings.advancedMode\' | locale: \'高级模式\' }}</button>\r\n            <button class="btn btn-link reset" (click)="onSettingReset($event)">{{ \'datagrid.settings.reset\' | locale: \'恢复默认\' }}</button>\r\n            <button class="btn btn-secondary cancel"\r\n                (click)="close($event)">{{\'datagrid.settings.cancel\' | locale}}</button>\r\n            <button class="btn btn-primary ok" #okbtn\r\n                (click)="onSubmitClick($event)">{{\'datagrid.settings.ok\' | locale}}</button>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n\r\n',encapsulation:i.ViewEncapsulation.None}]}],e.ctorParameters=function(){return[{type:i.Injector},{type:i.ChangeDetectorRef}]},e.propDecorators={enableScheme:[{type:i.Input}],seartTypes:[{type:i.Input}],columns:[{type:i.Input}],fields:[{type:i.Input}],clickToHidden:[{type:i.Input}],top:[{type:i.Input}],schemeList:[{type:i.Input}],cls:[{type:i.HostBinding,args:["class"]}],container:[{type:i.ViewChild,args:["colcontainer"]}],btnOk:[{type:i.ViewChild,args:["okbtn"]}],searchInput:[{type:i.ViewChild,args:["inputWord"]}],schemeitemsEleRef:[{type:i.ViewChild,args:["schemeitems"]}],btnRef:[{type:i.ViewChild,args:["btnSchemeName"]}],formatChange:[{type:i.Output}],fieldsChange:[{type:i.Output}],submit:[{type:i.Output}],closed:[{type:i.Output}],advanced:[{type:i.Output}],addNewScheme:[{type:i.Output}],showSchemeList:[{type:i.Output}],activeItemChange:[{type:i.Output}],schemeChanged:[{type:i.Output}],onClick:[{type:i.HostListener,args:["click",["$event"]]}],onEscKeydown:[{type:i.HostListener,args:["window:keydown.esc",["$event"]]}],onEnterKeydown:[{type:i.HostListener,args:["window:keydown.enter",["$event"]]}],onControlGKeydown:[{type:i.HostListener,args:["keydown",["$event"]]}]},e}(),D="/api/runtime/sys/v1.0/querysolution",k=function(){function e(){this.restService=null,this.state={},this.schemeList$=new n.Subject}return e.prototype.update=function(e,t){this.state[t]||(this.state[t]={}),this.state[t]=Object.assign(this.state[t],e)},e.prototype.setRestService=function(e){e&&e.befRepository&&(this.restService=e.befRepository.restService)},e.prototype.getWebFormKey=function(){var e=window.location.hash.split("?")[0];return e.substring(e.lastIndexOf("/")+1)},e.prototype.getSchemeKey=function(e){return this.getWebFormKey()+"_DatagridScheme_"+e},e.prototype.getSchemeList=function(e){var t="/api/runtime/sys/v1.0/querysolution/belongId/"+this.getSchemeKey(e);if(this.restService)return this.restService.invoke(t,"GET",null,null,!1)},e.prototype.saveScheme=function(e,t,n){if(void 0===n&&(n=!1),this.restService){var i=n?"PUT":"POST";return e.belongId=this.getSchemeKey(t),this.restService.invoke(D,i,null,{body:e},!1)}},e.prototype.updateScheme=function(e,t){if(!e)return n.of(!1);var i=this.getSchemeKey(t);return e.belongId=i,e.belongId?this.restService.invoke("/api/runtime/sys/v1.0/querysolution/batch","PUT",null,{body:e},!1):void 0},e.prototype.getStateValue=function(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];var i=this.state[e];return i?t&&t.length?t.reduce(function(e,t){return e[t]},i):i:null},e.prototype.updateStateValue=function(e,t,n){var i;this.update(((i={})[t]=n,i),e)},e.prototype.setSchemeList=function(e,t){this.updateStateValue(e,"list",t),this.schemeList$.next(t)},e.prototype.hasSchemeName=function(e,t){var n=this.getStateValue(e,"list");if(!n||!n.length)return!1;if("string"==typeof t)return!!n.find(function(e){return e.name===t.trim()});if("object"==typeof t){var i=[];return n.forEach(function(e){if(e.name){var n=JSON.parse(e.name);for(var s in t)n[s]===t[s]&&i.push(s)}}),i}},e.prototype.checkAuthority=function(){return this.restService.invoke("/api/runtime/sys/v1.0/querysolution/componentType/Datagrid","GET",null,null,!1)},e.prototype.getLanguages=function(){return this.restService?this.restService.invoke("/api/runtime/sys/v1.0/loginInfo?infoType=supportedLanguage","GET",null,null,!1):n.of([])},e}(),O=function(){function e(e){this.cd=e,this.dataPermissionIds=[],this.closeModal=new i.EventEmitter,this.submitModal=new i.EventEmitter,this.checkAuthority=new i.EventEmitter,this.schemeInfo={name:"",isDefault:!1,type:"private",orgids:""},this.schemeType="private",this.noPublicAuthority=!1,this.noOrgAuthority=!1,this.languages=[{code:"zh-CHS",name:"中文简体","default":!0},{code:"en",name:"English"},{code:"zh-CHT",name:"中文繁体"}],this.nameMaxLength={"zh-CHS":9,"zh-CHT":9,en:20}}return e.prototype.ngOnInit=function(){},e.prototype.close=function(e){this.closeModal.emit()},e.prototype.submit=function(e){this.submitModal.emit(this.schemeInfo)},e.prototype.onCancelClick=function(e){this.close(e)},e.prototype.onSelectedOrg=function(e){if(e.selections&&e.selections.length){var t=e.selections.map(function(e){return e.orgId});this.schemeInfo.orgids=t}},e.prototype.onSetRangeType=function(e,t){e.stopPropagation(),this.schemeType=t,"public"===t||"org"===t?this.checkAuthority.emit({value:t,schemeInfo:this.schemeInfo}):this.schemeInfo.type=t},e.prototype.refresh=function(e){void 0===e&&(e={"public":!0,org:!0}),this.schemeInfo=S({},this.schemeInfo),this.schemeType=this.schemeInfo.type,this.noPublicAuthority=!e["public"],this.noOrgAuthority=!e.org,this.cd.detectChanges()},e.prototype.getSelectedId=function(e){e.selections&&e.selections.length?this.schemeInfo.orgids=e.selections.map(function(e){return e.orgId}):this.schemeInfo.orgids=""},e.prototype.clearAllOrgs=function(){this.schemeInfo.orgids=""},e.decorators=[{type:i.Component,args:[{selector:"new-scheme",template:'\r\n\r\n\r\n<div class="f-datagrid-save-scheme d-flex flex-column" style="height: 100%;">\r\n\r\n    <div class="d-flex justify-content-between header" #header >\r\n        <div class="title">{{\'datagrid-scheme.saveTitle\' | locale}}</div>\r\n        <div class="close" style="margin-right: 20px;">\r\n            <span class="f-icon modal_close" (click)="close($event)"></span>\r\n        </div>\r\n    </div>\r\n\r\n    <div class="f-utils-fill  mx-3 p-3 mt-1" >\r\n        \x3c!-- <div class="input-group mb-3 scheme-manager__search-box">\r\n            <input #schemeName type="text" class="form-control" maxlength="9" placeholder="{{\'datagrid-scheme.namePlaceholder\' | locale}}" style="height: 26px;" name="name" [(ngModel)]="schemeInfo.name">\r\n        </div> --\x3e\r\n        <div class=" mb-3">\r\n            <language-textbox [(ngModel)]="schemeInfo.name" [editable]="true" [languages]="languages" [maxWords]="nameMaxLength"></language-textbox>\r\n        </div>\r\n            \r\n    \r\n        <div class="input-group mb-2" style="border: 0;">\r\n          \r\n            <div class="custom-control custom-radio  custom-control-inline " style="align-items: center">\r\n                <input class="custom-control-input" type="radio" id="private-scheme"  name="schemeType"  (click)="onSetRangeType($event, \'private\')" value="private" [checked]="schemeType === \'private\'">\r\n                <label class="custom-control-label" for="private-scheme">{{\'datagrid-scheme.setPrivate\' | locale}}</label>\r\n                <span class="icon-question" farrisTooltip [zIndex]="2040" [placement]="\'right\'" [delay]="500" [content]="\'datagrid-scheme.privateTip\' | locale">?</span>\r\n            </div>\r\n            <div class="custom-control custom-radio  custom-control-inline " style="align-items: center">\r\n                <input class="custom-control-input" type="radio" id="public-scheme" name="schemeType" (click)="onSetRangeType($event, \'public\')" value="public" [checked]="schemeType === \'public\'" >\r\n                <label class="custom-control-label" for="public-scheme">{{\'datagrid-scheme.setPublic\' | locale}}</label>\r\n                <span class="icon-question" farrisTooltip [zIndex]="2040" [placement]="\'right\'" [delay]="500" [content]="\'datagrid-scheme.publicTip\' | locale">?</span>\r\n            </div>\r\n            <div class="custom-control custom-radio  custom-control-inline " style="align-items: center">\r\n                <input class="custom-control-input" type="radio" id="org-scheme" name="schemeType" (click)="onSetRangeType($event, \'org\')"  value="org" [checked]="schemeType === \'org\'" >\r\n                <label class="custom-control-label" for="org-scheme">{{\'datagrid-scheme.setOrg\' | locale}}</label>\r\n                <span class="icon-question" farrisTooltip [zIndex]="2040" [placement]="\'right\'" [delay]="500" [content]="\'datagrid-scheme.orgTip\' | locale">?</span>\r\n            </div>\r\n        </div>\r\n        <div class="input-group mb-2" style="border: 0;" *ngIf="schemeInfo.type === \'private\'">\r\n            <div class="custom-control custom-checkbox  custom-control-inline " style="align-items: center">\r\n                <input class="custom-control-input" type="checkbox" id="default-scheme" name="isDefault" [(ngModel)]="schemeInfo.isDefault">\r\n                <label class="custom-control-label" for="default-scheme">{{\'datagrid-scheme.setDefault\' | locale}} <i class="scheme-org-tip">({{\'datagrid-scheme.defaultTip\' | locale}})</i></label>\r\n                \x3c!-- <span class="icon-question" farrisTooltip [placement]="\'right\'" [delay]="500" [content]="\'下次进入此功能时，默认加载该方案\'">?</span> --\x3e\r\n            </div>\r\n        </div>\r\n\r\n        <div class="input-group mb-2" style="border: 0;" *ngIf="schemeInfo.type === \'org\' && !noOrgAuthority">\r\n            <div class="input-group mb-3">\r\n                <farris-organization-selector\r\n                    [primaryField]="\'orgId\'" [displayField]="\'name\'"\r\n                    [absOrgType]="\'System_organization\'"\r\n                    [layer]="1" [multiSelect]="true" [showTabIds]="\'organization\'"\r\n                    [enableHierarchicalLoading]="true" \r\n                    [cascadeCheck]="true" [cascadeDown]="true"\r\n                    (selectionsChange)="onSelectedOrg($event)"\r\n                    [cascadeUp]="false"\r\n                    [orgIds]="dataPermissionIds"\r\n                    (inputClear)="clearAllOrgs()" (tagRemoved)="getSelectedId($event)"\r\n                    [dataPermission]="true" [dataPermissionIds]="dataPermissionIds" \r\n                ></farris-organization-selector>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class="p-3 mb-3" style="height: 50px;text-align: right;">\r\n        <button class="btn btn-secondary cancel btn-lg mr-3" style="width: 70px"\r\n            (click)="onCancelClick($event)">{{\'datagrid.settings.cancel\' | locale}}</button>\r\n        <button class="btn btn-primary ok btn-lg" style="width: 70px"\r\n            (click)="submit($event)">{{\'datagrid.settings.ok\' | locale}}</button>\r\n    </div>\r\n\r\n</div>',encapsulation:i.ViewEncapsulation.None}]}],e.ctorParameters=function(){return[{type:i.ChangeDetectorRef}]},e.propDecorators={header:[{type:i.ViewChild,args:["header"]}],dataPermissionIds:[{type:i.Input}],closeModal:[{type:i.Output}],submitModal:[{type:i.Output}],checkAuthority:[{type:i.Output}]},e}(),T=function(){function e(e,t,n){this.cd=e,this.localeSer=t,this.injector=n,this.items=[],this.closeModal=new i.EventEmitter,this.submitModal=new i.EventEmitter,this.removeItem=!0,this.columns=[],this.currentUserId="",this.changes=null}return e.prototype.ngOnInit=function(){var e=this,t=this.localeSer.getValue("datagrid-scheme.columns.name")||"名称",n=this.localeSer.getValue("datagrid-scheme.columns.type")||"属性",i=this.localeSer.getValue("datagrid-scheme.columns.isDefault")||"默认",s=this.localeSer.getValue("datagrid-scheme.columns.username")||"创建人",r=this.localeSer.getValue("datagrid-scheme.columns.mgr")||"管理",o=this.localeSer.getValue("datagrid-scheme.isPublic")||"公共",l=this.localeSer.getValue("datagrid-scheme.isPrivate")||"个人",a=this.localeSer.getValue("datagrid-scheme.isOrg")||"组织";this.columns=[{field:"name",title:t,width:150,formatter:function(t){return x(JSON.parse(t),e.localeSer.localeId)}},{field:"type",title:n,width:50,halign:"center",align:"center",formatter:function(e,t){switch(e){case"public":return'<span class="scheme-manager__label px-1 public">'+o+"</span>";case"org":return'<span class="scheme-manager__label px-1 org">'+a+"</span>";case"private":default:return'<span class="scheme-manager__label px-1 private">'+l+"</span>"}}},{field:"isDefault",title:i,width:50,halign:"center",align:"center",template:this.schemeIsDefault},{field:"userName",title:s,width:80},{title:r,width:50,template:this.btnDel,halign:"center",align:"center"}]},e.prototype.onClose=function(e){this.closeModal.emit()},e.prototype.onSubmitClick=function(e){this.submitModal.emit(this.changes)},e.prototype.onCancelClick=function(e){this.closeModal.emit()},e.prototype.setDefault=function(e,t){var n="1"==e;this.items.forEach(function(e){e.isDefault=!1,e.id===t.rowData.id&&n&&(e.isDefault=n)}),this.items=I(this.items);var i=this.items.find(function(e){return e.isDefault});i&&(this.changes=this.changes||{},this.changes.defaultId=i.id)},e.prototype.onSchemeDel=function(e,t){if(this.currentUserId===t.rowData.userId&&"private"==t.rowData.type||this.removeItem){e.stopPropagation();var n=t.rowData.id;this.items=this.items.filter(function(e){return e.id!==n}),this.changes=this.changes||{},this.changes.deletedIds=I(this.changes.deletedIds||[],[n]),n===this.changes.defaultId&&(this.changes.defaultId="",delete this.changes.defaultId)}},e.decorators=[{type:i.Component,args:[{selector:"scheme-list",template:'\r\n<div class="f-datagrid-save-scheme d-flex flex-column" style="height: 100%;">\r\n    <div class="d-flex justify-content-between header" #header >\r\n        <div class="title">{{\'datagrid-scheme.schemeList\' | locale}}</div>\r\n        <div class="close" style="margin-right: 20px;">\r\n            <span class="f-icon modal_close" (click)="onClose($event)"></span>\r\n        </div>\r\n    </div>\r\n\r\n    <div class="f-utils-fill mx-3 mt-1" >\r\n        <farris-datagrid #dg\r\n            [columns]="columns"\r\n            [data]="items"\r\n            [fit]="true"\r\n            [fitColumns]="true"\r\n            [pagination]="false"\r\n            [editable]="false">\r\n        </farris-datagrid>\r\n    </div>\r\n\r\n    <div class="p-3 mb-3" style="height: 50px;text-align: right;">\r\n        <button class="btn btn-secondary cancel btn-lg mr-3" style="width: 70px"\r\n            (click)="onCancelClick($event)">{{\'datagrid.settings.cancel\' | locale}}</button>\r\n        <button class="btn btn-primary ok btn-lg" style="width: 70px"\r\n            (click)="onSubmitClick($event)">{{\'datagrid.settings.ok\' | locale}}</button>\r\n    </div>\r\n</div>\r\n\r\n<ng-template #schemeName let-ctx>\r\n    <div class="input-group">\r\n        <input type="text" class="form-control" [(ngModel)]="ctx.rowData[\'name\']">\r\n    </div>\r\n</ng-template>\r\n<ng-template #schemeIsDefault let-ctx>\r\n    <div class="f-datagrid-cell-formgroup farris-group-auto f-datagrid_scheme-switch" [style.opacity]="ctx.rowData[\'type\'] !== \'private\' ? 0.6: 1" style="line-height:100%" #ctrlbox hidefocus="true">\r\n        <farris-switch [(ngModel)]="ctx.rowData[\'isDefault\']" trueValue="1" falseValue="0"\r\n        (valueChange)="setDefault($event, ctx)"  [disabled]="ctx.rowData[\'type\'] !== \'private\' || ctx.rowData[\'isDefault\']"></farris-switch>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template let-ctx #btnDel>\r\n    <a href="javascript:void(0)" (click)="onSchemeDel($event, ctx)" title="{{\'datagrid-scheme.delete\' | locale}}" *ngIf="removeItem || (ctx.rowData[\'userId\'] === currentUserId && ctx.rowData[\'type\']==\'private\')">\r\n        <span class="f-icon f-icon-yxs_delete"></span>\r\n    </a>\r\n</ng-template>'}]}],e.ctorParameters=function(){return[{type:i.ChangeDetectorRef},{type:o.LocaleService},{type:i.Injector}]},e.propDecorators={items:[{type:i.Input}],closeModal:[{type:i.Output}],submitModal:[{type:i.Output}],removeItem:[{type:i.Input}],header:[{type:i.ViewChild,args:["header"]}],schemeName:[{type:i.ViewChild,args:["schemeName"]}],schemeIsDefault:[{type:i.ViewChild,args:["schemeIsDefault"]}],btnDel:[{type:i.ViewChild,args:["btnDel"]}],dg:[{type:i.ViewChild,args:["dg"]}]},e}(),E={en:{"datagrid-settings":{noAuth:{"public":"You do not have permission to set the usage scope of the scheme as public.",org:"You do not have permission to set the usage range of the scheme as organization."},has:{exist:"The scheme name already exists, please modify it.",chs:"Simplified Chinese name already exists.",cht:"Traditional Chinese name already exists.",en:"English name already exists."},required:{schemeName:"Please enter a scheme name.",chs:"Please enter a simplified Chinese name.",cht:"Please enter a name in Traditional Chinese.",en:"Please enter an English name.",org:"Please select an organization."},groupRowStatus:{label:"Group Row Status",expand:"open",collapse:"fold"}},"datagrid-scheme":{saveTitle:"Save Scheme",namePlaceholder:"Please enter a scheme name (no more than 9 characters)",setPrivate:"Private",privateTip:"When set as private, you can only view and use the scheme yourself",setPublic:"Public",publicTip:"When public, all users can view and use the scheme",setOrg:"Organization",orgTip:"When it is set to organization, users in the organization can view and use the scheme",setDefault:"Default",defaultTip:"The next time you enter this function, the scheme will be loaded by default",syspreset:"System preset",isDefault:"Default",isPublic:"Public",isOrg:"Org",isPrivate:"Private",newScheme:"Add New Scheme",mgrScheme:"Manage",saveas:"Save as",onlyshowcolumns:"only the display column",schemeList:"Scheme list","delete":"Delete this shceme",columns:{name:"Name",type:"Type",isDefault:"IsDefault",username:"Creator",mgr:"Manage"}}},"zh-CHS":{"datagrid-settings":{noAuth:{"public":"您没有将方案的使用范围设置为公共的权限。",org:"您没有将方案的使用范围设置为组织的权限。"},has:{exist:"方案名称已存在，请修改。",chs:"简体中文名称已存在。",cht:"繁体中文名称已存在。",en:"英文名称已存在。"},required:{schemeName:"请输入方案名称。",chs:"请输入简体中文名称。",cht:"请输入繁体中文名称。",en:"请输入英文名称。",org:"请选择组织。"},groupRowStatus:{label:"分组行状态",expand:"展开",collapse:"折叠"}},"datagrid-scheme":{saveTitle:"保存方案",namePlaceholder:"请输入方案名称（最多不超过9个字符）",setPrivate:"设为个人",privateTip:"设为个人时，只能自己查看、使用该方案",setPublic:"设为公共",publicTip:"设为公共时，所有用户都可查看、使用该方案",setOrg:"设为组织",orgTip:"设为组织时，组织内的用户均能查看、使用该方案",setDefault:"设为默认",defaultTip:"下次进入此功能时，默认加载该方案",syspreset:"系统预制",isDefault:"默认",isPublic:"公共",isOrg:"组织",isPrivate:"个人",newScheme:"新增方案",mgrScheme:"管理",saveas:"另存为",onlyshowcolumns:"仅看展示列",schemeList:"方案列表","delete":"删除",columns:{name:"名称",type:"属性",isDefault:"默认",username:"创建人",mgr:"管理"}}},"zh-CHT":{"datagrid-settings":{noAuth:{"public":"您沒有將方案的使用範圍設置爲公共的權限。",org:"您沒有將方案的使用範圍設置爲組織的權限。"},has:{exist:"方案名稱已存在，請修改。",chs:"簡體中文名稱已存在。",cht:"繁體中文名稱已存在。",en:"英文名稱已存在。"},required:{schemeName:"請輸入方案名稱.",chs:"請輸入簡體中文名稱。",cht:"請輸入繁體中文名稱。",en:"請輸入英文名稱。",org:"請選擇組織。"},groupRowStatus:{label:"分組行狀態",expand:"展開",collapse:"折疊"}},"datagrid-scheme":{saveTitle:"保存方案",namePlaceholder:"請輸入方案名稱（最多不超過9個字符）",setPrivate:"設爲個人",privateTip:"設爲個人時，只能自己查看、使用該方案",setPublic:"設爲公共",publicTip:"設爲公共时，所有用戶都可查看、使用該方案",setOrg:"設爲組織",orgTip:"設爲組織時，組織內的用戶均能查看、使用該方案",setDefault:"設爲默認",defaultTip:"下次進入此功能時，默認加載該方案",syspreset:"系統預制",isDefault:"默認",isPublic:"公共",isOrg:"組織",isPrivate:"個人",newScheme:"新增方案",mgrScheme:"管理",saveas:"另存爲",onlyshowcolumns:"僅看展示列",schemeList:"方案列表","delete":"刪除",columns:{name:"名稱",type:"屬性",isDefault:"默認",username:"創建人",mgr:"管理"}}}},R=new i.InjectionToken(" Farris DataGrid User Setting WebApi URI."),P=function(){function e(e,t,n,s,r){this.injector=e,this.modalSer=t,this.messager=n,this.idService=s,this.localeSer=r,this.multiSortMsg="列表中未开启多列排序的功能。 请检查！",this.columnsSortableMsg="未开启列的排序功能。请检查！",this.notSupportHeaderGroupMsg="暂不支持多表头设置",this.notShowDialog="多表头暂不支持列显示设置；同时未启用列排序功能。",this._httpRestService=null,this.languages=[],this.gridRefs=null,this.activeSchemeItem=null,this.saving=!1,this.cfr=null,this.app=null,this.schemeListSubscription=null,this.currentSchemeitem=null,this.debugSer=null,this.cfr=this.injector.get(i.ComponentFactoryResolver),this.app=this.injector.get(i.ApplicationRef),this.notifyService=this.injector.get(c.NotifyService,null),this.debugSer=this.injector.get(a.DebugService,null),this.schemeService=new k,this.localeSer.setLocaleData(E)}return Object.defineProperty(e.prototype,"httpRestService",{get:function(){return this._httpRestService},set:function(e){this._httpRestService=e,this.schemeService&&this.schemeService.setRestService(e)},enumerable:!0,configurable:!0}),e.prototype.destroy=function(e){this.gridRefs&&(e&&this.gridRefs[e]?(this.gridRefs[e]=null,delete this.gridRefs[e]):Object.keys(this.gridRefs).length||(this.gridRefs=null)),this.saving=!1,this.setActiveSchemeItem(e,null)},e.prototype.writeDebugMsg=function(e,t){void 0===t&&(t="warn"),this.debugSer&&(this.debugSer[t]?this.debugSer[t](e):console[t](e))},e.prototype.registerGridInstance=function(e){if(e){var t=e.id;this.gridRefs=this.gridRefs||{},this.gridRefs[t]||(this.gridRefs[t]=e)}else this.writeDebugMsg("DatagridSettingService: grid instance is null.")},e.prototype.getGridInstance=function(e){return this.gridRefs?this.gridRefs[e]:null},e.prototype.updateSchemeSettings=function(e,t){if(e&&t){var n=e.queryConditionString?JSON.parse(e.queryConditionString):{};if(n){if(n[this.localeSer.localeId]){var i=n[this.localeSer.localeId]||{};n[this.localeSer.localeId]=Object.assign(i,t)}else n[this.localeSer.localeId]=t;e.queryConditionString=JSON.stringify(n)}}},e.prototype.updateActiveSchemeItemSettings=function(e,t){var n=this.getActiveSchemeItem(e);this.updateSchemeSettings(n,t)},e.prototype.setActiveSchemeItem=function(e,t){var n=this.schemeService.getSchemeKey(e);this.activeSchemeItem=this.activeSchemeItem||{},this.activeSchemeItem[n]=t},e.prototype.getActiveSchemeItem=function(e){var t=this.schemeService.getSchemeKey(e);return this.activeSchemeItem?this.activeSchemeItem[t]:null},e.prototype.getSearchTypes=function(){return[{value:"all",title:this.localeSer.getValue("datagrid.settings.allColumns")},{value:"visible",title:this.localeSer.getValue("datagrid.settings.visibleColumns")},{value:"hidden",title:this.localeSer.getValue("datagrid.settings.hiddenColumns")}]},e.prototype.showSimple=function(e,i,s){var r=this,o=this.convertColumnsToSimple(e.columns);o[0]=I(o[0].filter(function(t){return t.field&&t.field!==e.ControlPanelFeild}));var a=this.getSearchTypes();if(this.cfr){var c=this.cfr.resolveComponentFactory(F).create(this.injector);if(this.app.attachView(c.hostView),c.instance.columns=o,c.instance.seartTypes=a,c.instance.gridInstance=e,document.querySelector("#page-wrapper")&&(c.instance.top=76),c.instance.enableScheme=e.enableScheme,e.enableScheme)if(i)s?(this.updateSchemeSettings(s,i),c.instance.currentSchemeItem=s):(c.instance.currentSchemeItem=null,c.instance.settings=i);else{var u=this.getActiveSchemeItem(e.id);this.currentSchemeitem=u,c.instance.currentSchemeItem=u}return document.body.appendChild(c.location.nativeElement),c.instance.closed.pipe(t.switchMap(function(){if(c)return c.instance.container.nativeElement.style.right="-500px",n.timer(500)})).subscribe(function(){c.location.nativeElement.remove(),c.destroy(),c=null,r.schemeListSubscription&&r.schemeListSubscription.unsubscribe();var t=r.getActiveSchemeItem(e.id);if((!r.currentSchemeitem||t&&t.id!==r.currentSchemeitem.id)&&t&&t.queryConditionString){var n=JSON.parse(t.queryConditionString)[r.localeSer.localeId];n&&o[0].forEach(function(e){e.visible=n.viewColumns.indexOf(e.field)>-1})}}),c.instance.advanced.subscribe(function(t){var n=t.viewFields;n&&n.length&&r.updateSchemeSettings(c.instance.currentSchemeItem,{viewColumns:n}),r.showAdvanced(e,null,c.instance.currentSchemeItem)}),c.instance.submit.subscribe(function(t){t.target.disabled=!0,r.saving||r.saving||(r.setActiveSchemeItem(e.id,t.currentScheme),r.updateGridView(t,e,t.target))}),c.instance.fieldsChange.subscribe(function(t){r.updateActiveSchemeItemSettings(e.id,{viewColumns:t})}),c.instance.addNewScheme.subscribe(function(t){r.showNewSchemeDialog(e,t,c)}),c.instance.schemeList=this.schemeService.getStateValue(e.id,"list")||[],c.instance.showSchemeList.subscribe(function(){r.schemeService.getSchemeList(e.id).pipe(t.switchMap(function(e){return r.schemeService.checkAuthority().pipe(t.map(function(t){return S({list:e},t)}))})).subscribe(function(t){r.schemeService.setSchemeList(e.id,t.list||[]),r.showSchemeListDialog(e,l.cloneDeep(t.list||[]),t,c)})}),this.schemeListSubscription=this.schemeService.schemeList$.subscribe(function(t){if(c.instance.schemeList=t,t&&t.length){var n=r.getActiveSchemeItem(e.id);if(n){var i=t.find(function(e){return e.id===n.id});i||(i=r.getDefaultScheme(t),r.setActiveSchemeItem(e.id,i||null)),c.instance.currentSchemeItem=i}}else r.setActiveSchemeItem(e.id,null)}),c.instance.schemeChanged.subscribe(function(e){r.currentSchemeitem=e}),c.hostView.detectChanges(),c.instance.container.nativeElement.style.right="0px",c}},e.prototype.show=function(e,t){return this.registerGridInstance(e),e.enableSimpleMode?this.showSimple(e):this.showAdvanced(e,t)},e.prototype.showAdvanced=function(e,t,n){var i=this,s=!0;!0!==this.canSetColumnSort(e)&&(s=!1);var r=!this.isHeaderGroup(e),o=r?1:s?2:-1;if(-1!==o){var a=this.convertColumnsToSimple(e.columns),c=null;n&&n.queryConditionString&&((c=JSON.parse(n.queryConditionString)[this.localeSer.localeId]).columnFormat&&c.columnFormat.length&&(a[0]=a[0].map(function(e){var t=c.columnFormat.find(function(t){return t.field===e.field});return t&&(e=Object.assign(e,t)),e})),c.viewColumns&&c.viewColumns.length&&a[0].forEach(function(e){e.visible=c.viewColumns.indexOf(e.field)>-1})),a[0]=a[0].filter(function(t){return t.field&&t.field!==e.ControlPanelFeild});var u=this.convertColumns2TreeData(l.cloneDeep(a),!0),d=this.convertColumns2TreeData(l.cloneDeep(a),!1);this.checkViewTreeNodes(d);var h=null,p=(this.localeSer.getValue("datagrid.settings.ok"),this.localeSer.getValue("datagrid.settings.cancel"),this.localeSer.getValue("datagrid.settings.reset"),{width:760,height:560,showHeader:!1,title:"控制面板",initialState:{columns:a,sortTreeData:u,viewTreeData:d,gridInstance:e,canSetColumnSort:s,canSetColumnVisible:r,activeTabIndex:o,schemeInfo:c},showButtons:!1}),m=Object.assign(p,t||{}),g=(h=this.modalSer.show(w,m)).content;return g.enableReset=!0,g.modalRef=h,g.canSetColumnSort=s,g.canSetColumnVisible=!this.isHeaderGroup(e),g.submitHandle.subscribe(function(t){t.target.disabled=!0,i.saving||i.saving||(n&&i.setActiveSchemeItem(e.id,n),i.updateGridView(h,e,t.target))}),g.cancelHandle.subscribe(function(e){h.close()}),g.concise.subscribe(function(t){h.close();var s=h.content,r=s.sortInfo,o=s.viewColumns,l=s.columnFormat,a=s.groupField;i.showSimple(e,{sortInfo:r,viewColumns:o,columnFormat:l,groupField:a},n)}),h.dialog.instance.draggbar.handle=g.header.nativeElement,h}this.messager.warning(this.notShowDialog)},e.prototype.canSetColumnSort=function(e){return!(!e.multiSort||!this.hasEnableSortColumns(e))||(this.hasEnableSortColumns(e)?e.multiSort?void 0:this.multiSortMsg:this.columnsSortableMsg)},e.prototype.hasEnableSortColumns=function(e){return e.flatColumns.reduce(function(e,t){return t.sortable?e+1:e},0)>0},e.prototype.isHeaderGroup=function(e){var t=e.columns.length>1;return t?this.notSupportHeaderGroupMsg:t},e.prototype.getChilds=function(e,t,n,i,s){var r=this;void 0===s&&(s=!1);var o=[],l=n;return e[t]?(e[t].slice().forEach(function(e){(l+=e.colspan)<=i&&o.push(e)}),e[t].splice(0,o.length),o.map(function(n,i){var o={data:n,selectable:!s||!!n.sortable};return n.colspan&&n.colspan>1&&(o={data:n,selectable:!1,expanded:!0,children:r.getChilds(e,t+1,0,n.colspan)}),o})):[]},e.prototype.convertColumns2TreeData=function(e,t){var n=this;void 0===t&&(t=!1);var i=e.map(function(e){return e.map(function(e){return-1==e.field.indexOf("farris-datagrid-column_")?(e.colspan=e.colspan||1,e):null}).filter(function(e){return e})});return 1===i.length?i[0].map(function(e){return{data:e,selectable:!t||!!e.sortable}}):i[0].map(function(e,s){return e.colspan&&e.colspan>1?{data:e,selectable:!1,expanded:!0,children:n.getChilds(i,1,0,e.colspan,t)}:{data:e,selectable:!t||!!e.sortable}})},e.prototype.checkViewTreeNodes=function(e){var t=this;e.forEach(function(e){e.children&&e.children.length?(e.selectable=!1,t.checkViewTreeNodes(e.children)):e.selectable=!0})},e.prototype._convertColumnsToSimple=function(e){var t=e.columns,n=e.dfs._state.initialOptions;if(n.columnFields){var i=n.columnFields,s=[];i.forEach(function(t){if("_datagrid-setting-control_"!==t.field){var n=e.columns[0].find(function(e){return e.field===t.field});n&&s.push(n)}}),t=[s]}return t},e.prototype.convertColumnsToSimple=function(e){return e.map(function(e){return e.map(function(e){if("_datagrid-setting-control_"!==e.field)return{field:e.field,title:e.title,colspan:e.colspan,rowspan:e.rowspan,sortable:e.sortable,order:e.order,halign:e.halign||"left",align:e.align||"left",visible:e.visible,allowGrouping:e.allowGrouping,groupFooter:e.groupFooter,footer:e.footer,width:e.width||100,dataType:e.dataType||"string"}}).filter(function(e){return e})})},e.prototype.resetGridView=function(e){if(e){var t=e.dfs;if(t){var n=t._state.initialOptions;if(n.sort&&(n.sort.sortName&&(e.sortName=n.sort.sortName),n.sort.sortOrder&&(e.sortOrder=n.sort.sortOrder)),e.groupField=n.groupField||"",n.columnFields&&n.columnFields.length){var i=[];n.columnFields.forEach(function(t){var n=e.columns[0].find(function(e){return e.field===t.field});n&&(n.visible=t.visible,n.halign=t.halign,n.align=t.align,n.width=t.width,n.footer=t.footer,n.groupFooter=t.groupFooter,i.push(n))}),e.columns[0]=i}e.columnsChanged()}}},e.prototype.updateGridView=function(e,t,n){var i=this;void 0===n&&(n=null);var s=e.content;if(s){var r=s.sortInfo,o=s.viewColumns,l=s.columnFormat,a=s.groupField,c=s.groupRowState,u=l?this.convertColumnsToSimple([l])[0]:[];this.updateActiveSchemeItemSettings(t.id,{sortInfo:r,viewColumns:o,columnFormat:u,groupField:a}),this.saving=!0;var d="";t.groupRows&&a&&a.length&&(d=a.join(","),t.expandGroupRows=c),t.groupField=d;var h={sortInfo:r,viewColumns:o,groupField:d,columnFormat:u,expandGroupRows:c};this.setUserConfig(t.id,h).subscribe(function(){if(n&&(n.disabled=!1),i.saving=!1,o&&o.length&&(t.columns=t.columns.map(function(e){return i.updateColumnFormat(e,l,t),i.newVisibleOrderColumns(e,o,l,t)})),t.columnsChanged(!0),r&&Object.keys(r).length){var s=r.sortName,a=r.sortOrder;s&&s.length?t.sort(s.join(","),a.join(",")):t.clearSort()}else t.clearSort();e.close()})}else e.close()},e.prototype.newVisibleOrderColumns=function(e,t,n,i){var s=this,r=[];e.forEach(function(e,o){s.isNewAddColumn(e.field,n)&&"_datagrid-setting-control_"!==e.field&&!i.enableScheme?t.push(e.field):(e.visible=t.includes(e.field),e.visible||r.push(e))});var o=t.map(function(t){return e.find(function(e){return e.field===t})}).filter(function(e){return e});return r.length&&(o=o.concat(r)),o.filter(function(e){return e&&e.field&&"_datagrid-setting-control_"!==e.field})},e.prototype.isNewAddColumn=function(e,t){return!(t=t||[]).find(function(t){return t.field===e})},e.prototype.updateColumnFormat=function(e,t,n){t&&t.length&&e.forEach(function(e){var i=t.find(function(t){return t.field===e.field});i&&(e.width=i.width,e.halign=i.halign||"left",e.align=i.align||"left",n.groupRows&&(e.allowGrouping||e.allowGrouping===undefined)&&(e.groupFooter||(e.groupFooter=i.groupFooter),e.groupFooter&&e.groupFooter.options&&(e.groupFooter.options.text=i.groupFooter.options.text||"",e.groupFooter.options.calculationType=i.groupFooter.options.calculationType!==undefined&&null!==i.groupFooter.options.calculationType?parseInt(i.groupFooter.options.calculationType,10):-1)),n.showFooter&&!n.footerTemplate&&(e.footer||(e.footer=i.footer),e.footer&&e.footer.options&&(e.footer.options.text=i.footer.options.text||"",e.footer.options.calculationType=i.footer.options.calculationType!==undefined&&null!==i.footer.options.calculationType?parseInt(i.footer.options.calculationType,10):-1)))})},e.prototype.createConfigKey=function(e){var t=this.getGridInstance(e);if(t)return t.dgs.createConfigKey(e);this.writeDebugMsg("DatagridSettingService: Can not find the grid instance.")},e.prototype.getCurrentUserSettings=function(e){var t=this.getGridInstance(e),n={sortInfo:{},viewColumns:[],groupField:"",columnFormat:[]};if(t){var i=t.sortName,s=t.sortOrder,r=t.columns;if(i){var o={sortName:i.split(","),sortOrder:s.split(",")};n.sortInfo=o}var l=r[0].filter(function(e){return e.visible||e.visible===undefined}).map(function(e){return e.field});n.viewColumns=l,n.columnFormat=this.convertColumnsToSimple(this._convertColumnsToSimple(t))[0],t.groupRows&&(n.groupField=t.groupField)}return n},e.prototype.saveUserConfig=function(e){var t=this.getCurrentUserSettings(e);return this.setUserConfig(e,t)},e.prototype.setUserConfig=function(e,i){var s=this,r=this.createConfigKey(e),o=this.localeSer.localeId,l=localStorage.getItem(r),a=(l?JSON.parse(l):{})||{};if(i?(a&&(a[o]=i),localStorage.setItem(r,JSON.stringify(a))):localStorage.removeItem(r),this.httpRestService){var c=this.getGridInstance(e);if(c&&c.enableScheme){var u=this.getActiveSchemeItem(e);return u?"private"===u.type?this.schemeService.saveScheme(u,e,!0):this.schemeService.checkAuthority().pipe(t.switchMap(function(t){if(t.success){var i=t.authOrganizationData&&t.authOrganizationData.length;if("public"===u.type||"org"===u.type&&i)return s.schemeService.saveScheme(u,e,!0)}return n.of(!0)})):n.of(!0)}return this._saveUserConfig(r,i?a:"")}return n.of(!0)},e.prototype.getUserConfig=function(e){if(this.httpRestService)return this._getUserConfig(e);var t=localStorage.getItem(e);if(t){var i=JSON.parse(t);return i[this.localeSer.localeId]?n.of(i[this.localeSer.localeId]):Object.keys(i).indexOf("viewColumns")>-1?n.of(i):null}return n.of(null)},e.prototype.getDefaultScheme=function(e){var t=null;if(!e||!e.length)return t;if(!(t=e.find(function(e){return e.isDefault}))){var n=e.filter(function(e){return"public"===e.type});n.length||(n=e.filter(function(e){return"org"===e.type})),t=n.length?n[0]:e[0]}return t},e.prototype.getSettings=function(e){var i=this,s=this.createConfigKey(e),r=this.getGridInstance(e),o=n.of([]);return r&&r.enableScheme&&(o=this.getSchemeList(e)),n.forkJoin(o,this.getUserConfig(s),this.schemeService.getLanguages()).pipe(t.map(function(t){var n=C(t,3),r=n[0],o=n[1],l=n[2];if(r=r||[],i.languages=l,r.length){i.setSchemeList(r,e);var a=i.getDefaultScheme(r);if(a){i.setActiveSchemeItem(e,a);var c=null;if(a.queryConditionString&&(c=JSON.parse(a.queryConditionString)),c){var u=i.localeSer.localeId;return c[u]?(localStorage.setItem(s,JSON.stringify(c)),c[u]):(c[u]=null,localStorage.setItem(s,JSON.stringify(c)),null)}return null}return o}return o}))},e.prototype._saveUserConfig=function(e,t){try{var n={configkey1:e,configkey2:"",configkey3:"",textvalue:t?JSON.stringify(t):""};return this.httpRestService.saveUserSettings(n)}catch(i){this.writeDebugMsg(i,"error")}},e.prototype.resetUserConfig=function(e,i){var s=this,r=this.localeSer.getValue("datagrid.settings.restoreDefaultSettingsText")||"确认要恢复默认设置吗？";this.messager.confirm(r).pipe(t.switchMap(function(t){return t?s.setUserConfig(e.id,""):n.of(t)})).subscribe(function(t){t&&(s.resetGridView(e),i.close())})},e.prototype._getUserConfig=function(e){var n=this;try{return this.httpRestService.getUserSettings(e).pipe(t.map(function(t){if(t&&t.textValue){var i=JSON.parse(t.textValue);return i?i[n.localeSer.localeId]?(localStorage.setItem(e,t.textValue),i[n.localeSer.localeId]):(i[n.localeSer.localeId]=null,localStorage.setItem(e,JSON.stringify(i)),null):null}return null}))}catch(i){this.debugSer&&this.debugSer.error(i)}},e.prototype.buildSubmitData=function(e,t){void 0===t&&(t=null);var n=this.localeSer.localeId;t||(t=this.getCurrentUserSettings(e));var i=this.createConfigKey(e),s=localStorage.getItem(i),r=(s?JSON.parse(s):{})||{};return r&&(r[n]=t),r},e.prototype.showSchemeListDialog=function(e,t,n,i){var s=this,r={width:760,height:577,showHeader:!1,title:"控制面板",initialState:{items:t||[],removeItem:n.success,currentUserId:n.currentUserId},showButtons:!1},o=this.modalSer.show(T,r);o.dialog.location.nativeElement.style.zIndex=2031;var l=o.content;l.closeModal.subscribe(function(){o.close()}),l.submitModal.subscribe(function(n){s.schemeService.updateScheme(n,e.id).subscribe(function(r){if(!1!==r){var l="列设置方案保存成功。";s.notifyService?s.notifyService.success(l):s.messager.success(l),n.defaultId&&t.forEach(function(e){e.isDefault=!1,e.id===n.defaultId&&(e.isDefault=!0)});var a=t;n.deletedIds&&n.deletedIds.length&&(a=t.filter(function(e){return!n.deletedIds.includes(e.id)})),s.schemeService.setSchemeList(e.id,a),s.getActiveSchemeItem(e.id)||(s.setActiveSchemeItem(e.id,null),i.instance.currentSchemeItem=null,i.instance.reset2Default()),o.close()}else o.close()})}),o.dialog.instance.draggbar.handle=l.header.nativeElement},e.prototype.showNewSchemeDialog=function(e,n,i){var s=this,r={width:480,height:269,showHeader:!1,title:"控制面板",initialState:{languages:this.languages},showButtons:!1,resizable:!1},o=this.modalSer.show(O,r);o.dialog.location.nativeElement.style.zIndex=2031;var l=o.content;l.closeModal.subscribe(function(){o.close()}),l.submitModal.pipe(t.switchMap(function(t){return s.createNewScheme(e.id,t,"new"===n.type,i.instance.collectSettings())})).subscribe(function(t){if(!1!==t.flag){var n=s.schemeService.getStateValue(e.id,"list")||[];t.isDefault&&n.forEach(function(e){e.isDefault=!1}),n.push(t),s.schemeService.setSchemeList(e.id,n),i.instance.onSchemeItemClick(null,t),o.close()}else{var r=t.msg,l=r;r&&(l=r.indexOf("|")>-1?r.split("|").map(function(e){return s.localeSer.getValue("datagrid-settings."+e)}).join(""):s.localeSer.getValue("datagrid-settings."+r),s.notifyService?s.notifyService.info(l):s.messager.info(l))}}),l.checkAuthority.pipe(t.switchMap(function(e){return s.schemeService.checkAuthority().pipe(t.map(function(t){return S({type:e},t)}))})).subscribe(function(e){var t={"public":!0,org:!0},n="noAuth.public";"org"===e.type.value&&(n="noAuth.org");var i=s.localeSer.getValue("datagrid-settings."+n);if(e.success){var r=e.authOperationData&&e.authOperationData.length;t["public"]=r;var o=e.authOrganizationData&&e.authOrganizationData.length;t.org=o,"public"===e.type.value?l.schemeInfo.type=e.type.value:"org"===e.type.value&&(o?(l.schemeInfo.type=e.type.value,l.schemeInfo.orgids=e.authOrganizationData.join(","),l.dataPermissionIds=e.authOrganizationData):s.notifyService.warning(i))}else s.notifyService.warning(i),t={"public":!1,org:!1};l.refresh(t)}),o.dialog.instance.draggbar.handle=l.header.nativeElement},e.prototype.getSchemeList=function(e){return this.schemeService.getSchemeList(e)},e.prototype.createNewScheme=function(e,i,s,r){var o;if(void 0===s&&(s=!0),!i.name)return n.of({flag:!1,msg:"required.schemeName"});var l=this.schemeService.hasSchemeName(e,i.name);if("boolean"==typeof l&&l)return n.of({flag:!1,msg:"has.exist"});if(Array.isArray(l)&&l.length){var a=function(e){return"zh-CHS"===e?"has.chs":"zh-CHT"===e?"has.cht":"has.en"};if(l.includes(this.localeSer.localeId)){var c=a(this.localeSer.localeId);return n.of({flag:!1,msg:c})}var u=l.map(function(e){return a(e)});return n.of({flag:!1,msg:u.join("|")})}var d=[];if(i.name[this.localeSer.localeId]||d.push(this.localeSer.localeId),d.length){u=d.map(function(e){return"zh-CHS"===e?"required.chs":"zh-CHT"===e?"required.cht":"required.en"});return n.of({flag:!1,msg:u.join("|")})}if(i.type&&"org"===i.type&&(!i.orgids||!i.orgids.length))return n.of({flag:!1,msg:"required.org"});var h=null;if(!s){var p=this.localeSer.localeId;r&&r.columnFormat&&(r.columnFormat=this.convertColumnsToSimple([r.columnFormat])),(o={})[p]=r,h=o}var m=this.idService.guid(),g=i.isDefault;g&&"private"!==i.type&&(g=!1),i.name&&"object"==typeof i.name&&(i.name=JSON.stringify(i.name));var f={id:m,belongId:"",code:"",name:i.name,type:i.type,isDefault:g,isSystem:!1,extendId:"datagrid-settings-scheme",extendInfo:this.buildOrgAndSchemeRelations(m,i.orgids),queryConditionString:h?JSON.stringify(h):""};return this.schemeService.saveScheme(f,e).pipe(t.map(function(){return f}))},e.prototype.setSchemeList=function(e,t){this.schemeService.update({list:e},t)},e.prototype.buildOrgAndSchemeRelations=function(e,t){var n=this;return t&&t.length?("string"==typeof t&&(t=t.split(",")),t.map(function(t){return{id:n.idService.guid(),orgId:t,relatedId:e}})):[]},e.prototype.getCurrentSchemeSettings=function(e){var t=this.getActiveSchemeItem(e);return t&&t.queryConditionString?JSON.parse(t.queryConditionString):null},e.decorators=[{type:i.Injectable}],e.ctorParameters=function(){return[{type:i.Injector},{type:s.BsModalService},{type:r.MessagerService},{type:a.IdService},{type:o.LocaleService}]},e}(),V=function(){function e(e,t){this.injector=e,this.cd=t,this.idField="field",this.valueField="field",this.textField="title",this.selectedIds=[],this.treeData=[],this.sortInfoChange=new i.EventEmitter}return e.prototype.ngOnInit=function(){},e.prototype.setFieldSortOrder=function(e,t,n){return e.stopPropagation(),t.sortable=!0,t.order=n,n||this.ms.moveToLeft(t),this.cd.detectChanges(),this.onSelectionsChange(null),!1},e.prototype.getSortInfo=function(){if(this.ms.selections){var e=[],t=[];return this.ms.selections.forEach(function(n){n.order=n.order||"asc",e.push(n.field),t.push(n.order)}),{sortName:e,sortOrder:t}}return""},e.prototype.onSelectionsChange=function(e){var t=this.getSortInfo();this.sortInfoChange.emit(t)},e.prototype.onBeforeMove=function(e){var t=e.items;if(e.target.indexOf("rightAll")>-1)for(var n in t)e.items[n]&&(e.items[n].order="asc");else if("right"===e.target)for(var n in t)e.items[n]&&(e.items[n].order="asc")},e.decorators=[{type:i.Component,args:[{selector:"sort-setting",template:'<div style="padding: 10px;height: 100%;">\r\n<multi-select [dataSource]="treeData" [idField]="idField" [valueField]="valueField"\r\n[textField]="textField" [displayType]="\'Tree\'" style="height: 100%" [height]="0" [showCheckbox]="false"\r\n[(selectedId)]="selectedIds" [leftTitle]="\'datagrid.settings.canchoose\'|locale" [rightTitle]="\'datagrid.settings.choosed\'|locale" #ms (dataChange)="onSelectionsChange($event)" (beforeMove)="onBeforeMove($event)">\r\n    <ng-template farrisTemplate="text" let-data let-side="side" let-selected="selected" >\r\n        <ng-container *ngIf="side === \'L\'">\r\n            {{ data[textField] }}\r\n        </ng-container>\r\n        <ng-container *ngIf="side === \'R\' ">\r\n            \x3c!-- <span class="f-icon f-icon-sort-asc-sm sort-label" title="升序" *ngIf="data.sortable && data.order === \'asc\'"></span>\r\n            <span class="f-icon f-icon-sort-desc-sm  sort-label" title="降序" *ngIf="data.sortable && data.order === \'desc\'"></span> --\x3e\r\n            <div class="d-flex">\r\n                <div style="width: 120px;white-space: nowrap;min-width: 60px">\r\n                    {{ data[textField] }} \r\n                </div>\r\n                <div class="farris-input-wrap  farris-checkradio-hor flex-fill" style="justify-content: right;flex-wrap:nowrap">\r\n                    <button type="button" class="btn btn-link btn-icontext mr-2" style="font-size: 12px;" (click)="setFieldSortOrder($event, data, \'asc\')">\r\n                        <span class="f-icon" [class.f-icon-radiobutton]=" data.order && data.order !== \'asc\'" [class.f-icon-check-circle]="!data.order || data.order === \'asc\'"></span>\r\n                        {{\'datagrid.settings.asc\'|locale}}\r\n                    </button>\r\n                    \r\n                    <button type="button" class="btn btn-link btn-icontext mr-2" style="font-size: 12px;" (click)="setFieldSortOrder($event, data, \'desc\')">\r\n                        <span class="f-icon" [class.f-icon-radiobutton]="data.order !== \'desc\'" [class.f-icon-check-circle]="data.order === \'desc\'"></span>\r\n                        {{\'datagrid.settings.desc\'|locale}}\r\n                    </button>\r\n\r\n                    <button type="button" class="btn btn-link btn-icontext sort-btns" style="font-size: 12px;" style="margin-right: 0;" (click)="setFieldSortOrder($event, data, \'\')" title="{{\'datagrid.settings.cancelSort\'|locale}}">\r\n                        <span class="f-icon  f-icon-unsort"></span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n        </ng-container>\r\n    </ng-template>\r\n</multi-select>\r\n</div>'}]}],e.ctorParameters=function(){return[{type:i.Injector},{type:i.ChangeDetectorRef}]},e.propDecorators={idField:[{type:i.Input}],valueField:[{type:i.Input}],textField:[{type:i.Input}],selectedIds:[{type:i.Input}],treeData:[{type:i.Input}],ms:[{type:i.ViewChild,args:["ms"]}],sortInfoChange:[{type:i.Output}]},e}(),N=function(){function e(e,t){this.injector=e,this.cd=t,this.idField="field",this.valueField="field",this.textField="title",this._selectedIds=[],this.treeData=[],this.selectedIdsChange=new i.EventEmitter}return Object.defineProperty(e.prototype,"selectedIds",{get:function(){return this._selectedIds},set:function(e){this._selectedIds=e,this.selectedIdsChange.emit(e)},enumerable:!0,configurable:!0}),e.prototype.ngOnInit=function(){},e.prototype.ngOnChanges=function(e){},e.prototype.onBeforeMove=function(e){},e.prototype.hiddenColumn=function(e,t){e.stopPropagation(),this.ms.moveToLeft(t)},e.decorators=[{type:i.Component,args:[{selector:"view-columns",template:'<multi-select [dataSource]="treeData" [idField]="idField" [valueField]="valueField"\r\n[textField]="textField" [displayType]="\'Tree\'" style="height: 100%" [height]="0" [showCheckbox]="false"\r\n[(selectedId)]="selectedIds" [leftTitle]="\'datagrid.settings.canchoose\'|locale" \r\n[rightTitle]="\'datagrid.settings.choosed\'|locale" #ms (beforeMove)="onBeforeMove($event)">\r\n    <ng-template farrisTemplate="text" let-data let-side="side" let-selected="selected">\r\n        <ng-container *ngIf="side === \'L\'">\r\n            {{ data[textField] }}\r\n        </ng-container>\r\n        <ng-container *ngIf="side === \'R\' ">\r\n\r\n            {{ data[textField] }} \r\n\r\n\r\n            <span class="sort-btns" >\r\n                <a href="javascript: void(0)" class=" p-1" (click)="hiddenColumn($event, data)">\r\n                    <span class="f-icon f-icon-close"></span>\r\n                </a>\r\n            </span>\r\n\r\n        </ng-container>\r\n    </ng-template>\r\n</multi-select>'}]}],e.ctorParameters=function(){return[{type:i.Injector},{type:i.ChangeDetectorRef}]},e.propDecorators={idField:[{type:i.Input}],valueField:[{type:i.Input}],textField:[{type:i.Input}],selectedIds:[{type:i.Input}],treeData:[{type:i.Input}],ms:[{type:i.ViewChild,args:["ms"]}],selectedIdsChange:[{type:i.Output}]},e}(),_=function(){function e(e,t,n){this.injector=e,this.gridSettingComponentRef=t,this.cd=n,this.columns=[],this.fields=[],this.formatChange=new i.EventEmitter,this.fieldsChange=new i.EventEmitter,this.allCols=[],this.formatData=[],this.columnType="all",this.activeField=null,this.showGridFooter=!1,this.searchItems=[],this.alignItems=[],this.summaryItems=[],this.summaryItems2=[],this.isEn=!1,this.switchValue=!1,this._searchResult=0,this.showGridFooter=this.gridSettingComponentRef.gridInstance.showFooter&&!this.gridSettingComponentRef.gridInstance.footerTemplate,this.localeSer=this.injector.get(o.LocaleService,null)}return e.prototype.ngOnChanges=function(e){e.columns&&!e.columns.isFirstChange()&&(this.setFormatData(),this.allCols=this.columns[0],this.activeField=this.columns[0][0],this.checkColumnOptions())},e.prototype.ngOnInit=function(){var e=this;this.isEn="en"===this.localeSer.localeId,this.initData(),this.colForm&&this.colForm.valueChanges.subscribe(function(t){e.colForm.pristine||e.formatChange.emit(e.formatData)})},e.prototype.setFormatData=function(){this.formatData=this.columns[0]},e.prototype.initData=function(){this.alignItems=this.gridSettingComponentRef.alignItems,this.searchItems=this.gridSettingComponentRef.searchItems,this.summaryItems=this.gridSettingComponentRef.summaryItems,this.summaryItems2=this.gridSettingComponentRef.summaryItems2,this.setFormatData(),this.allCols=this.columns[0],this.activeField=this.columns[0][0],this.checkColumnOptions()},e.prototype.checkColumnOptions=function(){this.activeField&&(this.activeField.allowGrouping===undefined&&(this.activeField.allowGrouping=!0),this.activeField.groupFooter===undefined?this.activeField.groupFooter={options:{calculationType:-1}}:(this.activeField.groupFooter.options=this.activeField.groupFooter.options||{calculationType:-1},this.activeField.groupFooter.options.calculationType===undefined&&(this.activeField.groupFooter.options.calculationType=-1)),this.activeField.footer===undefined?this.activeField.footer={options:{calculationType:-1}}:(this.activeField.footer.options=this.activeField.footer.options||{calculationType:-1},this.activeField.footer.options.calculationType===undefined&&(this.activeField.footer.options.calculationType=-1)))},e.prototype.filterColumns=function(e){var t=this;void 0===e&&(e="");var n=[];n=this.switchValue?this.columns[0].filter(function(e){return t.fields.indexOf(e.field)>-1}):this.columns[0],e&&(n=n.filter(function(t){return t.title.toLowerCase().indexOf(e)>-1})),this.allCols=n,this._searchResult=this.allCols.filter(function(e){return e.visible}).length},e.prototype.onFieldClick=function(e,t){this.activeField=e,this.checkColumnOptions()},e.prototype.onFieldsChanged=function(){this.setFormatData(),this.fieldsChange.emit(this.fields)},e.prototype.onDblClick=function(e,t){this.onCheckboxClick(e,t)},e.prototype.onCheckboxClick=function(e,t){var n=this;e.stopPropagation();var i=this.fields.indexOf(t.field);-1===i?this.fields.push(t.field):this.fields.splice(i,1),this.columns[0].forEach(function(e){e.visible=n.fields.indexOf(e.field)>-1}),this.fields=this.columns[0].filter(function(e){return e.visible}).map(function(e){return e.field}),this.onFieldsChanged()},e.prototype.searchColumn=function(e){var t=e.target.value;this.filterColumns(t)},e.prototype.onFieldDrop=function(e,t,n){var i,s=e.removedIndex,r=e.addedIndex,o=this.allCols[s],l=this.allCols[r],a=this.columns[0].findIndex(function(e){return e.field===o.field}),c=this.columns[0].findIndex(function(e){return e.field===l.field}),u=this.columns[0].splice(a,1);(i=this.columns[0]).splice.apply(i,I([c,0],u)),this.fields=this.columns[0].filter(function(e){return e.visible}).map(function(e){return e.field}),this.onFieldsChanged(),this.filterColumns(t)},e.prototype.getCheckAllState=function(e){if(void 0===e&&(e=!1),0===this.fields.length)return 0;if(e){if(this._searchResult===this.allCols.length)return 1}else if(this.fields.length===this.columns[0].length)return 1;return 2},e.prototype.onCheckAllClick=function(e,t){var n=this,i=this.getCheckAllState(t),s=0===i||2===i;""==t?s?(this.columns[0].forEach(function(e){return e.visible=!0}),this.fields=this.columns[0].map(function(e){return e.field})):(this.columns[0].forEach(function(e){return e.visible=!1}),this.fields=[]):(this.allCols.forEach(function(e){n.columns[0].find(function(t){return e.field===t.field}).visible=s,e.visible=s}),this.fields=this.columns[0].filter(function(e){return e.visible}).map(function(e){return e.field})),this.onFieldsChanged(),this.filterColumns(t)},e.prototype.onlySeeVisibleColumns=function(e,t){this.switchValue=e,this.filterColumns(t)},e.prototype.clearSearch=function(e,t){t&&t.value&&(this.filterColumns(""),t.value="")},e.decorators=[{type:i.Component,args:[{selector:"column-format-setting",template:'<div class="d-flex flex-row flex-fill dg-column-format-setting" style="height: 100%">\r\n    <div region="west" class="west d-flex flex-column ">\r\n        <div style="margin: 0 6px;">\r\n\r\n            <div class="input-group mb-2 scheme-manager__search-box">\r\n                <input #inputWord type="text" class="form-control" placeholder="{{\'datagrid.settings.searchPlaceholder\' | locale}}" (input)="searchColumn($event)" style="height: 30px;">\r\n                <div  class="input-group-append" style="cursor: pointer">\r\n                    <span  class="fa f-icon-search" [class.f-icon-close]="inputWord.value" (click)="clearSearch($event, inputWord)"></span>\r\n                </div>\r\n            </div>\r\n            <div style="padding: 5px 0px;background-color: #fff;justify-content: space-between;align-items: center;" class="d-flex flex-row">\r\n                <button class="btn btn-link" \r\n                    style="height: 32px;padding-left: 4px;" (click)="onCheckAllClick($event, inputWord.value)">\r\n                    <span class="f-icon f-icon-minus-outline checkbox" [class.f-icon-checkbox]="inputWord.value.length ? !_searchResult : !fields.length"\r\n                        [class.f-icon-checkbox-checked]="inputWord.value.length? (_searchResult && _searchResult == allCols.length)  : (fields.length && fields.length === columns[0].length)"></span>\r\n                    {{ \'datagrid.settings.checkall\' | locale }}\r\n                </button>\r\n\r\n                \x3c!-- <farris-combo-list #ct \r\n                [data]="searchItems" \r\n                [editable]="false"\r\n                [ngModel]="\'all\'" [idField]="\'value\'"\r\n                [textField]="\'title\'"\r\n                [enableClear]="false"\r\n                (valueChange)="filterColumns(ct.selectedValues, inputWord.value)"\r\n                style="float: right;" [style.width.px]="isEn ? 120: 80"\r\n                class="format-setting-searchitem"></farris-combo-list> --\x3e\r\n                <div class="d-flex flex-row">{{\'datagrid-scheme.onlyshowcolumns\' | locale}} \r\n                    <farris-switch style="position: relative;\r\n                    top: 2px;\r\n                    margin-left: 5px;"\r\n                    id="only-visible-columns"\r\n                    [square]="false" [size]="\'small\'"\r\n                    [ngModel]="switchValue" \r\n                    (valueChange)="onlySeeVisibleColumns($event, inputWord.value)"\r\n                    ></farris-switch>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div style="overflow: auto;padding-right:3px" class="flex-fill">\r\n            <ul class="list-group  list-group-flush" #ul column-visible-drag (drop)="onFieldDrop($event, inputWord.value, ul)">\r\n                <li class="list-group-item list-group-item-action smooth-dnd-draggable-wrapper format-setting-column" *ngFor="let col of allCols" \r\n                    (click)="onFieldClick(col, $event)" [class.active]="activeField && activeField.field === col.field"\r\n                    (dblclick)="onDblClick($event, col)">\r\n                    <span class="f-icon checkbox"\r\n                        [class.f-icon-checkbox-checked]="fields.indexOf(col.field) > -1"\r\n                        [class.f-icon-checkbox]="fields.indexOf(col.field) == -1"\r\n                        (click)="onCheckboxClick($event, col)"></span>\r\n                    {{ col.title}} \r\n\r\n                    <span class="f-icon f-icon-drag-vertical field-drag-handle"></span>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n      \r\n    </div>\r\n    <div region="center" class="center flex-fill" style="overflow:auto;padding: 0 10px; padding-left: 20px;border-right: 0;">\r\n\r\n        <h6 style="margin: 15px 0px;font-weight: bold;">{{ \'datagrid.settings.properties\' | locale }}</h6>\r\n\r\n        <form #colformatform="ngForm" style="margin-top: 5px;">\r\n            <div class="farris-group-wrap mb-3">\r\n                <div class="form-group farris-form-group">\r\n                    <label for="hpinput01" class="col-form-label">\r\n                        <span class="farris-label-text" >{{ \'datagrid.settings.headeralign\' | locale }}</span>\r\n                    </label>\r\n                    <div class="farris-input-wrap">\r\n\r\n                        <farris-combo-list name="halign" \r\n                        [data]="alignItems" \r\n                        [editable]="false"\r\n                        [(ngModel)]="activeField!.halign"\r\n                        [idField]="\'value\'"\r\n                        [textField]="\'title\'"\r\n                        [enableClear]="false"></farris-combo-list>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="farris-group-wrap  mb-3">\r\n                <div class="form-group farris-form-group">\r\n                    <label for="hpinput01" class="col-form-label">\r\n                        <span class="farris-label-text">{{ \'datagrid.settings.dataalign\' | locale }}</span>\r\n                    </label>\r\n                    <div class="farris-input-wrap">\r\n\r\n                        <farris-combo-list name="align" \r\n                        [data]="alignItems" \r\n                        [editable]="false"\r\n                        [(ngModel)]="activeField!.align"\r\n                        [idField]="\'value\'"\r\n                        [textField]="\'title\'"\r\n                        [enableClear]="false"></farris-combo-list>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="farris-group-wrap  mb-3" *ngIf="showGridFooter">\r\n                <div class="form-group farris-form-group">\r\n                    <label for="hpinput01" class="col-form-label">\r\n                        <span class="farris-label-text">{{ \'datagrid.settings.summarytype\' | locale }}</span>\r\n                    </label>\r\n                    <div class="farris-input-wrap ">\r\n                       \r\n                        <farris-combo-list name="footer.options.calculationType" \r\n                        [data]=" activeField.dataType === \'number\'?  summaryItems : summaryItems2 " \r\n                        [editable]="false"\r\n                        [(ngModel)]="activeField.footer.options.calculationType"\r\n                        [idField]="\'value\'"\r\n                        [textField]="\'title\'"\r\n                        [enableClear]="false"></farris-combo-list>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class="farris-group-wrap  mb-3" *ngIf="showGridFooter && (!activeField.footer.options.calculationType || activeField.footer.options.calculationType == -1)">\r\n                <div class="form-group farris-form-group">\r\n                    <label for="hpinput01" class="col-form-label">\r\n                        <span class="farris-label-text">{{ \'datagrid.settings.summarytext\' | locale }}</span>\r\n                    </label>\r\n                    <div class="farris-input-wrap">\r\n                        <input type="input" name="footer.options.text" class="form-control" [(ngModel)]="activeField.footer.options.text">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </form>\r\n    </div>\r\n   \r\n</div>',encapsulation:i.ViewEncapsulation.None}]}],e.ctorParameters=function(){return[{type:i.Injector},{type:w},{type:i.ChangeDetectorRef}]},e.propDecorators={columns:[{type:i.Input}],fields:[{type:i.Input}],colForm:[{type:i.ViewChild,args:["colformatform"]}],formatChange:[{type:i.Output}],fieldsChange:[{type:i.Output}]},e}(),M=function(){function e(e,t,n){this.injector=e,this.gridSettingComponentRef=t,this.cd=n,this.fields=[],this.formatColumns=[],this.groupFields=[],this.groupRowState=!0,this.groupFieldsChange=new i.EventEmitter,this.formatColumnsChange=new i.EventEmitter,this.groupRowStateChange=new i.EventEmitter,this.groupColumns=[],this.allowGroupColumns=[],this.activeCalculationCol=null,this.showSelectColumnsPanel=!1,this.summaryItems=[],this.summaryItems2=[]}return e.prototype.ngOnInit=function(){var e=this;this.summaryItems=this.gridSettingComponentRef.summaryItems,this.summaryItems2=this.gridSettingComponentRef.summaryItems2,this.setGroupColumns(),this.registerEventHandle(),this.initCalculationColumns(),this.colForm&&this.colForm.valueChanges.subscribe(function(t){e.colForm.pristine||e.formatColumnsChange.emit(e.formatColumns)}),this.formatColumns.forEach(function(t){e.checkColumnOptions(t)})},e.prototype.ngOnChanges=function(e){var t=this;e.formatColumns&&!e.formatColumns.isFirstChange()&&(this.formatColumns.forEach(function(e){t.checkColumnOptions(e)}),this.setGroupColumns(),this.initCalculationColumns())},e.prototype.initCalculationColumns=function(){this.formatColumns&&(this.activeCalculationCol=this.formatColumns[0])},e.prototype.registerEventHandle=function(){var e=this;this.groupingSettingEl.nativeElement.addEventListener("click",function(t){t.target!==e.selectcolumnspanel.nativeElement&&(e.showSelectColumnsPanel=!1)},!1)},e.prototype.setGroupColumns=function(){var e=this;this.groupFields&&this.groupFields.length?this.groupColumns=this.groupFields.map(function(t){return e.columns[0].find(function(e){return e.field===t})}).filter(function(e){return e}):this.groupColumns=[],this.onGroupFieldsChange()},e.prototype.getAllowGroupingColumns=function(){return this.columns[0].filter(function(e){return!(e.field.indexOf("farris-datagrid-column_")>-1)&&(e.allowGrouping||e.allowGrouping===undefined)})},e.prototype.onGroupFieldsChange=function(){this.groupFieldsChange.emit(this.groupFields)},e.prototype.checkColumnOptions=function(e){e&&(e.groupFooter===undefined?e.groupFooter={options:{calculationType:-1}}:(e.groupFooter.options=e.groupFooter.options||{calculationType:-1},e.groupFooter.options.calculationType===undefined&&(e.groupFooter.options.calculationType=-1)))},e.prototype.toggleGroupingColumnPanel=function(e){e.stopPropagation(),this.showSelectColumnsPanel=!this.showSelectColumnsPanel,this.allowGroupColumns=this.getAllowGroupingColumns()},e.prototype.addGroupColumn=function(e,t){e.stopPropagation(),-1===this.groupFields.indexOf(t.field)&&(this.groupColumns=I(this.groupColumns,[t]),this.groupFields=this.groupColumns.map(function(e){return e.field}),this.onGroupFieldsChange(),this.showSelectColumnsPanel=!1)},e.prototype.onRemoveGroupingField=function(e,t){e.stopPropagation(),this.groupFields=this.groupFields.filter(function(e){return e!==t.field}),this.setGroupColumns()},e.prototype.onGroupingFieldDropped=function(e){var t,n=e.removedIndex,i=e.addedIndex,s=this.groupFields.splice(n,1);(t=this.groupFields).splice.apply(t,I([i,0],s)),this.setGroupColumns()},e.prototype.onFieldClick=function(e,t){this.activeCalculationCol=t},e.decorators=[{type:i.Component,args:[{selector:"column-group-setting",template:'<div #groupingSetting class="d-flex flex-column flex-fill column-group-setting">\r\n\r\n    <div region="north" class="north d-flex flex-column group-fields" style="height: 78px; ">\r\n        <div class="title d-flex flex-row" style="justify-content: space-between;">\r\n            <div>{{\'datagrid.settings.grouppingField\' | locale }}\r\n                <span class="text-warning"> ({{\'datagrid.settings.moreGrouppingFieldWarningMessage\' | locale }})</span>\r\n            </div>\r\n            <div *ngIf="groupColumns && groupColumns.length">\r\n                {{\'datagrid-settings.groupRowStatus.label\' | locale}}：  <farris-switch style="display: inline-block;"\r\n                [square]="false"\r\n                [checked]="true"\r\n                [(ngModel)]="groupRowState"\r\n                [checkedLabel]="\'datagrid-settings.groupRowStatus.expand\' | locale" [uncheckedLabel]="\'datagrid-settings.groupRowStatus.collapse\' | locale" \r\n                (valueChange)="groupRowStateChange.emit(!!$event)"\r\n                ></farris-switch>\r\n            </div>\r\n        </div>\r\n        <div #groupfieldcontainer class="flex-fill p-2 all-fields">\r\n            <ul class="list-group" style="display: inline-block;"  column-group-drag (drop)="onGroupingFieldDropped($event)">\r\n                <li class="list-group-item list-group-item-action btn btn-light smooth-dnd-draggable-wrapper group-field"\r\n                *ngFor="let item of groupColumns">\r\n                    {{ item.title }}\r\n                    <span class="f-icon f-icon-close" style="cursor: pointer;" title="{{\'datagrid.settings.removeGrouppingFieldTip\' | locale }}" (click)="onRemoveGroupingField($event, item)"></span>\r\n                </li>\r\n\r\n                <li class="list-group-item list-group-item-action btn btn-light btn-add-groupfield" title="{{\'datagrid.settings.addGrouppingFieldTip\' | locale }}"\r\n                    *ngIf="!groupFields || groupFields.length < 3" (click)="toggleGroupingColumnPanel($event)">\r\n                   <span class="f-icon f-icon-add" style="font-size: 24px;"></span>\r\n                </li>\r\n            </ul>\r\n            <div #selectcolumnspanel class="group-field-panel" [style.display]="showSelectColumnsPanel? \'\': \'none\'"\r\n            [style.width.px]="groupfieldcontainer.offsetWidth - 16">\r\n                <ul class="list-group">\r\n                    <li class="list-group-item list-group-item-action btn btn-light" *ngFor="let item of allowGroupColumns"\r\n                    (click)="addGroupColumn($event, item)" [style.display]="groupFields?.indexOf(item.field) > -1 ? \'none\': \'\'">\r\n                        {{ item.title }}\r\n                    </li>\r\n                </ul>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n    <div region="center" class="center  d-flex flex-column flex-fill" style="overflow:hidden;">\r\n        <div class="group-sum-fields">\r\n            {{\'datagrid.settings.grouppingSummary\' | locale}}\r\n        </div>\r\n        <div class="flex-fill p-2" style=" background-color: #fff; overflow: auto;">\r\n            <div class="d-flex flex-row flex-fill dg-column-format-setting" style="height: 100%">\r\n                <div region="west" class="west d-flex flex-column" style="width: 360px; min-width:260px;overflow: hidden;">\r\n                    <div style="overflow: auto;padding-right: 5px;" class="flex-fill">\r\n                        <ul class="list-group  list-group-flush">\r\n                            <li class="list-group-item list-group-item-action format-setting-column"\r\n                            *ngFor="let item of formatColumns"\r\n                            [class.active]="activeCalculationCol && activeCalculationCol.field === item.field"\r\n                            (click)="onFieldClick($event, item)"\r\n                             >\r\n                                {{ item.title }}\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                 \r\n                </div>\r\n                <div region="center" class="center flex-fill" style="overflow:auto;padding: 0 10px; padding-left: 20px">\r\n                    <form #groupSumform="ngForm">\r\n                        <div class="farris-group-wrap">\r\n                            <div class="form-group farris-form-group">\r\n                                <label for="hpinput01" class="col-form-label">\r\n                                    <span class="farris-label-text">{{\'datagrid.settings.grouppingSummaryType\' | locale}}</span>\r\n                                </label>\r\n                                <div class="farris-input-wrap">\r\n                                   \r\n                                    <farris-combo-list name="groupFooter.options.calculationType" \r\n                                    [data]=" activeCalculationCol?.dataType === \'number\'?  summaryItems : summaryItems2 " \r\n                                    [editable]="false"\r\n                                    [(ngModel)]="activeCalculationCol?.groupFooter.options.calculationType"\r\n                                    [idField]="\'value\'"\r\n                                    [textField]="\'title\'"\r\n                                    [enableClear]="false"></farris-combo-list>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="farris-group-wrap" *ngIf="activeCalculationCol?.groupFooter.options.calculationType == -1">\r\n                            <div class="form-group farris-form-group">\r\n                                <label for="hpinput01" class="col-form-label">\r\n                                    <span class="farris-label-text">{{\'datagrid.settings.grouppingSummaryText\' | locale}}</span>\r\n                                </label>\r\n                                <div class="farris-input-wrap">\r\n                                    <input type="input" name="groupFooter.options.text" class="form-control" [(ngModel)]="activeCalculationCol?.groupFooter.options.text">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n               \r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n    </div>\r\n\r\n</div>',encapsulation:i.ViewEncapsulation.None}]}],e.ctorParameters=function(){return[{type:i.Injector},{type:w},{type:i.ChangeDetectorRef}]},e.propDecorators={columns:[{type:i.Input}],fields:[{type:i.Input}],formatColumns:[{type:i.Input}],groupFields:[{type:i.Input}],groupRowState:[{type:i.Input}],groupFieldsChange:[{type:i.Output}],formatColumnsChange:[{type:i.Output}],groupRowStateChange:[{type:i.Output}],groupingSettingEl:[{type:i.ViewChild,args:["groupingSetting"]}],selectcolumnspanel:[{type:i.ViewChild,args:["selectcolumnspanel"]}],colForm:[{type:i.ViewChild,args:["groupSumform"]}]},e}();y.constants.wrapperClass,y.constants.animationClass;y.smoothDnD.dropHandler=y.dropHandlers.reactDropHandler().handler,y.smoothDnD.wrapChild=!1;var j=function(){function e(e,t,n,s){var r=this;this.ngzone=e,this.injector=t,this.render=n,this.el=s,this.drop=new i.EventEmitter,this.options={behaviour:"move",dragHandleSelector:".field-drag-handle",dropPlaceholder:{className:"drop-group-field"},getGhostParent:function(){return document.body},getChildPayload:this.getChildPayload.bind(this),shouldAcceptDrop:function(e,t){return!0},onDropReady:function(e){r.ngzone.run(function(){r.onDropReady(e)})},onDrop:function(e){r.ngzone.run(function(){r.drop.emit(e)})},onDragEnter:function(){r.ngzone.run(function(){r.onDragEnter()})},onDragStart:function(e){r.ngzone.run(function(){r.onDragStart(e)})},onDragEnd:function(e){r.ngzone.run(function(){r.onDragEnd(e)})}}}return e.prototype.ngAfterViewInit=function(){this.initDnD()},e.prototype.ngOnDestroy=function(){this.disposeDnd()},e.prototype.disposeDnd=function(){this.container&&(this.container.dispose(),this.container=null)},e.prototype.initDnD=function(){this.disposeDnd(),this.container=y.smoothDnD(this.el.nativeElement,this.options)},e.prototype.getChildPayload=function(e){return e},e.prototype.onDropReady=function(e){},e.prototype.onDragStart=function(e){},e.prototype.onDragEnd=function(e){},e.prototype.onDragEnter=function(){},e.decorators=[{type:i.Directive,args:[{selector:"[column-visible-drag]"}]}],e.ctorParameters=function(){return[{type:i.NgZone},{type:i.Injector},{type:i.Renderer2},{type:i.ElementRef}]},e.propDecorators={drop:[{type:i.Output}],options:[{type:i.Input}]},e}();y.smoothDnD.dropHandler=y.dropHandlers.reactDropHandler().handler,y.smoothDnD.wrapChild=!1;var A=function(){function e(e,t,n,s){var r=this;this.ngzone=e,this.injector=t,this.render=n,this.el=s,this.drop=new i.EventEmitter,this.options={orientation:"horizontal",behaviour:"move",dropPlaceholder:{className:"drop-group-field"},getGhostParent:function(){return document.body},getChildPayload:this.getChildPayload.bind(this),shouldAcceptDrop:function(e,t){return!0},onDropReady:function(e){r.ngzone.run(function(){r.onDropReady(e)})},onDrop:function(e){r.ngzone.run(function(){r.drop.emit(e)})},onDragEnter:function(){r.ngzone.run(function(){r.onDragEnter()})},onDragStart:function(e){r.ngzone.run(function(){r.onDragStart(e)})},onDragEnd:function(e){r.ngzone.run(function(){r.onDragEnd(e)})}}}return e.prototype.ngAfterViewInit=function(){this.initDnD()},e.prototype.ngOnDestroy=function(){this.disposeDnd()},e.prototype.disposeDnd=function(){this.container&&(this.container.dispose(),this.container=null)},e.prototype.initDnD=function(){this.disposeDnd(),this.container=y.smoothDnD(this.el.nativeElement,this.options)},e.prototype.getChildPayload=function(e){return e},e.prototype.onDropReady=function(e){},e.prototype.onDragStart=function(e){},e.prototype.onDragEnd=function(e){},e.prototype.onDragEnter=function(){},e.decorators=[{type:i.Directive,args:[{selector:"[column-group-drag]"}]}],e.ctorParameters=function(){return[{type:i.NgZone},{type:i.Injector},{type:i.Renderer2},{type:i.ElementRef}]},e.propDecorators={drop:[{type:i.Output}],options:[{type:i.Input}]},e}(),L=function(){function e(){}return e.forRoot=function(t){return{ngModule:e,providers:[{provide:u.GRID_SETTINGS_SERVICE,useClass:P}]}},e.decorators=[{type:i.NgModule,args:[{declarations:[w,V,N,_,M,j,A,F,O,T],imports:[p.CommonModule,h.FormsModule,d.MultiSelectModule,m.ComboListModule,u.DatagridModule,a.FarrisCommonModule.forRoot(),r.MessagerModule.forRoot(),o.LocaleModule.forRoot(),s.ModalModule.forRoot(),g.SwitchModule,f.FarrisTooltipModule,c.NotifyModule.forRoot(),v.OrganizationSelectorModule,b.LanguageTextboxModule],entryComponents:[w,F,O,T],exports:[w,F,O,T]}]}],e}();e.ColumnFormatSettingComponent=_,e.ColumnGroupDragDirective=A,e.ColumnGroupSettingComponent=M,e.ColumnVisibleDragDirective=j,e.DatagridSettingsComponent=w,e.DatagridSettingsModule=L,e.DatagridSettingsService=P,e.DatagridSortSettingComponent=V,e.DatagridViewColumnsComponent=N,e.GRID_SETTINGS_WEBAPI=R,e.NewSchemeComponent=O,e.SchemeListComponent=T,e.SimpleColumnsComponent=F,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=farris-ui-datagrid-settings.umd.min.js.map