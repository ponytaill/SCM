/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectorRef, Component, EventEmitter, HostListener, Injector, Input, Output } from '@angular/core';
var LookupQuickSelectPanelComponent = /** @class */ (function () {
    function LookupQuickSelectPanelComponent(injector, cdr) {
        this.injector = injector;
        this.cdr = cdr;
        this.showMore = true;
        this.data = [];
        this.textField = '';
        this.moreClcik = new EventEmitter();
        this.itemClick = new EventEmitter();
        this.activeIndex = -1;
    }
    /**
     * @param {?} $event
     * @return {?}
     */
    LookupQuickSelectPanelComponent.prototype.onClick = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        $event.stopPropagation();
    };
    /**
     * @return {?}
     */
    LookupQuickSelectPanelComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () { };
    /**
     * @param {?} items
     * @return {?}
     */
    LookupQuickSelectPanelComponent.prototype.loadData = /**
     * @param {?} items
     * @return {?}
     */
    function (items) {
        this.data = items;
        if (!this.cdr['destroyed']) {
            this.cdr.detectChanges();
        }
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    LookupQuickSelectPanelComponent.prototype.onMoreClick = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        $event.stopPropagation();
        this.moreClcik.emit($event);
    };
    /**
     * @param {?} rowObj
     * @return {?}
     */
    LookupQuickSelectPanelComponent.prototype.formatData = /**
     * @param {?} rowObj
     * @return {?}
     */
    function (rowObj) {
        return this.formatter(rowObj);
    };
    /**
     * @param {?} $event
     * @param {?} item
     * @return {?}
     */
    LookupQuickSelectPanelComponent.prototype.onItemClick = /**
     * @param {?} $event
     * @param {?} item
     * @return {?}
     */
    function ($event, item) {
        this.itemClick.emit({ data: item, evnet: $event });
    };
    /**
     * @param {?} index
     * @return {?}
     */
    LookupQuickSelectPanelComponent.prototype.setActiveItem = /**
     * @param {?} index
     * @return {?}
     */
    function (index) {
        this.activeIndex = index;
        if (!this.cdr['destroyed']) {
            this.cdr.detectChanges();
        }
    };
    LookupQuickSelectPanelComponent.decorators = [
        { type: Component, args: [{
                    selector: 'lookup-quick-select-panel',
                    template: "<div class=\"d-flex flex-column\" style=\"width: 100%;height: 100%;padding-top: 5px\">\r\n    <!-- <div class=\"header\"></div> -->\r\n    <div class=\"list f-utils-fill f-datalist\" style=\"overflow: auto;\">\r\n        <ul class=\"list-group list-group-flush p-0\"  [class.h-100]=\"!data || !data.length\">\r\n            <li class=\"list-group-item list-group-item-action\" [class.active]=\"activeIndex === i\" *ngFor=\"let item of data; index as i\" (click)=\"onItemClick($event, item)\">\r\n                <span *ngIf=\"!formatter\">{{ item[textField] }}</span> \r\n                <span *ngIf=\"formatter\" [innerHTML]=\"formatData(item) | safe:'html'\"></span>\r\n            </li>\r\n\r\n            <li class=\"norecord\" *ngIf=\"!data || !data.length\">\r\n                \u672A\u627E\u5230\u641C\u7D22\u5185\u5BB9\r\n            </li>\r\n        </ul>\r\n    </div>\r\n    <div class=\"more\" *ngIf=\"showMore && data && data.length\">\r\n        <button class=\"btn btn-link\" (click)=\"onMoreClick($event)\">\u663E\u793A\u66F4\u591A</button>\r\n    </div>\r\n     <!-- <div class=\"footer\"></div> -->\r\n</div>"
                }] }
    ];
    /** @nocollapse */
    LookupQuickSelectPanelComponent.ctorParameters = function () { return [
        { type: Injector },
        { type: ChangeDetectorRef }
    ]; };
    LookupQuickSelectPanelComponent.propDecorators = {
        showMore: [{ type: Input }],
        data: [{ type: Input }],
        textField: [{ type: Input }],
        formatter: [{ type: Input }],
        moreClcik: [{ type: Output }],
        itemClick: [{ type: Output }],
        onClick: [{ type: HostListener, args: ['mousedown', ['$event'],] }]
    };
    return LookupQuickSelectPanelComponent;
}());
export { LookupQuickSelectPanelComponent };
if (false) {
    /** @type {?} */
    LookupQuickSelectPanelComponent.prototype.showMore;
    /** @type {?} */
    LookupQuickSelectPanelComponent.prototype.data;
    /** @type {?} */
    LookupQuickSelectPanelComponent.prototype.textField;
    /** @type {?} */
    LookupQuickSelectPanelComponent.prototype.formatter;
    /** @type {?} */
    LookupQuickSelectPanelComponent.prototype.moreClcik;
    /** @type {?} */
    LookupQuickSelectPanelComponent.prototype.itemClick;
    /** @type {?} */
    LookupQuickSelectPanelComponent.prototype.activeIndex;
    /**
     * @type {?}
     * @private
     */
    LookupQuickSelectPanelComponent.prototype.injector;
    /**
     * @type {?}
     * @private
     */
    LookupQuickSelectPanelComponent.prototype.cdr;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXVpY2stc2VsZWN0LXBhbmVsLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvdWktbG9va3VwLyIsInNvdXJjZXMiOlsibGliL3F1aWNrLXNlbGVjdC9xdWljay1zZWxlY3QtcGFuZWwuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBZSxZQUFZLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBVSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFdkk7SUFpQkkseUNBQW9CLFFBQWtCLEVBQVUsR0FBc0I7UUFBbEQsYUFBUSxHQUFSLFFBQVEsQ0FBVTtRQUFVLFFBQUcsR0FBSCxHQUFHLENBQW1CO1FBVjdELGFBQVEsR0FBRyxJQUFJLENBQUM7UUFDaEIsU0FBSSxHQUFlLEVBQUUsQ0FBQztRQUN0QixjQUFTLEdBQVcsRUFBRSxDQUFDO1FBR3RCLGNBQVMsR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO1FBQy9CLGNBQVMsR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO1FBRXpDLGdCQUFXLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFFeUQsQ0FBQzs7Ozs7SUFHM0UsaURBQU87Ozs7SUFEUCxVQUNRLE1BQWtCO1FBQ3RCLE1BQU0sQ0FBQyxlQUFlLEVBQUUsQ0FBQztJQUM3QixDQUFDOzs7O0lBRUQsa0RBQVE7OztJQUFSLGNBQWEsQ0FBQzs7Ozs7SUFFZCxrREFBUTs7OztJQUFSLFVBQVMsS0FBVTtRQUNmLElBQUksQ0FBQyxJQUFJLEdBQUcsS0FBSyxDQUFDO1FBQ2xCLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLFdBQVcsQ0FBQyxFQUFFO1lBQ3hCLElBQUksQ0FBQyxHQUFHLENBQUMsYUFBYSxFQUFFLENBQUM7U0FDNUI7SUFDTCxDQUFDOzs7OztJQUVELHFEQUFXOzs7O0lBQVgsVUFBWSxNQUFrQjtRQUMxQixNQUFNLENBQUMsZUFBZSxFQUFFLENBQUM7UUFDekIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDaEMsQ0FBQzs7Ozs7SUFFRCxvREFBVTs7OztJQUFWLFVBQVcsTUFBVztRQUNsQixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDbEMsQ0FBQzs7Ozs7O0lBRUQscURBQVc7Ozs7O0lBQVgsVUFBWSxNQUFNLEVBQUUsSUFBSTtRQUNwQixJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxFQUFDLElBQUksRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBQyxDQUFDLENBQUM7SUFDckQsQ0FBQzs7Ozs7SUFFRCx1REFBYTs7OztJQUFiLFVBQWMsS0FBYTtRQUN2QixJQUFJLENBQUMsV0FBVyxHQUFHLEtBQUssQ0FBQztRQUN6QixJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsRUFBRTtZQUN4QixJQUFJLENBQUMsR0FBRyxDQUFDLGFBQWEsRUFBRSxDQUFDO1NBQzVCO0lBQ0wsQ0FBQzs7Z0JBbkRKLFNBQVMsU0FBQztvQkFDUCxRQUFRLEVBQUUsMkJBQTJCO29CQUNyQyxrbkNBQWtEO2lCQUNyRDs7OztnQkFMK0UsUUFBUTtnQkFBL0UsaUJBQWlCOzs7MkJBU3JCLEtBQUs7dUJBQ0wsS0FBSzs0QkFDTCxLQUFLOzRCQUNMLEtBQUs7NEJBRUwsTUFBTTs0QkFDTixNQUFNOzBCQU1OLFlBQVksU0FBQyxXQUFXLEVBQUUsQ0FBQyxRQUFRLENBQUM7O0lBaUN6QyxzQ0FBQztDQUFBLEFBcERELElBb0RDO1NBL0NZLCtCQUErQjs7O0lBRXhDLG1EQUF5Qjs7SUFDekIsK0NBQStCOztJQUMvQixvREFBZ0M7O0lBQ2hDLG9EQUE0Qzs7SUFFNUMsb0RBQXlDOztJQUN6QyxvREFBeUM7O0lBRXpDLHNEQUFpQjs7Ozs7SUFFTCxtREFBMEI7Ozs7O0lBQUUsOENBQThCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0b3JSZWYsIENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBIb3N0QmluZGluZywgSG9zdExpc3RlbmVyLCBJbmplY3RvciwgSW5wdXQsIE9uSW5pdCwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICAgIHNlbGVjdG9yOiAnbG9va3VwLXF1aWNrLXNlbGVjdC1wYW5lbCcsXHJcbiAgICB0ZW1wbGF0ZVVybDogJy4vcXVpY2stc2VsZWN0LXBhbmVsLmNvbXBvbmVudC5odG1sJ1xyXG59KVxyXG5cclxuZXhwb3J0IGNsYXNzIExvb2t1cFF1aWNrU2VsZWN0UGFuZWxDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG5cclxuICAgIEBJbnB1dCgpIHNob3dNb3JlID0gdHJ1ZTtcclxuICAgIEBJbnB1dCgpIGRhdGE6IEFycmF5PGFueT4gPSBbXTtcclxuICAgIEBJbnB1dCgpIHRleHRGaWVsZDogc3RyaW5nID0gJyc7XHJcbiAgICBASW5wdXQoKSBmb3JtYXR0ZXI6IChyb3dPYmo6IGFueSkgPT4gc3RyaW5nO1xyXG5cclxuICAgIEBPdXRwdXQoKSBtb3JlQ2xjaWsgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XHJcbiAgICBAT3V0cHV0KCkgaXRlbUNsaWNrID0gbmV3IEV2ZW50RW1pdHRlcigpO1xyXG5cclxuICAgIGFjdGl2ZUluZGV4ID0gLTE7XHJcblxyXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBpbmplY3RvcjogSW5qZWN0b3IsIHByaXZhdGUgY2RyOiBDaGFuZ2VEZXRlY3RvclJlZikgeyB9XHJcblxyXG4gICAgQEhvc3RMaXN0ZW5lcignbW91c2Vkb3duJywgWyckZXZlbnQnXSlcclxuICAgIG9uQ2xpY2soJGV2ZW50OiBNb3VzZUV2ZW50KSB7XHJcbiAgICAgICAgJGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xyXG4gICAgfVxyXG5cclxuICAgIG5nT25Jbml0KCkgeyB9XHJcblxyXG4gICAgbG9hZERhdGEoaXRlbXM6IGFueSkge1xyXG4gICAgICAgIHRoaXMuZGF0YSA9IGl0ZW1zO1xyXG4gICAgICAgIGlmICghdGhpcy5jZHJbJ2Rlc3Ryb3llZCddKSB7XHJcbiAgICAgICAgICAgIHRoaXMuY2RyLmRldGVjdENoYW5nZXMoKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgb25Nb3JlQ2xpY2soJGV2ZW50OiBNb3VzZUV2ZW50KSB7XHJcbiAgICAgICAgJGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xyXG4gICAgICAgIHRoaXMubW9yZUNsY2lrLmVtaXQoJGV2ZW50KTtcclxuICAgIH1cclxuXHJcbiAgICBmb3JtYXREYXRhKHJvd09iajogYW55KSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuZm9ybWF0dGVyKHJvd09iaik7XHJcbiAgICB9XHJcblxyXG4gICAgb25JdGVtQ2xpY2soJGV2ZW50LCBpdGVtKSB7XHJcbiAgICAgICAgdGhpcy5pdGVtQ2xpY2suZW1pdCh7ZGF0YTogaXRlbSwgZXZuZXQ6ICRldmVudH0pO1xyXG4gICAgfVxyXG5cclxuICAgIHNldEFjdGl2ZUl0ZW0oaW5kZXg6IG51bWJlcikge1xyXG4gICAgICAgIHRoaXMuYWN0aXZlSW5kZXggPSBpbmRleDtcclxuICAgICAgICBpZiAoIXRoaXMuY2RyWydkZXN0cm95ZWQnXSkge1xyXG4gICAgICAgICAgICB0aGlzLmNkci5kZXRlY3RDaGFuZ2VzKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59Il19