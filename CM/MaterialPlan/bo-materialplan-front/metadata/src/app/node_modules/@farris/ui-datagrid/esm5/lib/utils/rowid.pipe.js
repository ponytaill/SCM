/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Pipe } from '@angular/core';
import { TR_PREFIX } from './../types/constant';
import { DatagridFacadeService } from '../services/datagrid-facade.service';
var RowDataIdPipe = /** @class */ (function () {
    function RowDataIdPipe(dfs) {
        this.dfs = dfs;
    }
    /**
     * @param {?} rowData
     * @param {?=} fixedRight
     * @param {?=} fixedLeft
     * @return {?}
     */
    RowDataIdPipe.prototype.transform = /**
     * @param {?} rowData
     * @param {?=} fixedRight
     * @param {?=} fixedLeft
     * @return {?}
     */
    function (rowData, fixedRight, fixedLeft) {
        if (fixedRight === void 0) { fixedRight = false; }
        if (fixedLeft === void 0) { fixedLeft = false; }
        if (rowData) {
            /** @type {?} */
            var rowID = TR_PREFIX + this.dfs.primaryId(rowData);
            if (fixedRight) {
                rowID += '_fixedright';
            }
            else if (fixedLeft) {
                rowID += '_fixedleft';
            }
            return rowID;
        }
        return null;
    };
    RowDataIdPipe.decorators = [
        { type: Pipe, args: [{ name: 'rowDataId' },] }
    ];
    /** @nocollapse */
    RowDataIdPipe.ctorParameters = function () { return [
        { type: DatagridFacadeService }
    ]; };
    return RowDataIdPipe;
}());
export { RowDataIdPipe };
if (false) {
    /**
     * @type {?}
     * @private
     */
    RowDataIdPipe.prototype.dfs;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm93aWQucGlwZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvdWktZGF0YWdyaWQvIiwic291cmNlcyI6WyJsaWIvdXRpbHMvcm93aWQucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLElBQUksRUFBaUIsTUFBTSxlQUFlLENBQUM7QUFDcEQsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ2hELE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLHFDQUFxQyxDQUFDO0FBRTVFO0lBR0ksdUJBQW9CLEdBQTBCO1FBQTFCLFFBQUcsR0FBSCxHQUFHLENBQXVCO0lBQUcsQ0FBQzs7Ozs7OztJQUVsRCxpQ0FBUzs7Ozs7O0lBQVQsVUFBVSxPQUFZLEVBQUUsVUFBa0IsRUFBRSxTQUFpQjtRQUFyQywyQkFBQSxFQUFBLGtCQUFrQjtRQUFFLDBCQUFBLEVBQUEsaUJBQWlCO1FBQ3pELElBQUksT0FBTyxFQUFFOztnQkFDTCxLQUFLLEdBQUcsU0FBUyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQztZQUNuRCxJQUFJLFVBQVUsRUFBRTtnQkFDWixLQUFLLElBQUksYUFBYSxDQUFDO2FBQzFCO2lCQUFNLElBQUksU0FBUyxFQUFFO2dCQUNsQixLQUFLLElBQUksWUFBWSxDQUFDO2FBQ3pCO1lBQ0QsT0FBTyxLQUFLLENBQUM7U0FDaEI7UUFDRCxPQUFPLElBQUksQ0FBQztJQUNoQixDQUFDOztnQkFoQkosSUFBSSxTQUFDLEVBQUMsSUFBSSxFQUFFLFdBQVcsRUFBQzs7OztnQkFGaEIscUJBQXFCOztJQW1COUIsb0JBQUM7Q0FBQSxBQWpCRCxJQWlCQztTQWhCWSxhQUFhOzs7Ozs7SUFFViw0QkFBa0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQaXBlLCBQaXBlVHJhbnNmb3JtIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFRSX1BSRUZJWCB9IGZyb20gJy4vLi4vdHlwZXMvY29uc3RhbnQnO1xyXG5pbXBvcnQgeyBEYXRhZ3JpZEZhY2FkZVNlcnZpY2UgfSBmcm9tICcuLi9zZXJ2aWNlcy9kYXRhZ3JpZC1mYWNhZGUuc2VydmljZSc7XHJcblxyXG5AUGlwZSh7bmFtZTogJ3Jvd0RhdGFJZCd9KVxyXG5leHBvcnQgY2xhc3MgUm93RGF0YUlkUGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgZGZzOiBEYXRhZ3JpZEZhY2FkZVNlcnZpY2UpIHt9XHJcblxyXG4gICAgdHJhbnNmb3JtKHJvd0RhdGE6IGFueSwgZml4ZWRSaWdodCA9IGZhbHNlLCBmaXhlZExlZnQgPSBmYWxzZSk6IGFueSB7XHJcbiAgICAgICAgaWYgKHJvd0RhdGEpIHtcclxuICAgICAgICAgICAgbGV0IHJvd0lEID0gVFJfUFJFRklYICsgdGhpcy5kZnMucHJpbWFyeUlkKHJvd0RhdGEpO1xyXG4gICAgICAgICAgICBpZiAoZml4ZWRSaWdodCkge1xyXG4gICAgICAgICAgICAgICAgcm93SUQgKz0gJ19maXhlZHJpZ2h0JztcclxuICAgICAgICAgICAgfSBlbHNlIGlmIChmaXhlZExlZnQpIHtcclxuICAgICAgICAgICAgICAgIHJvd0lEICs9ICdfZml4ZWRsZWZ0JztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm4gcm93SUQ7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==