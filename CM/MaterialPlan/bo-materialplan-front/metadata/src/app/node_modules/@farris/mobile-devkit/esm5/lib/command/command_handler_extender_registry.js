/**
 * 命令处理扩展注册器相关定义
 * @author Witt<jiwt@inspur.com>
 */
import { MetadataUtil, InjectFlags } from '../core/index';
import { COMMAND_HANDLER_EXTENDER_META } from './decorators';
import { COMMAND_HANDLER_EXTENDERS_TOKEN } from './command_handler_extender';
/**
 * 命令处理扩展注册器
 */
var CommandHandlerExtenderRegistry = /** @class */ (function () {
    /**
     * 构造函数
     * @param extenders 命令扩展实例数组
     */
    function CommandHandlerExtenderRegistry(injector) {
        var _this = this;
        this.injector = injector;
        var extenders = this.injector.get(COMMAND_HANDLER_EXTENDERS_TOKEN, null, InjectFlags.Optional);
        this.extendersMap = new Map();
        if (extenders) {
            extenders.forEach(function (extender) {
                _this.regist(extender);
            });
        }
    }
    /**
     * 获取命令扩展实例数组
     * @param   commandName 命令名称
     * @returns 命令处理扩展实例数组
     */
    CommandHandlerExtenderRegistry.prototype.get = function (commandName) {
        if (this.extendersMap.has(commandName) === false) {
            return [];
        }
        return this.extendersMap.get(commandName);
    };
    /**
     * 添加命令扩展
     * @param commandName Command名称
     * @param extender    CommandHandlerExtender实例
     * @return void
     */
    CommandHandlerExtenderRegistry.prototype.set = function (commandName, extender) {
        if (this.extendersMap.has(commandName)) {
            // 如果commandName对应的扩展已经存在，则在扩展数组中追加
            this.extendersMap.get(commandName).push(extender);
        }
        else {
            // 如果不存在，则创建新的扩展数组，并追加
            this.extendersMap.set(commandName, [extender]);
        }
    };
    /**
     * 注册命令扩展
     * @param extender CommandHandlerExtender实例
     */
    CommandHandlerExtenderRegistry.prototype.regist = function (extender) {
        // 通过元数据获取要扩展的Comamnd名称
        var extenderMetadata = MetadataUtil.getClassMetadataByName(extender.constructor, COMMAND_HANDLER_EXTENDER_META);
        if (!extenderMetadata) {
            throw new Error('CommandHandlerExtender必须指定要扩展的命令名称');
        }
        var commandName = extenderMetadata.commandName;
        // 添加到Map中
        this.set(commandName, extender);
    };
    return CommandHandlerExtenderRegistry;
}());
export { CommandHandlerExtenderRegistry };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbWFuZF9oYW5kbGVyX2V4dGVuZGVyX3JlZ2lzdHJ5LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy9tb2JpbGUtZGV2a2l0LyIsInNvdXJjZXMiOlsibGliL2NvbW1hbmQvY29tbWFuZF9oYW5kbGVyX2V4dGVuZGVyX3JlZ2lzdHJ5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7R0FHRztBQUVILE9BQU8sRUFBRSxZQUFZLEVBQVksV0FBVyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3BFLE9BQU8sRUFBRSw2QkFBNkIsRUFBa0MsTUFBTSxjQUFjLENBQUM7QUFDN0YsT0FBTyxFQUFFLCtCQUErQixFQUEwQixNQUFNLDRCQUE0QixDQUFDO0FBRXJHOztHQUVHO0FBQ0g7SUFTRTs7O09BR0c7SUFDSCx3Q0FBb0IsUUFBa0I7UUFBdEMsaUJBUUM7UUFSbUIsYUFBUSxHQUFSLFFBQVEsQ0FBVTtRQUNwQyxJQUFNLFNBQVMsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQywrQkFBK0IsRUFBRSxJQUFJLEVBQUUsV0FBVyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ2pHLElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxHQUFHLEVBQW9DLENBQUM7UUFDaEUsSUFBSSxTQUFTLEVBQUU7WUFDYixTQUFTLENBQUMsT0FBTyxDQUFDLFVBQUMsUUFBZ0M7Z0JBQ2pELEtBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUM7WUFDeEIsQ0FBQyxDQUFDLENBQUM7U0FDSjtJQUNILENBQUM7SUFFRDs7OztPQUlHO0lBQ0gsNENBQUcsR0FBSCxVQUFJLFdBQW1CO1FBQ3JCLElBQUksSUFBSSxDQUFDLFlBQVksQ0FBQyxHQUFHLENBQUMsV0FBVyxDQUFDLEtBQUssS0FBSyxFQUFFO1lBQ2hELE9BQU8sRUFBRSxDQUFDO1NBQ1g7UUFDRCxPQUFPLElBQUksQ0FBQyxZQUFZLENBQUMsR0FBRyxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQzVDLENBQUM7SUFFRDs7Ozs7T0FLRztJQUNILDRDQUFHLEdBQUgsVUFBSSxXQUFtQixFQUFFLFFBQWdDO1FBQ3ZELElBQUksSUFBSSxDQUFDLFlBQVksQ0FBQyxHQUFHLENBQUMsV0FBVyxDQUFDLEVBQUU7WUFFdEMsbUNBQW1DO1lBQ25DLElBQUksQ0FBQyxZQUFZLENBQUMsR0FBRyxDQUFDLFdBQVcsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztTQUNuRDthQUFNO1lBRUwsc0JBQXNCO1lBQ3RCLElBQUksQ0FBQyxZQUFZLENBQUMsR0FBRyxDQUFDLFdBQVcsRUFBRSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7U0FDaEQ7SUFDSCxDQUFDO0lBRUQ7OztPQUdHO0lBQ0gsK0NBQU0sR0FBTixVQUFPLFFBQWdDO1FBRXJDLHVCQUF1QjtRQUN2QixJQUFNLGdCQUFnQixHQUNwQixZQUFZLENBQUMsc0JBQXNCLENBQUMsUUFBUSxDQUFDLFdBQVcsRUFBRSw2QkFBNkIsQ0FBQyxDQUFDO1FBQzNGLElBQUksQ0FBQyxnQkFBZ0IsRUFBRTtZQUNyQixNQUFNLElBQUksS0FBSyxDQUFDLG9DQUFvQyxDQUFDLENBQUM7U0FDdkQ7UUFDRCxJQUFNLFdBQVcsR0FBRyxnQkFBZ0IsQ0FBQyxXQUFXLENBQUM7UUFFakQsVUFBVTtRQUNWLElBQUksQ0FBQyxHQUFHLENBQUMsV0FBVyxFQUFFLFFBQVEsQ0FBQyxDQUFDO0lBQ2xDLENBQUM7SUFFSCxxQ0FBQztBQUFELENBQUMsQUF2RUQsSUF1RUM7QUFFRCxPQUFPLEVBQUUsOEJBQThCLEVBQUUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiDlkb3ku6TlpITnkIbmianlsZXms6jlhozlmajnm7jlhbPlrprkuYlcclxuICogQGF1dGhvciBXaXR0PGppd3RAaW5zcHVyLmNvbT5cclxuICovXHJcblxyXG5pbXBvcnQgeyBNZXRhZGF0YVV0aWwsIEluamVjdG9yLCBJbmplY3RGbGFncyB9IGZyb20gJy4uL2NvcmUvaW5kZXgnO1xyXG5pbXBvcnQgeyBDT01NQU5EX0hBTkRMRVJfRVhURU5ERVJfTUVUQSwgQ29tbWFuZEhhbmRsZXJFeHRlbmRlck1ldGFkYXRhIH0gZnJvbSAnLi9kZWNvcmF0b3JzJztcclxuaW1wb3J0IHsgQ09NTUFORF9IQU5ETEVSX0VYVEVOREVSU19UT0tFTiwgQ29tbWFuZEhhbmRsZXJFeHRlbmRlciB9IGZyb20gJy4vY29tbWFuZF9oYW5kbGVyX2V4dGVuZGVyJztcclxuXHJcbi8qKlxyXG4gKiDlkb3ku6TlpITnkIbmianlsZXms6jlhozlmahcclxuICovXHJcbmNsYXNzIENvbW1hbmRIYW5kbGVyRXh0ZW5kZXJSZWdpc3RyeSB7XHJcblxyXG4gIC8qKlxyXG4gICAqIENvbW1hbmRIYW5kbGVyRXh0ZW5kZXLlrp7kvotNYXBcclxuICAgKiAtIGtlee+8muWRveS7pOWQjeensFxyXG4gICAqIC0gdmFsdWXvvJrlkb3ku6TmianlsZXlrp7kvotcclxuICAgKi9cclxuICBwcml2YXRlIGV4dGVuZGVyc01hcDogTWFwPHN0cmluZywgQ29tbWFuZEhhbmRsZXJFeHRlbmRlcltdPjtcclxuXHJcbiAgLyoqXHJcbiAgICog5p6E6YCg5Ye95pWwXHJcbiAgICogQHBhcmFtIGV4dGVuZGVycyDlkb3ku6TmianlsZXlrp7kvovmlbDnu4RcclxuICAgKi9cclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGluamVjdG9yOiBJbmplY3Rvcikge1xyXG4gICAgY29uc3QgZXh0ZW5kZXJzID0gdGhpcy5pbmplY3Rvci5nZXQoQ09NTUFORF9IQU5ETEVSX0VYVEVOREVSU19UT0tFTiwgbnVsbCwgSW5qZWN0RmxhZ3MuT3B0aW9uYWwpO1xyXG4gICAgdGhpcy5leHRlbmRlcnNNYXAgPSBuZXcgTWFwPHN0cmluZywgQ29tbWFuZEhhbmRsZXJFeHRlbmRlcltdPigpO1xyXG4gICAgaWYgKGV4dGVuZGVycykge1xyXG4gICAgICBleHRlbmRlcnMuZm9yRWFjaCgoZXh0ZW5kZXI6IENvbW1hbmRIYW5kbGVyRXh0ZW5kZXIpID0+IHtcclxuICAgICAgICB0aGlzLnJlZ2lzdChleHRlbmRlcik7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog6I635Y+W5ZG95Luk5omp5bGV5a6e5L6L5pWw57uEXHJcbiAgICogQHBhcmFtICAgY29tbWFuZE5hbWUg5ZG95Luk5ZCN56ewXHJcbiAgICogQHJldHVybnMg5ZG95Luk5aSE55CG5omp5bGV5a6e5L6L5pWw57uEXHJcbiAgICovXHJcbiAgZ2V0KGNvbW1hbmROYW1lOiBzdHJpbmcpOiBDb21tYW5kSGFuZGxlckV4dGVuZGVyW10ge1xyXG4gICAgaWYgKHRoaXMuZXh0ZW5kZXJzTWFwLmhhcyhjb21tYW5kTmFtZSkgPT09IGZhbHNlKSB7XHJcbiAgICAgIHJldHVybiBbXTtcclxuICAgIH1cclxuICAgIHJldHVybiB0aGlzLmV4dGVuZGVyc01hcC5nZXQoY29tbWFuZE5hbWUpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog5re75Yqg5ZG95Luk5omp5bGVXHJcbiAgICogQHBhcmFtIGNvbW1hbmROYW1lIENvbW1hbmTlkI3np7BcclxuICAgKiBAcGFyYW0gZXh0ZW5kZXIgICAgQ29tbWFuZEhhbmRsZXJFeHRlbmRlcuWunuS+i1xyXG4gICAqIEByZXR1cm4gdm9pZFxyXG4gICAqL1xyXG4gIHNldChjb21tYW5kTmFtZTogc3RyaW5nLCBleHRlbmRlcjogQ29tbWFuZEhhbmRsZXJFeHRlbmRlcikge1xyXG4gICAgaWYgKHRoaXMuZXh0ZW5kZXJzTWFwLmhhcyhjb21tYW5kTmFtZSkpIHtcclxuXHJcbiAgICAgIC8vIOWmguaenGNvbW1hbmROYW1l5a+55bqU55qE5omp5bGV5bey57uP5a2Y5Zyo77yM5YiZ5Zyo5omp5bGV5pWw57uE5Lit6L+95YqgXHJcbiAgICAgIHRoaXMuZXh0ZW5kZXJzTWFwLmdldChjb21tYW5kTmFtZSkucHVzaChleHRlbmRlcik7XHJcbiAgICB9IGVsc2Uge1xyXG5cclxuICAgICAgLy8g5aaC5p6c5LiN5a2Y5Zyo77yM5YiZ5Yib5bu65paw55qE5omp5bGV5pWw57uE77yM5bm26L+95YqgXHJcbiAgICAgIHRoaXMuZXh0ZW5kZXJzTWFwLnNldChjb21tYW5kTmFtZSwgW2V4dGVuZGVyXSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDms6jlhozlkb3ku6TmianlsZVcclxuICAgKiBAcGFyYW0gZXh0ZW5kZXIgQ29tbWFuZEhhbmRsZXJFeHRlbmRlcuWunuS+i1xyXG4gICAqL1xyXG4gIHJlZ2lzdChleHRlbmRlcjogQ29tbWFuZEhhbmRsZXJFeHRlbmRlcikge1xyXG5cclxuICAgIC8vIOmAmui/h+WFg+aVsOaNruiOt+WPluimgeaJqeWxleeahENvbWFtbmTlkI3np7BcclxuICAgIGNvbnN0IGV4dGVuZGVyTWV0YWRhdGE6IENvbW1hbmRIYW5kbGVyRXh0ZW5kZXJNZXRhZGF0YSA9XHJcbiAgICAgIE1ldGFkYXRhVXRpbC5nZXRDbGFzc01ldGFkYXRhQnlOYW1lKGV4dGVuZGVyLmNvbnN0cnVjdG9yLCBDT01NQU5EX0hBTkRMRVJfRVhURU5ERVJfTUVUQSk7XHJcbiAgICBpZiAoIWV4dGVuZGVyTWV0YWRhdGEpIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKCdDb21tYW5kSGFuZGxlckV4dGVuZGVy5b+F6aG75oyH5a6a6KaB5omp5bGV55qE5ZG95Luk5ZCN56ewJyk7XHJcbiAgICB9XHJcbiAgICBjb25zdCBjb21tYW5kTmFtZSA9IGV4dGVuZGVyTWV0YWRhdGEuY29tbWFuZE5hbWU7XHJcblxyXG4gICAgLy8g5re75Yqg5YiwTWFw5LitXHJcbiAgICB0aGlzLnNldChjb21tYW5kTmFtZSwgZXh0ZW5kZXIpO1xyXG4gIH1cclxuXHJcbn1cclxuXHJcbmV4cG9ydCB7IENvbW1hbmRIYW5kbGVyRXh0ZW5kZXJSZWdpc3RyeSB9O1xyXG4iXX0=