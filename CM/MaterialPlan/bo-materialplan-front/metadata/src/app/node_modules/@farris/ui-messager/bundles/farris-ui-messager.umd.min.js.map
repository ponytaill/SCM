{"version":3,"sources":["ng://@farris/ui-messager/lib/farris-default-focus.directive.ts","ng://@farris/ui-messager/lib/messager.config.ts","node_modules/tslib/tslib.es6.js","ng://@farris/ui-messager/lib/messager.component.ts","ng://@farris/ui-messager/lib/messager.service.ts","ng://@farris/ui-messager/lib/messager.module.ts"],"names":["FarrisDefaultFocusDirective","prototype","ngOnInit","ngAfterViewInit","_this","this","button","defaultFocus","ngZone","runOutsideAngular","setTimeout","el","nativeElement","focus","Directive","args","selector","ElementRef","NgZone","Input","MessagerDefaultConfig","title","MESSAGER_DEFAULT_CONFIG","InjectionToken","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","MessagerComponent","Object","defineProperty","_message","str","undefined","type","utils","unescapeHtml","localeService","getValue","window","innerHeight","enableWordCount","promptText","onTextChange","exception","realWidth","excepMsgEl","getBoundingClientRect","width","toFixed","render","setStyle","allexcepEl","needShowExpand","offsetHeight","onFontSizeChange","val","textAreaEl","getWordsTotal","countType","length","maxLength","$event","wordsTotal","wrodsTotalTips","replace","expandMsg","t","stopPropagation","removeStyle","showLines","expand","onCopyClick","copyButton","onClick","event","cmpRef","showMiniNotify","msg","timeout","miniNotifyEl","innerText","Component","template","Injector","HostBinding","ViewChild","injector","showFontSize","cls","okText","cancelText","showOkButton","showCancelButton","readonly","fontSize","inputType","placeholder","buttons","get","CommonUtils","LocaleService","Renderer2","MessagerService","escapeHtml","show","msgtype","message","opts","submsg","document","activeElement","blur","defaultOpts","safeHtml","titleText","height","showButtons","showMaxButton","resizable","initialState","okHandle","close","class","showHeader","assign","defaultMessagerConfig","extendOpts","modalHeight","errorTitle","fitContent","_modal","bsModalService","confirmSubject","Subject","modals","modalContainerComponent","dialog","instance","isShown","moveTo","btnOk","content","btnOkEl","btns","location","querySelectorAll","item","overlays","Array","from","body","filter","map","getComputedStyle","zIndex","parseInt","maxZindex","Math","max","apply","__spread","arguments","concat","style","msgMgr","ref","id","getModalsCount","getModalById","getModalCmp","closed","subscribe","level","removeMessager","unsubscribe","currentId","question","okCallback","cancelCallback","questionDlg","yesText","noText","cancelHandle","question2","messager","prompt","promptSubject","dlg","mc","prompt2","_opts","showCloseButton","saveSize","closeWhenever","dialogOpts","opened","textareaEle","closest","padding","resize","readOnly","beforeClose","modalRef","isMax","data","config","saveTextAreaSizeInfo","of","getKeyString","localStorage","key","setItem","JSON","stringify","confirm","_msg","confirmDlg","asObservable","info","callback","infoDlg","success","successDlg","errorDlg","warning","warningDlg","showHtmlMsg","msgDlg","msgbox","find","getCurrentModalContainer","copyToClipboard","text","windowRef","clipboardData","setData","queryCommandSupported","textarea","createElement","textContent","position","appendChild","select","execCommand","ex","removeChild","log","bsModalRef","exceptionMsg","Message","localDate","date","format","Date","happenedTime","detailInfo","detail","Detail","innerMessage","defaultOptions","exoptions","options","handle","console","Injectable","BsModalService","version","MessagerModule","forRoot","ngModule","providers","provide","useValue","NgModule","imports","CommonModule","FormsModule","FarrisCommonModule","LocaleModule","ModalModule","declarations","entryComponents"],"mappings":"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","sourcesContent":["import { Directive, Input, ElementRef, OnInit, AfterViewInit, NgZone } from '@angular/core';\r\nimport { DialogButton } from '@farris/ui-modal';\r\n\r\n@Directive({\r\n    selector: '[farris-default-focus]'\r\n})\r\nexport class FarrisDefaultFocusDirective implements OnInit, AfterViewInit {\r\n    @Input('farris-default-focus') button: DialogButton;\r\n\r\n    constructor(private el: ElementRef, private ngZone: NgZone) { }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        if (this.button.defaultFocus) {\r\n            this.ngZone.runOutsideAngular(() => {\r\n                setTimeout(() => {\r\n                    this.el.nativeElement.focus();\r\n                });\r\n            });\r\n        }\r\n    }\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport interface MessagerConfig {\r\n    width?: number;\r\n    height?: number;\r\n    title?: string;\r\n    showHeader?: boolean;\r\n}\r\n\r\nexport const MessagerDefaultConfig = {\r\n    // width: 340,\r\n    // height: 220,\r\n    title: 'ç³»ç»æç¤º'\r\n};\r\n\r\nexport const MESSAGER_DEFAULT_CONFIG = new InjectionToken<MessagerConfig>('Messager default options.');\r\n\r\n/**\r\n * æå¡å¨ç«¯å¼å¸¸ç­çº§\r\n */\r\n export const enum ExceptionLevel {\r\n\r\n    /**\r\n     * æç¤ºä¿¡æ¯\r\n     */\r\n    Info = 0,\r\n  \r\n    /**\r\n     * è­¦å\r\n     */\r\n    Warning,\r\n  \r\n    /**\r\n     * éè¯¯\r\n     */\r\n    Error,\r\n  \r\n    /**\r\n     * è´å½éè¯¯\r\n     */\r\n    Fatal\r\n}\r\n\r\nexport interface ServerExceptionEntity {\r\n\r\n    Code: string;\r\n  \r\n    Level: ExceptionLevel;\r\n  \r\n    Message: string;\r\n  \r\n    Detail: string;\r\n  \r\n    RequestId: string;\r\n  \r\n    date?: string;\r\n  \r\n    innerMessage?: string;\r\n}","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { LocaleService } from '@farris/ui-locale';\r\nimport { CommonUtils } from '@farris/ui-common';\r\n/*\r\n * @Author: Lucas.Huangï¼ç¯çç§æï¼\r\n * @Date: 2018-10-13 11:11:50\r\n * @Last Modified by:   Lucas.Huangï¼ç¯çç§æï¼\r\n * @Last Modified time: 2018-10-13 11:11:50\r\n */\r\nimport { ElementRef, Component, OnInit, Input, Injector, HostBinding, ViewChild, AfterViewInit, Renderer2 } from '@angular/core';\r\nimport { DialogButton } from '@farris/ui-modal';\r\n\r\n@Component({\r\n    selector: 'farris-messager',\r\n    templateUrl: './messager.component.html'\r\n})\r\nexport class MessagerComponent implements OnInit, AfterViewInit {\r\n    @Input() type: string;\r\n    @Input() showFontSize = false;\r\n\r\n    private _message = '';\r\n    get message() {\r\n        return this._message;\r\n    }\r\n\r\n    @Input() set message(str) {\r\n        this._message = (str === undefined || str === null) ? '' : '' + str;\r\n        if (this.type === 'prompt' && this.utils) {\r\n            this._message = this.utils.unescapeHtml(this._message);\r\n        }\r\n    }\r\n\r\n    @Input() msg = '';\r\n    utils: CommonUtils;\r\n    localeService: LocaleService;\r\n    render: Renderer2;\r\n    constructor(private injector: Injector) {\r\n        this.utils = this.injector.get(CommonUtils);\r\n        this.localeService = this.injector.get(LocaleService);\r\n        this.render = this.injector.get(Renderer2);\r\n    }\r\n\r\n    @HostBinding('class') cls = 'farris-messager';\r\n\r\n    @Input() okText = '';\r\n    @Input() cancelText = '';\r\n    @Input() showOkButton = true;\r\n    @Input() showCancelButton = true;\r\n\r\n    @Input() readonly = false;\r\n\r\n    @Input() okHandle: () => {};\r\n    @Input() cancelHandle: () => {};\r\n\r\n\r\n    @Input() enableWordCount = false;\r\n    @Input() countType = 'length';\r\n    @Input() maxLength: number;\r\n\r\n    @Input() exception = null;\r\n    @Input() showLines = 4;\r\n\r\n    @ViewChild('promptText') promptText: ElementRef;\r\n    @ViewChild('fontSizeEl') fontSizeEl: ElementRef;\r\n    @ViewChild('wordCount') wordCountEl: ElementRef;\r\n    @ViewChild('excepMsg') excepMsgEl: ElementRef;\r\n    @ViewChild('allexcep') allexcepEl: ElementRef;\r\n    @ViewChild('miniNotify') miniNotifyEl: ElementRef;\r\n    @ViewChild('btnOkEl') btnOkEl: ElementRef;\r\n\r\n    @Input() fontSize = '18';\r\n\r\n    @Input() inputType = 'textarea';\r\n    @Input() placeholder = '';\r\n\r\n    @Input() buttons: DialogButton[] = [];\r\n\r\n    get fontsizeName() {\r\n        return this.localeService.getValue('messager.prompt.fontSize.name');\r\n    }\r\n    get fontSmall() {\r\n        return this.localeService.getValue('messager.prompt.fontSize.small');\r\n    }\r\n    get fontMiddle() {\r\n        return this.localeService.getValue('messager.prompt.fontSize.middle');\r\n    }\r\n    get fontBig() {\r\n        return this.localeService.getValue('messager.prompt.fontSize.big');\r\n    }\r\n    get fontLarge() {\r\n        return this.localeService.getValue('messager.prompt.fontSize.large');\r\n    }\r\n    get fontHuge() {\r\n        return this.localeService.getValue('messager.prompt.fontSize.huge');\r\n    }\r\n\r\n    get expandText() {\r\n        return this.localeService.getValue('messager.exception.expand');\r\n    }\r\n\r\n    get collapseText() {\r\n        return this.localeService.getValue('messager.exception.collapse');\r\n    }\r\n\r\n    get happend() {\r\n        return this.localeService.getValue('messager.exception.happend');\r\n    }\r\n\r\n    get detail() {\r\n        return this.localeService.getValue('messager.exception.detail');\r\n    }\r\n\r\n    get exceptionMsgMaxHeight () {\r\n        return window.innerHeight -10 -10 - 100 -100 -16;\r\n    }\r\n\r\n\r\n    expand = false;\r\n    needShowExpand = false;\r\n\r\n    wordsTotal = '';\r\n    wrodsTotalTips = '';\r\n\r\n    ngOnInit() {\r\n        setTimeout(() => {\r\n            if (this.enableWordCount && this.promptText) {\r\n                this.onTextChange(null);\r\n            }\r\n        });\r\n\r\n        this.type = this.type === 'exception' ? 'error' : this.type;\r\n    }\r\n\r\n    get icon() {\r\n        return 'f-icon-' + (this.type === 'exception' ? 'error' : this.type);\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        setTimeout(() => {\r\n            if (this.exception && this.exception['message']) {\r\n                const realWidth = this.excepMsgEl.nativeElement.getBoundingClientRect().width.toFixed(2) + 'px';\r\n                this.render.setStyle(this.allexcepEl.nativeElement, 'width', realWidth);\r\n                this.needShowExpand = this.allexcepEl.nativeElement.offsetHeight > this.excepMsgEl.nativeElement.offsetHeight;\r\n            } else {\r\n                this.needShowExpand = false;\r\n            }\r\n        }, 10);\r\n    }\r\n\r\n    onFontSizeChange(val, textAreaEl) {\r\n        // this.promptText.nativeElement\r\n        // textAreaEl.nativeElement.style['font-size'] = val;\r\n    }\r\n\r\n    private getWordsTotal() {\r\n        const c = this.countType === 'length' ? this.promptText.nativeElement.value.length\r\n                                            : this.maxLength - this.promptText.nativeElement.value.length;\r\n        return c;\r\n    }\r\n\r\n    onTextChange($event) {\r\n        this.wordsTotal = this.getWordsTotal();\r\n        this.wrodsTotalTips = this.localeService.getValue('messager.prompt.tips.' + this.countType).replace('{0}', this.wordsTotal);\r\n    }\r\n\r\n    expandMsg(t: boolean, $event: MouseEvent) {\r\n        $event.stopPropagation();\r\n        if (t) {\r\n            this.render.setStyle(this.excepMsgEl.nativeElement, 'overflow', 'auto');\r\n            this.render.removeStyle(this.excepMsgEl.nativeElement, '-webkit-line-clamp');\r\n        } else {\r\n            this.render.setStyle(this.excepMsgEl.nativeElement, 'overflow', 'hidden');\r\n            this.render.setStyle(this.excepMsgEl.nativeElement, '-webkit-line-clamp', this.showLines);\r\n        }\r\n\r\n        this.expand = t;\r\n    }\r\n\r\n\r\n    onCopyClick($event) {\r\n        $event.stopPropagation();\r\n        if (this.exception && this.exception.copyButton) {\r\n            this.exception.copyButton.onClick({ event: $event, cmpRef: this });\r\n        }\r\n    }\r\n\r\n    showMiniNotify(msg, timeout = 700) {\r\n        if (this.miniNotifyEl) {\r\n            this.miniNotifyEl.nativeElement.innerText = msg;\r\n            this.render.setStyle(this.miniNotifyEl.nativeElement, 'display', '');\r\n            this.render.setStyle(this.miniNotifyEl.nativeElement, 'opacity', 0.8);\r\n\r\n            setTimeout(() => {\r\n                this.render.setStyle(this.miniNotifyEl.nativeElement, 'opacity', 0);\r\n                this.render.setStyle(this.miniNotifyEl.nativeElement, 'display', 'none');\r\n            }, timeout);\r\n        }\r\n    }\r\n}\r\n","/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @Company: Inspur\r\n * @Version: v0.0.15\r\n * @Date: 2019-04-02 11:48:08\r\n * @LastEditTime: 2019-10-26 16:38:34\r\n */\r\n\r\nimport { Injectable, Injector, NgZone } from \"@angular/core\";\r\nimport { Subject, Observable, of } from \"rxjs\";\r\nimport { BsModalService, BsModalRef, DialogButton } from \"@farris/ui-modal\";\r\nimport {\r\n    MessagerConfig,\r\n    MessagerDefaultConfig,\r\n    MESSAGER_DEFAULT_CONFIG,\r\n    ServerExceptionEntity,\r\n} from \"./messager.config\";\r\nimport { MessagerComponent } from \"./messager.component\";\r\nimport { LocaleService } from \"@farris/ui-locale\";\r\nimport { unescapeIdentifier } from \"@angular/compiler\";\r\nimport { format } from \"date-fns\";\r\n\r\n@Injectable()\r\nexport class MessagerService {\r\n    version = \"0.0.15\";\r\n    currentId = -1;\r\n    modals: { id: number; ref: BsModalRef }[] = [];\r\n    private defaultMessagerConfig: MessagerConfig = null;\r\n\r\n    private confirmSubject;\r\n    private ngZone: NgZone;\r\n\r\n    private localeService: LocaleService;\r\n\r\n    constructor(\r\n        private bsModalService: BsModalService,\r\n        private injector: Injector\r\n    ) {\r\n        const config =\r\n            this.injector.get(MESSAGER_DEFAULT_CONFIG) || MessagerDefaultConfig;\r\n        this.defaultMessagerConfig = Object.assign(\r\n            {},\r\n            MessagerDefaultConfig,\r\n            config\r\n        );\r\n        this.ngZone = this.injector.get(NgZone);\r\n        this.localeService = this.injector.get(LocaleService);\r\n    }\r\n    get okText() {\r\n        return this.localeService.getValue(\"messager.ok\");\r\n    }\r\n    get cancelText() {\r\n        return this.localeService.getValue(\"messager.cancel\");\r\n    }\r\n    get yesText() {\r\n        return this.localeService.getValue(\"messager.yes\");\r\n    }\r\n    get noText() {\r\n        return this.localeService.getValue(\"messager.no\");\r\n    }\r\n    get titleText() {\r\n        return this.localeService.getValue(\"messager.title\");\r\n    }\r\n    get errorTitle() {\r\n        return this.localeService.getValue(\"messager.errorTitle\");\r\n    }\r\n\r\n    escapeHtml(str) {\r\n        if (str === null || str === undefined) {\r\n            return \"\";\r\n        }\r\n        return str\r\n            .replace(/&/g, \"&amp;\")\r\n            .replace(/</g, \"&lt;\")\r\n            .replace(/>/g, \"&gt;\")\r\n            .replace(/\\\"/g, \"&quot;\")\r\n            .replace(/\\'/g, \"&#39;\")\r\n            .replace(/\\//g, \"&#x2F;\");\r\n    }\r\n\r\n    /**\r\n     * æ¾ç¤ºä¿¡æ¯æç¤ºæ¡\r\n     * @param msgtype æ¶æ¯ç±»å«\r\n     * @param message æç¤ºæ¶æ¯ä¸\r\n     * @param opts åæ° æä¾å±æ§ fitContent:trueæ¯æèªå¨éåºå®½åº¦\r\n     * @param submsg æç¤ºæ¶æ¯äºçº§\r\n     */\r\n    show(msgtype: string, message: string, opts?: {}, submsg = \"\") {\r\n        if (document.activeElement) {\r\n            (document.activeElement as any).blur();\r\n        }\r\n        const modalHeight = 180;\r\n        let defaultOpts = {\r\n            safeHtml: true,\r\n            title: this.titleText,\r\n            width: 390,\r\n            height: modalHeight,\r\n            showButtons: false,\r\n            showMaxButton: false,\r\n            resizable: false,\r\n            initialState: {\r\n                okText: this.okText,\r\n                okHandle: () => {\r\n                    this.close();\r\n                },\r\n            },\r\n            class:\r\n                \"modal-message \" +\r\n                (msgtype ? \"modal-message-type-\" + msgtype : \"\"),\r\n            showHeader: false,\r\n        };\r\n        defaultOpts = Object.assign(\r\n            {},\r\n            this.defaultMessagerConfig,\r\n            defaultOpts\r\n        );\r\n        let extendOpts = {};\r\n\r\n        switch (msgtype) {\r\n            case \"prompt\":\r\n                // å¼¹åºå¯¹è¯ç±»å\r\n                extendOpts = { showHeader: true, modalHeight: 260 };\r\n                break;\r\n            case \"error\":\r\n                // éè¯¯\r\n                extendOpts = {\r\n                    title: this.errorTitle,\r\n                    width: 446,\r\n                    showHeader: true,\r\n                    showMaxButton: true,\r\n                    fitContent: true,\r\n                };\r\n                break;\r\n            case \"exception\":\r\n                extendOpts = {\r\n                    safeHtml: false,\r\n                    title: this.errorTitle,\r\n                    width: 446,\r\n                    showHeader: true,\r\n                    fitContent: true,\r\n                };\r\n                break;\r\n            default:\r\n                // é»è®¤å¶ä»\r\n                extendOpts = { width: submsg ? 446 : 390, fitContent: true };\r\n        }\r\n        Object.assign(defaultOpts, extendOpts);\r\n        if (opts) {\r\n            Object.assign(defaultOpts, opts);\r\n        }\r\n\r\n        if (message && defaultOpts.safeHtml) {\r\n            message = this.escapeHtml(message);\r\n        }\r\n\r\n        Object.assign(defaultOpts.initialState, {\r\n            type: msgtype,\r\n            message,\r\n            msg: submsg,\r\n            exception: opts && opts[\"exception\"] ? opts[\"exception\"] : null,\r\n            showLines: opts && opts[\"showLines\"] ? opts[\"showLines\"] : 3,\r\n            readonly: opts && opts[\"readonly\"] ? opts[\"readonly\"] : false,\r\n        });\r\n\r\n        if (defaultOpts[\"buttons\"] && defaultOpts[\"buttons\"].length) {\r\n            if (\r\n                !defaultOpts.initialState[\"buttons\"] ||\r\n                !defaultOpts.initialState[\"buttons\"].length\r\n            ) {\r\n                defaultOpts.initialState[\"buttons\"] = defaultOpts[\"buttons\"];\r\n            }\r\n        }\r\n        const _modal = this.bsModalService.show(MessagerComponent, defaultOpts);\r\n        // _modal.content.buttons = defaultOpts['buttons'] || [];\r\n        this.confirmSubject = new Subject<boolean>();\r\n        if (this.modals.length > 0) {\r\n            const modalContainerComponent = _modal.dialog;\r\n            modalContainerComponent.instance.isShown = true;\r\n            modalContainerComponent.instance.moveTo(\r\n                15 * this.modals.length,\r\n                15 * this.modals.length\r\n            );\r\n        }\r\n\r\n        this.ngZone.runOutsideAngular(() => {\r\n            // ç¬¬1ä¸ªæé®è·åç¦ç¹\r\n            setTimeout(() => {\r\n                const btnOk = _modal.content.btnOkEl\r\n                    ? _modal.content.btnOkEl.nativeElement\r\n                    : null;\r\n                if (btnOk) {\r\n                    btnOk[\"focus\"]();\r\n                } else {\r\n                    const btns =\r\n                        _modal.dialog.location.nativeElement.querySelectorAll(\r\n                            \".modal-footer button\"\r\n                        );\r\n                    if (btns.length) {\r\n                        btns.item(0)[\"focus\"]();\r\n                    }\r\n                }\r\n\r\n                const overlays = Array.from(document.body.querySelectorAll('body>div, body>farris-dialog>.farris-modal,body>.farris-modal')).filter(n => n).map(n => {\r\n                    return window.getComputedStyle(n).zIndex;\r\n                }).filter(n => n && n!== 'auto').map(n => {\r\n                    return parseInt(n, 10);\r\n                });\r\n                const maxZindex = Math.max(...overlays);\r\n                _modal.dialog.location.nativeElement.style.zIndex = maxZindex + 1;\r\n            });\r\n        });\r\n\r\n        this.msgMgr(_modal);\r\n        return _modal;\r\n    }\r\n\r\n    private msgMgr(ref: BsModalRef) {\r\n        const id = this.bsModalService.getModalsCount() + 1000;\r\n        if (this.modals.length === 0) {\r\n            this.modals.push({ id, ref });\r\n        } else {\r\n            if (!this.getModalById(id)) {\r\n                this.modals.push({ id, ref });\r\n            } else {\r\n                this.getModalById(id).ref = ref;\r\n            }\r\n        }\r\n\r\n        const cmp = this.getModalCmp();\r\n\r\n        cmp.closed.subscribe((level: number) => {\r\n            this.removeMessager(id);\r\n            this.confirmSubject.unsubscribe();\r\n        });\r\n\r\n        this.currentId = id;\r\n    }\r\n\r\n    question(\r\n        message: string,\r\n        okCallback: () => void,\r\n        cancelCallback?: () => void,\r\n        msg?: string,\r\n        fitContent = true\r\n    ) {\r\n        const questionDlg = this.show(\r\n            \"question\",\r\n            message,\r\n            {\r\n                initialState: {\r\n                    okText: this.yesText,\r\n                    okHandle: () => {\r\n                        questionDlg.close();\r\n                        if (okCallback) {\r\n                            okCallback();\r\n                        }\r\n                    },\r\n                    cancelText: this.noText,\r\n                    cancelHandle: () => {\r\n                        questionDlg.close();\r\n                        if (cancelCallback) {\r\n                            cancelCallback();\r\n                        }\r\n                    },\r\n                },\r\n                fitContent,\r\n            },\r\n            msg\r\n        );\r\n        return questionDlg;\r\n    }\r\n\r\n    question2(\r\n        messager: string,\r\n        btns: DialogButton[],\r\n        msg?: string,\r\n        fitContent = true\r\n    ) {\r\n        return this.show(\r\n            \"question\",\r\n            messager,\r\n            {\r\n                initialState: {\r\n                    buttons: btns,\r\n                },\r\n                fitContent,\r\n            },\r\n            msg\r\n        );\r\n    }\r\n    /**\r\n     * 2020å¹´3æ7æ¥å ä¸ºtextareaé«åº¦å¨ä¸åæµè§å¨ä¸ä¸ä¸æ ·ï¼åºå®é«åº¦å¯è½ä¼åºç°æ»å¨æ¡\r\n     * @param title æ é¢\r\n     * @param msg ä¿¡æ¯\r\n     * @param fitContent èªéåºåå®¹\r\n     */\r\n    prompt(title: string, msg?: string, fitContent = true) {\r\n        const promptSubject = new Subject();\r\n        const dlg = this.show(\r\n            \"prompt\",\r\n            msg,\r\n            {\r\n                title,\r\n                initialState: {\r\n                    okText: this.okText,\r\n                    okHandle: () => {\r\n                        const mc = dlg.content as MessagerComponent;\r\n                        dlg.close();\r\n                        promptSubject.next(mc.promptText.nativeElement.value);\r\n                    },\r\n                    cancelText: this.cancelText,\r\n                    cancelHandle: () => {\r\n                        dlg.close();\r\n                        promptSubject.next(false);\r\n                    },\r\n                },\r\n                fitContent,\r\n                closed: () => {\r\n                    promptSubject.unsubscribe();\r\n                },\r\n            },\r\n            msg\r\n        );\r\n\r\n        return promptSubject;\r\n    }\r\n\r\n    prompt2(title: string, msg?: string, opts?: any) {\r\n        const promptSubject = new Subject();\r\n\r\n        const _opts = {\r\n            showOkButton: true,\r\n            showCloseButton: true,\r\n            showFontSize: false,\r\n            fontSize: 18,\r\n            readonly: false,\r\n            saveSize: false,\r\n            closeWhenever: true,\r\n        };\r\n        if (!opts) {\r\n            opts = _opts;\r\n        } else {\r\n            opts = Object.assign(_opts, opts);\r\n        }\r\n\r\n        const _dialogOpts = {\r\n            title,\r\n            initialState: {\r\n                showOkButton:\r\n                    opts.showOkButton === undefined ? true : opts.showOkButton,\r\n                showCancelButton:\r\n                    opts.showCancelButton === undefined\r\n                        ? true\r\n                        : opts.showCancelButton,\r\n                okText: this.okText,\r\n                okHandle: () => {\r\n                    const mc = dlg.content as MessagerComponent;\r\n                    const val = mc.promptText.nativeElement.value;\r\n                    if (opts.closeWhenever) {\r\n                        dlg.close();\r\n                        promptSubject.next(val);\r\n                    } else {\r\n                        promptSubject.next({ val, dlg });\r\n                    }\r\n                },\r\n                cancelText: this.cancelText,\r\n                cancelHandle: () => {\r\n                    dlg.close();\r\n                    promptSubject.next(false);\r\n                },\r\n                showFontSize: opts.showFontSize,\r\n                fontSize: opts.fontSize || 18,\r\n                enableWordCount: !!opts.enableWordCount,\r\n                countType: opts.countType || \"length\",\r\n                maxLength: opts.maxLength,\r\n                inputType: opts.inputType || \"textarea\",\r\n                placeholder: opts.placeholder || \"\",\r\n            },\r\n            fitContent: false,\r\n            showMaxButton: true,\r\n            resizable: true,\r\n            class: \"\",\r\n            closed: () => {\r\n                promptSubject.unsubscribe();\r\n            },\r\n            opened: () => {\r\n                if (opts.inputType !== \"textarea\") {\r\n                    return;\r\n                } else {\r\n                    setTimeout(() => {\r\n                        const textareaEle =\r\n                            dlg.content.promptText.nativeElement;\r\n                        textareaEle.closest(\"section\").style.padding = \"15px\";\r\n                        textareaEle.style.resize = \"none\";\r\n                        textareaEle.style.height = \"100%\";\r\n\r\n                        if (opts.readonly) {\r\n                            textareaEle.readOnly = true;\r\n                        }\r\n                    });\r\n                }\r\n            },\r\n            beforeClose: (modalRef: any) => {\r\n                if (opts.saveSize && !dlg.dialog.instance.isMax) {\r\n                    const data = {\r\n                        fontSize: dlg.content.fontSize,\r\n                        width: modalRef.config.width,\r\n                        height: modalRef.config.height,\r\n                    };\r\n                    this.saveTextAreaSizeInfo(data);\r\n                }\r\n                return of(true);\r\n            },\r\n        };\r\n        let dialogOpts = _dialogOpts;\r\n        if (opts) {\r\n            dialogOpts = Object.assign(dialogOpts, opts);\r\n        }\r\n\r\n        const dlg = this.show(\"prompt\", msg, dialogOpts, msg);\r\n\r\n        if (opts.inputType && dlg.content.promptText) {\r\n            dlg.content.promptText.nativeElement.focus();\r\n        }\r\n\r\n        return promptSubject;\r\n    }\r\n\r\n    getKeyString() {\r\n        // ä¸å°ç»ç«¯å±ç¨ä¸ä¸ªéç½®\r\n        // ä¿çæåä¸æ¬¡çè®¾ç½®ï¼\r\n        // ä¿å­çªå£å¤§å°ï¼å­ä½å¤§å°\r\n        return \"IGIX-FARRIS-UI-TEXTAREA-ZOOM-SETTINGS\";\r\n    }\r\n\r\n    private saveTextAreaSizeInfo(data) {\r\n        if (window.localStorage) {\r\n            const key = this.getKeyString();\r\n            localStorage.setItem(key, JSON.stringify(data));\r\n        }\r\n    }\r\n\r\n    confirm(message: string): Observable<any>;\r\n    confirm(message: string, msg?: string | number,  fitContent?: boolean): Observable<any>;\r\n    confirm(message: string, msg?: string, fitContent = true): Observable<any> {\r\n        const confirmSubject = new Subject();\r\n\r\n        const _msg = typeof msg === \"number\" ? null : msg;\r\n        const confirmDlg = this.show(\r\n            \"question\",\r\n            message,\r\n            {\r\n                initialState: {\r\n                    okText: this.okText,\r\n                    okHandle: () => {\r\n                        confirmDlg.close();\r\n                        confirmSubject.next(true);\r\n                    },\r\n                    cancelText: this.cancelText,\r\n                    cancelHandle: () => {\r\n                        confirmDlg.close();\r\n                        confirmSubject.next(false);\r\n                    },\r\n                },\r\n                fitContent,\r\n                closed: () => {\r\n                    confirmSubject.unsubscribe();\r\n                },\r\n            },\r\n            _msg\r\n        );\r\n\r\n        if (msg && typeof msg === \"number\") {\r\n            confirmDlg.dialog.location.nativeElement.style.zIndex = msg;\r\n        }\r\n\r\n        return confirmSubject.asObservable();\r\n    }\r\n\r\n    info(\r\n        message: string,\r\n        callback?: () => void,\r\n        msg?: string,\r\n        fitContent = true\r\n    ) {\r\n        const infoDlg = this.show(\r\n            \"info\",\r\n            message,\r\n            {\r\n                initialState: {\r\n                    okText: this.okText,\r\n                    okHandle: () => {\r\n                        infoDlg.close();\r\n                        if (callback) {\r\n                            callback();\r\n                        }\r\n                    },\r\n                },\r\n                fitContent,\r\n            },\r\n            msg\r\n        );\r\n        return infoDlg;\r\n    }\r\n\r\n    /** æä½æåæç¤ºï¼\r\n     * message: æç¤ºä¿¡æ¯\r\n     * msg: 2çº§ä¿¡æ¯\r\n     * fitCountent: é»è®¤ä¸ºtrue\r\n     * callback: ç¡®å®äºä»¶åè°\r\n     */\r\n    success(\r\n        message: string,\r\n        msg?: string,\r\n        fitContent = true,\r\n        callback: () => void = null\r\n    ) {\r\n        const successDlg = this.show(\r\n            \"success\",\r\n            message,\r\n            {\r\n                initialState: {\r\n                    okText: this.okText,\r\n                    okHandle: () => {\r\n                        successDlg.close();\r\n                        if (callback) {\r\n                            callback();\r\n                        }\r\n                    },\r\n                },\r\n                fitContent,\r\n            },\r\n            msg\r\n        );\r\n\r\n        return successDlg;\r\n    }\r\n    /** æç¤ºéè¯¯ä¿¡æ¯ï¼\r\n     * message: æç¤ºä¿¡æ¯\r\n     * msg: 2çº§ä¿¡æ¯\r\n     * fitCountent: é»è®¤ä¸ºtrue\r\n     * callback: ç¡®å®äºä»¶åè°\r\n     */\r\n    error(\r\n        message: string,\r\n        msg?: string,\r\n        fitContent = true,\r\n        callback: () => void = null,\r\n        safeHtml = true\r\n    ) {\r\n        const errorDlg = this.show(\r\n            \"error\",\r\n            message,\r\n            {\r\n                safeHtml,\r\n                initialState: {\r\n                    okText: this.okText,\r\n                    okHandle: () => {\r\n                        errorDlg.close();\r\n                        if (callback) {\r\n                            callback();\r\n                        }\r\n                    },\r\n                },\r\n                fitContent,\r\n            },\r\n            msg\r\n        );\r\n\r\n        return errorDlg;\r\n    }\r\n\r\n    warning(\r\n        message: string,\r\n        msg?: string,\r\n        fitContent = true,\r\n        callback: () => void = null\r\n    ) {\r\n        const warningDlg = this.show(\r\n            \"warning\",\r\n            message,\r\n            {\r\n                initialState: {\r\n                    okText: this.okText,\r\n                    okHandle: () => {\r\n                        warningDlg.close();\r\n                        if (callback) {\r\n                            callback();\r\n                        }\r\n                    },\r\n                },\r\n                fitContent,\r\n            },\r\n            msg\r\n        );\r\n        return warningDlg;\r\n    }\r\n\r\n    showHtmlMsg(\r\n        type: \"warning\" | \"info\" | \"error\" | \"success\",\r\n        title: string,\r\n        message?: string,\r\n        callback: () => void = null\r\n    ) {\r\n        const msgDlg = this.show(\r\n            type,\r\n            title,\r\n            {\r\n                safeHtml: false,\r\n                initialState: {\r\n                    okText: this.okText,\r\n                    okHandle: () => {\r\n                        msgDlg.close();\r\n                        if (callback) {\r\n                            callback();\r\n                        }\r\n                    },\r\n                },\r\n                fitContent: true,\r\n            },\r\n            message\r\n        );\r\n        return msgDlg;\r\n    }\r\n\r\n    private close() {\r\n        if (this.modals.length) {\r\n            const msgbox = this.getModalById(this.currentId);\r\n            if (msgbox) {\r\n                msgbox.ref.close();\r\n            }\r\n        }\r\n    }\r\n\r\n    private getModalById(id: number) {\r\n        return this.modals.find((item) => item.id === id);\r\n    }\r\n\r\n    private getModalCmp() {\r\n        return this.bsModalService.getCurrentModalContainer().instance;\r\n    }\r\n\r\n    private removeMessager(id) {\r\n        this.modals = this.modals.filter((n) => n.id !== id);\r\n        if (!this.modals.length) {\r\n            this.currentId = -1;\r\n        } else {\r\n            this.currentId = this.modals[this.modals.length - 1].id;\r\n        }\r\n    }\r\n\r\n    private copyToClipboard(text): boolean {\r\n        const windowRef: any = window;\r\n        if (windowRef.clipboardData && windowRef.clipboardData.setData) {\r\n            return windowRef.clipboardData.setData(\"Text\", text);\r\n        } else if (document.queryCommandSupported && document.queryCommandSupported(\"copy\")) {\r\n            var textarea = document.createElement(\"textarea\");\r\n            textarea.textContent = text;\r\n            textarea.style.position = \"fixed\";\r\n            document.body.appendChild(textarea);\r\n            textarea.select();\r\n            try {\r\n                return document.execCommand(\"copy\");\r\n            } catch (ex) {\r\n            } finally {\r\n                document.body.removeChild(textarea);\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    exception(error: ServerExceptionEntity, opts = {width: 440, height: 200, log: false}): void {\r\n        const exceptionMsg = error.Message || \"\";\r\n        const date = error.date || format(new Date(), 'yyyy-MM-dd HH:mm:ss')\r\n        const localDate = date;\r\n        // åçæ¶é´\r\n        const happenedTime = this.localeService.getValue('messager.exception.happend');\r\n        // è¯¦ç»ä¿¡æ¯\r\n        const detailInfo = this.localeService.getValue('messager.exception.detail');\r\n        const detail =\r\n            error.Detail ||\r\n            `${error.Message}\\r\\n${happenedTime}ï¼${localDate}\\r\\n${detailInfo}ï¼${error.innerMessage}` ||\r\n            \"\";\r\n\r\n        const innerMessage = error.innerMessage || null;\r\n\r\n        const defaultOptions = {width: 440, height: 200, log: false};\r\n        let exoptions = defaultOptions;\r\n        if (opts) {\r\n            exoptions = Object.assign({}, defaultOptions, opts);\r\n        }\r\n\r\n        let bsModalRef: BsModalRef;\r\n        const options = {\r\n            showMaxButton: false,\r\n            buttons: [\r\n                {\r\n                    text: this.localeService.getValue('messager.exception.roger'),\r\n                    cls: \"btn btn-primary btn-lg\",\r\n                    handle: () => {\r\n                        bsModalRef.close();\r\n                    },\r\n                },\r\n            ],\r\n            // showHeader: false,\r\n            width: exoptions.width,\r\n            height: exoptions.height,\r\n            safeHtml: false,\r\n            exception: {\r\n                date: localDate,\r\n                message: innerMessage,\r\n                copyButton: {\r\n                    text: this.localeService.getValue('messager.exception.copy'),\r\n                    onClick: (e) => {\r\n                        const result = this.copyToClipboard(detail);\r\n                        const text = result\r\n                            ? this.localeService.getValue('messager.exception.copySuccess')\r\n                            : this.localeService.getValue('messager.exception.copyFailed');\r\n                        bsModalRef.content.showMiniNotify(text, 1500);\r\n                    },\r\n                },\r\n            },\r\n        };\r\n        if (exoptions.log) {\r\n            console.error(error);\r\n        }\r\n        // this.displayError(error);\r\n        bsModalRef = this.show(\r\n            \"exception\",\r\n            exceptionMsg,\r\n            options\r\n        );\r\n    }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { FarrisCommonModule } from '@farris/ui-common';\r\n// import { FarrisFormsModule } from '@farris/ui-forms';\r\nimport { ModalModule } from '@farris/ui-modal';\r\nimport { LocaleModule } from '@farris/ui-locale';\r\n\r\nimport { MessagerComponent } from './messager.component';\r\nimport { MessagerService } from './messager.service';\r\nimport { MessagerConfig, MESSAGER_DEFAULT_CONFIG, MessagerDefaultConfig } from './messager.config';\r\nimport { FarrisDefaultFocusDirective } from './farris-default-focus.directive';\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        FarrisCommonModule.forRoot(),\r\n        // FarrisFormsModule,\r\n        LocaleModule,\r\n        ModalModule.forRoot()\r\n    ],\r\n    declarations: [\r\n        FarrisDefaultFocusDirective,\r\n        MessagerComponent\r\n    ],\r\n    entryComponents: [\r\n        MessagerComponent\r\n    ]\r\n})\r\nexport class MessagerModule {\r\n    static forRoot(config?: MessagerConfig): ModuleWithProviders {\r\n        return {\r\n            ngModule: MessagerModule,\r\n            providers: [\r\n                {provide: MESSAGER_DEFAULT_CONFIG, useValue: config || MessagerDefaultConfig },\r\n                MessagerService\r\n            ]\r\n        };\r\n    }\r\n}\r\n"]}