{"version":3,"file":"farris-ui-datagrid-settings.umd.js","sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@farris/ui-datagrid-settings/lib/datagrid-settings.component.ts","ng://@farris/ui-datagrid-settings/lib/getValueWithLocaleId.ts","ng://@farris/ui-datagrid-settings/lib/simple-mode/simple-columns.component.ts","ng://@farris/ui-datagrid-settings/lib/datagrid-scheme.service.ts","ng://@farris/ui-datagrid-settings/lib/scheme/newscheme.component.ts","ng://@farris/ui-datagrid-settings/lib/scheme/scheme-list.component.ts","ng://@farris/ui-datagrid-settings/lib/datagrid-settings-locale.ts","ng://@farris/ui-datagrid-settings/lib/datagrid-settings.service.ts","ng://@farris/ui-datagrid-settings/lib/datagrid-sort-setting.component.ts","ng://@farris/ui-datagrid-settings/lib/datagrid-view-columns.component.ts","ng://@farris/ui-datagrid-settings/lib/column-format-setting/column-format-setting.component.ts","ng://@farris/ui-datagrid-settings/lib/column-group/column-group.component.ts","ng://@farris/ui-datagrid-settings/lib/column-format-setting/column-visible-drag.directive.ts","ng://@farris/ui-datagrid-settings/lib/column-group/column-group-drag.directive.ts","ng://@farris/ui-datagrid-settings/lib/datagrid-settings.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {\r\n    Component, ViewEncapsulation, ViewChild, ElementRef, Input, EventEmitter,\r\n    OnInit, OnChanges, SimpleChanges, ChangeDetectorRef, Injector, Output, Renderer2\r\n} from '@angular/core';\r\nimport { BsModalRef } from '@farris/ui-modal';\r\nimport { DataColumn, DatagridComponent } from '@farris/ui-datagrid';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { DatagridSchemeModel, SettingModel } from './setting.model';\r\n\r\n@Component({\r\n    selector: 'datagrid-settings',\r\n    templateUrl: './datagrid-settings.component.html',\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class DatagridSettingsComponent implements OnInit, OnChanges {\r\n    modalRef: BsModalRef;\r\n    gridInstance: DatagridComponent;\r\n    activeTabIndex = 1;\r\n\r\n    /** æåºåæ°æ® */\r\n    sortTreeData = [];\r\n    sortNames = [];\r\n    sortInfo: any = {};\r\n\r\n    /** æ¾ç¤ºåæ°æ® */\r\n    viewTreeData = [];\r\n    viewColumns = [];\r\n\r\n    columnFormat = [];\r\n\r\n    groupField = [];\r\n    groupRowState = true;\r\n\r\n    canSetColumnSort = true;\r\n    canSetColumnVisible = true;\r\n    @Input() enableReset = false;\r\n    @Input() columns: DataColumn[][];\r\n\r\n    @Output() cancelHandle = new EventEmitter();\r\n    @Output() submitHandle = new EventEmitter();\r\n    @Output() reset = new EventEmitter();\r\n    @Output() concise = new EventEmitter();\r\n    @Input() schemeInfo: SettingModel = null;\r\n\r\n    @ViewChild('header') header: ElementRef;\r\n    @ViewChild('activeTab') activeTab: ElementRef;\r\n\r\n    searchItems = [];\r\n    alignItems = [];\r\n    summaryItems = [];\r\n    summaryItems2 = [];\r\n\r\n    private localeSer: LocaleService;\r\n    private messager: MessagerService;\r\n    private render2: Renderer2;\r\n    constructor(private cd: ChangeDetectorRef, private inject: Injector) {\r\n        this.messager = this.inject.get(MessagerService, null);\r\n        this.localeSer = this.inject.get(LocaleService);\r\n        this.render2 = this.inject.get(Renderer2, null);\r\n        this.searchItems = [\r\n            { value: 'all', title: this.localeSer.getValue('datagrid.settings.allColumns') },\r\n            { value: 'visible', title: this.localeSer.getValue('datagrid.settings.visibleColumns') },\r\n            { value: 'hidden', title: this.localeSer.getValue('datagrid.settings.hiddenColumns') }\r\n        ];\r\n\r\n        this.alignItems = [\r\n            { value: 'left', title: this.localeSer.getValue('datagrid.settings.alignLeft')},\r\n            { value: 'center', title: this.localeSer.getValue('datagrid.settings.alignCenter')},\r\n            { value: 'right', title: this.localeSer.getValue('datagrid.settings.alignRight')},\r\n        ];\r\n\r\n        this.summaryItems = [\r\n            { value: -1, title: this.localeSer.getValue('datagrid.settings.summaryNone') },\r\n            { value: 2, title: this.localeSer.getValue('datagrid.settings.summarySum') },\r\n            { value: 0, title: this.localeSer.getValue('datagrid.settings.summaryMax') },\r\n            { value: 1, title: this.localeSer.getValue('datagrid.settings.summaryMin') },\r\n            { value: 3, title: this.localeSer.getValue('datagrid.settings.summaryAverage') },\r\n            { value: 4, title: this.localeSer.getValue('datagrid.settings.summarCount') },\r\n        ];\r\n\r\n        this.summaryItems2 = [\r\n            { value: -1, title: this.localeSer.getValue('datagrid.settings.summaryNone') },\r\n            { value: 4, title: this.localeSer.getValue('datagrid.settings.summarCount') },\r\n        ];\r\n\r\n    }\r\n\r\n    private initData() {\r\n        this.sortNames = this.gridInstance.sortName ? this.gridInstance.sortName.split(',') : [];\r\n        this.viewColumns = this.getViewColumns();\r\n        this.sortInfo = this.gridInstance['__sortInfo'] || {};\r\n        this.columnFormat = [...this.columns[0]];\r\n        this.groupField = this.gridInstance.groupField ? this.gridInstance.groupField.split(',') : [];\r\n        this.groupRowState = this.gridInstance['expandGroupRows'];\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (!this.gridInstance.enableScheme) {\r\n            this.initData();\r\n        } else {\r\n            if (this.schemeInfo) {\r\n                this.sortInfo = this.schemeInfo.sortInfo || {};\r\n                if (this.sortInfo) {\r\n                    this.sortNames = this.sortInfo.sortName || '';\r\n                }\r\n                this.viewColumns = this.schemeInfo.viewColumns;\r\n                this.columnFormat = this.schemeInfo.columnFormat;\r\n                if (!this.columnFormat) {\r\n                    this.columnFormat = [...this.columns[0]];\r\n                }\r\n\r\n                if (this.schemeInfo.groupField) {\r\n                    if (typeof this.schemeInfo.groupField === 'string') {\r\n                        this.groupField = (this.schemeInfo.groupField as any).split(',');\r\n                    } else {\r\n                        this.groupField = this.schemeInfo.groupField || [];\r\n                    }\r\n                } else {\r\n                    this.groupField = [];\r\n                }\r\n                \r\n                return;\r\n            }\r\n            this.initData();\r\n        }\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n    }\r\n\r\n    close($event: MouseEvent) {\r\n        $event.stopPropagation();\r\n        if (this.modalRef) {\r\n            this.modalRef.close();\r\n        }\r\n    }\r\n\r\n    private setCurrentTab() {\r\n        if (this.render2) {\r\n\r\n            let left = 0;\r\n            switch(this.activeTabIndex) {\r\n                case 2:\r\n                    left = 68;\r\n                    break;\r\n                case 3:\r\n                    left = 130;\r\n                    break;\r\n                default:\r\n                    left = 0;\r\n                    break;\r\n\r\n            }\r\n\r\n            this.render2.setStyle(this.activeTab.nativeElement, 'transform', `translate3d(${left}px, 0px, 0px)`);\r\n        }\r\n    }\r\n\r\n\r\n    changeTabs($event: MouseEvent, idx) {\r\n        $event.stopPropagation();\r\n        this.activeTabIndex = idx;\r\n\r\n        this.setCurrentTab();\r\n    }\r\n\r\n    onSortInfoChange(sortInfo: any) {\r\n        this.sortInfo = sortInfo;\r\n    }\r\n\r\n    private getViewColumns() {\r\n        // å¤è¡¨å¤´\r\n        let visibleCls = [];\r\n        if (this.columns.length > 1 ) {\r\n            this.columns.forEach(cols => {\r\n                visibleCls = visibleCls.concat(this._getViewColumns(cols));\r\n            });\r\n        } else {\r\n            visibleCls = this.columns[0].filter(n => (n.visible || n.visible === undefined));\r\n        }\r\n\r\n        return visibleCls.map(n => n.field);\r\n    }\r\n\r\n    private _getViewColumns(cols: any[]) {\r\n        return cols.filter(c => !c.colspan && (c.visible || c.visible === undefined));\r\n    }\r\n\r\n\r\n    private mergeColumnFormats() {\r\n        if (this.sortInfo && Object.keys(this.sortInfo).length && this.columnFormat && this.columnFormat.length) {\r\n            const { sortName, sortOrder } = this.sortInfo;\r\n            if (sortName && sortName.length) {\r\n                sortName.forEach((n, i) => {\r\n                    const col = this.columnFormat.find((col: any) => {\r\n                        return col.field === n;\r\n                    });\r\n                    if (col) {\r\n                        col.sortable = true;\r\n                        col.order = sortOrder[i] || 'asc';\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    onColumnFormatChange(colFormatData) {\r\n        this.columnFormat = colFormatData;\r\n    }\r\n\r\n    onSubmitClick($event) {\r\n        this.mergeColumnFormats();\r\n        this.submitHandle.emit($event);\r\n    }\r\n\r\n    onCancelClick($event) {\r\n        this.cancelHandle.emit($event);\r\n    }\r\n\r\n    onSettingReset($event) {\r\n        // this.reset.emit($event);\r\n        const restorDefaultText = this.localeSer.getValue('datagrid.settings.restoreDefaultSettingsText') || 'ç¡®è®¤è¦æ¢å¤é»è®¤è®¾ç½®åï¼';\r\n        this.messager.confirm(restorDefaultText).subscribe((t: boolean) => {\r\n            if (t) {\r\n                this.reset2Default();\r\n            }\r\n        });\r\n    }\r\n\r\n    private reset2Default() {\r\n        const options = this.gridInstance.dfs['_state'].initialOptions;\r\n        if (options.columnFields && options.columnFields.length) {\r\n\r\n            const newColumns = [];\r\n            options.columnFields.forEach(c => {\r\n                if (c.field !== '_datagrid-setting-control_') {\r\n                    const col = this.gridInstance.columns[0].find((n: any) => n.field === c.field);\r\n                    if (col) {\r\n                        col.visible = c.visible;\r\n                        col.halign = c.halign;\r\n                        col.align = c.align;\r\n                        col.width = c.width;\r\n                        col.footer = {...c.footer || {}};\r\n                        col.groupFooter = {...c.groupFooter || {}};\r\n                        newColumns.push(col);\r\n                    }\r\n                }\r\n            });\r\n\r\n            this.columns = [newColumns];\r\n        }\r\n\r\n        this.viewColumns = this.getViewColumns();\r\n\r\n        if (options.sort) {\r\n            const sortOrders = options.sort.sortOrder? options.sort.sortOrder.split(',') : [];\r\n            this.sortNames = options.sort.sortName ? options.sort.sortName.split(',') : [];\r\n            this.sortInfo = { sortName: this.sortNames, sortOrder:  sortOrders };\r\n        } else {\r\n            this.sortNames = [];\r\n            this.sortInfo = {};\r\n        }\r\n        this.columnFormat = [...this.columns[0]];\r\n        this.groupField =  options.groupField ? options.groupField.split(',') : [];\r\n    }\r\n    /** æ¾ç¤ºç®æ´æ¨¡å¼çªå£ */\r\n    showConcise($event) {\r\n\r\n        if ($event) {\r\n            $event.stopPropagation();\r\n        }\r\n        this.mergeColumnFormats();\r\n        this.concise.emit();\r\n    }\r\n}\r\n","export function getMultilingualValue(valObj, localeId) {\r\n    if (valObj && typeof valObj === 'object' && Object.keys(valObj).length > 0) {\r\n        localeId = localeId || 'zh-CHS';\r\n        const val = valObj[localeId];\r\n        if (val !== undefined) {\r\n            return val;\r\n        } else {\r\n            return '';\r\n        }\r\n    } else {\r\n        return '';\r\n    }\r\n}","\r\nimport { ChangeDetectorRef, Component, EventEmitter, HostBinding, Injector, Input, OnInit,\r\n        Output, ViewEncapsulation, HostListener, ViewChild, ElementRef } from '@angular/core';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { DatagridComponent } from '@farris/ui-datagrid';\r\nimport { SettingModel } from '../setting.model';\r\nimport { getMultilingualValue } from '../getValueWithLocaleId';\r\nimport { NotifyService } from '@farris/ui-notify';\r\n\r\n@Component({\r\n    selector: 'datagrid-settings-simple',\r\n    templateUrl: './simple-columns.component.html',\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class SimpleColumnsComponent implements OnInit {\r\n    @Input() enableScheme = false;\r\n    @Input() seartTypes: any = [];\r\n    /** ææå */\r\n    @Input() columns = [];\r\n    /** æ¾ç¤ºçå */\r\n    @Input() fields = [];\r\n    /** ç¹å»ä¾§è¾¹æ ·å¼ä»¥å¤çåºåéèé¢æ¿ãé»è®¤ä¸º true */\r\n    @Input() clickToHidden = true;\r\n\r\n    @Input() top = 0;\r\n    private _schemeList = [];\r\n    @Input()\r\n    get schemeList() {\r\n        return this._schemeList;\r\n    }\r\n    set schemeList(val) {\r\n        if (val && val.length) {\r\n            val.forEach(n => {\r\n                n['_title_'] = getMultilingualValue(JSON.parse(n.name), this.localeSer.localeId);\r\n            });\r\n        }\r\n        this._schemeList = val || [];\r\n    }\r\n\r\n    @HostBinding('class') cls = 'f-datagrid-settings-simple-host';\r\n\r\n    @ViewChild('colcontainer') container: ElementRef;\r\n    @ViewChild('okbtn') btnOk: ElementRef;\r\n    @ViewChild('inputWord') searchInput: ElementRef;\r\n\r\n    @ViewChild('schemeitems') schemeitemsEleRef: ElementRef;\r\n    @ViewChild('btnSchemeName') btnRef: ElementRef;\r\n\r\n    @Output() formatChange = new EventEmitter();\r\n    @Output() fieldsChange = new EventEmitter();\r\n    @Output() submit = new EventEmitter();\r\n    @Output() closed = new EventEmitter();\r\n    @Output() advanced = new EventEmitter();\r\n\r\n    @Output() addNewScheme = new EventEmitter();\r\n    @Output() showSchemeList = new EventEmitter();\r\n    @Output() activeItemChange = new EventEmitter();\r\n\r\n    @Output() schemeChanged = new EventEmitter();\r\n\r\n    allCols = [];\r\n    columnType = 'all';\r\n\r\n    gridInstance: DatagridComponent;\r\n    localeSer: LocaleService;\r\n    isEn = false;\r\n\r\n    showSchemePanel = false;\r\n\r\n    switchValue = false;\r\n    // å½åæ¹æ¡\r\n    currentSchemeItem = null;\r\n\r\n    searchResultIsVisibleAll = false;\r\n    defaultSchemeName = 'ç³»ç»é¢å¶';\r\n\r\n    private messager: MessagerService;\r\n    private notify: NotifyService;\r\n    \r\n    settings: SettingModel = {};\r\n\r\n    constructor(private injector: Injector, public cd: ChangeDetectorRef) {\r\n        this.localeSer = this.injector.get(LocaleService, null);\r\n        this.messager = this.injector.get(MessagerService, null);\r\n        this.notify = this.injector.get(NotifyService, null);\r\n    }\r\n\r\n    @HostListener('click', ['$event'])\r\n    onClick($event: MouseEvent) {\r\n        $event.stopPropagation();\r\n        const clsname = $event.target['className'] || '';\r\n        if (clsname.indexOf('f-datagrid-settings-simple-host') > -1) {\r\n            // éèä¾§è¾¹æ ï¼\r\n            if (this.clickToHidden) {\r\n                this.close();\r\n            }\r\n        }\r\n\r\n        this.showSchemePanel = false;\r\n    }\r\n\r\n    @HostListener('window:keydown.esc', ['$event'])\r\n    onEscKeydown($event) {\r\n        $event.stopPropagation();\r\n        if (!document.querySelector('modal-container')) {\r\n            this.close();\r\n        }\r\n    }\r\n\r\n    @HostListener('window:keydown.enter', ['$event'])\r\n    onEnterKeydown($event) {\r\n        $event.stopPropagation();\r\n        if (!document.querySelector('modal-container')) {\r\n            this.onSubmitClick();\r\n        }\r\n    }\r\n\r\n    @HostListener('keydown', ['$event'])\r\n    onControlGKeydown($event: KeyboardEvent) {\r\n        if ($event.ctrlKey && !document.querySelector('modal-container')) {\r\n            $event.preventDefault();\r\n            $event.stopPropagation();\r\n            if ($event.key.toLowerCase() === 'g') {\r\n                this.showAdvanced($event);\r\n            } else if ($event.key.toLowerCase() === 'r') {\r\n                this.onSettingReset();\r\n            } else if ($event.key.toLowerCase() === 's') {\r\n                this.searchInput.nativeElement.focus();\r\n            }\r\n        }\r\n    }\r\n\r\n    private getCurrentSchemeSettings() {\r\n        if (this.currentSchemeItem && this.currentSchemeItem.queryConditionString) {\r\n            const schemeSettings = JSON.parse(this.currentSchemeItem.queryConditionString);\r\n            return schemeSettings[this.localeSer.localeId] as SettingModel;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.allCols = this.columns[0];\r\n        if (this.gridInstance.enableScheme && this.currentSchemeItem) {\r\n            this.settings = this.getCurrentSchemeSettings() || {};\r\n        }\r\n\r\n        if (this.settings && this.settings.viewColumns && this.settings.viewColumns.length) {\r\n            this.fields = this.settings.viewColumns;\r\n            this.dirtySettings(true);\r\n        } else {\r\n            this.fields = this.getViewColumns();\r\n        }\r\n\r\n        this.container.nativeElement.focus();\r\n\r\n        this.defaultSchemeName = this.localeSer.getValue('datagrid-scheme.syspreset') || this.gridInstance.defaultSchemeName;\r\n    }\r\n\r\n    private getViewColumns() {\r\n        // å¤è¡¨å¤´\r\n        let visibleCls = [];\r\n        if (this.columns.length > 1 ) {\r\n            this.columns.forEach(cols => {\r\n                visibleCls = visibleCls.concat(this._getViewColumns(cols));\r\n            });\r\n        } else {\r\n            visibleCls = this.columns[0].filter(n => (n.visible || n.visible === undefined));\r\n        }\r\n\r\n        return visibleCls.map(n => n.field);\r\n    }\r\n\r\n    private _getViewColumns(cols: any[]) {\r\n        return cols.filter(c => !c.colspan && (c.visible || c.visible === undefined));\r\n    }\r\n    \r\n    // æ ¹æ®åçç±»åè¿è¡ç­éè¿æ»¤ï¼\r\n    // all ææå\r\n    // visible å¯è§å\r\n    // hidden éèå\r\n    // group åç»å\r\n    filterColumns(searchWords = '') {\r\n        let cols = [];\r\n\r\n        if (this.switchValue) {\r\n            cols = this.columns[0].filter(n => this.fields.indexOf(n.field) > -1);\r\n        } else {\r\n            cols = this.columns[0];\r\n        }\r\n\r\n        if (searchWords) {\r\n            cols = cols.filter(c => c.title.toLowerCase().indexOf(searchWords.toLowerCase()) > -1);\r\n        }\r\n\r\n        this.allCols = cols;\r\n        this.searchResultIsVisibleAll = this.allCols.filter(n => n.visible).length === this.allCols.length;\r\n    }\r\n\r\n    private onFieldsChanged() {\r\n        if (!this.gridInstance.enableScheme) {\r\n            this.fieldsChange.emit(this.fields);\r\n        }\r\n    }\r\n\r\n    onDblClick($event, col) {\r\n        this.onCheckboxClick($event, col);\r\n    }\r\n\r\n    onCheckboxClick($event, col) {\r\n        $event.stopPropagation();\r\n        this.showSchemePanel = false;\r\n        let checked = false;\r\n        const index = this.fields.indexOf(col.field);\r\n        if (index === -1) {\r\n            this.fields.push(col.field);\r\n            checked = true;\r\n        } else {\r\n            this.fields.splice(index, 1);\r\n            checked = false;\r\n        }\r\n\r\n        this.columns[0].forEach(f => {\r\n            f.visible = this.fields.indexOf(f.field) > -1;\r\n        });\r\n\r\n        this.fields = this.columns[0].filter(n => n.visible).map(n => n.field);\r\n\r\n        this.searchResultIsVisibleAll = this.allCols.length === this.fields.length;\r\n\r\n        this.dirtySettings(true);\r\n        this.onFieldsChanged();\r\n    }\r\n\r\n    searchColumn($event) {\r\n        const txt = $event.target.value;\r\n        this.filterColumns(txt);\r\n    }\r\n\r\n    onFieldDrop(fieldInfo, txt, ulElRef: any) {\r\n        this.showSchemePanel = false;\r\n        const { removedIndex, addedIndex } = fieldInfo;\r\n\r\n        const moveItem = this.allCols[removedIndex];\r\n        const targetItem = this.allCols[addedIndex];\r\n\r\n        const moveItemIndex = this.columns[0].findIndex(n => n.field === moveItem.field);\r\n        const targetItemIndex = this.columns[0].findIndex(n => n.field === targetItem.field);\r\n\r\n        const removedItem = this.columns[0].splice(moveItemIndex, 1);\r\n        this.columns[0].splice(targetItemIndex, 0, ...removedItem);\r\n\r\n        this.fields = this.columns[0].filter(n => n.visible).map(n => n.field);\r\n\r\n        this.onFieldsChanged();\r\n        this.filterColumns(txt);\r\n    }\r\n\r\n    /**\r\n     * 0: 1ä¸ªä¹æ²¡æéä¸­ï¼ 1: å¨é¨éä¸­ï¼ 2: æéä¸­çä¹ææ²¡éä¸­ç\r\n     */\r\n    private getCheckAllState() {\r\n        if (!this.searchInput.nativeElement.value) {\r\n            if (this.fields.length === 0) {\r\n                return 0;\r\n            } else {\r\n                if (this.fields.length === this.columns[0].length) {\r\n                    return 1;\r\n                }\r\n                return 2;\r\n            }\r\n        } else {\r\n            const visibleLen = this.allCols.filter(n => n.visible).length;\r\n            if (visibleLen === this.allCols.length) {\r\n                return 1;\r\n            } else {\r\n                if (visibleLen < this.allCols.length) {\r\n                    if (visibleLen === 0) {\r\n                        return 0\r\n                    }\r\n                    return 1;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // å¨é\r\n    onCheckAllClick($event: MouseEvent, txt) {\r\n        $event.stopPropagation();\r\n        this.showSchemePanel = false;\r\n        const state = this.getCheckAllState();\r\n\r\n        const isCheckAll = state === 0 || state === 2;\r\n\r\n        if (!txt) {\r\n            this.columns[0].forEach(n => n.visible = isCheckAll);\r\n            \r\n        } else {\r\n            this.columns[0].forEach(n => {\r\n                const item = this.allCols.find(a => n.field == a.field);\r\n                if (item) {\r\n                    n.visible = isCheckAll;\r\n                    item.visible = isCheckAll;\r\n                }\r\n            });\r\n\r\n        }\r\n        this.fields = this.columns[0].filter(n => n.visible).map(n => n.field);\r\n        this.searchResultIsVisibleAll = this.allCols.length === this.fields.length;\r\n\r\n        this.dirtySettings(true);\r\n\r\n        this.onFieldsChanged();\r\n        this.filterColumns(txt);\r\n    }\r\n\r\n    close($event?: MouseEvent) {\r\n        if ($event) {\r\n            $event.stopPropagation();\r\n        }\r\n        this.closed.emit();\r\n    }\r\n\r\n    // æå¼é«çº§è®¾ç½®çªå£\r\n    showAdvanced($event) {\r\n        this.close($event);\r\n        this.advanced.emit({ viewFields: this.fields });\r\n    }\r\n\r\n    // æ¢å¤é»è®¤\r\n    onSettingReset($event?: any) {\r\n        if ($event) {\r\n            $event.stopPropagation();\r\n        }\r\n\r\n        this.showSchemePanel = false;\r\n        const restorDefaultText = this.localeSer.getValue('datagrid.settings.restoreDefaultSettingsText') || 'æ¨ç¡®å®è¦æ¢å¤é»è®¤è®¾ç½®åï¼';\r\n        this.messager.confirm(restorDefaultText, 2035).subscribe((t: boolean) => {\r\n            if (t) {\r\n                this.reset2Default();\r\n                this.dirtySettings(true);\r\n            } \r\n        });\r\n    }\r\n\r\n    private reset2Default() {\r\n        const options = this.gridInstance.dfs['_state'].initialOptions;\r\n        if (options.columnFields && options.columnFields.length) {\r\n\r\n            const newColumns = [];\r\n            options.columnFields.forEach(c => {\r\n                if (c.field !== '_datagrid-setting-control_') {\r\n                    const col = this.columns[0].find((n: any) => n.field === c.field);\r\n                    if (col) {\r\n                        col.visible = c.visible;\r\n                        col.halign = c.halign;\r\n                        col.align = c.align;\r\n                        col.width = c.width;\r\n                        col.footer = {...c.footer || {}};\r\n                        col.groupFooter = {...c.groupFooter || {}};\r\n                        newColumns.push(col);\r\n                    }\r\n                }\r\n            });\r\n\r\n            this.columns = [newColumns];\r\n        }\r\n\r\n        this.allCols = this.columns[0];\r\n        this.settings = {};\r\n        this.fields = this.getViewColumns();\r\n        this.settings.viewColumns = this.fields;\r\n        this.settings.columnFormat = [...this.columns[0]];\r\n        if (options.sort) {\r\n            const sortOrders = options.sort.sortOrder? options.sort.sortOrder.split(',') : [];\r\n            const sortNames = options.sort.sortName ? options.sort.sortName.split(',') : [];\r\n            this.settings.sortInfo = { sortName: sortNames, sortOrder:  sortOrders };\r\n        } else {\r\n            this.settings.sortInfo = {};\r\n        }\r\n        this.settings.groupField =  options.groupField ? options.groupField.split(',') : [];\r\n    }\r\n\r\n    // ç¡®å®æé®ç¹å»äºä»¶\r\n    onSubmitClick($event?: any) {\r\n        if ($event) {\r\n            $event.stopPropagation();\r\n        }\r\n\r\n        if (!this.fields || !this.fields.length) {\r\n            this.notify.warning('è¯·éæ©è¦æ¾ç¤ºçå­æ®µ');\r\n            return;\r\n        }\r\n\r\n        this.showSchemePanel = false;\r\n        this.settings.viewColumns = this.fields;\r\n\r\n        if (!this.enableScheme || !this.currentSchemeItem) {\r\n            if (!this.settings.columnFormat) {\r\n                this.settings.columnFormat = [...this.columns[0]];\r\n            }\r\n\r\n            if (!this.settings.sortInfo) {\r\n                this.settings.sortInfo = {\r\n                    sortName: this.gridInstance.sortName ? this.gridInstance.sortName.split(',') : [],\r\n                    sortOrder:  this.gridInstance.sortOrder ? this.gridInstance.sortOrder.split(',') : []\r\n                };\r\n            }\r\n\r\n            if (this.settings.groupField === undefined) {\r\n                this.settings.groupField = this.gridInstance.groupField ? this.gridInstance.groupField.split(',') : [];\r\n            }\r\n        } else {\r\n            const _settings = this.getCurrentSchemeSettings();\r\n            if (_settings) {\r\n                this.settings = Object.assign(_settings || {}, this.settings);\r\n            }\r\n        }\r\n        // this.activeItemChange.emit(this.activeSchemeItem);\r\n        this.submit.emit({content: this.settings, close: this.close.bind(this), target: this.btnOk.nativeElement, currentScheme: this.currentSchemeItem});\r\n    }\r\n\r\n    collectSettings() {\r\n        this.settings.viewColumns = this.fields;\r\n\r\n        if (!this.settings.columnFormat) {\r\n            this.settings.columnFormat = [...this.columns[0]];\r\n        }\r\n\r\n        if (!this.settings.sortInfo) {\r\n            this.settings.sortInfo = {\r\n                sortName: this.gridInstance.sortName ? this.gridInstance.sortName.split(',') : [],\r\n                sortOrder:  this.gridInstance.sortOrder ? this.gridInstance.sortOrder.split(',') : []\r\n            };\r\n        }\r\n\r\n        if (this.settings.groupField === undefined) {\r\n            this.settings.groupField = this.gridInstance.groupField ? this.gridInstance.groupField.split(',') : [];\r\n        }\r\n        \r\n        return { ...this.settings };\r\n    }\r\n\r\n    // æ¾ç¤ºä¸ææ¹æ¡åè¡¨\r\n    onChooseScheme($event) {\r\n        if ($event) {\r\n            $event.stopPropagation();\r\n        }\r\n\r\n        this.showSchemePanel = !this.showSchemePanel;\r\n\r\n        setTimeout(() => {\r\n            if (this.schemeitemsEleRef && this.currentSchemeItem) {\r\n                const itemEl = this.schemeitemsEleRef.nativeElement.querySelector(`#schemeitem_${this.currentSchemeItem.id}`);\r\n                if (itemEl) {\r\n                    if (itemEl.scrollIntoViewIfNeeded) {\r\n                        itemEl.scrollIntoViewIfNeeded();\r\n                    } else {\r\n                        itemEl.scrollIntoView();\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    // ä»æ¾ç¤ºå¯è§å\r\n    onlySeeVisibleColumns($event) {\r\n        this.switchValue = $event;\r\n        this.filterColumns();\r\n    }\r\n\r\n    refresh() {\r\n        if (!this.cd['destroyed']) {\r\n            this.cd.detectChanges();\r\n        }\r\n    }\r\n\r\n    hidePanel() {\r\n        this.showSchemePanel = false;\r\n        this.refresh();\r\n    }\r\n\r\n    // æ°å¢æ¹æ¡\r\n    onNewSchemeClick($event, saveas = 'new') {\r\n        if ($event) {\r\n            $event.stopPropagation();\r\n        }\r\n        this.hidePanel();\r\n        this.addNewScheme.emit({ type: saveas || 'new' });\r\n\r\n        \r\n    }\r\n\r\n    // æ¾ç¤ºæ¹æ¡åè¡¨ç®¡ççªå£\r\n    onShowSchemeList($event) {\r\n        if ($event) {\r\n            $event.stopPropagation();\r\n        }\r\n        this.hidePanel();\r\n        this.showSchemeList.emit();\r\n    }\r\n\r\n    // æ¹æ¡ç¹å»\r\n    onSchemeItemClick($event, item) {\r\n        setTimeout(() => {\r\n            this.currentSchemeItem = item;\r\n            this.showSchemePanel = false;\r\n\r\n            let schemeSettings = null;\r\n            if (item && item.queryConditionString) {\r\n                schemeSettings = JSON.parse(item.queryConditionString);\r\n                schemeSettings = schemeSettings[this.localeSer.localeId];\r\n\r\n                if (!schemeSettings) {\r\n                    this.reset2Default();\r\n                } else {\r\n                    this.settings = schemeSettings;\r\n                    this.fields = schemeSettings.viewColumns;\r\n\r\n\r\n                    this.columns[0].forEach(f => {\r\n                        f.visible = this.fields.indexOf(f.field) > -1;\r\n                    });\r\n                }\r\n            } else {\r\n                this.reset2Default();\r\n            }\r\n\r\n            this.schemeChanged.emit(item);\r\n            this.refresh();\r\n        });\r\n    }\r\n\r\n\r\n    dirtySettings(flag) {\r\n        // this.isChanged = flag;\r\n    }\r\n\r\n    clearSearch($event, input) {\r\n        if (input && input.value) {\r\n            this.filterColumns('');\r\n            input.value = '';\r\n        }\r\n    }\r\n}\r\n","import { Observable, of, Subject } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { BatchScheme, DatagridSchemeModel, DgSchemeState, SchemeAuthModel, SchemeState } from \"./setting.model\";\r\n\r\n/** ä¿å­æ¹æ¡API */\r\nconst SCHEME_WEBAPI = '/api/runtime/sys/v1.0/querysolution';\r\n/** è·åæ¹æ¡åè¡¨API */\r\nconst SCHEME_WEBAPI_QUERY = `${SCHEME_WEBAPI}/belongId/`;\r\n/** æ¹æ¡åè¡¨ç®¡ç- è®¾é»è®¤ãå é¤ API */\r\nconst SCHEME_WEBAPI_UPDATE = `${SCHEME_WEBAPI}/batch`;\r\n/** æééªè¯ */\r\nconst SCHEME_WEBAPI_Auth = '/api/runtime/sys/v1.0/querysolution/componentType/Datagrid';\r\n\r\nconst LANGUAGE_WEBAPI = '/api/runtime/sys/v1.0/loginInfo?infoType=supportedLanguage';\r\n\r\n\r\nexport class DatagridSchemeService {\r\n    private restService = null;\r\n    private state: DgSchemeState = {};\r\n\r\n    schemeList$ = new Subject();\r\n\r\n    constructor() {\r\n    }\r\n\r\n    update(d: SchemeState, gridId: string) {\r\n        if (!this.state[gridId]) {\r\n            this.state[gridId] = {};\r\n        }\r\n        this.state[gridId] = Object.assign(this.state[gridId], d);\r\n    }\r\n\r\n    setRestService(httpSer: any) {\r\n        if (httpSer && httpSer['befRepository']) {\r\n            this.restService = httpSer['befRepository']['restService'];\r\n        }\r\n    }\r\n\r\n    private getWebFormKey() {\r\n        const webformHash = window.location.hash.split('?')[0];\r\n        return webformHash.substring(webformHash.lastIndexOf('/') + 1);\r\n    }\r\n\r\n    getSchemeKey(gridId: string) {\r\n        const formKey = this.getWebFormKey();\r\n        return `${formKey}_DatagridScheme_${gridId}`;\r\n    }\r\n\r\n    getSchemeList(gridID: string): Observable<DatagridSchemeModel[]> {\r\n        const uri = SCHEME_WEBAPI_QUERY + this.getSchemeKey(gridID);\r\n        if (this.restService) {\r\n            return this.restService.invoke(uri, 'GET', null, null, false);\r\n        }\r\n    }\r\n\r\n    saveScheme(scheme: DatagridSchemeModel, gridID: string, isUpdate = false) {\r\n        if (this.restService) {\r\n            const httpMethod = isUpdate ? 'PUT': 'POST';\r\n            scheme.belongId = this.getSchemeKey(gridID);\r\n            return this.restService.invoke(SCHEME_WEBAPI, httpMethod, null, { body: scheme}, false);\r\n        }\r\n    }\r\n\r\n    updateScheme(param: BatchScheme, gridID: string): Observable<any> {\r\n        if (!param) {\r\n            return of(false);\r\n        }\r\n        const belongId = this.getSchemeKey(gridID);\r\n        param.belongId = belongId\r\n\r\n        if (param.belongId) {\r\n            return this.restService.invoke(SCHEME_WEBAPI_UPDATE, 'PUT', null, {body: param}, false);\r\n        }\r\n    }\r\n\r\n    getStateValue(gridId, ...statePro) {\r\n        const dgState = this.state[gridId];\r\n        if (dgState) {\r\n            if (statePro && statePro.length) {\r\n                return statePro.reduce((r, c) => {\r\n                    return r[c];\r\n                }, dgState)\r\n            }\r\n\r\n            return dgState;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    private updateStateValue(gridId, propertyName, value) {\r\n        this.update({[propertyName]: value}, gridId);\r\n    }\r\n\r\n    setSchemeList(gridId, newSchemeList) {\r\n        this.updateStateValue(gridId, 'list', newSchemeList);\r\n        this.schemeList$.next(newSchemeList);\r\n    }\r\n\r\n    hasSchemeName(gridId, schemeName: any) {\r\n        const schemeList = this.getStateValue(gridId, 'list');\r\n        if (!schemeList || !schemeList.length) {\r\n            return false;\r\n        }\r\n\r\n        if (typeof schemeName === 'string') {\r\n            return !!schemeList.find(n => n.name === schemeName.trim());\r\n        } else {\r\n            if (typeof schemeName === 'object') {\r\n                const replayNames = [];\r\n                schemeList.forEach(n => {\r\n                    if (n.name) {\r\n                        const nameObj = JSON.parse(n.name);\r\n                        // const currentNames = Object.values(nameObj);\r\n                        for(let k in schemeName) {\r\n                            if (nameObj[k] === schemeName[k]) {\r\n                                replayNames.push(k);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n\r\n                return replayNames;\r\n            }\r\n        }\r\n    }\r\n\r\n    checkAuthority(): Observable<SchemeAuthModel> {\r\n        return this.restService.invoke(SCHEME_WEBAPI_Auth, 'GET', null, null, false);\r\n    }\r\n\r\n    getLanguages() {\r\n        if (this.restService) {\r\n            return this.restService.invoke(LANGUAGE_WEBAPI, 'GET', null, null, false);\r\n        } else {\r\n            return of([]);\r\n        }\r\n    }\r\n}\r\n","import { ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'new-scheme',\r\n    templateUrl: './newscheme.component.html',\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class NewSchemeComponent implements OnInit {\r\n\r\n    @ViewChild('header') header: ElementRef<any>;\r\n\r\n    @Input() dataPermissionIds = [];\r\n\r\n    @Output() closeModal = new EventEmitter();\r\n    @Output() submitModal = new EventEmitter();\r\n    @Output() checkAuthority = new EventEmitter();\r\n\r\n    schemeInfo = {\r\n        name: '',\r\n        isDefault: false,\r\n        type: 'private',\r\n        orgids: ''\r\n    }\r\n\r\n    schemeType = 'private';\r\n\r\n    noPublicAuthority = false;\r\n    noOrgAuthority = false;\r\n\r\n    languages = [{ code: 'zh-CHS', name: 'ä¸­æç®ä½', default: true },{ code: 'en', name: 'English' },{ code: 'zh-CHT', name: 'ä¸­æç¹ä½'}];\r\n    nameMaxLength = { 'zh-CHS': 9, 'zh-CHT': 9, en: 20 };\r\n    \r\n    constructor(private cd: ChangeDetectorRef) { }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    close($event) {\r\n        this.closeModal.emit();\r\n    }\r\n\r\n    submit($event) {\r\n        this.submitModal.emit(this.schemeInfo);\r\n    }\r\n\r\n    onCancelClick($event) {\r\n        this.close($event);\r\n    }\r\n\r\n    onSelectedOrg($event) {\r\n        if ($event.selections && $event.selections.length ) {\r\n            let orgids = $event.selections.map(n => n.orgId);\r\n            this.schemeInfo.orgids = orgids;\r\n        }\r\n    }\r\n\r\n    onSetRangeType($event: MouseEvent, val) {\r\n        $event.stopPropagation();\r\n        this.schemeType = val;\r\n        if (val === 'public' || val === 'org') {\r\n            this.checkAuthority.emit({ value: val, schemeInfo: this.schemeInfo });\r\n        } else {\r\n            this.schemeInfo.type = val;\r\n        }\r\n    }\r\n\r\n    refresh(hasAuthority = { public: true, org: true }) {\r\n        this.schemeInfo = {...this.schemeInfo};\r\n        this.schemeType = this.schemeInfo.type;\r\n        this.noPublicAuthority = !hasAuthority.public;\r\n        this.noOrgAuthority = !hasAuthority.org;\r\n        this.cd.detectChanges();\r\n    }\r\n\r\n    getSelectedId($event) {\r\n        if ($event.selections &&$event.selections.length) {\r\n            this.schemeInfo.orgids = $event.selections.map(n => n.orgId);\r\n        } else {\r\n            this.schemeInfo.orgids = '';\r\n        }\r\n    }\r\n\r\n    clearAllOrgs() {\r\n        this.schemeInfo.orgids = '';\r\n    }\r\n}\r\n","import { ChangeDetectorRef, Component, ElementRef, EventEmitter, Injector, Input, OnInit, Output, TemplateRef, ViewChild } from '@angular/core';\r\nimport { DatagridComponent } from '@farris/ui-datagrid';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { getMultilingualValue } from '../getValueWithLocaleId';\r\n\r\n@Component({\r\n    selector: 'scheme-list',\r\n    templateUrl: 'scheme-list.component.html'\r\n})\r\n\r\nexport class SchemeListComponent implements OnInit {\r\n\r\n    @Input() items = [];\r\n    \r\n    @Output() closeModal = new EventEmitter();\r\n    @Output() submitModal = new EventEmitter();\r\n\r\n    @Input() removeItem = true;\r\n\r\n    \r\n    @ViewChild('header') header: ElementRef<any>;\r\n    @ViewChild('schemeName') schemeName: TemplateRef<any>;\r\n    @ViewChild('schemeIsDefault') schemeIsDefault: TemplateRef<any>;\r\n    @ViewChild('btnDel') btnDel: TemplateRef<any>;\r\n    @ViewChild('dg') dg: DatagridComponent;\r\n\r\n    columns = [];\r\n\r\n    currentUserId = '';\r\n   \r\n    private changes: {\r\n        defaultId?: string,\r\n        deletedIds?: any[]\r\n    } = null;\r\n    constructor(private cd: ChangeDetectorRef, private localeSer: LocaleService, private injector: Injector) { }\r\n\r\n    ngOnInit(): void {\r\n\r\n        const colName = this.localeSer.getValue('datagrid-scheme.columns.name') || 'åç§°';\r\n        const colType = this.localeSer.getValue('datagrid-scheme.columns.type') || 'å±æ§';\r\n        const colDefault = this.localeSer.getValue('datagrid-scheme.columns.isDefault') || 'é»è®¤';\r\n        const colCreator = this.localeSer.getValue('datagrid-scheme.columns.username') || 'åå»ºäºº';\r\n        const colMgr = this.localeSer.getValue('datagrid-scheme.columns.mgr') || 'ç®¡ç';\r\n\r\n        const publicTxt = this.localeSer.getValue('datagrid-scheme.isPublic') || 'å¬å±';\r\n        const privateTxt = this.localeSer.getValue('datagrid-scheme.isPrivate') || 'ä¸ªäºº';\r\n        const orgTxt = this.localeSer.getValue('datagrid-scheme.isOrg') || 'ç»ç»';\r\n\r\n\r\n        this.columns = [\r\n            // {field: 'name', title: 'åç§°', width: 150, template: this.schemeName},\r\n            {field: 'name', title: colName, width: 150, formatter: (v) => {\r\n                return getMultilingualValue(JSON.parse(v), this.localeSer.localeId);\r\n            }},\r\n            {field: 'type', title: colType, width: 50, halign: 'center', align: 'center', formatter: (v, d) => {\r\n                switch(v) {\r\n                    case 'public':\r\n                        return '<span class=\"scheme-manager__label px-1 public\">'+ publicTxt +'</span>';\r\n                    case 'org':\r\n                        return '<span class=\"scheme-manager__label px-1 org\">'+ orgTxt +'</span>';\r\n                    case 'private':\r\n                    default:\r\n                        return '<span class=\"scheme-manager__label px-1 private\">'+ privateTxt +'</span>';\r\n                }\r\n            }},\r\n            {field: 'isDefault', title: colDefault, width: 50, halign: 'center', align: 'center', template: this.schemeIsDefault },\r\n            {field: 'userName', title: colCreator, width: 80},\r\n            {title: colMgr, width: 50, template: this.btnDel, halign: 'center', align: 'center',}\r\n        ];\r\n    \r\n    }\r\n\r\n    onClose($event) {\r\n        this.closeModal.emit();\r\n    }\r\n\r\n    onSubmitClick($event) {\r\n        this.submitModal.emit( this.changes);\r\n    }\r\n\r\n    onCancelClick($event) {\r\n        this.closeModal.emit();\r\n    }\r\n\r\n    setDefault($event: any, ctx) {\r\n        const r = $event == '1';\r\n        // $event.stopPropagation();\r\n        this.items.forEach(n => {\r\n            n.isDefault = false;\r\n            if (n.id === ctx.rowData.id && r) {\r\n                n.isDefault = r;\r\n            }\r\n        });\r\n\r\n        this.items = [...this.items];\r\n\r\n        const defaultItem = this.items.find(n => n.isDefault);\r\n        if (defaultItem) {\r\n            this.changes = this.changes || {};\r\n            this.changes.defaultId = defaultItem.id;\r\n        }\r\n        // this.cd.detectChanges();\r\n    }\r\n\r\n    onSchemeDel($event, ctx) {\r\n        if ((this.currentUserId === ctx.rowData[\"userId\"] &&  ctx.rowData['type']=='private') || this.removeItem) {\r\n            $event.stopPropagation();\r\n            const id = ctx.rowData.id;\r\n            this.items = this.items.filter(n => n.id !== id);\r\n            this.changes = this.changes || {};\r\n            this.changes.deletedIds = [...(this.changes.deletedIds || []), id];\r\n            if (id === this.changes.defaultId) {\r\n                this.changes.defaultId = '';\r\n                delete this.changes.defaultId;\r\n            }\r\n        }\r\n    }\r\n}","/** åè®¾ç½®ç¸å³å¤è¯­èµæº */\r\nexport const DATAGRID_SETTINGS_LOCALEDATA = {\r\n    en: {\r\n        'datagrid-settings': {\r\n            noAuth: {\r\n                public: 'You do not have permission to set the usage scope of the scheme as public.',\r\n                org: 'You do not have permission to set the usage range of the scheme as organization.'\r\n            },\r\n            has: {\r\n                exist: 'The scheme name already exists, please modify it.',\r\n                chs: 'Simplified Chinese name already exists.',\r\n                cht: 'Traditional Chinese name already exists.',\r\n                en: 'English name already exists.'\r\n            },\r\n            required: {\r\n                schemeName: 'Please enter a scheme name.',\r\n                chs: 'Please enter a simplified Chinese name.',\r\n                cht: 'Please enter a name in Traditional Chinese.',\r\n                en: 'Please enter an English name.',\r\n                org: 'Please select an organization.'\r\n            },\r\n            groupRowStatus: {\r\n                label: 'Group Row Status',\r\n                expand: 'open',\r\n                collapse: 'fold'\r\n            }\r\n        },\r\n        'datagrid-scheme': {\r\n            saveTitle: 'Save Scheme',\r\n            namePlaceholder: 'Please enter a scheme name (no more than 9 characters)',\r\n            setPrivate: 'Private',\r\n            privateTip: 'When set as private, you can only view and use the scheme yourself',\r\n            setPublic: 'Public',\r\n            publicTip: 'When public, all users can view and use the scheme',\r\n            setOrg: 'Organization',\r\n            orgTip: 'When it is set to organization, users in the organization can view and use the scheme',\r\n            setDefault: 'Default',\r\n            defaultTip: 'The next time you enter this function, the scheme will be loaded by default',\r\n            syspreset: 'System preset',\r\n            isDefault: 'Default',\r\n            isPublic: 'Public',\r\n            isOrg: 'Org',\r\n            isPrivate: 'Private',\r\n            newScheme: 'Add New Scheme',\r\n            mgrScheme: 'Manage',\r\n            saveas: 'Save as',\r\n            onlyshowcolumns: 'only the display column',\r\n            schemeList: 'Scheme list',\r\n            delete: 'Delete this shceme',\r\n            columns:  {\r\n                name: 'Name',\r\n                type: 'Type',\r\n                isDefault: 'IsDefault',\r\n                username: 'Creator',\r\n                mgr: 'Manage'\r\n            }\r\n        }\r\n    },\r\n    'zh-CHS': {\r\n        'datagrid-settings': {\r\n            noAuth: {\r\n                public: 'æ¨æ²¡æå°æ¹æ¡çä½¿ç¨èå´è®¾ç½®ä¸ºå¬å±çæéã',\r\n                org: 'æ¨æ²¡æå°æ¹æ¡çä½¿ç¨èå´è®¾ç½®ä¸ºç»ç»çæéã'\r\n            },\r\n            has: {\r\n                exist: 'æ¹æ¡åç§°å·²å­å¨ï¼è¯·ä¿®æ¹ã',\r\n                chs: 'ç®ä½ä¸­æåç§°å·²å­å¨ã',\r\n                cht: 'ç¹ä½ä¸­æåç§°å·²å­å¨ã',\r\n                en: 'è±æåç§°å·²å­å¨ã'\r\n            },\r\n            required: {\r\n                schemeName: 'è¯·è¾å¥æ¹æ¡åç§°ã',\r\n                chs: 'è¯·è¾å¥ç®ä½ä¸­æåç§°ã',\r\n                cht: 'è¯·è¾å¥ç¹ä½ä¸­æåç§°ã',\r\n                en: 'è¯·è¾å¥è±æåç§°ã',\r\n                org: 'è¯·éæ©ç»ç»ã'\r\n            },\r\n            groupRowStatus: {\r\n                label: 'åç»è¡ç¶æ',\r\n                expand: 'å±å¼',\r\n                collapse: 'æå '\r\n            }\r\n        },\r\n        'datagrid-scheme': {\r\n            saveTitle: 'ä¿å­æ¹æ¡',\r\n            namePlaceholder: 'è¯·è¾å¥æ¹æ¡åç§°ï¼æå¤ä¸è¶è¿9ä¸ªå­ç¬¦ï¼',\r\n            setPrivate: 'è®¾ä¸ºä¸ªäºº',\r\n            privateTip: 'è®¾ä¸ºä¸ªäººæ¶ï¼åªè½èªå·±æ¥çãä½¿ç¨è¯¥æ¹æ¡',\r\n            setPublic: 'è®¾ä¸ºå¬å±',\r\n            publicTip: 'è®¾ä¸ºå¬å±æ¶ï¼ææç¨æ·é½å¯æ¥çãä½¿ç¨è¯¥æ¹æ¡',\r\n            setOrg: 'è®¾ä¸ºç»ç»',\r\n            orgTip: 'è®¾ä¸ºç»ç»æ¶ï¼ç»ç»åçç¨æ·åè½æ¥çãä½¿ç¨è¯¥æ¹æ¡',\r\n            setDefault: 'è®¾ä¸ºé»è®¤',\r\n            defaultTip: 'ä¸æ¬¡è¿å¥æ­¤åè½æ¶ï¼é»è®¤å è½½è¯¥æ¹æ¡',\r\n            syspreset: 'ç³»ç»é¢å¶',\r\n            isDefault: 'é»è®¤',\r\n            isPublic: 'å¬å±',\r\n            isOrg: 'ç»ç»',\r\n            isPrivate: 'ä¸ªäºº',\r\n            newScheme: 'æ°å¢æ¹æ¡',\r\n            mgrScheme: 'ç®¡ç',\r\n            saveas: 'å¦å­ä¸º',\r\n            onlyshowcolumns: 'ä»çå±ç¤ºå',\r\n            schemeList: 'æ¹æ¡åè¡¨',\r\n            delete: 'å é¤',\r\n            columns:  {\r\n                name: 'åç§°',\r\n                type: 'å±æ§',\r\n                isDefault: 'é»è®¤',\r\n                username: 'åå»ºäºº',\r\n                mgr: 'ç®¡ç'\r\n            }\r\n        }\r\n    },\r\n    'zh-CHT': {\r\n        'datagrid-settings': {\r\n            noAuth: {\r\n                public: 'æ¨æ²æå°æ¹æ¡çä½¿ç¨ç¯åè¨­ç½®ç²å¬å±çæ¬éã',\r\n                org: 'æ¨æ²æå°æ¹æ¡çä½¿ç¨ç¯åè¨­ç½®ç²çµç¹çæ¬éã'\r\n            },\r\n            has: {\r\n                exist: 'æ¹æ¡åç¨±å·²å­å¨ï¼è«ä¿®æ¹ã',\r\n                chs: 'ç°¡é«ä¸­æåç¨±å·²å­å¨ã',\r\n                cht: 'ç¹é«ä¸­æåç¨±å·²å­å¨ã',\r\n                en: 'è±æåç¨±å·²å­å¨ã'\r\n            },\r\n            required: {\r\n                schemeName: 'è«è¼¸å¥æ¹æ¡åç¨±.',\r\n                chs: 'è«è¼¸å¥ç°¡é«ä¸­æåç¨±ã',\r\n                cht: 'è«è¼¸å¥ç¹é«ä¸­æåç¨±ã',\r\n                en: 'è«è¼¸å¥è±æåç¨±ã',\r\n                org: 'è«é¸æçµç¹ã'\r\n            },\r\n            groupRowStatus: {\r\n                label: 'åçµè¡çæ',\r\n                expand: 'å±é',\r\n                collapse: 'æç'\r\n            }\r\n        },\r\n        'datagrid-scheme': {\r\n            saveTitle: 'ä¿å­æ¹æ¡',\r\n            namePlaceholder: 'è«è¼¸å¥æ¹æ¡åç¨±ï¼æå¤ä¸è¶é9åå­ç¬¦ï¼',\r\n            setPrivate: 'è¨­ç²åäºº',\r\n            privateTip: 'è¨­ç²åäººæï¼åªè½èªå·±æ¥çãä½¿ç¨è©²æ¹æ¡',\r\n            setPublic: 'è¨­ç²å¬å±',\r\n            publicTip: 'è¨­ç²å¬å±æ¶ï¼ææç¨æ¶é½å¯æ¥çãä½¿ç¨è©²æ¹æ¡',\r\n            setOrg: 'è¨­ç²çµç¹',\r\n            orgTip: 'è¨­ç²çµç¹æï¼çµç¹å§çç¨æ¶åè½æ¥çãä½¿ç¨è©²æ¹æ¡',\r\n            setDefault: 'è¨­ç²é»èª',\r\n            defaultTip: 'ä¸æ¬¡é²å¥æ­¤åè½æï¼é»èªå è¼è©²æ¹æ¡',\r\n            syspreset: 'ç³»çµ±é å¶',\r\n            isDefault: 'é»èª',\r\n            isPublic: 'å¬å±',\r\n            isOrg: 'çµç¹',\r\n            isPrivate: 'åäºº',\r\n            newScheme: 'æ°å¢æ¹æ¡',\r\n            mgrScheme: 'ç®¡ç',\r\n            saveas: 'å¦å­ç²',\r\n            onlyshowcolumns: 'åçå±ç¤ºå',\r\n            schemeList: 'æ¹æ¡åè¡¨',\r\n            delete: 'åªé¤',\r\n            columns:  {\r\n                name: 'åç¨±',\r\n                type: 'å±¬æ§',\r\n                isDefault: 'é»èª',\r\n                username: 'åµå»ºäºº',\r\n                mgr: 'ç®¡ç'\r\n            }\r\n        }\r\n    }\r\n}","import { debounceTime, map, switchMap, tap } from 'rxjs/operators';\r\nimport { forkJoin, Observable, of, Subscription, timer } from 'rxjs';\r\nimport { Injectable, Injector, InjectionToken, ComponentFactoryResolver, ApplicationRef } from '@angular/core';\r\nimport { DatagridComponent, DataColumn } from '@farris/ui-datagrid';\r\nimport { BsModalService, ModalOptions, ModalContainerComponent } from '@farris/ui-modal';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { DatagridSettingsComponent } from './datagrid-settings.component';\r\nimport { cloneDeep, debounce } from 'lodash-es';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { TreeNode } from '@farris/ui-treetable';\r\nimport { DebugService, IdService } from '@farris/ui-common';\r\nimport { SimpleColumnsComponent } from './simple-mode/simple-columns.component';\r\nimport { DatagridSchemeService } from './datagrid-scheme.service';\r\nimport { NewSchemeComponent } from './scheme/newscheme.component';\r\nimport { SchemeListComponent } from './scheme/scheme-list.component';\r\nimport { NotifyService } from '@farris/ui-notify';\r\nimport { DatagridSchemeModel, SchemeAuthModel, SettingModel } from './setting.model';\r\n\r\nimport { DATAGRID_SETTINGS_LOCALEDATA }  from './datagrid-settings-locale';\r\n\r\nexport const GRID_SETTINGS_WEBAPI =  new InjectionToken(' Farris DataGrid User Setting WebApi URI.');\r\n\r\n@Injectable()\r\nexport class DatagridSettingsService {\r\n\r\n    private multiSortMsg = 'åè¡¨ä¸­æªå¼å¯å¤åæåºçåè½ã è¯·æ£æ¥ï¼';\r\n    private columnsSortableMsg = 'æªå¼å¯åçæåºåè½ãè¯·æ£æ¥ï¼';\r\n    private notSupportHeaderGroupMsg = 'æä¸æ¯æå¤è¡¨å¤´è®¾ç½®';\r\n    private notShowDialog = 'å¤è¡¨å¤´æä¸æ¯æåæ¾ç¤ºè®¾ç½®ï¼åæ¶æªå¯ç¨åæåºåè½ã';\r\n\r\n    private _httpRestService = null;\r\n\r\n    private languages: any = [];\r\n\r\n    get httpRestService() {\r\n        return this._httpRestService;\r\n    };\r\n\r\n    set httpRestService(httpSer) {\r\n        this._httpRestService = httpSer;\r\n\r\n        if (this.schemeService) {\r\n            this.schemeService.setRestService(httpSer);\r\n        }\r\n    }\r\n\r\n    private gridRefs: {[key: string]: DatagridComponent} = null;\r\n    private activeSchemeItem: {[schemeid: string]: any} = null;\r\n\r\n    private saving = false;\r\n    private cfr: ComponentFactoryResolver = null;\r\n    private app: ApplicationRef = null;\r\n    private schemeListSubscription: Subscription = null;\r\n\r\n    private schemeService: DatagridSchemeService;\r\n    private notifyService: NotifyService;\r\n\r\n\r\n    private currentSchemeitem = null;\r\n    private debugSer: DebugService = null;\r\n\r\n    constructor(private injector: Injector, private modalSer: BsModalService,\r\n                private messager: MessagerService, private idService: IdService,\r\n                private localeSer: LocaleService) {\r\n\r\n        this.cfr = this.injector.get(ComponentFactoryResolver);\r\n        this.app = this.injector.get(ApplicationRef);\r\n        this.notifyService = this.injector.get(NotifyService, null);\r\n        this.debugSer = this.injector.get(DebugService, null);\r\n        this.schemeService = new DatagridSchemeService();\r\n\r\n        this.localeSer.setLocaleData(DATAGRID_SETTINGS_LOCALEDATA);\r\n    }\r\n\r\n\r\n    destroy(id?: string) {\r\n        if (this.gridRefs) {\r\n            if (id && this.gridRefs[id]) {\r\n                this.gridRefs[id] = null;\r\n                delete this.gridRefs[id];\r\n            } else {\r\n                if (!Object.keys(this.gridRefs).length) {\r\n                    this.gridRefs = null;\r\n                }\r\n            }\r\n        }\r\n        this.saving = false;\r\n        this.setActiveSchemeItem(id, null);\r\n    }\r\n\r\n    private writeDebugMsg(msg, type = 'warn') {\r\n        if (this.debugSer) {\r\n            if (this.debugSer[type]) {\r\n                this.debugSer[type](msg);\r\n            } else {\r\n                console[type](msg);\r\n            }\r\n        }\r\n    }\r\n\r\n    registerGridInstance(dg: DatagridComponent) {\r\n        if (!dg) {\r\n            this.writeDebugMsg('DatagridSettingService: grid instance is null.')\r\n            return;\r\n        }\r\n        const id = dg.id;\r\n        this.gridRefs = this.gridRefs || {};\r\n        if (!this.gridRefs[id]) {\r\n            this.gridRefs[id] = dg;\r\n        }\r\n    }\r\n\r\n    getGridInstance(dgID: string) {\r\n        return this.gridRefs ? this.gridRefs[dgID] : null;\r\n    }\r\n\r\n    /** æ´æ°æ¹æ¡ä¸­çéç½®æ°æ® */\r\n    private updateSchemeSettings(schemeItem: DatagridSchemeModel, settings: Partial<SettingModel>) {\r\n        if (schemeItem && settings) {\r\n            const schemeContentObj = schemeItem.queryConditionString ? JSON.parse(schemeItem.queryConditionString) : {};\r\n            if (schemeContentObj) {\r\n                if ( schemeContentObj[this.localeSer.localeId]) {\r\n                    const schemeSettings = schemeContentObj[this.localeSer.localeId] || {};\r\n                    schemeContentObj[this.localeSer.localeId] = Object.assign(schemeSettings, settings);\r\n                } else {\r\n                    schemeContentObj[this.localeSer.localeId] =  settings;\r\n                }\r\n                schemeItem.queryConditionString = JSON.stringify(schemeContentObj);\r\n            }\r\n        }\r\n    }\r\n\r\n    /** æ´æ°å½åæ¹æ¡éç½®æ°æ® */\r\n    updateActiveSchemeItemSettings(dgId: string, settings: Partial<SettingModel>) {\r\n        const schemeItem = this.getActiveSchemeItem(dgId);\r\n        this.updateSchemeSettings(schemeItem, settings);\r\n    }\r\n\r\n    /** è®¾ç½®æ´»å¨çæ¹æ¡ */\r\n    setActiveSchemeItem(dgId: string, activeItem: any) {\r\n        const schemekey = this.schemeService.getSchemeKey(dgId);\r\n        this.activeSchemeItem = this.activeSchemeItem || {};\r\n        this.activeSchemeItem[schemekey] = activeItem;\r\n    }\r\n    /** è·åå½åæ´»å¨çæ¹æ¡ */\r\n    getActiveSchemeItem(dgId: string): DatagridSchemeModel {\r\n        const schemekey = this.schemeService.getSchemeKey(dgId);\r\n        return this.activeSchemeItem ? this.activeSchemeItem[schemekey] : null;\r\n    }\r\n\r\n    getSearchTypes() {\r\n        return [\r\n            { value: 'all', title: this.localeSer.getValue('datagrid.settings.allColumns') },\r\n            { value: 'visible', title: this.localeSer.getValue('datagrid.settings.visibleColumns') },\r\n            { value: 'hidden', title: this.localeSer.getValue('datagrid.settings.hiddenColumns') }\r\n        ];\r\n    }\r\n\r\n    showSimple(gridInstance: DatagridComponent, settings?: SettingModel, selectedSchemeItem?: DatagridSchemeModel) {\r\n        const columns = this.convertColumnsToSimple(gridInstance.columns);\r\n        columns[0] = [...columns[0].filter(n => n.field && n.field !== gridInstance.ControlPanelFeild)];\r\n\r\n        const searchTypes = this.getSearchTypes();\r\n\r\n        if (this.cfr) {\r\n            const cmpFactory = this.cfr.resolveComponentFactory(SimpleColumnsComponent);\r\n            let simpleRef = cmpFactory.create(this.injector);\r\n            this.app.attachView(simpleRef.hostView);\r\n            simpleRef.instance.columns = columns;\r\n            simpleRef.instance.seartTypes = searchTypes;\r\n            simpleRef.instance.gridInstance = gridInstance;\r\n\r\n            if (document.querySelector('#page-wrapper')) {\r\n                simpleRef.instance.top = 76;\r\n            }\r\n\r\n            simpleRef.instance.enableScheme = gridInstance.enableScheme;\r\n            if (gridInstance.enableScheme) {\r\n                if (settings) {\r\n                    if (selectedSchemeItem) {\r\n                        this.updateSchemeSettings(selectedSchemeItem, settings);\r\n                        simpleRef.instance.currentSchemeItem = selectedSchemeItem;\r\n                    } else {\r\n                        simpleRef.instance.currentSchemeItem = null;\r\n                        simpleRef.instance.settings = settings;\r\n                    }\r\n                } else {\r\n                    const _currentSchemtItem = this.getActiveSchemeItem(gridInstance.id);\r\n                    this.currentSchemeitem = _currentSchemtItem;\r\n                    simpleRef.instance.currentSchemeItem = _currentSchemtItem;\r\n                }\r\n            }\r\n\r\n            document.body.appendChild(simpleRef.location.nativeElement);\r\n\r\n            simpleRef.instance.closed.pipe(\r\n                switchMap( () => {\r\n                    if (simpleRef) {\r\n                        simpleRef.instance.container.nativeElement.style.right = '-500px';\r\n                        return timer(500);\r\n                    }\r\n                })\r\n            ).subscribe(() => {\r\n                simpleRef.location.nativeElement.remove();\r\n                simpleRef.destroy();\r\n                simpleRef = null;\r\n                if (this.schemeListSubscription) {\r\n                    this.schemeListSubscription.unsubscribe();\r\n                }\r\n\r\n                const _activeSchemtItem = this.getActiveSchemeItem(gridInstance.id);\r\n                if ((!this.currentSchemeitem || (_activeSchemtItem && _activeSchemtItem.id !== this.currentSchemeitem.id)) && (_activeSchemtItem &&_activeSchemtItem.queryConditionString)) {\r\n                    const _currentSettings = JSON.parse(_activeSchemtItem.queryConditionString)[this.localeSer.localeId];\r\n                    if (_currentSettings) {\r\n                        columns[0].forEach(f => {\r\n                            f.visible = _currentSettings.viewColumns.indexOf(f.field) > -1;\r\n                        });\r\n                    }\r\n                }\r\n\r\n            });\r\n\r\n\r\n            simpleRef.instance.advanced.subscribe(({ viewFields }) => {\r\n                if (viewFields && viewFields.length){\r\n                    this.updateSchemeSettings(simpleRef.instance.currentSchemeItem, {viewColumns: viewFields});\r\n                }\r\n                this.showAdvanced(gridInstance, null, simpleRef.instance.currentSchemeItem);\r\n            });\r\n\r\n            simpleRef.instance.submit.subscribe( (e: any) => {\r\n                e.target.disabled = true;\r\n                if (this.saving) {\r\n                    return;\r\n                }\r\n                if (!this.saving) {\r\n\r\n                    this.setActiveSchemeItem(gridInstance.id, e.currentScheme);\r\n                    \r\n\r\n                    this.updateGridView(e, gridInstance, e.target);\r\n                }\r\n            });\r\n\r\n            simpleRef.instance.fieldsChange.subscribe((visibleFields: string[]) => {\r\n                this.updateActiveSchemeItemSettings(gridInstance.id, {viewColumns: visibleFields})\r\n            });\r\n\r\n            // æå¼æ°å¢æ¹æ¡çªå£\r\n            simpleRef.instance.addNewScheme.subscribe((e: any) => {\r\n                this.showNewSchemeDialog(gridInstance, e, simpleRef);\r\n            });\r\n\r\n            simpleRef.instance.schemeList = this.schemeService.getStateValue(gridInstance.id, 'list') || [];\r\n\r\n            // æå¼æ¹æ¡ç®¡çåè¡¨çªå£\r\n            simpleRef.instance.showSchemeList.subscribe(() => {\r\n                this.schemeService.getSchemeList(gridInstance.id).pipe(\r\n                    switchMap((t) => {\r\n                        return this.schemeService.checkAuthority().pipe(\r\n                            map((auth: SchemeAuthModel) => {\r\n                                return {\r\n                                    list: t,\r\n                                    ...auth\r\n                                }\r\n                            })\r\n                        )\r\n                    })\r\n                ).subscribe((t: any) => {\r\n                    this.schemeService.setSchemeList(gridInstance.id, t.list || []);\r\n                    this.showSchemeListDialog(gridInstance, cloneDeep(t.list || []), t, simpleRef);\r\n                });\r\n            });\r\n\r\n            this.schemeListSubscription = this.schemeService.schemeList$.subscribe((list: any) => {\r\n                simpleRef.instance.schemeList = list;\r\n\r\n                if (!list || !list.length) {\r\n                    this.setActiveSchemeItem(gridInstance.id, null);\r\n                    return;\r\n                }\r\n\r\n                const _activeSchemeItem = this.getActiveSchemeItem(gridInstance.id);\r\n                if (_activeSchemeItem) {\r\n                    let hasActiveItem = list.find(n => n.id === _activeSchemeItem.id);\r\n                    if (!hasActiveItem) {\r\n                        hasActiveItem = this.getDefaultScheme(list); // è·åè®¾ç½®ä¸ºå½åæ¹æ¡çé¡¹\r\n                        this.setActiveSchemeItem(gridInstance.id, hasActiveItem || null);\r\n                    }\r\n\r\n                    simpleRef.instance.currentSchemeItem = hasActiveItem;\r\n                }\r\n            });\r\n\r\n            // åæ¢æ¹æ¡\r\n            // simpleRef.instance.activeItemChange.subscribe((r: any) => {\r\n            //     this.setActiveSchemeItem(gridInstance.id, r);\r\n            // });\r\n\r\n            simpleRef.instance.schemeChanged.subscribe((t: any) => {\r\n                this.currentSchemeitem = t;\r\n            })\r\n\r\n            simpleRef.hostView.detectChanges();\r\n\r\n            simpleRef.instance.container.nativeElement.style.right = '0px';\r\n\r\n            return simpleRef;\r\n        }\r\n    }\r\n\r\n\r\n    show(gridInstance: DatagridComponent, opts?: ModalOptions) {\r\n        this.registerGridInstance(gridInstance);\r\n\r\n        if (gridInstance.enableSimpleMode) {\r\n            return this.showSimple(gridInstance);\r\n        } else {\r\n            return this.showAdvanced(gridInstance, opts);\r\n        }\r\n    }\r\n\r\n    private showAdvanced(gridInstance: DatagridComponent, opts?: ModalOptions, selectedSchemeItem?: DatagridSchemeModel) {\r\n        let _editColSortInfo = true;\r\n        const editColSortInfo = this.canSetColumnSort(gridInstance);\r\n        if (editColSortInfo !== true) {\r\n            // this.messager.warning(msg);\r\n            // return;\r\n            _editColSortInfo = false;\r\n        }\r\n\r\n        const showSetColumnsTab = !this.isHeaderGroup(gridInstance);\r\n        const getActiveTabIndex = () => {\r\n            if (showSetColumnsTab) {\r\n                return 1;\r\n            } else {\r\n                if (_editColSortInfo) {\r\n                    return 2;\r\n                } else {\r\n                    return -1;\r\n                }\r\n            }\r\n        };\r\n        const activeTabIndex = getActiveTabIndex();\r\n\r\n        if (activeTabIndex === -1) {\r\n            this.messager.warning(this.notShowDialog);\r\n            return;\r\n        }\r\n\r\n        const columns = this.convertColumnsToSimple(gridInstance.columns);\r\n\r\n        // è·åå½åæ¹æ¡ä¸­å½åè¯­è¨çéç½®æ°æ®\r\n        let currentSettings: SettingModel = null;\r\n        if (selectedSchemeItem && selectedSchemeItem.queryConditionString) {\r\n            currentSettings = JSON.parse(selectedSchemeItem.queryConditionString)[this.localeSer.localeId];\r\n\r\n            if (currentSettings.columnFormat && currentSettings.columnFormat.length) {\r\n                columns[0] = columns[0].map((col) => {\r\n                    const fcol = currentSettings.columnFormat.find(n => n.field === col.field);\r\n                    if (fcol) {\r\n                        col = Object.assign(col, fcol);\r\n                    }\r\n                    return col;\r\n                });\r\n            }\r\n\r\n            if (currentSettings.viewColumns && currentSettings.viewColumns.length) {\r\n                columns[0].forEach(f => {\r\n                    f.visible = currentSettings.viewColumns.indexOf(f.field) > -1;\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n        columns[0] = columns[0].filter(n => n.field && n.field !== gridInstance.ControlPanelFeild);\r\n        const treeData = this.convertColumns2TreeData(cloneDeep(columns), true);\r\n        const viewColumnsTreeData = this.convertColumns2TreeData(cloneDeep(columns), false);\r\n        this.checkViewTreeNodes(viewColumnsTreeData);\r\n\r\n        let modalRef = null;\r\n\r\n        const okText = this.localeSer.getValue('datagrid.settings.ok') || 'ç¡®å®';\r\n        const cancelText = this.localeSer.getValue('datagrid.settings.cancel') || 'åæ¶';\r\n        const resetText =  this.localeSer.getValue('datagrid.settings.reset') || 'éç½®';\r\n\r\n        const defaultOpts = {\r\n            width: 760, height: 560, showHeader: false, title: 'æ§å¶é¢æ¿',\r\n            initialState: {\r\n                columns,\r\n                sortTreeData: treeData,\r\n                viewTreeData: viewColumnsTreeData,\r\n                gridInstance,\r\n                canSetColumnSort: _editColSortInfo,\r\n                canSetColumnVisible: showSetColumnsTab,\r\n                activeTabIndex,\r\n                schemeInfo: currentSettings\r\n            },\r\n            showButtons: false\r\n        };\r\n        const modalOpts = Object.assign(defaultOpts, opts || {});\r\n\r\n        modalRef = this.modalSer.show(DatagridSettingsComponent, modalOpts);\r\n        const instance = modalRef.content as DatagridSettingsComponent;\r\n        instance.enableReset = true;\r\n        instance.modalRef = modalRef;\r\n        instance.canSetColumnSort = _editColSortInfo;\r\n        instance.canSetColumnVisible = !this.isHeaderGroup(gridInstance);\r\n\r\n        instance.submitHandle.subscribe((e) => {\r\n            e.target.disabled = true;\r\n            if (this.saving) {\r\n                return;\r\n            }\r\n            if (!this.saving) {\r\n                if (selectedSchemeItem) {\r\n                    this.setActiveSchemeItem(gridInstance.id, selectedSchemeItem);\r\n                }\r\n                this.updateGridView(modalRef, gridInstance, e.target);\r\n            }\r\n        });\r\n\r\n        instance.cancelHandle.subscribe((e) => {\r\n            modalRef.close();\r\n        });\r\n\r\n        // åæ¢å°ä¾§è¾¹æ ç®æ´æ¨¡å¼\r\n        instance.concise.subscribe((e) => {\r\n            modalRef.close();\r\n            const settings = modalRef.content;\r\n            const { sortInfo, viewColumns, columnFormat, groupField } = settings;\r\n            this.showSimple(gridInstance, { sortInfo, viewColumns, columnFormat, groupField }, selectedSchemeItem);\r\n        });\r\n\r\n        const modalContainer = modalRef.dialog.instance as ModalContainerComponent;\r\n        modalContainer.draggbar.handle = instance.header.nativeElement;\r\n        return modalRef;\r\n    }\r\n\r\n\r\n\r\n    private canSetColumnSort(gridInstance: DatagridComponent) {\r\n        if (gridInstance.multiSort && this.hasEnableSortColumns(gridInstance)) {\r\n            return true;\r\n        } else {\r\n            if (!this.hasEnableSortColumns(gridInstance)) {\r\n                return this.columnsSortableMsg;\r\n            } else if (!gridInstance.multiSort) {\r\n                return this.multiSortMsg;\r\n            }\r\n        }\r\n    }\r\n\r\n    private hasEnableSortColumns(gridInstance: DatagridComponent) {\r\n        const sortColumnsCount = gridInstance.flatColumns.reduce((c, r) => {\r\n            if (r.sortable) {\r\n                return c + 1;\r\n            }\r\n            return c;\r\n        }, 0);\r\n\r\n        return sortColumnsCount > 0;\r\n    }\r\n\r\n    private isHeaderGroup(grid: DatagridComponent) {\r\n        const flag = grid.columns.length > 1;\r\n        if (flag) {\r\n            return this.notSupportHeaderGroupMsg;\r\n        }\r\n        return flag;\r\n    }\r\n\r\n    private getChilds(cols, rowIndex, colStartIndex, colCount, forSort = false) {\r\n        const childCols = [];\r\n        let _count = colStartIndex;\r\n        if (!cols[rowIndex]) {\r\n            return  [];\r\n        }\r\n\r\n        cols[rowIndex].slice().forEach(element => {\r\n            _count = _count + element.colspan;\r\n            if ( _count <= colCount ) {\r\n                childCols.push(element);\r\n            }\r\n        });\r\n\r\n        cols[rowIndex].splice(0, childCols.length);\r\n\r\n        return childCols.map((c, i) => {\r\n            let n: any = {\r\n                data: c,\r\n                selectable: forSort ? !!c.sortable : true\r\n            };\r\n\r\n            if (c.colspan && c.colspan > 1) {\r\n                n = {\r\n                    data: c,\r\n                    selectable: false,\r\n                    expanded: true,\r\n                    children: this.getChilds(cols, rowIndex + 1, 0 , c.colspan)\r\n                };\r\n            }\r\n            return n;\r\n        });\r\n    }\r\n    convertColumns2TreeData(cols: DataColumn[][], forSort = false) {\r\n        const columns = cols.map((c: any) => {\r\n            const aa = c.map((_) => {\r\n                if (_.field.indexOf('farris-datagrid-column_') == -1) {\r\n                    _.colspan = _.colspan || 1;\r\n                    return _;\r\n                }\r\n                return null;\r\n            });\r\n            return aa.filter(n => n);\r\n        });\r\n        if (columns.length === 1) {\r\n            return columns[0].map(c => {\r\n                return {\r\n                    data: c,\r\n                    selectable: forSort ? !!c.sortable : true\r\n                };\r\n            });\r\n        } else {\r\n            return columns[0].map((c, i) => {\r\n                if (c.colspan && c.colspan > 1) {\r\n                    return {\r\n                        data: c,\r\n                        selectable: false,\r\n                        expanded: true,\r\n                        children: this.getChilds(columns, 1, 0, c.colspan, forSort)\r\n                    };\r\n                } else {\r\n                    return {\r\n                        data: c,\r\n                        selectable: forSort ? !!c.sortable : true\r\n                    };\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    private checkViewTreeNodes(treeNodes: TreeNode[]) {\r\n        treeNodes.forEach((tn: TreeNode) => {\r\n            if (!tn.children || !tn.children.length) {\r\n                tn.selectable = true;\r\n            } else {\r\n                tn.selectable = false;\r\n                this.checkViewTreeNodes(tn.children);\r\n            }\r\n        });\r\n    }\r\n\r\n    private _convertColumnsToSimple(gridInstance: any) {\r\n\r\n        let cols = gridInstance.columns;\r\n        // éç½®åé¡ºåºä¸ºæåè®¾è®¡æ¶çé¡ºåº\r\n        const gridOpts = gridInstance.dfs._state.initialOptions;\r\n        if (gridOpts.columnFields) {\r\n            let desginCols = gridOpts.columnFields;\r\n            const newColumns = [];\r\n\r\n            desginCols.forEach(c => {\r\n                if (c.field !== '_datagrid-setting-control_') {\r\n                    const col = gridInstance.columns[0].find((n: any) => n.field === c.field);\r\n                    if (col) {\r\n                        newColumns.push(col);\r\n                    }\r\n                }\r\n            });\r\n\r\n            cols = [newColumns];\r\n        }\r\n\r\n        return cols;\r\n    }\r\n\r\n    convertColumnsToSimple(cols: any) {\r\n        return cols.map( (_cols: DataColumn[]) => {\r\n            return _cols.map( (c: DataColumn) => {\r\n                if (c.field !== '_datagrid-setting-control_') {\r\n                    return {\r\n                        field: c.field,\r\n                        title: c.title,\r\n                        colspan: c.colspan,\r\n                        rowspan: c.rowspan,\r\n                        sortable: c.sortable,\r\n                        order: c.order,\r\n                        halign: c.halign || 'left',\r\n                        align: c.align || 'left',\r\n                        visible: c.visible,\r\n                        allowGrouping: c.allowGrouping,\r\n                        groupFooter: c.groupFooter,\r\n                        footer: c.footer,\r\n                        width: c.width || 100,\r\n                        dataType: c.dataType || 'string'\r\n                    };\r\n                }\r\n            }).filter(n => n);\r\n        });\r\n    }\r\n\r\n    private resetGridView(gridInstance: any) {\r\n        if (!gridInstance) {\r\n            return;\r\n        }\r\n        const dfs = gridInstance.dfs;\r\n        if (dfs) {\r\n            const options = dfs['_state'].initialOptions;\r\n\r\n            if (options.sort) {\r\n                if (options.sort.sortName) {\r\n                    gridInstance.sortName = options.sort.sortName;\r\n                }\r\n                if (options.sort.sortOrder) {\r\n                    gridInstance.sortOrder = options.sort.sortOrder;\r\n                }\r\n            }\r\n\r\n            gridInstance.groupField = options.groupField || '';\r\n            // TODO: è¿éè¦ä¿®æ­£é»è®¤åçæ¾ç¤ºé¡ºåº\r\n            if (options.columnFields && options.columnFields.length) {\r\n\r\n                const newColumns = [];\r\n                options.columnFields.forEach(c => {\r\n                    const col = gridInstance.columns[0].find((n: any) => n.field === c.field);\r\n                    if (col) {\r\n                        col.visible = c.visible;\r\n                        col.halign = c.halign;\r\n                        col.align = c.align;\r\n                        col.width = c.width;\r\n                        col.footer = c.footer;\r\n                        col.groupFooter = c.groupFooter;\r\n                        newColumns.push(col);\r\n                    }\r\n                });\r\n\r\n                gridInstance.columns[0] = newColumns;\r\n            }\r\n\r\n            // gridInstance['checkOptions']();\r\n            gridInstance['columnsChanged']();\r\n        }\r\n    }\r\n\r\n    private updateGridView(modalRef, gridInstance, btn = null) {\r\n        const settings = modalRef.content;\r\n\r\n        if (settings) {\r\n            const { sortInfo, viewColumns, columnFormat, groupField, groupRowState } = settings;\r\n            const _colformats = columnFormat ? this.convertColumnsToSimple([columnFormat])[0] : [];\r\n\r\n            this.updateActiveSchemeItemSettings(gridInstance.id, {sortInfo, viewColumns, columnFormat: _colformats, groupField});\r\n\r\n            this.saving = true;\r\n\r\n            let _groupField = '';\r\n            if (gridInstance.groupRows && groupField && groupField.length) {\r\n                _groupField = groupField.join(',') ;\r\n\r\n                gridInstance.expandGroupRows = groupRowState;\r\n            }\r\n            gridInstance.groupField = _groupField;\r\n            const saveData = { sortInfo, viewColumns, groupField: _groupField, columnFormat: _colformats, expandGroupRows: groupRowState };\r\n            this.setUserConfig(gridInstance.id, saveData).subscribe( () => {\r\n                if (btn) {\r\n                    btn.disabled = false;\r\n                }\r\n                this.saving = false;\r\n                if (viewColumns && viewColumns.length) {\r\n                    gridInstance.columns = gridInstance.columns.map(cols => {\r\n                        this.updateColumnFormat(cols, columnFormat, gridInstance);\r\n                        return this.newVisibleOrderColumns(cols, viewColumns, columnFormat, gridInstance);\r\n                    });\r\n                }\r\n\r\n                gridInstance.columnsChanged(true);\r\n                if (sortInfo && Object.keys(sortInfo).length) {\r\n                    const { sortName, sortOrder } = sortInfo;\r\n                    if (sortName && sortName.length) {\r\n                        gridInstance.sort(sortName.join(','), sortOrder.join(','));\r\n                    } else {\r\n                        gridInstance.clearSort();\r\n                    }\r\n                } else {\r\n                    gridInstance.clearSort();\r\n                }\r\n\r\n                modalRef.close();\r\n            });\r\n        } else {\r\n            modalRef.close();\r\n        }\r\n    }\r\n\r\n\r\n    newVisibleOrderColumns(cols: any, viewColumns: any, columnFormat: any, gridInstance: any) {\r\n        const hideColumns = [];\r\n        cols.forEach((element, index) => {\r\n            if (this.isNewAddColumn(element.field, columnFormat) && element.field !== '_datagrid-setting-control_' && !gridInstance.enableScheme) {\r\n                viewColumns.push(element.field);\r\n            } else {\r\n                element.visible = viewColumns.includes(element.field);\r\n                if (!element.visible) {\r\n                    hideColumns.push(element);\r\n                }\r\n            }\r\n        });\r\n\r\n        // æ¸çä¸å­å¨çå\r\n        let newCols = viewColumns.map( field => {\r\n            return cols.find(c => c.field === field);\r\n        }).filter(n => n);\r\n\r\n        if (hideColumns.length) {\r\n            newCols = newCols.concat(hideColumns);\r\n        }\r\n\r\n        return newCols.filter(c => c && c.field && c.field !== '_datagrid-setting-control_' );\r\n    }\r\n\r\n    /**\r\n     * æ¯å¦ä¸ºæ°å¢å çå­æ®µ\r\n     * æ°å¢çå­æ®µï¼éè¦å¨åè¡¨ä¸­å±ç¤ºåºæ¥ï¼å¹¶ä¿å­å°ä¸ªæ§åè®¾ç½®ä¸­\r\n     */\r\n    private isNewAddColumn(field: any, columns: any) {\r\n        columns = columns || [];\r\n        return !columns.find(c => c.field === field);\r\n    }\r\n\r\n\r\n    updateColumnFormat(cols: any[], columnFormat: any[], gridInstance) {\r\n        if (columnFormat && columnFormat.length) {\r\n            cols.forEach(col => {\r\n                const formatCol = columnFormat.find(f=> f.field === col.field);\r\n                if (formatCol) {\r\n                    col.width = formatCol.width;\r\n                    col.halign = formatCol.halign || 'left';\r\n                    col.align = formatCol.align || 'left';\r\n\r\n                    if (gridInstance.groupRows && (col.allowGrouping || col.allowGrouping === undefined)) {\r\n                        if (!col.groupFooter) {\r\n                            col.groupFooter = formatCol.groupFooter;\r\n                        }\r\n\r\n                        if (col.groupFooter && col.groupFooter.options) {\r\n                            col.groupFooter.options.text = formatCol.groupFooter.options.text || '';\r\n                            col.groupFooter.options.calculationType =\r\n                                formatCol.groupFooter.options.calculationType !== undefined &&\r\n                                formatCol.groupFooter.options.calculationType !== null ?\r\n                                parseInt(formatCol.groupFooter.options.calculationType, 10) : -1;\r\n                        }\r\n                    }\r\n\r\n                    if (gridInstance.showFooter && !gridInstance.footerTemplate) {\r\n                        if (!col.footer) {\r\n                            col.footer = formatCol.footer;\r\n                        }\r\n\r\n                        if (col.footer && col.footer.options) {\r\n                            col.footer.options.text = formatCol.footer.options.text || '';\r\n                            col.footer.options.calculationType =\r\n                                formatCol.footer.options.calculationType !== undefined &&\r\n                                formatCol.footer.options.calculationType !== null ?\r\n                                parseInt(formatCol.footer.options.calculationType, 10) : -1;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    // åå»ºå¯ä¸key, ç±uri + gridId ç»æï¼å¹¶æ··æ·\r\n    private createConfigKey(gridId: string) {\r\n        const grid = this.getGridInstance(gridId);\r\n        if (grid) {\r\n            return grid.dgs.createConfigKey(gridId);\r\n        } else {\r\n            this.writeDebugMsg('DatagridSettingService: Can not find the grid instance.');\r\n        }\r\n\r\n    }\r\n\r\n\r\n    private getCurrentUserSettings(gridId: string) {\r\n        const gridInstance = this.getGridInstance(gridId);\r\n        const config = {sortInfo: {}, viewColumns: [], groupField: '', columnFormat: []};\r\n\r\n        if (gridInstance) {\r\n            const { sortName, sortOrder, columns} = gridInstance;\r\n            if (sortName) {\r\n                const sortInfo = {\r\n                    sortName: sortName.split(','),\r\n                    sortOrder: sortOrder.split(',')\r\n                };\r\n\r\n                config.sortInfo = sortInfo;\r\n            }\r\n\r\n            const viewColumns = columns[0].filter(n => n.visible || n.visible === undefined).map(n => n.field);\r\n            config.viewColumns = viewColumns;\r\n            config.columnFormat = this.convertColumnsToSimple(this._convertColumnsToSimple(gridInstance))[0];\r\n\r\n            if (gridInstance.groupRows) {\r\n                config.groupField = gridInstance.groupField;\r\n            }\r\n        }\r\n        return config;\r\n    }\r\n\r\n\r\n    saveUserConfig(gridId: string) {\r\n        const config = this.getCurrentUserSettings(gridId);\r\n        return this.setUserConfig(gridId, config);\r\n    }\r\n\r\n    setUserConfig(gridId: string, config: any ): Observable<any> {\r\n        const key = this.createConfigKey(gridId);\r\n        const LOCALEID = this.localeSer.localeId;\r\n        const currentConfig = localStorage.getItem(key);\r\n        const _config = (currentConfig ? JSON.parse(currentConfig) : { }) || {};\r\n        if (config) {\r\n            if (_config) {\r\n                _config[LOCALEID] = config;\r\n            }\r\n\r\n            localStorage.setItem(key, JSON.stringify(_config));\r\n        } else {\r\n            localStorage.removeItem(key);\r\n        }\r\n        if (this.httpRestService) {\r\n            const gridIns = this.getGridInstance(gridId);\r\n            if (gridIns && gridIns.enableScheme) {\r\n                const activeScheme = this.getActiveSchemeItem(gridId);\r\n                if (activeScheme) {\r\n                    // return this.updateScheme(gridId, config);\r\n                    if (activeScheme.type === 'private') {\r\n                        return this.schemeService.saveScheme(activeScheme, gridId, true)\r\n                    } else {\r\n                        return this.schemeService.checkAuthority().pipe(\r\n                            switchMap((t: SchemeAuthModel) => {\r\n                                if (t.success) {\r\n                                    const hasOrgAuthority = t.authOrganizationData && t.authOrganizationData.length;\r\n                                    if (activeScheme.type === 'public' || (activeScheme.type === 'org' && hasOrgAuthority)) {\r\n                                        return this.schemeService.saveScheme(activeScheme, gridId, true);\r\n                                    }\r\n                                }\r\n\r\n                                return of(true);\r\n                            }),\r\n                        )\r\n                    }\r\n                } else {\r\n                    return of(true);\r\n                }\r\n            }\r\n            // ä¿å­è³æ°æ®åº\r\n            return this._saveUserConfig(key,  config ? _config :  '');\r\n        }\r\n\r\n        return of(true);\r\n    }\r\n\r\n    getUserConfig(key): Observable<any> {\r\n        if (this.httpRestService) {\r\n            return this._getUserConfig(key);\r\n        } else {\r\n            const config = localStorage.getItem(key);\r\n            if (config) {\r\n                const con = JSON.parse(config);\r\n                if (con[this.localeSer.localeId]) {\r\n                    return of(con[this.localeSer.localeId]);\r\n                } else {\r\n                    if (Object.keys(con).indexOf('viewColumns') > -1) {\r\n                        return of(con);\r\n                    }\r\n                    return null;\r\n                }\r\n            } else {\r\n                return of(null);\r\n            }\r\n        }\r\n    }\r\n\r\n    private getDefaultScheme(schemeList: Array<DatagridSchemeModel>) {\r\n        // 1ãæä¸ªäººé»è®¤çè¿åä¸ªäººé»è®¤æ¹æ¡\r\n        // 2ãæ²¡æä¸ªäººé»è®¤æ¹æ¡çï¼è¿åå¬å±æ¹æ¡ç¬¬1ä¸ª\r\n        // 3ãæ²¡æå¬å±æ¹æ¡ï¼è¿åç»ç»æ¹æ¡ç¬¬1ä¸ª\r\n        // 4ãæ²¡æç»ç»æ¹æ¡ç, è¿åä¸ªäººæ¹æ¡ç¬¬1ä¸ª\r\n        // 5ãæ²¡æä¸ªäººæ¹æ¡çï¼è¿åç³»ç»é¢å¶ï¼å³è¡¨åè®¾è®¡æ¶çæ ¼å¼\r\n\r\n        let defaultScheme = null;\r\n        if (!schemeList || !schemeList.length) {\r\n            return defaultScheme;\r\n        } else {\r\n            defaultScheme = schemeList.find(n => n.isDefault);\r\n            if (!defaultScheme) {\r\n                let publicSchemes = schemeList.filter(n => n.type === 'public');\r\n\r\n                if (!publicSchemes.length) {\r\n                    publicSchemes = schemeList.filter(n => n.type === 'org');\r\n                }\r\n\r\n                if (publicSchemes.length) {\r\n                    defaultScheme = publicSchemes[0];\r\n                } else {\r\n                    defaultScheme = schemeList[0];\r\n                }\r\n            }\r\n        }\r\n\r\n        return defaultScheme;\r\n    }\r\n\r\n\r\n    getSettings(gridId: string) {\r\n        const key = this.createConfigKey(gridId);\r\n        const gridIns = this.getGridInstance(gridId);\r\n\r\n        let schemeList$ = of([]);\r\n        if (gridIns && gridIns.enableScheme) {\r\n            schemeList$ = this.getSchemeList(gridId);\r\n        }\r\n\r\n        return forkJoin(schemeList$, this.getUserConfig(key), this.schemeService.getLanguages()).pipe(\r\n            map(([schemeList, userSetting, supportedLanguages]) => {\r\n                schemeList = schemeList || [];\r\n                this.languages = supportedLanguages;\r\n                if (!schemeList.length) {\r\n                    return userSetting;\r\n                } else {\r\n                    // ç¼å­æ¹æ¡åè¡¨\r\n                    this.setSchemeList(schemeList, gridId);\r\n                    // æ¥æ¾é»è®¤æ¹æ¡\r\n                    const defaultScheme: DatagridSchemeModel = this.getDefaultScheme(schemeList);\r\n                    if (!defaultScheme) {\r\n                        return userSetting;\r\n                    } else {\r\n                        this.setActiveSchemeItem(gridId, defaultScheme);\r\n                        let userSettings = null;\r\n                        if (defaultScheme.queryConditionString) {\r\n                            userSettings = JSON.parse(defaultScheme.queryConditionString);\r\n                        }\r\n                        if (userSettings) {\r\n                            const localeId = this.localeSer.localeId;\r\n                            if (userSettings[localeId]) {\r\n                                localStorage.setItem(key, JSON.stringify(userSettings));\r\n                                return userSettings[localeId];\r\n                            } else {\r\n                                userSettings[localeId] = null;\r\n                                localStorage.setItem(key, JSON.stringify(userSettings));\r\n                                return null;\r\n                            }\r\n                        } else {\r\n                            return null;\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n        );\r\n    }\r\n\r\n\r\n    private _saveUserConfig(key, config) {\r\n        try {\r\n            const userConfigSetting = {\r\n                configkey1: key,\r\n                configkey2: '',\r\n                configkey3: '',\r\n                textvalue: config ? JSON.stringify(config) :  ''\r\n            };\r\n\r\n            return this.httpRestService.saveUserSettings(userConfigSetting);\r\n        } catch (e) {\r\n            this.writeDebugMsg(e, 'error');\r\n        }\r\n    }\r\n\r\n    resetUserConfig(gridInstance, modalRef) {\r\n        const restorDefaultText = this.localeSer.getValue('datagrid.settings.restoreDefaultSettingsText') || 'ç¡®è®¤è¦æ¢å¤é»è®¤è®¾ç½®åï¼';\r\n        this.messager.confirm(restorDefaultText).pipe(\r\n            switchMap( (t: boolean) => {\r\n                if (t) {\r\n                    return this.setUserConfig(gridInstance.id, '');\r\n                }\r\n                return of(t);\r\n            })\r\n        ).subscribe((t: boolean) => {\r\n            if (t) {\r\n                this.resetGridView(gridInstance);\r\n                modalRef.close();\r\n            }\r\n        });\r\n    }\r\n\r\n    private _getUserConfig(key) {\r\n        try {\r\n            return this.httpRestService.getUserSettings(key).pipe(\r\n                map((ucs: any) => {\r\n                    if (ucs && ucs.textValue) {\r\n                        const c = JSON.parse(ucs.textValue);\r\n                        if (c) {\r\n                            if (c[this.localeSer.localeId]) {\r\n                                localStorage.setItem(key, ucs.textValue);\r\n                                return c[this.localeSer.localeId];\r\n                            } else {\r\n                                c[this.localeSer.localeId] = null;\r\n                                localStorage.setItem(key, JSON.stringify(c));\r\n                                // if (Object.keys(c).indexOf('viewColumns') > -1) {\r\n                                //     return c;\r\n                                // }\r\n                                return null;\r\n                            }\r\n\r\n                        }\r\n                        return null;\r\n                    }\r\n                    return null;\r\n                })\r\n            );\r\n        } catch (e) {\r\n            if (this.debugSer) {\r\n                this.debugSer.error(e);\r\n            }\r\n        }\r\n    }\r\n\r\n    private buildSubmitData(gridId: string, settings = null) {\r\n        const LOCALEID = this.localeSer.localeId;\r\n        if (!settings) {\r\n            settings = this.getCurrentUserSettings(gridId);\r\n        }\r\n        const localeKey = this.createConfigKey(gridId);\r\n        const currentConfig = localStorage.getItem(localeKey);\r\n        const _config = (currentConfig ? JSON.parse(currentConfig) : { }) || {};\r\n        if (_config) {\r\n            _config[LOCALEID] = settings;\r\n        }\r\n\r\n        return _config;\r\n    }\r\n\r\n// ----------------------------------------------------------------------------------------------- \\\\\r\n\r\n    private showSchemeListDialog(gridInstance: any, schemeList: any, authInfo: SchemeAuthModel, simpleRef: any) {\r\n        const modalOpts = {\r\n            width: 760, height: 577, showHeader: false, title: 'æ§å¶é¢æ¿',\r\n            initialState: {\r\n                items: schemeList || [],\r\n                removeItem: authInfo.success,\r\n                currentUserId: authInfo.currentUserId\r\n            },\r\n            showButtons: false\r\n        };\r\n\r\n        const schemeListDlg = this.modalSer.show(SchemeListComponent, modalOpts);\r\n        schemeListDlg.dialog.location.nativeElement.style.zIndex = 2031;\r\n\r\n        const instance = schemeListDlg.content as SchemeListComponent;\r\n        instance.closeModal.subscribe( () => {\r\n            schemeListDlg.close();\r\n        });\r\n\r\n        instance.submitModal.subscribe((t: any) => {\r\n            this.schemeService.updateScheme(t, gridInstance.id).subscribe((e: any) => {\r\n                if(e === false) {\r\n                    schemeListDlg.close();\r\n                    return;\r\n                }\r\n                const msg = 'åè®¾ç½®æ¹æ¡ä¿å­æåã';\r\n                if (this.notifyService) {\r\n                    this.notifyService.success(msg);\r\n                } else {\r\n                    this.messager.success(msg);\r\n                }\r\n\r\n                if(t.defaultId) {\r\n                    schemeList.forEach(n => {\r\n                        n.isDefault = false;\r\n                        if (n.id === t.defaultId) {\r\n                            n.isDefault = true;\r\n                            // this.setActiveSchemeItem(gridInstance.id, n);\r\n                        }\r\n                    });\r\n                }\r\n\r\n                let newSchemeList = schemeList;\r\n                if (t.deletedIds && t.deletedIds.length) {\r\n                    newSchemeList = schemeList.filter(n => {\r\n                        return !t.deletedIds.includes(n.id)\r\n                    });\r\n                }\r\n\r\n                this.schemeService.setSchemeList(gridInstance.id, newSchemeList);\r\n\r\n                const currentScheme = this.getActiveSchemeItem(gridInstance.id);\r\n                if (!currentScheme) {\r\n                    this.setActiveSchemeItem(gridInstance.id, null);\r\n                    simpleRef.instance.currentSchemeItem = null;\r\n                    simpleRef.instance.reset2Default();\r\n                }\r\n\r\n                schemeListDlg.close();\r\n            });\r\n        });\r\n\r\n        const modalContainer = schemeListDlg.dialog.instance as ModalContainerComponent;\r\n        modalContainer.draggbar.handle = instance.header.nativeElement;\r\n    }\r\n\r\n    // æ°å¢æå¦å­æ¹æ¡\r\n    private showNewSchemeDialog(gridInstance, e: { type: 'new' | 'saveas'},  simpleRef: any) {\r\n        const modalOpts = {\r\n            width: 480, height: 269, showHeader: false, title: 'æ§å¶é¢æ¿',\r\n            initialState: {\r\n                languages: this.languages\r\n            },\r\n            showButtons: false,\r\n            resizable: false\r\n        };\r\n\r\n        const newSchemeDlg = this.modalSer.show(NewSchemeComponent, modalOpts);\r\n        newSchemeDlg.dialog.location.nativeElement.style.zIndex = 2031;\r\n        const instance = newSchemeDlg.content as NewSchemeComponent;\r\n        instance.closeModal.subscribe( () => {\r\n            newSchemeDlg.close();\r\n        });\r\n\r\n        instance.submitModal.pipe(\r\n            switchMap((t: any) => {\r\n                return this.createNewScheme(gridInstance.id, t, e.type === 'new', simpleRef.instance.collectSettings());\r\n            })\r\n        ).subscribe((t: any) => {\r\n            if (t.flag === false) {\r\n                const msg = t.msg;\r\n                let _msg = msg;\r\n                if (msg) {\r\n                    if (msg.indexOf('|') > -1) {\r\n                        _msg = msg.split('|').map((langcode) => {\r\n                            return this.localeSer.getValue('datagrid-settings.'+ langcode)\r\n                        }).join('');\r\n                    } else {\r\n                        _msg = this.localeSer.getValue('datagrid-settings.'+ msg );\r\n                    }\r\n                    if (this.notifyService) {\r\n                        this.notifyService.info(_msg);\r\n                    } else {\r\n                        this.messager.info(_msg);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n            // æ´æ°æ¹æ¡åè¡¨\r\n            const schemeList = this.schemeService.getStateValue(gridInstance.id, 'list') || [];\r\n            if (t.isDefault) {\r\n                schemeList.forEach(n => {\r\n                    n.isDefault = false;\r\n                });\r\n            }\r\n            schemeList.push(t);\r\n            // this.setActiveSchemeItem(gridInstance.id, t);\r\n            this.schemeService.setSchemeList(gridInstance.id, schemeList);\r\n\r\n            // æ´æ¢ä¸ºæ°çæ¹æ¡\r\n            simpleRef.instance.onSchemeItemClick(null, t);\r\n            newSchemeDlg.close();\r\n        });\r\n\r\n        instance.checkAuthority.pipe(\r\n            switchMap((t: any) => {\r\n                return this.schemeService.checkAuthority().pipe(\r\n                    map((auth: SchemeAuthModel) => {\r\n                        return {\r\n                            type: t,\r\n                            ...auth\r\n                        }\r\n                    })\r\n                )\r\n            })\r\n        ).subscribe((t: any) => {\r\n            let hasAuthority = { public: true, org: true };\r\n            // æ¨æ²¡æå°æ¹æ¡çä½¿ç¨èå´è®¾ç½®ä¸ºå¬å±çæéã\r\n            let _msg = 'noAuth.public';\r\n            if (t.type.value === 'org') {\r\n                // æ¨æ²¡æå°æ¹æ¡çä½¿ç¨èå´è®¾ç½®ä¸ºç»ç»çæéã\r\n                _msg = 'noAuth.org';\r\n            }\r\n\r\n            const msg = this.localeSer.getValue('datagrid-settings.'+ _msg );\r\n            if (t.success) {\r\n                const hasPublicAuthority = t.authOperationData && t.authOperationData.length;\r\n                hasAuthority.public = hasPublicAuthority;\r\n                const hasOrgAuthority = t.authOrganizationData && t.authOrganizationData.length;\r\n                hasAuthority.org = hasOrgAuthority;\r\n                if (t.type.value === 'public') {\r\n                    instance.schemeInfo.type = t.type.value;\r\n                } else if (t.type.value === 'org') {\r\n                    if (!hasOrgAuthority) {\r\n                        this.notifyService.warning(msg);\r\n                    }else {\r\n                        instance.schemeInfo.type = t.type.value;\r\n                        instance.schemeInfo.orgids = t.authOrganizationData.join(',')\r\n                        instance.dataPermissionIds = t.authOrganizationData;\r\n                    }\r\n                }\r\n            } else {\r\n                this.notifyService.warning(msg);\r\n                hasAuthority = { public: false, org: false };;\r\n            }\r\n            instance.refresh(hasAuthority);\r\n        })\r\n\r\n        const modalContainer = newSchemeDlg.dialog.instance as ModalContainerComponent;\r\n        modalContainer.draggbar.handle = instance.header.nativeElement;\r\n    }\r\n\r\n    getSchemeList(gridId: string) {\r\n        return this.schemeService.getSchemeList(gridId);\r\n    }\r\n\r\n    /** æ°å¢æ¹æ¡\r\n     *  isNewSchemeï¼æ¯å¦æ°å æ¹æ¡ï¼å¦åä¸ºå¦å­ä¸º\r\n     *  currentSettingsï¼ å½åéç½®ä¿¡æ¯\r\n     *  data: æ°å»ºæ¹æ¡çªå£ä¼ éæ°æ®\r\n     */\r\n    createNewScheme(gridId: string, data: any, isNewScheme = true, currentSettings: any) {\r\n        if(!data.name) {\r\n            // msg è¯·è¾å¥æ¹æ¡åç§°\r\n            return of({flag: false, msg: 'required.schemeName'});\r\n        } else {\r\n            const hasName = this.schemeService.hasSchemeName(gridId, data.name);\r\n\r\n            if (typeof hasName === 'boolean' && hasName) {\r\n                // msg 'æ¹æ¡åç§°å·²å­å¨ï¼è¯·ä¿®æ¹ã'\r\n                return of({flag: false, msg: 'has.exist'});\r\n            } else if (Array.isArray(hasName) && hasName.length) {\r\n                \r\n                const getMessageCode = (langCode) => {\r\n                    if (langCode === 'zh-CHS') {\r\n                        return 'has.chs'; // ç®ä½ä¸­æåç§°å·²å­å¨ã\r\n                    } else if(langCode === 'zh-CHT') {\r\n                        return 'has.cht'; // ç¹é«ä¸­æåç¨±å·²å­å¨ã\r\n                    } else {\r\n                        return 'has.en'; // è±æåç§°å·²å­å¨\r\n                    }\r\n                }\r\n\r\n                if (hasName.includes(this.localeSer.localeId)) {\r\n                    const msg = getMessageCode(this.localeSer.localeId);\r\n                    return of({flag: false, msg});\r\n                } else {\r\n                    const msgs = hasName.map(n => {\r\n                        return getMessageCode(n);\r\n                    });\r\n\r\n                    return of({flag: false, msg: msgs.join('|')});\r\n                }\r\n            }\r\n        }\r\n\r\n        const requiredName = [];\r\n\r\n\r\n        if (!data.name[this.localeSer.localeId]) {\r\n            requiredName.push(this.localeSer.localeId);\r\n        }\r\n\r\n        // this.languages.forEach(n => {\r\n        //     if (data.name[n.code] === '' || data.name[n.code] === undefined) {\r\n        //         requiredName.push(n.code);\r\n        //     }\r\n        // });\r\n\r\n        if (requiredName.length) {\r\n            const msgs = requiredName.map(n => {\r\n                if (n === 'zh-CHS') {\r\n                    return 'required.chs'; //'è¯·è¾å¥ç®ä½ä¸­æåç§°ã';\r\n                } else if(n === 'zh-CHT') {\r\n                    return 'required.cht'; //'è¯·è¾å¥ç¹ä½ä¸­æåç§°ã';\r\n                } else {\r\n                    return 'required.en'; // 'è¯·è¾å¥è±æåç§°ã';\r\n                }\r\n            });\r\n            return of({flag: false, msg: msgs.join('|')});\r\n        }\r\n\r\n\r\n        if (data.type && data.type === 'org' && (!data.orgids || !data.orgids.length)) {\r\n            // msg 'è¯·éæ©ç»ç»'\r\n            return of({flag: false, msg: 'required.org'});\r\n        }\r\n        let _config = null;\r\n\r\n        if (!isNewScheme) {\r\n            const LOCALEID = this.localeSer.localeId;\r\n\r\n            if (currentSettings && currentSettings.columnFormat) {\r\n                currentSettings.columnFormat = this.convertColumnsToSimple([currentSettings.columnFormat]);\r\n            }\r\n\r\n            _config ={ [LOCALEID]: currentSettings };\r\n        }\r\n\r\n        const newId = this.idService.guid();\r\n        let isDefault = data.isDefault;\r\n        if (isDefault) {\r\n            if (data.type !== 'private') {\r\n                isDefault = false;\r\n            }\r\n        }\r\n\r\n        if (data.name && typeof data.name === 'object') {\r\n            data.name = JSON.stringify(data.name);\r\n        }\r\n\r\n        const scheme: DatagridSchemeModel = {\r\n            id: newId,\r\n            belongId: '',\r\n            code: '',\r\n            name: data.name,\r\n            type: data.type,\r\n            isDefault: isDefault,\r\n            isSystem: false,\r\n            extendId: 'datagrid-settings-scheme',\r\n            extendInfo: this.buildOrgAndSchemeRelations(newId, data.orgids),\r\n            queryConditionString: _config? JSON.stringify(_config): '',\r\n        };\r\n\r\n        return this.schemeService.saveScheme(scheme, gridId).pipe(\r\n            map(() => {\r\n                return scheme;\r\n            })\r\n        );\r\n    }\r\n\r\n    setSchemeList(schemeList: DatagridSchemeModel[], gridId: string) {\r\n        this.schemeService.update({list: schemeList}, gridId);\r\n    }\r\n\r\n    private buildOrgAndSchemeRelations(schemeId: string, orgIds: any) {\r\n        if (!orgIds || !orgIds.length) {\r\n            return  [];\r\n        }\r\n        \r\n        if (typeof orgIds === 'string') {\r\n            orgIds = orgIds.split(',');\r\n        }\r\n\r\n        return orgIds.map(n => {\r\n            return {\r\n                id: this.idService.guid(),\r\n                orgId: n,\r\n                relatedId: schemeId\r\n            }\r\n        });\r\n    }\r\n\r\n    private getCurrentSchemeSettings(gridId: string): SettingModel {\r\n        const activeScheme = this.getActiveSchemeItem(gridId) as DatagridSchemeModel;\r\n        if (activeScheme && activeScheme.queryConditionString) {\r\n            return JSON.parse(activeScheme.queryConditionString);\r\n        }\r\n        return null;\r\n    }\r\n}\r\n","import { OnInit, Component, Input, ViewChild, Injector, EventEmitter, Output, ChangeDetectorRef } from '@angular/core';\r\nimport { MultiSelectComponent } from '@farris/ui-multi-select';\r\n\r\n@Component({\r\n    selector: 'sort-setting',\r\n    templateUrl: './datagrid-sort-setting.component.html'\r\n})\r\nexport class DatagridSortSettingComponent implements OnInit {\r\n\r\n    @Input() idField = 'field';\r\n    @Input() valueField = 'field';\r\n    @Input() textField = 'title';\r\n    @Input() selectedIds = [];\r\n\r\n    @Input() treeData = [];\r\n    @ViewChild('ms') ms: MultiSelectComponent;\r\n\r\n    @Output() sortInfoChange = new EventEmitter();\r\n\r\n    constructor(private injector: Injector, private cd: ChangeDetectorRef) {}\r\n\r\n\r\n    ngOnInit() {}\r\n\r\n    setFieldSortOrder($event: MouseEvent, data: any, order: string) {\r\n        $event.stopPropagation();\r\n        data.sortable = true;\r\n        data.order = order;\r\n\r\n        if (!order) {\r\n            this.ms.moveToLeft(data);\r\n        }\r\n\r\n        this.cd.detectChanges();\r\n        this.onSelectionsChange(null);\r\n        return false;\r\n    }\r\n\r\n    getSortInfo() {\r\n        if (this.ms.selections) {\r\n            const names = [];\r\n            const orders = [];\r\n            this.ms.selections.forEach(col => {\r\n                col.order = col.order || 'asc';\r\n                names.push(col.field);\r\n                orders.push(col.order);\r\n            });\r\n\r\n            return { sortName: names, sortOrder: orders };\r\n        }\r\n        return '';\r\n    }\r\n\r\n    onSelectionsChange($event) {\r\n        const si = this.getSortInfo();\r\n        this.sortInfoChange.emit(si);\r\n    }\r\n\r\n    onBeforeMove($event) {\r\n        const items: any = $event.items as any;\r\n        if ($event.target.indexOf('rightAll') > -1) {\r\n            for (const id in items) {\r\n                if ($event.items[id]) {\r\n                    $event.items[id].order = 'asc';\r\n                }\r\n            }\r\n        } else {\r\n            if ($event.target === 'right') {\r\n                for (const id in items) {\r\n                    if ($event.items[id]) {\r\n                        $event.items[id].order = 'asc';\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { OnInit, Component, Input, ViewChild, Injector, EventEmitter,\r\n    Output, ChangeDetectorRef, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { MultiSelectComponent } from '@farris/ui-multi-select';\r\n@Component({\r\n    selector: 'view-columns',\r\n    templateUrl: './datagrid-view-columns.component.html',\r\n})\r\nexport class DatagridViewColumnsComponent implements OnInit, OnChanges {\r\n    @Input() idField = 'field';\r\n    @Input() valueField = 'field';\r\n    @Input() textField = 'title';\r\n\r\n\r\n    private _selectedIds = [];\r\n    get selectedIds() {\r\n        return this._selectedIds;\r\n    }\r\n    @Input() set selectedIds(vals) {\r\n        this._selectedIds = vals;\r\n        this.selectedIdsChange.emit(vals);\r\n    }\r\n\r\n    @Input() treeData = [];\r\n    @ViewChild('ms') ms: MultiSelectComponent;\r\n\r\n    @Output() selectedIdsChange = new EventEmitter();\r\n\r\n    constructor(private injector: Injector, private cd: ChangeDetectorRef) {}\r\n\r\n\r\n    ngOnInit() {}\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n\r\n    }\r\n\r\n    onBeforeMove($event) {\r\n\r\n    }\r\n\r\n    hiddenColumn($event: MouseEvent, column: any) {\r\n        $event.stopPropagation();\r\n        this.ms.moveToLeft(column);\r\n    }\r\n}\r\n","import { LocaleService } from '@farris/ui-locale';\r\nimport { Component, Input, OnInit, Injector, ViewChild, Output, EventEmitter, ChangeDetectorRef, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { DatagridSettingsComponent } from '../datagrid-settings.component';\r\n\r\n@Component({\r\n    selector: 'column-format-setting',\r\n    templateUrl: './column-format-setting.component.html',\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ColumnFormatSettingComponent implements OnInit, OnChanges {\r\n    @Input() columns = [];\r\n    @Input() fields = [];\r\n\r\n    @ViewChild('colformatform') colForm: NgForm;\r\n\r\n    @Output() formatChange = new EventEmitter();\r\n    @Output() fieldsChange = new EventEmitter();\r\n\r\n    allCols = [];\r\n\r\n    /** format Data */\r\n    formatData = [];\r\n    columnType = 'all';\r\n    activeField = null;\r\n    showGridFooter = false;\r\n\r\n    searchItems = [];\r\n    alignItems = [];\r\n    summaryItems = [];\r\n    summaryItems2 = [];\r\n    localeSer: LocaleService;\r\n    isEn = false;\r\n\r\n    switchValue = false;\r\n\r\n    _searchResult = 0;\r\n\r\n    constructor(private injector: Injector, public gridSettingComponentRef: DatagridSettingsComponent, private cd: ChangeDetectorRef) {\r\n        this.showGridFooter = this.gridSettingComponentRef.gridInstance.showFooter &&\r\n                                !this.gridSettingComponentRef.gridInstance.footerTemplate;\r\n        this.localeSer = this.injector.get(LocaleService, null);\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.columns && !changes.columns.isFirstChange()) {\r\n            this.setFormatData();\r\n            this.allCols = this.columns[0];\r\n            this.activeField = this.columns[0][0];\r\n            this.checkColumnOptions();\r\n        }\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n        this.isEn = this.localeSer.localeId === 'en';\r\n\r\n        this.initData();\r\n\r\n        if (this.colForm) {\r\n            this.colForm.valueChanges.subscribe(v => {\r\n                if (!this.colForm.pristine) {\r\n                    this.formatChange.emit(this.formatData);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private setFormatData() {\r\n        // this.formatData = this.fields.map(n => {\r\n        //     return this.columns[0].find(col => col.field === n);\r\n        // });\r\n        this.formatData =  this.columns[0];\r\n    }\r\n\r\n    private initData() {\r\n\r\n        this.alignItems = this.gridSettingComponentRef.alignItems;\r\n        this.searchItems = this.gridSettingComponentRef.searchItems;\r\n        this.summaryItems = this.gridSettingComponentRef.summaryItems;\r\n        this.summaryItems2 = this.gridSettingComponentRef.summaryItems2;\r\n\r\n\r\n        this.setFormatData();\r\n        this.allCols = this.columns[0];\r\n        this.activeField = this.columns[0][0];\r\n        this.checkColumnOptions();\r\n    }\r\n\r\n    private checkColumnOptions() {\r\n        if (this.activeField) {\r\n            if (this.activeField.allowGrouping === undefined) {\r\n                this.activeField.allowGrouping = true;\r\n            }\r\n\r\n            if (this.activeField.groupFooter === undefined) {\r\n                this.activeField.groupFooter = { options: {calculationType: -1} };\r\n            } else {\r\n                this.activeField.groupFooter.options = this.activeField.groupFooter.options || {calculationType: -1};\r\n                if (this.activeField.groupFooter.options.calculationType === undefined) {\r\n                    this.activeField.groupFooter.options.calculationType = -1;\r\n                }\r\n            }\r\n\r\n            if (this.activeField.footer === undefined) {\r\n                this.activeField.footer =  { options: {calculationType: -1} };\r\n            } else {\r\n                this.activeField.footer.options = this.activeField.footer.options || {calculationType: -1};\r\n                if (this.activeField.footer.options.calculationType === undefined) {\r\n                    this.activeField.footer.options.calculationType = -1;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // æ ¹æ®åçç±»åè¿è¡ç­éè¿æ»¤ï¼\r\n    // all ææå\r\n    // visible å¯è§å\r\n    // hidden éèå\r\n    // group åç»å\r\n    filterColumns( searchWords = '') {\r\n        let cols = [];\r\n     \r\n        if (this.switchValue) {\r\n            cols = this.columns[0].filter(n => this.fields.indexOf(n.field) > -1);\r\n        } else {\r\n            cols = this.columns[0];\r\n        }\r\n\r\n\r\n        if (searchWords) {\r\n            cols = cols.filter(c => c.title.toLowerCase().indexOf(searchWords) > -1);\r\n        }\r\n\r\n        this.allCols = cols;\r\n        this._searchResult = this.allCols.filter(n => n.visible).length;\r\n    }\r\n\r\n    onFieldClick(col, $event) {\r\n        this.activeField = col;\r\n        this.checkColumnOptions();\r\n    }\r\n\r\n\r\n    private onFieldsChanged() {\r\n        this.setFormatData();\r\n        this.fieldsChange.emit(this.fields);\r\n    }\r\n\r\n    onDblClick($event, col) {\r\n        this.onCheckboxClick($event, col);\r\n    }\r\n\r\n    onCheckboxClick($event, col) {\r\n        $event.stopPropagation();\r\n        const index = this.fields.indexOf(col.field);\r\n        if (index === -1) {\r\n            this.fields.push(col.field);\r\n        } else {\r\n            this.fields.splice(index, 1);\r\n        }\r\n\r\n        this.columns[0].forEach(f => {\r\n            f.visible = this.fields.indexOf(f.field) > -1;\r\n        });\r\n\r\n        this.fields = this.columns[0].filter(n => n.visible).map(n => n.field);\r\n\r\n        this.onFieldsChanged();\r\n    }\r\n\r\n    searchColumn($event) {\r\n        const txt = $event.target.value;\r\n        this.filterColumns(txt);\r\n    }\r\n\r\n    onFieldDrop(fieldInfo, txt, ulElRef: any) {\r\n        const { removedIndex, addedIndex } = fieldInfo;\r\n\r\n        const moveItem = this.allCols[removedIndex];\r\n        const targetItem = this.allCols[addedIndex];\r\n\r\n        const moveItemIndex = this.columns[0].findIndex(n => n.field === moveItem.field);\r\n        const targetItemIndex = this.columns[0].findIndex(n => n.field === targetItem.field);\r\n\r\n        const removedItem = this.columns[0].splice(moveItemIndex, 1);\r\n        this.columns[0].splice(targetItemIndex, 0, ...removedItem);\r\n\r\n        this.fields = this.columns[0].filter(n => n.visible).map(n => n.field);\r\n        this.onFieldsChanged();\r\n\r\n        this.filterColumns(txt);\r\n\r\n        // if (ulElRef) {\r\n        //     ulElRef.querySelectorAll('li .field-drag-handle').forEach(el => {\r\n        //         el.style.cursor = 'grab';\r\n        //     });\r\n        // }\r\n    }\r\n\r\n    /**\r\n     * 0: 1ä¸ªä¹æ²¡æéä¸­ï¼ 1: å¨é¨éä¸­ï¼ 2: æéä¸­çä¹ææ²¡éä¸­ç\r\n     */\r\n    private getCheckAllState(search = false) {\r\n        if (this.fields.length === 0) {\r\n            return 0;\r\n        } else {\r\n            if (search) {\r\n                if (this._searchResult === this.allCols.length) {\r\n                    return 1;\r\n                }\r\n            } else {\r\n                if (this.fields.length === this.columns[0].length) {\r\n                    return 1;\r\n                }\r\n            }\r\n            return 2;\r\n        }\r\n    }\r\n\r\n    onCheckAllClick($event, txt) {\r\n        const state = this.getCheckAllState(txt);\r\n        const isVisible = state === 0 || state === 2;\r\n        if (txt == '') {\r\n            if (isVisible) {\r\n                // æ§è¡å¨é\r\n                this.columns[0].forEach(n => n.visible = true);\r\n                this.fields = this.columns[0].map(n => n.field);\r\n            } else {\r\n                // åæ¶å¨é\r\n                this.columns[0].forEach(n => n.visible = false);\r\n                this.fields = [];\r\n            }\r\n        } else {\r\n            this.allCols.forEach(c => {\r\n                const col = this.columns[0].find(n => c.field === n.field);\r\n                col.visible = isVisible;\r\n                c.visible = isVisible;\r\n            });\r\n            this.fields = this.columns[0].filter(n => n.visible).map(n => n.field);\r\n        }\r\n\r\n        this.onFieldsChanged();\r\n        this.filterColumns(txt);\r\n    }\r\n\r\n     // ä»æ¾ç¤ºå¯è§å\r\n     onlySeeVisibleColumns($event, txt) {\r\n        this.switchValue = $event;\r\n        this.filterColumns(txt);\r\n    }\r\n\r\n    clearSearch($event, searchInput) {\r\n        if (searchInput && searchInput.value) {\r\n            this.filterColumns('');\r\n            searchInput.value = '';\r\n        }\r\n    }\r\n}\r\n","import { Component, OnInit, Input, Injector, ChangeDetectorRef, ElementRef, ViewChild, EventEmitter, Output, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { DatagridSettingsComponent } from '../datagrid-settings.component';\r\n\r\n@Component({\r\n    selector: 'column-group-setting',\r\n    templateUrl: './column-group.component.html',\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ColumnGroupSettingComponent implements OnInit, OnChanges {\r\n    @Input() columns;\r\n    @Input() fields = [];\r\n    @Input() formatColumns = [];\r\n\r\n    @Input() groupFields = [];\r\n    @Input() groupRowState = true;\r\n\r\n    @Output() groupFieldsChange = new EventEmitter();\r\n    @Output() formatColumnsChange = new EventEmitter();\r\n    @Output() groupRowStateChange = new EventEmitter();\r\n\r\n    @ViewChild('groupingSetting') groupingSettingEl: ElementRef;\r\n    @ViewChild('selectcolumnspanel') selectcolumnspanel: ElementRef;\r\n    @ViewChild('groupSumform') colForm: NgForm;\r\n\r\n    groupColumns = [];\r\n    allowGroupColumns = [];\r\n    activeCalculationCol = null;\r\n\r\n\r\n    showSelectColumnsPanel = false;\r\n    summaryItems = [];\r\n    summaryItems2 = [];\r\n    constructor(private injector: Injector, public gridSettingComponentRef: DatagridSettingsComponent, private cd: ChangeDetectorRef) { }\r\n\r\n    ngOnInit(): void {\r\n\r\n        this.summaryItems = this.gridSettingComponentRef.summaryItems;\r\n        this.summaryItems2 = this.gridSettingComponentRef.summaryItems2;\r\n\r\n        this.setGroupColumns();\r\n        this.registerEventHandle();\r\n        this.initCalculationColumns();\r\n\r\n        if (this.colForm) {\r\n            this.colForm.valueChanges.subscribe(v => {\r\n                if (!this.colForm.pristine) {\r\n                    this.formatColumnsChange.emit(this.formatColumns);\r\n                }\r\n            });\r\n        }\r\n        \r\n        this.formatColumns.forEach(n => {\r\n            this.checkColumnOptions(n);\r\n        });\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.formatColumns && !changes.formatColumns.isFirstChange()) {\r\n            this.formatColumns.forEach(n => {\r\n                this.checkColumnOptions(n);\r\n            });\r\n            this.setGroupColumns();\r\n            this.initCalculationColumns();\r\n        }\r\n    }\r\n\r\n    private initCalculationColumns() {\r\n        if (this.formatColumns) {\r\n            this.activeCalculationCol = this.formatColumns[0];\r\n        }\r\n    }\r\n\r\n    private registerEventHandle() {\r\n        this.groupingSettingEl.nativeElement.addEventListener('click', (e) => {\r\n            if (e.target  !== this.selectcolumnspanel.nativeElement) {\r\n                this.showSelectColumnsPanel = false;\r\n            }\r\n        }, false);\r\n    }\r\n\r\n    private setGroupColumns() {\r\n        if (this.groupFields && this.groupFields.length) {\r\n            this.groupColumns = this.groupFields.map( f => {\r\n                return this.columns[0].find(col => col.field === f);\r\n            }).filter(n => n);\r\n        } else {\r\n            this.groupColumns = [];\r\n        }\r\n        this.onGroupFieldsChange();\r\n    }\r\n\r\n    private getAllowGroupingColumns() {\r\n        return this.columns[0].filter(n => {\r\n            if (n.field.indexOf('farris-datagrid-column_') > -1) {\r\n                return false;\r\n            }\r\n            return  n.allowGrouping || n.allowGrouping === undefined \r\n        });\r\n    }\r\n\r\n    private onGroupFieldsChange() {\r\n        this.groupFieldsChange.emit(this.groupFields);\r\n    }\r\n\r\n    private checkColumnOptions(col) {\r\n        if (col) {\r\n\r\n            if (col.groupFooter === undefined) {\r\n                col.groupFooter = { options: {calculationType: -1} };\r\n            } else {\r\n                col.groupFooter.options = col.groupFooter.options || {calculationType: -1};\r\n                if (col.groupFooter.options.calculationType === undefined) {\r\n                    col.groupFooter.options.calculationType = -1;\r\n                }\r\n            }\r\n\r\n            // if (this.activeField.footer === undefined) {\r\n            //     this.activeField.footer =  { options: {calculationType: -1} };\r\n            // } else {\r\n            //     this.activeField.footer.options = this.activeField.footer.options || {calculationType: -1};\r\n            //     if (this.activeField.footer.options.calculationType === undefined) {\r\n            //         this.activeField.footer.options.calculationType = -1;\r\n            //     }\r\n            // }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * æ¾ç¤ºæéèå­æ®µéåé¢æ¿\r\n     */\r\n    toggleGroupingColumnPanel($event) {\r\n        $event.stopPropagation();\r\n        this.showSelectColumnsPanel = !this.showSelectColumnsPanel;\r\n        this.allowGroupColumns = this.getAllowGroupingColumns();\r\n    }\r\n\r\n    /** æ·»å åç»å­æ®µ */\r\n    addGroupColumn($event, col) {\r\n        $event.stopPropagation();\r\n        if (this.groupFields.indexOf(col.field) === -1) {\r\n            this.groupColumns = [...this.groupColumns, col];\r\n            this.groupFields = this.groupColumns.map(n => n.field);\r\n            this.onGroupFieldsChange();\r\n            this.showSelectColumnsPanel = false;\r\n        }\r\n    }\r\n\r\n    /** ç§»é¤åç»å­æ®µ */\r\n    onRemoveGroupingField($event, col) {\r\n        $event.stopPropagation();\r\n        this.groupFields = this.groupFields.filter(n => n !== col.field);\r\n        this.setGroupColumns();\r\n    }\r\n\r\n    /** æå¨åç»å­æ®µè¿è¡æåº */\r\n    onGroupingFieldDropped($event) {\r\n        const { removedIndex, addedIndex } = $event;\r\n\r\n        const removedItem = this.groupFields.splice(removedIndex, 1);\r\n        this.groupFields.splice(addedIndex, 0, ...removedItem);\r\n        this.setGroupColumns();\r\n    }\r\n\r\n    onFieldClick($event, col) {\r\n        this.activeCalculationCol = col;\r\n    }\r\n}\r\n","\r\nimport { Directive, NgZone, Injector, Renderer2, ElementRef, AfterViewInit, Input,\r\n        OnChanges, SimpleChanges, Output, EventEmitter, OnDestroy } from '@angular/core';\r\nimport { dropHandlers, smoothDnD as SmoothDndForVisible, DropResult, ContainerOptions, constants } from '@farris/smooth-dnd';\r\n\r\n\r\nconst { wrapperClass, animationClass } = constants;\r\nSmoothDndForVisible.dropHandler = dropHandlers.reactDropHandler().handler;\r\nSmoothDndForVisible.wrapChild = false;\r\n\r\nexport interface DragStartEndInfo {\r\n    isSource: boolean;\r\n    payload: any;\r\n    willAcceptDrop: boolean;\r\n}\r\n\r\n@Directive({\r\n    selector: '[column-visible-drag]',\r\n})\r\nexport class ColumnVisibleDragDirective implements AfterViewInit, OnDestroy {\r\n    private container: any;\r\n    @Output() drop = new EventEmitter();\r\n    @Input() options: ContainerOptions = {\r\n        behaviour: 'move',\r\n        dragHandleSelector: '.field-drag-handle',\r\n        dropPlaceholder: {\r\n            className: 'drop-group-field',\r\n        },\r\n        getGhostParent: () => {\r\n            return document.body;\r\n        },\r\n        getChildPayload: this.getChildPayload.bind(this),\r\n        shouldAcceptDrop: (sourceContainerOptions, payload) => {\r\n            return true;\r\n        },\r\n        onDropReady: (dropResult: DropResult) => {\r\n            this.ngzone.run(() => {\r\n                this.onDropReady(dropResult);\r\n            });\r\n        },\r\n        onDrop: (dropResult: DropResult) => {\r\n            this.ngzone.run(() => {\r\n                this.drop.emit(dropResult);\r\n            });\r\n        },\r\n        onDragEnter: () => {\r\n            this.ngzone.run(() => {\r\n                this.onDragEnter();\r\n            });\r\n        },\r\n        onDragStart: (info: DragStartEndInfo) => {\r\n            this.ngzone.run(() => {\r\n                this.onDragStart(info);\r\n            });\r\n        },\r\n        onDragEnd: (info: DragStartEndInfo) => {\r\n            this.ngzone.run(() => {\r\n                this.onDragEnd(info);\r\n            });\r\n        }\r\n    };\r\n\r\n    constructor(private ngzone: NgZone, private injector: Injector, private render: Renderer2, private el: ElementRef) { }\r\n    ngAfterViewInit() {\r\n        this.initDnD();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.disposeDnd();\r\n    }\r\n\r\n    private disposeDnd() {\r\n        if (this.container) {\r\n            this.container.dispose();\r\n            this.container = null;\r\n        }\r\n    }\r\n\r\n    private initDnD() {\r\n        this.disposeDnd();\r\n        this.container = SmoothDndForVisible(\r\n            this.el.nativeElement,\r\n            this.options\r\n        );\r\n    }\r\n\r\n    private getChildPayload(index) {\r\n        return index;\r\n    }\r\n\r\n    private onDropReady(dropResult) {\r\n    }\r\n\r\n    private onDragStart(info) {\r\n\r\n    }\r\n\r\n    private onDragEnd(info) {\r\n\r\n    }\r\n\r\n\r\n    private onDragEnter() {\r\n\r\n    }\r\n\r\n}\r\n","import { Directive, NgZone, Injector, Renderer2, ElementRef, AfterViewInit, Input,  Output, EventEmitter, OnDestroy } from '@angular/core';\r\nimport { dropHandlers, smoothDnD as SmoothDndForGroupingField, DropResult, ContainerOptions, constants } from '@farris/smooth-dnd';\r\n\r\nSmoothDndForGroupingField.dropHandler = dropHandlers.reactDropHandler().handler;\r\nSmoothDndForGroupingField.wrapChild = false;\r\n\r\n@Directive({\r\n    selector: '[column-group-drag]',\r\n})\r\nexport class ColumnGroupDragDirective implements AfterViewInit, OnDestroy {\r\n    private container: any;\r\n    @Output() drop = new EventEmitter();\r\n    @Input() options: ContainerOptions = {\r\n        orientation: 'horizontal',\r\n        behaviour: 'move',\r\n        dropPlaceholder: {\r\n            className: 'drop-group-field',\r\n        },\r\n        getGhostParent: () => {\r\n            return document.body;\r\n        },\r\n        getChildPayload: this.getChildPayload.bind(this),\r\n        shouldAcceptDrop: (sourceContainerOptions, payload) => {\r\n            return true;\r\n        },\r\n        onDropReady: (dropResult: DropResult) => {\r\n            this.ngzone.run(() => {\r\n                this.onDropReady(dropResult);\r\n            });\r\n        },\r\n        onDrop: (dropResult: DropResult) => {\r\n            this.ngzone.run(() => {\r\n                this.drop.emit(dropResult);\r\n            });\r\n        },\r\n        onDragEnter: () => {\r\n            this.ngzone.run(() => {\r\n                this.onDragEnter();\r\n            });\r\n        },\r\n        onDragStart: (info) => {\r\n            this.ngzone.run(() => {\r\n                this.onDragStart(info);\r\n            });\r\n        },\r\n        onDragEnd: (info) => {\r\n            this.ngzone.run(() => {\r\n                this.onDragEnd(info);\r\n            });\r\n        }\r\n    };\r\n\r\n    constructor(private ngzone: NgZone, private injector: Injector, private render: Renderer2, private el: ElementRef) { }\r\n    ngAfterViewInit() {\r\n        this.initDnD();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.disposeDnd();\r\n    }\r\n\r\n    private disposeDnd() {\r\n        if (this.container) {\r\n            this.container.dispose();\r\n            this.container = null;\r\n        }\r\n    }\r\n\r\n\r\n    private initDnD() {\r\n        this.disposeDnd();\r\n        this.container = SmoothDndForGroupingField(\r\n            this.el.nativeElement,\r\n            this.options\r\n        );\r\n    }\r\n\r\n    private getChildPayload(index) {\r\n        return index;\r\n    }\r\n\r\n    private onDropReady(dropResult) {\r\n    }\r\n\r\n    private onDragStart(info) {\r\n    }\r\n\r\n    private onDragEnd(info) {\r\n    }\r\n\r\n\r\n    private onDragEnter() {\r\n    }\r\n}\r\n","\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { ModalModule } from '@farris/ui-modal';\r\nimport { GRID_SETTINGS_SERVICE, DatagridModule} from '@farris/ui-datagrid';\r\nimport { MultiSelectModule } from '@farris/ui-multi-select';\r\nimport { FarrisCommonModule } from '@farris/ui-common';\r\nimport { LocaleModule } from '@farris/ui-locale';\r\nimport { MessagerModule } from '@farris/ui-messager';\r\nimport { ComboListModule } from '@farris/ui-combo-list';\r\nimport { SwitchModule } from '@farris/ui-switch';\r\nimport { FarrisTooltipModule } from '@farris/ui-tooltip';\r\nimport { NotifyModule } from '@farris/ui-notify';\r\nimport { OrganizationSelectorModule } from '@farris/ui-organization-selector';\r\n\r\nimport { DatagridSettingsComponent } from './datagrid-settings.component';\r\n\r\nimport { DatagridSettingsService } from './datagrid-settings.service';\r\nimport { DatagridSortSettingComponent } from './datagrid-sort-setting.component';\r\nimport { DatagridViewColumnsComponent } from './datagrid-view-columns.component';\r\nimport { ColumnFormatSettingComponent } from './column-format-setting/column-format-setting.component';\r\nimport { ColumnGroupSettingComponent } from './column-group/column-group.component';\r\nimport { ColumnVisibleDragDirective } from './column-format-setting/column-visible-drag.directive';\r\nimport { ColumnGroupDragDirective } from './column-group/column-group-drag.directive';\r\nimport { SimpleColumnsComponent } from './simple-mode/simple-columns.component';\r\nimport { NewSchemeComponent } from './scheme/newscheme.component';\r\nimport { SchemeListComponent } from './scheme/scheme-list.component';\r\nimport { LanguageTextboxModule } from '@farris/ui-language-textbox';\r\n@NgModule({\r\n    declarations: [\r\n        DatagridSettingsComponent,\r\n        DatagridSortSettingComponent,\r\n        DatagridViewColumnsComponent,\r\n        ColumnFormatSettingComponent,\r\n        ColumnGroupSettingComponent,\r\n        ColumnVisibleDragDirective,\r\n        ColumnGroupDragDirective,\r\n        SimpleColumnsComponent,\r\n        NewSchemeComponent,\r\n        SchemeListComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        MultiSelectModule,\r\n        ComboListModule,\r\n        DatagridModule,\r\n        FarrisCommonModule.forRoot(),\r\n        MessagerModule.forRoot(),\r\n        LocaleModule.forRoot(),\r\n        ModalModule.forRoot(),\r\n        SwitchModule,\r\n        FarrisTooltipModule,\r\n        NotifyModule.forRoot(),\r\n        OrganizationSelectorModule,\r\n        LanguageTextboxModule,\r\n    ],\r\n    entryComponents: [\r\n        DatagridSettingsComponent,\r\n        SimpleColumnsComponent,\r\n        NewSchemeComponent,\r\n        SchemeListComponent\r\n    ],\r\n    exports: [\r\n        DatagridSettingsComponent,\r\n        SimpleColumnsComponent,\r\n        NewSchemeComponent,\r\n        SchemeListComponent\r\n    ]\r\n})\r\nexport class DatagridSettingsModule {\r\n    static forRoot(apiUri = ''): ModuleWithProviders {\r\n        return {\r\n            ngModule: DatagridSettingsModule,\r\n            providers: [\r\n                { provide: GRID_SETTINGS_SERVICE, useClass: DatagridSettingsService }\r\n            ]\r\n        };\r\n    }\r\n}\r\n"],"names":["EventEmitter","MessagerService","LocaleService","Renderer2","Component","ViewEncapsulation","ChangeDetectorRef","Injector","Input","Output","ViewChild","NotifyService","HostBinding","HostListener","Subject","of","InjectionToken","ComponentFactoryResolver","ApplicationRef","DebugService","switchMap","timer","map","cloneDeep","forkJoin","Injectable","BsModalService","IdService","SmoothDndForVisible","dropHandlers","Directive","NgZone","ElementRef","smoothDnD","SmoothDndForGroupingField","GRID_SETTINGS_SERVICE","NgModule","CommonModule","FormsModule","MultiSelectModule","ComboListModule","DatagridModule","FarrisCommonModule","MessagerModule","LocaleModule","ModalModule","SwitchModule","FarrisTooltipModule","NotifyModule","OrganizationSelectorModule","LanguageTextboxModule"],"mappings":";;;;;;IAAA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;;IAEA;IACA;IACA;AACA,AAcA;AACA,IAAO,IAAI,QAAQ,GAAG,WAAW;IACjC,IAAI,QAAQ,GAAG,MAAM,CAAC,MAAM,IAAI,SAAS,QAAQ,CAAC,CAAC,EAAE;IACrD,QAAQ,KAAK,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IAC7D,YAAY,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;IAC7B,YAAY,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACzF,SAAS;IACT,QAAQ,OAAO,CAAC,CAAC;IACjB,MAAK;IACL,IAAI,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IAC3C,EAAC;AACD,AA+EA;AACA,IAAO,SAAS,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE;IAC7B,IAAI,IAAI,CAAC,GAAG,OAAO,MAAM,KAAK,UAAU,IAAI,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IAC/D,IAAI,IAAI,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;IACrB,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;IACrC,IAAI,IAAI;IACR,QAAQ,OAAO,CAAC,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IACnF,KAAK;IACL,IAAI,OAAO,KAAK,EAAE,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE;IAC3C,YAAY;IACZ,QAAQ,IAAI;IACZ,YAAY,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC7D,SAAS;IACT,gBAAgB,EAAE,IAAI,CAAC,EAAE,MAAM,CAAC,CAAC,KAAK,CAAC,EAAE;IACzC,KAAK;IACL,IAAI,OAAO,EAAE,CAAC;IACd,CAAC;;AAED,IAAO,SAAS,QAAQ,GAAG;IAC3B,IAAI,KAAK,IAAI,EAAE,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE;IACtD,QAAQ,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7C,IAAI,OAAO,EAAE,CAAC;IACd,CAAC;;;;;;;QCpFG,mCAAoB,EAAqB,EAAU,MAAgB;YAA/C,OAAE,GAAF,EAAE,CAAmB;YAAU,WAAM,GAAN,MAAM,CAAU;YAtCnE,mBAAc,GAAG,CAAC,CAAC;;;;YAGnB,iBAAY,GAAG,EAAE,CAAC;YAClB,cAAS,GAAG,EAAE,CAAC;YACf,aAAQ,GAAQ,EAAE,CAAC;;;;YAGnB,iBAAY,GAAG,EAAE,CAAC;YAClB,gBAAW,GAAG,EAAE,CAAC;YAEjB,iBAAY,GAAG,EAAE,CAAC;YAElB,eAAU,GAAG,EAAE,CAAC;YAChB,kBAAa,GAAG,IAAI,CAAC;YAErB,qBAAgB,GAAG,IAAI,CAAC;YACxB,wBAAmB,GAAG,IAAI,CAAC;YAClB,gBAAW,GAAG,KAAK,CAAC;YAGnB,iBAAY,GAAG,IAAIA,iBAAY,EAAE,CAAC;YAClC,iBAAY,GAAG,IAAIA,iBAAY,EAAE,CAAC;YAClC,UAAK,GAAG,IAAIA,iBAAY,EAAE,CAAC;YAC3B,YAAO,GAAG,IAAIA,iBAAY,EAAE,CAAC;YAC9B,eAAU,GAAiB,IAAI,CAAC;YAKzC,gBAAW,GAAG,EAAE,CAAC;YACjB,eAAU,GAAG,EAAE,CAAC;YAChB,iBAAY,GAAG,EAAE,CAAC;YAClB,kBAAa,GAAG,EAAE,CAAC;YAMf,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAACC,0BAAe,EAAE,IAAI,CAAC,CAAC;YACvD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAACC,sBAAa,CAAC,CAAC;YAChD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAACC,cAAS,EAAE,IAAI,CAAC,CAAC;YAChD,IAAI,CAAC,WAAW,GAAG;gBACf,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,8BAA8B,CAAC,EAAE;gBAChF,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,kCAAkC,CAAC,EAAE;gBACxF,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,iCAAiC,CAAC,EAAE;aACzF,CAAC;YAEF,IAAI,CAAC,UAAU,GAAG;gBACd,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,6BAA6B,CAAC,EAAC;gBAC/E,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,+BAA+B,CAAC,EAAC;gBACnF,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,8BAA8B,CAAC,EAAC;aACpF,CAAC;YAEF,IAAI,CAAC,YAAY,GAAG;gBAChB,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,+BAA+B,CAAC,EAAE;gBAC9E,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,8BAA8B,CAAC,EAAE;gBAC5E,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,8BAA8B,CAAC,EAAE;gBAC5E,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,8BAA8B,CAAC,EAAE;gBAC5E,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,kCAAkC,CAAC,EAAE;gBAChF,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,+BAA+B,CAAC,EAAE;aAChF,CAAC;YAEF,IAAI,CAAC,aAAa,GAAG;gBACjB,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,+BAA+B,CAAC,EAAE;gBAC9E,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,+BAA+B,CAAC,EAAE;aAChF,CAAC;SAEL;;;;;QAEO,4CAAQ;;;;QAAhB;YACI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;YACzF,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;YACzC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;YACtD,IAAI,CAAC,YAAY,YAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;YACzC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;YAC9F,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC;SAC7D;;;;QAED,4CAAQ;;;QAAR;YACI,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE;gBACjC,IAAI,CAAC,QAAQ,EAAE,CAAC;aACnB;iBAAM;gBACH,IAAI,IAAI,CAAC,UAAU,EAAE;oBACjB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,IAAI,EAAE,CAAC;oBAC/C,IAAI,IAAI,CAAC,QAAQ,EAAE;wBACf,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,IAAI,EAAE,CAAC;qBACjD;oBACD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC;oBAC/C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC;oBACjD,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;wBACpB,IAAI,CAAC,YAAY,YAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;qBAC5C;oBAED,IAAI,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE;wBAC5B,IAAI,OAAO,IAAI,CAAC,UAAU,CAAC,UAAU,KAAK,QAAQ,EAAE;4BAChD,IAAI,CAAC,UAAU,GAAG,oBAAC,IAAI,CAAC,UAAU,CAAC,UAAU,IAAS,KAAK,CAAC,GAAG,CAAC,CAAC;yBACpE;6BAAM;4BACH,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,IAAI,EAAE,CAAC;yBACtD;qBACJ;yBAAM;wBACH,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;qBACxB;oBAED,OAAO;iBACV;gBACD,IAAI,CAAC,QAAQ,EAAE,CAAC;aACnB;SACJ;;;;;QAED,+CAAW;;;;QAAX,UAAY,OAAsB;SACjC;;;;;QAED,yCAAK;;;;QAAL,UAAM,MAAkB;YACpB,MAAM,CAAC,eAAe,EAAE,CAAC;YACzB,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACf,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;aACzB;SACJ;;;;;QAEO,iDAAa;;;;QAArB;YACI,IAAI,IAAI,CAAC,OAAO,EAAE;;oBAEV,IAAI,GAAG,CAAC;gBACZ,QAAO,IAAI,CAAC,cAAc;oBACtB,KAAK,CAAC;wBACF,IAAI,GAAG,EAAE,CAAC;wBACV,MAAM;oBACV,KAAK,CAAC;wBACF,IAAI,GAAG,GAAG,CAAC;wBACX,MAAM;oBACV;wBACI,IAAI,GAAG,CAAC,CAAC;wBACT,MAAM;iBAEb;gBAED,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,WAAW,EAAE,iBAAe,IAAI,kBAAe,CAAC,CAAC;aACxG;SACJ;;;;;;QAGD,8CAAU;;;;;QAAV,UAAW,MAAkB,EAAE,GAAG;YAC9B,MAAM,CAAC,eAAe,EAAE,CAAC;YACzB,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC;YAE1B,IAAI,CAAC,aAAa,EAAE,CAAC;SACxB;;;;;QAED,oDAAgB;;;;QAAhB,UAAiB,QAAa;YAC1B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;SAC5B;;;;;QAEO,kDAAc;;;;QAAtB;YAAA,iBAYC;;;gBAVO,UAAU,GAAG,EAAE;YACnB,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAG;gBAC1B,IAAI,CAAC,OAAO,CAAC,OAAO;;;;gBAAC,UAAA,IAAI;oBACrB,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;iBAC9D,EAAC,CAAC;aACN;iBAAM;gBACH,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM;;;;gBAAC,UAAA,CAAC,IAAI,QAAC,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,OAAO,KAAK,SAAS,IAAC,EAAC,CAAC;aACpF;YAED,OAAO,UAAU,CAAC,GAAG;;;;YAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,KAAK,GAAA,EAAC,CAAC;SACvC;;;;;;QAEO,mDAAe;;;;;QAAvB,UAAwB,IAAW;YAC/B,OAAO,IAAI,CAAC,MAAM;;;;YAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,CAAC,OAAO,KAAK,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,OAAO,KAAK,SAAS,CAAC,GAAA,EAAC,CAAC;SACjF;;;;;QAGO,sDAAkB;;;;QAA1B;YAAA,iBAeC;YAdG,IAAI,IAAI,CAAC,QAAQ,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE;gBAC/F,IAAA,kBAAuC,EAArC,sBAAQ,EAAE,0BAA2B;gBAC7C,IAAI,QAAQ,IAAI,QAAQ,CAAC,MAAM,EAAE;oBAC7B,QAAQ,CAAC,OAAO;;;;;oBAAC,UAAC,CAAC,EAAE,CAAC;;4BACZ,GAAG,GAAG,KAAI,CAAC,YAAY,CAAC,IAAI;;;;wBAAC,UAAC,GAAQ;4BACxC,OAAO,GAAG,CAAC,KAAK,KAAK,CAAC,CAAC;yBAC1B,EAAC;wBACF,IAAI,GAAG,EAAE;4BACL,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC;4BACpB,GAAG,CAAC,KAAK,GAAG,WAAS,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC;yBACrC;qBACJ,EAAC,CAAC;iBACN;aACJ;SACJ;;;;;QAGD,wDAAoB;;;;QAApB,UAAqB,aAAa;YAC9B,IAAI,CAAC,YAAY,GAAG,aAAa,CAAC;SACrC;;;;;QAED,iDAAa;;;;QAAb,UAAc,MAAM;YAChB,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAClC;;;;;QAED,iDAAa;;;;QAAb,UAAc,MAAM;YAChB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAClC;;;;;QAED,kDAAc;;;;QAAd,UAAe,MAAM;YAArB,iBAQC;;;gBANS,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,8CAA8C,CAAC,IAAI,aAAa;YAClH,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,SAAS;;;;YAAC,UAAC,CAAU;gBAC1D,IAAI,CAAC,EAAE;oBACH,KAAI,CAAC,aAAa,EAAE,CAAC;iBACxB;aACJ,EAAC,CAAC;SACN;;;;;QAEO,iDAAa;;;;QAArB;YAAA,iBAmCC;;gBAlCS,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,cAAc;YAC9D,IAAI,OAAO,CAAC,YAAY,IAAI,OAAO,CAAC,YAAY,CAAC,MAAM,EAAE;;oBAE/C,YAAU,GAAG,EAAE;gBACrB,OAAO,CAAC,YAAY,CAAC,OAAO;;;;gBAAC,UAAA,CAAC;oBAC1B,IAAI,CAAC,CAAC,KAAK,KAAK,4BAA4B,EAAE;;4BACpC,GAAG,GAAG,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI;;;;wBAAC,UAAC,CAAM,IAAK,OAAA,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,KAAK,GAAA,EAAC;wBAC9E,IAAI,GAAG,EAAE;4BACL,GAAG,CAAC,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC;4BACxB,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;4BACtB,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;4BACpB,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;4BACpB,GAAG,CAAC,MAAM,gBAAO,CAAC,CAAC,MAAM,IAAI,EAAE,CAAC,CAAC;4BACjC,GAAG,CAAC,WAAW,gBAAO,CAAC,CAAC,WAAW,IAAI,EAAE,CAAC,CAAC;4BAC3C,YAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;yBACxB;qBACJ;iBACJ,EAAC,CAAC;gBAEH,IAAI,CAAC,OAAO,GAAG,CAAC,YAAU,CAAC,CAAC;aAC/B;YAED,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;YAEzC,IAAI,OAAO,CAAC,IAAI,EAAE;;oBACR,UAAU,GAAG,OAAO,CAAC,IAAI,CAAC,SAAS,GAAE,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE;gBACjF,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;gBAC/E,IAAI,CAAC,QAAQ,GAAG,EAAE,QAAQ,EAAE,IAAI,CAAC,SAAS,EAAE,SAAS,EAAG,UAAU,EAAE,CAAC;aACxE;iBAAM;gBACH,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;gBACpB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;aACtB;YACD,IAAI,CAAC,YAAY,YAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;YACzC,IAAI,CAAC,UAAU,GAAI,OAAO,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;SAC9E;;;;;;;QAED,+CAAW;;;;;QAAX,UAAY,MAAM;YAEd,IAAI,MAAM,EAAE;gBACR,MAAM,CAAC,eAAe,EAAE,CAAC;aAC5B;YACD,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;SACvB;;oBAzQJC,cAAS,SAAC;wBACP,QAAQ,EAAE,mBAAmB;wBAC7B,gnHAAiD;wBACjD,aAAa,EAAEC,sBAAiB,CAAC,IAAI;qBACxC;;;;oBAZqCC,sBAAiB;oBAAEC,aAAQ;;;kCAkC5DC,UAAK;8BACLA,UAAK;mCAELC,WAAM;mCACNA,WAAM;4BACNA,WAAM;8BACNA,WAAM;iCACND,UAAK;6BAELE,cAAS,SAAC,QAAQ;gCAClBA,cAAS,SAAC,WAAW;;QAsO1B,gCAAC;KA1QD;;;;;;;;;;;ICVA,SAAgB,oBAAoB,CAAC,MAAM,EAAE,QAAQ;QACjD,IAAI,MAAM,IAAI,OAAO,MAAM,KAAK,QAAQ,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;YACxE,QAAQ,GAAG,QAAQ,IAAI,QAAQ,CAAC;;gBAC1B,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC;YAC5B,IAAI,GAAG,KAAK,SAAS,EAAE;gBACnB,OAAO,GAAG,CAAC;aACd;iBAAM;gBACH,OAAO,EAAE,CAAC;aACb;SACJ;aAAM;YACH,OAAO,EAAE,CAAC;SACb;KACJ;;;;;;;QCsEG,gCAAoB,QAAkB,EAAS,EAAqB;YAAhD,aAAQ,GAAR,QAAQ,CAAU;YAAS,OAAE,GAAF,EAAE,CAAmB;YAlE3D,iBAAY,GAAG,KAAK,CAAC;YACrB,eAAU,GAAQ,EAAE,CAAC;;;;YAErB,YAAO,GAAG,EAAE,CAAC;;;;YAEb,WAAM,GAAG,EAAE,CAAC;;;;YAEZ,kBAAa,GAAG,IAAI,CAAC;YAErB,QAAG,GAAG,CAAC,CAAC;YACT,gBAAW,GAAG,EAAE,CAAC;YAcH,QAAG,GAAG,iCAAiC,CAAC;YASpD,iBAAY,GAAG,IAAIV,iBAAY,EAAE,CAAC;YAClC,iBAAY,GAAG,IAAIA,iBAAY,EAAE,CAAC;YAClC,WAAM,GAAG,IAAIA,iBAAY,EAAE,CAAC;YAC5B,WAAM,GAAG,IAAIA,iBAAY,EAAE,CAAC;YAC5B,aAAQ,GAAG,IAAIA,iBAAY,EAAE,CAAC;YAE9B,iBAAY,GAAG,IAAIA,iBAAY,EAAE,CAAC;YAClC,mBAAc,GAAG,IAAIA,iBAAY,EAAE,CAAC;YACpC,qBAAgB,GAAG,IAAIA,iBAAY,EAAE,CAAC;YAEtC,kBAAa,GAAG,IAAIA,iBAAY,EAAE,CAAC;YAE7C,YAAO,GAAG,EAAE,CAAC;YACb,eAAU,GAAG,KAAK,CAAC;YAInB,SAAI,GAAG,KAAK,CAAC;YAEb,oBAAe,GAAG,KAAK,CAAC;YAExB,gBAAW,GAAG,KAAK,CAAC;;YAEpB,sBAAiB,GAAG,IAAI,CAAC;YAEzB,6BAAwB,GAAG,KAAK,CAAC;YACjC,sBAAiB,GAAG,MAAM,CAAC;YAK3B,aAAQ,GAAiB,EAAE,CAAC;YAGxB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAACE,sBAAa,EAAE,IAAI,CAAC,CAAC;YACxD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAACD,0BAAe,EAAE,IAAI,CAAC,CAAC;YACzD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAACU,sBAAa,EAAE,IAAI,CAAC,CAAC;SACxD;QA3DD,sBACI,8CAAU;;;;YADd;gBAEI,OAAO,IAAI,CAAC,WAAW,CAAC;aAC3B;;;;;YACD,UAAe,GAAG;gBAAlB,iBAOC;gBANG,IAAI,GAAG,IAAI,GAAG,CAAC,MAAM,EAAE;oBACnB,GAAG,CAAC,OAAO;;;;oBAAC,UAAA,CAAC;wBACT,CAAC,CAAC,SAAS,CAAC,GAAG,oBAAoB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,KAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;qBACpF,EAAC,CAAC;iBACN;gBACD,IAAI,CAAC,WAAW,GAAG,GAAG,IAAI,EAAE,CAAC;aAChC;;;WARA;;;;;QA2DD,wCAAO;;;;QADP,UACQ,MAAkB;YACtB,MAAM,CAAC,eAAe,EAAE,CAAC;;gBACnB,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,EAAE;YAChD,IAAI,OAAO,CAAC,OAAO,CAAC,iCAAiC,CAAC,GAAG,CAAC,CAAC,EAAE;;gBAEzD,IAAI,IAAI,CAAC,aAAa,EAAE;oBACpB,IAAI,CAAC,KAAK,EAAE,CAAC;iBAChB;aACJ;YAED,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;SAChC;;;;;QAGD,6CAAY;;;;QADZ,UACa,MAAM;YACf,MAAM,CAAC,eAAe,EAAE,CAAC;YACzB,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,iBAAiB,CAAC,EAAE;gBAC5C,IAAI,CAAC,KAAK,EAAE,CAAC;aAChB;SACJ;;;;;QAGD,+CAAc;;;;QADd,UACe,MAAM;YACjB,MAAM,CAAC,eAAe,EAAE,CAAC;YACzB,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,iBAAiB,CAAC,EAAE;gBAC5C,IAAI,CAAC,aAAa,EAAE,CAAC;aACxB;SACJ;;;;;QAGD,kDAAiB;;;;QADjB,UACkB,MAAqB;YACnC,IAAI,MAAM,CAAC,OAAO,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,iBAAiB,CAAC,EAAE;gBAC9D,MAAM,CAAC,cAAc,EAAE,CAAC;gBACxB,MAAM,CAAC,eAAe,EAAE,CAAC;gBACzB,IAAI,MAAM,CAAC,GAAG,CAAC,WAAW,EAAE,KAAK,GAAG,EAAE;oBAClC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;iBAC7B;qBAAM,IAAI,MAAM,CAAC,GAAG,CAAC,WAAW,EAAE,KAAK,GAAG,EAAE;oBACzC,IAAI,CAAC,cAAc,EAAE,CAAC;iBACzB;qBAAM,IAAI,MAAM,CAAC,GAAG,CAAC,WAAW,EAAE,KAAK,GAAG,EAAE;oBACzC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;iBAC1C;aACJ;SACJ;;;;;QAEO,yDAAwB;;;;QAAhC;YACI,IAAI,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,iBAAiB,CAAC,oBAAoB,EAAE;;oBACjE,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,iBAAiB,CAAC,oBAAoB,CAAC;gBAC9E,0BAAO,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAiB;aAClE;YAED,OAAO,IAAI,CAAC;SACf;;;;QAED,yCAAQ;;;QAAR;YACI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAC/B,IAAI,IAAI,CAAC,YAAY,CAAC,YAAY,IAAI,IAAI,CAAC,iBAAiB,EAAE;gBAC1D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,wBAAwB,EAAE,IAAI,EAAE,CAAC;aACzD;YAED,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,WAAW,IAAI,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,MAAM,EAAE;gBAChF,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC;gBACxC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;aAC5B;iBAAM;gBACH,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;aACvC;YAED,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;YAErC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,2BAA2B,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC;SACxH;;;;;QAEO,+CAAc;;;;QAAtB;YAAA,iBAYC;;;gBAVO,UAAU,GAAG,EAAE;YACnB,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAG;gBAC1B,IAAI,CAAC,OAAO,CAAC,OAAO;;;;gBAAC,UAAA,IAAI;oBACrB,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;iBAC9D,EAAC,CAAC;aACN;iBAAM;gBACH,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM;;;;gBAAC,UAAA,CAAC,IAAI,QAAC,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,OAAO,KAAK,SAAS,IAAC,EAAC,CAAC;aACpF;YAED,OAAO,UAAU,CAAC,GAAG;;;;YAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,KAAK,GAAA,EAAC,CAAC;SACvC;;;;;;QAEO,gDAAe;;;;;QAAvB,UAAwB,IAAW;YAC/B,OAAO,IAAI,CAAC,MAAM;;;;YAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,CAAC,OAAO,KAAK,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,OAAO,KAAK,SAAS,CAAC,GAAA,EAAC,CAAC;SACjF;;;;;;;;;;;;;;;QAOD,8CAAa;;;;;;;;;;QAAb,UAAc,WAAgB;YAA9B,iBAeC;YAfa,4BAAA,EAAA,gBAAgB;;gBACtB,IAAI,GAAG,EAAE;YAEb,IAAI,IAAI,CAAC,WAAW,EAAE;gBAClB,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM;;;;gBAAC,UAAA,CAAC,IAAI,OAAA,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAA,EAAC,CAAC;aACzE;iBAAM;gBACH,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;aAC1B;YAED,IAAI,WAAW,EAAE;gBACb,IAAI,GAAG,IAAI,CAAC,MAAM;;;;gBAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,GAAA,EAAC,CAAC;aAC1F;YAED,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM;;;;YAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,OAAO,GAAA,EAAC,CAAC,MAAM,KAAK,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;SACtG;;;;;QAEO,gDAAe;;;;QAAvB;YACI,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE;gBACjC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aACvC;SACJ;;;;;;QAED,2CAAU;;;;;QAAV,UAAW,MAAM,EAAE,GAAG;YAClB,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;SACrC;;;;;;QAED,gDAAe;;;;;QAAf,UAAgB,MAAM,EAAE,GAAG;YAA3B,iBAuBC;YAtBG,MAAM,CAAC,eAAe,EAAE,CAAC;YACzB,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;;gBAEvB,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;YAC5C,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;gBACd,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;aAE/B;iBAAM;gBACH,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;aAEhC;YAED,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO;;;;YAAC,UAAA,CAAC;gBACrB,CAAC,CAAC,OAAO,GAAG,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;aACjD,EAAC,CAAC;YAEH,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM;;;;YAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,OAAO,GAAA,EAAC,CAAC,GAAG;;;;YAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,KAAK,GAAA,EAAC,CAAC;YAEvE,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;YAE3E,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;YACzB,IAAI,CAAC,eAAe,EAAE,CAAC;SAC1B;;;;;QAED,6CAAY;;;;QAAZ,UAAa,MAAM;;gBACT,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK;YAC/B,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;SAC3B;;;;;;;QAED,4CAAW;;;;;;QAAX,UAAY,SAAS,EAAE,GAAG,EAAE,OAAY;;YACpC,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YACrB,IAAA,qCAAY,EAAE,iCAAU;;gBAE1B,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC;;gBACrC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;;gBAErC,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS;;;;YAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,KAAK,KAAK,QAAQ,CAAC,KAAK,GAAA,EAAC;;gBAC1E,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS;;;;YAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,KAAK,KAAK,UAAU,CAAC,KAAK,GAAA,EAAC;;gBAE9E,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC,CAAC;YAC5D,CAAA,KAAA,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAC,MAAM,qBAAC,eAAe,EAAE,CAAC,GAAK,WAAW,GAAE;YAE3D,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM;;;;YAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,OAAO,GAAA,EAAC,CAAC,GAAG;;;;YAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,KAAK,GAAA,EAAC,CAAC;YAEvE,IAAI,CAAC,eAAe,EAAE,CAAC;YACvB,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;SAC3B;;;;;;;;;QAKO,iDAAgB;;;;;QAAxB;YACI,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,KAAK,EAAE;gBACvC,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;oBAC1B,OAAO,CAAC,CAAC;iBACZ;qBAAM;oBACH,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,KAAK,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE;wBAC/C,OAAO,CAAC,CAAC;qBACZ;oBACD,OAAO,CAAC,CAAC;iBACZ;aACJ;iBAAM;;oBACG,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM;;;;gBAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,OAAO,GAAA,EAAC,CAAC,MAAM;gBAC7D,IAAI,UAAU,KAAK,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;oBACpC,OAAO,CAAC,CAAC;iBACZ;qBAAM;oBACH,IAAI,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;wBAClC,IAAI,UAAU,KAAK,CAAC,EAAE;4BAClB,OAAO,CAAC,CAAA;yBACX;wBACD,OAAO,CAAC,CAAC;qBACZ;iBACJ;aACJ;SACJ;;;;;;;;QAGD,gDAAe;;;;;;;QAAf,UAAgB,MAAkB,EAAE,GAAG;YAAvC,iBA2BC;YA1BG,MAAM,CAAC,eAAe,EAAE,CAAC;YACzB,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;;gBACvB,KAAK,GAAG,IAAI,CAAC,gBAAgB,EAAE;;gBAE/B,UAAU,GAAG,KAAK,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC;YAE7C,IAAI,CAAC,GAAG,EAAE;gBACN,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO;;;;gBAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,OAAO,GAAG,UAAU,GAAA,EAAC,CAAC;aAExD;iBAAM;gBACH,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO;;;;gBAAC,UAAA,CAAC;;wBACf,IAAI,GAAG,KAAI,CAAC,OAAO,CAAC,IAAI;;;;oBAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,KAAK,GAAA,EAAC;oBACvD,IAAI,IAAI,EAAE;wBACN,CAAC,CAAC,OAAO,GAAG,UAAU,CAAC;wBACvB,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC;qBAC7B;iBACJ,EAAC,CAAC;aAEN;YACD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM;;;;YAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,OAAO,GAAA,EAAC,CAAC,GAAG;;;;YAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,KAAK,GAAA,EAAC,CAAC;YACvE,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;YAE3E,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;YAEzB,IAAI,CAAC,eAAe,EAAE,CAAC;YACvB,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;SAC3B;;;;;QAED,sCAAK;;;;QAAL,UAAM,MAAmB;YACrB,IAAI,MAAM,EAAE;gBACR,MAAM,CAAC,eAAe,EAAE,CAAC;aAC5B;YACD,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;SACtB;;;;;;;QAGD,6CAAY;;;;;;QAAZ,UAAa,MAAM;YACf,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YACnB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,UAAU,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;SACnD;;;;;;;QAGD,+CAAc;;;;;;QAAd,UAAe,MAAY;YAA3B,iBAaC;YAZG,IAAI,MAAM,EAAE;gBACR,MAAM,CAAC,eAAe,EAAE,CAAC;aAC5B;YAED,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;;gBACvB,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,8CAA8C,CAAC,IAAI,cAAc;YACnH,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC,SAAS;;;;YAAC,UAAC,CAAU;gBAChE,IAAI,CAAC,EAAE;oBACH,KAAI,CAAC,aAAa,EAAE,CAAC;oBACrB,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;iBAC5B;aACJ,EAAC,CAAC;SACN;;;;;QAEO,8CAAa;;;;QAArB;YAAA,iBAoCC;;gBAnCS,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,cAAc;YAC9D,IAAI,OAAO,CAAC,YAAY,IAAI,OAAO,CAAC,YAAY,CAAC,MAAM,EAAE;;oBAE/C,YAAU,GAAG,EAAE;gBACrB,OAAO,CAAC,YAAY,CAAC,OAAO;;;;gBAAC,UAAA,CAAC;oBAC1B,IAAI,CAAC,CAAC,KAAK,KAAK,4BAA4B,EAAE;;4BACpC,GAAG,GAAG,KAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI;;;;wBAAC,UAAC,CAAM,IAAK,OAAA,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,KAAK,GAAA,EAAC;wBACjE,IAAI,GAAG,EAAE;4BACL,GAAG,CAAC,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC;4BACxB,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;4BACtB,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;4BACpB,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;4BACpB,GAAG,CAAC,MAAM,gBAAO,CAAC,CAAC,MAAM,IAAI,EAAE,CAAC,CAAC;4BACjC,GAAG,CAAC,WAAW,gBAAO,CAAC,CAAC,WAAW,IAAI,EAAE,CAAC,CAAC;4BAC3C,YAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;yBACxB;qBACJ;iBACJ,EAAC,CAAC;gBAEH,IAAI,CAAC,OAAO,GAAG,CAAC,YAAU,CAAC,CAAC;aAC/B;YAED,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAC/B,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;YACnB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;YACpC,IAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC;YACxC,IAAI,CAAC,QAAQ,CAAC,YAAY,YAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;YAClD,IAAI,OAAO,CAAC,IAAI,EAAE;;oBACR,UAAU,GAAG,OAAO,CAAC,IAAI,CAAC,SAAS,GAAE,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE;;oBAC3E,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE;gBAC/E,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAG,UAAU,EAAE,CAAC;aAC5E;iBAAM;gBACH,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,EAAE,CAAC;aAC/B;YACD,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAI,OAAO,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;SACvF;;;;;;;QAGD,8CAAa;;;;;;QAAb,UAAc,MAAY;YACtB,IAAI,MAAM,EAAE;gBACR,MAAM,CAAC,eAAe,EAAE,CAAC;aAC5B;YAED,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;gBACrC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;gBACjC,OAAO;aACV;YAED,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAC7B,IAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC;YAExC,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE;gBAC/C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE;oBAC7B,IAAI,CAAC,QAAQ,CAAC,YAAY,YAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;iBACrD;gBAED,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE;oBACzB,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG;wBACrB,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE;wBACjF,SAAS,EAAG,IAAI,CAAC,YAAY,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE;qBACxF,CAAC;iBACL;gBAED,IAAI,IAAI,CAAC,QAAQ,CAAC,UAAU,KAAK,SAAS,EAAE;oBACxC,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;iBAC1G;aACJ;iBAAM;;oBACG,SAAS,GAAG,IAAI,CAAC,wBAAwB,EAAE;gBACjD,IAAI,SAAS,EAAE;oBACX,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,SAAS,IAAI,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;iBACjE;aACJ;;YAED,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,aAAa,EAAE,IAAI,CAAC,iBAAiB,EAAC,CAAC,CAAC;SACrJ;;;;QAED,gDAAe;;;QAAf;YACI,IAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC;YAExC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE;gBAC7B,IAAI,CAAC,QAAQ,CAAC,YAAY,YAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;aACrD;YAED,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE;gBACzB,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG;oBACrB,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE;oBACjF,SAAS,EAAG,IAAI,CAAC,YAAY,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE;iBACxF,CAAC;aACL;YAED,IAAI,IAAI,CAAC,QAAQ,CAAC,UAAU,KAAK,SAAS,EAAE;gBACxC,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;aAC1G;YAED,oBAAY,IAAI,CAAC,QAAQ,EAAG;SAC/B;;;;;;;QAGD,+CAAc;;;;;;QAAd,UAAe,MAAM;YAArB,iBAmBC;YAlBG,IAAI,MAAM,EAAE;gBACR,MAAM,CAAC,eAAe,EAAE,CAAC;aAC5B;YAED,IAAI,CAAC,eAAe,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC;YAE7C,UAAU;;;YAAC;gBACP,IAAI,KAAI,CAAC,iBAAiB,IAAI,KAAI,CAAC,iBAAiB,EAAE;;wBAC5C,MAAM,GAAG,KAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,aAAa,CAAC,iBAAe,KAAI,CAAC,iBAAiB,CAAC,EAAI,CAAC;oBAC7G,IAAI,MAAM,EAAE;wBACR,IAAI,MAAM,CAAC,sBAAsB,EAAE;4BAC/B,MAAM,CAAC,sBAAsB,EAAE,CAAC;yBACnC;6BAAM;4BACH,MAAM,CAAC,cAAc,EAAE,CAAC;yBAC3B;qBACJ;iBACJ;aACJ,EAAC,CAAA;SACL;;;;;;;QAGD,sDAAqB;;;;;;QAArB,UAAsB,MAAM;YACxB,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC;YAC1B,IAAI,CAAC,aAAa,EAAE,CAAC;SACxB;;;;QAED,wCAAO;;;QAAP;YACI,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,EAAE;gBACvB,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;aAC3B;SACJ;;;;QAED,0CAAS;;;QAAT;YACI,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAC7B,IAAI,CAAC,OAAO,EAAE,CAAC;SAClB;;;;;;;;QAGD,iDAAgB;;;;;;;QAAhB,UAAiB,MAAM,EAAE,MAAc;YAAd,uBAAA,EAAA,cAAc;YACnC,IAAI,MAAM,EAAE;gBACR,MAAM,CAAC,eAAe,EAAE,CAAC;aAC5B;YACD,IAAI,CAAC,SAAS,EAAE,CAAC;YACjB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,MAAM,IAAI,KAAK,EAAE,CAAC,CAAC;SAGrD;;;;;;;QAGD,iDAAgB;;;;;;QAAhB,UAAiB,MAAM;YACnB,IAAI,MAAM,EAAE;gBACR,MAAM,CAAC,eAAe,EAAE,CAAC;aAC5B;YACD,IAAI,CAAC,SAAS,EAAE,CAAC;YACjB,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;SAC9B;;;;;;;;QAGD,kDAAiB;;;;;;;QAAjB,UAAkB,MAAM,EAAE,IAAI;YAA9B,iBA4BC;YA3BG,UAAU;;;YAAC;gBACP,KAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;gBAC9B,KAAI,CAAC,eAAe,GAAG,KAAK,CAAC;;oBAEzB,cAAc,GAAG,IAAI;gBACzB,IAAI,IAAI,IAAI,IAAI,CAAC,oBAAoB,EAAE;oBACnC,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;oBACvD,cAAc,GAAG,cAAc,CAAC,KAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;oBAEzD,IAAI,CAAC,cAAc,EAAE;wBACjB,KAAI,CAAC,aAAa,EAAE,CAAC;qBACxB;yBAAM;wBACH,KAAI,CAAC,QAAQ,GAAG,cAAc,CAAC;wBAC/B,KAAI,CAAC,MAAM,GAAG,cAAc,CAAC,WAAW,CAAC;wBAGzC,KAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO;;;;wBAAC,UAAA,CAAC;4BACrB,CAAC,CAAC,OAAO,GAAG,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;yBACjD,EAAC,CAAC;qBACN;iBACJ;qBAAM;oBACH,KAAI,CAAC,aAAa,EAAE,CAAC;iBACxB;gBAED,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC9B,KAAI,CAAC,OAAO,EAAE,CAAC;aAClB,EAAC,CAAC;SACN;;;;;QAGD,8CAAa;;;;QAAb,UAAc,IAAI;;SAEjB;;;;;;QAED,4CAAW;;;;;QAAX,UAAY,MAAM,EAAE,KAAK;YACrB,IAAI,KAAK,IAAI,KAAK,CAAC,KAAK,EAAE;gBACtB,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;gBACvB,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC;aACpB;SACJ;;oBAthBJP,cAAS,SAAC;wBACP,QAAQ,EAAE,0BAA0B;wBACpC,mpPAA8C;wBAC9C,aAAa,EAAEC,sBAAiB,CAAC,IAAI;qBACxC;;;;oBAbiEE,aAAQ;oBAAjED,sBAAiB;;;mCAerBE,UAAK;iCACLA,UAAK;8BAELA,UAAK;6BAELA,UAAK;oCAELA,UAAK;0BAELA,UAAK;iCAELA,UAAK;0BAaLI,gBAAW,SAAC,OAAO;gCAEnBF,cAAS,SAAC,cAAc;4BACxBA,cAAS,SAAC,OAAO;kCACjBA,cAAS,SAAC,WAAW;wCAErBA,cAAS,SAAC,aAAa;6BACvBA,cAAS,SAAC,eAAe;mCAEzBD,WAAM;mCACNA,WAAM;6BACNA,WAAM;6BACNA,WAAM;+BACNA,WAAM;mCAENA,WAAM;qCACNA,WAAM;uCACNA,WAAM;oCAENA,WAAM;8BA6BNI,iBAAY,SAAC,OAAO,EAAE,CAAC,QAAQ,CAAC;mCAchCA,iBAAY,SAAC,oBAAoB,EAAE,CAAC,QAAQ,CAAC;qCAQ7CA,iBAAY,SAAC,sBAAsB,EAAE,CAAC,QAAQ,CAAC;wCAQ/CA,iBAAY,SAAC,SAAS,EAAE,CAAC,QAAQ,CAAC;;QA2avC,6BAAC;KAvhBD;;;;;;ICVA;;;;QAKM,aAAa,GAAG,qCAAqC;;;;;QAErD,mBAAmB,GAAM,aAAa,eAAY;;;;;QAElD,oBAAoB,GAAM,aAAa,WAAQ;;;;;QAE/C,kBAAkB,GAAG,4DAA4D;;QAEjF,eAAe,GAAG,4DAA4D;IAGpF;QAMI;YALQ,gBAAW,GAAG,IAAI,CAAC;YACnB,UAAK,GAAkB,EAAE,CAAC;YAElC,gBAAW,GAAG,IAAIC,YAAO,EAAE,CAAC;SAG3B;;;;;;QAED,sCAAM;;;;;QAAN,UAAO,CAAc,EAAE,MAAc;YACjC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE;gBACrB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;aAC3B;YACD,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;SAC7D;;;;;QAED,8CAAc;;;;QAAd,UAAe,OAAY;YACvB,IAAI,OAAO,IAAI,OAAO,CAAC,eAAe,CAAC,EAAE;gBACrC,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC,aAAa,CAAC,CAAC;aAC9D;SACJ;;;;;QAEO,6CAAa;;;;QAArB;;gBACU,WAAW,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACtD,OAAO,WAAW,CAAC,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;SAClE;;;;;QAED,4CAAY;;;;QAAZ,UAAa,MAAc;;gBACjB,OAAO,GAAG,IAAI,CAAC,aAAa,EAAE;YACpC,OAAU,OAAO,wBAAmB,MAAQ,CAAC;SAChD;;;;;QAED,6CAAa;;;;QAAb,UAAc,MAAc;;gBAClB,GAAG,GAAG,mBAAmB,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC;YAC3D,IAAI,IAAI,CAAC,WAAW,EAAE;gBAClB,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;aACjE;SACJ;;;;;;;QAED,0CAAU;;;;;;QAAV,UAAW,MAA2B,EAAE,MAAc,EAAE,QAAgB;YAAhB,yBAAA,EAAA,gBAAgB;YACpE,IAAI,IAAI,CAAC,WAAW,EAAE;;oBACZ,UAAU,GAAG,QAAQ,GAAG,KAAK,GAAE,MAAM;gBAC3C,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;gBAC5C,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,aAAa,EAAE,UAAU,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,MAAM,EAAC,EAAE,KAAK,CAAC,CAAC;aAC3F;SACJ;;;;;;QAED,4CAAY;;;;;QAAZ,UAAa,KAAkB,EAAE,MAAc;YAC3C,IAAI,CAAC,KAAK,EAAE;gBACR,OAAOC,OAAE,CAAC,KAAK,CAAC,CAAC;aACpB;;gBACK,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC;YAC1C,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAA;YAEzB,IAAI,KAAK,CAAC,QAAQ,EAAE;gBAChB,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,oBAAoB,EAAE,KAAK,EAAE,IAAI,EAAE,EAAC,IAAI,EAAE,KAAK,EAAC,EAAE,KAAK,CAAC,CAAC;aAC3F;SACJ;;;;;;QAED,6CAAa;;;;;QAAb,UAAc,MAAM;YAAE,kBAAW;iBAAX,UAAW,EAAX,qBAAW,EAAX,IAAW;gBAAX,iCAAW;;;gBACvB,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;YAClC,IAAI,OAAO,EAAE;gBACT,IAAI,QAAQ,IAAI,QAAQ,CAAC,MAAM,EAAE;oBAC7B,OAAO,QAAQ,CAAC,MAAM;;;;;oBAAC,UAAC,CAAC,EAAE,CAAC;wBACxB,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;qBACf,GAAE,OAAO,CAAC,CAAA;iBACd;gBAED,OAAO,OAAO,CAAC;aAClB;YACD,OAAO,IAAI,CAAC;SACf;;;;;;;;QAEO,gDAAgB;;;;;;;QAAxB,UAAyB,MAAM,EAAE,YAAY,EAAE,KAAK;;YAChD,IAAI,CAAC,MAAM,WAAE,GAAC,YAAY,IAAG,KAAK,OAAG,MAAM,CAAC,CAAC;SAChD;;;;;;QAED,6CAAa;;;;;QAAb,UAAc,MAAM,EAAE,aAAa;YAC/B,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,MAAM,EAAE,aAAa,CAAC,CAAC;YACrD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SACxC;;;;;;QAED,6CAAa;;;;;QAAb,UAAc,MAAM,EAAE,UAAe;;gBAC3B,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,MAAM,CAAC;YACrD,IAAI,CAAC,UAAU,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE;gBACnC,OAAO,KAAK,CAAC;aAChB;YAED,IAAI,OAAO,UAAU,KAAK,QAAQ,EAAE;gBAChC,OAAO,CAAC,CAAC,UAAU,CAAC,IAAI;;;;gBAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,IAAI,KAAK,UAAU,CAAC,IAAI,EAAE,GAAA,EAAC,CAAC;aAC/D;iBAAM;gBACH,IAAI,OAAO,UAAU,KAAK,QAAQ,EAAE;;wBAC1B,aAAW,GAAG,EAAE;oBACtB,UAAU,CAAC,OAAO;;;;oBAAC,UAAA,CAAC;wBAChB,IAAI,CAAC,CAAC,IAAI,EAAE;;gCACF,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;;4BAElC,KAAI,IAAI,CAAC,IAAI,UAAU,EAAE;gCACrB,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,UAAU,CAAC,CAAC,CAAC,EAAE;oCAC9B,aAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iCACvB;6BACJ;yBACJ;qBACJ,EAAC,CAAC;oBAEH,OAAO,aAAW,CAAC;iBACtB;aACJ;SACJ;;;;QAED,8CAAc;;;QAAd;YACI,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,kBAAkB,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;SAChF;;;;QAED,4CAAY;;;QAAZ;YACI,IAAI,IAAI,CAAC,WAAW,EAAE;gBAClB,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,eAAe,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;aAC7E;iBAAM;gBACH,OAAOA,OAAE,CAAC,EAAE,CAAC,CAAC;aACjB;SACJ;QACL,4BAAC;KAAA,IAAA;;;;;;;QCzGG,4BAAoB,EAAqB;YAArB,OAAE,GAAF,EAAE,CAAmB;YArBhC,sBAAiB,GAAG,EAAE,CAAC;YAEtB,eAAU,GAAG,IAAIf,iBAAY,EAAE,CAAC;YAChC,gBAAW,GAAG,IAAIA,iBAAY,EAAE,CAAC;YACjC,mBAAc,GAAG,IAAIA,iBAAY,EAAE,CAAC;YAE9C,eAAU,GAAG;gBACT,IAAI,EAAE,EAAE;gBACR,SAAS,EAAE,KAAK;gBAChB,IAAI,EAAE,SAAS;gBACf,MAAM,EAAE,EAAE;aACb,CAAA;YAED,eAAU,GAAG,SAAS,CAAC;YAEvB,sBAAiB,GAAG,KAAK,CAAC;YAC1B,mBAAc,GAAG,KAAK,CAAC;YAEvB,cAAS,GAAG,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,EAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,EAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAC,CAAC,CAAC;YAC9H,kBAAa,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;SAEP;;;;QAE9C,qCAAQ;;;QAAR;SACC;;;;;QAED,kCAAK;;;;QAAL,UAAM,MAAM;YACR,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;SAC1B;;;;;QAED,mCAAM;;;;QAAN,UAAO,MAAM;YACT,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SAC1C;;;;;QAED,0CAAa;;;;QAAb,UAAc,MAAM;YAChB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;SACtB;;;;;QAED,0CAAa;;;;QAAb,UAAc,MAAM;YAChB,IAAI,MAAM,CAAC,UAAU,IAAI,MAAM,CAAC,UAAU,CAAC,MAAM,EAAG;;oBAC5C,MAAM,GAAG,MAAM,CAAC,UAAU,CAAC,GAAG;;;;gBAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,KAAK,GAAA,EAAC;gBAChD,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,MAAM,CAAC;aACnC;SACJ;;;;;;QAED,2CAAc;;;;;QAAd,UAAe,MAAkB,EAAE,GAAG;YAClC,MAAM,CAAC,eAAe,EAAE,CAAC;YACzB,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;YACtB,IAAI,GAAG,KAAK,QAAQ,IAAI,GAAG,KAAK,KAAK,EAAE;gBACnC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,GAAG,EAAE,UAAU,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;aACzE;iBAAM;gBACH,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,GAAG,CAAC;aAC9B;SACJ;;;;;QAED,oCAAO;;;;QAAP,UAAQ,YAA0C;YAA1C,6BAAA,EAAA,iBAAiB,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE;YAC9C,IAAI,CAAC,UAAU,gBAAO,IAAI,CAAC,UAAU,CAAC,CAAC;YACvC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;YACvC,IAAI,CAAC,iBAAiB,GAAG,CAAC,YAAY,CAAC,MAAM,CAAC;YAC9C,IAAI,CAAC,cAAc,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC;YACxC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;SAC3B;;;;;QAED,0CAAa;;;;QAAb,UAAc,MAAM;YAChB,IAAI,MAAM,CAAC,UAAU,IAAG,MAAM,CAAC,UAAU,CAAC,MAAM,EAAE;gBAC9C,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,MAAM,CAAC,UAAU,CAAC,GAAG;;;;gBAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,KAAK,GAAA,EAAC,CAAC;aAChE;iBAAM;gBACH,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,EAAE,CAAC;aAC/B;SACJ;;;;QAED,yCAAY;;;QAAZ;YACI,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,EAAE,CAAC;SAC/B;;oBAlFJI,cAAS,SAAC;wBACP,QAAQ,EAAE,YAAY;wBACtB,q1KAAyC;wBACzC,aAAa,EAAEC,sBAAiB,CAAC,IAAI;qBACxC;;;;oBANQC,sBAAiB;;;6BASrBI,cAAS,SAAC,QAAQ;wCAElBF,UAAK;iCAELC,WAAM;kCACNA,WAAM;qCACNA,WAAM;;QAsEX,yBAAC;KAnFD;;;;;;;QCgCI,6BAAoB,EAAqB,EAAU,SAAwB,EAAU,QAAkB;YAAnF,OAAE,GAAF,EAAE,CAAmB;YAAU,cAAS,GAAT,SAAS,CAAe;YAAU,aAAQ,GAAR,QAAQ,CAAU;YAtB9F,UAAK,GAAG,EAAE,CAAC;YAEV,eAAU,GAAG,IAAIT,iBAAY,EAAE,CAAC;YAChC,gBAAW,GAAG,IAAIA,iBAAY,EAAE,CAAC;YAElC,eAAU,GAAG,IAAI,CAAC;YAS3B,YAAO,GAAG,EAAE,CAAC;YAEb,kBAAa,GAAG,EAAE,CAAC;YAEX,YAAO,GAGX,IAAI,CAAC;SACmG;;;;QAE5G,sCAAQ;;;QAAR;YAAA,iBAkCC;;gBAhCS,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,8BAA8B,CAAC,IAAI,IAAI;;gBACzE,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,8BAA8B,CAAC,IAAI,IAAI;;gBACzE,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,mCAAmC,CAAC,IAAI,IAAI;;gBACjF,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,kCAAkC,CAAC,IAAI,KAAK;;gBACjF,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,6BAA6B,CAAC,IAAI,IAAI;;gBAEvE,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,0BAA0B,CAAC,IAAI,IAAI;;gBACvE,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,2BAA2B,CAAC,IAAI,IAAI;;gBACzE,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,uBAAuB,CAAC,IAAI,IAAI;YAGvE,IAAI,CAAC,OAAO,GAAG;;gBAEX,EAAC,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,EAAE,SAAS;;;;oBAAE,UAAC,CAAC;wBACrD,OAAO,oBAAoB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;qBACvE,CAAA,EAAC;gBACF,EAAC,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE,EAAE,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS;;;;;oBAAE,UAAC,CAAC,EAAE,CAAC;wBAC1F,QAAO,CAAC;4BACJ,KAAK,QAAQ;gCACT,OAAO,kDAAkD,GAAE,SAAS,GAAE,SAAS,CAAC;4BACpF,KAAK,KAAK;gCACN,OAAO,+CAA+C,GAAE,MAAM,GAAE,SAAS,CAAC;4BAC9E,KAAK,SAAS,CAAC;4BACf;gCACI,OAAO,mDAAmD,GAAE,UAAU,GAAE,SAAS,CAAC;yBACzF;qBACJ,CAAA,EAAC;gBACF,EAAC,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,EAAE,EAAE,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,CAAC,eAAe,EAAE;gBACtH,EAAC,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,EAAE,EAAC;gBACjD,EAAC,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,GAAE;aACxF,CAAC;SAEL;;;;;QAED,qCAAO;;;;QAAP,UAAQ,MAAM;YACV,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;SAC1B;;;;;QAED,2CAAa;;;;QAAb,UAAc,MAAM;YAChB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAE,IAAI,CAAC,OAAO,CAAC,CAAC;SACxC;;;;;QAED,2CAAa;;;;QAAb,UAAc,MAAM;YAChB,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;SAC1B;;;;;;QAED,wCAAU;;;;;QAAV,UAAW,MAAW,EAAE,GAAG;;gBACjB,CAAC,GAAG,MAAM,IAAI,GAAG;;YAEvB,IAAI,CAAC,KAAK,CAAC,OAAO;;;;YAAC,UAAA,CAAC;gBAChB,CAAC,CAAC,SAAS,GAAG,KAAK,CAAC;gBACpB,IAAI,CAAC,CAAC,EAAE,KAAK,GAAG,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,EAAE;oBAC9B,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC;iBACnB;aACJ,EAAC,CAAC;YAEH,IAAI,CAAC,KAAK,YAAO,IAAI,CAAC,KAAK,CAAC,CAAC;;gBAEvB,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI;;;;YAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,SAAS,GAAA,EAAC;YACrD,IAAI,WAAW,EAAE;gBACb,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,IAAI,EAAE,CAAC;gBAClC,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,WAAW,CAAC,EAAE,CAAC;aAC3C;;SAEJ;;;;;;QAED,yCAAW;;;;;QAAX,UAAY,MAAM,EAAE,GAAG;YACnB,IAAI,CAAC,IAAI,CAAC,aAAa,KAAK,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAK,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,IAAE,SAAS,KAAK,IAAI,CAAC,UAAU,EAAE;gBACtG,MAAM,CAAC,eAAe,EAAE,CAAC;;oBACnB,IAAE,GAAG,GAAG,CAAC,OAAO,CAAC,EAAE;gBACzB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM;;;;gBAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,EAAE,KAAK,IAAE,GAAA,EAAC,CAAC;gBACjD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,IAAI,EAAE,CAAC;gBAClC,IAAI,CAAC,OAAO,CAAC,UAAU,aAAQ,IAAI,CAAC,OAAO,CAAC,UAAU,IAAI,EAAE,IAAG,IAAE,EAAC,CAAC;gBACnE,IAAI,IAAE,KAAK,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE;oBAC/B,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,EAAE,CAAC;oBAC5B,OAAO,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;iBACjC;aACJ;SACJ;;oBA/GJI,cAAS,SAAC;wBACP,QAAQ,EAAE,aAAa;wBACvB,owEAAyC;qBAC5C;;;;oBARQE,sBAAiB;oBAEjBJ,sBAAa;oBAF2CK,aAAQ;;;4BAYpEC,UAAK;iCAELC,WAAM;kCACNA,WAAM;iCAEND,UAAK;6BAGLE,cAAS,SAAC,QAAQ;iCAClBA,cAAS,SAAC,YAAY;sCACtBA,cAAS,SAAC,iBAAiB;6BAC3BA,cAAS,SAAC,QAAQ;yBAClBA,cAAS,SAAC,IAAI;;QA6FnB,0BAAC;KAhHD;;;;;;;;;;ICJA,IAAa,4BAA4B,GAAG;QACxC,EAAE,EAAE;YACA,mBAAmB,EAAE;gBACjB,MAAM,EAAE;oBACJ,MAAM,EAAE,4EAA4E;oBACpF,GAAG,EAAE,kFAAkF;iBAC1F;gBACD,GAAG,EAAE;oBACD,KAAK,EAAE,mDAAmD;oBAC1D,GAAG,EAAE,yCAAyC;oBAC9C,GAAG,EAAE,0CAA0C;oBAC/C,EAAE,EAAE,8BAA8B;iBACrC;gBACD,QAAQ,EAAE;oBACN,UAAU,EAAE,6BAA6B;oBACzC,GAAG,EAAE,yCAAyC;oBAC9C,GAAG,EAAE,6CAA6C;oBAClD,EAAE,EAAE,+BAA+B;oBACnC,GAAG,EAAE,gCAAgC;iBACxC;gBACD,cAAc,EAAE;oBACZ,KAAK,EAAE,kBAAkB;oBACzB,MAAM,EAAE,MAAM;oBACd,QAAQ,EAAE,MAAM;iBACnB;aACJ;YACD,iBAAiB,EAAE;gBACf,SAAS,EAAE,aAAa;gBACxB,eAAe,EAAE,wDAAwD;gBACzE,UAAU,EAAE,SAAS;gBACrB,UAAU,EAAE,oEAAoE;gBAChF,SAAS,EAAE,QAAQ;gBACnB,SAAS,EAAE,oDAAoD;gBAC/D,MAAM,EAAE,cAAc;gBACtB,MAAM,EAAE,uFAAuF;gBAC/F,UAAU,EAAE,SAAS;gBACrB,UAAU,EAAE,6EAA6E;gBACzF,SAAS,EAAE,eAAe;gBAC1B,SAAS,EAAE,SAAS;gBACpB,QAAQ,EAAE,QAAQ;gBAClB,KAAK,EAAE,KAAK;gBACZ,SAAS,EAAE,SAAS;gBACpB,SAAS,EAAE,gBAAgB;gBAC3B,SAAS,EAAE,QAAQ;gBACnB,MAAM,EAAE,SAAS;gBACjB,eAAe,EAAE,yBAAyB;gBAC1C,UAAU,EAAE,aAAa;gBACzB,MAAM,EAAE,oBAAoB;gBAC5B,OAAO,EAAG;oBACN,IAAI,EAAE,MAAM;oBACZ,IAAI,EAAE,MAAM;oBACZ,SAAS,EAAE,WAAW;oBACtB,QAAQ,EAAE,SAAS;oBACnB,GAAG,EAAE,QAAQ;iBAChB;aACJ;SACJ;QACD,QAAQ,EAAE;YACN,mBAAmB,EAAE;gBACjB,MAAM,EAAE;oBACJ,MAAM,EAAE,sBAAsB;oBAC9B,GAAG,EAAE,sBAAsB;iBAC9B;gBACD,GAAG,EAAE;oBACD,KAAK,EAAE,cAAc;oBACrB,GAAG,EAAE,YAAY;oBACjB,GAAG,EAAE,YAAY;oBACjB,EAAE,EAAE,UAAU;iBACjB;gBACD,QAAQ,EAAE;oBACN,UAAU,EAAE,UAAU;oBACtB,GAAG,EAAE,YAAY;oBACjB,GAAG,EAAE,YAAY;oBACjB,EAAE,EAAE,UAAU;oBACd,GAAG,EAAE,QAAQ;iBAChB;gBACD,cAAc,EAAE;oBACZ,KAAK,EAAE,OAAO;oBACd,MAAM,EAAE,IAAI;oBACZ,QAAQ,EAAE,IAAI;iBACjB;aACJ;YACD,iBAAiB,EAAE;gBACf,SAAS,EAAE,MAAM;gBACjB,eAAe,EAAE,oBAAoB;gBACrC,UAAU,EAAE,MAAM;gBAClB,UAAU,EAAE,oBAAoB;gBAChC,SAAS,EAAE,MAAM;gBACjB,SAAS,EAAE,sBAAsB;gBACjC,MAAM,EAAE,MAAM;gBACd,MAAM,EAAE,wBAAwB;gBAChC,UAAU,EAAE,MAAM;gBAClB,UAAU,EAAE,kBAAkB;gBAC9B,SAAS,EAAE,MAAM;gBACjB,SAAS,EAAE,IAAI;gBACf,QAAQ,EAAE,IAAI;gBACd,KAAK,EAAE,IAAI;gBACX,SAAS,EAAE,IAAI;gBACf,SAAS,EAAE,MAAM;gBACjB,SAAS,EAAE,IAAI;gBACf,MAAM,EAAE,KAAK;gBACb,eAAe,EAAE,OAAO;gBACxB,UAAU,EAAE,MAAM;gBAClB,MAAM,EAAE,IAAI;gBACZ,OAAO,EAAG;oBACN,IAAI,EAAE,IAAI;oBACV,IAAI,EAAE,IAAI;oBACV,SAAS,EAAE,IAAI;oBACf,QAAQ,EAAE,KAAK;oBACf,GAAG,EAAE,IAAI;iBACZ;aACJ;SACJ;QACD,QAAQ,EAAE;YACN,mBAAmB,EAAE;gBACjB,MAAM,EAAE;oBACJ,MAAM,EAAE,sBAAsB;oBAC9B,GAAG,EAAE,sBAAsB;iBAC9B;gBACD,GAAG,EAAE;oBACD,KAAK,EAAE,cAAc;oBACrB,GAAG,EAAE,YAAY;oBACjB,GAAG,EAAE,YAAY;oBACjB,EAAE,EAAE,UAAU;iBACjB;gBACD,QAAQ,EAAE;oBACN,UAAU,EAAE,UAAU;oBACtB,GAAG,EAAE,YAAY;oBACjB,GAAG,EAAE,YAAY;oBACjB,EAAE,EAAE,UAAU;oBACd,GAAG,EAAE,QAAQ;iBAChB;gBACD,cAAc,EAAE;oBACZ,KAAK,EAAE,OAAO;oBACd,MAAM,EAAE,IAAI;oBACZ,QAAQ,EAAE,IAAI;iBACjB;aACJ;YACD,iBAAiB,EAAE;gBACf,SAAS,EAAE,MAAM;gBACjB,eAAe,EAAE,oBAAoB;gBACrC,UAAU,EAAE,MAAM;gBAClB,UAAU,EAAE,oBAAoB;gBAChC,SAAS,EAAE,MAAM;gBACjB,SAAS,EAAE,sBAAsB;gBACjC,MAAM,EAAE,MAAM;gBACd,MAAM,EAAE,wBAAwB;gBAChC,UAAU,EAAE,MAAM;gBAClB,UAAU,EAAE,kBAAkB;gBAC9B,SAAS,EAAE,MAAM;gBACjB,SAAS,EAAE,IAAI;gBACf,QAAQ,EAAE,IAAI;gBACd,KAAK,EAAE,IAAI;gBACX,SAAS,EAAE,IAAI;gBACf,SAAS,EAAE,MAAM;gBACjB,SAAS,EAAE,IAAI;gBACf,MAAM,EAAE,KAAK;gBACb,eAAe,EAAE,OAAO;gBACxB,UAAU,EAAE,MAAM;gBAClB,MAAM,EAAE,IAAI;gBACZ,OAAO,EAAG;oBACN,IAAI,EAAE,IAAI;oBACV,IAAI,EAAE,IAAI;oBACV,SAAS,EAAE,IAAI;oBACf,QAAQ,EAAE,KAAK;oBACf,GAAG,EAAE,IAAI;iBACZ;aACJ;SACJ;KACJ;;;;;;;ACtJD,QAAa,oBAAoB,GAAI,IAAIM,mBAAc,CAAC,2CAA2C,CAAC;AAEpG;QAuCI,iCAAoB,QAAkB,EAAU,QAAwB,EACpD,QAAyB,EAAU,SAAoB,EACvD,SAAwB;YAFxB,aAAQ,GAAR,QAAQ,CAAU;YAAU,aAAQ,GAAR,QAAQ,CAAgB;YACpD,aAAQ,GAAR,QAAQ,CAAiB;YAAU,cAAS,GAAT,SAAS,CAAW;YACvD,cAAS,GAAT,SAAS,CAAe;YAtCpC,iBAAY,GAAG,qBAAqB,CAAC;YACrC,uBAAkB,GAAG,gBAAgB,CAAC;YACtC,6BAAwB,GAAG,WAAW,CAAC;YACvC,kBAAa,GAAG,0BAA0B,CAAC;YAE3C,qBAAgB,GAAG,IAAI,CAAC;YAExB,cAAS,GAAQ,EAAE,CAAC;YAcpB,aAAQ,GAAuC,IAAI,CAAC;YACpD,qBAAgB,GAA8B,IAAI,CAAC;YAEnD,WAAM,GAAG,KAAK,CAAC;YACf,QAAG,GAA6B,IAAI,CAAC;YACrC,QAAG,GAAmB,IAAI,CAAC;YAC3B,2BAAsB,GAAiB,IAAI,CAAC;YAM5C,sBAAiB,GAAG,IAAI,CAAC;YACzB,aAAQ,GAAiB,IAAI,CAAC;YAMlC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAACC,6BAAwB,CAAC,CAAC;YACvD,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAACC,mBAAc,CAAC,CAAC;YAC7C,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAACP,sBAAa,EAAE,IAAI,CAAC,CAAC;YAC5D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAACQ,qBAAY,EAAE,IAAI,CAAC,CAAC;YACtD,IAAI,CAAC,aAAa,GAAG,IAAI,qBAAqB,EAAE,CAAC;YAEjD,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,4BAA4B,CAAC,CAAC;SAC9D;QAtCD,sBAAI,oDAAe;;;;YAAnB;gBACI,OAAO,IAAI,CAAC,gBAAgB,CAAC;aAChC;;;;;YAED,UAAoB,OAAO;gBACvB,IAAI,CAAC,gBAAgB,GAAG,OAAO,CAAC;gBAEhC,IAAI,IAAI,CAAC,aAAa,EAAE;oBACpB,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;iBAC9C;aACJ;;;WARA;;;;;QAuCD,yCAAO;;;;QAAP,UAAQ,EAAW;YACf,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACf,IAAI,EAAE,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE;oBACzB,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;oBACzB,OAAO,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;iBAC5B;qBAAM;oBACH,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAE;wBACpC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;qBACxB;iBACJ;aACJ;YACD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,IAAI,CAAC,mBAAmB,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;SACtC;;;;;;;QAEO,+CAAa;;;;;;QAArB,UAAsB,GAAG,EAAE,IAAa;YAAb,qBAAA,EAAA,aAAa;YACpC,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACf,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;oBACrB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;iBAC5B;qBAAM;oBACH,OAAO,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;iBACtB;aACJ;SACJ;;;;;QAED,sDAAoB;;;;QAApB,UAAqB,EAAqB;YACtC,IAAI,CAAC,EAAE,EAAE;gBACL,IAAI,CAAC,aAAa,CAAC,gDAAgD,CAAC,CAAA;gBACpE,OAAO;aACV;;gBACK,EAAE,GAAG,EAAE,CAAC,EAAE;YAChB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,IAAI,EAAE,CAAC;YACpC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE;gBACpB,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;aAC1B;SACJ;;;;;QAED,iDAAe;;;;QAAf,UAAgB,IAAY;YACxB,OAAO,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;SACrD;;;;;;;;;QAGO,sDAAoB;;;;;;;QAA5B,UAA6B,UAA+B,EAAE,QAA+B;YACzF,IAAI,UAAU,IAAI,QAAQ,EAAE;;oBAClB,gBAAgB,GAAG,UAAU,CAAC,oBAAoB,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,oBAAoB,CAAC,GAAG,EAAE;gBAC3G,IAAI,gBAAgB,EAAE;oBAClB,IAAK,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;;4BACtC,cAAc,GAAG,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,EAAE;wBACtE,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,cAAc,EAAE,QAAQ,CAAC,CAAC;qBACvF;yBAAM;wBACH,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAI,QAAQ,CAAC;qBACzD;oBACD,UAAU,CAAC,oBAAoB,GAAG,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;iBACtE;aACJ;SACJ;;;;;;;;QAGD,gEAA8B;;;;;;QAA9B,UAA+B,IAAY,EAAE,QAA+B;;gBAClE,UAAU,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC;YACjD,IAAI,CAAC,oBAAoB,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;SACnD;;;;;;;;QAGD,qDAAmB;;;;;;QAAnB,UAAoB,IAAY,EAAE,UAAe;;gBACvC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC;YACvD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,IAAI,EAAE,CAAC;YACpD,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,GAAG,UAAU,CAAC;SACjD;;;;;;;QAED,qDAAmB;;;;;QAAnB,UAAoB,IAAY;;gBACtB,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC;YACvD,OAAO,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC;SAC1E;;;;QAED,gDAAc;;;QAAd;YACI,OAAO;gBACH,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,8BAA8B,CAAC,EAAE;gBAChF,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,kCAAkC,CAAC,EAAE;gBACxF,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,iCAAiC,CAAC,EAAE;aACzF,CAAC;SACL;;;;;;;QAED,4CAAU;;;;;;QAAV,UAAW,YAA+B,EAAE,QAAuB,EAAE,kBAAwC;YAA7G,iBAuJC;;gBAtJS,OAAO,GAAG,IAAI,CAAC,sBAAsB,CAAC,YAAY,CAAC,OAAO,CAAC;YACjE,OAAO,CAAC,CAAC,CAAC,YAAO,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM;;;;YAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,KAAK,KAAK,YAAY,CAAC,iBAAiB,GAAA,EAAC,CAAC,CAAC;;gBAE1F,WAAW,GAAG,IAAI,CAAC,cAAc,EAAE;YAEzC,IAAI,IAAI,CAAC,GAAG,EAAE;;oBACJ,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,uBAAuB,CAAC,sBAAsB,CAAC;;oBACvE,WAAS,GAAG,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;gBAChD,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,WAAS,CAAC,QAAQ,CAAC,CAAC;gBACxC,WAAS,CAAC,QAAQ,CAAC,OAAO,GAAG,OAAO,CAAC;gBACrC,WAAS,CAAC,QAAQ,CAAC,UAAU,GAAG,WAAW,CAAC;gBAC5C,WAAS,CAAC,QAAQ,CAAC,YAAY,GAAG,YAAY,CAAC;gBAE/C,IAAI,QAAQ,CAAC,aAAa,CAAC,eAAe,CAAC,EAAE;oBACzC,WAAS,CAAC,QAAQ,CAAC,GAAG,GAAG,EAAE,CAAC;iBAC/B;gBAED,WAAS,CAAC,QAAQ,CAAC,YAAY,GAAG,YAAY,CAAC,YAAY,CAAC;gBAC5D,IAAI,YAAY,CAAC,YAAY,EAAE;oBAC3B,IAAI,QAAQ,EAAE;wBACV,IAAI,kBAAkB,EAAE;4BACpB,IAAI,CAAC,oBAAoB,CAAC,kBAAkB,EAAE,QAAQ,CAAC,CAAC;4BACxD,WAAS,CAAC,QAAQ,CAAC,iBAAiB,GAAG,kBAAkB,CAAC;yBAC7D;6BAAM;4BACH,WAAS,CAAC,QAAQ,CAAC,iBAAiB,GAAG,IAAI,CAAC;4BAC5C,WAAS,CAAC,QAAQ,CAAC,QAAQ,GAAG,QAAQ,CAAC;yBAC1C;qBACJ;yBAAM;;4BACG,kBAAkB,GAAG,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,EAAE,CAAC;wBACpE,IAAI,CAAC,iBAAiB,GAAG,kBAAkB,CAAC;wBAC5C,WAAS,CAAC,QAAQ,CAAC,iBAAiB,GAAG,kBAAkB,CAAC;qBAC7D;iBACJ;gBAED,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,WAAS,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;gBAE5D,WAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAC1BC,mBAAS;;;gBAAE;oBACP,IAAI,WAAS,EAAE;wBACX,WAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,GAAG,QAAQ,CAAC;wBAClE,OAAOC,UAAK,CAAC,GAAG,CAAC,CAAC;qBACrB;iBACJ,EAAC,CACL,CAAC,SAAS;;;gBAAC;oBACR,WAAS,CAAC,QAAQ,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC;oBAC1C,WAAS,CAAC,OAAO,EAAE,CAAC;oBACpB,WAAS,GAAG,IAAI,CAAC;oBACjB,IAAI,KAAI,CAAC,sBAAsB,EAAE;wBAC7B,KAAI,CAAC,sBAAsB,CAAC,WAAW,EAAE,CAAC;qBAC7C;;wBAEK,iBAAiB,GAAG,KAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,EAAE,CAAC;oBACnE,IAAI,CAAC,CAAC,KAAI,CAAC,iBAAiB,KAAK,iBAAiB,IAAI,iBAAiB,CAAC,EAAE,KAAK,KAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC,MAAM,iBAAiB,IAAG,iBAAiB,CAAC,oBAAoB,CAAC,EAAE;;4BAClK,kBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,oBAAoB,CAAC,CAAC,KAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;wBACpG,IAAI,kBAAgB,EAAE;4BAClB,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO;;;;4BAAC,UAAA,CAAC;gCAChB,CAAC,CAAC,OAAO,GAAG,kBAAgB,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;6BAClE,EAAC,CAAC;yBACN;qBACJ;iBAEJ,EAAC,CAAC;gBAGH,WAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS;;;;gBAAC,UAAC,EAAc;wBAAZ,0BAAU;oBAC/C,IAAI,UAAU,IAAI,UAAU,CAAC,MAAM,EAAC;wBAChC,KAAI,CAAC,oBAAoB,CAAC,WAAS,CAAC,QAAQ,CAAC,iBAAiB,EAAE,EAAC,WAAW,EAAE,UAAU,EAAC,CAAC,CAAC;qBAC9F;oBACD,KAAI,CAAC,YAAY,CAAC,YAAY,EAAE,IAAI,EAAE,WAAS,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC;iBAC/E,EAAC,CAAC;gBAEH,WAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS;;;;gBAAE,UAAC,CAAM;oBACxC,CAAC,CAAC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC;oBACzB,IAAI,KAAI,CAAC,MAAM,EAAE;wBACb,OAAO;qBACV;oBACD,IAAI,CAAC,KAAI,CAAC,MAAM,EAAE;wBAEd,KAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,EAAE,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC;wBAG3D,KAAI,CAAC,cAAc,CAAC,CAAC,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC;qBAClD;iBACJ,EAAC,CAAC;gBAEH,WAAS,CAAC,QAAQ,CAAC,YAAY,CAAC,SAAS;;;;gBAAC,UAAC,aAAuB;oBAC9D,KAAI,CAAC,8BAA8B,CAAC,YAAY,CAAC,EAAE,EAAE,EAAC,WAAW,EAAE,aAAa,EAAC,CAAC,CAAA;iBACrF,EAAC,CAAC;;gBAGH,WAAS,CAAC,QAAQ,CAAC,YAAY,CAAC,SAAS;;;;gBAAC,UAAC,CAAM;oBAC7C,KAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,CAAC,EAAE,WAAS,CAAC,CAAC;iBACxD,EAAC,CAAC;gBAEH,WAAS,CAAC,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,YAAY,CAAC,EAAE,EAAE,MAAM,CAAC,IAAI,EAAE,CAAC;;gBAGhG,WAAS,CAAC,QAAQ,CAAC,cAAc,CAAC,SAAS;;;gBAAC;oBACxC,KAAI,CAAC,aAAa,CAAC,aAAa,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,IAAI,CAClDD,mBAAS;;;;oBAAC,UAAC,CAAC;wBACR,OAAO,KAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC,IAAI,CAC3CE,aAAG;;;;wBAAC,UAAC,IAAqB;4BACtB,kBACI,IAAI,EAAE,CAAC,IACJ,IAAI,EACV;yBACJ,EAAC,CACL,CAAA;qBACJ,EAAC,CACL,CAAC,SAAS;;;;oBAAC,UAAC,CAAM;wBACf,KAAI,CAAC,aAAa,CAAC,aAAa,CAAC,YAAY,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;wBAChE,KAAI,CAAC,oBAAoB,CAAC,YAAY,EAAEC,kBAAS,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,WAAS,CAAC,CAAC;qBAClF,EAAC,CAAC;iBACN,EAAC,CAAC;gBAEH,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,SAAS;;;;gBAAC,UAAC,IAAS;oBAC7E,WAAS,CAAC,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC;oBAErC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;wBACvB,KAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;wBAChD,OAAO;qBACV;;wBAEK,iBAAiB,GAAG,KAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,EAAE,CAAC;oBACnE,IAAI,iBAAiB,EAAE;;4BACf,aAAa,GAAG,IAAI,CAAC,IAAI;;;;wBAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,EAAE,KAAK,iBAAiB,CAAC,EAAE,GAAA,EAAC;wBACjE,IAAI,CAAC,aAAa,EAAE;4BAChB,aAAa,GAAG,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;4BAC5C,KAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,EAAE,EAAE,aAAa,IAAI,IAAI,CAAC,CAAC;yBACpE;wBAED,WAAS,CAAC,QAAQ,CAAC,iBAAiB,GAAG,aAAa,CAAC;qBACxD;iBACJ,EAAC,CAAC;;;;;gBAOH,WAAS,CAAC,QAAQ,CAAC,aAAa,CAAC,SAAS;;;;gBAAC,UAAC,CAAM;oBAC9C,KAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;iBAC9B,EAAC,CAAA;gBAEF,WAAS,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC;gBAEnC,WAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;gBAE/D,OAAO,WAAS,CAAC;aACpB;SACJ;;;;;;QAGD,sCAAI;;;;;QAAJ,UAAK,YAA+B,EAAE,IAAmB;YACrD,IAAI,CAAC,oBAAoB,CAAC,YAAY,CAAC,CAAC;YAExC,IAAI,YAAY,CAAC,gBAAgB,EAAE;gBAC/B,OAAO,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;aACxC;iBAAM;gBACH,OAAO,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;aAChD;SACJ;;;;;;;;QAEO,8CAAY;;;;;;;QAApB,UAAqB,YAA+B,EAAE,IAAmB,EAAE,kBAAwC;YAAnH,iBAmHC;;gBAlHO,gBAAgB,GAAG,IAAI;;gBACrB,eAAe,GAAG,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC;YAC3D,IAAI,eAAe,KAAK,IAAI,EAAE;;;gBAG1B,gBAAgB,GAAG,KAAK,CAAC;aAC5B;;gBAEK,iBAAiB,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC;;gBACrD,iBAAiB;;;YAAG;gBACtB,IAAI,iBAAiB,EAAE;oBACnB,OAAO,CAAC,CAAC;iBACZ;qBAAM;oBACH,IAAI,gBAAgB,EAAE;wBAClB,OAAO,CAAC,CAAC;qBACZ;yBAAM;wBACH,OAAO,CAAC,CAAC,CAAC;qBACb;iBACJ;aACJ,CAAA;;gBACK,cAAc,GAAG,iBAAiB,EAAE;YAE1C,IAAI,cAAc,KAAK,CAAC,CAAC,EAAE;gBACvB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;gBAC1C,OAAO;aACV;;gBAEK,OAAO,GAAG,IAAI,CAAC,sBAAsB,CAAC,YAAY,CAAC,OAAO,CAAC;;;gBAG7D,eAAe,GAAiB,IAAI;YACxC,IAAI,kBAAkB,IAAI,kBAAkB,CAAC,oBAAoB,EAAE;gBAC/D,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;gBAE/F,IAAI,eAAe,CAAC,YAAY,IAAI,eAAe,CAAC,YAAY,CAAC,MAAM,EAAE;oBACrE,OAAO,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG;;;;oBAAC,UAAC,GAAG;;4BACtB,IAAI,GAAG,eAAe,CAAC,YAAY,CAAC,IAAI;;;;wBAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,KAAK,KAAK,GAAG,CAAC,KAAK,GAAA,EAAC;wBAC1E,IAAI,IAAI,EAAE;4BACN,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;yBAClC;wBACD,OAAO,GAAG,CAAC;qBACd,EAAC,CAAC;iBACN;gBAED,IAAI,eAAe,CAAC,WAAW,IAAI,eAAe,CAAC,WAAW,CAAC,MAAM,EAAE;oBACnE,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO;;;;oBAAC,UAAA,CAAC;wBAChB,CAAC,CAAC,OAAO,GAAG,eAAe,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;qBACjE,EAAC,CAAC;iBACN;aACJ;YAGD,OAAO,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM;;;;YAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,KAAK,KAAK,YAAY,CAAC,iBAAiB,GAAA,EAAC,CAAC;;gBACrF,QAAQ,GAAG,IAAI,CAAC,uBAAuB,CAACA,kBAAS,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC;;gBACjE,mBAAmB,GAAG,IAAI,CAAC,uBAAuB,CAACA,kBAAS,CAAC,OAAO,CAAC,EAAE,KAAK,CAAC;YACnF,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,CAAC;;gBAEzC,QAAQ,GAAG,IAAI;;gBAEb,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,sBAAsB,CAAC,IAAI,IAAI;;gBAChE,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,0BAA0B,CAAC,IAAI,IAAI;;gBACxE,SAAS,GAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,yBAAyB,CAAC,IAAI,IAAI;;gBAEvE,WAAW,GAAG;gBAChB,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,EAAE,UAAU,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM;gBACzD,YAAY,EAAE;oBACV,OAAO,SAAA;oBACP,YAAY,EAAE,QAAQ;oBACtB,YAAY,EAAE,mBAAmB;oBACjC,YAAY,cAAA;oBACZ,gBAAgB,EAAE,gBAAgB;oBAClC,mBAAmB,EAAE,iBAAiB;oBACtC,cAAc,gBAAA;oBACd,UAAU,EAAE,eAAe;iBAC9B;gBACD,WAAW,EAAE,KAAK;aACrB;;gBACK,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,IAAI,EAAE,CAAC;YAExD,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,yBAAyB,EAAE,SAAS,CAAC,CAAC;;gBAC9D,QAAQ,sBAAG,QAAQ,CAAC,OAAO,EAA6B;YAC9D,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC;YAC5B,QAAQ,CAAC,QAAQ,GAAG,QAAQ,CAAC;YAC7B,QAAQ,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;YAC7C,QAAQ,CAAC,mBAAmB,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;YAEjE,QAAQ,CAAC,YAAY,CAAC,SAAS;;;;YAAC,UAAC,CAAC;gBAC9B,CAAC,CAAC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACzB,IAAI,KAAI,CAAC,MAAM,EAAE;oBACb,OAAO;iBACV;gBACD,IAAI,CAAC,KAAI,CAAC,MAAM,EAAE;oBACd,IAAI,kBAAkB,EAAE;wBACpB,KAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,EAAE,EAAE,kBAAkB,CAAC,CAAC;qBACjE;oBACD,KAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC;iBACzD;aACJ,EAAC,CAAC;YAEH,QAAQ,CAAC,YAAY,CAAC,SAAS;;;;YAAC,UAAC,CAAC;gBAC9B,QAAQ,CAAC,KAAK,EAAE,CAAC;aACpB,EAAC,CAAC;;YAGH,QAAQ,CAAC,OAAO,CAAC,SAAS;;;;YAAC,UAAC,CAAC;gBACzB,QAAQ,CAAC,KAAK,EAAE,CAAC;;oBACX,QAAQ,GAAG,QAAQ,CAAC,OAAO;gBACzB,IAAA,4BAAQ,EAAE,kCAAW,EAAE,oCAAY,EAAE,gCAAU;gBACvD,KAAI,CAAC,UAAU,CAAC,YAAY,EAAE,EAAE,QAAQ,UAAA,EAAE,WAAW,aAAA,EAAE,YAAY,cAAA,EAAE,UAAU,YAAA,EAAE,EAAE,kBAAkB,CAAC,CAAC;aAC1G,EAAC,CAAC;;gBAEG,cAAc,sBAAG,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAA2B;YAC1E,cAAc,CAAC,QAAQ,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,aAAa,CAAC;YAC/D,OAAO,QAAQ,CAAC;SACnB;;;;;;QAIO,kDAAgB;;;;;QAAxB,UAAyB,YAA+B;YACpD,IAAI,YAAY,CAAC,SAAS,IAAI,IAAI,CAAC,oBAAoB,CAAC,YAAY,CAAC,EAAE;gBACnE,OAAO,IAAI,CAAC;aACf;iBAAM;gBACH,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,YAAY,CAAC,EAAE;oBAC1C,OAAO,IAAI,CAAC,kBAAkB,CAAC;iBAClC;qBAAM,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE;oBAChC,OAAO,IAAI,CAAC,YAAY,CAAC;iBAC5B;aACJ;SACJ;;;;;;QAEO,sDAAoB;;;;;QAA5B,UAA6B,YAA+B;;gBAClD,gBAAgB,GAAG,YAAY,CAAC,WAAW,CAAC,MAAM;;;;;YAAC,UAAC,CAAC,EAAE,CAAC;gBAC1D,IAAI,CAAC,CAAC,QAAQ,EAAE;oBACZ,OAAO,CAAC,GAAG,CAAC,CAAC;iBAChB;gBACD,OAAO,CAAC,CAAC;aACZ,GAAE,CAAC,CAAC;YAEL,OAAO,gBAAgB,GAAG,CAAC,CAAC;SAC/B;;;;;;QAEO,+CAAa;;;;;QAArB,UAAsB,IAAuB;;gBACnC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC;YACpC,IAAI,IAAI,EAAE;gBACN,OAAO,IAAI,CAAC,wBAAwB,CAAC;aACxC;YACD,OAAO,IAAI,CAAC;SACf;;;;;;;;;;QAEO,2CAAS;;;;;;;;;QAAjB,UAAkB,IAAI,EAAE,QAAQ,EAAE,aAAa,EAAE,QAAQ,EAAE,OAAe;YAA1E,iBAgCC;YAhC0D,wBAAA,EAAA,eAAe;;gBAChE,SAAS,GAAG,EAAE;;gBAChB,MAAM,GAAG,aAAa;YAC1B,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;gBACjB,OAAQ,EAAE,CAAC;aACd;YAED,IAAI,CAAC,QAAQ,CAAC,CAAC,KAAK,EAAE,CAAC,OAAO;;;;YAAC,UAAA,OAAO;gBAClC,MAAM,GAAG,MAAM,GAAG,OAAO,CAAC,OAAO,CAAC;gBAClC,IAAK,MAAM,IAAI,QAAQ,EAAG;oBACtB,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;iBAC3B;aACJ,EAAC,CAAC;YAEH,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC;YAE3C,OAAO,SAAS,CAAC,GAAG;;;;;YAAC,UAAC,CAAC,EAAE,CAAC;;oBAClB,CAAC,GAAQ;oBACT,IAAI,EAAE,CAAC;oBACP,UAAU,EAAE,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,IAAI;iBAC5C;gBAED,IAAI,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,OAAO,GAAG,CAAC,EAAE;oBAC5B,CAAC,GAAG;wBACA,IAAI,EAAE,CAAC;wBACP,UAAU,EAAE,KAAK;wBACjB,QAAQ,EAAE,IAAI;wBACd,QAAQ,EAAE,KAAI,CAAC,SAAS,CAAC,IAAI,EAAE,QAAQ,GAAG,CAAC,EAAE,CAAC,EAAG,CAAC,CAAC,OAAO,CAAC;qBAC9D,CAAC;iBACL;gBACD,OAAO,CAAC,CAAC;aACZ,EAAC,CAAC;SACN;;;;;;QACD,yDAAuB;;;;;QAAvB,UAAwB,IAAoB,EAAE,OAAe;YAA7D,iBAmCC;YAnC6C,wBAAA,EAAA,eAAe;;gBACnD,OAAO,GAAG,IAAI,CAAC,GAAG;;;;YAAC,UAAC,CAAM;;oBACtB,EAAE,GAAG,CAAC,CAAC,GAAG;;;;gBAAC,UAAC,CAAC;oBACf,IAAI,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,yBAAyB,CAAC,IAAI,CAAC,CAAC,EAAE;wBAClD,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC;wBAC3B,OAAO,CAAC,CAAC;qBACZ;oBACD,OAAO,IAAI,CAAC;iBACf,EAAC;gBACF,OAAO,EAAE,CAAC,MAAM;;;;gBAAC,UAAA,CAAC,IAAI,OAAA,CAAC,GAAA,EAAC,CAAC;aAC5B,EAAC;YACF,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;gBACtB,OAAO,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG;;;;gBAAC,UAAA,CAAC;oBACnB,OAAO;wBACH,IAAI,EAAE,CAAC;wBACP,UAAU,EAAE,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,IAAI;qBAC5C,CAAC;iBACL,EAAC,CAAC;aACN;iBAAM;gBACH,OAAO,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG;;;;;gBAAC,UAAC,CAAC,EAAE,CAAC;oBACvB,IAAI,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,OAAO,GAAG,CAAC,EAAE;wBAC5B,OAAO;4BACH,IAAI,EAAE,CAAC;4BACP,UAAU,EAAE,KAAK;4BACjB,QAAQ,EAAE,IAAI;4BACd,QAAQ,EAAE,KAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,CAAC;yBAC9D,CAAC;qBACL;yBAAM;wBACH,OAAO;4BACH,IAAI,EAAE,CAAC;4BACP,UAAU,EAAE,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,IAAI;yBAC5C,CAAC;qBACL;iBACJ,EAAC,CAAC;aACN;SACJ;;;;;;QAGO,oDAAkB;;;;;QAA1B,UAA2B,SAAqB;YAAhD,iBASC;YARG,SAAS,CAAC,OAAO;;;;YAAC,UAAC,EAAY;gBAC3B,IAAI,CAAC,EAAE,CAAC,QAAQ,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,EAAE;oBACrC,EAAE,CAAC,UAAU,GAAG,IAAI,CAAC;iBACxB;qBAAM;oBACH,EAAE,CAAC,UAAU,GAAG,KAAK,CAAC;oBACtB,KAAI,CAAC,kBAAkB,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;iBACxC;aACJ,EAAC,CAAC;SACN;;;;;;QAEO,yDAAuB;;;;;QAA/B,UAAgC,YAAiB;;gBAEzC,IAAI,GAAG,YAAY,CAAC,OAAO;;;gBAEzB,QAAQ,GAAG,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,cAAc;YACvD,IAAI,QAAQ,CAAC,YAAY,EAAE;;oBACnB,UAAU,GAAG,QAAQ,CAAC,YAAY;;oBAChC,YAAU,GAAG,EAAE;gBAErB,UAAU,CAAC,OAAO;;;;gBAAC,UAAA,CAAC;oBAChB,IAAI,CAAC,CAAC,KAAK,KAAK,4BAA4B,EAAE;;4BACpC,GAAG,GAAG,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI;;;;wBAAC,UAAC,CAAM,IAAK,OAAA,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,KAAK,GAAA,EAAC;wBACzE,IAAI,GAAG,EAAE;4BACL,YAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;yBACxB;qBACJ;iBACJ,EAAC,CAAC;gBAEH,IAAI,GAAG,CAAC,YAAU,CAAC,CAAC;aACvB;YAED,OAAO,IAAI,CAAC;SACf;;;;;QAED,wDAAsB;;;;QAAtB,UAAuB,IAAS;YAC5B,OAAO,IAAI,CAAC,GAAG;;;;YAAE,UAAC,KAAmB;gBACjC,OAAO,KAAK,CAAC,GAAG;;;;gBAAE,UAAC,CAAa;oBAC5B,IAAI,CAAC,CAAC,KAAK,KAAK,4BAA4B,EAAE;wBAC1C,OAAO;4BACH,KAAK,EAAE,CAAC,CAAC,KAAK;4BACd,KAAK,EAAE,CAAC,CAAC,KAAK;4BACd,OAAO,EAAE,CAAC,CAAC,OAAO;4BAClB,OAAO,EAAE,CAAC,CAAC,OAAO;4BAClB,QAAQ,EAAE,CAAC,CAAC,QAAQ;4BACpB,KAAK,EAAE,CAAC,CAAC,KAAK;4BACd,MAAM,EAAE,CAAC,CAAC,MAAM,IAAI,MAAM;4BAC1B,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,MAAM;4BACxB,OAAO,EAAE,CAAC,CAAC,OAAO;4BAClB,aAAa,EAAE,CAAC,CAAC,aAAa;4BAC9B,WAAW,EAAE,CAAC,CAAC,WAAW;4BAC1B,MAAM,EAAE,CAAC,CAAC,MAAM;4BAChB,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,GAAG;4BACrB,QAAQ,EAAE,CAAC,CAAC,QAAQ,IAAI,QAAQ;yBACnC,CAAC;qBACL;iBACJ,EAAC,CAAC,MAAM;;;;gBAAC,UAAA,CAAC,IAAI,OAAA,CAAC,GAAA,EAAC,CAAC;aACrB,EAAC,CAAC;SACN;;;;;;QAEO,+CAAa;;;;;QAArB,UAAsB,YAAiB;YACnC,IAAI,CAAC,YAAY,EAAE;gBACf,OAAO;aACV;;gBACK,GAAG,GAAG,YAAY,CAAC,GAAG;YAC5B,IAAI,GAAG,EAAE;;oBACC,OAAO,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAC,cAAc;gBAE5C,IAAI,OAAO,CAAC,IAAI,EAAE;oBACd,IAAI,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE;wBACvB,YAAY,CAAC,QAAQ,GAAG,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC;qBACjD;oBACD,IAAI,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE;wBACxB,YAAY,CAAC,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC;qBACnD;iBACJ;gBAED,YAAY,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,IAAI,EAAE,CAAC;;gBAEnD,IAAI,OAAO,CAAC,YAAY,IAAI,OAAO,CAAC,YAAY,CAAC,MAAM,EAAE;;wBAE/C,YAAU,GAAG,EAAE;oBACrB,OAAO,CAAC,YAAY,CAAC,OAAO;;;;oBAAC,UAAA,CAAC;;4BACpB,GAAG,GAAG,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI;;;;wBAAC,UAAC,CAAM,IAAK,OAAA,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,KAAK,GAAA,EAAC;wBACzE,IAAI,GAAG,EAAE;4BACL,GAAG,CAAC,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC;4BACxB,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;4BACtB,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;4BACpB,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;4BACpB,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;4BACtB,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC,WAAW,CAAC;4BAChC,YAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;yBACxB;qBACJ,EAAC,CAAC;oBAEH,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,YAAU,CAAC;iBACxC;;gBAGD,YAAY,CAAC,gBAAgB,CAAC,EAAE,CAAC;aACpC;SACJ;;;;;;;;QAEO,gDAAc;;;;;;;QAAtB,UAAuB,QAAQ,EAAE,YAAY,EAAE,GAAU;YAAzD,iBAgDC;YAhD8C,oBAAA,EAAA,UAAU;;gBAC/C,QAAQ,GAAG,QAAQ,CAAC,OAAO;YAEjC,IAAI,QAAQ,EAAE;gBACF,IAAA,8BAAQ,EAAE,oCAAW,EAAE,sCAAY,EAAE,gCAAU,EAAE,sCAAa;;oBAChE,WAAW,GAAG,cAAY,GAAG,IAAI,CAAC,sBAAsB,CAAC,CAAC,cAAY,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE;gBAEtF,IAAI,CAAC,8BAA8B,CAAC,YAAY,CAAC,EAAE,EAAE,EAAC,QAAQ,YAAA,EAAE,WAAW,eAAA,EAAE,YAAY,EAAE,WAAW,EAAE,UAAU,YAAA,EAAC,CAAC,CAAC;gBAErH,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;;oBAEf,WAAW,GAAG,EAAE;gBACpB,IAAI,YAAY,CAAC,SAAS,IAAI,UAAU,IAAI,UAAU,CAAC,MAAM,EAAE;oBAC3D,WAAW,GAAG,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAE;oBAEpC,YAAY,CAAC,eAAe,GAAG,aAAa,CAAC;iBAChD;gBACD,YAAY,CAAC,UAAU,GAAG,WAAW,CAAC;;oBAChC,QAAQ,GAAG,EAAE,QAAQ,YAAA,EAAE,WAAW,eAAA,EAAE,UAAU,EAAE,WAAW,EAAE,YAAY,EAAE,WAAW,EAAE,eAAe,EAAE,aAAa,EAAE;gBAC9H,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC,SAAS;;;gBAAE;oBACrD,IAAI,GAAG,EAAE;wBACL,GAAG,CAAC,QAAQ,GAAG,KAAK,CAAC;qBACxB;oBACD,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;oBACpB,IAAI,aAAW,IAAI,aAAW,CAAC,MAAM,EAAE;wBACnC,YAAY,CAAC,OAAO,GAAG,YAAY,CAAC,OAAO,CAAC,GAAG;;;;wBAAC,UAAA,IAAI;4BAChD,KAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,cAAY,EAAE,YAAY,CAAC,CAAC;4BAC1D,OAAO,KAAI,CAAC,sBAAsB,CAAC,IAAI,EAAE,aAAW,EAAE,cAAY,EAAE,YAAY,CAAC,CAAC;yBACrF,EAAC,CAAC;qBACN;oBAED,YAAY,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;oBAClC,IAAI,UAAQ,IAAI,MAAM,CAAC,IAAI,CAAC,UAAQ,CAAC,CAAC,MAAM,EAAE;wBAClC,IAAA,8BAAQ,EAAE,gCAAS;wBAC3B,IAAI,QAAQ,IAAI,QAAQ,CAAC,MAAM,EAAE;4BAC7B,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;yBAC9D;6BAAM;4BACH,YAAY,CAAC,SAAS,EAAE,CAAC;yBAC5B;qBACJ;yBAAM;wBACH,YAAY,CAAC,SAAS,EAAE,CAAC;qBAC5B;oBAED,QAAQ,CAAC,KAAK,EAAE,CAAC;iBACpB,EAAC,CAAC;aACN;iBAAM;gBACH,QAAQ,CAAC,KAAK,EAAE,CAAC;aACpB;SACJ;;;;;;;;QAGD,wDAAsB;;;;;;;QAAtB,UAAuB,IAAS,EAAE,WAAgB,EAAE,YAAiB,EAAE,YAAiB;YAAxF,iBAuBC;;gBAtBS,WAAW,GAAG,EAAE;YACtB,IAAI,CAAC,OAAO;;;;;YAAC,UAAC,OAAO,EAAE,KAAK;gBACxB,IAAI,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,KAAK,EAAE,YAAY,CAAC,IAAI,OAAO,CAAC,KAAK,KAAK,4BAA4B,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE;oBAClI,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;iBACnC;qBAAM;oBACH,OAAO,CAAC,OAAO,GAAG,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;oBACtD,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;wBAClB,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;qBAC7B;iBACJ;aACJ,EAAC,CAAC;;;gBAGC,OAAO,GAAG,WAAW,CAAC,GAAG;;;;YAAE,UAAA,KAAK;gBAChC,OAAO,IAAI,CAAC,IAAI;;;;gBAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,KAAK,KAAK,KAAK,GAAA,EAAC,CAAC;aAC5C,EAAC,CAAC,MAAM;;;;YAAC,UAAA,CAAC,IAAI,OAAA,CAAC,GAAA,EAAC;YAEjB,IAAI,WAAW,CAAC,MAAM,EAAE;gBACpB,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;aACzC;YAED,OAAO,OAAO,CAAC,MAAM;;;;YAAC,UAAA,CAAC,IAAI,OAAA,CAAC,IAAI,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,KAAK,KAAK,4BAA4B,GAAA,EAAE,CAAC;SACzF;;;;;;;;;;;;;QAMO,gDAAc;;;;;;;;QAAtB,UAAuB,KAAU,EAAE,OAAY;YAC3C,OAAO,GAAG,OAAO,IAAI,EAAE,CAAC;YACxB,OAAO,CAAC,OAAO,CAAC,IAAI;;;;YAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,KAAK,KAAK,KAAK,GAAA,EAAC,CAAC;SAChD;;;;;;;QAGD,oDAAkB;;;;;;QAAlB,UAAmB,IAAW,EAAE,YAAmB,EAAE,YAAY;YAC7D,IAAI,YAAY,IAAI,YAAY,CAAC,MAAM,EAAE;gBACrC,IAAI,CAAC,OAAO;;;;gBAAC,UAAA,GAAG;;wBACN,SAAS,GAAG,YAAY,CAAC,IAAI;;;;oBAAC,UAAA,CAAC,IAAG,OAAA,CAAC,CAAC,KAAK,KAAK,GAAG,CAAC,KAAK,GAAA,EAAC;oBAC9D,IAAI,SAAS,EAAE;wBACX,GAAG,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC;wBAC5B,GAAG,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,IAAI,MAAM,CAAC;wBACxC,GAAG,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,IAAI,MAAM,CAAC;wBAEtC,IAAI,YAAY,CAAC,SAAS,KAAK,GAAG,CAAC,aAAa,IAAI,GAAG,CAAC,aAAa,KAAK,SAAS,CAAC,EAAE;4BAClF,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE;gCAClB,GAAG,CAAC,WAAW,GAAG,SAAS,CAAC,WAAW,CAAC;6BAC3C;4BAED,IAAI,GAAG,CAAC,WAAW,IAAI,GAAG,CAAC,WAAW,CAAC,OAAO,EAAE;gCAC5C,GAAG,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,GAAG,SAAS,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,IAAI,EAAE,CAAC;gCACxE,GAAG,CAAC,WAAW,CAAC,OAAO,CAAC,eAAe;oCACnC,SAAS,CAAC,WAAW,CAAC,OAAO,CAAC,eAAe,KAAK,SAAS;wCAC3D,SAAS,CAAC,WAAW,CAAC,OAAO,CAAC,eAAe,KAAK,IAAI;wCACtD,QAAQ,CAAC,SAAS,CAAC,WAAW,CAAC,OAAO,CAAC,eAAe,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;6BACxE;yBACJ;wBAED,IAAI,YAAY,CAAC,UAAU,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE;4BACzD,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE;gCACb,GAAG,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC;6BACjC;4BAED,IAAI,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC,MAAM,CAAC,OAAO,EAAE;gCAClC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,GAAG,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,IAAI,EAAE,CAAC;gCAC9D,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,eAAe;oCAC9B,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,eAAe,KAAK,SAAS;wCACtD,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,eAAe,KAAK,IAAI;wCACjD,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,eAAe,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;6BACnE;yBACJ;qBACJ;iBACJ,EAAC,CAAC;aACN;SACJ;;;;;;;;QAGO,iDAAe;;;;;;;QAAvB,UAAwB,MAAc;;gBAC5B,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;YACzC,IAAI,IAAI,EAAE;gBACN,OAAO,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;aAC3C;iBAAM;gBACH,IAAI,CAAC,aAAa,CAAC,yDAAyD,CAAC,CAAC;aACjF;SAEJ;;;;;;QAGO,wDAAsB;;;;;QAA9B,UAA+B,MAAc;;gBACnC,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;;gBAC3C,MAAM,GAAG,EAAC,QAAQ,EAAE,EAAE,EAAE,WAAW,EAAE,EAAE,EAAE,UAAU,EAAE,EAAE,EAAE,YAAY,EAAE,EAAE,EAAC;YAEhF,IAAI,YAAY,EAAE;gBACN,IAAA,gCAAQ,EAAE,kCAAS,EAAE,8BAAO;gBACpC,IAAI,QAAQ,EAAE;;wBACJ,QAAQ,GAAG;wBACb,QAAQ,EAAE,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC;wBAC7B,SAAS,EAAE,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC;qBAClC;oBAED,MAAM,CAAC,QAAQ,GAAG,QAAQ,CAAC;iBAC9B;;oBAEK,WAAW,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM;;;;gBAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,OAAO,KAAK,SAAS,GAAA,EAAC,CAAC,GAAG;;;;gBAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,KAAK,GAAA,EAAC;gBAClG,MAAM,CAAC,WAAW,GAAG,WAAW,CAAC;gBACjC,MAAM,CAAC,YAAY,GAAG,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,uBAAuB,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAEjG,IAAI,YAAY,CAAC,SAAS,EAAE;oBACxB,MAAM,CAAC,UAAU,GAAG,YAAY,CAAC,UAAU,CAAC;iBAC/C;aACJ;YACD,OAAO,MAAM,CAAC;SACjB;;;;;QAGD,gDAAc;;;;QAAd,UAAe,MAAc;;gBACnB,MAAM,GAAG,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC;YAClD,OAAO,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;SAC7C;;;;;;QAED,+CAAa;;;;;QAAb,UAAc,MAAc,EAAE,MAAW;YAAzC,iBA6CC;;gBA5CS,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;;gBAClC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ;;gBAClC,aAAa,GAAG,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC;;gBACzC,OAAO,GAAG,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,GAAG,EAAG,KAAK,EAAE;YACvE,IAAI,MAAM,EAAE;gBACR,IAAI,OAAO,EAAE;oBACT,OAAO,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC;iBAC9B;gBAED,YAAY,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;aACtD;iBAAM;gBACH,YAAY,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;aAChC;YACD,IAAI,IAAI,CAAC,eAAe,EAAE;;oBAChB,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;gBAC5C,IAAI,OAAO,IAAI,OAAO,CAAC,YAAY,EAAE;;wBAC3B,cAAY,GAAG,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC;oBACrD,IAAI,cAAY,EAAE;;wBAEd,IAAI,cAAY,CAAC,IAAI,KAAK,SAAS,EAAE;4BACjC,OAAO,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,cAAY,EAAE,MAAM,EAAE,IAAI,CAAC,CAAA;yBACnE;6BAAM;4BACH,OAAO,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC,IAAI,CAC3CH,mBAAS;;;;4BAAC,UAAC,CAAkB;gCACzB,IAAI,CAAC,CAAC,OAAO,EAAE;;wCACL,eAAe,GAAG,CAAC,CAAC,oBAAoB,IAAI,CAAC,CAAC,oBAAoB,CAAC,MAAM;oCAC/E,IAAI,cAAY,CAAC,IAAI,KAAK,QAAQ,KAAK,cAAY,CAAC,IAAI,KAAK,KAAK,IAAI,eAAe,CAAC,EAAE;wCACpF,OAAO,KAAI,CAAC,aAAa,CAAC,UAAU,CAAC,cAAY,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;qCACpE;iCACJ;gCAED,OAAOL,OAAE,CAAC,IAAI,CAAC,CAAC;6BACnB,EAAC,CACL,CAAA;yBACJ;qBACJ;yBAAM;wBACH,OAAOA,OAAE,CAAC,IAAI,CAAC,CAAC;qBACnB;iBACJ;;gBAED,OAAO,IAAI,CAAC,eAAe,CAAC,GAAG,EAAG,MAAM,GAAG,OAAO,GAAI,EAAE,CAAC,CAAC;aAC7D;YAED,OAAOA,OAAE,CAAC,IAAI,CAAC,CAAC;SACnB;;;;;QAED,+CAAa;;;;QAAb,UAAc,GAAG;YACb,IAAI,IAAI,CAAC,eAAe,EAAE;gBACtB,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;aACnC;iBAAM;;oBACG,MAAM,GAAG,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC;gBACxC,IAAI,MAAM,EAAE;;wBACF,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;oBAC9B,IAAI,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;wBAC9B,OAAOA,OAAE,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;qBAC3C;yBAAM;wBACH,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,EAAE;4BAC9C,OAAOA,OAAE,CAAC,GAAG,CAAC,CAAC;yBAClB;wBACD,OAAO,IAAI,CAAC;qBACf;iBACJ;qBAAM;oBACH,OAAOA,OAAE,CAAC,IAAI,CAAC,CAAC;iBACnB;aACJ;SACJ;;;;;;QAEO,kDAAgB;;;;;QAAxB,UAAyB,UAAsC;;;;;;;;;;;;gBAOvD,aAAa,GAAG,IAAI;YACxB,IAAI,CAAC,UAAU,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE;gBACnC,OAAO,aAAa,CAAC;aACxB;iBAAM;gBACH,aAAa,GAAG,UAAU,CAAC,IAAI;;;;gBAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,SAAS,GAAA,EAAC,CAAC;gBAClD,IAAI,CAAC,aAAa,EAAE;;wBACZ,aAAa,GAAG,UAAU,CAAC,MAAM;;;;oBAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,IAAI,KAAK,QAAQ,GAAA,EAAC;oBAE/D,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE;wBACvB,aAAa,GAAG,UAAU,CAAC,MAAM;;;;wBAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,IAAI,KAAK,KAAK,GAAA,EAAC,CAAC;qBAC5D;oBAED,IAAI,aAAa,CAAC,MAAM,EAAE;wBACtB,aAAa,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;qBACpC;yBAAM;wBACH,aAAa,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;qBACjC;iBACJ;aACJ;YAED,OAAO,aAAa,CAAC;SACxB;;;;;QAGD,6CAAW;;;;QAAX,UAAY,MAAc;YAA1B,iBA6CC;;gBA5CS,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;;gBAClC,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;;gBAExC,WAAW,GAAGA,OAAE,CAAC,EAAE,CAAC;YACxB,IAAI,OAAO,IAAI,OAAO,CAAC,YAAY,EAAE;gBACjC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;aAC5C;YAED,OAAOS,aAAQ,CAAC,WAAW,EAAE,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC,CAAC,IAAI,CACzFF,aAAG;;;;YAAC,UAAC,EAA6C;oBAA7C,kBAA6C,EAA5C,kBAAU,EAAE,mBAAW,EAAE,0BAAkB;gBAC7C,UAAU,GAAG,UAAU,IAAI,EAAE,CAAC;gBAC9B,KAAI,CAAC,SAAS,GAAG,kBAAkB,CAAC;gBACpC,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE;oBACpB,OAAO,WAAW,CAAC;iBACtB;qBAAM;;oBAEH,KAAI,CAAC,aAAa,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;;;wBAEjC,aAAa,GAAwB,KAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC;oBAC5E,IAAI,CAAC,aAAa,EAAE;wBAChB,OAAO,WAAW,CAAC;qBACtB;yBAAM;wBACH,KAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,aAAa,CAAC,CAAC;;4BAC5C,YAAY,GAAG,IAAI;wBACvB,IAAI,aAAa,CAAC,oBAAoB,EAAE;4BACpC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,oBAAoB,CAAC,CAAC;yBACjE;wBACD,IAAI,YAAY,EAAE;;gCACR,QAAQ,GAAG,KAAI,CAAC,SAAS,CAAC,QAAQ;4BACxC,IAAI,YAAY,CAAC,QAAQ,CAAC,EAAE;gCACxB,YAAY,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC;gCACxD,OAAO,YAAY,CAAC,QAAQ,CAAC,CAAC;6BACjC;iCAAM;gCACH,YAAY,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC;gCAC9B,YAAY,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC;gCACxD,OAAO,IAAI,CAAC;6BACf;yBACJ;6BAAM;4BACH,OAAO,IAAI,CAAC;yBACf;qBACJ;iBACJ;aACJ,EAAC,CACL,CAAC;SACL;;;;;;;QAGO,iDAAe;;;;;;QAAvB,UAAwB,GAAG,EAAE,MAAM;YAC/B,IAAI;;oBACM,iBAAiB,GAAG;oBACtB,UAAU,EAAE,GAAG;oBACf,UAAU,EAAE,EAAE;oBACd,UAAU,EAAE,EAAE;oBACd,SAAS,EAAE,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAI,EAAE;iBACnD;gBAED,OAAO,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,CAAC;aACnE;YAAC,OAAO,CAAC,EAAE;gBACR,IAAI,CAAC,aAAa,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;aAClC;SACJ;;;;;;QAED,iDAAe;;;;;QAAf,UAAgB,YAAY,EAAE,QAAQ;YAAtC,iBAeC;;gBAdS,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,8CAA8C,CAAC,IAAI,aAAa;YAClH,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,IAAI,CACzCF,mBAAS;;;;YAAE,UAAC,CAAU;gBAClB,IAAI,CAAC,EAAE;oBACH,OAAO,KAAI,CAAC,aAAa,CAAC,YAAY,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;iBAClD;gBACD,OAAOL,OAAE,CAAC,CAAC,CAAC,CAAC;aAChB,EAAC,CACL,CAAC,SAAS;;;;YAAC,UAAC,CAAU;gBACnB,IAAI,CAAC,EAAE;oBACH,KAAI,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;oBACjC,QAAQ,CAAC,KAAK,EAAE,CAAC;iBACpB;aACJ,EAAC,CAAC;SACN;;;;;;QAEO,gDAAc;;;;;QAAtB,UAAuB,GAAG;YAA1B,iBA8BC;YA7BG,IAAI;gBACA,OAAO,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,IAAI,CACjDO,aAAG;;;;gBAAC,UAAC,GAAQ;oBACT,IAAI,GAAG,IAAI,GAAG,CAAC,SAAS,EAAE;;4BAChB,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC;wBACnC,IAAI,CAAC,EAAE;4BACH,IAAI,CAAC,CAAC,KAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;gCAC5B,YAAY,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,SAAS,CAAC,CAAC;gCACzC,OAAO,CAAC,CAAC,KAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;6BACrC;iCAAM;gCACH,CAAC,CAAC,KAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC;gCAClC,YAAY,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;;;;gCAI7C,OAAO,IAAI,CAAC;6BACf;yBAEJ;wBACD,OAAO,IAAI,CAAC;qBACf;oBACD,OAAO,IAAI,CAAC;iBACf,EAAC,CACL,CAAC;aACL;YAAC,OAAO,CAAC,EAAE;gBACR,IAAI,IAAI,CAAC,QAAQ,EAAE;oBACf,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;iBAC1B;aACJ;SACJ;;;;;;;QAEO,iDAAe;;;;;;QAAvB,UAAwB,MAAc,EAAE,QAAe;YAAf,yBAAA,EAAA,eAAe;;gBAC7C,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ;YACxC,IAAI,CAAC,QAAQ,EAAE;gBACX,QAAQ,GAAG,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC;aAClD;;gBACK,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;;gBACxC,aAAa,GAAG,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC;;gBAC/C,OAAO,GAAG,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,GAAG,EAAG,KAAK,EAAE;YACvE,IAAI,OAAO,EAAE;gBACT,OAAO,CAAC,QAAQ,CAAC,GAAG,QAAQ,CAAC;aAChC;YAED,OAAO,OAAO,CAAC;SAClB;;;;;;;;;;;QAIO,sDAAoB;;;;;;;;;;QAA5B,UAA6B,YAAiB,EAAE,UAAe,EAAE,QAAyB,EAAE,SAAc;YAA1G,iBAgEC;;gBA/DS,SAAS,GAAG;gBACd,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,EAAE,UAAU,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM;gBACzD,YAAY,EAAE;oBACV,KAAK,EAAE,UAAU,IAAI,EAAE;oBACvB,UAAU,EAAE,QAAQ,CAAC,OAAO;oBAC5B,aAAa,EAAE,QAAQ,CAAC,aAAa;iBACxC;gBACD,WAAW,EAAE,KAAK;aACrB;;gBAEK,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,EAAE,SAAS,CAAC;YACxE,aAAa,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC;;gBAE1D,QAAQ,sBAAG,aAAa,CAAC,OAAO,EAAuB;YAC7D,QAAQ,CAAC,UAAU,CAAC,SAAS;;;YAAE;gBAC3B,aAAa,CAAC,KAAK,EAAE,CAAC;aACzB,EAAC,CAAC;YAEH,QAAQ,CAAC,WAAW,CAAC,SAAS;;;;YAAC,UAAC,CAAM;gBAClC,KAAI,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC,EAAE,YAAY,CAAC,EAAE,CAAC,CAAC,SAAS;;;;gBAAC,UAAC,CAAM;oBACjE,IAAG,CAAC,KAAK,KAAK,EAAE;wBACZ,aAAa,CAAC,KAAK,EAAE,CAAC;wBACtB,OAAO;qBACV;;wBACK,GAAG,GAAG,YAAY;oBACxB,IAAI,KAAI,CAAC,aAAa,EAAE;wBACpB,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;qBACnC;yBAAM;wBACH,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;qBAC9B;oBAED,IAAG,CAAC,CAAC,SAAS,EAAE;wBACZ,UAAU,CAAC,OAAO;;;;wBAAC,UAAA,CAAC;4BAChB,CAAC,CAAC,SAAS,GAAG,KAAK,CAAC;4BACpB,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,SAAS,EAAE;gCACtB,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC;;6BAEtB;yBACJ,EAAC,CAAC;qBACN;;wBAEG,aAAa,GAAG,UAAU;oBAC9B,IAAI,CAAC,CAAC,UAAU,IAAI,CAAC,CAAC,UAAU,CAAC,MAAM,EAAE;wBACrC,aAAa,GAAG,UAAU,CAAC,MAAM;;;;wBAAC,UAAA,CAAC;4BAC/B,OAAO,CAAC,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAA;yBACtC,EAAC,CAAC;qBACN;oBAED,KAAI,CAAC,aAAa,CAAC,aAAa,CAAC,YAAY,CAAC,EAAE,EAAE,aAAa,CAAC,CAAC;;wBAE3D,aAAa,GAAG,KAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,EAAE,CAAC;oBAC/D,IAAI,CAAC,aAAa,EAAE;wBAChB,KAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;wBAChD,SAAS,CAAC,QAAQ,CAAC,iBAAiB,GAAG,IAAI,CAAC;wBAC5C,SAAS,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC;qBACtC;oBAED,aAAa,CAAC,KAAK,EAAE,CAAC;iBACzB,EAAC,CAAC;aACN,EAAC,CAAC;;gBAEG,cAAc,sBAAG,aAAa,CAAC,MAAM,CAAC,QAAQ,EAA2B;YAC/E,cAAc,CAAC,QAAQ,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,aAAa,CAAC;SAClE;;;;;;;;;;QAGO,qDAAmB;;;;;;;;;QAA3B,UAA4B,YAAY,EAAE,CAA4B,EAAG,SAAc;YAAvF,iBAuGC;;gBAtGS,SAAS,GAAG;gBACd,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,EAAE,UAAU,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM;gBACzD,YAAY,EAAE;oBACV,SAAS,EAAE,IAAI,CAAC,SAAS;iBAC5B;gBACD,WAAW,EAAE,KAAK;gBAClB,SAAS,EAAE,KAAK;aACnB;;gBAEK,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,EAAE,SAAS,CAAC;YACtE,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC;;gBACzD,QAAQ,sBAAG,YAAY,CAAC,OAAO,EAAsB;YAC3D,QAAQ,CAAC,UAAU,CAAC,SAAS;;;YAAE;gBAC3B,YAAY,CAAC,KAAK,EAAE,CAAC;aACxB,EAAC,CAAC;YAEH,QAAQ,CAAC,WAAW,CAAC,IAAI,CACrBF,mBAAS;;;;YAAC,UAAC,CAAM;gBACb,OAAO,KAAI,CAAC,eAAe,CAAC,YAAY,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,KAAK,KAAK,EAAE,SAAS,CAAC,QAAQ,CAAC,eAAe,EAAE,CAAC,CAAC;aAC3G,EAAC,CACL,CAAC,SAAS;;;;YAAC,UAAC,CAAM;gBACf,IAAI,CAAC,CAAC,IAAI,KAAK,KAAK,EAAE;;wBACZ,GAAG,GAAG,CAAC,CAAC,GAAG;;wBACb,IAAI,GAAG,GAAG;oBACd,IAAI,GAAG,EAAE;wBACL,IAAI,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;4BACvB,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG;;;;4BAAC,UAAC,QAAQ;gCAC/B,OAAO,KAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,oBAAoB,GAAE,QAAQ,CAAC,CAAA;6BACjE,EAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;yBACf;6BAAM;4BACH,IAAI,GAAG,KAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,oBAAoB,GAAE,GAAG,CAAE,CAAC;yBAC9D;wBACD,IAAI,KAAI,CAAC,aAAa,EAAE;4BACpB,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;yBACjC;6BAAM;4BACH,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;yBAC5B;qBACJ;oBACD,OAAO;iBACV;;;oBAEK,UAAU,GAAG,KAAI,CAAC,aAAa,CAAC,aAAa,CAAC,YAAY,CAAC,EAAE,EAAE,MAAM,CAAC,IAAI,EAAE;gBAClF,IAAI,CAAC,CAAC,SAAS,EAAE;oBACb,UAAU,CAAC,OAAO;;;;oBAAC,UAAA,CAAC;wBAChB,CAAC,CAAC,SAAS,GAAG,KAAK,CAAC;qBACvB,EAAC,CAAC;iBACN;gBACD,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;;gBAEnB,KAAI,CAAC,aAAa,CAAC,aAAa,CAAC,YAAY,CAAC,EAAE,EAAE,UAAU,CAAC,CAAC;;gBAG9D,SAAS,CAAC,QAAQ,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;gBAC9C,YAAY,CAAC,KAAK,EAAE,CAAC;aACxB,EAAC,CAAC;YAEH,QAAQ,CAAC,cAAc,CAAC,IAAI,CACxBA,mBAAS;;;;YAAC,UAAC,CAAM;gBACb,OAAO,KAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC,IAAI,CAC3CE,aAAG;;;;gBAAC,UAAC,IAAqB;oBACtB,kBACI,IAAI,EAAE,CAAC,IACJ,IAAI,EACV;iBACJ,EAAC,CACL,CAAA;aACJ,EAAC,CACL,CAAC,SAAS;;;;YAAC,UAAC,CAAM;;oBACX,YAAY,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE;;;oBAE1C,IAAI,GAAG,eAAe;gBAC1B,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,KAAK,KAAK,EAAE;;oBAExB,IAAI,GAAG,YAAY,CAAC;iBACvB;;oBAEK,GAAG,GAAG,KAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,oBAAoB,GAAE,IAAI,CAAE;gBAChE,IAAI,CAAC,CAAC,OAAO,EAAE;;wBACL,kBAAkB,GAAG,CAAC,CAAC,iBAAiB,IAAI,CAAC,CAAC,iBAAiB,CAAC,MAAM;oBAC5E,YAAY,CAAC,MAAM,GAAG,kBAAkB,CAAC;;wBACnC,eAAe,GAAG,CAAC,CAAC,oBAAoB,IAAI,CAAC,CAAC,oBAAoB,CAAC,MAAM;oBAC/E,YAAY,CAAC,GAAG,GAAG,eAAe,CAAC;oBACnC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,KAAK,QAAQ,EAAE;wBAC3B,QAAQ,CAAC,UAAU,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC;qBAC3C;yBAAM,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,KAAK,KAAK,EAAE;wBAC/B,IAAI,CAAC,eAAe,EAAE;4BAClB,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;yBACnC;6BAAK;4BACF,QAAQ,CAAC,UAAU,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC;4BACxC,QAAQ,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;4BAC7D,QAAQ,CAAC,iBAAiB,GAAG,CAAC,CAAC,oBAAoB,CAAC;yBACvD;qBACJ;iBACJ;qBAAM;oBACH,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;oBAChC,YAAY,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC;iBAChD;gBACD,QAAQ,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;aAClC,EAAC,CAAA;;gBAEI,cAAc,sBAAG,YAAY,CAAC,MAAM,CAAC,QAAQ,EAA2B;YAC9E,cAAc,CAAC,QAAQ,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,aAAa,CAAC;SAClE;;;;;QAED,+CAAa;;;;QAAb,UAAc,MAAc;YACxB,OAAO,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;SACnD;;;;;;;;;;;;;;;;;QAOD,iDAAe;;;;;;;;;;;QAAf,UAAgB,MAAc,EAAE,IAAS,EAAE,WAAkB,EAAE,eAAoB;YAAxC,4BAAA,EAAA,kBAAkB;;YACzD,IAAG,CAAC,IAAI,CAAC,IAAI,EAAE;;gBAEX,OAAOP,OAAE,CAAC,EAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,qBAAqB,EAAC,CAAC,CAAC;aACxD;iBAAM;;oBACG,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC;gBAEnE,IAAI,OAAO,OAAO,KAAK,SAAS,IAAI,OAAO,EAAE;;oBAEzC,OAAOA,OAAE,CAAC,EAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,WAAW,EAAC,CAAC,CAAC;iBAC9C;qBAAM,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC,MAAM,EAAE;;wBAE3C,gBAAc;;;;oBAAG,UAAC,QAAQ;wBAC5B,IAAI,QAAQ,KAAK,QAAQ,EAAE;4BACvB,OAAO,SAAS,CAAC;yBACpB;6BAAM,IAAG,QAAQ,KAAK,QAAQ,EAAE;4BAC7B,OAAO,SAAS,CAAC;yBACpB;6BAAM;4BACH,OAAO,QAAQ,CAAC;yBACnB;qBACJ,CAAA;oBAED,IAAI,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;;4BACrC,GAAG,GAAG,gBAAc,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;wBACnD,OAAOA,OAAE,CAAC,EAAC,IAAI,EAAE,KAAK,EAAE,GAAG,KAAA,EAAC,CAAC,CAAC;qBACjC;yBAAM;;4BACG,IAAI,GAAG,OAAO,CAAC,GAAG;;;;wBAAC,UAAA,CAAC;4BACtB,OAAO,gBAAc,CAAC,CAAC,CAAC,CAAC;yBAC5B,EAAC;wBAEF,OAAOA,OAAE,CAAC,EAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,CAAC;qBACjD;iBACJ;aACJ;;gBAEK,YAAY,GAAG,EAAE;YAGvB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;gBACrC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;aAC9C;;;;;;YAQD,IAAI,YAAY,CAAC,MAAM,EAAE;;oBACf,IAAI,GAAG,YAAY,CAAC,GAAG;;;;gBAAC,UAAA,CAAC;oBAC3B,IAAI,CAAC,KAAK,QAAQ,EAAE;wBAChB,OAAO,cAAc,CAAC;qBACzB;yBAAM,IAAG,CAAC,KAAK,QAAQ,EAAE;wBACtB,OAAO,cAAc,CAAC;qBACzB;yBAAM;wBACH,OAAO,aAAa,CAAC;qBACxB;iBACJ,EAAC;gBACF,OAAOA,OAAE,CAAC,EAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,CAAC;aACjD;YAGD,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,KAAK,KAAK,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;;gBAE3E,OAAOA,OAAE,CAAC,EAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,cAAc,EAAC,CAAC,CAAC;aACjD;;gBACG,OAAO,GAAG,IAAI;YAElB,IAAI,CAAC,WAAW,EAAE;;oBACR,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ;gBAExC,IAAI,eAAe,IAAI,eAAe,CAAC,YAAY,EAAE;oBACjD,eAAe,CAAC,YAAY,GAAG,IAAI,CAAC,sBAAsB,CAAC,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC,CAAC;iBAC9F;gBAED,OAAO,aAAI,GAAC,QAAQ,IAAG,eAAe,KAAE,CAAC;aAC5C;;gBAEK,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE;;gBAC/B,SAAS,GAAG,IAAI,CAAC,SAAS;YAC9B,IAAI,SAAS,EAAE;gBACX,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS,EAAE;oBACzB,SAAS,GAAG,KAAK,CAAC;iBACrB;aACJ;YAED,IAAI,IAAI,CAAC,IAAI,IAAI,OAAO,IAAI,CAAC,IAAI,KAAK,QAAQ,EAAE;gBAC5C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACzC;;gBAEK,MAAM,GAAwB;gBAChC,EAAE,EAAE,KAAK;gBACT,QAAQ,EAAE,EAAE;gBACZ,IAAI,EAAE,EAAE;gBACR,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,SAAS,EAAE,SAAS;gBACpB,QAAQ,EAAE,KAAK;gBACf,QAAQ,EAAE,0BAA0B;gBACpC,UAAU,EAAE,IAAI,CAAC,0BAA0B,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC;gBAC/D,oBAAoB,EAAE,OAAO,GAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,GAAE,EAAE;aAC7D;YAED,OAAO,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,IAAI,CACrDO,aAAG;;;YAAC;gBACA,OAAO,MAAM,CAAC;aACjB,EAAC,CACL,CAAC;SACL;;;;;;QAED,+CAAa;;;;;QAAb,UAAc,UAAiC,EAAE,MAAc;YAC3D,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,EAAC,IAAI,EAAE,UAAU,EAAC,EAAE,MAAM,CAAC,CAAC;SACzD;;;;;;;QAEO,4DAA0B;;;;;;QAAlC,UAAmC,QAAgB,EAAE,MAAW;YAAhE,iBAgBC;YAfG,IAAI,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;gBAC3B,OAAQ,EAAE,CAAC;aACd;YAED,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;gBAC5B,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;aAC9B;YAED,OAAO,MAAM,CAAC,GAAG;;;;YAAC,UAAA,CAAC;gBACf,OAAO;oBACH,EAAE,EAAE,KAAI,CAAC,SAAS,CAAC,IAAI,EAAE;oBACzB,KAAK,EAAE,CAAC;oBACR,SAAS,EAAE,QAAQ;iBACtB,CAAA;aACJ,EAAC,CAAC;SACN;;;;;;QAEO,0DAAwB;;;;;QAAhC,UAAiC,MAAc;;gBACrC,YAAY,sBAAG,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,EAAuB;YAC5E,IAAI,YAAY,IAAI,YAAY,CAAC,oBAAoB,EAAE;gBACnD,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,oBAAoB,CAAC,CAAC;aACxD;YACD,OAAO,IAAI,CAAC;SACf;;oBA9zCJG,eAAU;;;;oBApBUlB,aAAQ;oBAEpBmB,sBAAc;oBACdzB,0BAAe;oBAKD0B,kBAAS;oBAFvBzB,sBAAa;;QA60CtB,8BAAC;KA/zCD;;;;;;ACtBA;QAmBI,sCAAoB,QAAkB,EAAU,EAAqB;YAAjD,aAAQ,GAAR,QAAQ,CAAU;YAAU,OAAE,GAAF,EAAE,CAAmB;YAV5D,YAAO,GAAG,OAAO,CAAC;YAClB,eAAU,GAAG,OAAO,CAAC;YACrB,cAAS,GAAG,OAAO,CAAC;YACpB,gBAAW,GAAG,EAAE,CAAC;YAEjB,aAAQ,GAAG,EAAE,CAAC;YAGb,mBAAc,GAAG,IAAIF,iBAAY,EAAE,CAAC;SAE2B;;;;QAGzE,+CAAQ;;;QAAR,eAAa;;;;;;;QAEb,wDAAiB;;;;;;QAAjB,UAAkB,MAAkB,EAAE,IAAS,EAAE,KAAa;YAC1D,MAAM,CAAC,eAAe,EAAE,CAAC;YACzB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YAEnB,IAAI,CAAC,KAAK,EAAE;gBACR,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;aAC5B;YAED,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;YACxB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;YAC9B,OAAO,KAAK,CAAC;SAChB;;;;QAED,kDAAW;;;QAAX;YACI,IAAI,IAAI,CAAC,EAAE,CAAC,UAAU,EAAE;;oBACd,OAAK,GAAG,EAAE;;oBACV,QAAM,GAAG,EAAE;gBACjB,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO;;;;gBAAC,UAAA,GAAG;oBAC1B,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,IAAI,KAAK,CAAC;oBAC/B,OAAK,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;oBACtB,QAAM,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;iBAC1B,EAAC,CAAC;gBAEH,OAAO,EAAE,QAAQ,EAAE,OAAK,EAAE,SAAS,EAAE,QAAM,EAAE,CAAC;aACjD;YACD,OAAO,EAAE,CAAC;SACb;;;;;QAED,yDAAkB;;;;QAAlB,UAAmB,MAAM;;gBACf,EAAE,GAAG,IAAI,CAAC,WAAW,EAAE;YAC7B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SAChC;;;;;QAED,mDAAY;;;;QAAZ,UAAa,MAAM;;gBACT,KAAK,sBAAQ,MAAM,CAAC,KAAK,EAAO;YACtC,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,EAAE;gBACxC,KAAK,IAAM,EAAE,IAAI,KAAK,EAAE;oBACpB,IAAI,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE;wBAClB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC;qBAClC;iBACJ;aACJ;iBAAM;gBACH,IAAI,MAAM,CAAC,MAAM,KAAK,OAAO,EAAE;oBAC3B,KAAK,IAAM,EAAE,IAAI,KAAK,EAAE;wBACpB,IAAI,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE;4BAClB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC;yBAClC;qBACJ;iBACJ;aACJ;SACJ;;oBAxEJI,cAAS,SAAC;wBACP,QAAQ,EAAE,cAAc;wBACxB,iuFAAqD;qBACxD;;;;oBAN6CG,aAAQ;oBAAwBD,sBAAiB;;;8BAS1FE,UAAK;iCACLA,UAAK;gCACLA,UAAK;kCACLA,UAAK;+BAELA,UAAK;yBACLE,cAAS,SAAC,IAAI;qCAEdD,WAAM;;QA2DX,mCAAC;KAzED;;;;;;ACHA;QA2BI,sCAAoB,QAAkB,EAAU,EAAqB;YAAjD,aAAQ,GAAR,QAAQ,CAAU;YAAU,OAAE,GAAF,EAAE,CAAmB;YAnB5D,YAAO,GAAG,OAAO,CAAC;YAClB,eAAU,GAAG,OAAO,CAAC;YACrB,cAAS,GAAG,OAAO,CAAC;YAGrB,iBAAY,GAAG,EAAE,CAAC;YASjB,aAAQ,GAAG,EAAE,CAAC;YAGb,sBAAiB,GAAG,IAAIT,iBAAY,EAAE,CAAC;SAEwB;QAbzE,sBAAI,qDAAW;;;;YAAf;gBACI,OAAO,IAAI,CAAC,YAAY,CAAC;aAC5B;;;;;YACD,UAAyB,IAAI;gBACzB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;gBACzB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACrC;;;WAJA;;;;QAcD,+CAAQ;;;QAAR,eAAa;;;;;QAEb,kDAAW;;;;QAAX,UAAY,OAAsB;SAEjC;;;;;QAED,mDAAY;;;;QAAZ,UAAa,MAAM;SAElB;;;;;;QAED,mDAAY;;;;;QAAZ,UAAa,MAAkB,EAAE,MAAW;YACxC,MAAM,CAAC,eAAe,EAAE,CAAC;YACzB,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;SAC9B;;oBAxCJI,cAAS,SAAC;wBACP,QAAQ,EAAE,cAAc;wBACxB,0hCAAqD;qBACxD;;;;oBAN6CG,aAAQ;oBAC1CD,sBAAiB;;;8BAOxBE,UAAK;iCACLA,UAAK;gCACLA,UAAK;kCAOLA,UAAK;+BAKLA,UAAK;yBACLE,cAAS,SAAC,IAAI;wCAEdD,WAAM;;QAmBX,mCAAC;KAzCD;;;;;;;QCmCI,sCAAoB,QAAkB,EAAS,uBAAkD,EAAU,EAAqB;YAA5G,aAAQ,GAAR,QAAQ,CAAU;YAAS,4BAAuB,GAAvB,uBAAuB,CAA2B;YAAU,OAAE,GAAF,EAAE,CAAmB;YA3BvH,YAAO,GAAG,EAAE,CAAC;YACb,WAAM,GAAG,EAAE,CAAC;YAIX,iBAAY,GAAG,IAAIT,iBAAY,EAAE,CAAC;YAClC,iBAAY,GAAG,IAAIA,iBAAY,EAAE,CAAC;YAE5C,YAAO,GAAG,EAAE,CAAC;;;;YAGb,eAAU,GAAG,EAAE,CAAC;YAChB,eAAU,GAAG,KAAK,CAAC;YACnB,gBAAW,GAAG,IAAI,CAAC;YACnB,mBAAc,GAAG,KAAK,CAAC;YAEvB,gBAAW,GAAG,EAAE,CAAC;YACjB,eAAU,GAAG,EAAE,CAAC;YAChB,iBAAY,GAAG,EAAE,CAAC;YAClB,kBAAa,GAAG,EAAE,CAAC;YAEnB,SAAI,GAAG,KAAK,CAAC;YAEb,gBAAW,GAAG,KAAK,CAAC;YAEpB,kBAAa,GAAG,CAAC,CAAC;YAGd,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,uBAAuB,CAAC,YAAY,CAAC,UAAU;gBAClD,CAAC,IAAI,CAAC,uBAAuB,CAAC,YAAY,CAAC,cAAc,CAAC;YAClF,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAACE,sBAAa,EAAE,IAAI,CAAC,CAAC;SAC3D;;;;;QAED,kDAAW;;;;QAAX,UAAY,OAAsB;YAC9B,IAAI,OAAO,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,aAAa,EAAE,EAAE;gBACrD,IAAI,CAAC,aAAa,EAAE,CAAC;gBACrB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBAC/B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACtC,IAAI,CAAC,kBAAkB,EAAE,CAAC;aAC7B;SACJ;;;;QAED,+CAAQ;;;QAAR;YAAA,iBAaC;YAXG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,KAAK,IAAI,CAAC;YAE7C,IAAI,CAAC,QAAQ,EAAE,CAAC;YAEhB,IAAI,IAAI,CAAC,OAAO,EAAE;gBACd,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,SAAS;;;;gBAAC,UAAA,CAAC;oBACjC,IAAI,CAAC,KAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;wBACxB,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC;qBAC3C;iBACJ,EAAC,CAAC;aACN;SACJ;;;;;QAEO,oDAAa;;;;QAArB;;;;YAII,IAAI,CAAC,UAAU,GAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;SACtC;;;;;QAEO,+CAAQ;;;;QAAhB;YAEI,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,uBAAuB,CAAC,UAAU,CAAC;YAC1D,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC;YAC5D,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,uBAAuB,CAAC,YAAY,CAAC;YAC9D,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,uBAAuB,CAAC,aAAa,CAAC;YAGhE,IAAI,CAAC,aAAa,EAAE,CAAC;YACrB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAC/B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACtC,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAC7B;;;;;QAEO,yDAAkB;;;;QAA1B;YACI,IAAI,IAAI,CAAC,WAAW,EAAE;gBAClB,IAAI,IAAI,CAAC,WAAW,CAAC,aAAa,KAAK,SAAS,EAAE;oBAC9C,IAAI,CAAC,WAAW,CAAC,aAAa,GAAG,IAAI,CAAC;iBACzC;gBAED,IAAI,IAAI,CAAC,WAAW,CAAC,WAAW,KAAK,SAAS,EAAE;oBAC5C,IAAI,CAAC,WAAW,CAAC,WAAW,GAAG,EAAE,OAAO,EAAE,EAAC,eAAe,EAAE,CAAC,CAAC,EAAC,EAAE,CAAC;iBACrE;qBAAM;oBACH,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,OAAO,IAAI,EAAC,eAAe,EAAE,CAAC,CAAC,EAAC,CAAC;oBACrG,IAAI,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,OAAO,CAAC,eAAe,KAAK,SAAS,EAAE;wBACpE,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,OAAO,CAAC,eAAe,GAAG,CAAC,CAAC,CAAC;qBAC7D;iBACJ;gBAED,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,KAAK,SAAS,EAAE;oBACvC,IAAI,CAAC,WAAW,CAAC,MAAM,GAAI,EAAE,OAAO,EAAE,EAAC,eAAe,EAAE,CAAC,CAAC,EAAC,EAAE,CAAC;iBACjE;qBAAM;oBACH,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,IAAI,EAAC,eAAe,EAAE,CAAC,CAAC,EAAC,CAAC;oBAC3F,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,eAAe,KAAK,SAAS,EAAE;wBAC/D,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,eAAe,GAAG,CAAC,CAAC,CAAC;qBACxD;iBACJ;aACJ;SACJ;;;;;;;;;;;;;;;QAOD,oDAAa;;;;;;;;;;QAAb,UAAe,WAAgB;YAA/B,iBAgBC;YAhBc,4BAAA,EAAA,gBAAgB;;gBACvB,IAAI,GAAG,EAAE;YAEb,IAAI,IAAI,CAAC,WAAW,EAAE;gBAClB,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM;;;;gBAAC,UAAA,CAAC,IAAI,OAAA,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAA,EAAC,CAAC;aACzE;iBAAM;gBACH,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;aAC1B;YAGD,IAAI,WAAW,EAAE;gBACb,IAAI,GAAG,IAAI,CAAC,MAAM;;;;gBAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,GAAA,EAAC,CAAC;aAC5E;YAED,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM;;;;YAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,OAAO,GAAA,EAAC,CAAC,MAAM,CAAC;SACnE;;;;;;QAED,mDAAY;;;;;QAAZ,UAAa,GAAG,EAAE,MAAM;YACpB,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;YACvB,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAC7B;;;;;QAGO,sDAAe;;;;QAAvB;YACI,IAAI,CAAC,aAAa,EAAE,CAAC;YACrB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACvC;;;;;;QAED,iDAAU;;;;;QAAV,UAAW,MAAM,EAAE,GAAG;YAClB,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;SACrC;;;;;;QAED,sDAAe;;;;;QAAf,UAAgB,MAAM,EAAE,GAAG;YAA3B,iBAgBC;YAfG,MAAM,CAAC,eAAe,EAAE,CAAC;;gBACnB,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;YAC5C,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;gBACd,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;aAC/B;iBAAM;gBACH,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;aAChC;YAED,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO;;;;YAAC,UAAA,CAAC;gBACrB,CAAC,CAAC,OAAO,GAAG,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;aACjD,EAAC,CAAC;YAEH,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM;;;;YAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,OAAO,GAAA,EAAC,CAAC,GAAG;;;;YAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,KAAK,GAAA,EAAC,CAAC;YAEvE,IAAI,CAAC,eAAe,EAAE,CAAC;SAC1B;;;;;QAED,mDAAY;;;;QAAZ,UAAa,MAAM;;gBACT,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK;YAC/B,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;SAC3B;;;;;;;QAED,kDAAW;;;;;;QAAX,UAAY,SAAS,EAAE,GAAG,EAAE,OAAY;;YAC5B,IAAA,qCAAY,EAAE,iCAAU;;gBAE1B,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC;;gBACrC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;;gBAErC,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS;;;;YAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,KAAK,KAAK,QAAQ,CAAC,KAAK,GAAA,EAAC;;gBAC1E,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS;;;;YAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,KAAK,KAAK,UAAU,CAAC,KAAK,GAAA,EAAC;;gBAE9E,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC,CAAC;YAC5D,CAAA,KAAA,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAC,MAAM,qBAAC,eAAe,EAAE,CAAC,GAAK,WAAW,GAAE;YAE3D,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM;;;;YAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,OAAO,GAAA,EAAC,CAAC,GAAG;;;;YAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,KAAK,GAAA,EAAC,CAAC;YACvE,IAAI,CAAC,eAAe,EAAE,CAAC;YAEvB,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;;;;;;SAO3B;;;;;;;;;;QAKO,uDAAgB;;;;;;QAAxB,UAAyB,MAAc;YAAd,uBAAA,EAAA,cAAc;YACnC,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC1B,OAAO,CAAC,CAAC;aACZ;iBAAM;gBACH,IAAI,MAAM,EAAE;oBACR,IAAI,IAAI,CAAC,aAAa,KAAK,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;wBAC5C,OAAO,CAAC,CAAC;qBACZ;iBACJ;qBAAM;oBACH,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,KAAK,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE;wBAC/C,OAAO,CAAC,CAAC;qBACZ;iBACJ;gBACD,OAAO,CAAC,CAAC;aACZ;SACJ;;;;;;QAED,sDAAe;;;;;QAAf,UAAgB,MAAM,EAAE,GAAG;YAA3B,iBAwBC;;gBAvBS,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC;;gBAClC,SAAS,GAAG,KAAK,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC;YAC5C,IAAI,GAAG,IAAI,EAAE,EAAE;gBACX,IAAI,SAAS,EAAE;;oBAEX,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO;;;;oBAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,OAAO,GAAG,IAAI,GAAA,EAAC,CAAC;oBAC/C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG;;;;oBAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,KAAK,GAAA,EAAC,CAAC;iBACnD;qBAAM;;oBAEH,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO;;;;oBAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,OAAO,GAAG,KAAK,GAAA,EAAC,CAAC;oBAChD,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;iBACpB;aACJ;iBAAM;gBACH,IAAI,CAAC,OAAO,CAAC,OAAO;;;;gBAAC,UAAA,CAAC;;wBACZ,GAAG,GAAG,KAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI;;;;oBAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,KAAK,GAAA,EAAC;oBAC1D,GAAG,CAAC,OAAO,GAAG,SAAS,CAAC;oBACxB,CAAC,CAAC,OAAO,GAAG,SAAS,CAAC;iBACzB,EAAC,CAAC;gBACH,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM;;;;gBAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,OAAO,GAAA,EAAC,CAAC,GAAG;;;;gBAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,KAAK,GAAA,EAAC,CAAC;aAC1E;YAED,IAAI,CAAC,eAAe,EAAE,CAAC;YACvB,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;SAC3B;;;;;;;;QAGA,4DAAqB;;;;;;;QAArB,UAAsB,MAAM,EAAE,GAAG;YAC9B,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC;YAC1B,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;SAC3B;;;;;;QAED,kDAAW;;;;;QAAX,UAAY,MAAM,EAAE,WAAW;YAC3B,IAAI,WAAW,IAAI,WAAW,CAAC,KAAK,EAAE;gBAClC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;gBACvB,WAAW,CAAC,KAAK,GAAG,EAAE,CAAC;aAC1B;SACJ;;oBA5PJE,cAAS,SAAC;wBACP,QAAQ,EAAE,uBAAuB;wBACjC,u/OAAqD;wBACrD,aAAa,EAAEC,sBAAiB,CAAC,IAAI;qBACxC;;;;oBARkCE,aAAQ;oBAElC,yBAAyB;oBAF4CD,sBAAiB;;;8BAU1FE,UAAK;6BACLA,UAAK;8BAELE,cAAS,SAAC,eAAe;mCAEzBD,WAAM;mCACNA,WAAM;;QAiPX,mCAAC;KA7PD;;;;;;;QC4BI,qCAAoB,QAAkB,EAAS,uBAAkD,EAAU,EAAqB;YAA5G,aAAQ,GAAR,QAAQ,CAAU;YAAS,4BAAuB,GAAvB,uBAAuB,CAA2B;YAAU,OAAE,GAAF,EAAE,CAAmB;YAtBvH,WAAM,GAAG,EAAE,CAAC;YACZ,kBAAa,GAAG,EAAE,CAAC;YAEnB,gBAAW,GAAG,EAAE,CAAC;YACjB,kBAAa,GAAG,IAAI,CAAC;YAEpB,sBAAiB,GAAG,IAAIT,iBAAY,EAAE,CAAC;YACvC,wBAAmB,GAAG,IAAIA,iBAAY,EAAE,CAAC;YACzC,wBAAmB,GAAG,IAAIA,iBAAY,EAAE,CAAC;YAMnD,iBAAY,GAAG,EAAE,CAAC;YAClB,sBAAiB,GAAG,EAAE,CAAC;YACvB,yBAAoB,GAAG,IAAI,CAAC;YAG5B,2BAAsB,GAAG,KAAK,CAAC;YAC/B,iBAAY,GAAG,EAAE,CAAC;YAClB,kBAAa,GAAG,EAAE,CAAC;SACkH;;;;QAErI,8CAAQ;;;QAAR;YAAA,iBAoBC;YAlBG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,uBAAuB,CAAC,YAAY,CAAC;YAC9D,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,uBAAuB,CAAC,aAAa,CAAC;YAEhE,IAAI,CAAC,eAAe,EAAE,CAAC;YACvB,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAC3B,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAE9B,IAAI,IAAI,CAAC,OAAO,EAAE;gBACd,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,SAAS;;;;gBAAC,UAAA,CAAC;oBACjC,IAAI,CAAC,KAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;wBACxB,KAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAI,CAAC,aAAa,CAAC,CAAC;qBACrD;iBACJ,EAAC,CAAC;aACN;YAED,IAAI,CAAC,aAAa,CAAC,OAAO;;;;YAAC,UAAA,CAAC;gBACxB,KAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;aAC9B,EAAC,CAAC;SACN;;;;;QAED,iDAAW;;;;QAAX,UAAY,OAAsB;YAAlC,iBAQC;YAPG,IAAI,OAAO,CAAC,aAAa,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,aAAa,EAAE,EAAE;gBACjE,IAAI,CAAC,aAAa,CAAC,OAAO;;;;gBAAC,UAAA,CAAC;oBACxB,KAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;iBAC9B,EAAC,CAAC;gBACH,IAAI,CAAC,eAAe,EAAE,CAAC;gBACvB,IAAI,CAAC,sBAAsB,EAAE,CAAC;aACjC;SACJ;;;;;QAEO,4DAAsB;;;;QAA9B;YACI,IAAI,IAAI,CAAC,aAAa,EAAE;gBACpB,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;aACrD;SACJ;;;;;QAEO,yDAAmB;;;;QAA3B;YAAA,iBAMC;YALG,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,gBAAgB,CAAC,OAAO;;;;YAAE,UAAC,CAAC;gBAC7D,IAAI,CAAC,CAAC,MAAM,KAAM,KAAI,CAAC,kBAAkB,CAAC,aAAa,EAAE;oBACrD,KAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC;iBACvC;aACJ,GAAE,KAAK,CAAC,CAAC;SACb;;;;;QAEO,qDAAe;;;;QAAvB;YAAA,iBASC;YARG,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE;gBAC7C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG;;;;gBAAE,UAAA,CAAC;oBACvC,OAAO,KAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI;;;;oBAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,KAAK,KAAK,CAAC,GAAA,EAAC,CAAC;iBACvD,EAAC,CAAC,MAAM;;;;gBAAC,UAAA,CAAC,IAAI,OAAA,CAAC,GAAA,EAAC,CAAC;aACrB;iBAAM;gBACH,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;aAC1B;YACD,IAAI,CAAC,mBAAmB,EAAE,CAAC;SAC9B;;;;;QAEO,6DAAuB;;;;QAA/B;YACI,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM;;;;YAAC,UAAA,CAAC;gBAC3B,IAAI,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,yBAAyB,CAAC,GAAG,CAAC,CAAC,EAAE;oBACjD,OAAO,KAAK,CAAC;iBAChB;gBACD,OAAQ,CAAC,CAAC,aAAa,IAAI,CAAC,CAAC,aAAa,KAAK,SAAS,CAAA;aAC3D,EAAC,CAAC;SACN;;;;;QAEO,yDAAmB;;;;QAA3B;YACI,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SACjD;;;;;;QAEO,wDAAkB;;;;;QAA1B,UAA2B,GAAG;YAC1B,IAAI,GAAG,EAAE;gBAEL,IAAI,GAAG,CAAC,WAAW,KAAK,SAAS,EAAE;oBAC/B,GAAG,CAAC,WAAW,GAAG,EAAE,OAAO,EAAE,EAAC,eAAe,EAAE,CAAC,CAAC,EAAC,EAAE,CAAC;iBACxD;qBAAM;oBACH,GAAG,CAAC,WAAW,CAAC,OAAO,GAAG,GAAG,CAAC,WAAW,CAAC,OAAO,IAAI,EAAC,eAAe,EAAE,CAAC,CAAC,EAAC,CAAC;oBAC3E,IAAI,GAAG,CAAC,WAAW,CAAC,OAAO,CAAC,eAAe,KAAK,SAAS,EAAE;wBACvD,GAAG,CAAC,WAAW,CAAC,OAAO,CAAC,eAAe,GAAG,CAAC,CAAC,CAAC;qBAChD;iBACJ;;;;;;;;;aAUJ;SACJ;;;;;;;;;QAKD,+DAAyB;;;;;QAAzB,UAA0B,MAAM;YAC5B,MAAM,CAAC,eAAe,EAAE,CAAC;YACzB,IAAI,CAAC,sBAAsB,GAAG,CAAC,IAAI,CAAC,sBAAsB,CAAC;YAC3D,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,uBAAuB,EAAE,CAAC;SAC3D;;;;;;;;QAGD,oDAAc;;;;;;QAAd,UAAe,MAAM,EAAE,GAAG;YACtB,MAAM,CAAC,eAAe,EAAE,CAAC;YACzB,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE;gBAC5C,IAAI,CAAC,YAAY,YAAO,IAAI,CAAC,YAAY,GAAE,GAAG,EAAC,CAAC;gBAChD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG;;;;gBAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,KAAK,GAAA,EAAC,CAAC;gBACvD,IAAI,CAAC,mBAAmB,EAAE,CAAC;gBAC3B,IAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC;aACvC;SACJ;;;;;;;;QAGD,2DAAqB;;;;;;QAArB,UAAsB,MAAM,EAAE,GAAG;YAC7B,MAAM,CAAC,eAAe,EAAE,CAAC;YACzB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM;;;;YAAC,UAAA,CAAC,IAAI,OAAA,CAAC,KAAK,GAAG,CAAC,KAAK,GAAA,EAAC,CAAC;YACjE,IAAI,CAAC,eAAe,EAAE,CAAC;SAC1B;;;;;;;QAGD,4DAAsB;;;;;QAAtB,UAAuB,MAAM;;YACjB,IAAA,kCAAY,EAAE,8BAAU;;gBAE1B,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,CAAC;YAC5D,CAAA,KAAA,IAAI,CAAC,WAAW,EAAC,MAAM,qBAAC,UAAU,EAAE,CAAC,GAAK,WAAW,GAAE;YACvD,IAAI,CAAC,eAAe,EAAE,CAAC;SAC1B;;;;;;QAED,kDAAY;;;;;QAAZ,UAAa,MAAM,EAAE,GAAG;YACpB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC;SACnC;;oBAlKJI,cAAS,SAAC;wBACP,QAAQ,EAAE,sBAAsB;wBAChC,m/MAA4C;wBAC5C,aAAa,EAAEC,sBAAiB,CAAC,IAAI;qBACxC;;;;oBARkCE,aAAQ;oBAElC,yBAAyB;oBAFWD,sBAAiB;;;8BAUzDE,UAAK;6BACLA,UAAK;oCACLA,UAAK;kCAELA,UAAK;oCACLA,UAAK;wCAELC,WAAM;0CACNA,WAAM;0CACNA,WAAM;wCAENC,cAAS,SAAC,iBAAiB;yCAC3BA,cAAS,SAAC,oBAAoB;8BAC9BA,cAAS,SAAC,cAAc;;QAgJ7B,kCAAC;KAnKD;;;;;;ICHA,IAKQ,+CAAY,EAAE,mDAAc;AACpCkB,uBAAmB,CAAC,WAAW,GAAGC,sBAAY,CAAC,gBAAgB,EAAE,CAAC,OAAO,CAAC;AAC1ED,uBAAmB,CAAC,SAAS,GAAG,KAAK,CAAC;;QAsDlC,oCAAoB,MAAc,EAAU,QAAkB,EAAU,MAAiB,EAAU,EAAc;YAAjH,iBAAsH;YAAlG,WAAM,GAAN,MAAM,CAAQ;YAAU,aAAQ,GAAR,QAAQ,CAAU;YAAU,WAAM,GAAN,MAAM,CAAW;YAAU,OAAE,GAAF,EAAE,CAAY;YAzCvG,SAAI,GAAG,IAAI5B,iBAAY,EAAE,CAAC;YAC3B,YAAO,GAAqB;gBACjC,SAAS,EAAE,MAAM;gBACjB,kBAAkB,EAAE,oBAAoB;gBACxC,eAAe,EAAE;oBACb,SAAS,EAAE,kBAAkB;iBAChC;gBACD,cAAc;;;gBAAE;oBACZ,OAAO,QAAQ,CAAC,IAAI,CAAC;iBACxB,CAAA;gBACD,eAAe,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC;gBAChD,gBAAgB;;;;;gBAAE,UAAC,sBAAsB,EAAE,OAAO;oBAC9C,OAAO,IAAI,CAAC;iBACf,CAAA;gBACD,WAAW;;;;gBAAE,UAAC,UAAsB;oBAChC,KAAI,CAAC,MAAM,CAAC,GAAG;;;oBAAC;wBACZ,KAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;qBAChC,EAAC,CAAC;iBACN,CAAA;gBACD,MAAM;;;;gBAAE,UAAC,UAAsB;oBAC3B,KAAI,CAAC,MAAM,CAAC,GAAG;;;oBAAC;wBACZ,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;qBAC9B,EAAC,CAAC;iBACN,CAAA;gBACD,WAAW;;;gBAAE;oBACT,KAAI,CAAC,MAAM,CAAC,GAAG;;;oBAAC;wBACZ,KAAI,CAAC,WAAW,EAAE,CAAC;qBACtB,EAAC,CAAC;iBACN,CAAA;gBACD,WAAW;;;;gBAAE,UAAC,IAAsB;oBAChC,KAAI,CAAC,MAAM,CAAC,GAAG;;;oBAAC;wBACZ,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;qBAC1B,EAAC,CAAC;iBACN,CAAA;gBACD,SAAS;;;;gBAAE,UAAC,IAAsB;oBAC9B,KAAI,CAAC,MAAM,CAAC,GAAG;;;oBAAC;wBACZ,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;qBACxB,EAAC,CAAC;iBACN,CAAA;aACJ,CAAC;SAEoH;;;;QACtH,oDAAe;;;QAAf;YACI,IAAI,CAAC,OAAO,EAAE,CAAC;SAClB;;;;QAED,gDAAW;;;QAAX;YACI,IAAI,CAAC,UAAU,EAAE,CAAC;SACrB;;;;;QAEO,+CAAU;;;;QAAlB;YACI,IAAI,IAAI,CAAC,SAAS,EAAE;gBAChB,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;gBACzB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;aACzB;SACJ;;;;;QAEO,4CAAO;;;;QAAf;YACI,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,IAAI,CAAC,SAAS,GAAG4B,mBAAmB,CAChC,IAAI,CAAC,EAAE,CAAC,aAAa,EACrB,IAAI,CAAC,OAAO,CACf,CAAC;SACL;;;;;;QAEO,oDAAe;;;;;QAAvB,UAAwB,KAAK;YACzB,OAAO,KAAK,CAAC;SAChB;;;;;;QAEO,gDAAW;;;;;QAAnB,UAAoB,UAAU;SAC7B;;;;;;QAEO,gDAAW;;;;;QAAnB,UAAoB,IAAI;SAEvB;;;;;;QAEO,8CAAS;;;;;QAAjB,UAAkB,IAAI;SAErB;;;;;QAGO,gDAAW;;;;QAAnB;SAEC;;oBAxFJE,cAAS,SAAC;wBACP,QAAQ,EAAE,uBAAuB;qBACpC;;;;oBAjBmBC,WAAM;oBAAExB,aAAQ;oBAAEJ,cAAS;oBAAE6B,eAAU;;;2BAoBtDvB,WAAM;8BACND,UAAK;;QAoFV,iCAAC;KA1FD;;;;;;AChBAyB,uBAGyB,CAAC,WAAW,GAAGJ,sBAAY,CAAC,gBAAgB,EAAE,CAAC,OAAO,CAAC;AAChFK,uBAAyB,CAAC,SAAS,GAAG,KAAK,CAAC;AAE5C;QA8CI,kCAAoB,MAAc,EAAU,QAAkB,EAAU,MAAiB,EAAU,EAAc;YAAjH,iBAAsH;YAAlG,WAAM,GAAN,MAAM,CAAQ;YAAU,aAAQ,GAAR,QAAQ,CAAU;YAAU,WAAM,GAAN,MAAM,CAAW;YAAU,OAAE,GAAF,EAAE,CAAY;YAzCvG,SAAI,GAAG,IAAIlC,iBAAY,EAAE,CAAC;YAC3B,YAAO,GAAqB;gBACjC,WAAW,EAAE,YAAY;gBACzB,SAAS,EAAE,MAAM;gBACjB,eAAe,EAAE;oBACb,SAAS,EAAE,kBAAkB;iBAChC;gBACD,cAAc;;;gBAAE;oBACZ,OAAO,QAAQ,CAAC,IAAI,CAAC;iBACxB,CAAA;gBACD,eAAe,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC;gBAChD,gBAAgB;;;;;gBAAE,UAAC,sBAAsB,EAAE,OAAO;oBAC9C,OAAO,IAAI,CAAC;iBACf,CAAA;gBACD,WAAW;;;;gBAAE,UAAC,UAAsB;oBAChC,KAAI,CAAC,MAAM,CAAC,GAAG;;;oBAAC;wBACZ,KAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;qBAChC,EAAC,CAAC;iBACN,CAAA;gBACD,MAAM;;;;gBAAE,UAAC,UAAsB;oBAC3B,KAAI,CAAC,MAAM,CAAC,GAAG;;;oBAAC;wBACZ,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;qBAC9B,EAAC,CAAC;iBACN,CAAA;gBACD,WAAW;;;gBAAE;oBACT,KAAI,CAAC,MAAM,CAAC,GAAG;;;oBAAC;wBACZ,KAAI,CAAC,WAAW,EAAE,CAAC;qBACtB,EAAC,CAAC;iBACN,CAAA;gBACD,WAAW;;;;gBAAE,UAAC,IAAI;oBACd,KAAI,CAAC,MAAM,CAAC,GAAG;;;oBAAC;wBACZ,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;qBAC1B,EAAC,CAAC;iBACN,CAAA;gBACD,SAAS;;;;gBAAE,UAAC,IAAI;oBACZ,KAAI,CAAC,MAAM,CAAC,GAAG;;;oBAAC;wBACZ,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;qBACxB,EAAC,CAAC;iBACN,CAAA;aACJ,CAAC;SAEoH;;;;QACtH,kDAAe;;;QAAf;YACI,IAAI,CAAC,OAAO,EAAE,CAAC;SAClB;;;;QAED,8CAAW;;;QAAX;YACI,IAAI,CAAC,UAAU,EAAE,CAAC;SACrB;;;;;QAEO,6CAAU;;;;QAAlB;YACI,IAAI,IAAI,CAAC,SAAS,EAAE;gBAChB,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;gBACzB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;aACzB;SACJ;;;;;QAGO,0CAAO;;;;QAAf;YACI,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,IAAI,CAAC,SAAS,GAAGkC,mBAAyB,CACtC,IAAI,CAAC,EAAE,CAAC,aAAa,EACrB,IAAI,CAAC,OAAO,CACf,CAAC;SACL;;;;;;QAEO,kDAAe;;;;;QAAvB,UAAwB,KAAK;YACzB,OAAO,KAAK,CAAC;SAChB;;;;;;QAEO,8CAAW;;;;;QAAnB,UAAoB,UAAU;SAC7B;;;;;;QAEO,8CAAW;;;;;QAAnB,UAAoB,IAAI;SACvB;;;;;;QAEO,4CAAS;;;;;QAAjB,UAAkB,IAAI;SACrB;;;;;QAGO,8CAAW;;;;QAAnB;SACC;;oBAtFJJ,cAAS,SAAC;wBACP,QAAQ,EAAE,qBAAqB;qBAClC;;;;oBARmBC,WAAM;oBAAExB,aAAQ;oBAAEJ,cAAS;oBAAE6B,eAAU;;;2BAWtDvB,WAAM;8BACND,UAAK;;QAiFV,+BAAC;KAvFD;;;;;;ACLA;QA4BA;SAmDC;;;;;QARU,8BAAO;;;;QAAd,UAAe,MAAW;YACtB,OAAO;gBACH,QAAQ,EAAE,sBAAsB;gBAChC,SAAS,EAAE;oBACP,EAAE,OAAO,EAAE2B,gCAAqB,EAAE,QAAQ,EAAE,uBAAuB,EAAE;iBACxE;aACJ,CAAC;SACL;;oBAlDJC,aAAQ,SAAC;wBACN,YAAY,EAAE;4BACV,yBAAyB;4BACzB,4BAA4B;4BAC5B,4BAA4B;4BAC5B,4BAA4B;4BAC5B,2BAA2B;4BAC3B,0BAA0B;4BAC1B,wBAAwB;4BACxB,sBAAsB;4BACtB,kBAAkB;4BAClB,mBAAmB;yBACtB;wBACD,OAAO,EAAE;4BACLC,mBAAY;4BACZC,iBAAW;4BACXC,+BAAiB;4BACjBC,2BAAe;4BACfC,yBAAc;4BACdC,2BAAkB,CAAC,OAAO,EAAE;4BAC5BC,yBAAc,CAAC,OAAO,EAAE;4BACxBC,qBAAY,CAAC,OAAO,EAAE;4BACtBC,mBAAW,CAAC,OAAO,EAAE;4BACrBC,qBAAY;4BACZC,6BAAmB;4BACnBC,qBAAY,CAAC,OAAO,EAAE;4BACtBC,iDAA0B;4BAC1BC,uCAAqB;yBACxB;wBACD,eAAe,EAAE;4BACb,yBAAyB;4BACzB,sBAAsB;4BACtB,kBAAkB;4BAClB,mBAAmB;yBACtB;wBACD,OAAO,EAAE;4BACL,yBAAyB;4BACzB,sBAAsB;4BACtB,kBAAkB;4BAClB,mBAAmB;yBACtB;qBACJ;;QAUD,6BAAC;KAnDD;;;;;;;;;;;;;;;;;;;;;;;;"}