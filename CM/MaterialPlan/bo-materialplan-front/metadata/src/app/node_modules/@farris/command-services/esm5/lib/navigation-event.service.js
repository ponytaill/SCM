import { Injectable } from '@angular/core';
import { of, from, EMPTY } from 'rxjs';
import { every, concatMap, switchMap, take, tap } from 'rxjs/operators';
import { RuntimeFrameworkService } from './rtf-service';
import { MenuStateService } from './menu-state.service';
import { TAB_EVENT } from './types';
import { QuerystringService } from './querystring';
import { UID } from '@farris/devkit';
/**
 * 导航事件服务
 * @scope FormModule
 */
var NavigationEventService = /** @class */ (function () {
    function NavigationEventService(runtimeFrameworkService, menuStateService, querystringService) {
        this.runtimeFrameworkService = runtimeFrameworkService;
        this.menuStateService = menuStateService;
        this.querystringService = querystringService;
        this.onClosedListeners = new Map();
        this.onClosingListeners = new Map();
        this.onTabSwitchListeners = new Map();
    }
    Object.defineProperty(NavigationEventService.prototype, "querystrings", {
        get: function () {
            var params = this.querystringService.parse(window.location.hash);
            // 修正formToken
            if (params) {
                params.formToken = this.runtimeFrameworkService.formToken;
            }
            return params;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 注册事件
     */
    NavigationEventService.prototype.registerEvent = function () {
        var _this = this;
        var options = this.querystrings;
        this.params = options;
        // 注册标签页切换事件
        this.runtimeFrameworkService.addEventListener(TAB_EVENT.onTabSwitched, function (e) { return _this.handleTabSwitchEvent(e); }, options);
        // 注册标签页关闭后事件
        this.runtimeFrameworkService.addEventListener(TAB_EVENT.onTabClosed, function (e) { return _this.handleTabClosedEvent(e); }, options);
        // 注册标签页关闭前事件
        this.runtimeFrameworkService.addEventListener(TAB_EVENT.onTabClosing, function (e) { return _this.handleTabClosingEvent(e); }, options);
    };
    /**
     * 处理标签页切换事件
     */
    NavigationEventService.prototype.handleTabSwitchEvent = function (e) {
        if (!e) {
            return;
        }
        // 选中的表单为系统表单，只能返回id，没有tabId
        var eventTabId = e.tabId || e.id || null;
        if (!eventTabId) {
            return;
        }
        var options = this.params; // this.querystrings;
        var tabId = options.tabId || options.funcId || options.appId;
        var menuState = this.menuStateService.getMenuState(eventTabId);
        if (!!tabId && tabId === eventTabId && !!menuState && menuState.length > 0) {
            this.formReload();
        }
        this.fireTabSwitchEvent(e);
    };
    /**
     * 触发tab切换事件
     * @param e e
     */
    NavigationEventService.prototype.fireTabSwitchEvent = function (e) {
        if (!this.onTabSwitchListeners || this.onTabSwitchListeners.size < 1) {
            return;
        }
        this.onTabSwitchListeners.forEach(function (handle, key, map) {
            if (typeof handle === 'function') {
                handle(e);
            }
        });
    };
    /**
     * 标签页关闭前事件
     */
    NavigationEventService.prototype.handleTabClosingEvent = function (e) {
        var _this = this;
        if (!e) {
            return;
        }
        // 要关闭的表单为系统表单，只能返回id，没有tabId
        var eventTabId = e.tabId || e.id || null;
        var options = this.params; // this.querystrings;
        var tabId = options.tabId || options.funcId || options.appId;
        if (!!eventTabId && !!tabId && tabId === eventTabId) {
            this.fireTabClosingEvent(e).subscribe(function (result) {
                if (result) {
                    setTimeout(function () { return _this.removeMenuState(eventTabId); }, 500);
                    var formEventServices = window['formEventServices'];
                    if (formEventServices.has(eventTabId)) {
                        formEventServices.delete(eventTabId);
                        window['formEventServices'] = formEventServices;
                    }
                    if (!(e && e.hasOwnProperty('token'))) {
                        e = Object.assign({}, e, { token: options.formToken });
                    }
                    if (_this.frameContext && _this.frameContext.appContext) {
                        _this.frameContext.appContext.dispose();
                    }
                    _this.runtimeFrameworkService.closeMenu(e);
                }
            });
        }
    };
    /**
     * 触发关闭前事件
     */
    NavigationEventService.prototype.fireTabClosingEvent = function (e) {
        if (!this.onClosingListeners || this.onClosingListeners.size < 1) {
            return of(true);
        }
        var listeners = this.onClosingListeners.values();
        var result$ = from(listeners);
        // 用户拒绝
        var userRejected = false;
        return result$.pipe(concatMap(function (handle) {
            if (userRejected) {
                return EMPTY;
            }
            return handle(e).pipe(take(1), tap(function (result) { return userRejected = !result; }), switchMap(function (result) { return of(result); }));
        }), every(function (result) { return result; }));
    };
    /**
     * 标签页关闭后事件
     */
    NavigationEventService.prototype.handleTabClosedEvent = function (e) {
        if (!e) {
            return;
        }
        var options = this.params; // this.querystrings;
        var tabId = options.tabId || options.funcId || options.appId;
        var eventTabId = e.tabId || e.id || null;
        if (tabId === eventTabId) {
            return;
        }
        var menuState = this.menuStateService.getMenuState(tabId, eventTabId);
        if (!!eventTabId && !!menuState && menuState.length > 0) {
            this.removeMenuState(eventTabId);
            this.formReload();
        }
        this.fireTabClosedEvent(e);
    };
    NavigationEventService.prototype.removeMenuState = function (tabId) {
        if (this['context']) {
            this.menuStateService.removeMenu(tabId);
        }
    };
    /**
     * 触发关闭后事件
     * @param e event
     */
    NavigationEventService.prototype.fireTabClosedEvent = function (e) {
        if (!this.onClosedListeners || this.onClosedListeners.size < 1) {
            return;
        }
        this.onClosedListeners.forEach(function (handle, key, map) {
            if (typeof handle === 'function') {
                handle(e);
            }
        });
    };
    // #endregion
    /**
     * 注册事件监听器
     * @param eventType 事件类型 onTabClosed
     * @param handler 处理器
     */
    NavigationEventService.prototype.addEventListener = function (eventType, handler) {
        var key = UID.create();
        if (eventType === TAB_EVENT.onTabClosed) {
            this.onClosedListeners.set(key, handler);
            return key;
        }
        else if (eventType === TAB_EVENT.onTabClosing) {
            this.onClosingListeners.set(key, handler);
            return key;
        }
        else if (eventType === TAB_EVENT.onTabSwitched) {
            this.onTabSwitchListeners.set(key, handler);
            return key;
        }
        return null;
    };
    /**
     * 移除事件监听器
     * @param eventType 事件类型
     * @param key 事件标识
     */
    NavigationEventService.prototype.removeEventListener = function (eventType, key) {
        if (eventType === TAB_EVENT.onTabClosed) {
            return this.onClosedListeners.delete(key);
        }
        else if (eventType === TAB_EVENT.onTabClosing) {
            return this.onClosingListeners.delete(key);
        }
        return false;
    };
    /**
     * 清空事件监听器
     * @param eventType 事件类型
     */
    NavigationEventService.prototype.clearEventListener = function (eventType) {
        if (eventType === TAB_EVENT.onTabClosed) {
            this.onClosedListeners.clear();
        }
        else if (eventType === TAB_EVENT.onTabClosing) {
            this.onClosingListeners.clear();
        }
    };
    /**
     * 刷新组件数据
     */
    NavigationEventService.prototype.formReload = function () {
        try {
            // tslint:disable-next-line: no-string-literal
            this['context']['frameContext']['appContext']['refresh']();
        }
        catch (_a) { }
    };
    NavigationEventService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    NavigationEventService.ctorParameters = function () { return [
        { type: RuntimeFrameworkService },
        { type: MenuStateService },
        { type: QuerystringService }
    ]; };
    return NavigationEventService;
}());
export { NavigationEventService };
//# sourceMappingURL=data:application/json;base64,