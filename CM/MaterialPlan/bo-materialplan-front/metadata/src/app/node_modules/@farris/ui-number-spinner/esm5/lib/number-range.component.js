/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { BigNumber } from 'bignumber.js';
import { Component, forwardRef, Input, Output, ViewChild, ElementRef, EventEmitter } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { NumberSpinnerComponent } from './number-spinner.component';
import { PopoverDirective } from '@farris/ui-popover';
var NumberRangeComponent = /** @class */ (function (_super) {
    tslib_1.__extends(NumberRangeComponent, _super);
    function NumberRangeComponent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.beginPlaceHolder = '';
        _this.endPlaceHolder = '';
        _this.separator = '~';
        _this.__value = '';
        _this.beginValueChange = new EventEmitter();
        _this.endValueChange = new EventEmitter();
        _this.prevValue = '';
        _this.nextValue = '';
        _this._beginValue = '';
        _this._endValue = '';
        _this.focusState = {
            isFocus: false,
            target: '' // begin | end
        };
        return _this;
        //#endregion
    }
    Object.defineProperty(NumberRangeComponent.prototype, "beginValue", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this.prevValue = this.format(value);
            this._beginValue = this.isEmpty(value) ? '' : value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NumberRangeComponent.prototype, "endValue", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this.nextValue = this.format(value);
            this._endValue = this.isEmpty(value) ? '' : value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NumberRangeComponent.prototype, "value", {
        get: /**
         * @return {?}
         */
        function () {
            return this.__value;
        },
        set: /**
         * @param {?} v
         * @return {?}
         */
        function (v) {
            if (v !== this.__value) {
                this.__value = v === '~' ? '' : v;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NumberRangeComponent.prototype, "preNumValue", {
        get: /**
         * @return {?}
         */
        function () {
            /** @type {?} */
            var v = this.getRealValue(this.parser ? this.prevValue : this._beginValue);
            if (this.canNull && this.isEmpty(v)) {
                return '';
            }
            else {
                return v || 0;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NumberRangeComponent.prototype, "nextNumValue", {
        get: /**
         * @return {?}
         */
        function () {
            /** @type {?} */
            var v = this.getRealValue(this.parser ? this.nextValue : this._endValue);
            if (this.canNull && this.isEmpty(v)) {
                return '';
            }
            else {
                return v || 0;
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    NumberRangeComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        _super.prototype.ngOnInit.call(this);
        this.showButton = false;
        this.initPlaceHolderInfo();
    };
    /**
     * @return {?}
     */
    NumberRangeComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.documentClick = this.render.listen(document, 'click', (/**
         * @param {?} e
         * @return {?}
         */
        function (e) {
            _this.render.setStyle(_this.prevWrapper.nativeElement, 'flex', 1);
            _this.render.setStyle(_this.nextWrapper.nativeElement, 'flex', 1);
        }));
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    NumberRangeComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        _super.prototype.ngOnChanges.call(this, changes);
        if (changes.value && !changes.value.isFirstChange()) {
            this.setValue(changes.value.currentValue);
        }
    };
    /**
     * @return {?}
     */
    NumberRangeComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        if (this.documentClick) {
            this.documentClick();
        }
    };
    /**
     * @private
     * @return {?}
     */
    NumberRangeComponent.prototype.initPlaceHolderInfo = /**
     * @private
     * @return {?}
     */
    function () {
        if (!this.beginPlaceHolder) {
            this.beginPlaceHolder = this.localeService.getValue('numberSpinner.range.begin') || this.placeholder;
        }
        if (!this.endPlaceHolder) {
            this.endPlaceHolder = this.localeService.getValue('numberSpinner.range.end') || this.placeholder;
        }
    };
    /**
     * @private
     * @return {?}
     */
    NumberRangeComponent.prototype.getRangeValue = /**
     * @private
     * @return {?}
     */
    function () {
        return this.preNumValue + this.separator + this.nextNumValue;
    };
    /**
     * @private
     * @return {?}
     */
    NumberRangeComponent.prototype.getEndValue = /**
     * @private
     * @return {?}
     */
    function () {
        return this.getRealValue(this.nextValue);
    };
    /**
     * @private
     * @return {?}
     */
    NumberRangeComponent.prototype.getBeginValue = /**
     * @private
     * @return {?}
     */
    function () {
        return this.getRealValue(this.prevValue);
    };
    /**
     * @param {?} val
     * @return {?}
     */
    NumberRangeComponent.prototype.getRealValue = /**
     * @param {?} val
     * @return {?}
     */
    function (val) {
        if (this.parser) {
            return this.parser(val);
        }
        /** @type {?} */
        var _n = this.validInterval(new BigNumber(val));
        if (_n.isNaN()) {
            /** @type {?} */
            var minBigNum = new BigNumber('' + this.min);
            if (this.canNull || minBigNum.isNaN()) {
                return null;
            }
            else {
                _n = minBigNum;
            }
        }
        return (/** @type {?} */ (this._getRealValue(_n)));
    };
    /**
     * @param {?} val
     * @param {?=} type
     * @return {?}
     */
    NumberRangeComponent.prototype.onModelChange = /**
     * @param {?} val
     * @param {?=} type
     * @return {?}
     */
    function (val, type) {
        if (type === 'begin') {
            this._beginValue = val;
        }
        else if (type === 'end') {
            this._endValue = val;
        }
        this.value = this.getRangeValue();
        this.onChangeCallback(this.value);
        this.onTouchedCallback();
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    NumberRangeComponent.prototype.onClick = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        $event.stopPropagation();
    };
    /**
     * @param {?} e
     * @param {?} type
     * @return {?}
     */
    NumberRangeComponent.prototype.onBlur = /**
     * @param {?} e
     * @param {?} type
     * @return {?}
     */
    function (e, type) {
        if (!this.readonly && !this.disabled) {
            /** @type {?} */
            var tmpValue = e.value;
            this.focusState = { isFocus: false, target: type };
            if (type === 'begin') {
                /** @type {?} */
                var nextVal = this.getEndValue();
                /** @type {?} */
                var minValue = this.isEmpty(tmpValue)
                    ? ''
                    : this.isEmpty(nextVal)
                        ? tmpValue
                        : BigNumber.min(tmpValue, nextVal).toFixed();
                // this.prevValue = this.format(minValue);
                this.beginValue = this.validInterval(new BigNumber(minValue)).toFixed();
                // this.beginValue = this.getRealValue(this.prevValue);
                this.inputPrev.nativeElement.value = this.prevValue;
                this.onModelChange(minValue, type);
            }
            else {
                /** @type {?} */
                var beginVal = this.getBeginValue();
                /** @type {?} */
                var maxValue = this.isEmpty(tmpValue)
                    ? ''
                    : this.isEmpty(beginVal)
                        ? tmpValue
                        : BigNumber.max(tmpValue, beginVal).toFixed();
                // this.nextValue = this.format(maxValue);
                // this.endValue = this.getRealValue(this.nextValue);
                this.endValue = this.validInterval(new BigNumber(maxValue)).toFixed();
                this.inputNext.nativeElement.value = this.nextValue;
                this.onModelChange(maxValue, type);
            }
        }
        this.valueChange.emit(this.value);
        if (type === 'begin') {
            this.beginValueChange.emit(this.preNumValue);
        }
        else {
            this.endValueChange.emit(this.nextNumValue);
        }
        this.blur.emit();
    };
    /**
     * @param {?=} type
     * @return {?}
     */
    NumberRangeComponent.prototype.onFocus = /**
     * @param {?=} type
     * @return {?}
     */
    function (type) {
        if (!this.readonly && !this.disabled) {
            this.focusState = { isFocus: true, target: type };
            if (type === 'begin') {
                this.inputPrev.nativeElement.value = this._beginValue;
                this.inputPrev.nativeElement.setSelectionRange(0, this._beginValue.length);
                this.expendWidth('begin', 3);
            }
            else {
                this.inputNext.nativeElement.value = this._endValue;
                this.inputNext.nativeElement.setSelectionRange(0, this._endValue.length);
                this.expendWidth('end', 3);
            }
        }
        this.focus.emit(type);
    };
    /**
     * @param {?} which
     * @param {?} num
     * @return {?}
     */
    NumberRangeComponent.prototype.expendWidth = /**
     * @param {?} which
     * @param {?} num
     * @return {?}
     */
    function (which, num) {
        /** @type {?} */
        var target;
        /** @type {?} */
        var other;
        if (which === 'begin') {
            target = this.prevWrapper.nativeElement;
            other = this.nextWrapper.nativeElement;
        }
        else {
            target = this.nextWrapper.nativeElement;
            other = this.prevWrapper.nativeElement;
        }
        var width = target.getBoundingClientRect().width;
        if (width < 150) {
            this.render.setStyle(target, 'flex', num);
            this.render.setStyle(other, 'flex', 1);
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    NumberRangeComponent.prototype.onMouseEnter = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.isActiveTip = this.isShowPopover();
        if (this.nextValue && this.prevValue) {
            this.popValue = this.prevValue + '~' + this.nextValue;
        }
        else {
            this.popValue = '';
        }
    };
    /**
     * @return {?}
     */
    NumberRangeComponent.prototype.isShowPopover = /**
     * @return {?}
     */
    function () {
        var width = this.el.nativeElement.getBoundingClientRect().width;
        if (width && width < 200) {
            return true;
        }
        return false;
    };
    /**
     * @param {?} $event
     * @param {?} typ
     * @return {?}
     */
    NumberRangeComponent.prototype.onKeyDownRange = /**
     * @param {?} $event
     * @param {?} typ
     * @return {?}
     */
    function ($event, typ) {
        if ($event.key === 'ArrowDown') {
            $event.preventDefault();
            this.down($event, typ);
        }
        if ($event.key === 'ArrowUp') {
            $event.preventDefault();
            this.up($event, typ);
        }
        $event.stopPropagation();
    };
    /**
     * @param {?} val
     * @return {?}
     */
    NumberRangeComponent.prototype.writeValue = /**
     * @param {?} val
     * @return {?}
     */
    function (val) {
        this.setValue(val);
    };
    /**
     * @param {?} val
     * @return {?}
     */
    NumberRangeComponent.prototype.setValue = /**
     * @param {?} val
     * @return {?}
     */
    function (val) {
        if (typeof val === 'string') {
            /** @type {?} */
            var valArr = val.split(this.separator);
            this._beginValue = valArr[0] ? valArr[0] : '';
            this._endValue = valArr[1] ? valArr[1] : '';
        }
        else {
            this._beginValue = '';
            this._beginValue = '';
        }
        this.prevValue = this.format(this._beginValue);
        this.nextValue = this.format(this._endValue);
    };
    //#region 上下操作按钮 或 上下方向键
    //#region 上下操作按钮 或 上下方向键
    /**
     * @param {?} e
     * @param {?} type
     * @return {?}
     */
    NumberRangeComponent.prototype.up = 
    //#region 上下操作按钮 或 上下方向键
    /**
     * @param {?} e
     * @param {?} type
     * @return {?}
     */
    function (e, type) {
        e.stopPropagation();
        this._compute(type, 'up', ((/** @type {?} */ (e.target))).value);
    };
    /**
     * @param {?} e
     * @param {?} type
     * @return {?}
     */
    NumberRangeComponent.prototype.down = /**
     * @param {?} e
     * @param {?} type
     * @return {?}
     */
    function (e, type) {
        e.stopPropagation();
        this._compute(type, 'down', ((/** @type {?} */ (e.target))).value);
    };
    /**
     * @private
     * @param {?} type
     * @param {?} dir
     * @param {?} tagVal
     * @return {?}
     */
    NumberRangeComponent.prototype._compute = /**
     * @private
     * @param {?} type
     * @param {?} dir
     * @param {?} tagVal
     * @return {?}
     */
    function (type, dir, tagVal) {
        /** @type {?} */
        var m = dir === 'up' ? 'plus' : 'minus';
        if (type === 'begin' && this.isDisableOfBtn(dir, this.prevValue)) {
            /** @type {?} */
            var bv = tagVal || 0;
            /** @type {?} */
            var ev = this.getRealValue(this.nextValue);
            /** @type {?} */
            var r = new BigNumber(bv)[m](Number(this.step));
            /** @type {?} */
            var v = r.toFixed();
            /** @type {?} */
            var minValue = BigNumber.min(v, ev);
            if (!minValue.eq(v) && !this.isEmpty(ev)) {
                v = ev;
            }
            this._beginValue = v;
            // this.prevValue = this.format(v);
            this.inputPrev.nativeElement.value = v;
            this.onModelChange(v, type);
            this.beginValueChange.emit(v);
        }
        else if (type === 'end' && this.isDisableOfBtn(dir, this.nextValue)) {
            /** @type {?} */
            var bv = this.getRealValue(this.prevValue);
            /** @type {?} */
            var ev = tagVal || 0;
            /** @type {?} */
            var r = new BigNumber(ev)[m](Number(this.step));
            /** @type {?} */
            var v = r.toFixed();
            /** @type {?} */
            var maxValue = BigNumber.max(bv, v);
            if (!maxValue.eq(v) && !this.isEmpty(bv)) {
                v = bv;
            }
            this._endValue = v;
            // this.nextValue = this.format(v);
            this.inputNext.nativeElement.value = v;
            this.onModelChange(v, type);
            this.endValueChange.emit(v);
        }
        this.valueChange.emit(this.value);
        this.expendWidth(type, 3);
    };
    NumberRangeComponent.decorators = [
        { type: Component, args: [{
                    selector: 'farris-number-range',
                    template: "<div\r\n    class=\"input-group number-range f-cmp-number-spinner\"\r\n    [ngClass]=\"{\r\n        'f-state-disabled': disabled,\r\n        'f-state-readonly': readonly\r\n    }\"\r\n    (click)=\"$event.stopPropagation()\" (mouseenter)=\"onMouseEnter($event)\"\r\n>\r\n    <div class=\"form-control input-container\"\r\n        #popover=\"bs-popover\"\r\n        farrisPopover\r\n        [popover]=\"popValue\"\r\n        [triggers]=\"'hover'\"\r\n        [popActive]=\"isActiveTip\"\r\n        [showAction]=\"'show2'\"\r\n        [container]=\"'body'\"\r\n    >\r\n        <div class=\"sub-input-group\" #prevWrapper>\r\n            <input\r\n                type=\"text\"\r\n                number-only\r\n                [precision]=\"precision\"\r\n                autocomplete=\"off\"\r\n                class=\"sub-input form-control f-state-focus f-state-hover\"\r\n                [(ngModel)]=\"prevValue\"\r\n                #inputPrev\r\n                (blur)=\"onBlur(inputPrev, 'begin')\"\r\n                (focus)=\"onFocus('begin')\"\r\n                (ngModelChange)=\"onModelChange($event, 'begin')\"\r\n                [placeholder]=\"disabled || readonly ?'':beginPlaceHolder\"\r\n                [readOnly]=\"disabled || readonly ? 'readonly' : ''\"\r\n                [style.text-align]=\"textAlign\"\r\n                (keydown)=\"onKeyDownRange($event, 'begin')\"\r\n                (click)=\"onClick($event)\"\r\n            />\r\n            <div\r\n                class=\"input-group-append btn-group btn-group-number sub-btn-group\"\r\n                *ngIf=\"!readonly && !disabled && showButton\"\r\n            >\r\n                <button\r\n                    class=\"btn btn-secondary btn-number-flag btn-number-flag-up\"\r\n                    [style.cursor]=\"isDisableOfBtn('up', prevValue) ? 'pointer' : 'not-allowed'\"\r\n                    (click)=\"up($event, 'begin')\"\r\n                >\r\n                    <span class=\"f-icon f-icon-dropdown number-arrow-chevron\"></span>\r\n                </button>\r\n                <button\r\n                    class=\"btn btn-secondary btn-number-flag  btn-number-flag-down\"\r\n                    [style.cursor]=\"isDisableOfBtn('down', prevValue) ? 'pointer' : 'not-allowed'\"\r\n                    (click)=\"down($event, 'begin')\"\r\n                >\r\n                    <span class=\"f-icon f-icon-dropdown number-arrow-chevron\"></span>\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <span class=\"spliter\">~</span>\r\n        <div class=\"sub-input-group\" #nextWrapper>\r\n            <input\r\n                type=\"text\"\r\n                number-only\r\n                [precision]=\"precision\"\r\n                autocomplete=\"off\"\r\n                class=\"sub-input form-control f-state-focus f-state-hover\"\r\n                [(ngModel)]=\"nextValue\"\r\n                #inputNext\r\n                (blur)=\"onBlur(inputNext, 'end')\"\r\n                (focus)=\"onFocus('end')\"\r\n                (ngModelChange)=\"onModelChange($event, 'end')\"\r\n                [placeholder]=\"disabled || readonly ?'':endPlaceHolder\"\r\n                [readOnly]=\"disabled || readonly ? 'readonly' : ''\"\r\n                [style.text-align]=\"textAlign\"\r\n                (keydown)=\"onKeyDownRange($event, 'end')\"\r\n                (click)=\"onClick($event)\"\r\n            />\r\n            <div\r\n                class=\"input-group-append btn-group btn-group-number sub-btn-group\"\r\n                *ngIf=\"!readonly && !disabled  && showButton\"\r\n                [style.text-align]=\"textAlign\"\r\n            >\r\n                <button\r\n                    class=\"btn btn-secondary btn-number-flag\"\r\n                    [style.cursor]=\"isDisableOfBtn('up', nextValue) ? 'pointer' : 'not-allowed'\"\r\n                    (click)=\"up($event, 'end')\"\r\n                >\r\n                    <span class=\"icon k-i-arrow-chevron-up number-arrow-chevron\"></span>\r\n                </button>\r\n                <button\r\n                    class=\"btn btn-secondary btn-number-flag\"\r\n                    [style.cursor]=\"isDisableOfBtn('down', nextValue) ? 'pointer' : 'not-allowed'\"\r\n                    (click)=\"down($event, 'end')\"\r\n                >\r\n                    <span class=\"icon k-i-arrow-chevron-down number-arrow-chevron\"></span>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n",
                    providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: forwardRef((/**
                             * @return {?}
                             */
                            function () { return NumberRangeComponent; })),
                            multi: true
                        }
                    ],
                    styles: [".input-group .btn-group-number{height:1.50003rem;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;background-color:#fff}.input-group .btn-group-number .btn-number-flag{height:50%;display:-webkit-box;display:flex;box-shadow:none;padding:0 5px;margin-left:1px;border-left:1px solid #d9d9d9;overflow:hidden;-webkit-transition:.1s linear;transition:.1s linear}.input-group .btn-group-number .btn-number-flag .number-arrow-chevron{-webkit-box-flex:1;flex:1;line-height:1}.input-group .btn-group-number .btn-number-flag:hover{height:60%!important}.input-group .btn-group-number .btn-number-flag:nth-child(2){border-top:1px solid #d9d9d9}input::-webkit-inner-spin-button,input::-webkit-outer-spin-button{-webkit-appearance:none!important;margin:0}.number-range{position:relative}.number-range .input-container{display:-webkit-box;display:flex;padding:0}.number-range .input-container .sub-input-group{-webkit-box-flex:1;flex:1;position:relative;display:-webkit-box;display:flex;-webkit-transition:.3s ease-out;transition:.3s ease-out}.number-range .input-container .sub-input-group .sub-input{width:100%;border:none;outline:0;background-color:rgba(0,0,0,0);min-width:2px;padding:.125rem 4px .125rem .5rem}.number-range .input-container .spliter{width:15px;text-align:center}"]
                }] }
    ];
    NumberRangeComponent.propDecorators = {
        beginPlaceHolder: [{ type: Input }],
        endPlaceHolder: [{ type: Input }],
        inputPrev: [{ type: ViewChild, args: ['inputPrev',] }],
        inputNext: [{ type: ViewChild, args: ['inputNext',] }],
        prevWrapper: [{ type: ViewChild, args: ['prevWrapper',] }],
        nextWrapper: [{ type: ViewChild, args: ['nextWrapper',] }],
        popover: [{ type: ViewChild, args: ['popover',] }],
        separator: [{ type: Input }],
        beginValue: [{ type: Input }],
        endValue: [{ type: Input }],
        value: [{ type: Input }],
        beginValueChange: [{ type: Output }],
        endValueChange: [{ type: Output }]
    };
    return NumberRangeComponent;
}(NumberSpinnerComponent));
export { NumberRangeComponent };
if (false) {
    /** @type {?} */
    NumberRangeComponent.prototype.beginPlaceHolder;
    /** @type {?} */
    NumberRangeComponent.prototype.endPlaceHolder;
    /** @type {?} */
    NumberRangeComponent.prototype.inputPrev;
    /** @type {?} */
    NumberRangeComponent.prototype.inputNext;
    /** @type {?} */
    NumberRangeComponent.prototype.prevWrapper;
    /** @type {?} */
    NumberRangeComponent.prototype.nextWrapper;
    /** @type {?} */
    NumberRangeComponent.prototype.popover;
    /** @type {?} */
    NumberRangeComponent.prototype.separator;
    /**
     * @type {?}
     * @private
     */
    NumberRangeComponent.prototype.__value;
    /** @type {?} */
    NumberRangeComponent.prototype.beginValueChange;
    /** @type {?} */
    NumberRangeComponent.prototype.endValueChange;
    /** @type {?} */
    NumberRangeComponent.prototype.prevValue;
    /** @type {?} */
    NumberRangeComponent.prototype.nextValue;
    /**
     * @type {?}
     * @private
     */
    NumberRangeComponent.prototype._beginValue;
    /**
     * @type {?}
     * @private
     */
    NumberRangeComponent.prototype._endValue;
    /**
     * @type {?}
     * @private
     */
    NumberRangeComponent.prototype.documentClick;
    /**
     * @type {?}
     * @private
     */
    NumberRangeComponent.prototype.focusState;
}
//# sourceMappingURL=data:application/json;base64,