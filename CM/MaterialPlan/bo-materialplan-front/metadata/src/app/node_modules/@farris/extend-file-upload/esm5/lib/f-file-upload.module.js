/**
 * @fileoverview added by tsickle
 * Generated from: lib/f-file-upload.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FFileDropDirective, FFileSelectDirective, FFilePreviewListTypeTemplateDirective, FFileUploadDirective, FFilePreviewToolbarTemplateDirective } from './directive/index';
import { FFileUploadComponent, FFileViewImageComponent, FFilePreviewComponent, PreviewCheckboxComponent } from './components/index';
import { UploadServerService } from './model/index';
import { FFileSizePipe, FFileDatePipe } from './pipe/index';
import { FFileUploadAPIServiceToken, FFileUploadDefaultService, FFileUploaderService } from './service/index';
import { NotifyModule } from '@farris/ui-notify';
import { ModalModule } from '@farris/ui-modal';
import { DateHelperModule } from '@farris/ui-common/date';
import { MessagerModule } from '@farris/ui-messager';
import { FAreaResponseModule } from '@farris/ui-area-response';
import { UploadAndPreviewComponent } from './components/upload-and-preview/upload-and-preview.component';
import { UploadProgressComponent } from './components/upload-progress/upload-progress.component';
import { MultiDownloadInfoComponent } from './components/multi-download-info/multi-download-info.component';
import { UploadFileOrderDragDirective } from './components/upload-and-preview/file-order-drag.directive';
import { LocaleModule } from '@farris/ui-locale';
import { UploadReplaceXPipe } from './components/upload-and-preview/replaceX.pipe';
import { FarrisCommonModule } from '@farris/ui-common';
var FFileUploadModule = /** @class */ (function () {
    function FFileUploadModule() {
    }
    /**
     * @param {?=} config
     * @param {?=} uploadSer
     * @return {?}
     */
    FFileUploadModule.forRoot = /**
     * @param {?=} config
     * @param {?=} uploadSer
     * @return {?}
     */
    function (config, uploadSer) {
        return {
            ngModule: FFileUploadModule,
            providers: [
                { provide: FFileUploadAPIServiceToken, useValue: config },
                FFileUploaderService,
                {
                    provide: UploadServerService,
                    useClass: uploadSer || FFileUploadDefaultService
                }
            ]
        };
    };
    FFileUploadModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [FFileDropDirective, FFileSelectDirective, FFileUploadComponent,
                        FFileViewImageComponent, FFilePreviewComponent, FFilePreviewListTypeTemplateDirective, FFileUploadDirective,
                        PreviewCheckboxComponent, FFilePreviewToolbarTemplateDirective, FFileSizePipe, UploadAndPreviewComponent, UploadProgressComponent,
                        FFileDatePipe, MultiDownloadInfoComponent, UploadFileOrderDragDirective,
                        UploadReplaceXPipe
                    ],
                    exports: [FFileDropDirective, FFileSelectDirective, FFileUploadComponent, FFileViewImageComponent,
                        FFilePreviewComponent, FFilePreviewListTypeTemplateDirective, FFileUploadDirective, FFilePreviewToolbarTemplateDirective, FFileSizePipe,
                        UploadAndPreviewComponent, UploadProgressComponent, FFileDatePipe, UploadFileOrderDragDirective],
                    imports: [
                        CommonModule,
                        NotifyModule,
                        MessagerModule,
                        FAreaResponseModule,
                        FarrisCommonModule,
                        DateHelperModule.forRoot(),
                        ModalModule.forRoot(),
                        LocaleModule.forRoot()
                    ],
                    providers: [
                        FFileUploaderService,
                        {
                            provide: UploadServerService,
                            useClass: FFileUploadDefaultService
                        }
                    ],
                    entryComponents: [
                        MultiDownloadInfoComponent
                    ]
                },] }
    ];
    return FFileUploadModule;
}());
export { FFileUploadModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZi1maWxlLXVwbG9hZC5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL2V4dGVuZC1maWxlLXVwbG9hZC8iLCJzb3VyY2VzIjpbImxpYi9mLWZpbGUtdXBsb2FkLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQXVCLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsb0JBQW9CLEVBQUUscUNBQXFDLEVBQUUsb0JBQW9CLEVBQUUsb0NBQW9DLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNoTCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsdUJBQXVCLEVBQUUscUJBQXFCLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNwSSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDcEQsT0FBTyxFQUFFLGFBQWEsRUFBRSxhQUFhLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFDNUQsT0FBTyxFQUEyQiwwQkFBMEIsRUFBRSx5QkFBeUIsRUFBRSxvQkFBb0IsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ3ZJLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNqRCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDL0MsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDMUQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQy9ELE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLDhEQUE4RCxDQUFDO0FBQ3pHLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLHdEQUF3RCxDQUFDO0FBQ2pHLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLGdFQUFnRSxDQUFDO0FBQzVHLE9BQU8sRUFBRSw0QkFBNEIsRUFBRSxNQUFNLDJEQUEyRCxDQUFDO0FBQ3pHLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNqRCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSwrQ0FBK0MsQ0FBQztBQUNuRixPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUd2RDtJQUFBO0lBNkNBLENBQUM7Ozs7OztJQWJRLHlCQUFPOzs7OztJQUFkLFVBQWUsTUFBZ0MsRUFBRSxTQUFlO1FBQzlELE9BQU87WUFDTCxRQUFRLEVBQUUsaUJBQWlCO1lBQzNCLFNBQVMsRUFBRTtnQkFDVCxFQUFFLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFFO2dCQUN6RCxvQkFBb0I7Z0JBQ3BCO29CQUNFLE9BQU8sRUFBRSxtQkFBbUI7b0JBQzVCLFFBQVEsRUFBRSxTQUFTLElBQUkseUJBQXlCO2lCQUNqRDthQUNGO1NBQ0YsQ0FBQztJQUNKLENBQUM7O2dCQTVDRixRQUFRLFNBQUM7b0JBQ1IsWUFBWSxFQUFFLENBQUMsa0JBQWtCLEVBQUUsb0JBQW9CLEVBQUUsb0JBQW9CO3dCQUMzRSx1QkFBdUIsRUFBRSxxQkFBcUIsRUFBRSxxQ0FBcUMsRUFBRSxvQkFBb0I7d0JBQzNHLHdCQUF3QixFQUFFLG9DQUFvQyxFQUFFLGFBQWEsRUFBRSx5QkFBeUIsRUFBRSx1QkFBdUI7d0JBQ2pJLGFBQWEsRUFBQywwQkFBMEIsRUFBRSw0QkFBNEI7d0JBQ3RFLGtCQUFrQjtxQkFDbkI7b0JBQ0QsT0FBTyxFQUFFLENBQUMsa0JBQWtCLEVBQUUsb0JBQW9CLEVBQUUsb0JBQW9CLEVBQUUsdUJBQXVCO3dCQUMvRixxQkFBcUIsRUFBRSxxQ0FBcUMsRUFBRSxvQkFBb0IsRUFBRSxvQ0FBb0MsRUFBRSxhQUFhO3dCQUN2SSx5QkFBeUIsRUFBRSx1QkFBdUIsRUFBRSxhQUFhLEVBQUUsNEJBQTRCLENBQUM7b0JBQ2xHLE9BQU8sRUFBRTt3QkFDUCxZQUFZO3dCQUNaLFlBQVk7d0JBQ1osY0FBYzt3QkFDZCxtQkFBbUI7d0JBQ25CLGtCQUFrQjt3QkFDbEIsZ0JBQWdCLENBQUMsT0FBTyxFQUFFO3dCQUMxQixXQUFXLENBQUMsT0FBTyxFQUFFO3dCQUNyQixZQUFZLENBQUMsT0FBTyxFQUFFO3FCQUN2QjtvQkFDRCxTQUFTLEVBQUU7d0JBQ1Qsb0JBQW9CO3dCQUNwQjs0QkFDRSxPQUFPLEVBQUUsbUJBQW1COzRCQUM1QixRQUFRLEVBQUUseUJBQXlCO3lCQUNwQztxQkFDRjtvQkFDRCxlQUFlLEVBQUM7d0JBQ2QsMEJBQTBCO3FCQUMzQjtpQkFDRjs7SUFlRCx3QkFBQztDQUFBLEFBN0NELElBNkNDO1NBZFksaUJBQWlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUsIE1vZHVsZVdpdGhQcm92aWRlcnMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcclxuaW1wb3J0IHsgRkZpbGVEcm9wRGlyZWN0aXZlLCBGRmlsZVNlbGVjdERpcmVjdGl2ZSwgRkZpbGVQcmV2aWV3TGlzdFR5cGVUZW1wbGF0ZURpcmVjdGl2ZSwgRkZpbGVVcGxvYWREaXJlY3RpdmUsIEZGaWxlUHJldmlld1Rvb2xiYXJUZW1wbGF0ZURpcmVjdGl2ZSB9IGZyb20gJy4vZGlyZWN0aXZlL2luZGV4JztcclxuaW1wb3J0IHsgRkZpbGVVcGxvYWRDb21wb25lbnQsIEZGaWxlVmlld0ltYWdlQ29tcG9uZW50LCBGRmlsZVByZXZpZXdDb21wb25lbnQsIFByZXZpZXdDaGVja2JveENvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9pbmRleCc7XHJcbmltcG9ydCB7IFVwbG9hZFNlcnZlclNlcnZpY2UgfSBmcm9tICcuL21vZGVsL2luZGV4JztcclxuaW1wb3J0IHsgRkZpbGVTaXplUGlwZSwgRkZpbGVEYXRlUGlwZSB9IGZyb20gJy4vcGlwZS9pbmRleCc7XHJcbmltcG9ydCB7IEZGaWxlVXBsb2FkU2VydmVyQ29uZmlnLCBGRmlsZVVwbG9hZEFQSVNlcnZpY2VUb2tlbiwgRkZpbGVVcGxvYWREZWZhdWx0U2VydmljZSwgRkZpbGVVcGxvYWRlclNlcnZpY2UgfSBmcm9tICcuL3NlcnZpY2UvaW5kZXgnO1xyXG5pbXBvcnQgeyBOb3RpZnlNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLW5vdGlmeSc7XHJcbmltcG9ydCB7IE1vZGFsTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1tb2RhbCc7XHJcbmltcG9ydCB7IERhdGVIZWxwZXJNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWNvbW1vbi9kYXRlJztcclxuaW1wb3J0IHsgTWVzc2FnZXJNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLW1lc3NhZ2VyJztcclxuaW1wb3J0IHsgRkFyZWFSZXNwb25zZU1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktYXJlYS1yZXNwb25zZSc7XHJcbmltcG9ydCB7IFVwbG9hZEFuZFByZXZpZXdDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvdXBsb2FkLWFuZC1wcmV2aWV3L3VwbG9hZC1hbmQtcHJldmlldy5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBVcGxvYWRQcm9ncmVzc0NvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy91cGxvYWQtcHJvZ3Jlc3MvdXBsb2FkLXByb2dyZXNzLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IE11bHRpRG93bmxvYWRJbmZvQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL211bHRpLWRvd25sb2FkLWluZm8vbXVsdGktZG93bmxvYWQtaW5mby5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBVcGxvYWRGaWxlT3JkZXJEcmFnRGlyZWN0aXZlIH0gZnJvbSAnLi9jb21wb25lbnRzL3VwbG9hZC1hbmQtcHJldmlldy9maWxlLW9yZGVyLWRyYWcuZGlyZWN0aXZlJztcclxuaW1wb3J0IHsgTG9jYWxlTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1sb2NhbGUnO1xyXG5pbXBvcnQgeyBVcGxvYWRSZXBsYWNlWFBpcGUgfSBmcm9tICcuL2NvbXBvbmVudHMvdXBsb2FkLWFuZC1wcmV2aWV3L3JlcGxhY2VYLnBpcGUnO1xyXG5pbXBvcnQgeyBGYXJyaXNDb21tb25Nb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWNvbW1vbic7XHJcblxyXG5cclxuQE5nTW9kdWxlKHtcclxuICBkZWNsYXJhdGlvbnM6IFtGRmlsZURyb3BEaXJlY3RpdmUsIEZGaWxlU2VsZWN0RGlyZWN0aXZlLCBGRmlsZVVwbG9hZENvbXBvbmVudCwgXHJcbiAgICBGRmlsZVZpZXdJbWFnZUNvbXBvbmVudCwgRkZpbGVQcmV2aWV3Q29tcG9uZW50LCBGRmlsZVByZXZpZXdMaXN0VHlwZVRlbXBsYXRlRGlyZWN0aXZlLCBGRmlsZVVwbG9hZERpcmVjdGl2ZSwgXHJcbiAgICBQcmV2aWV3Q2hlY2tib3hDb21wb25lbnQsIEZGaWxlUHJldmlld1Rvb2xiYXJUZW1wbGF0ZURpcmVjdGl2ZSwgRkZpbGVTaXplUGlwZSwgVXBsb2FkQW5kUHJldmlld0NvbXBvbmVudCwgVXBsb2FkUHJvZ3Jlc3NDb21wb25lbnQsIFxyXG4gICAgRkZpbGVEYXRlUGlwZSxNdWx0aURvd25sb2FkSW5mb0NvbXBvbmVudCwgVXBsb2FkRmlsZU9yZGVyRHJhZ0RpcmVjdGl2ZSxcclxuICAgIFVwbG9hZFJlcGxhY2VYUGlwZVxyXG4gIF0sXHJcbiAgZXhwb3J0czogW0ZGaWxlRHJvcERpcmVjdGl2ZSwgRkZpbGVTZWxlY3REaXJlY3RpdmUsIEZGaWxlVXBsb2FkQ29tcG9uZW50LCBGRmlsZVZpZXdJbWFnZUNvbXBvbmVudCwgXHJcbiAgICBGRmlsZVByZXZpZXdDb21wb25lbnQsIEZGaWxlUHJldmlld0xpc3RUeXBlVGVtcGxhdGVEaXJlY3RpdmUsIEZGaWxlVXBsb2FkRGlyZWN0aXZlLCBGRmlsZVByZXZpZXdUb29sYmFyVGVtcGxhdGVEaXJlY3RpdmUsIEZGaWxlU2l6ZVBpcGUsXHJcbiAgICBVcGxvYWRBbmRQcmV2aWV3Q29tcG9uZW50LCBVcGxvYWRQcm9ncmVzc0NvbXBvbmVudCwgRkZpbGVEYXRlUGlwZSwgVXBsb2FkRmlsZU9yZGVyRHJhZ0RpcmVjdGl2ZV0sXHJcbiAgaW1wb3J0czogW1xyXG4gICAgQ29tbW9uTW9kdWxlLFxyXG4gICAgTm90aWZ5TW9kdWxlLCBcclxuICAgIE1lc3NhZ2VyTW9kdWxlLFxyXG4gICAgRkFyZWFSZXNwb25zZU1vZHVsZSwgXHJcbiAgICBGYXJyaXNDb21tb25Nb2R1bGUsXHJcbiAgICBEYXRlSGVscGVyTW9kdWxlLmZvclJvb3QoKSwgXHJcbiAgICBNb2RhbE1vZHVsZS5mb3JSb290KCksXHJcbiAgICBMb2NhbGVNb2R1bGUuZm9yUm9vdCgpXHJcbiAgXSxcclxuICBwcm92aWRlcnM6IFtcclxuICAgIEZGaWxlVXBsb2FkZXJTZXJ2aWNlLFxyXG4gICAge1xyXG4gICAgICBwcm92aWRlOiBVcGxvYWRTZXJ2ZXJTZXJ2aWNlLFxyXG4gICAgICB1c2VDbGFzczogRkZpbGVVcGxvYWREZWZhdWx0U2VydmljZVxyXG4gICAgfVxyXG4gIF0sXHJcbiAgZW50cnlDb21wb25lbnRzOltcclxuICAgIE11bHRpRG93bmxvYWRJbmZvQ29tcG9uZW50XHJcbiAgXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgRkZpbGVVcGxvYWRNb2R1bGUge1xyXG4gIHN0YXRpYyBmb3JSb290KGNvbmZpZz86IEZGaWxlVXBsb2FkU2VydmVyQ29uZmlnLCB1cGxvYWRTZXI/OiBhbnkpOiBNb2R1bGVXaXRoUHJvdmlkZXJzIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIG5nTW9kdWxlOiBGRmlsZVVwbG9hZE1vZHVsZSxcclxuICAgICAgcHJvdmlkZXJzOiBbXHJcbiAgICAgICAgeyBwcm92aWRlOiBGRmlsZVVwbG9hZEFQSVNlcnZpY2VUb2tlbiwgdXNlVmFsdWU6IGNvbmZpZyB9LFxyXG4gICAgICAgIEZGaWxlVXBsb2FkZXJTZXJ2aWNlLFxyXG4gICAgICAgIHtcclxuICAgICAgICAgIHByb3ZpZGU6IFVwbG9hZFNlcnZlclNlcnZpY2UsXHJcbiAgICAgICAgICB1c2VDbGFzczogdXBsb2FkU2VyIHx8IEZGaWxlVXBsb2FkRGVmYXVsdFNlcnZpY2VcclxuICAgICAgICB9XHJcbiAgICAgIF1cclxuICAgIH07XHJcbiAgfVxyXG59XHJcbiJdfQ==