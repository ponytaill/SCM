import { Injectable, Optional } from '@angular/core';
import { EMPTY } from 'rxjs';
import { FormMessageService } from './form-message.service';
import { LanguageService } from './languag.service';
import { CloudprintService, OutputType, FileType, PrintType } from '@gsp-svc/cloudprint';
import { FormNotifyService } from './form-notify.service';
// tslint:disable: unified-signatures
// tslint:disable: max-line-length
/**
 * 打印服务
 * @Scope FrameComponent
 */
class PrintService {
    /**
     * 构造函数
     */
    constructor(msgService, languageService, printService, formNotifyService) {
        this.msgService = msgService;
        this.languageService = languageService;
        this.printService = printService;
        this.formNotifyService = formNotifyService;
    }
    /**
     * 打印单据
     * @param beMetaId BE元数据标识
     * @param bizBillId 业务单据标识
     */
    printSingle(beMetaId, bizBillId) {
        if (!bizBillId) {
            // this.msgService.error(this.languageService.unallowEmptyBizBillId);
            this.showWarning(this.languageService.unallowEmptyBizBillId);
            return EMPTY;
        }
        return this.printArray(beMetaId, [bizBillId]);
    }
    /**
     * 打印单据（通过id或ids）
     * @param beMetaId be元数据Id
     * @param ids 单据id或ids
     */
    printByIds(beMetaId, ids) {
        if (!ids) {
            // this.msgService.error(this.languageService.unallowEmptyBizBillId);
            this.showWarning(this.languageService.unallowEmptyBizBillId);
            return EMPTY;
        }
        const dataIds = ids.split(',').filter(item => item);
        return this.printArray(beMetaId, dataIds);
    }
    /**
     * 打印单据（带维度）
     * @param beMetaId be元数据Id
     * @param ids 单据id或ids
     * @param dim1 维度1值
     * @param dim2 维度2值
     * @param billCategoryId 单据类型Id
     */
    printByIdsWithDimension(beMetaId, ids, dim1, dim2, billCategoryId) {
        if (!ids) {
            // this.msgService.error(this.languageService.unallowEmptyBizBillId);
            this.showWarning(this.languageService.unallowEmptyBizBillId);
            return EMPTY;
        }
        const dataIds = ids.split(',').filter(item => item);
        return this.printArray(beMetaId, dataIds, dim1, dim2, billCategoryId);
    }
    /**
     * 打印多个单据
     * @param beMetaId BE元数据标识
     * @param dataIds 业务单据标识数组
     * @param dim1 维度1
     * @param dim2 维度2
     * @param billCategoryId 业务单据类型Id
     */
    printArray(beMetaId, dataIds, dim1, dim2, billCategoryId) {
        if (!dataIds || dataIds.length === 0) {
            // this.msgService.error(this.languageService.unallowEmptyBizBillId);
            this.showWarning(this.languageService.unallowEmptyBizBillId);
            return EMPTY;
        }
        const sourceOptions = this.buildSourceOptions({
            dataIds: dataIds,
            sourceId: beMetaId
        });
        const outputOptions = this.buildOutputOptions();
        if (typeof dim1 !== 'undefined') {
            sourceOptions.FirstDimensionVal = dim1;
        }
        if (typeof dim2 !== 'undefined') {
            sourceOptions.SecondDimensionVal = dim2;
        }
        if (typeof billCategoryId !== 'undefined') {
            sourceOptions.billCategoryId = billCategoryId;
        }
        return this.printService.outputBEData(sourceOptions, outputOptions, 'tab');
    }
    /**
     * 按照BE取数方式批量打印单据
     * @param beMetaId BE元数据标识
     * @param filterCondition 过滤条件
     * @param sortCondition 排序条件
     * @param includeChildData 包含子表数据
     */
    printMulti(beMetaId, filterCondition, sortCondition, includeChildData = true) {
        const entryFilter = { 'isUsePagination': false, 'filterConditions': [], 'sortConditions': [], 'pagination': null };
        if (filterCondition) {
            // 统一纠正最后一个过滤条件的Relation
            const filters = JSON.parse(filterCondition);
            if (filters && filters.length > 0) {
                filters[filters.length - 1].Relation = 0;
            }
            entryFilter.filterConditions = filters;
        }
        if (sortCondition) {
            entryFilter.sortConditions = JSON.parse(sortCondition);
        }
        // sfo:SourceFilterOptions
        const sourceFilterOptions = this.buildSourceFilterOptions({ sourceId: beMetaId, entryFilter, includeChildData });
        const outputOptions = this.buildOutputOptions();
        return this.printService.outputBEDataWithFilter(sourceFilterOptions, outputOptions, 'tab');
    }
    /**
     * 按照BE取数方式批量打印单据(带维度)
     * @param beMetaId BE元数据标识
     * @param filterCondition 过滤条件
     * @param sortCondition 排序条件
     * @param dim1 维度1value
     * @param dim2 维度2value
     * @param billCategoryId 业务单据类型Id
     * @param includeChildData 包含子表数据
     */
    printMultiWithDimension(beMetaId, filterCondition, sortCondition, dim1, dim2, billCategoryId, includeChildData = true) {
        const entryFilter = { 'isUsePagination': false, 'filterConditions': [], 'sortConditions': [], 'pagination': null };
        if (filterCondition) {
            // 统一纠正最后一个过滤条件的Relation
            const filters = JSON.parse(filterCondition);
            if (filters && filters.length > 0) {
                filters[filters.length - 1].Relation = 0;
            }
            entryFilter.filterConditions = filters;
        }
        if (sortCondition) {
            entryFilter.sortConditions = JSON.parse(sortCondition);
        }
        const sfo = this.buildSourceFilterOptions({ sourceId: beMetaId, entryFilter, includeChildData });
        if (typeof dim1 !== 'undefined') {
            sfo.FirstDimensionVal = dim1;
        }
        if (typeof dim2 !== 'undefined') {
            sfo.SecondDimensionVal = dim2;
        }
        if (typeof billCategoryId !== 'undefined') {
            sfo.billCategoryId = billCategoryId;
        }
        const outputOptions = this.buildOutputOptions();
        return this.printService.outputBEDataWithFilter(sfo, outputOptions, 'tab');
    }
    /**
     * 构造SourceOptions
     * @param options options
     */
    buildSourceOptions(options) {
        const so = {
            DataIds: options && options.dataIds || undefined,
            SourceId: options && options.sourceId || undefined,
            FirstDimensionVal: options && options.dim1 || undefined,
            SecondDimensionVal: options && options.dim2 || undefined,
            RetrieveParam: options && options.retrieveParam || undefined,
            FormatId: options && options.formatId || undefined,
            billCategoryId: options && options.billCategoryId || undefined,
            ServiceUnit: options && options.serviceUnit || undefined,
            currentPage: options && options.currentPage || undefined,
            pageRowCount: options && options.pageRowCount || undefined,
            queryType: options && options.queryType || undefined,
            queryServiceId: options && options.queryServiceId || undefined,
            queryParam: options && options.queryParam || undefined
        };
        return so;
    }
    /**
     * 构造OutputOptions
     * @param options options
     */
    buildOutputOptions(options) {
        const oo = {
            OutputType: options && options.outputType || OutputType.PRINT,
            FileType: options && options.fileType || FileType.Html5,
            Path: options && options.path || undefined,
            DeviceId: options && options.deviceId || undefined,
            printJob: options && options.printJob || undefined,
            printerName: options && options.printerName || undefined,
            printSetting: options && options.printSetting || undefined,
            printType: options && options.printType || PrintType.Form
        };
        return oo;
    }
    /**
     * 构造SourceFilterOptions
     * @param options options
     */
    buildSourceFilterOptions(options) {
        const entryFilter = { 'isUsePagination': false, 'filterConditions': [], 'sortConditions': [], 'pagination': null };
        const sfo = {
            SourceId: options.sourceId,
            EntityFilter: options && options.entryFilter || entryFilter,
            FirstDimensionVal: options && options.dim1 || undefined,
            SecondDimensionVal: options && options.dim2 || undefined,
            FormatId: options && options.formatId || undefined,
            ServiceUnit: options && options.serviceUnit || undefined,
            billCategoryId: options && options.billCategoryId || undefined,
            currentPage: options && options.currentPage || undefined,
            pageRowCount: options && options.pageRowCount || undefined,
            queryParam: options && options.queryParam || undefined,
            queryServiceId: options && options.queryServiceId || undefined,
            queryType: options && options.queryType || undefined,
            includeChildData: options && options.hasOwnProperty('includeChildData') ? options.includeChildData : true
        };
        return sfo;
    }
    /**
     * 展示错误消息
     * @param message 错误消息
     */
    showWarning(message) {
        if (this.notifyService) {
            this.notifyService.warning(message, { hideTitle: true });
        }
        else if (this.msgService) {
            this.msgService.error(message);
        }
    }
    get notifyService() {
        if (this.formNotifyService) {
            return this.formNotifyService;
        }
        else if (this.injector) {
            return this.injector.get(FormNotifyService, null);
        }
        return null;
    }
    get commandContext() {
        return this['context'] || null;
    }
    get frameContext() {
        return this.commandContext && this.commandContext.frameContext || null;
    }
    get injector() {
        return this.frameContext && this.frameContext.injector || null;
    }
}
PrintService.decorators = [
    { type: Injectable }
];
/** @nocollapse */
PrintService.ctorParameters = () => [
    { type: FormMessageService },
    { type: LanguageService },
    { type: CloudprintService },
    { type: FormNotifyService, decorators: [{ type: Optional }] }
];
export { PrintService };
//# sourceMappingURL=data:application/json;base64,