import { ViewModelContext } from '../view-model/index';
import { Subject } from 'rxjs';
/**
 * Form抽象类
 */
declare abstract class Form {
    /**
     * 表单控件配置
     */
    private formControlConfigs;
    /**
     * ViewModel上下文
     */
    private viewModelContext;
    private validateformControls;
    private validateformControlPathMap;
    changes: Subject<any>;
    /**
     * 构造函数
     */
    constructor(viewModelContext: ViewModelContext);
    /**
     * 初始化
     */
    init(): void;
    /**
     * 全部校验
     *  formControlConfigs 上所有的formControl的存在方法调用一遍 将错误信息集中返回
     */
    validateFields(): any[];
    /**
     * 获取某一个得校验错误信息
     * @param name 属性名称
     */
    getFieldError(name: string): any;
    /**
   * 根据form元数据中的path获取某一个得校验错误信息
   * @param path 属性名称数组
   */
    getFieldErrorByPath(path: string[]): any;
    /**
     * 清除一组字段验证状态
     * @param fields 字段的数组
     */
    resetFieldsValidate(fields?: string[]): boolean;
    /**
     * 创建FormControls
     */
    private createFormControls;
    /**
     * 收集元数据
     */
    private collectMetadatas;
    getEntityValueChangingListeners(): {
        [property: string]: string;
    };
    getEntityValueChangedListeners(): {
        [property: string]: string;
    };
}
export { Form };
