/**
 * @fileoverview added by tsickle
 * Generated from: lib/entity/conditionvalue/month-range-value.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ControlType } from "../controltype";
export class MonthRangeValue {
    /**
     * @param {?} value
     * @return {?}
     */
    setOriginalValue(value) {
        if (value.formatted) {
            this.startTime = value.formatted.split(value.delimiter)[0];
            this.endTime = value.formatted.split(value.delimiter)[1];
        }
        else {
            this.clearValue();
        }
    }
    /**
     * @return {?}
     */
    getOriginalValue() {
        if (!this.startTime || !this.endTime) {
            return '';
        }
        return `${this.startTime}~${this.endTime}`;
    }
    /**
     * @return {?}
     */
    getControlType() {
        return ControlType.MonthRange;
    }
    /**
     * @return {?}
     */
    clearValue() {
        this.startTime = undefined;
        this.endTime = undefined;
    }
    /**
     * @param {?=} value
     */
    constructor(value = { startTime: '', endTime: '' }) {
        this.startTime = value.startTime;
        this.endTime = value.endTime;
    }
    /**
     * @return {?}
     */
    isEmpty() {
        return !this.startTime || !this.endTime;
    }
}
if (false) {
    /** @type {?} */
    MonthRangeValue.prototype.startTime;
    /** @type {?} */
    MonthRangeValue.prototype.endTime;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9udGgtcmFuZ2UtdmFsdWUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL2NvbXBvbmVudC1xdWVyeWNvbmRpdGlvbi8iLCJzb3VyY2VzIjpbImxpYi9lbnRpdHkvY29uZGl0aW9udmFsdWUvbW9udGgtcmFuZ2UtdmFsdWUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFDQSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFN0MsTUFBTSxPQUFPLGVBQWU7Ozs7O0lBQzFCLGdCQUFnQixDQUFDLEtBQStDO1FBQzlELElBQUksS0FBSyxDQUFDLFNBQVMsRUFBRTtZQUNuQixJQUFJLENBQUMsU0FBUyxHQUFHLEtBQUssQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUMzRCxJQUFJLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUMxRDthQUFNO1lBQ0wsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO1NBQ25CO0lBQ0gsQ0FBQzs7OztJQUNELGdCQUFnQjtRQUNkLElBQUcsQ0FBQyxJQUFJLENBQUMsU0FBUyxJQUFFLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBQztZQUNoQyxPQUFPLEVBQUUsQ0FBQztTQUNWO1FBQ0YsT0FBTyxHQUFHLElBQUksQ0FBQyxTQUFTLElBQUksSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO0lBQzdDLENBQUM7Ozs7SUFDRCxjQUFjO1FBQ1osT0FBTyxXQUFXLENBQUMsVUFBVSxDQUFDO0lBQ2hDLENBQUM7Ozs7SUFDRCxVQUFVO1FBQ1IsSUFBSSxDQUFDLFNBQVMsR0FBRyxTQUFTLENBQUM7UUFDM0IsSUFBSSxDQUFDLE9BQU8sR0FBRyxTQUFTLENBQUM7SUFDM0IsQ0FBQzs7OztJQUlELFlBQVksUUFBZ0QsRUFBRSxTQUFTLEVBQUUsRUFBRSxFQUFFLE9BQU8sRUFBRSxFQUFFLEVBQUU7UUFDeEYsSUFBSSxDQUFDLFNBQVMsR0FBRyxLQUFLLENBQUMsU0FBUyxDQUFDO1FBQ2pDLElBQUksQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQztJQUMvQixDQUFDOzs7O0lBQ0QsT0FBTztRQUNMLE9BQU8sQ0FBQyxJQUFJLENBQUMsU0FBUyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQztJQUMxQyxDQUFDO0NBQ0Y7OztJQVZDLG9DQUFrQjs7SUFDbEIsa0NBQWdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSVZhbHVlIH0gZnJvbSBcIi4vaXZhbHVlXCI7XHJcbmltcG9ydCB7IENvbnRyb2xUeXBlIH0gZnJvbSBcIi4uL2NvbnRyb2x0eXBlXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgTW9udGhSYW5nZVZhbHVlIGltcGxlbWVudHMgSVZhbHVlIHtcclxuICBzZXRPcmlnaW5hbFZhbHVlKHZhbHVlOiB7IGZvcm1hdHRlZDogc3RyaW5nLCBkZWxpbWl0ZXI6IHN0cmluZyB9KTogdm9pZCB7XHJcbiAgICBpZiAodmFsdWUuZm9ybWF0dGVkKSB7XHJcbiAgICAgIHRoaXMuc3RhcnRUaW1lID0gdmFsdWUuZm9ybWF0dGVkLnNwbGl0KHZhbHVlLmRlbGltaXRlcilbMF07XHJcbiAgICAgIHRoaXMuZW5kVGltZSA9IHZhbHVlLmZvcm1hdHRlZC5zcGxpdCh2YWx1ZS5kZWxpbWl0ZXIpWzFdO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5jbGVhclZhbHVlKCk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIGdldE9yaWdpbmFsVmFsdWUoKSB7XHJcbiAgICBpZighdGhpcy5zdGFydFRpbWV8fCF0aGlzLmVuZFRpbWUpe1xyXG4gICAgICByZXR1cm4gJyc7XHJcbiAgICAgfVxyXG4gICAgcmV0dXJuIGAke3RoaXMuc3RhcnRUaW1lfX4ke3RoaXMuZW5kVGltZX1gO1xyXG4gIH1cclxuICBnZXRDb250cm9sVHlwZSgpOiBDb250cm9sVHlwZSB7XHJcbiAgICByZXR1cm4gQ29udHJvbFR5cGUuTW9udGhSYW5nZTtcclxuICB9XHJcbiAgY2xlYXJWYWx1ZSgpOiB2b2lkIHtcclxuICAgIHRoaXMuc3RhcnRUaW1lID0gdW5kZWZpbmVkO1xyXG4gICAgdGhpcy5lbmRUaW1lID0gdW5kZWZpbmVkO1xyXG4gIH1cclxuICBzdGFydFRpbWU6IHN0cmluZztcclxuICBlbmRUaW1lOiBzdHJpbmc7XHJcblxyXG4gIGNvbnN0cnVjdG9yKHZhbHVlOiB7IHN0YXJ0VGltZTogc3RyaW5nLCBlbmRUaW1lOiBzdHJpbmcgfSA9IHsgc3RhcnRUaW1lOiAnJywgZW5kVGltZTogJycgfSkge1xyXG4gICAgdGhpcy5zdGFydFRpbWUgPSB2YWx1ZS5zdGFydFRpbWU7XHJcbiAgICB0aGlzLmVuZFRpbWUgPSB2YWx1ZS5lbmRUaW1lO1xyXG4gIH1cclxuICBpc0VtcHR5KCk6IGJvb2xlYW4ge1xyXG4gICAgcmV0dXJuICF0aGlzLnN0YXJ0VGltZSB8fCAhdGhpcy5lbmRUaW1lO1xyXG4gIH1cclxufVxyXG4iXX0=