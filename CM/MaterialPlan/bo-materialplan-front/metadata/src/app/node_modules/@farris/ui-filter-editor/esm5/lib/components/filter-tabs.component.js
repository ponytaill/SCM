/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*
 * @Author: 疯狂秀才(Lucas Huang)
 * @Date: 2019-07-10 11:44:49
 * @LastEditors: 疯狂秀才(Lucas Huang)
 * @LastEditTime: 2019-11-30 10:18:04
 * @QQ: 1055818239
 * @Version: v0.0.1
 */
import { Component, EventEmitter, Output, Input } from '@angular/core';
var FilterTabsComponent = /** @class */ (function () {
    function FilterTabsComponent() {
        this.columns = [];
        this.conditions = [];
        this.showCode = false;
        this.showSql = false;
        this.fieldEditor = { type: 'select' };
        this.selectTabChange = new EventEmitter();
        this.enableExpress = false;
        this.enableFrontExpress = false;
        this.showExpress = new EventEmitter();
        this.insertType = 'below';
        this.currentTabIndex = 0;
    }
    /**
     * @return {?}
     */
    FilterTabsComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () { };
    /**
     * @param {?} index
     * @return {?}
     */
    FilterTabsComponent.prototype.showTab = /**
     * @param {?} index
     * @return {?}
     */
    function (index) {
        this.currentTabIndex = index;
        this.selectTabChange.emit(index);
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    FilterTabsComponent.prototype.showExpressDialog = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        this.showExpress.emit($event);
    };
    FilterTabsComponent.decorators = [
        { type: Component, args: [{
                    selector: 'filter-tabs',
                    template: "\n    <ul class=\"nav nav-tabs\" style=\"min-height: 38px\" *ngIf=\"showCode || showSql\">\n        <li class=\"nav-item\">\n            <a class=\"nav-link\" [class.active]=\"currentTabIndex === 0\"  (click)=\"showTab(0)\">{{ 'filterEditor.designTab' | locale }}</a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"showCode\">\n            <a class=\"nav-link\" [class.active]=\"currentTabIndex === 1\" (click)=\"showTab(1)\">{{ 'filterEditor.jsonTab' | locale }}</a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"showSql\">\n            <a class=\"nav-link\" [class.active]=\"currentTabIndex === 2\" (click)=\"showTab(2)\">{{ 'filterEditor.sqlTab' | locale }}</a>\n        </li>\n    </ul>\n\n    <ng-container *ngIf=\"currentTabIndex === 0\">\n        <filter-grid style=\"overflow: hidden;\"\n          [enableExpress]=\"enableExpress\" [enableFrontExpress]=\"enableFrontExpress\"\n          class=\"d-flex flex-column flex-fill\"  [fieldEditor]=\"fieldEditor\" [insertType]=\"insertType\"\n          [conditions]=\"conditions\" [columns]=\"columns\" (showExpress)=\"showExpressDialog($event)\"></filter-grid>\n    </ng-container>\n    <ng-container *ngIf=\"currentTabIndex === 1 && showCode\">\n        <filter-code [height]=\"height\" [conditions]=\"conditions\"></filter-code>\n    </ng-container>\n    <ng-container *ngIf=\"currentTabIndex === 2 && showSql\">\n        <filter-sql [height]=\"height\" [conditions]=\"conditions\"></filter-sql>\n    </ng-container>\n\n    ",
                    styles: [".nav-item { cursor: default;}\n        .nav-item a.active {font-weight: bold;}\n        "]
                }] }
    ];
    /** @nocollapse */
    FilterTabsComponent.ctorParameters = function () { return []; };
    FilterTabsComponent.propDecorators = {
        columns: [{ type: Input }],
        conditions: [{ type: Input }],
        height: [{ type: Input }],
        showCode: [{ type: Input }],
        showSql: [{ type: Input }],
        fieldEditor: [{ type: Input }],
        selectTabChange: [{ type: Output }],
        enableExpress: [{ type: Input }],
        enableFrontExpress: [{ type: Input }],
        showExpress: [{ type: Output }],
        insertType: [{ type: Input }]
    };
    return FilterTabsComponent;
}());
export { FilterTabsComponent };
if (false) {
    /** @type {?} */
    FilterTabsComponent.prototype.columns;
    /** @type {?} */
    FilterTabsComponent.prototype.conditions;
    /** @type {?} */
    FilterTabsComponent.prototype.height;
    /** @type {?} */
    FilterTabsComponent.prototype.showCode;
    /** @type {?} */
    FilterTabsComponent.prototype.showSql;
    /** @type {?} */
    FilterTabsComponent.prototype.fieldEditor;
    /** @type {?} */
    FilterTabsComponent.prototype.selectTabChange;
    /** @type {?} */
    FilterTabsComponent.prototype.enableExpress;
    /** @type {?} */
    FilterTabsComponent.prototype.enableFrontExpress;
    /** @type {?} */
    FilterTabsComponent.prototype.showExpress;
    /** @type {?} */
    FilterTabsComponent.prototype.insertType;
    /** @type {?} */
    FilterTabsComponent.prototype.currentTabIndex;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsdGVyLXRhYnMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy91aS1maWx0ZXItZWRpdG9yLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvZmlsdGVyLXRhYnMuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQVFBLE9BQU8sRUFBRSxTQUFTLEVBQXVCLFlBQVksRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRzVGO0lBbURJO1FBYlMsWUFBTyxHQUFHLEVBQUUsQ0FBQztRQUNiLGVBQVUsR0FBc0IsRUFBRSxDQUFDO1FBRW5DLGFBQVEsR0FBRyxLQUFLLENBQUM7UUFDakIsWUFBTyxHQUFHLEtBQUssQ0FBQztRQUNoQixnQkFBVyxHQUFHLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBQyxDQUFDO1FBQy9CLG9CQUFlLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUN0QyxrQkFBYSxHQUFHLEtBQUssQ0FBQztRQUN0Qix1QkFBa0IsR0FBRyxLQUFLLENBQUM7UUFDMUIsZ0JBQVcsR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO1FBQ2xDLGVBQVUsR0FBb0IsT0FBTyxDQUFDO1FBQy9DLG9CQUFlLEdBQUcsQ0FBQyxDQUFDO0lBRUosQ0FBQzs7OztJQUVqQixzQ0FBUTs7O0lBQVIsY0FBYSxDQUFDOzs7OztJQUVkLHFDQUFPOzs7O0lBQVAsVUFBUSxLQUFhO1FBQ2pCLElBQUksQ0FBQyxlQUFlLEdBQUcsS0FBSyxDQUFDO1FBQzdCLElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3JDLENBQUM7Ozs7O0lBRUQsK0NBQWlCOzs7O0lBQWpCLFVBQWtCLE1BQU07UUFDcEIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDbEMsQ0FBQzs7Z0JBOURKLFNBQVMsU0FBQztvQkFDUCxRQUFRLEVBQUUsYUFBYTtvQkFDdkIsUUFBUSxFQUFFLHk5Q0EwQlQ7NkJBRUcsMEZBRUM7aUJBRVI7Ozs7OzBCQUlJLEtBQUs7NkJBQ0wsS0FBSzt5QkFDTCxLQUFLOzJCQUNMLEtBQUs7MEJBQ0wsS0FBSzs4QkFDTCxLQUFLO2tDQUNMLE1BQU07Z0NBQ04sS0FBSztxQ0FDTCxLQUFLOzhCQUNMLE1BQU07NkJBQ04sS0FBSzs7SUFlViwwQkFBQztDQUFBLEFBL0RELElBK0RDO1NBM0JZLG1CQUFtQjs7O0lBRTVCLHNDQUFzQjs7SUFDdEIseUNBQTRDOztJQUM1QyxxQ0FBd0I7O0lBQ3hCLHVDQUEwQjs7SUFDMUIsc0NBQXlCOztJQUN6QiwwQ0FBeUM7O0lBQ3pDLDhDQUErQzs7SUFDL0MsNENBQStCOztJQUMvQixpREFBb0M7O0lBQ3BDLDBDQUEyQzs7SUFDM0MseUNBQStDOztJQUMvQyw4Q0FBb0IiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxyXG4gKiBAQXV0aG9yOiDnlq/ni4Lnp4DmiY0oTHVjYXMgSHVhbmcpXHJcbiAqIEBEYXRlOiAyMDE5LTA3LTEwIDExOjQ0OjQ5XHJcbiAqIEBMYXN0RWRpdG9yczog55av54uC56eA5omNKEx1Y2FzIEh1YW5nKVxyXG4gKiBATGFzdEVkaXRUaW1lOiAyMDE5LTExLTMwIDEwOjE4OjA0XHJcbiAqIEBRUTogMTA1NTgxODIzOVxyXG4gKiBAVmVyc2lvbjogdjAuMC4xXHJcbiAqL1xyXG5pbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgSG9zdEJpbmRpbmcsIEV2ZW50RW1pdHRlciwgT3V0cHV0LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBGaWx0ZXJDb25kaXRpb24gfSBmcm9tICdAZmFycmlzL3VpLWNvbW1vbi90eXBlcyc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICAgIHNlbGVjdG9yOiAnZmlsdGVyLXRhYnMnLFxyXG4gICAgdGVtcGxhdGU6IGBcclxuICAgIDx1bCBjbGFzcz1cIm5hdiBuYXYtdGFic1wiIHN0eWxlPVwibWluLWhlaWdodDogMzhweFwiICpuZ0lmPVwic2hvd0NvZGUgfHwgc2hvd1NxbFwiPlxyXG4gICAgICAgIDxsaSBjbGFzcz1cIm5hdi1pdGVtXCI+XHJcbiAgICAgICAgICAgIDxhIGNsYXNzPVwibmF2LWxpbmtcIiBbY2xhc3MuYWN0aXZlXT1cImN1cnJlbnRUYWJJbmRleCA9PT0gMFwiICAoY2xpY2spPVwic2hvd1RhYigwKVwiPnt7ICdmaWx0ZXJFZGl0b3IuZGVzaWduVGFiJyB8IGxvY2FsZSB9fTwvYT5cclxuICAgICAgICA8L2xpPlxyXG4gICAgICAgIDxsaSBjbGFzcz1cIm5hdi1pdGVtXCIgKm5nSWY9XCJzaG93Q29kZVwiPlxyXG4gICAgICAgICAgICA8YSBjbGFzcz1cIm5hdi1saW5rXCIgW2NsYXNzLmFjdGl2ZV09XCJjdXJyZW50VGFiSW5kZXggPT09IDFcIiAoY2xpY2spPVwic2hvd1RhYigxKVwiPnt7ICdmaWx0ZXJFZGl0b3IuanNvblRhYicgfCBsb2NhbGUgfX08L2E+XHJcbiAgICAgICAgPC9saT5cclxuICAgICAgICA8bGkgY2xhc3M9XCJuYXYtaXRlbVwiICpuZ0lmPVwic2hvd1NxbFwiPlxyXG4gICAgICAgICAgICA8YSBjbGFzcz1cIm5hdi1saW5rXCIgW2NsYXNzLmFjdGl2ZV09XCJjdXJyZW50VGFiSW5kZXggPT09IDJcIiAoY2xpY2spPVwic2hvd1RhYigyKVwiPnt7ICdmaWx0ZXJFZGl0b3Iuc3FsVGFiJyB8IGxvY2FsZSB9fTwvYT5cclxuICAgICAgICA8L2xpPlxyXG4gICAgPC91bD5cclxuXHJcbiAgICA8bmctY29udGFpbmVyICpuZ0lmPVwiY3VycmVudFRhYkluZGV4ID09PSAwXCI+XHJcbiAgICAgICAgPGZpbHRlci1ncmlkIHN0eWxlPVwib3ZlcmZsb3c6IGhpZGRlbjtcIlxyXG4gICAgICAgICAgW2VuYWJsZUV4cHJlc3NdPVwiZW5hYmxlRXhwcmVzc1wiIFtlbmFibGVGcm9udEV4cHJlc3NdPVwiZW5hYmxlRnJvbnRFeHByZXNzXCJcclxuICAgICAgICAgIGNsYXNzPVwiZC1mbGV4IGZsZXgtY29sdW1uIGZsZXgtZmlsbFwiICBbZmllbGRFZGl0b3JdPVwiZmllbGRFZGl0b3JcIiBbaW5zZXJ0VHlwZV09XCJpbnNlcnRUeXBlXCJcclxuICAgICAgICAgIFtjb25kaXRpb25zXT1cImNvbmRpdGlvbnNcIiBbY29sdW1uc109XCJjb2x1bW5zXCIgKHNob3dFeHByZXNzKT1cInNob3dFeHByZXNzRGlhbG9nKCRldmVudClcIj48L2ZpbHRlci1ncmlkPlxyXG4gICAgPC9uZy1jb250YWluZXI+XHJcbiAgICA8bmctY29udGFpbmVyICpuZ0lmPVwiY3VycmVudFRhYkluZGV4ID09PSAxICYmIHNob3dDb2RlXCI+XHJcbiAgICAgICAgPGZpbHRlci1jb2RlIFtoZWlnaHRdPVwiaGVpZ2h0XCIgW2NvbmRpdGlvbnNdPVwiY29uZGl0aW9uc1wiPjwvZmlsdGVyLWNvZGU+XHJcbiAgICA8L25nLWNvbnRhaW5lcj5cclxuICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCJjdXJyZW50VGFiSW5kZXggPT09IDIgJiYgc2hvd1NxbFwiPlxyXG4gICAgICAgIDxmaWx0ZXItc3FsIFtoZWlnaHRdPVwiaGVpZ2h0XCIgW2NvbmRpdGlvbnNdPVwiY29uZGl0aW9uc1wiPjwvZmlsdGVyLXNxbD5cclxuICAgIDwvbmctY29udGFpbmVyPlxyXG5cclxuICAgIGAsXHJcbiAgICBzdHlsZXM6IFtcclxuICAgICAgICBgLm5hdi1pdGVtIHsgY3Vyc29yOiBkZWZhdWx0O31cclxuICAgICAgICAubmF2LWl0ZW0gYS5hY3RpdmUge2ZvbnQtd2VpZ2h0OiBib2xkO31cclxuICAgICAgICBgXHJcbiAgICBdXHJcbn0pXHJcblxyXG5leHBvcnQgY2xhc3MgRmlsdGVyVGFic0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcblxyXG4gICAgQElucHV0KCkgY29sdW1ucyA9IFtdO1xyXG4gICAgQElucHV0KCkgY29uZGl0aW9uczogRmlsdGVyQ29uZGl0aW9uW10gPSBbXTtcclxuICAgIEBJbnB1dCgpIGhlaWdodDogbnVtYmVyO1xyXG4gICAgQElucHV0KCkgc2hvd0NvZGUgPSBmYWxzZTtcclxuICAgIEBJbnB1dCgpIHNob3dTcWwgPSBmYWxzZTtcclxuICAgIEBJbnB1dCgpIGZpZWxkRWRpdG9yID0geyB0eXBlOiAnc2VsZWN0J307XHJcbiAgICBAT3V0cHV0KCkgc2VsZWN0VGFiQ2hhbmdlID0gbmV3IEV2ZW50RW1pdHRlcigpO1xyXG4gICAgQElucHV0KCkgZW5hYmxlRXhwcmVzcyA9IGZhbHNlO1xyXG4gICAgQElucHV0KCkgZW5hYmxlRnJvbnRFeHByZXNzID0gZmFsc2U7XHJcbiAgICBAT3V0cHV0KCkgc2hvd0V4cHJlc3MgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XHJcbiAgICBASW5wdXQoKSBpbnNlcnRUeXBlOiAnYWJvdmUnfCdiZWxvdycgPSAnYmVsb3cnO1xyXG4gICAgY3VycmVudFRhYkluZGV4ID0gMDtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcigpIHsgfVxyXG5cclxuICAgIG5nT25Jbml0KCkgeyB9XHJcblxyXG4gICAgc2hvd1RhYihpbmRleDogbnVtYmVyKSB7XHJcbiAgICAgICAgdGhpcy5jdXJyZW50VGFiSW5kZXggPSBpbmRleDtcclxuICAgICAgICB0aGlzLnNlbGVjdFRhYkNoYW5nZS5lbWl0KGluZGV4KTtcclxuICAgIH1cclxuXHJcbiAgICBzaG93RXhwcmVzc0RpYWxvZygkZXZlbnQpIHtcclxuICAgICAgICB0aGlzLnNob3dFeHByZXNzLmVtaXQoJGV2ZW50KTtcclxuICAgIH1cclxufVxyXG4iXX0=