/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { NgModule } from '@angular/core';
import { CalendarComponent } from './components/calendar/calendar.component';
import { SelectionBarComponent } from './components/selection-bar/selection-bar.component';
import { DayViewComponent } from './components/day-view/day-view.component';
import { MonthViewComponent } from './components/month-view/month-view.component';
import { YearViewComponent } from './components/year-view/year-view.component';
import { FarrisDatePickerDirective } from './farris-datepicker.input';
import { FarrisDatepickerComponent } from './farris-datepicker.component';
import { SelectionSidebarComponent } from './components/selection-sidebar/selection-sidebar.component';
import { AngularMyDatePickerComponent } from './AngularMyDatePicker.component';
import { TimePickerModule } from '@farris/ui-time-picker';
import { LocaleModule } from '@farris/ui-locale';
import { PopoverModule } from '@farris/ui-popover';
import { DateHelperModule } from '@farris/ui-common/date';
import { NotifyModule } from '@farris/ui-notify';
import { FarrisCommonModule } from '@farris/ui-common';
import { DynamicViewComponent } from './components/dynamic-view/dynamic-view.component';
import { DynamicDateInputComponent } from './dynamic-date-input/dynamic-date-input.component';
var FarrisDatePickerModule = /** @class */ (function () {
    function FarrisDatePickerModule() {
    }
    FarrisDatePickerModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        CommonModule,
                        FormsModule,
                        TimePickerModule,
                        LocaleModule,
                        FarrisCommonModule,
                        PopoverModule.forRoot(),
                        DateHelperModule.forRoot(),
                        NotifyModule.forRoot(),
                    ],
                    declarations: [
                        CalendarComponent,
                        SelectionSidebarComponent,
                        SelectionBarComponent,
                        DayViewComponent,
                        MonthViewComponent,
                        YearViewComponent,
                        FarrisDatepickerComponent,
                        FarrisDatePickerDirective,
                        AngularMyDatePickerComponent,
                        DynamicViewComponent,
                        DynamicDateInputComponent
                    ],
                    entryComponents: [CalendarComponent],
                    exports: [
                        CalendarComponent,
                        SelectionBarComponent,
                        SelectionSidebarComponent,
                        DayViewComponent,
                        MonthViewComponent,
                        YearViewComponent,
                        FarrisDatepickerComponent,
                        FarrisDatePickerDirective,
                        DynamicViewComponent,
                        DynamicDateInputComponent
                    ]
                },] }
    ];
    return FarrisDatePickerModule;
}());
export { FarrisDatePickerModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmFycmlzLWRhdGVwaWNrZXIubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy91aS1kYXRlcGlja2VyLyIsInNvdXJjZXMiOlsibGliL2ZhcnJpcy1kYXRlcGlja2VyLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM3QyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXpDLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLDBDQUEwQyxDQUFDO0FBQzdFLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLG9EQUFvRCxDQUFDO0FBQzNGLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLDBDQUEwQyxDQUFDO0FBQzVFLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLDhDQUE4QyxDQUFDO0FBQ2xGLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLDRDQUE0QyxDQUFDO0FBRS9FLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQ3RFLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQzFFLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLDREQUE0RCxDQUFDO0FBQ3ZHLE9BQU8sRUFBRSw0QkFBNEIsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQy9FLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQzFELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNqRCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDbkQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDMUQsT0FBTyxFQUFFLFlBQVksRUFBRyxNQUFNLG1CQUFtQixDQUFDO0FBQ2xELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLGtEQUFrRCxDQUFDO0FBQ3hGLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLG1EQUFtRCxDQUFDO0FBQzlGO0lBQUE7SUFzQ3FDLENBQUM7O2dCQXRDckMsUUFBUSxTQUFDO29CQUNOLE9BQU8sRUFBRTt3QkFDTCxZQUFZO3dCQUNaLFdBQVc7d0JBQ1gsZ0JBQWdCO3dCQUNoQixZQUFZO3dCQUNaLGtCQUFrQjt3QkFDbEIsYUFBYSxDQUFDLE9BQU8sRUFBRTt3QkFDdkIsZ0JBQWdCLENBQUMsT0FBTyxFQUFFO3dCQUMxQixZQUFZLENBQUMsT0FBTyxFQUFFO3FCQUN6QjtvQkFDRCxZQUFZLEVBQUU7d0JBQ1YsaUJBQWlCO3dCQUNqQix5QkFBeUI7d0JBQ3pCLHFCQUFxQjt3QkFDckIsZ0JBQWdCO3dCQUNoQixrQkFBa0I7d0JBQ2xCLGlCQUFpQjt3QkFDakIseUJBQXlCO3dCQUN6Qix5QkFBeUI7d0JBQ3pCLDRCQUE0Qjt3QkFDNUIsb0JBQW9CO3dCQUNwQix5QkFBeUI7cUJBQzVCO29CQUNELGVBQWUsRUFBRSxDQUFDLGlCQUFpQixDQUFDO29CQUNwQyxPQUFPLEVBQUU7d0JBQ0wsaUJBQWlCO3dCQUNqQixxQkFBcUI7d0JBQ3JCLHlCQUF5Qjt3QkFDekIsZ0JBQWdCO3dCQUNoQixrQkFBa0I7d0JBQ2xCLGlCQUFpQjt3QkFDakIseUJBQXlCO3dCQUN6Qix5QkFBeUI7d0JBQ3pCLG9CQUFvQjt3QkFDcEIseUJBQXlCO3FCQUM1QjtpQkFDSjs7SUFDb0MsNkJBQUM7Q0FBQSxBQXRDdEMsSUFzQ3NDO1NBQXpCLHNCQUFzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XHJcbmltcG9ydCB7IEZvcm1zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xyXG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuaW1wb3J0IHsgQ2FsZW5kYXJDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvY2FsZW5kYXIvY2FsZW5kYXIuY29tcG9uZW50JztcclxuaW1wb3J0IHsgU2VsZWN0aW9uQmFyQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL3NlbGVjdGlvbi1iYXIvc2VsZWN0aW9uLWJhci5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBEYXlWaWV3Q29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL2RheS12aWV3L2RheS12aWV3LmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IE1vbnRoVmlld0NvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9tb250aC12aWV3L21vbnRoLXZpZXcuY29tcG9uZW50JztcclxuaW1wb3J0IHsgWWVhclZpZXdDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMveWVhci12aWV3L3llYXItdmlldy5jb21wb25lbnQnO1xyXG5cclxuaW1wb3J0IHsgRmFycmlzRGF0ZVBpY2tlckRpcmVjdGl2ZSB9IGZyb20gJy4vZmFycmlzLWRhdGVwaWNrZXIuaW5wdXQnO1xyXG5pbXBvcnQgeyBGYXJyaXNEYXRlcGlja2VyQ29tcG9uZW50IH0gZnJvbSAnLi9mYXJyaXMtZGF0ZXBpY2tlci5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBTZWxlY3Rpb25TaWRlYmFyQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL3NlbGVjdGlvbi1zaWRlYmFyL3NlbGVjdGlvbi1zaWRlYmFyLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IEFuZ3VsYXJNeURhdGVQaWNrZXJDb21wb25lbnQgfSBmcm9tICcuL0FuZ3VsYXJNeURhdGVQaWNrZXIuY29tcG9uZW50JztcclxuaW1wb3J0IHsgVGltZVBpY2tlck1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktdGltZS1waWNrZXInO1xyXG5pbXBvcnQgeyBMb2NhbGVNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWxvY2FsZSc7XHJcbmltcG9ydCB7IFBvcG92ZXJNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLXBvcG92ZXInO1xyXG5pbXBvcnQgeyBEYXRlSGVscGVyTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1jb21tb24vZGF0ZSc7XHJcbmltcG9ydCB7IE5vdGlmeU1vZHVsZSAgfSBmcm9tICdAZmFycmlzL3VpLW5vdGlmeSc7XHJcbmltcG9ydCB7IEZhcnJpc0NvbW1vbk1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktY29tbW9uJztcclxuaW1wb3J0IHsgRHluYW1pY1ZpZXdDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvZHluYW1pYy12aWV3L2R5bmFtaWMtdmlldy5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBEeW5hbWljRGF0ZUlucHV0Q29tcG9uZW50IH0gZnJvbSAnLi9keW5hbWljLWRhdGUtaW5wdXQvZHluYW1pYy1kYXRlLWlucHV0LmNvbXBvbmVudCc7XHJcbkBOZ01vZHVsZSh7XHJcbiAgICBpbXBvcnRzOiBbXHJcbiAgICAgICAgQ29tbW9uTW9kdWxlLFxyXG4gICAgICAgIEZvcm1zTW9kdWxlLCBcclxuICAgICAgICBUaW1lUGlja2VyTW9kdWxlLFxyXG4gICAgICAgIExvY2FsZU1vZHVsZSxcclxuICAgICAgICBGYXJyaXNDb21tb25Nb2R1bGUsXHJcbiAgICAgICAgUG9wb3Zlck1vZHVsZS5mb3JSb290KCksXHJcbiAgICAgICAgRGF0ZUhlbHBlck1vZHVsZS5mb3JSb290KCksXHJcbiAgICAgICAgTm90aWZ5TW9kdWxlLmZvclJvb3QoKSxcclxuICAgIF0sXHJcbiAgICBkZWNsYXJhdGlvbnM6IFtcclxuICAgICAgICBDYWxlbmRhckNvbXBvbmVudCxcclxuICAgICAgICBTZWxlY3Rpb25TaWRlYmFyQ29tcG9uZW50LFxyXG4gICAgICAgIFNlbGVjdGlvbkJhckNvbXBvbmVudCxcclxuICAgICAgICBEYXlWaWV3Q29tcG9uZW50LFxyXG4gICAgICAgIE1vbnRoVmlld0NvbXBvbmVudCxcclxuICAgICAgICBZZWFyVmlld0NvbXBvbmVudCxcclxuICAgICAgICBGYXJyaXNEYXRlcGlja2VyQ29tcG9uZW50LFxyXG4gICAgICAgIEZhcnJpc0RhdGVQaWNrZXJEaXJlY3RpdmUsXHJcbiAgICAgICAgQW5ndWxhck15RGF0ZVBpY2tlckNvbXBvbmVudCxcclxuICAgICAgICBEeW5hbWljVmlld0NvbXBvbmVudCxcclxuICAgICAgICBEeW5hbWljRGF0ZUlucHV0Q29tcG9uZW50XHJcbiAgICBdLFxyXG4gICAgZW50cnlDb21wb25lbnRzOiBbQ2FsZW5kYXJDb21wb25lbnRdLFxyXG4gICAgZXhwb3J0czogW1xyXG4gICAgICAgIENhbGVuZGFyQ29tcG9uZW50LFxyXG4gICAgICAgIFNlbGVjdGlvbkJhckNvbXBvbmVudCxcclxuICAgICAgICBTZWxlY3Rpb25TaWRlYmFyQ29tcG9uZW50LFxyXG4gICAgICAgIERheVZpZXdDb21wb25lbnQsXHJcbiAgICAgICAgTW9udGhWaWV3Q29tcG9uZW50LFxyXG4gICAgICAgIFllYXJWaWV3Q29tcG9uZW50LFxyXG4gICAgICAgIEZhcnJpc0RhdGVwaWNrZXJDb21wb25lbnQsXHJcbiAgICAgICAgRmFycmlzRGF0ZVBpY2tlckRpcmVjdGl2ZSxcclxuICAgICAgICBEeW5hbWljVmlld0NvbXBvbmVudCxcclxuICAgICAgICBEeW5hbWljRGF0ZUlucHV0Q29tcG9uZW50XHJcbiAgICBdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBGYXJyaXNEYXRlUGlja2VyTW9kdWxlIHt9XHJcbiJdfQ==