{"version":3,"sources":["ng://@farris/discussion-group/lib/discussion-group.service.ts","ng://@farris/discussion-group/lib/discussion-list/discussion-list.service.ts","ng://@farris/discussion-group/lib/discussion-list/discussion-list.component.ts","node_modules/tslib/tslib.es6.js","ng://@farris/discussion-group/lib/discussion-editor/discussion-editor.interface.ts","ng://@farris/discussion-group/lib/discussion-editor/discussion-editor.component.ts","ng://@farris/discussion-group/lib/discussion-personnel/discussion-personnel.component.ts","ng://@farris/discussion-group/lib/discussion-list/discussionList.directive.ts","ng://@farris/discussion-group/lib/pipe/safe-html.pipe.ts","ng://@farris/discussion-group/lib/pipe/controlType.pipe.ts","ng://@farris/discussion-group/lib/discussion-group.module.ts"],"names":["DiscussionGroupService","Injectable","args","providedIn","DiscussionListService","prototype","resetData","data","results","commentIds","length","forEach","commentId","item","find","comment","id","userId","userName","imgData","hasOwnProperty","commentDate","text","attachFiles","parentData","parentItem","i","parentId","thisData","push","this","resultDiscussion","next","getData","BehaviorSubject","DiscussionListComponent","Object","defineProperty","_total","val","initPaginationOptions","_pageSize","_discussionData","innerDiscussionData","ngOnInit","_this","discussionListService","subscribe","paginationOptions","itemsPerPage","currentPage","pageIndex","pageList","totalItems","remote","pagerOnServer","reply","replyMessage","emit","onPageChange","page","pageChanged","pageInfo","onPageSizeChange","pageSize","total","pageLength","Math","floor","pageSizeChanged","filePreviewEventHandler","info","filePreview","fileDownloadEventHandler","fileDownload","getAvatar","personnelsDisplayKey","str","substring","Component","selector","template","encapsulation","ViewEncapsulation","None","Input","Output","ViewChild","supportPaging","EventEmitter","labels","previousLabel","nextLabel","directionLinks","maxSize","responsive","autoHide","__assign","assign","t","s","n","arguments","p","call","apply","__read","o","m","Symbol","iterator","r","e","ar","done","value","error","__spread","concat","Cancel","Confirm","DiscussionEditorComponent","_personnels","innerPersonnels","copyPersonnels","_replyUser","editorFocus","_attachFiles","self","renderer","listen","document","event","personModalVisible","relativeVisible","el","elementRef","nativeElement","permissionList","localeService","getValue","permission","options","maxUploads","maxFileSize","allowedContentTypes","placeholder","fUploadDoneHandler","ev","fileUploadDone","fUploadRemovedHandler","fileRemoveEventHandler","file","fileRemove","setTextValue","tempTextValue","target","innerHTML","textValue","tempPersonnelsValue","tempSectionValue","listenEditorValueChange","children","childrenId","selectedPersonnels","personnel","index","includes","personnelsPrimaryKey","splice","selectedSection","section","serachPersonnel","personnelText","showSearchList","getSearchData","d","searchPersonnelList","setPersonModalPosition","getMoreSearchData","personSearchUrl","url","http","get","of","personnelChecked","active","map","cd","markForCheck","appendPersonnels","selectedList","filter","appendPersonnel","resetPersonnels","appendPersonnelsList","listData","external","_isInArray","appendSectionList","appendSection","fieldInArray","array","findIndex","openModalPerson","setTimeout","stopBubble","window","innerHeight","personModal","getBoundingClientRect","bottom","scrollIntoView","openModalPermission","openModalFile","attachFilesModalVisible","stopPropagation","cancelBubble","submitApproval","editAttachFiles","attachFile","name","size","metadataId","valueChange","msgInfo","MsgInfo","mailTos","mailToSections","visibility","replyUser","notEmptyText","notifyService","cancel","changePermission","editor","focus","selectionsChangePar","users","userList_1","user","sectionList_1","sec","selectionsChange","lineDataChangePar","lineDataChange","ougUsers","getOugUsers","Renderer2","ElementRef","ChangeDetectorRef","NotifyService","Injector","HttpClient","injector","replyPersonnelsDisplayKey","cancelVisible","editHeight","type","personnelSearch","groupIcon","LocaleService","DiscussionPersonnelComponent","allOrg","sectionDataTrees","initSectionData","sectionData","sectionParent","code","layer","sortOrder","path","personnels","count","pageCount","totalCount","parent","parents","parentsArr","checked","sort","a","b","initSectionTree","sectionDataTree","sectionDataTiled","tileSectionData","currentSection","sectionCrumbs","currentSectionData","currentSectionId","getPersonnel","currentSectionPerson","selectEmployee","parentName","par","unshift","parentIdField","idField","presetParent","nodes","Map","result","unattached","set","node","PID","parent_1","unItem","pid","getAllNodes","sectionNext","showOrHideLoading","forkJoin","getOrgByLayerHttp","getPersonByUrlHttp","orgAndPersonDatas","getOrgData","getPersonData","getNextData","JSON","stringify","getSectionById","secChecked_1","secParent","secCrumbs","initCrumbsList","detectChanges","ougId","orgUrl","urlGetOrgByLayer","crumbsClick","crumbs","handleClick","disabled","setSectionDataChecked","selectedData","_isSelectedInArray","listIdField","selectedUsers","addSection","removeSection","handleSearchClick","curChecked","secArray","secCheckedList","secIndeList","parSec","setChildDisabledStatus","status","getMoreData","sec_1","handleClickAll","curChecked_1","selectedSections","searchUser","searchText","searchUserList","selectionRemove","dataParent","childrens","child","parchildrens","parusers","moveAllToLeft","returnResult","numberType","finalText","personnelDialog","close","crumbsListWidth","crumbsList","offsetWidth","crumbsListItems","crumbsListItemWidth","setStyle","crumbsEllipsis","crumbsMore","field","Error","closeDialog","showOrHide","discussionContent","loadingSer","loadingInstance","show","delay","container","message","NgZone","ngZone","listDisplayText","openDialog","selections","LoadingService","DiscussionListDirective","_discussionListData","Directive","SafeHtmlPipe","transform","sanitized","bypassSecurityTrustHtml","Pipe","DomSanitizer","AvatarHtmlPipe","GetOrgTextPipe","orgs","org","orgtext","common","registerLocaleData","zh","DiscussionGroupModule","NgModule","declarations","imports","CommonModule","FormsModule","ModalModule","FarrisDialogModule","FarrisCommonModule","LoadingModule","PerfectScrollbarModule","TreeModule","PaginationModule","NotifyModule","HttpClientModule","LocaleModule","forRoot","InputGroupModule","providers","BsModalService","ComponentLoaderFactory","PositioningService","exports","entryComponents"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DiscussionGroupService {\r\n\r\n  constructor() { }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { discussionConfig } from './discussionList.interface';\r\nimport { Subject,BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class DiscussionListService {\r\n\r\n    resultDiscussion: BehaviorSubject<any> = new BehaviorSubject<any>(null);;\r\n\r\n    constructor() { }\r\n\r\n    resetData(data) {\r\n        let results = [];\r\n        if (data && data.commentIds && data.commentIds.length) {\r\n            data.commentIds.forEach(commentId => {\r\n                const item = data['comments'].find((comment) => {\r\n                    return comment[\"id\"] === commentId\r\n                })\r\n                if (item) {\r\n                    let id = item[\"id\"],\r\n                        userId = item[\"userId\"],\r\n                        userName = item['user'][\"name\"],\r\n                        //  imgData = item['user'][\"imgData\"],\r\n                        imgData = item['user'].hasOwnProperty('imgData') ? item['user'][\"imgData\"] : '',\r\n                        commentDate = item[\"commentDate\"],\r\n                        //  commentDate = this.dataFormate(item[\"commentDate\"]),\r\n                        text = item[\"text\"],\r\n                        attachFiles = item.hasOwnProperty('attachFiles') ? item[\"attachFiles\"] : [],\r\n                        parentData;\r\n                    if (item.hasOwnProperty('parentId')) {\r\n                        let parentItem = data['comments'].find(i => {\r\n                            return i.id === item.parentId;\r\n                        })\r\n                        if (parentItem) {\r\n                            let parid = parentItem[\"id\"],\r\n                                paruserId = parentItem[\"userId\"],\r\n                                paruserName = parentItem['user'][\"name\"],\r\n                                // parimgData = parentItem['user'][\"imgData\"],\r\n                                parimgData = parentItem['user'].hasOwnProperty('imgData') ? parentItem['user'][\"imgData\"] : '',\r\n                                parcommentDate = parentItem[\"commentDate\"],\r\n                                partext = parentItem[\"text\"],\r\n                                parattachFiles = parentItem.hasOwnProperty('attachFiles') ? parentItem[\"attachFiles\"] : [];\r\n                            parentData = {\r\n                                id: parid,\r\n                                userId: paruserId,\r\n                                userName: paruserName,\r\n                                imgData: parimgData,\r\n                                commentDate: parcommentDate,\r\n                                text: partext,\r\n                                attachFiles: parattachFiles\r\n                            }\r\n                        }\r\n                    }\r\n                    let thisData: discussionConfig = {\r\n                        id,\r\n                        userId,\r\n                        userName,\r\n                        imgData,\r\n                        commentDate,\r\n                        text,\r\n                        attachFiles,\r\n                        parentData\r\n                    };\r\n                    results.push(thisData);\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            });\r\n        }\r\n        // this.resultDiscussion = results;\r\n        this.resultDiscussion.next(results);\r\n    }\r\n    getData() {\r\n        return this.resultDiscussion;\r\n    }\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { PaginationControlsComponent, PaginationInstance } from '@farris/ui-pagination';\r\nimport { DiscussionListService } from './discussion-list.service';\r\n\r\n@Component({\r\n    selector: 'farris-discussion-list',\r\n    templateUrl: './discussion-list.component.html',\r\n    styleUrls: ['./discussion-list.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class DiscussionListComponent implements OnInit {\r\n    // @Input() personnelsPrimaryKey: string = 'userId';\r\n    @Input() personnelsDisplayKey = 'userName';\r\n    @Input() pagerOnServer = true;\r\n    /* *æ¯å¦æ¯æåé¡µ */\r\n    @Input() supportPaging = true;\r\n    /**  æ»é¡µæ° */\r\n    // @Input() pageSize:number;\r\n    /**  å½åé¡µç  */\r\n    @Input() pageIndex = 1;\r\n    /**  æ¯é¡µæ¾ç¤ºæ¡æ°éé¡¹ */\r\n    // private _pageList = [10,20,30,50];\r\n    // get pageList() {\r\n    //     return this._pageList;\r\n    // }\r\n    // @Input() set pageList(val) {\r\n    //     this._pageList = val;\r\n    //     if (this.pager) {\r\n    //         this.pager.setPageList(val);\r\n    //     }\r\n    // }\r\n    /**  æ»æ¡æ° */\r\n    private _total = 0;\r\n    get total() {\r\n        return this._total;\r\n    }\r\n    @Input() set total(val) {\r\n        this._total = val;\r\n        // this.paginationOptions.totalItems = val;\r\n        this.initPaginationOptions();\r\n        // if(val){\r\n        //   this.initPaginationOptions();\r\n        // }\r\n    }\r\n    /**  æ¯é¡µæ¾ç¤ºä¸ªæ° */\r\n    private _pageSize = 10;\r\n    get pageSize() {\r\n        return this._pageSize;\r\n    }\r\n    @Input() set pageSize(val) {\r\n        this._pageSize = val;\r\n        // this.paginationOptions.itemsPerPage = val;\r\n        this.initPaginationOptions();\r\n    }\r\n    /**  æ»æ¡æ° */\r\n    // @Input() total = 0;\r\n    /**  è¯è®ºæ°æ® */\r\n    innerDiscussionData = [];\r\n    _discussionData = [];\r\n    @Input()\r\n    set discussionData(val) {\r\n        if (val) {\r\n            this._discussionData = val;\r\n            this.innerDiscussionData = val;\r\n        }\r\n    }\r\n    get discussionData() {\r\n        return this._discussionData;\r\n    }\r\n    @Output() replyMessage = new EventEmitter();\r\n    // åé¡µäºä»¶\r\n    @Output() pageChanged = new EventEmitter();\r\n    @Output() pageSizeChanged = new EventEmitter();\r\n\r\n    /** éä»¶é¢è§ */\r\n    @Output() filePreview = new EventEmitter();\r\n    /** éä»¶ä¸è½½ */\r\n    @Output() fileDownload = new EventEmitter();\r\n    public labels: any = {\r\n        previousLabel: ' ',\r\n        nextLabel: ' '\r\n    };\r\n    public directionLinks = true;\r\n    public maxSize = 7;\r\n    public responsive = true;\r\n    public autoHide = false;\r\n    paginationOptions: PaginationInstance;\r\n    @ViewChild('pager') pager: PaginationControlsComponent;\r\n\r\n    constructor(private discussionListService: DiscussionListService) { }\r\n    ngOnInit() {\r\n        // this.paginationOptions = {\r\n        //   id: 'Farris-discussion-Pagination',\r\n        //   itemsPerPage: this.pageSize,\r\n        //   currentPage: this.pageIndex,\r\n        //   // pageList: this.pageList,\r\n        //   totalItems: this.total\r\n        // };\r\n        this.initPaginationOptions();\r\n        /** çå¬æä»¤å¾å°çæ°æ® */\r\n        this.discussionListService.getData().subscribe((data: any): void => {\r\n            if (data && !this._discussionData.length) {\r\n                this.innerDiscussionData = data;\r\n            }\r\n        });\r\n    }\r\n    initPaginationOptions() {\r\n        this.paginationOptions = {\r\n            id: 'Farris-discussion-Pagination',\r\n            itemsPerPage: this._pageSize,\r\n            currentPage: this.pageIndex,\r\n            pageList: [10, 20, 30, 50, 100],\r\n            totalItems: this._total,\r\n            remote: this.pagerOnServer\r\n        };\r\n    }\r\n    /** ç¹å»åå¤çè¨ */\r\n    reply(item) {\r\n        this.replyMessage.emit(item);\r\n    }\r\n    /** é¡µç åå */\r\n    onPageChange(page: { pageIndex: number, pageSize: number }) {\r\n        if (this.pageIndex !== page.pageIndex) {\r\n            this.pageIndex = page.pageIndex;\r\n            this.paginationOptions.currentPage = page.pageIndex;\r\n            this.pageChanged.emit({ pageInfo: page });\r\n        }\r\n    }\r\n    /** æ¯é¡µæ¾ç¤ºæ¡æ°åå */\r\n    onPageSizeChange(pageSize: number) {\r\n        if (this.pageSize !== pageSize && this.total) {\r\n            this.paginationOptions.itemsPerPage = pageSize;\r\n            this.pageSize = pageSize;\r\n\r\n            const total = this.total;\r\n            let pageLength = Math.floor(total / pageSize);\r\n            if (total % pageSize > 0) {\r\n                pageLength += 1;\r\n            }\r\n\r\n            if (pageLength && this.pageIndex > pageLength) {\r\n                this.pageIndex = pageLength;\r\n                this.paginationOptions.currentPage = this.pageIndex;\r\n            }\r\n\r\n            this.pageSizeChanged.emit({ pageInfo: { pageIndex: this.pageIndex, pageSize: pageSize } });\r\n        }\r\n    }\r\n    /** éä»¶é¢è§ */\r\n    filePreviewEventHandler(info) {\r\n        this.filePreview.emit(info);\r\n    }\r\n    /** éä»¶ä¸è½½ */\r\n    fileDownloadEventHandler(info) {\r\n        this.fileDownload.emit(info);\r\n    }\r\n    /** å ä½å¤´åæå­ */\r\n    getAvatar(item) {\r\n        if (item && item[this.personnelsDisplayKey]) {\r\n            let str = item[this.personnelsDisplayKey];\r\n            return str.substring(str.length - 2, str.length);\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export interface editAttachFile {\r\n    id?:string;\r\n    name:string;\r\n    size:number;\r\n    metadataId:string;\r\n}\r\nexport interface ValueConfig {\r\n    msgInfo: MsgInfo;\r\n    text: string;\r\n    mailTos: Array<{ userId: string, userName: string }>;\r\n    mailToSections:Array<any>;\r\n    visibility: string;\r\n    // replyUser?:any;\r\n    parentId:string;\r\n    attachFiles?:editAttachFile[];\r\n}\r\nexport enum MsgInfo {\r\n    Cancel = 0,\r\n    Confirm = 1\r\n}","import { Component, OnInit, Input, ViewChild, ElementRef, Renderer2, Output, EventEmitter, ViewEncapsulation, ChangeDetectorRef, Injector } from '@angular/core';\r\nimport { UploaderOptions, FUploadFileExtend } from '@farris/extend-file-upload';\r\nimport { NotifyService } from '@farris/ui-notify';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { ValueConfig, MsgInfo, editAttachFile } from './discussion-editor.interface';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { of } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'farris-discussion-editor',\r\n    templateUrl: './discussion-editor.component.html',\r\n    styleUrls: ['./discussion-editor.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class DiscussionEditorComponent implements OnInit {\r\n    @Input() personnelsPrimaryKey: string = 'id';\r\n    @Input() personnelsDisplayKey: string = 'name';\r\n    @Input() replyPersonnelsDisplayKey: string = 'userName';\r\n    // @Input() personnels: Array<any> = [];\r\n    // @Input() permissionList: Array<any> = [\r\n    //     { value: 'ALL', text: this.localeService.getValue('discussionGroup.all') },\r\n    //     { value: 'RELATED', text: this.localeService.getValue('discussionGroup.related') }\r\n    // ];\r\n    @Input() cancelVisible: boolean = true;\r\n    @Input() editHeight: number = 130;\r\n\r\n    @Input() type: string = 'user';\r\n    @Input() orgUrl:string;\r\n    @Input() personSearchUrl:string;\r\n    // éè¦çæ æ°æ®\r\n    // @Input() treeData: any[];\r\n    // å·¦ä¾§æ çä¸»é®å­æ®µ\r\n    @Input() treeIdField: string;\r\n    @Input() treeDisplayText: string;\r\n    @Input() sectionData:any[];\r\n    // ç¨æ·è§è²\r\n    // @Input() groupList: any[] = [];\r\n\r\n    options: UploaderOptions;\r\n    placeholder:string;\r\n    sectiontreeData:Array<any>;\r\n    // äººäºå¼¹çªåè¡¨æ°æ®\r\n    private _personnels: Array<any> = [];\r\n\r\n    get personnels() {\r\n        return this._personnels;\r\n    }\r\n    @Input() set personnels(val) {\r\n        if (val) {\r\n            this._personnels = val;\r\n            this.innerPersonnels = this._personnels;\r\n            this.copyPersonnels = this._personnels;\r\n            // this.copyPersonnels = this._personnels;\r\n        }\r\n    }\r\n\r\n    // äººäºå¼¹çªåè¡¨æ°æ®\r\n    private _replyUser;\r\n\r\n    get replyUser() {\r\n        return this._replyUser;\r\n    }\r\n    @Input() set replyUser(val) {\r\n        if (val) {\r\n            this._replyUser = val;\r\n            if(this._replyUser['id']){\r\n                this.editorFocus();\r\n            }\r\n        }\r\n    }\r\n\r\n    _attachFiles: FUploadFileExtend[];\r\n    get attachFiles() {\r\n        return this._attachFiles;\r\n    }\r\n    @Input() set attachFiles(val) {\r\n        if (val) {\r\n            this._attachFiles = val;\r\n        }\r\n    }\r\n\r\n    // æ°å»ºè¿æ¯ç»´æ¤èªå®ä¹è§è²\r\n    // @Output() customGroupChange = new EventEmitter<any>();\r\n    // å¯¹å¤æ´é²æ°æ®\r\n    @Output() selectionsChange = new EventEmitter<any>();\r\n    // éä¸­çè¡\r\n    @Output() lineDataChange = new EventEmitter<any>();\r\n    // å¯¹å¤\r\n    @Output() valueChange = new EventEmitter<ValueConfig>();\r\n    /** éä»¶é¢è§ */\r\n    @Output() filePreview = new EventEmitter();\r\n    /** éä»¶å é¤ */\r\n    @Output() fileRemove = new EventEmitter();\r\n    @Output() fileUploadDone = new EventEmitter();\r\n    @Output() personnelSearch = new EventEmitter();\r\n    @Output() getOugUsers = new EventEmitter();\r\n    @ViewChild('editor') editor;\r\n    @ViewChild('personModal') personModal;\r\n    // @ViewChild('searchInput') searchInput;\r\n    // å®¡æ¹æè§\r\n    textValue: string = '';\r\n    // æå­ææ¬æ¡çè¾å¥ï¼è§£å³ç¦ç¹é®é¢\r\n    tempTextValue: string;\r\n    // æå­äººåä¿¡æ¯\r\n    tempPersonnelsValue: string = '';\r\n    // æå­é¨é¨\r\n    tempSectionValue: string = '';\r\n    // æç´¢äººäºç®¡çå¼¹çª\r\n    personModalVisible = false;\r\n    // éæ©è¦åéçäººååè¡¨\r\n    selectedPersonnels: Array<any> = [];\r\n    // éæ©è¦åéçé¨é¨\r\n    selectedSection: Array<any> = [];\r\n    // æç´¢ææ¬æ¡ä¸­ç»å®çå¼\r\n    personnelText;\r\n    // æå­äººåä¿¡æ¯ï¼ç¨äºæç´¢\r\n    copyPersonnels: Array<any> = [];\r\n    innerPersonnels: Array<any> = [];\r\n    el: ElementRef;\r\n    // é¿åéå¤è¾å¥çtoken\r\n    token: boolean;\r\n    relativeVisible: boolean = false;\r\n    permission: any;\r\n    //ä¸ä¼ éä»¶æ¯å¦æ¾ç¤º\r\n    attachFilesModalVisible = false;\r\n    pageSize:number = 20;\r\n    searchPersonnelList:any = {};\r\n    showSearchList:boolean = false;\r\n    permissionList: Array<any> = [];\r\n    localeService: LocaleService;\r\n    groupIcon = '<span class=\"f-icon f-icon-search\"></span>';\r\n    constructor(\r\n        private renderer: Renderer2,\r\n        private elementRef: ElementRef,\r\n        private cd: ChangeDetectorRef,\r\n        private notifyService: NotifyService,\r\n        private injector: Injector,\r\n        private http: HttpClient,\r\n    ) { \r\n        this.localeService = this.injector.get(LocaleService);\r\n    }\r\n\r\n    ngOnInit() {\r\n        const self = this;\r\n        this.renderer.listen(document, 'click', function (event) {\r\n            self.personModalVisible = false;\r\n            self.relativeVisible = false;\r\n        });\r\n        // this.copyPersonnels = this.personnels;\r\n        this.el = this.elementRef.nativeElement;\r\n        this.permissionList = [\r\n            { value: 'ALL', text: this.localeService.getValue('discussionGroup.all') },\r\n            { value: 'RELATED', text: this.localeService.getValue('discussionGroup.related') }\r\n        ]\r\n        this.permission = this.permissionList[0];\r\n        this.options = { maxUploads: 3, maxFileSize: 10240, allowedContentTypes: ['.jpg', '.pdf'] };\r\n        this.placeholder = this.localeService.getValue('discussionGroup.placeholder');\r\n    }\r\n\r\n    /**\r\n     * åä¸ªéä»¶ä¸ä¼ å®æ\r\n     * @param ev \r\n     */\r\n    fUploadDoneHandler(ev) {\r\n        this.fileUploadDone.emit(ev);\r\n    }\r\n    /**\r\n     * ä¸ä¼ éä»¶ä¸­åä¸ªéä»¶å é¤å®æ\r\n     * @param ev \r\n     */\r\n    fUploadRemovedHandler(ev) {\r\n       // console.log('fUploadRemovedHandler');\r\n       // console.log(ev);\r\n    }\r\n    /**éä»¶åè¡¨ä¸­é¢è§ */\r\n    filePreviewEventHandler(info) {\r\n        this.filePreview.emit(info);\r\n    }\r\n    /**éä»¶åè¡¨ä¸­å é¤ */\r\n    fileRemoveEventHandler(file) {\r\n        this.fileRemove.emit(file);\r\n    }\r\n\r\n    // ææ¬æ¡å¤±å»ç¦ç¹è§¦å\r\n    setTextValue(e = null) {\r\n        if (e) {\r\n            // console.log(e.target.innerHTML);\r\n            this.tempTextValue = e.target.innerHTML;\r\n            this.textValue = this.tempTextValue;\r\n        }\r\n        // if (this.tempTextValue) {\r\n        //     this.textValue = this.tempTextValue\r\n        // }\r\n        if (this.tempPersonnelsValue) {\r\n            this.textValue += this.tempPersonnelsValue;\r\n        }\r\n        if(this.tempSectionValue){\r\n            this.textValue += this.tempSectionValue;\r\n        }\r\n        this.tempTextValue = '';\r\n        this.tempPersonnelsValue = '';\r\n        this.tempSectionValue = '';\r\n    }\r\n\r\n    // çå¬é®çäºä»¶, ä¸»è¦æ¯ç¨äºå é¤@äºº\r\n    listenEditorValueChange(e) {\r\n        this.tempTextValue = e.target.innerHTML;\r\n        const children = e.target.children;\r\n        const childrenId = [];\r\n        for (let i = 0; i < children.length; i++) {\r\n            childrenId.push(children[i].id);\r\n        }\r\n        this.selectedPersonnels.forEach((personnel, index) => {\r\n            if (!childrenId.includes(personnel[this.personnelsPrimaryKey])) {\r\n                this.selectedPersonnels.splice(index, 1);\r\n            }\r\n        });\r\n        this.selectedSection.forEach((section, index) => {\r\n            if (!childrenId.includes(section[this.personnelsPrimaryKey])) {\r\n                this.selectedSection.splice(index, 1);\r\n            }\r\n        });\r\n        if (!this.tempTextValue) {\r\n            this.tempTextValue = '';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * æç´¢äººå\r\n     */\r\n    serachPersonnel() {\r\n        // if (this.personnelText) {\r\n        //     this.innerPersonnels = this.copyPersonnels.filter(item => {\r\n        //         if(item[this.personnelsDisplayKey]){\r\n        //             return item[this.personnelsDisplayKey].indexOf(this.personnelText) !== -1;\r\n        //         }\r\n        //     })\r\n        // }\r\n        // else {\r\n        //     this.innerPersonnels = this.copyPersonnels;\r\n        // }\r\n        if(this.personnelText){\r\n            this.showSearchList = true;\r\n            this.getSearchData(this.personnelText,0).subscribe(d=>{\r\n                if(d.hasOwnProperty(\"users\")){\r\n                    this.searchPersonnelList = d;\r\n                    this.setPersonModalPosition();\r\n                }\r\n            });\r\n        }\r\n        else{\r\n            this.showSearchList = false;\r\n        }\r\n        // this.searchInput.nativeElement.blur();\r\n        //ææ¶æ³¨éææå¡å¨ç«¯æ¥è¯¢\r\n        // this.personnelSearch.emit(this.personnelText);\r\n    }\r\n    /**\r\n     * æç´¢ä¸ä¸é¡µ\r\n     */\r\n    getMoreSearchData(){\r\n        this.getSearchData(this.personnelText,this.searchPersonnelList.pageIndex + 1).subscribe(d=>{\r\n            if(d.hasOwnProperty(\"users\")){\r\n                this.searchPersonnelList.pageIndex = d['pageIndex'];\r\n                this.searchPersonnelList['users'] = [...this.searchPersonnelList['users'],...d['users']];\r\n            }\r\n        });\r\n    }\r\n\r\n    getSearchData(text:string,pageIndex:number,pageSize:number = this.pageSize){\r\n        if(this.personSearchUrl){\r\n            const url = `${this.personSearchUrl}?param=${text}&pageSize=${pageSize}&pageIndex=${pageIndex}`;\r\n            //console.log(url);\r\n            return this.http.get(url);\r\n            //return this.http.get('assets/data/discussionPerson3.json');\r\n        }\r\n        else{\r\n            return of(true);\r\n        }\r\n    }\r\n\r\n    personnelChecked(item){\r\n        item.active = !item.active;\r\n        this.innerPersonnels = this.innerPersonnels.map(o => ({ ...o }));\r\n        this.cd.markForCheck();\r\n        this.appendPersonnels();\r\n    }\r\n\r\n    // å¢å @äººå\r\n    appendPersonnels() {\r\n        let selectedList = [];\r\n        if(!this.showSearchList){\r\n            selectedList = this.innerPersonnels.filter(item => item.active === true);\r\n        }\r\n        else{\r\n            selectedList = this.searchPersonnelList['users'].filter(item => item.active === true);\r\n        }\r\n        if (selectedList.length) {\r\n            this.appendPersonnel(selectedList);\r\n        }\r\n        this.resetPersonnels();\r\n        this.setTextValue();\r\n        this.personModalVisible = false;\r\n    }\r\n    //é«çº§æç´¢äººåæ·»å \r\n    appendPersonnelsList(listData) {\r\n        if (listData.length) {\r\n            this.appendPersonnel(listData, true);\r\n        }\r\n\r\n        this.setTextValue();\r\n    }\r\n    //å¾ªç¯å¢å äººå\r\n    appendPersonnel(listData, external = false) {\r\n        listData.forEach(item => {\r\n            if (this.selectedPersonnels.length && this._isInArray(item[this.personnelsPrimaryKey], this.personnelsPrimaryKey, this.selectedPersonnels)) {\r\n                return;\r\n            } else {\r\n                //if (!external) {\r\n                this.tempPersonnelsValue += '<a name=\"personnel\" contenteditable=\"false\" class=\"at-user\" id=\"' + item[this.personnelsPrimaryKey] + '\" userid=\"' + item[this.personnelsPrimaryKey] + '\">@' + item[this.personnelsDisplayKey] + '</a>&nbsp;';\r\n                // }\r\n                // else {\r\n                //     this.tempPersonnelsValue += '<a name=\"personnel\" contenteditable=\"false\" class=\"at-user\" id=\"' + item[this.personnelsPrimaryKey] + '\" userid=\"' + item[this.personnelsPrimaryKey] + '\">@' + item[this.replyPersonnelsDisplayKey] + '</a>';\r\n                // }\r\n                this.selectedPersonnels.push(item);\r\n            }\r\n        })\r\n    }\r\n    /**\r\n     * æ·»å é¨é¨\r\n     * @param listData \r\n     */\r\n    appendSectionList(listData){\r\n        if(listData.length){\r\n            this.appendSection(listData);\r\n        }\r\n        this.setTextValue();\r\n    }\r\n\r\n    appendSection(listData,) {\r\n        listData.forEach(item => {\r\n            if (this.selectedSection.length && this._isInArray(item[this.personnelsPrimaryKey], this.personnelsPrimaryKey, this.selectedSection)) {return;} \r\n            else {\r\n                this.tempSectionValue += '<a name=\"org\" contenteditable=\"false\" class=\"at-org\" id=\"' + item[this.personnelsPrimaryKey] + '\" orgid=\"' + item[this.personnelsPrimaryKey] + '\">@' + item['name'] + '</a>&nbsp;';\r\n                this.selectedSection.push(item);\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    // å¤æ­æ¯å¦å¨æ°ç»\r\n    private _isInArray(value: any, fieldInArray: string, array: any[]) {\r\n        if (!value || !fieldInArray) {\r\n            return false;\r\n        }\r\n        return array.findIndex(item => value === item[fieldInArray]) === -1 ? false : true;\r\n    }\r\n\r\n    /**\r\n     * å³é­äººäºç®¡çå¼¹çª\r\n     */\r\n    resetPersonnels() {\r\n        this.showSearchList = false;\r\n        this.personModalVisible = false;\r\n        this.innerPersonnels = this.copyPersonnels;\r\n        if(this.innerPersonnels.length){\r\n            this.innerPersonnels.forEach(item => item.active = false);\r\n        }\r\n        this.personnelText = '';\r\n        // this.stopBubble(e);\r\n    }\r\n\r\n    /**\r\n     * æå¼äººåç®¡ç\r\n     * @param e äºä»¶\r\n     */\r\n    openModalPerson(e) {\r\n        this.personModalVisible = !this.personModalVisible;\r\n        setTimeout(() => {\r\n            if(this.personModalVisible){\r\n                this.setPersonModalPosition();\r\n            }\r\n        }, 0);\r\n        // this.getPersonnelList();\r\n        this.stopBubble(e);\r\n    }\r\n    setPersonModalPosition(){\r\n        let winH = window.innerHeight;\r\n        let ModalBottom = this.personModal.nativeElement.getBoundingClientRect().bottom;\r\n        if(winH < ModalBottom){\r\n            this.personModal.nativeElement.scrollIntoView(false);\r\n        }\r\n    }\r\n    openModalPermission(e) {\r\n        this.relativeVisible = !this.relativeVisible;\r\n        this.stopBubble(e);\r\n    }\r\n\r\n    /**\r\n     * æå¼ä¸ä¼ éä»¶\r\n     */\r\n    openModalFile(e) {\r\n        this.attachFilesModalVisible = !this.attachFilesModalVisible;\r\n        this.stopBubble(e);\r\n    }\r\n\r\n    // é»æ­¢åæ³¡\r\n    stopBubble(e) {\r\n        if (e && e.stopPropagation) {\r\n            e.stopPropagation();\r\n        } else {\r\n            window.event.cancelBubble = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * æäº¤è¯è¯­\r\n     */\r\n    submitApproval() {\r\n        if (!this.textValue) {\r\n            let notEmptyText = this.localeService.getValue('discussionGroup.notEmpty');\r\n            if(notEmptyText){\r\n                this.notifyService.error(notEmptyText);\r\n            }\r\n            return;\r\n        }\r\n        let editAttachFiles: editAttachFile[] = [];\r\n        if (this.attachFiles && this.attachFiles.length) {\r\n            this.attachFiles.forEach(file => {\r\n                let id = file['id'],\r\n                    name = file['name'],\r\n                    size = file['size'],\r\n                    metadataId = file['extend']['metadataId'];\r\n                let attachFile = {\r\n                    id,\r\n                    name,\r\n                    size,\r\n                    metadataId\r\n                }\r\n                editAttachFiles.push(attachFile);\r\n            })\r\n        }\r\n        this.valueChange.emit({\r\n            msgInfo: MsgInfo.Confirm,\r\n            text: this.textValue,\r\n            mailTos: this.selectedPersonnels,\r\n            mailToSections: this.selectedSection,\r\n            visibility: this.permission.value,\r\n            parentId: (this.replyUser && this.replyUser.hasOwnProperty('id')) ? this.replyUser.id : null,\r\n            attachFiles: editAttachFiles.length ? editAttachFiles : null\r\n        });\r\n        this.textValue = '';\r\n        this.selectedPersonnels = [];\r\n        this.selectedSection = [];\r\n        this.attachFiles = [];\r\n        this.replyUser = {};\r\n    }\r\n\r\n    cancel() {\r\n        this.valueChange.emit({\r\n            msgInfo: MsgInfo.Cancel,\r\n            text: null,\r\n            mailTos: [],\r\n            mailToSections: [],\r\n            visibility: null,\r\n            parentId: null,\r\n            attachFiles: null\r\n        });\r\n        this.textValue = '';\r\n        this.selectedPersonnels = [];\r\n        this.selectedSection = [];\r\n        this.attachFiles = [];\r\n        this.replyUser = {};\r\n    }\r\n    /**ä¿®æ¹æ¥çæé */\r\n    changePermission(value: string) {\r\n        this.permission = this.permissionList.find(item => item.value === value);\r\n        this.relativeVisible = false;\r\n    }\r\n    //è·å¾ç¦ç¹\r\n    editorFocus() {\r\n        this.editor.nativeElement.focus();\r\n    }\r\n    // customGroupChangePar(event){\r\n    //     this.customGroupChange.emit(event);\r\n    // }\r\n    /**\r\n     * é«çº§äººåç¹ç¡®è®¤\r\n     */\r\n    selectionsChangePar(event) {\r\n        //this.resetPersonnels();\r\n        if(event.data.users.length){\r\n            let userList = [];\r\n            event.data.users.forEach(user => {\r\n                userList.push(user.data);\r\n            });\r\n            this.appendPersonnelsList(userList);\r\n        }\r\n        if(event.data.section.length){\r\n            let sectionList = [];\r\n            event.data.section.forEach(sec => {\r\n                sectionList.push(sec.data);\r\n            });\r\n            this.appendSectionList(sectionList);\r\n        }\r\n        this.selectionsChange.emit(event);\r\n    }\r\n    /**é«çº§äººåä¸­éä¸­æè¡ */\r\n    lineDataChangePar(event) {\r\n        this.lineDataChange.emit(event);\r\n    }\r\n    /**è·å¾å ä½å¤´å */\r\n    getAvatar(item) {\r\n        if (item && item[this.personnelsDisplayKey]) {\r\n            let str = item[this.personnelsDisplayKey];\r\n            return str.substring(str.length - 2, str.length);\r\n        }\r\n        else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    ougUsers(event){\r\n        this.getOugUsers.emit(event);\r\n    }\r\n}","import { Component, OnInit, Input, ViewChild, ElementRef, Renderer2, NgZone, HostBinding, Output, EventEmitter, ChangeDetectorRef, Injector, Optional } from '@angular/core';\r\nimport { of, forkJoin } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { LoadingService } from '@farris/ui-loading';\r\n\r\n@Component({\r\n    selector: 'farris-discussion-personnel',\r\n    templateUrl: './discussion-personnel.component.html',\r\n    styleUrls: ['./discussion-personnel.component.scss'],\r\n})\r\nexport class DiscussionPersonnelComponent implements OnInit {\r\n\r\n    // æä½åè¡¨æèåç»æéè¦çä¸»é®å­æ®µ\r\n    @Input() listIdField: string = \"id\";\r\n    // åè¡¨ä¸­æ¾ç¤ºçå­æ®µ\r\n    @Input() listDisplayText: string = \"userName\";\r\n    @Input() sectionData: any[];\r\n    // è·åäººåé¾æ¥\r\n    @Input() orgUrl: string;\r\n    // äººåæ¥è¯¢é¾æ¥\r\n    @Input() personSearchUrl: string;\r\n    // åå±è·åç»ç»çé¾æ¥\r\n    // ä½¿ç¨æ¹å¼ /api/runtime/sys/v1.0/sysOrgs?param={\"parentId\":\"afa5ee9b-f9ba-2927-f9ce-2a30369267e9\"}\r\n    @Input() urlGetOrgByLayer: string = \"/api/runtime/sys/v1.0/sysOrgs\";\r\n\r\n    @ViewChild('personnelDialog') personnelDialog;\r\n    // æ°å»ºè¿æ¯ç»´æ¤èªå®ä¹è§è²\r\n    // @Output() customGroupChange = new EventEmitter<any>();\r\n    // å¯¹å¤æ´é²æ°æ®\r\n    @Output() selectionsChange = new EventEmitter<any>();\r\n    // éä¸­çè¡\r\n    @Output() lineDataChange = new EventEmitter<any>();\r\n    @Output() openDialog = new EventEmitter<any>();\r\n    @Output() ougUsers = new EventEmitter<any>();\r\n\r\n    @ViewChild('crumbsList') crumbsList: ElementRef;\r\n    @ViewChild('discussionContent') discussionContent: ElementRef;\r\n    private loadingInstance = null;\r\n    // å³ä¾§é¡¹\r\n    selections: any[] = [];\r\n    selectedSections: any[] = [];\r\n    selectedUsers: any[] = [];\r\n    // æç´¢ææ¬\r\n    searchText: string\r\n    // æéè¦æ¾ç¤ºçäººåä¿¡æ¯\r\n    finalText: string = '';\r\n\r\n    sectionDataTree: Array<any> = [];\r\n    sectionDataTiled: Array<any> = [];\r\n    currentSectionData: Array<any> = [];\r\n    currentSection: any = {};\r\n    currentSectionPerson: any = {};\r\n    currentSectionId: string = '';\r\n    sectionCrumbs: Array<any> = [];\r\n    pageSize: number = 20;\r\n\r\n    showSearchList: boolean = false;\r\n    crumbsEllipsis: boolean = false;\r\n    searchUserList: any = {};\r\n\r\n    selectEmployee: string = \"éæ©åå·¥\";\r\n    placeholder: string = \"è¯·è¾å¥åå·¥å§åæç´¢\";\r\n    allOrg: string = \"å¨é¨ç»ç»\";\r\n    private localeService: LocaleService;\r\n    private loadingSer: LoadingService;\r\n    groupIcon = '<span class=\"f-icon f-icon-search\"></span>';\r\n    constructor(\r\n        private renderer: Renderer2,\r\n        private elementRef: ElementRef,\r\n        private ngZone: NgZone,\r\n        private http: HttpClient,\r\n        private cd: ChangeDetectorRef,\r\n        private injector: Injector\r\n    ) {\r\n        this.localeService = this.injector.get(LocaleService);\r\n        this.loadingSer = this.injector.get(LoadingService);\r\n    }\r\n\r\n    ngOnInit() {\r\n        // let sectionDataTrees = this.initsectionData(this.sectionData,'');\r\n        this.allOrg = this.localeService.getValue('discussionGroup.allOrg');\r\n        let sectionDataTrees = this.initSectionData(this.sectionData, '');\r\n        // this.sectionSort(sectionDataTrees);\r\n        // if(sectionDataTrees.length>1){\r\n        let sectionParent = [\r\n            {\r\n                data: {\r\n                    id: 'discussionParent',\r\n                    code: 'parent',\r\n                    name: this.allOrg,\r\n                    layer: 0,\r\n                    parentId: \"\",\r\n                    sortOrder: 1,\r\n                    path: \"\",\r\n                },\r\n                children: [],\r\n                personnels: {\r\n                    count: 0,\r\n                    pageCount: 0,\r\n                    pageIndex: 1,\r\n                    pageSize: 0,\r\n                    totalCount: 0,\r\n                    users: []\r\n                },\r\n                parent: null,\r\n                parents: [],\r\n                parentsArr: [],\r\n                checked: false\r\n            }\r\n        ];\r\n        sectionParent[0].children = sectionDataTrees;\r\n        sectionParent[0].children.sort((a, b): number => a.data['sortOrder'] - b.data['sortOrder']);\r\n        this.initSectionTree(sectionParent[0].children);\r\n        this.sectionDataTree = sectionParent;\r\n        // }\r\n        // else{\r\n        //     this.sectionDataTree = sectionDataTrees;\r\n        // }\r\n        //console.log(this.sectionDataTree);\r\n\r\n        if (this.sectionDataTree && this.sectionDataTree.length) {\r\n            // å¦ææç»ç»æ çæ°æ®ï¼æå¹³ææ°ç»æ°æ®\r\n            this.sectionDataTiled = this.tileSectionData(this.sectionDataTree);\r\n        }\r\n        /**\r\n         * å½åçé¢ä¸çç»ç»èç¹å®æ´æ æ°æ®\r\n         * {\r\n         *    checked:false,ç»ç»æ¯å¦éä¸­\r\n         *    children:[],ç»ç»çå­é¨é¨\r\n         *    data:{ æ¥èªäºä»æå¡å¨ç«¯è¿åçæ°æ®ç»æ\r\n         *      id:ç»ç»id,\r\n         *      code:ç»ç»code,\r\n         *      name:ç»ç»åç§°\r\n         *      layer:ç»ç»å±çº§\r\n         *      parentId:ç¶èç¹\r\n         *      ....\r\n         *      },\r\n         *    parents:[],ç¶èç¹Id\r\n         *    parentsArr:[{id:'ç»ç»èç¹Id',name:'ç»ç»èç¹åç§°'}],\r\n         *    personnels:{\r\n         *          count:0,\r\n         *          pageCount:,\r\n         *          users:[] ç¨æ·ä¿¡æ¯\r\n         *      }\r\n         * }\r\n         * \r\n         */\r\n        this.currentSection = this.sectionDataTree[0];\r\n        // é¢åå±æ°æ®[{id:'ç»ç»èç¹Id',name:'ç»ç»èç¹åç§°'}]\r\n        this.sectionCrumbs = this.sectionDataTree[0].children.length ? this.sectionDataTree[0].children[0]['parentsArr'] : [];\r\n        // å½åçé¢ä¸çç»ç»åè¡¨æ°æ®\r\n        this.currentSectionData = this.sectionDataTree[0].children.length ? this.sectionDataTree[0].children : [];\r\n        // å½åçé¢ä¸çç»ç»é¶å±çç»ç»çæ°æ®Id\r\n        this.currentSectionId = this.sectionDataTree[0].data.id;\r\n        // ç»å®å½äººåè·ååæ°æ®æ¶ï¼æ§è¡çæä½\r\n        this.getPersonnel(this.currentSectionId, 0).subscribe((d: any) => {\r\n            if (d.hasOwnProperty(\"users\")) {\r\n                this.sectionDataTree[0].personnels = d;\r\n                this.currentSectionPerson = this.sectionDataTree[0].personnels;\r\n                // console.log('cur',this.currentSectionPerson);\r\n            }\r\n        });\r\n\r\n        this.selectEmployee = this.localeService.getValue('discussionGroup.selectEmployee');\r\n        this.placeholder = this.localeService.getValue('discussionGroup.placeholder');\r\n        // console.log(this.sectionDataTiled);\r\n    }\r\n\r\n    initSectionTree(data, parentId = \"discussionParent\", parentName = this.allOrg) {\r\n        if (data && data.length) {\r\n            data.forEach(item => {\r\n                let par = {\r\n                    id: parentId,\r\n                    name: parentName\r\n                };\r\n                item.parentsArr.unshift(par);\r\n                item.parents.unshift(parentId);\r\n                if (item.children.length) {\r\n                    this.initSectionTree(item.children);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * åå§ååç»æ°æ®\r\n     * ä¼ éè¿æ¥çæ°æ®æ¯åè¡¨ï¼éè¦è½¬æ¢ææ çå±çº§ç»æ\r\n     */\r\n    initSectionData(data, parentId, parentIdField = 'parentId', idField = 'id', presetParent = null) {\r\n        const nodes = new Map();\r\n        const result = [];\r\n        const unattached = [];\r\n        if (presetParent) {\r\n            nodes.set(presetParent.data.id, presetParent);\r\n        }\r\n        if (data && data.length) {\r\n            data.forEach(item => {\r\n                const node = {\r\n                    data: item,\r\n                    children: [],\r\n                    personnels: {},\r\n                    parent: null,\r\n                    parents: [],\r\n                    parentsArr: [],\r\n                    checked: false\r\n                };\r\n                const id = item[idField];\r\n                nodes.set(id, node);\r\n                const PID = item[parentIdField];\r\n                // åå§\r\n                if (PID === parentId || PID === null) {\r\n                    result.push(node);\r\n                } else {\r\n                    const parent = nodes.get(PID);\r\n                    // console.log(parent);\r\n                    if (parent) {\r\n                        let par = {\r\n                            id: PID,\r\n                            name: parent.data.name\r\n                        };\r\n                        node['parent'] = PID;\r\n                        node['parents'] = [...parent.parents, PID];\r\n                        node['parentsArr'] = [...parent.parentsArr, par];\r\n                        parent.children.push(node);\r\n                        parent.children.sort((a, b): number => a.data['sortOrder'] - b.data['sortOrder']);\r\n                    } else {\r\n                        unattached.push(node);\r\n                    }\r\n                }\r\n            });\r\n            if (unattached.length) {\r\n                unattached.forEach(unItem => {\r\n                    const pid = unItem.data[parentIdField];\r\n                    const parent = nodes.get(pid);\r\n                    if (parent) {\r\n                        // æé æ°æ®\r\n                        unItem['parent'] = pid;\r\n                        unItem['parents'] = [...parent.parents, pid];\r\n                        unItem['parentsArr'] = [...parent.parentsArr, {\r\n                            id: pid,\r\n                            name: parent.data.name\r\n                        }];\r\n\r\n                        parent.children.push(unItem);\r\n                        parent.children.sort((a, b): number => a.data['sortOrder'] - b.data['sortOrder']);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * æænodesçå­èç¹è½¬åææ°ç»ï¼å¹¶è¿åæ°ç»\r\n     * @param nodes \r\n     */\r\n    tileSectionData(nodes) {\r\n        let r = [];\r\n        this.getAllNodes(nodes, r);\r\n        return r;\r\n    }\r\n    /**\r\n     * æænodesçå­èç¹è½¬åææ°ç»ï¼å¹¶è·æ°æ°ç»r\r\n     * @param nodes \r\n     * @param r \r\n     */\r\n    getAllNodes(nodes, r) {\r\n        nodes.forEach(n => {\r\n            r.push(n);\r\n            if (n.children.length) {\r\n                this.getAllNodes(n.children, r);\r\n            }\r\n        })\r\n    }\r\n    /**\r\n     * ç¹å»ä¸çº§\r\n     * @param section \r\n     */\r\n    sectionNext(section) {\r\n        // æé ç»ç»èç¹ä¸é¢çäººåä¿¡æ¯ï¼å¦ææ²¡æäººåä¿¡æ¯ï¼å°±æé ç»æï¼ç¶ååè¯·æ±è·åäººåä¿¡æ¯\r\n        this.showOrHideLoading(true);\r\n        forkJoin([this.getOrgByLayerHttp(section), this.getPersonByUrlHttp(section)])\r\n            .subscribe(orgAndPersonDatas => {\r\n                this.showOrHideLoading(false);\r\n                // è·åç»ç»æ°æ®\r\n                let getOrgData = orgAndPersonDatas[0];\r\n                if (getOrgData !== false) {\r\n                    // ä»æå¡å¨ç«¯çå®è¿åæ°æ®,ç´æ¥å¨æ¹æ³åæ´æ°sectionçç»æ\r\n                    this.initSectionData(getOrgData, '', 'parentId', 'id', section);\r\n                    // è¾å¥ææç»ç»æ çæ°æ®ï¼çsectionåæ´æ¯å¦æ´æ°\r\n                    // æ´æ°æ°æ®\r\n                    this.sectionDataTiled = this.tileSectionData(this.sectionDataTree);\r\n                }\r\n\r\n                // è·åäººåæ°æ®\r\n                let getPersonData = orgAndPersonDatas[1];\r\n                if (getPersonData !== false) {\r\n                    // æé æ°æ®\r\n                    section.personnels = {\r\n                        count: 0,\r\n                        pageCount: 0,\r\n                        pageIndex: 1,\r\n                        pageSize: 0,\r\n                        totalCount: 0,\r\n                        users: []\r\n                    };\r\n                    if (getPersonData.hasOwnProperty(\"users\")) {\r\n                        section.personnels.count = getPersonData['count'];\r\n                        section.personnels.pageCount = getPersonData['pageCount'];\r\n                        section.personnels.pageIndex = getPersonData['pageIndex'];\r\n                        section.personnels.pageSize = getPersonData['pageSize'];\r\n                        section.personnels.totalCount = getPersonData['totalCount'];\r\n                        section.personnels['users'] = [...section.personnels['users'], ...getPersonData['users']];\r\n                    }\r\n                    else {\r\n                        section['noPersonnel'] = true;\r\n                    }\r\n                }\r\n                this.getNextData(section);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * è·åä¸çº§æ°æ®\r\n     * ç¹å»çç»ç»å¯¹åºçæ¯ï¼å½åç»ç»èç¹\r\n     * @param section \r\n     */\r\n    getNextData(section) {\r\n\r\n        if ((section.children && section.children.length) || (JSON.stringify(section.personnels) !== '{}')) {\r\n            // å¦æå½åç»ç»èç¹æä¸çº§æ°æ®\r\n            const sec = this.getSectionById(section.data.id);\r\n            if (sec) {\r\n                // å¤æ­å½åç»ç»èç¹ï¼æ¯å¦å¾éå¨é\r\n                let secChecked = sec['checked'];\r\n                sec['disabled'] = secChecked ? true : false;\r\n                if (!sec['indeterminate']) {\r\n                    // å½åç»ç»çä¸ä¸çº§ç»ç»é½å¾é\r\n                    if (sec.children && sec.children.length) {\r\n                        sec.children.forEach(item => {\r\n                            item['checked'] = secChecked;\r\n                            item['indeterminate'] = false;\r\n                            // item['disabled'] = sec['disabled'];\r\n                        });\r\n                    };\r\n                    // å¦ææäººåï¼å½åäººåé½å¾é\r\n                    if (section.personnels['users'] && section.personnels['users'].length) {\r\n                        section.personnels['users'].forEach(user => {\r\n                            user['checked'] = secChecked;\r\n                            user['indeterminate'] = false;\r\n                            // user['disabled'] = sec['disabled'];\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            let secParent = {\r\n                id: sec.data.id,\r\n                name: sec.data.name\r\n            };\r\n            // å½åç»ç»çç¶èç¹ä¸å½åç»ç»èç¹æ°æ®åå¹¶\r\n            let secCrumbs = [...sec['parentsArr'], secParent];\r\n            // å¦æå½åç»ç»æå­èç¹ï¼è·åå­èç¹çç¶æ°ç»ï¼å¦åï¼æç§ä¸é¢æ°æ®åå¹¶è·å\r\n            this.sectionCrumbs = sec.children.length ? sec.children[0]['parentsArr'] : secCrumbs;\r\n            // æ°çç»ç»èç¹æ¯å½åç»ç»çå­èç¹\r\n            this.currentSectionData = sec.children.length ? sec.children : [];\r\n            // è®°å½å½åç»ç»èç¹\r\n            this.currentSection = sec;\r\n            // è®°å½å½åç»ç»èç¹çæ°æ®\r\n            this.currentSectionId = sec.data.id;\r\n            // å½åç»ç»ä¸å¯¹åºçäººåä¿¡æ¯\r\n            this.currentSectionPerson = sec.personnels;\r\n            setTimeout(() => {\r\n                this.initCrumbsList();\r\n            }, 0);\r\n            // console.log(this.currentSection);\r\n            this.cd.detectChanges();\r\n        }\r\n        else {\r\n            this.currentSectionPerson = [];\r\n        }\r\n    }\r\n    /**\r\n     * è·åäººåæ¥å£å®ä¹\r\n     * @param ougId \r\n     * @param pageIndex \r\n     * @param pageSize \r\n     */\r\n    getPersonnel(ougId: string, pageIndex: number, pageSize: number = this.pageSize) {\r\n        // let data = {};\r\n        if (this.orgUrl) {\r\n            const url = `${this.orgUrl}?orgId=${ougId}&pageSize=${pageSize}&pageIndex=${pageIndex}`;\r\n            return this.http.get(url);\r\n            // if(ougId == 'langchao'){\r\n            //     return this.http.get('assets/data/discussionPerson.json');\r\n            // }\r\n            // else if(ougId == 'guoji'){\r\n            //     return this.http.get('assets/data/discussionPerson2.json');\r\n            // }\r\n            // else if(ougId == 'yanfa'){\r\n            //     return this.http.get('assets/data/discussionPerson3.json');\r\n            // }\r\n            // else{\r\n            //     return of(true);\r\n            // }\r\n        }\r\n        else {\r\n            return of(false);\r\n        }\r\n        // return data;\r\n    }\r\n\r\n    /**\r\n     * åå±è·åæ°æ®\r\n     */\r\n    private getOrgByLayerHttp(section) {\r\n        if (!section.data['isDetail'] && (!section.children || section.children.length == 0)) {\r\n            //ä¸æ¯å¶å­èç¹ï¼ä½æ¯å­ä¸ºç©º\r\n            if (this.urlGetOrgByLayer) {\r\n                let url = `${this.urlGetOrgByLayer}?param={\"parentId\":\"${section.data.id}\"}`;\r\n                return this.http.get(url);\r\n            }\r\n        }\r\n        // å¤çè¿çæ°æ®\r\n        return of(false);\r\n    }\r\n    /**\r\n     * è·åäººå\r\n     * @param section \r\n     */\r\n    private getPersonByUrlHttp(section) {\r\n        if (JSON.stringify(section.personnels) === '{}' && !section.hasOwnProperty('noPersonnel')) {\r\n            return this.getPersonnel(section.data.id, 0);\r\n        }\r\n        return of(false);\r\n    }\r\n\r\n    getSectionById(id) {\r\n        let section = this.sectionDataTiled.find(sec => {\r\n            return sec.data.id == id;\r\n        });\r\n        return section;\r\n    }\r\n    /**\r\n     * ç¹å»é¢åå±\r\n     * @param crumbs \r\n     */\r\n    crumbsClick(crumbs) {\r\n        if (crumbs.id == this.currentSectionId) return;\r\n        const sec = this.getSectionById(crumbs.id);\r\n        this.sectionCrumbs = sec.children.length ? sec.children[0]['parentsArr'] : [];\r\n        this.currentSectionData = sec.children.length ? sec.children : [];\r\n        this.currentSectionId = sec.data.id;\r\n        this.currentSectionPerson = sec.personnels;\r\n        this.currentSection = sec;\r\n        setTimeout(() => {\r\n            this.initCrumbsList();\r\n        }, 0);\r\n    }\r\n    /**\r\n     * é¨é¨æäººåç¶æåå\r\n     * @param event \r\n     * @param section \r\n     */\r\n    handleClick(event, section, type) {\r\n        if (this.currentSection.disabled) return;\r\n        event.stopPropagation();\r\n        section.checked = !section.checked;\r\n        section['indeterminate'] = false;\r\n        this.setSectionDataChecked();\r\n        if (section.checked) {\r\n            let selectedData = {\r\n                parent: this.currentSection,\r\n                data: section\r\n            };\r\n            if (type == 'user') {\r\n                if (this._isSelectedInArray(section[this.listIdField], this.listIdField, this.selectedUsers)) {\r\n                    return;\r\n                }\r\n                else {\r\n                    this.selectedUsers.push(selectedData);\r\n                }\r\n            }\r\n            else if (type == 'section') {\r\n                this.addSection(section);\r\n            }\r\n        }\r\n        else {\r\n            if (type == 'user') {\r\n                if (this._isSelectedInArray(section[this.listIdField], this.listIdField, this.selectedUsers)) {\r\n                    this.selectedUsers.forEach((item, index) => {\r\n                        if (item['data'][this.listIdField] === section[this.listIdField]) {\r\n                            this.selectedUsers.splice(index, 1);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            else if (type == 'section') {\r\n                this.removeSection(section);\r\n            }\r\n        }\r\n        // console.log(this.selectedUsers,this.selectedSections);\r\n    }\r\n\r\n    handleSearchClick(event, user) {\r\n        event.stopPropagation();\r\n        user.checked = !user.checked;\r\n        if (user.checked) {\r\n            if (this._isSelectedInArray(user[this.listIdField], this.listIdField, this.selectedUsers)) {\r\n                return;\r\n            }\r\n            else {\r\n                let selectedData = {\r\n                    parent: null,\r\n                    data: user\r\n                };\r\n                this.selectedUsers.push(selectedData);\r\n            }\r\n        }\r\n        else {\r\n            if (this._isSelectedInArray(user[this.listIdField], this.listIdField, this.selectedUsers)) {\r\n                this.selectedUsers.forEach((item, index) => {\r\n                    if (item['data'][this.listIdField] === user[this.listIdField]) {\r\n                        this.selectedUsers.splice(index, 1);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    setSectionDataChecked() {\r\n        let curChecked: boolean = false;\r\n        let sec = this.currentSection;\r\n        let secArray: any = [];\r\n        if (sec.children || (sec.personnels['users'] && sec.personnels['users'].length)) {\r\n            secArray = secArray.concat(sec.children, sec.personnels['users']);\r\n            let secCheckedList = secArray.filter(item => {\r\n                if (item.hasOwnProperty('checked') && item['checked']) {\r\n                    return item;\r\n                }\r\n            });\r\n            let secIndeList = sec.children.filter(item => {\r\n                if (item.hasOwnProperty('indeterminate') && item['indeterminate']) {\r\n                    return item;\r\n                }\r\n            })\r\n            this.currentSection['indeterminate'] = (secIndeList && secIndeList.length) ? true : false;\r\n            if (secCheckedList && secCheckedList.length) {\r\n                if (secCheckedList.length == secArray.length && sec.personnels.pageIndex >= sec.personnels.pageCount - 1) {\r\n                    curChecked = true;\r\n                }\r\n                else {\r\n                    this.currentSection['indeterminate'] = true;\r\n                }\r\n            }\r\n            else {\r\n                curChecked = false;\r\n            }\r\n            this.currentSection['checked'] = curChecked;\r\n            // console.log(this.currentSection);\r\n        }\r\n\r\n        if (this.currentSection.parents.length > 0 && this.currentSection['indeterminate']) {\r\n            this.currentSection.parents.forEach(par => {\r\n                const parSec = this.getSectionById(par);\r\n                if (parSec) {\r\n                    parSec['indeterminate'] = this.currentSection['indeterminate'];\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    setChildDisabledStatus(status: boolean = true) {\r\n        let sec = this.currentSection;\r\n        // sec['disabled'] = status;\r\n        if (sec.children || (sec.personnels['users'] && sec.personnels['users'].length)) {\r\n            sec.children.forEach(item => {\r\n                item['disabled'] = status;\r\n            });\r\n            // sec['childDisabled'] = status;\r\n            sec.personnels['users'].forEach(user => {\r\n                user['disabled'] = status;\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * äººåæ¥çæ´å¤\r\n     */\r\n    getMoreData() {\r\n        if (this.currentSectionId) {\r\n            const sec = this.getSectionById(this.currentSectionId);\r\n            if (sec) {\r\n                this.getPersonnel(this.currentSectionId, sec.personnels.pageIndex + 1).subscribe((d: any) => {\r\n                    if (d.hasOwnProperty(\"users\")) {\r\n                        sec.personnels.pageIndex = d['pageIndex'];\r\n                        sec.personnels['users'] = [...sec.personnels['users'], ...d['users']];\r\n                        if (sec.personnels['users'].length) {\r\n                            if (sec['checked']) {\r\n                                sec.personnels['users'].forEach(user => {\r\n                                    user['checked'] = sec['checked'];\r\n                                });\r\n                            }\r\n                        }\r\n                        // this.setSectionDataChecked();\r\n                    }\r\n                    this.cd.detectChanges();\r\n                })\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * å¨é\r\n     * @param event \r\n     */\r\n    handleClickAll(event) {\r\n        if (this.currentSection.disabled) return;\r\n        if (this.currentSection) {\r\n            this.currentSection['checked'] = !this.currentSection['checked'];\r\n            this.currentSection['indeterminate'] = false;\r\n            let curChecked = this.currentSection['checked'];\r\n            this.currentSection.children.forEach(item => {\r\n                item['checked'] = curChecked;\r\n            });\r\n            if (JSON.stringify(this.currentSection.personnels) != '{}' && this.currentSection['personnels']['users'].length) {\r\n                this.currentSection['personnels']['users'].forEach(user => {\r\n                    user['checked'] = curChecked;\r\n                });\r\n            }\r\n            if (curChecked) {\r\n                this.addSection(this.currentSection)\r\n            }\r\n            else {\r\n                this.removeSection(this.currentSection);\r\n            }\r\n        }\r\n    }\r\n\r\n    addSection(section) {\r\n        if (this._isSelectedInArray(section['data'][this.listIdField], this.listIdField, this.selectedSections)) {\r\n            return;\r\n        }\r\n        else {\r\n            this.selectedSections.push(section);\r\n        }\r\n    }\r\n    removeSection(section) {\r\n        if (this._isSelectedInArray(section['data'][this.listIdField], this.listIdField, this.selectedSections)) {\r\n            this.selectedSections.forEach((item, index) => {\r\n                if (item['data'][this.listIdField] === section['data'][this.listIdField]) {\r\n                    this.selectedSections.splice(index, 1);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * æç´¢ç¨æ·\r\n     */\r\n    searchUser() {\r\n        if (this.searchText) {\r\n            this.showSearchList = true;\r\n            this.showOrHideLoading(true);\r\n            this.getSearchData(this.searchText, 0).subscribe(d => {\r\n                this.showOrHideLoading(false);\r\n                if (d.hasOwnProperty(\"users\")) {\r\n                    this.searchUserList = d;\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            this.showSearchList = false;\r\n        }\r\n    }\r\n    /**\r\n     * æç´¢äººåæ¥çæ´å¤\r\n     */\r\n    getMoreSearchData() {\r\n        if (this.searchText && this.personSearchUrl) {\r\n            this.getSearchData(this.searchText, this.searchUserList.pageIndex + 1).subscribe(d => {\r\n                if (d.hasOwnProperty(\"users\")) {\r\n                    this.searchUserList.pageIndex = d['pageIndex'];\r\n                    this.searchUserList['users'] = [...this.searchUserList['users'], ...d['users']];\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    getSearchData(text: string, pageIndex: number, pageSize: number = this.pageSize) {\r\n        if (this.personSearchUrl) {\r\n            const url = `${this.personSearchUrl}?param=${text}&pageSize=${pageSize}&pageIndex=${pageIndex}`;\r\n            return this.http.get(url);\r\n            //return this.http.get('assets/data/discussionPerson3.json');\r\n        }\r\n        else {\r\n            return of(true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * éä¸­äººåæç»ç»å é¤\r\n     * @param data \r\n     * @param type \r\n     */\r\n    selectionRemove(data: any, type: string) {\r\n        if (!data) return;\r\n        if (type == 'user') {\r\n            let index = this.selectedUsers.findIndex(user => {\r\n                return user.data.id == data.data.id;\r\n            });\r\n            if (index >= 0) {\r\n                this.selectedUsers.splice(index, 1);\r\n            }\r\n            data.data['checked'] = false;\r\n        }\r\n        else if (type == 'section') {\r\n            let index = this.selectedSections.findIndex(item => {\r\n                return item.data.id == data.data.id;\r\n            });\r\n            if (index >= 0) {\r\n                this.selectedSections.splice(index, 1);\r\n            }\r\n            data['checked'] = false;\r\n        }\r\n        let dataParent = null;\r\n        if (type == 'section') {\r\n            dataParent = this.getSectionById(data.parent);\r\n        }\r\n        else if (type == 'user') {\r\n            // bugNum:480649\r\n            if(data['parent']){\r\n                dataParent = this.getSectionById(data.parent.data.id);\r\n            }\r\n        }\r\n        if (dataParent) {\r\n            dataParent['checked'] = false;\r\n            if ((dataParent.children && dataParent.children.length) || (dataParent.personnels.users && dataParent.personnels.users.length)) {\r\n                let childrens = dataParent.children.filter(child => {\r\n                    return child['checked'];\r\n                });\r\n                let users = dataParent.personnels.users.filter(user => {\r\n                    return user['checked'];\r\n                })\r\n                if ((childrens && childrens.length) || (users && users.length)) {\r\n                    dataParent['indeterminate'] = true;\r\n                }\r\n                else {\r\n                    dataParent['indeterminate'] = false;\r\n                }\r\n                if (dataParent.parents.length > 0) {\r\n                    dataParent.parents.forEach(par => {\r\n                        const parSec = this.getSectionById(par);\r\n                        if ((parSec.children && parSec.children.length) || (parSec.personnels.users && parSec.personnels.users.length)) {\r\n                            let parchildrens = parSec.children.filter(child => {\r\n                                return child['checked'];\r\n                            });\r\n                            let parusers = parSec.personnels.users.filter(user => {\r\n                                return user['checked'];\r\n                            })\r\n                            if ((parchildrens && parchildrens.length) || (parusers && parusers.length)) {\r\n                                parSec['indeterminate'] = true;\r\n                            }\r\n                            else {\r\n                                if (dataParent['indeterminate']) {\r\n                                    parSec['indeterminate'] = dataParent['indeterminate'];\r\n                                }\r\n                                else {\r\n                                    parSec['indeterminate'] = false;\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * å é¤å³ä¾§å¨é¨æ°æ®\r\n     */\r\n    moveAllToLeft() {\r\n        this.selectedUsers.forEach(user => {\r\n            user.data['checked'] = false;\r\n        });\r\n        this.selectedSections.forEach(item => {\r\n            item['checked'] = false;\r\n        });\r\n        this.sectionDataTiled.forEach(sec => {\r\n            sec['indeterminate'] = false;\r\n            sec['checked'] = false;\r\n            sec['disabled'] = false;\r\n            if (JSON.stringify(sec.personnels) != '{}' && sec['personnels']['users'].length) {\r\n                sec['personnels']['users'].forEach(user => {\r\n                    user['checked'] = false;\r\n                });\r\n            }\r\n        });\r\n        this.selectedUsers = [];\r\n        this.selectedSections = [];\r\n        this.cd.markForCheck();\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param numberType 0ï¼åæ¶ï¼1ï¼ç¡®å®\r\n     */\r\n    returnResult(numberType: number) {\r\n        this.finalText = '';\r\n        if (numberType) {\r\n            // console.log(this.selectedUsers,this.selectedSections);\r\n            this.selectionsChange.emit({\r\n                info: 'confirm',\r\n                data: {\r\n                    users: this.selectedUsers,\r\n                    section: this.selectedSections\r\n                }\r\n            });\r\n            // this.selections.forEach(item => {\r\n            //     this.finalText += item[this.listDisplayText] + 'ï¼';\r\n            // })\r\n        } else {\r\n            this.selectionsChange.emit({\r\n                info: 'cancel',\r\n                data: {\r\n                    users: [],\r\n                    section: []\r\n                }\r\n            });\r\n        }\r\n        this.moveAllToLeft();\r\n        this.searchText = '';\r\n        this.searchUser();\r\n        this.personnelDialog.close();\r\n    }\r\n    /**\r\n     *  é¢åå±åè¡¨æ¾ç¤º\r\n     */\r\n    initCrumbsList() {\r\n        const crumbsListWidth = this.crumbsList.nativeElement.offsetWidth - 30;\r\n        const crumbsListItems = this.crumbsList.nativeElement.children;\r\n\r\n        let crumbsListItemWidth = 0;\r\n        if (crumbsListItems && crumbsListItems.length) {\r\n            for (let i = crumbsListItems.length - 1; i >= 0; i--) {\r\n\r\n                this.renderer.setStyle(crumbsListItems[i], 'display', 'flex');\r\n                let width = crumbsListItems[i].offsetWidth;\r\n                crumbsListItemWidth += width;\r\n                if (crumbsListItemWidth >= crumbsListWidth) {\r\n                    this.renderer.setStyle(crumbsListItems[i], 'display', 'none');\r\n                }\r\n                else {\r\n                    this.renderer.setStyle(crumbsListItems[i], 'display', 'flex');\r\n                }\r\n            }\r\n        };\r\n        if (crumbsListItemWidth >= crumbsListWidth) {\r\n            this.crumbsEllipsis = true;\r\n        }\r\n        else {\r\n            this.crumbsEllipsis = false;\r\n        }\r\n    }\r\n\r\n    crumbsMore() {\r\n        if (this.sectionCrumbs && this.sectionCrumbs.length) {\r\n            this.crumbsClick(this.sectionCrumbs[0]);\r\n        }\r\n    }\r\n\r\n    _isInArray(value: string, field: string, array: any[]) {\r\n        if (!field || !value) {\r\n            throw new Error('å2ä¸ªåæ°å¿å¡«');\r\n        }\r\n        return array.find(item => value === item[field]) ? true : false;\r\n    }\r\n\r\n    _isSelectedInArray(value: string, field: string, array: any[]) {\r\n        if (!field || !value) {\r\n            throw new Error('å2ä¸ªåæ°å¿å¡«');\r\n        }\r\n        return array.find(item => value === item['data'][field]) ? true : false;\r\n    }\r\n\r\n    closeDialog() {\r\n        this.moveAllToLeft();\r\n        this.searchText = '';\r\n        this.searchUser();\r\n    }\r\n    /**\r\n     * æ¾ç¤ºæéèæ­£å¨å è½½\r\n     * @param showOrHide ï¼trueä¸ºæ¾ç¤ºï¼hideä¸ºéè\r\n     */\r\n    private showOrHideLoading(showOrHide) {\r\n        if (!this.discussionContent || !this.loadingSer) {\r\n            return;\r\n        }\r\n        if (showOrHide) {\r\n            // æå¼\r\n            this.loadingInstance = this.loadingSer.show({ delay: 500, container: this.discussionContent, type: 1, message: 'å¨åå è½½ä¸­...' });\r\n        } else if (this.loadingInstance) {\r\n            // å³é­\r\n            this.loadingSer.close(this.loadingInstance.id);\r\n        }\r\n    }\r\n\r\n}","import { Directive, Input } from '@angular/core';\r\nimport { of } from 'rxjs';\r\nimport { discussionConfig } from './discussionList.interface';\r\nimport { DiscussionListService } from './discussion-list.service';\r\n\r\n@Directive({\r\n    selector: '[fDiscussionList]'\r\n})\r\nexport class DiscussionListDirective {\r\n    // private comments=[];\r\n    // @Input('discussionListData') \r\n    // set discussionListData(datas){\r\n    //     if(datas){\r\n    //         this.discussionListService.resetData(datas);\r\n    //         this.comments=[...datas];\r\n    //     }\r\n    // };\r\n    // get discussionListData(){\r\n    //     return this.comments;\r\n    // }\r\n\r\n    _discussionListData = [];\r\n    @Input() \r\n    set discussionListData(data) {\r\n      if(data){\r\n        this._discussionListData = data;\r\n        this.discussionListService.resetData(data);\r\n        // this.comments=[...data];\r\n      }\r\n    }\r\n    get discussionListData(){\r\n      return this._discussionListData;\r\n    }\r\n\r\n    constructor(private discussionListService:DiscussionListService) {\r\n    }\r\n}","\r\nimport { Pipe, PipeTransform } from \"@angular/core\";\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n@Pipe({ name: 'safeHtml' })\r\nexport class SafeHtmlPipe implements PipeTransform {\r\n    constructor(private sanitized: DomSanitizer) { }\r\n\r\n    transform(value) {\r\n        return this.sanitized.bypassSecurityTrustHtml(value);\r\n    }\r\n}","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({name: 'avatarHtml'})\r\nexport class AvatarHtmlPipe implements PipeTransform {\r\n    transform(item:any): string {\r\n        let str = item['name'];\r\n        if(str){\r\n            return str.substring(str.length-2,str.length);\r\n        }\r\n        else{\r\n            return '';\r\n        }\r\n    }\r\n}\r\n\r\n@Pipe({name: 'getOrgText'})\r\nexport class GetOrgTextPipe implements PipeTransform {\r\n    transform(item:any, orgs: any[]): string {\r\n        let str = item['orgId'];\r\n        if(orgs && orgs.length){\r\n            let sec = orgs.find(org => {\r\n                return org['id'] == str;\r\n            });\r\n            let orgtext = '';\r\n            if(sec){\r\n                if(sec['parentId'] != ''){\r\n                    let par = orgs.find(org => {\r\n                        return org['id'] == sec['parentId'];\r\n                    });\r\n                    orgtext = par ? `${par.name}/${sec['name']}`:sec['name'];\r\n                }\r\n                else{\r\n                    orgtext = sec['name'];\r\n                }\r\n            }\r\n            return orgtext;\r\n        }\r\n        else {\r\n            return '';\r\n        }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule,registerLocaleData } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { SafeHtmlPipe } from './pipe/safe-html.pipe';\r\nimport { DiscussionListComponent } from './discussion-list/discussion-list.component';\r\nimport { DiscussionEditorComponent } from './discussion-editor/discussion-editor.component';\r\nimport { FarrisDialogModule } from '@farris/ui-dialog';\r\nimport { FarrisCommonModule } from '@farris/ui-common';\r\nimport { TreeModule } from '@farris/ui-tree';\r\nimport { ModalModule, BsModalService } from '@farris/ui-modal';\r\nimport { LoadingModule } from '@farris/ui-loading';\r\nimport { LocaleModule } from '@farris/ui-locale';\r\nimport { ComponentLoaderFactory } from '@farris/ui-modal/component-loader';\r\nimport { PositioningService } from '@farris/ui-modal/positioning';\r\nimport { PerfectScrollbarModule } from '@farris/ui-perfect-scrollbar';\r\nimport { DiscussionPersonnelComponent } from './discussion-personnel/discussion-personnel.component';\r\nimport { PaginationModule } from '@farris/ui-pagination';\r\nimport { DiscussionListService } from './discussion-list/discussion-list.service';\r\nimport { DiscussionListDirective } from './discussion-list/discussionList.directive';\r\nimport { NotifyModule } from '@farris/ui-notify';\r\nimport { InputGroupModule } from '@farris/ui-input-group';\r\n\r\nimport zh from '@angular/common/locales/zh';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AvatarHtmlPipe, GetOrgTextPipe } from './pipe/controlType.pipe';\r\nregisterLocaleData(zh);\r\n\r\n@NgModule({\r\n  declarations: [DiscussionEditorComponent, DiscussionListComponent, DiscussionPersonnelComponent, SafeHtmlPipe, AvatarHtmlPipe,GetOrgTextPipe,DiscussionListDirective],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ModalModule,\r\n    FarrisDialogModule,\r\n    FarrisCommonModule,\r\n    LoadingModule,\r\n    PerfectScrollbarModule,\r\n    TreeModule,\r\n    PaginationModule,\r\n    NotifyModule,\r\n    HttpClientModule,\r\n    LocaleModule.forRoot(),\r\n    InputGroupModule\r\n  ],\r\n  providers: [\r\n      BsModalService,\r\n      ComponentLoaderFactory,\r\n      PositioningService,\r\n      DiscussionListService\r\n  ],\r\n  exports: [DiscussionEditorComponent, DiscussionListComponent, DiscussionPersonnelComponent, SafeHtmlPipe, AvatarHtmlPipe,GetOrgTextPipe,DiscussionListDirective],\r\n  entryComponents: [ DiscussionPersonnelComponent]\r\n})\r\nexport class DiscussionGroupModule { }\r\n"]}