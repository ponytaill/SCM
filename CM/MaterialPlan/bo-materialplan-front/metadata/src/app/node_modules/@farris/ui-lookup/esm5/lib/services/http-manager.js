/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { cloneDeep } from 'lodash-es';
import { FavoriteAction, LookupGridDisplayType } from '../lookup-displaytype';
import { of } from 'rxjs';
import { map, switchMap, tap } from 'rxjs/operators';
// 帮助默认个性化数据
/** @type {?} */
var DefaultUserConfig = {
    tabIndex: 'datalist',
    favorite: null,
    size: null
};
var LookupHttpManager = /** @class */ (function () {
    function LookupHttpManager(ins) {
        this.ins = ins;
        // 每次帮助打开后，更新此值，做为个性化数据的初始值；
        // 关闭窗口时，与此进行对比。如果一样，则不保存；
        this._originalPersonalConfig = DefaultUserConfig;
    }
    /**
     * @private
     * @return {?}
     */
    LookupHttpManager.prototype.disablePagination = /**
     * @private
     * @return {?}
     */
    function () {
        return {
            pageIndex: 1,
            pageSize: 500
        };
    };
    /** 构造查询参数 */
    /**
     * 构造查询参数
     * @param {?=} event
     * @param {?=} type
     * @return {?}
     */
    LookupHttpManager.prototype.buildQueryParams = /**
     * 构造查询参数
     * @param {?=} event
     * @param {?=} type
     * @return {?}
     */
    function (event, type) {
        if (type === void 0) { type = 'all'; }
        /** @type {?} */
        var params = {};
        if (this.ins.condition) {
            params.condition = cloneDeep(this.ins.condition);
        }
        /** @type {?} */
        var searchParam = { category: type };
        if (type !== 'fav') {
            if (this.ins.isDoublleList() && this.ins.navigationFilter && type !== 'all') {
                if (this.ins.navigationFilter.idValue && type !== 'textchange') {
                    params.relationFilter = tslib_1.__spread(this.ins.navigationFilter.idValue);
                }
            }
        }
        if (event) {
            if (type === 'fav' || type === 'selected') {
                event.pageInfo = this.disablePagination();
            }
            if (event.pageInfo) {
                params.pageIndex = event.pageInfo.pageIndex;
                params.pageSize = event.pageInfo.pageSize;
            }
            if (event.search) {
                /** @type {?} */
                var sfield = event.search.field;
                if (sfield && sfield === '*') {
                    sfield = '*';
                }
                if (event.search.value) {
                    event.search.value = event.search.value.trim();
                }
                searchParam.searchField = sfield;
                searchParam.searchValue = event.search.value;
                searchParam.searchType = event.search.type || 'like';
                if (event.search.value === '' && searchParam.category === 'search') {
                    searchParam.category = 'all';
                }
            }
            if (event.sortName) {
                searchParam.sortName = event.sortName;
            }
            if (event.sortOrder) {
                searchParam.sortOrder = event.sortOrder;
            }
        }
        if (type === 'fav' && event.favoriteIds) {
            searchParam.favoriteIds = event.favoriteIds;
        }
        if (this.ins.isTree() || this.ins.displayType === LookupGridDisplayType.NavTreeList) {
            params.enableFullTree = this.ins.enableFullTree;
        }
        params.treeToList = this.ins.treeToList;
        params.navTreeToList = this.ins.navTreeToList;
        // 查询时不构造完整树
        if (type === 'textchange') {
            params.enableFullTree = false;
        }
        if (type === 'selected') {
            searchParam.category = 'fav';
            params.enableFullTree = false;
            searchParam.favoriteIds = event.favoriteIds;
        }
        params.searchValue = JSON.stringify(searchParam);
        params.loadTreeDataType = this.ins.loadTreeDataType;
        params.customData = this.ins.customData;
        if (this.ins.helpId) {
            params.helpId = this.ins.helpId;
        }
        if (event.selectedInfo) {
            params.selectedInfo = event.selectedInfo;
        }
        if (event.navNodePathCode !== undefined) {
            params.navPathCode = event.navNodePathCode;
        }
        else {
            if (type === 'navAllChildren') {
                if (this.ins.includeSubordinates && this.ins['navNodePathCode']) {
                    params.navPathCode = this.ins['navNodePathCode'];
                }
            }
        }
        return params;
    };
    /**
     * @param {?=} event
     * @param {?=} type
     * @return {?}
     */
    LookupHttpManager.prototype.getData = /**
     * @param {?=} event
     * @param {?=} type
     * @return {?}
     */
    function (event, type) {
        if (type === void 0) { type = 'all'; }
        /** @type {?} */
        var uri = this.ins.gridOptions.uri;
        if (this.ins.isDoublleList() && this.ins.navigationFilter && this.ins.navigationFilter.idValue && type !== 'fav') {
            if (this.ins.includeSubordinates && this.ins.navigationOptions.treeInfo.loadDataType === 'async') {
                type = 'navAllChildren';
            }
            else {
                type = 'list';
            }
        }
        /** @type {?} */
        var params = this.buildQueryParams(event, type);
        if (uri || this.ins.beUri) {
            if (this.ins.beUri && this.ins.columns && this.ins.columns.length) {
                /** @type {?} */
                var allSearchFields = this.ins.columns.map((/**
                 * @param {?} col
                 * @return {?}
                 */
                function (col) { return col.searchField; })).filter((/**
                 * @param {?} f
                 * @return {?}
                 */
                function (f) { return f; }));
                if (!params.condition) {
                    params.condition = {};
                }
                if (!this.ins.isTree() && this.ins.pagination) {
                    var _a = tslib_1.__assign({}, params), _b = _a.pageSize, pageSize = _b === void 0 ? this.ins.pageSize || 20 : _b, pageIndex = _a.pageIndex;
                    params.condition.pagination = { pageSize: pageSize, pageIndex: pageIndex };
                }
                else {
                    params.condition.pagination = { isUsePagination: false };
                }
                /** @type {?} */
                var searchParam = JSON.parse(params.searchValue);
                if (searchParam.searchValue) {
                    params.condition = this.ins.lookupUtils.mergeCondition(params.condition, allSearchFields, {
                        field: searchParam.searchField,
                        value: searchParam.searchValue
                    });
                }
            }
            /** @type {?} */
            var _uri = this.ins.beUri || uri;
            if (this.ins.http) {
                this.ins.http.context = this.ins.context;
            }
            if (this.ins._searchResult) {
                return of(this.ins._searchResult);
            }
            if (type !== 'allChildren') {
                return this.ins.http.getData(_uri, params);
            }
            else {
                /** @type {?} */
                var params1 = {
                    searchValue: JSON.stringify({ category: type }),
                    parentsIds: event.parentsIds,
                    customData: params.customData,
                    helpId: params.helpId
                };
                return this.ins.http.getData(_uri, params1);
            }
        }
        else {
            return of(false);
        }
    };
    // getFavoriteData(params) {
    //     return this.getData(params, 'fav');
    // }
    // getFavoriteData(params) {
    //     return this.getData(params, 'fav');
    // }
    /**
     * @param {?} selIds
     * @return {?}
     */
    LookupHttpManager.prototype.getSelecedItems = 
    // getFavoriteData(params) {
    //     return this.getData(params, 'fav');
    // }
    /**
     * @param {?} selIds
     * @return {?}
     */
    function (selIds) {
        return this.getData({ favoriteIds: selIds }, 'selected');
    };
    /**
     * @return {?}
     */
    LookupHttpManager.prototype.getPersonalConfig = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var defaultConf = cloneDeep(DefaultUserConfig);
        // if (this.ins.customData) {
        //     const wrapKeyData = JSON.stringify({ key: this.ins.customData });
        //     const configKeyString = this.ins.getLookupBindingFields() + wrapKeyData;
        //     this.ins.personalConfigService.personalConfigKey = configKeyString;
        // }
        /** @type {?} */
        var key = this.ins.personalConfigService._newKey;
        /** @type {?} */
        var _conf = this.ins.personalConfigService.getPersonalData(key);
        if (!_conf || !Object.keys(_conf).length) {
            _conf = defaultConf;
        }
        /** @type {?} */
        var req = of(_conf);
        if (this.ins.favoriteDataFrom === 'locale' || this.ins.isTabChanged) {
            return req;
        }
        if (this.ins.http && this.ins.http['getUserSettings']) {
            return this.ins.http['getUserSettings'](key).pipe(map((/**
             * @param {?} ucs
             * @return {?}
             */
            function (ucs) {
                if (ucs) {
                    return ucs.textValue ? JSON.parse(ucs.textValue) : defaultConf;
                }
                return defaultConf;
            })));
        }
        else {
            return req;
        }
    };
    /**
     * @param {?=} event
     * @param {?=} type
     * @param {?=} isQuickSelect
     * @return {?}
     */
    LookupHttpManager.prototype.lookupRequest = /**
     * @param {?=} event
     * @param {?=} type
     * @param {?=} isQuickSelect
     * @return {?}
     */
    function (event, type, isQuickSelect) {
        var _this = this;
        if (type === void 0) { type = 'all'; }
        if (isQuickSelect === void 0) { isQuickSelect = false; }
        if (!this.ins.usePersionalConf || isQuickSelect) {
            return this.getData(event, type);
        }
        /** @type {?} */
        var req = this.getPersonalConfig();
        return req.pipe(tap((/**
         * @param {?} c
         * @return {?}
         */
        function (c) {
            _this.ins.personalConf = c;
            _this.ins.personalConfigService.savePersonalConfig(c);
            if (!_this.ins.isTabChanged) {
                _this._originalPersonalConfig = cloneDeep(c);
            }
        })), switchMap((/**
         * @param {?} c
         * @return {?}
         */
        function (c) {
            var tabIndex = c.tabIndex, favorite = c.favorite, size = c.size, cascadeStatus = c.cascadeStatus;
            if (!_this.ins.isTabChanged) {
                _this.ins.activeTab = tabIndex || 'datalist';
            }
            if (size) {
                _this.ins.dialogWidth = size.width;
                _this.ins.dialogHeight = size.height;
                _this.ins.dialog.reSize({ width: size.width, height: size.height });
            }
            if (cascadeStatus && _this.ins.enableCascade) {
                _this.ins.cascadeStatus = cascadeStatus;
            }
            if (_this.ins.cascadeItems) {
                /** @type {?} */
                var keys = ['enable', 'up', 'down', 'disable'];
                keys.forEach((/**
                 * @param {?} n
                 * @return {?}
                 */
                function (n) {
                    if (_this.ins.cascadeItems[n] === undefined) {
                        _this.ins.cascadeItems[n] = true;
                    }
                }));
                if (_this.ins.cascadeItems[_this.ins.cascadeStatus] === undefined) {
                    _this.ins.cascadeStatus = (/** @type {?} */ (Object.keys(_this.ins.cascadeItems)[0]));
                }
            }
            if (_this.ins.activeTab === 'datalist') {
                return _this.getData(event, type);
            }
            else if (_this.ins.activeTab === 'favorite') {
                /** @type {?} */
                var favIds = favorite ? favorite[_this.ins.localService.localeId] : [];
                if ((!favIds || !favIds.length) && !_this.ins.isTabChanged) {
                    return _this.getData(event, 'all').pipe(map((/**
                     * @param {?} r
                     * @return {?}
                     */
                    function (r) {
                        if (r && !r.items) {
                            r.items = [];
                        }
                        r.activeTab = 'datalist';
                        return r;
                    })));
                }
                // const _fids = favIds.filter(n => n);
                event.favoriteIds = favIds;
                event.search = null;
                return _this.getData(event, 'fav').pipe(switchMap((/**
                 * @param {?} r
                 * @return {?}
                 */
                function (r) {
                    /** @type {?} */
                    var items = r ? r.items || [] : [];
                    // 加入数据权限后，没有返回数据且第1次打开窗口，非手动点击收藏标签时
                    if (!items.length && !_this.ins.isTabChanged) {
                        return _this.getData(event, 'all').pipe(map((/**
                         * @param {?} a
                         * @return {?}
                         */
                        function (a) {
                            if (a && !a.items) {
                                a.items = [];
                            }
                            a.activeTab = 'datalist';
                            return a;
                        })));
                    }
                    else {
                        return of(r);
                    }
                })));
            }
            else if (_this.ins.activeTab === 'selected') {
                /** @type {?} */
                var selIds = _this.ins.displayValue ? _this.ins.displayValue.split(',') : [];
                /** @type {?} */
                var _sids = selIds.filter((/**
                 * @param {?} n
                 * @return {?}
                 */
                function (n) { return n; }));
                return _this.getSelecedItems(_sids);
            }
        })));
    };
    // 保存个性化数据
    // 保存个性化数据
    /**
     * @param {?} action
     * @return {?}
     */
    LookupHttpManager.prototype.submitFavoriteData = 
    // 保存个性化数据
    /**
     * @param {?} action
     * @return {?}
     */
    function (action) {
        var _this = this;
        // 如果数据与默认的数据一至则不保存。
        if (JSON.stringify(this.ins.personalConf) === JSON.stringify(this._originalPersonalConfig)) {
            return;
        }
        /** @type {?} */
        var msg = '';
        if (action === FavoriteAction.add) {
            msg = this.ins.addFavoriteSuccess;
        }
        else if (action === FavoriteAction.delete) {
            msg = this.ins.delFavoriteSuccess;
        }
        // 更新本地缓存
        localStorage.setItem(this.ins.personalConfigService._newKey, JSON.stringify(this.ins.personalConf));
        this.ins.personalConfigService.savePersonalConfig(this.ins.personalConf || {});
        if (this.ins.favoriteDataFrom !== 'locale') {
            this._originalPersonalConfig = cloneDeep(this.ins.personalConf);
            /** @type {?} */
            var configData = {
                configkey1: this.ins.personalConfigService.personalConfigKey,
                configkey2: '',
                configkey3: '',
                textvalue: JSON.stringify(this.ins.personalConf)
            };
            if (this.ins.http && this.ins.http['saveUserSettings']) {
                this.ins.savingFaoriteData = true;
                this.ins.showLoading();
                return this.ins.http['saveUserSettings'](configData).subscribe((/**
                 * @param {?} r
                 * @return {?}
                 */
                function (r) {
                    _this.ins.savingFaoriteData = false;
                    _this.ins.closeLoading();
                    if (msg) {
                        _this.ins.notifyService.success(msg);
                    }
                }));
            }
            else {
                if (msg) {
                    this.ins.notifyService.success(msg);
                }
            }
        }
        else {
            if (msg) {
                this.ins.notifyService.success(msg);
            }
        }
    };
    return LookupHttpManager;
}());
export { LookupHttpManager };
if (false) {
    /**
     * @type {?}
     * @private
     */
    LookupHttpManager.prototype._originalPersonalConfig;
    /**
     * @type {?}
     * @private
     */
    LookupHttpManager.prototype.ins;
}
//# sourceMappingURL=data:application/json;base64,