import { CompareType } from '../enum/compare-type.enum';
import { ValueType } from '../enum/value-type.enum';
import { RelationType } from '../enum/relation-type.enum';
export class NumberRangeHandler {
    convert(qc) {
        const arr = [];
        const nrv = qc.value;
        (nrv.startValue != null) && arr.push({
            'FilterField': qc.fieldCode,
            'Compare': CompareType.GreaterOrEqual,
            'Value': nrv.startValue,
            'Relation': RelationType.And,
            'Expresstype': ValueType.Value
        });
        (nrv.endValue != null) && arr.push({
            'FilterField': qc.fieldCode,
            'Compare': CompareType.LessOrEqual,
            'Value': nrv.endValue,
            'Relation': RelationType.And,
            'Expresstype': ValueType.Value
        });
        return arr;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibnVtYmVycmFnZS5oYW5kbGVyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy9jb21tYW5kLXNlcnZpY2VzLyIsInNvdXJjZXMiOlsibGliL3F1ZXJ5LXNvbHV0aW9uL2hhbmRsZXJzL251bWJlcnJhZ2UuaGFuZGxlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDeEQsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ3BELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUUxRCxNQUFNLE9BQU8sa0JBQWtCO0lBQzNCLE9BQU8sQ0FBQyxFQUFrQjtRQUN0QixNQUFNLEdBQUcsR0FBRyxFQUFFLENBQUM7UUFDZixNQUFNLEdBQUcsR0FBSSxFQUFFLENBQUMsS0FBMEIsQ0FBQztRQUMzQyxDQUFDLEdBQUcsQ0FBQyxVQUFVLElBQUksSUFBSSxDQUFDLElBQUksR0FBRyxDQUFDLElBQUksQ0FBQztZQUNqQyxhQUFhLEVBQUcsRUFBRSxDQUFDLFNBQVM7WUFDNUIsU0FBUyxFQUFHLFdBQVcsQ0FBQyxjQUFjO1lBQ3RDLE9BQU8sRUFBRyxHQUFHLENBQUMsVUFBVTtZQUN4QixVQUFVLEVBQUcsWUFBWSxDQUFDLEdBQUc7WUFDN0IsYUFBYSxFQUFFLFNBQVMsQ0FBQyxLQUFLO1NBQ2pDLENBQUMsQ0FBQztRQUNILENBQUMsR0FBRyxDQUFDLFFBQVEsSUFBSSxJQUFJLENBQUMsSUFBSSxHQUFHLENBQUMsSUFBSSxDQUFDO1lBQy9CLGFBQWEsRUFBRyxFQUFFLENBQUMsU0FBUztZQUM1QixTQUFTLEVBQUcsV0FBVyxDQUFDLFdBQVc7WUFDbkMsT0FBTyxFQUFHLEdBQUcsQ0FBQyxRQUFRO1lBQ3RCLFVBQVUsRUFBRyxZQUFZLENBQUMsR0FBRztZQUM3QixhQUFhLEVBQUUsU0FBUyxDQUFDLEtBQUs7U0FDakMsQ0FBQyxDQUFDO1FBRUgsT0FBTyxHQUFHLENBQUM7SUFDZixDQUFDO0NBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJUXVlcnlDb25kaXRpb25IYW5kbGVyIH0gZnJvbSBcIi4vaXF1ZXJ5Y29uZGl0aW9uLmhhbmRsZXJcIjtcbmltcG9ydCB7IFF1ZXJ5Q29uZGl0aW9uLCBOdW1iZXJSYW5nZVZhbHVlIH0gZnJvbSBcIkBmYXJyaXMvY29tcG9uZW50LXF1ZXJ5Y29uZGl0aW9uXCI7XG5pbXBvcnQgeyBDb21wYXJlVHlwZSB9IGZyb20gJy4uL2VudW0vY29tcGFyZS10eXBlLmVudW0nO1xuaW1wb3J0IHsgVmFsdWVUeXBlIH0gZnJvbSAnLi4vZW51bS92YWx1ZS10eXBlLmVudW0nO1xuaW1wb3J0IHsgUmVsYXRpb25UeXBlIH0gZnJvbSAnLi4vZW51bS9yZWxhdGlvbi10eXBlLmVudW0nO1xuXG5leHBvcnQgY2xhc3MgTnVtYmVyUmFuZ2VIYW5kbGVyIGltcGxlbWVudHMgSVF1ZXJ5Q29uZGl0aW9uSGFuZGxlcntcbiAgICBjb252ZXJ0KHFjOiBRdWVyeUNvbmRpdGlvbikge1xuICAgICAgICBjb25zdCBhcnIgPSBbXTtcbiAgICAgICAgY29uc3QgbnJ2ID0gKHFjLnZhbHVlIGFzIE51bWJlclJhbmdlVmFsdWUpO1xuICAgICAgICAobnJ2LnN0YXJ0VmFsdWUgIT0gbnVsbCkgJiYgYXJyLnB1c2goe1xuICAgICAgICAgICAgJ0ZpbHRlckZpZWxkJyA6IHFjLmZpZWxkQ29kZSxcbiAgICAgICAgICAgICdDb21wYXJlJyA6IENvbXBhcmVUeXBlLkdyZWF0ZXJPckVxdWFsLCAvL0dyZWF0ZXJPckVxdWFsXG4gICAgICAgICAgICAnVmFsdWUnIDogbnJ2LnN0YXJ0VmFsdWUsXG4gICAgICAgICAgICAnUmVsYXRpb24nIDogUmVsYXRpb25UeXBlLkFuZCwgLy9hbmRcbiAgICAgICAgICAgICdFeHByZXNzdHlwZSc6IFZhbHVlVHlwZS5WYWx1ZVxuICAgICAgICB9KTtcbiAgICAgICAgKG5ydi5lbmRWYWx1ZSAhPSBudWxsKSAmJiBhcnIucHVzaCh7XG4gICAgICAgICAgICAnRmlsdGVyRmllbGQnIDogcWMuZmllbGRDb2RlLFxuICAgICAgICAgICAgJ0NvbXBhcmUnIDogQ29tcGFyZVR5cGUuTGVzc09yRXF1YWwsIC8vTGVzc09yRXF1YWxcbiAgICAgICAgICAgICdWYWx1ZScgOiBucnYuZW5kVmFsdWUsXG4gICAgICAgICAgICAnUmVsYXRpb24nIDogUmVsYXRpb25UeXBlLkFuZCwvL2FuZFxuICAgICAgICAgICAgJ0V4cHJlc3N0eXBlJzogVmFsdWVUeXBlLlZhbHVlXG4gICAgICAgIH0pO1xuXG4gICAgICAgIHJldHVybiBhcnI7XG4gICAgfVxufSJdfQ==