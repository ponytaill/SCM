/**
 * @fileoverview added by tsickle
 * Generated from: lib/ffileupload-adapt-unifile.config.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable, Optional, InjectionToken, Inject, } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * @record
 */
export function FFileUploadAdaptUnifileConfig() { }
if (false) {
    /** @type {?|undefined} */
    FFileUploadAdaptUnifileConfig.prototype.rootId;
    /** @type {?|undefined} */
    FFileUploadAdaptUnifileConfig.prototype.formId;
    /** @type {?|undefined} */
    FFileUploadAdaptUnifileConfig.prototype.mode;
    /** @type {?|undefined} */
    FFileUploadAdaptUnifileConfig.prototype.options;
}
/** @type {?} */
export const FFileUploadAdaptUnifileConfigToken = new InjectionToken('MFFileUploadAdaptUnifileConfig');
export class FFileUploadAdaptUnifileConfigService {
    /**
     * @param {?} exConfig
     */
    constructor(exConfig) {
        this.config = (/** @type {?} */ ({
            rootId: '',
            formId: '',
            mode: 0
        }));
        if (exConfig) {
            Object.assign(this.config, exConfig);
        }
    }
    /**
     * 获取config属性的值
     * @return {?}
     */
    getConfig() {
        return this.config;
    }
    /**
     * 设置config的属性值
     * @param {?} key
     * @param {?} value
     * @return {?}
     */
    setConfig(key, value) {
        this.config[key] = value;
    }
}
FFileUploadAdaptUnifileConfigService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root'
            },] }
];
/** @nocollapse */
FFileUploadAdaptUnifileConfigService.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [FFileUploadAdaptUnifileConfigToken,] }] }
];
/** @nocollapse */ FFileUploadAdaptUnifileConfigService.ngInjectableDef = i0.defineInjectable({ factory: function FFileUploadAdaptUnifileConfigService_Factory() { return new FFileUploadAdaptUnifileConfigService(i0.inject(FFileUploadAdaptUnifileConfigToken, 8)); }, token: FFileUploadAdaptUnifileConfigService, providedIn: "root" });
if (false) {
    /**
     * @type {?}
     * @private
     */
    FFileUploadAdaptUnifileConfigService.prototype.config;
}
;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmZpbGV1cGxvYWQtYWRhcHQtdW5pZmlsZS5jb25maWcuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL2V4dGVuZC1maWxldXBsb2FkLWFkYXB0LXVuaWZpbGUvIiwic291cmNlcyI6WyJsaWIvZmZpbGV1cGxvYWQtYWRhcHQtdW5pZmlsZS5jb25maWcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLFFBQVEsRUFBRSxjQUFjLEVBQUUsTUFBTSxHQUFHLE1BQU0sZUFBZSxDQUFDOzs7OztBQUU5RSxtREFLQzs7O0lBSkcsK0NBQWdCOztJQUNoQiwrQ0FBZ0I7O0lBQ2hCLDZDQUFjOztJQUNkLGdEQUFhOzs7QUFFakIsTUFBTSxPQUFPLGtDQUFrQyxHQUFHLElBQUksY0FBYyxDQUFnQyxnQ0FBZ0MsQ0FBQztBQUlySSxNQUFNLE9BQU8sb0NBQW9DOzs7O0lBTzdDLFlBQW9FLFFBQXVDO1FBTm5HLFdBQU0sR0FBRyxtQkFBQTtZQUNiLE1BQU0sRUFBRSxFQUFFO1lBQ1YsTUFBTSxFQUFFLEVBQUU7WUFDVixJQUFJLEVBQUUsQ0FBQztTQUNWLEVBQWlDLENBQUM7UUFHL0IsSUFBSSxRQUFRLEVBQUU7WUFDVixNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsUUFBUSxDQUFDLENBQUM7U0FDeEM7SUFDTCxDQUFDOzs7OztJQUlELFNBQVM7UUFDTCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDdkIsQ0FBQzs7Ozs7OztJQU1ELFNBQVMsQ0FBQyxHQUFHLEVBQUUsS0FBSztRQUNoQixJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxHQUFHLEtBQUssQ0FBQztJQUM3QixDQUFDOzs7WUE1QkosVUFBVSxTQUFDO2dCQUNSLFVBQVUsRUFBRSxNQUFNO2FBQ3JCOzs7OzRDQVFnQixRQUFRLFlBQUksTUFBTSxTQUFDLGtDQUFrQzs7Ozs7Ozs7SUFObEUsc0RBSW1DOztBQXFCdEMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUsIE9wdGlvbmFsLCBJbmplY3Rpb25Ub2tlbiwgSW5qZWN0LCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBGRmlsZVVwbG9hZEFkYXB0VW5pZmlsZUNvbmZpZyB7XHJcbiAgICByb290SWQ/OiBzdHJpbmc7XHJcbiAgICBmb3JtSWQ/OiBzdHJpbmc7XHJcbiAgICBtb2RlPzogbnVtYmVyOy8vMCDku6PooajmraPlvI/vvIwx5Luj6KGo5Li05pe2XHJcbiAgICBvcHRpb25zPzphbnk7XHJcbn1cclxuZXhwb3J0IGNvbnN0IEZGaWxlVXBsb2FkQWRhcHRVbmlmaWxlQ29uZmlnVG9rZW4gPSBuZXcgSW5qZWN0aW9uVG9rZW48RkZpbGVVcGxvYWRBZGFwdFVuaWZpbGVDb25maWc+KCdNRkZpbGVVcGxvYWRBZGFwdFVuaWZpbGVDb25maWcnKTtcclxuQEluamVjdGFibGUoe1xyXG4gICAgcHJvdmlkZWRJbjogJ3Jvb3QnXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBGRmlsZVVwbG9hZEFkYXB0VW5pZmlsZUNvbmZpZ1NlcnZpY2Uge1xyXG4gICAgcHJpdmF0ZSBjb25maWcgPSB7XHJcbiAgICAgICAgcm9vdElkOiAnJyxcclxuICAgICAgICBmb3JtSWQ6ICcnLFxyXG4gICAgICAgIG1vZGU6IDBcclxuICAgIH0gYXMgRkZpbGVVcGxvYWRBZGFwdFVuaWZpbGVDb25maWc7XHJcbiAgICBcclxuICAgIGNvbnN0cnVjdG9yKEBPcHRpb25hbCgpIEBJbmplY3QoRkZpbGVVcGxvYWRBZGFwdFVuaWZpbGVDb25maWdUb2tlbikgZXhDb25maWc6IEZGaWxlVXBsb2FkQWRhcHRVbmlmaWxlQ29uZmlnKSB7XHJcbiAgICAgICAgaWYgKGV4Q29uZmlnKSB7XHJcbiAgICAgICAgICAgIE9iamVjdC5hc3NpZ24odGhpcy5jb25maWcsIGV4Q29uZmlnKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIOiOt+WPlmNvbmZpZ+WxnuaAp+eahOWAvFxyXG4gICAgICovXHJcbiAgICBnZXRDb25maWcoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuY29uZmlnO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiDorr7nva5jb25maWfnmoTlsZ7mgKflgLxcclxuICAgICAqIEBwYXJhbSBrZXkgXHJcbiAgICAgKiBAcGFyYW0gdmFsdWUgXHJcbiAgICAgKi9cclxuICAgIHNldENvbmZpZyhrZXksIHZhbHVlKSB7XHJcbiAgICAgICAgdGhpcy5jb25maWdba2V5XSA9IHZhbHVlO1xyXG4gICAgfVxyXG59OyJdfQ==