{"version":3,"sources":["ng://@farris/ui-html-editor/lib/html-editor-defaults.ts","ng://@farris/ui-html-editor/lib/html-editor.interfaces.ts","ng://@farris/ui-html-editor/lib/image-resize-module/DefaultOptions.ts","node_modules/tslib/tslib.es6.js","ng://@farris/ui-html-editor/lib/image-resize-module/modules/BaseModule.ts","ng://@farris/ui-html-editor/lib/image-resize-module/modules/DisplaySize.ts","ng://@farris/ui-html-editor/lib/image-resize-module/modules/Toolbar.ts","ng://@farris/ui-html-editor/lib/image-resize-module/modules/Resize.ts","ng://@farris/ui-html-editor/lib/image-resize-module/ImageResize.ts","ng://@farris/ui-html-editor/lib/image-drop-module/image-drop.ts","ng://@farris/ui-html-editor/lib/tool-tip-module/tooltip-list.ts","ng://@farris/ui-html-editor/lib/tool-tip-module/utils/scrollInfo.ts","ng://@farris/ui-html-editor/lib/tool-tip-module/index.ts","ng://@farris/ui-html-editor/lib/html-editor.component.ts","ng://@farris/ui-html-editor/lib/html-editor.module.ts"],"names":["defaultModules","toolbar","header","list","imageDrop","imageResize","tooltip","QUILL_CONFIG_TOKEN","InjectionToken","DefaultOptions","modules","overlayStyles","position","boxSizing","border","handleStyles","height","width","backgroundColor","opacity","displayStyles","font","padding","textAlign","color","cursor","toolbarStyles","top","right","left","minWidth","toolbarButtonStyles","display","background","verticalAlign","toolbarButtonSvgStyles","fill","stroke","strokeWidth","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__values","o","m","Symbol","iterator","i","call","next","length","value","done","_super","BaseModule","resizer","onCreate","onDestroy","onUpdate","overlay","img","options","requestUpdate","DisplaySize","tslib_1.__extends","_this","apply","arguments","document","createElement","assign","style","appendChild","size","getCurrentSize","innerHTML","join","bottom","float","dispRect","getBoundingClientRect","Math","round","naturalWidth","naturalHeight","Parchment","Quill","imports","parchment","FloatStyle","Attributor","Style","MarginStyle","DisplayStyle","Toolbar","_defineAlignments","_addToolbarButtons","alignments","icon","add","isApplied","remove","buttons","forEach","alignment","idx","button","push","addEventListener","filter","_selectButton","borderLeftWidth","children","Resize","boxes","addBox","positionBoxes","setCursor","handleXOffset","parseFloat","handleYOffset","pos","box","handleMousedown","evt","dragBox","target","dragStartX","clientX","preDragWidth","handleDrag","handleMouseup","removeEventListener","deltaX","body","el","knownModules","ImageResize","quill","initializeModules","removeModules","moduleClasses","map","ModuleClass","module","repositionElements","handleClick","tagName","toUpperCase","hide","show","isEnabled","showOverlay","hideOverlay","setSelection","setUserSelect","checkImage","root","parentNode","removeChild","undefined","parent","imgRect","containerRect","scrollLeft","scrollTop","prop","documentElement","keyCode","find","deleteAt","slice","execCommand","ImageDrop","handleDrop","preventDefault","dataTransfer","files","caretRangeFromPoint","selection","getSelection","range","clientY","setBaseAndExtent","startContainer","startOffset","readFiles","insert","bind","handlePaste","clipboardData","items","dataUrl","ngZone","runOutsideAngular","setTimeout","index","getLength","insertEmbed","callback","file","type","match","reader","FileReader","onload","result","blob","getAsFile","Blob","readAsDataURL","tooltips","align","","center","justify","blockquote","bold","clean","code","code-block","direction","full","formula","1","2","italic","image","indent","+1","-1","link","ordered","bullet","check","script","sub","super","strike","underline","video","undo","redo","divider","formatBrush","emoji","getScrollParent","element","indexOf","getStyleComputedProperty","property","window","getComputedStyle","tooltipStyles","borderRadius","fontSize","visibility","z-index","Tooltip","createTooltip","tip","classList","addHandler","mouseenterHandler","timeout","showTooltip","mouseleaveHandler","clearTimeout","hideTooltip","format","className","replace","tool","textContent","elRect","tipRect","bodyRect","scrollWidth","scrollHeight","destroyTooltip","_c","tslib_1.__values","_d","removeHandler","selectors","_e","_f","scrollElm","getModule","toolbarElement","container","querySelectorAll","Font","import","whitelist","register","getFormat","configFormat","HtmlEditorComponent","onModelChange","_modelValue","onModelTouched","ngAfterViewInit","editorCreate","editorElem","renderer","setStyle","minHeight","maxHeight","setToolbar","isPlatformServer","platformId","elementRef","nativeElement","insertAdjacentHTML","customToolbarPosition","preserveWhitespace","querySelector","toolbarElem","config","customToolbar","Convert2HtmlEditorToolbars","placeholder","styles","keys","key","customOptions","customOption","newCustomOption","bounds","doc","debug","readOnly","readonly","scrollingContainer","formats","quillEditor","strict","theme","content","setContents","setText","JSON","parse","e","sanitize","domSanitizer","SecurityContext","HTML","contents","clipboard","convert","history","clear","setStatusEditor","disabled","onEditorCreated","emit","on","selectionChangeHandler","textChangeHandler","random_id","random","toString","endEdit","buildToolbar","rtn","ngOnDestroy","off","hideImgSelectionRange","imgResizeIns","ngOnChanges","changes","enable","currentValue","disableToolbar","dataset","currentStyling","previousStyling","previousValue","removeStyle","writeValue","valueSetter","disable","setDisabledState","isDisabled","_disabled","setAttribute","removeAttribute","registerOnChange","fn","registerOnTouched","validate","Component","args","selector","template","encapsulation","ViewEncapsulation","None","providers","multi","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","NG_VALIDATORS","ElementRef","DomSanitizer","Inject","DOCUMENT","decorators","PLATFORM_ID","Renderer2","NgZone","HostBinding","Input","Output","zone","rootClass","showBorder","required","fontStyleBar","BlockBar","headerBar","sizeBar","listBar","fontBar","superAndSubscriptBar","indentBar","colorBar","mediaBar","imageBar","videoBar","cleanBar","alignBar","EventEmitter","onContentChanged","onSelectionChanged","onFocus","onBlur","valueGetter","editorElement","html","modelValue","getText","getContents","stringify","oldRange","source","run","editor","delta","oldDelta","text","trackChanges","sources","USER","Éµ0$1","FarrisHtmlEditorModule","forRoot","ngModule","useValue","NgModule","declarations","exports"],"mappings":"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","sourcesContent":["\r\n\r\n\r\nexport const defaultModules = {\r\n    toolbar: [\r\n        // ['bold', 'italic', 'underline', 'strike'], // toggled buttons\r\n        ['bold', 'italic', 'code-block', { header: 1 }, { header: 2 }, { list: 'ordered' }, { list: 'bullet' }, 'image']\r\n        // ['blockquote', 'code-block'],\r\n\r\n        // [{ header: 1 }, { header: 2 }], // custom button values\r\n        // [{ list: 'ordered' }, { list: 'bullet' }],\r\n        // [{ script: 'sub' }, { script: 'super' }], // superscript/subscript\r\n        // [{ indent: '-1' }, { indent: '+1' }], // outdent/indent\r\n        // [{ direction: 'rtl' }], // text direction\r\n\r\n        // [{ size: ['small', false, 'large', 'huge'] }], // custom dropdown\r\n        // [{ header: [1, 2, 3, 4, 5, 6, false] }],\r\n\r\n        // [{ color: [] }, { background: [] }], // dropdown with defaults from theme\r\n        // [\r\n        //     {\r\n        //         font: [\r\n        //             'Microsoft-YaHei',\r\n        //             'SimSun',\r\n        //             'SimHei',\r\n        //             'KaiTi',\r\n        //             'FangSong',\r\n        //             'Arial',\r\n        //             'Times',\r\n        //             'sans-serif'\r\n        //         ]\r\n        //     }\r\n        // ],\r\n        // [{ align: [] }],\r\n\r\n        // ['clean'], // remove formatting button\r\n\r\n        // ['link', 'image', 'video'] // link and image, video,\r\n    ],\r\n    imageDrop: true,\r\n    imageResize: true,\r\n    tooltip: true\r\n};\r\nexport const toolbarOptions = {\r\n    fontBar: [\r\n        {\r\n            font: ['Microsoft-YaHei', 'SimSun', 'SimHei', 'KaiTi', 'FangSong', 'Arial', 'sans-serif']\r\n        }\r\n    ],\r\n    headerBar: [{ header: [1, 2, 3, 4, 5, 6, false] }],\r\n    sizeBar: [{ size: ['small', false, 'large', 'huge'] }],\r\n    fontStyleBar: ['bold', 'italic', 'underline', 'strike', 'link'],\r\n    indentBar: [{ indent: '-1' }, { indent: '+1' }],\r\n    listBar: [{ list: 'ordered' }, { list: 'bullet' }],\r\n    BlockBar: ['code-block', 'blockquote'],\r\n    superAndSubscriptBar: [{ script: 'sub' }, { script: 'super' }],\r\n    colorBar: [{ color: [] }, { background: [] }],\r\n    mediaBar: ['image', 'video'],\r\n    alignBar: [{ align: [] }],\r\n    imageBar: ['image'],\r\n    videoBar: ['video'],\r\n    cleanBar: ['clean']\r\n};\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport type QuillToolbarConfig = Array<\r\n    Array<\r\n        | string\r\n        | {\r\n              indent?: string;\r\n              list?: string;\r\n              direction?: string;\r\n              header?: number | Array<boolean | number>;\r\n              color?: string[];\r\n              background?: string[];\r\n              align?: string[];\r\n              script?: string;\r\n              font?: string[];\r\n              size?: Array<boolean | string>;\r\n          }\r\n    >\r\n>;\r\n\r\nexport interface QuillModules {\r\n    [key: string]: any;\r\n    clipboard?:\r\n        | {\r\n              mathers?: any[];\r\n              matchVisual?: boolean;\r\n          }\r\n        | boolean;\r\n    history?:\r\n        | {\r\n              delay?: number;\r\n              maxStack?: number;\r\n              userOnly?: boolean;\r\n          }\r\n        | boolean;\r\n    keyboard?:\r\n        | {\r\n              bindings?: any;\r\n          }\r\n        | boolean;\r\n    syntax?: boolean;\r\n    toolbar?:\r\n        | QuillToolbarConfig\r\n        | string\r\n        | {\r\n              container?: string | string[] | QuillToolbarConfig;\r\n              handlers?: {\r\n                  [key: string]: any;\r\n              };\r\n          }\r\n        | boolean;\r\n}\r\n\r\nexport type QuillFormat = 'object' | 'json' | 'html' | 'text';\r\n\r\nexport interface QuillConfig {\r\n    bounds?: HTMLElement | string;\r\n    debug?: 'error' | 'warn' | 'log' | false;\r\n    format?: QuillFormat;\r\n    formats?: any;\r\n    modules?: QuillModules;\r\n    placeholder?: string;\r\n    readOnly?: boolean;\r\n    scrollingContainer?: HTMLElement | string | null;\r\n    theme?: string;\r\n    // Custom Config to track all changes or only changes by 'user'\r\n    trackChanges?: 'user' | 'all';\r\n}\r\n\r\nexport const QUILL_CONFIG_TOKEN = new InjectionToken<QuillConfig>('config');\r\n","export default {\r\n    modules: ['DisplaySize', 'Toolbar', 'Resize'],\r\n    overlayStyles: {\r\n        position: 'absolute',\r\n        boxSizing: 'border-box',\r\n        border: '1px dashed #444'\r\n    },\r\n    handleStyles: {\r\n        position: 'absolute',\r\n        height: '12px',\r\n        width: '12px',\r\n        backgroundColor: 'white',\r\n        border: '1px solid #777',\r\n        boxSizing: 'border-box',\r\n        opacity: '0.80'\r\n    },\r\n    displayStyles: {\r\n        position: 'absolute',\r\n        font: '12px/1.0 Arial, Helvetica, sans-serif',\r\n        padding: '4px 8px',\r\n        textAlign: 'center',\r\n        backgroundColor: 'white',\r\n        color: '#333',\r\n        border: '1px solid #777',\r\n        boxSizing: 'border-box',\r\n        opacity: '0.80',\r\n        cursor: 'default'\r\n    },\r\n    toolbarStyles: {\r\n        position: 'absolute',\r\n        top: '-12px',\r\n        right: '0',\r\n        left: '0',\r\n        height: '0',\r\n        minWidth: '100px',\r\n        font: '12px/1.0 Arial, Helvetica, sans-serif',\r\n        textAlign: 'center',\r\n        color: '#333',\r\n        boxSizing: 'border-box',\r\n        cursor: 'default'\r\n    },\r\n    toolbarButtonStyles: {\r\n        display: 'inline-block',\r\n        width: '24px',\r\n        height: '24px',\r\n        background: 'white',\r\n        border: '1px solid #999',\r\n        verticalAlign: 'middle'\r\n    },\r\n    toolbarButtonSvgStyles: {\r\n        fill: '#444',\r\n        stroke: '#444',\r\n        strokeWidth: '2'\r\n    }\r\n};\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export class BaseModule {\r\n    overlay;\r\n    img;\r\n    options;\r\n    requestUpdate;\r\n    constructor(resizer) {\r\n        this.overlay = resizer.overlay;\r\n        this.img = resizer.img;\r\n        this.options = resizer.options;\r\n        this.requestUpdate = resizer.onUpdate;\r\n    }\r\n    /*\r\n        requestUpdate (passed in by the library during construction, above) can be used to let the library know that\r\n        you've changed something about the image that would require re-calculating the overlay (and all of its child\r\n        elements)\r\n\r\n        For example, if you add a margin to the element, you'll want to call this or else all the controls will be\r\n        misaligned on-screen.\r\n     */\r\n\r\n    /*\r\n        onCreate will be called when the element is clicked on\r\n\r\n        If the module has any user controls, it should create any containers that it'll need here.\r\n        The overlay has absolute positioning, and will be automatically repositioned and resized as needed, so you can\r\n        use your own absolute positioning and the 'top', 'right', etc. styles to be positioned relative to the element\r\n        on-screen.\r\n     */\r\n    onCreate = () => {};\r\n\r\n    /*\r\n        onDestroy will be called when the element is de-selected, or when this module otherwise needs to tidy up.\r\n\r\n        If you created any DOM elements in onCreate, please remove them from the DOM and destroy them here.\r\n     */\r\n    onDestroy = () => {};\r\n\r\n    /*\r\n        onUpdate will be called any time that the element is changed (e.g. resized, aligned, etc.)\r\n\r\n        This frequently happens during resize dragging, so keep computations light while here to ensure a smooth\r\n        user experience.\r\n     */\r\n    onUpdate = () => {};\r\n}\r\n","import { BaseModule } from './BaseModule';\r\n\r\nexport class DisplaySize extends BaseModule {\r\n    display;\r\n    onCreate = () => {\r\n        // Create the container to hold the size display\r\n        this.display = document.createElement('div');\r\n\r\n        // Apply styles\r\n        Object.assign(this.display.style, this.options.displayStyles);\r\n\r\n        // Attach it\r\n        this.overlay.appendChild(this.display);\r\n    };\r\n\r\n    onDestroy = () => {};\r\n\r\n    onUpdate = () => {\r\n        if (!this.display || !this.img) {\r\n            return;\r\n        }\r\n\r\n        const size = this.getCurrentSize();\r\n        this.display.innerHTML = size.join(' &times; ');\r\n        if (size[0] > 120 && size[1] > 30) {\r\n            // position on top of image\r\n            Object.assign(this.display.style, {\r\n                right: '4px',\r\n                bottom: '4px',\r\n                left: 'auto'\r\n            });\r\n        } else if (this.img.style.float == 'right') {\r\n            // position off bottom left\r\n            const dispRect = this.display.getBoundingClientRect();\r\n            Object.assign(this.display.style, {\r\n                right: 'auto',\r\n                bottom: `-${dispRect.height + 4}px`,\r\n                left: `-${dispRect.width + 4}px`\r\n            });\r\n        } else {\r\n            // position off bottom right\r\n            const dispRect = this.display.getBoundingClientRect();\r\n            Object.assign(this.display.style, {\r\n                right: `-${dispRect.width + 4}px`,\r\n                bottom: `-${dispRect.height + 4}px`,\r\n                left: 'auto'\r\n            });\r\n        }\r\n    };\r\n\r\n    getCurrentSize = () => [\r\n        this.img.width,\r\n        Math.round(\r\n            (this.img.width / this.img.naturalWidth) * this.img.naturalHeight\r\n        )\r\n    ];\r\n}\r\n","import { BaseModule } from './BaseModule';\r\nimport Quill from 'quill';\r\nconst Parchment = Quill.imports.parchment;\r\nconst FloatStyle = new Parchment.Attributor.Style('float', 'float');\r\nconst MarginStyle = new Parchment.Attributor.Style('margin', 'margin');\r\nconst DisplayStyle = new Parchment.Attributor.Style('display', 'display');\r\n\r\nexport class Toolbar extends BaseModule {\r\n    toolbar;\r\n    alignments;\r\n    onCreate = () => {\r\n        // Setup Toolbar\r\n        this.toolbar = document.createElement('div');\r\n        Object.assign(this.toolbar.style, this.options.toolbarStyles);\r\n        this.overlay.appendChild(this.toolbar);\r\n\r\n        // Setup Buttons\r\n        this._defineAlignments();\r\n        this._addToolbarButtons();\r\n    };\r\n\r\n    // The toolbar and its children will be destroyed when the overlay is removed\r\n    onDestroy = () => {};\r\n\r\n    // Nothing to update on drag because we are are positioned relative to the overlay\r\n    onUpdate = () => {};\r\n\r\n    _defineAlignments = () => {\r\n        this.alignments = [\r\n            {\r\n                icon: `<svg viewbox=\"0 0 18 18\">\r\n                <line class=\"ql-stroke\" x1=\"3\" x2=\"15\" y1=\"9\" y2=\"9\"></line>\r\n                <line class=\"ql-stroke\" x1=\"3\" x2=\"13\" y1=\"14\" y2=\"14\"></line>\r\n                <line class=\"ql-stroke\" x1=\"3\" x2=\"9\" y1=\"4\" y2=\"4\"></line>\r\n              </svg>`,\r\n                apply: () => {\r\n                    DisplayStyle.add(this.img, 'inline');\r\n                    FloatStyle.add(this.img, 'left');\r\n                    MarginStyle.add(this.img, '0 1em 1em 0');\r\n                },\r\n                isApplied: () => FloatStyle.value(this.img) == 'left'\r\n            },\r\n            {\r\n                icon: `<svg viewbox=\"0 0 18 18\">\r\n                <line class=\"ql-stroke\" x1=\"15\" x2=\"3\" y1=\"9\" y2=\"9\"></line>\r\n                <line class=\"ql-stroke\" x1=\"14\" x2=\"4\" y1=\"14\" y2=\"14\"></line>\r\n                <line class=\"ql-stroke\" x1=\"12\" x2=\"6\" y1=\"4\" y2=\"4\"></line>\r\n              </svg>`,\r\n                apply: () => {\r\n                    DisplayStyle.add(this.img, 'block');\r\n                    FloatStyle.remove(this.img);\r\n                    MarginStyle.add(this.img, 'auto');\r\n                },\r\n                isApplied: () => MarginStyle.value(this.img) == 'auto'\r\n            },\r\n            {\r\n                icon: `<svg viewbox=\"0 0 18 18\">\r\n                <line class=\"ql-stroke\" x1=\"15\" x2=\"3\" y1=\"9\" y2=\"9\"></line>\r\n                <line class=\"ql-stroke\" x1=\"15\" x2=\"5\" y1=\"14\" y2=\"14\"></line>\r\n                <line class=\"ql-stroke\" x1=\"15\" x2=\"9\" y1=\"4\" y2=\"4\"></line>\r\n              </svg>`,\r\n                apply: () => {\r\n                    DisplayStyle.add(this.img, 'inline');\r\n                    FloatStyle.add(this.img, 'right');\r\n                    MarginStyle.add(this.img, '0 0 1em 1em');\r\n                },\r\n                isApplied: () => FloatStyle.value(this.img) == 'right'\r\n            }\r\n        ];\r\n    };\r\n\r\n    _addToolbarButtons = () => {\r\n        const buttons = [];\r\n        this.alignments.forEach((alignment, idx) => {\r\n            const button = document.createElement('span');\r\n            buttons.push(button);\r\n            button.innerHTML = alignment.icon;\r\n            button.addEventListener('click', () => {\r\n                // deselect all buttons\r\n                buttons.forEach(button => (button.style.filter = ''));\r\n                if (alignment.isApplied()) {\r\n                    // If applied, unapply\r\n                    FloatStyle.remove(this.img);\r\n                    MarginStyle.remove(this.img);\r\n                    DisplayStyle.remove(this.img);\r\n                } else {\r\n                    // otherwise, select button and apply\r\n                    this._selectButton(button);\r\n                    alignment.apply();\r\n                }\r\n                // image may change position; redraw drag handles\r\n                this.requestUpdate();\r\n            });\r\n            Object.assign(button.style, this.options.toolbarButtonStyles);\r\n            if (idx > 0) {\r\n                button.style.borderLeftWidth = '0';\r\n            }\r\n            Object.assign(\r\n                // tslint:disable-next-line:object-literal-key-quotes\r\n                button.children[0]['style'],\r\n                this.options.toolbarButtonSvgStyles\r\n            );\r\n            if (alignment.isApplied()) {\r\n                // select button if previously applied\r\n                this._selectButton(button);\r\n            }\r\n            this.toolbar.appendChild(button);\r\n        });\r\n    };\r\n\r\n    _selectButton = button => {\r\n        button.style.filter = 'invert(20%)';\r\n    };\r\n}\r\n","import { BaseModule } from './BaseModule';\r\n\r\nexport class Resize extends BaseModule {\r\n    boxes;\r\n    dragBox;\r\n    dragStartX;\r\n    preDragWidth;\r\n    onCreate = () => {\r\n        // track resize handles\r\n        this.boxes = [];\r\n\r\n        // add 4 resize handles\r\n        this.addBox('nwse-resize'); // top left\r\n        this.addBox('nesw-resize'); // top right\r\n        this.addBox('nwse-resize'); // bottom right\r\n        this.addBox('nesw-resize'); // bottom left\r\n\r\n        this.positionBoxes();\r\n    };\r\n\r\n    onDestroy = () => {\r\n        // reset drag handle cursors\r\n        this.setCursor('');\r\n    };\r\n\r\n    positionBoxes = () => {\r\n        const handleXOffset = `${-parseFloat(this.options.handleStyles.width) /\r\n            2}px`;\r\n        const handleYOffset = `${-parseFloat(this.options.handleStyles.height) /\r\n                2}px`;\r\n\r\n            // set the top and left for each drag handle\r\n        [\r\n            { left: handleXOffset, top: handleYOffset }, // top left\r\n            { right: handleXOffset, top: handleYOffset }, // top right\r\n            { right: handleXOffset, bottom: handleYOffset }, // bottom right\r\n            { left: handleXOffset, bottom: handleYOffset } // bottom left\r\n        ].forEach((pos, idx) => {\r\n            Object.assign(this.boxes[idx].style, pos);\r\n        });\r\n    };\r\n\r\n    addBox = cursor => {\r\n        // create div element for resize handle\r\n        const box = document.createElement('div');\r\n\r\n        // Star with the specified styles\r\n        Object.assign(box.style, this.options.handleStyles);\r\n        box.style.cursor = cursor;\r\n\r\n        // Set the width/height to use 'px'\r\n        box.style.width = `${this.options.handleStyles.width}px`;\r\n        box.style.height = `${this.options.handleStyles.height}px`;\r\n\r\n        // listen for mousedown on each box\r\n        box.addEventListener('mousedown', this.handleMousedown, false);\r\n        // add drag handle to document\r\n        this.overlay.appendChild(box);\r\n        // keep track of drag handle\r\n        this.boxes.push(box);\r\n    };\r\n\r\n    handleMousedown = evt => {\r\n        // note which box\r\n        this.dragBox = evt.target;\r\n        // note starting mousedown position\r\n        this.dragStartX = evt.clientX;\r\n        // store the width before the drag\r\n        this.preDragWidth = this.img.width || this.img.naturalWidth;\r\n        // set the proper cursor everywhere\r\n        this.setCursor(this.dragBox.style.cursor);\r\n        // listen for movement and mouseup\r\n        document.addEventListener('mousemove', this.handleDrag, false);\r\n        document.addEventListener('mouseup', this.handleMouseup, false);\r\n    };\r\n\r\n    handleMouseup = () => {\r\n        // reset cursor everywhere\r\n        this.setCursor('');\r\n        // stop listening for movement and mouseup\r\n        document.removeEventListener('mousemove', this.handleDrag);\r\n        document.removeEventListener('mouseup', this.handleMouseup);\r\n    };\r\n\r\n    handleDrag = evt => {\r\n        if (!this.img) {\r\n            // image not set yet\r\n            return;\r\n        }\r\n        // update image size\r\n        const deltaX = evt.clientX - this.dragStartX;\r\n        if (this.dragBox === this.boxes[0] || this.dragBox === this.boxes[3]) {\r\n            // left-side resize handler; dragging right shrinks image\r\n            this.img.width = Math.round(this.preDragWidth - deltaX);\r\n        } else {\r\n            // right-side resize handler; dragging right enlarges image\r\n            this.img.width = Math.round(this.preDragWidth + deltaX);\r\n        }\r\n        this.requestUpdate();\r\n    };\r\n\r\n    setCursor = value => {\r\n        [document.body, this.img].forEach(el => {\r\n            el.style.cursor = value; // eslint-disable-line no-param-reassign\r\n        });\r\n    };\r\n}\r\n","\r\nimport DefaultOptions from './DefaultOptions';\r\nimport { DisplaySize } from './modules/DisplaySize';\r\nimport { Toolbar } from './modules/Toolbar';\r\nimport { Resize } from './modules/Resize';\r\nimport Quill from 'quill';\r\nconst knownModules = { DisplaySize, Toolbar, Resize };\r\n\r\n/**\r\n * Custom module for quilljs to allow user to resize <img> elements\r\n * (Works on Chrome, Edge, Safari and replaces Firefox's native resize behavior)\r\n * @see https://quilljs.com/blog/building-a-custom-module/\r\n */\r\nexport class ImageResize {\r\n    quill: any;\r\n    options: any;\r\n    moduleClasses: any;\r\n    modules: any;\r\n    img: any;\r\n    overlay: any;\r\n    constructor(quill, options = {}) {\r\n        // save the quill reference and options\r\n        this.quill = quill;\r\n        // Apply the options to our defaults, and stash them for later\r\n        // defaultsDeep doesn't do arrays as you'd expect, so we'll need to apply the classes array from options separately\r\n        let moduleClasses = false;\r\n        // tslint:disable-next-line:object-literal-key-quotes\r\n        if (options['modules']) {\r\n            moduleClasses = options['modules'].slice();\r\n        }\r\n\r\n        // Apply options to default options\r\n        //this.options = defaultsDeep({}, options, DefaultOptions);\r\n        this.options =Object.assign({}, options, DefaultOptions);\r\n\r\n        // (see above about moduleClasses)\r\n        if (moduleClasses !== false) {\r\n            this.options.modules = moduleClasses;\r\n        }\r\n\r\n        // disable native image resizing on firefox\r\n        document.execCommand('enableObjectResizing', false, 'false');\r\n\r\n        // respond to clicks inside the editor\r\n        this.quill.root.addEventListener('click', this.handleClick, false);\r\n\r\n        this.quill.root.parentNode.style.position =\r\n            this.quill.root.parentNode.style.position || 'relative';\r\n\r\n        // setup modules\r\n        this.moduleClasses = this.options.modules;\r\n        //console.log('this.options.modules', this.options.modules)\r\n\r\n        this.modules = [];\r\n    }\r\n\r\n    initializeModules = () => {\r\n        this.removeModules();\r\n\r\n        this.modules = this.moduleClasses.map(\r\n            ModuleClass => new (knownModules[ModuleClass] || ModuleClass)(this)\r\n        );\r\n\r\n        this.modules.forEach(module => {\r\n            module.onCreate();\r\n        });\r\n\r\n        this.onUpdate();\r\n    };\r\n\r\n    onUpdate = () => {\r\n        this.repositionElements();\r\n        this.modules.forEach(module => {\r\n            module.onUpdate();\r\n        });\r\n    };\r\n\r\n    removeModules = () => {\r\n        this.modules.forEach(module => {\r\n            module.onDestroy();\r\n        });\r\n\r\n        this.modules = [];\r\n    };\r\n\r\n    handleClick = evt => {\r\n        if (\r\n            evt.target &&\r\n            evt.target.tagName &&\r\n            evt.target.tagName.toUpperCase() === 'IMG'\r\n        ) {\r\n            if (this.img === evt.target) {\r\n                // we are already focused on this image\r\n                return;\r\n            }\r\n            if (this.img) {\r\n                // we were just focused on another image\r\n                this.hide();\r\n            }\r\n            // clicked on an image inside the editor\r\n            this.show(evt.target);\r\n        } else if (this.img) {\r\n            // clicked on a non image\r\n            this.hide();\r\n        }\r\n    };\r\n    show = img => {\r\n        if (!this.quill.isEnabled()) {\r\n            return;\r\n        }\r\n\r\n        // keep track of this img element\r\n        this.img = img;\r\n\r\n        this.showOverlay();\r\n\r\n        this.initializeModules();\r\n    };\r\n\r\n    showOverlay = () => {\r\n        if (this.overlay) {\r\n            this.hideOverlay();\r\n        }\r\n\r\n        this.quill.setSelection(null);\r\n\r\n        // prevent spurious text selection\r\n        this.setUserSelect('none');\r\n\r\n        // listen for the image being deleted or moved\r\n        document.addEventListener('keyup', this.checkImage, true);\r\n        this.quill.root.addEventListener('input', this.checkImage, true);\r\n\r\n        // Create and add the overlay\r\n        this.overlay = document.createElement('div');\r\n        Object.assign(this.overlay.style, this.options.overlayStyles);\r\n\r\n        this.quill.root.parentNode.appendChild(this.overlay);\r\n\r\n        this.repositionElements();\r\n    };\r\n\r\n    hideOverlay = () => {\r\n        if (!this.overlay) {\r\n            return;\r\n        }\r\n\r\n        // Remove the overlay\r\n        this.quill.root.parentNode.removeChild(this.overlay);\r\n        this.overlay = undefined;\r\n\r\n        // stop listening for image deletion or movement\r\n        document.removeEventListener('keyup', this.checkImage);\r\n        this.quill.root.removeEventListener('input', this.checkImage);\r\n\r\n        // reset user-select\r\n        this.setUserSelect('');\r\n    };\r\n\r\n    repositionElements = () => {\r\n        if (!this.overlay || !this.img) {\r\n            return;\r\n        }\r\n\r\n        // position the overlay over the image\r\n        const parent = this.quill.root.parentNode;\r\n        const imgRect = this.img.getBoundingClientRect();\r\n        const containerRect = parent.getBoundingClientRect();\r\n\r\n        Object.assign(this.overlay.style, {\r\n            left: `${imgRect.left -\r\n                containerRect.left +\r\n                parent.scrollLeft -\r\n                2}px`,\r\n            top: `${imgRect.top - containerRect.top + parent.scrollTop - 2}px`,\r\n            width: `${imgRect.width + 2}px`,\r\n            height: `${imgRect.height + 2}px`\r\n        });\r\n    };\r\n\r\n    hide = () => {\r\n        this.hideOverlay();\r\n        this.removeModules();\r\n        this.img = undefined;\r\n    };\r\n\r\n    setUserSelect = value => {\r\n        [\r\n            'userSelect',\r\n            'mozUserSelect',\r\n            'webkitUserSelect',\r\n            'msUserSelect'\r\n        ].forEach(prop => {\r\n            // set on contenteditable element and <html>\r\n            this.quill.root.style[prop] = value;\r\n            document.documentElement.style[prop] = value;\r\n        });\r\n    };\r\n\r\n    checkImage = evt => {\r\n        if (this.img) {\r\n            if (evt.keyCode == 46 || evt.keyCode == 8) {\r\n                Quill.find(this.img).deleteAt(0);\r\n            }\r\n            this.hide();\r\n        }\r\n    };\r\n}\r\n//console.log(ImageResize)\r\n// if (Quill) {\r\n//     Quill.register('modules/imageResize', ImageResize)\r\n// }\r\n","import { NgZone } from \"@angular/core\";\r\nexport class ImageDrop {\r\n    quill: any;\r\n    constructor(quill, options = {}, private ngZone: NgZone) {\r\n        // save the quill reference\r\n        this.quill = quill;\r\n        // bind handlers to this instance\r\n        this.handleDrop = this.handleDrop.bind(this);\r\n        this.handlePaste = this.handlePaste.bind(this);\r\n        // listen for drop and paste events\r\n        this.quill.root.addEventListener('drop', this.handleDrop, false);\r\n        this.quill.root.addEventListener('paste', this.handlePaste, false);\r\n    }\r\n\r\n    handleDrop(evt) {\r\n        evt.preventDefault();\r\n        if (\r\n            evt.dataTransfer &&\r\n            evt.dataTransfer.files &&\r\n            evt.dataTransfer.files.length\r\n        ) {\r\n            if (document.caretRangeFromPoint) {\r\n                const selection = document.getSelection();\r\n                const range = document.caretRangeFromPoint(\r\n                    evt.clientX,\r\n                    evt.clientY\r\n                );\r\n                if (selection && range) {\r\n                    selection.setBaseAndExtent(\r\n                        range.startContainer,\r\n                        range.startOffset,\r\n                        range.startContainer,\r\n                        range.startOffset\r\n                    );\r\n                }\r\n            }\r\n            this.readFiles(evt.dataTransfer.files, this.insert.bind(this));\r\n        }\r\n    }\r\n\r\n    handlePaste(evt) {\r\n        if (\r\n            evt.clipboardData &&\r\n            evt.clipboardData.items &&\r\n            evt.clipboardData.items.length\r\n        ) {\r\n            this.readFiles(evt.clipboardData.items, dataUrl => {\r\n                const selection = this.quill.getSelection();\r\n                if (selection) {\r\n                    // we must be in a browser that supports pasting (like Firefox)\r\n                    // so it has already been placed into the editor\r\n                } else {\r\n                    // otherwise we wait until after the paste when this.quill.getSelection()\r\n                    // will return a valid index\r\n                    this.ngZone.runOutsideAngular(() => {\r\n                        setTimeout(() => this.insert(dataUrl), 0);\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    insert(dataUrl) {\r\n        const index =\r\n            (this.quill.getSelection() || {}).index || this.quill.getLength();\r\n        this.quill.insertEmbed(index, 'image', dataUrl, 'user');\r\n    }\r\n\r\n    readFiles(files, callback) {\r\n        // check each file for an image\r\n        [].forEach.call(files, file => {\r\n            if (\r\n                !file.type.match(\r\n                    /^image\\/(gif|jpe?g|a?png|svg|webp|bmp|vnd\\.microsoft\\.icon)/i\r\n                )\r\n            ) {\r\n                // file is not an image\r\n                // Note that some file formats such as psd start with image/* but are not readable\r\n                return;\r\n            }\r\n            // set up file reader\r\n            const reader = new FileReader();\r\n            reader.onload = (evt: any) => {\r\n                callback(evt.target.result);\r\n            };\r\n            // read the clipboard item or file\r\n            const blob = file.getAsFile ? file.getAsFile() : file;\r\n            if (blob instanceof Blob) {\r\n                reader.readAsDataURL(blob);\r\n            }\r\n        });\r\n    }\r\n}\r\n","export const tooltips = {\r\n    align: {\r\n        '': 'Ã¥Â¯Â¹Ã©Â½Â',\r\n        center: 'Ã¥Â±ÂÃ¤Â¸Â­Ã¥Â¯Â¹Ã©Â½Â',\r\n        right: 'Ã¥ÂÂ³Ã¥Â¯Â¹Ã©Â½Â',\r\n        justify: 'Ã¤Â¸Â¤Ã§Â«Â¯Ã¥Â¯Â¹Ã©Â½Â'\r\n    },\r\n    background: 'Ã¨ÂÂÃ¦ÂÂ¯Ã¨ÂÂ²',\r\n    blockquote: 'Ã¥Â¼ÂÃ§ÂÂ¨',\r\n    bold: 'Ã¥ÂÂ Ã§Â²Â',\r\n    clean: 'Ã¦Â¸ÂÃ©ÂÂ¤Ã¦Â Â¼Ã¥Â¼Â',\r\n    code: 'Ã¤Â»Â£Ã§Â Â',\r\n    'code-block': 'Ã¤Â»Â£Ã§Â ÂÃ¦Â®Âµ',\r\n    color: 'Ã©Â¢ÂÃ¨ÂÂ²',\r\n    direction: 'Ã¦ÂÂ¹Ã¥ÂÂ',\r\n    float: {\r\n        center: 'Ã¥Â±ÂÃ¤Â¸Â­',\r\n        full: 'Ã¥ÂÂ¨Ã¦ÂµÂ®Ã¥ÂÂ¨',\r\n        left: 'Ã¥Â·Â¦Ã¦ÂµÂ®Ã¥ÂÂ¨',\r\n        right: 'Ã¥ÂÂ³Ã¦ÂµÂ®Ã¥ÂÂ¨'\r\n    },\r\n    formula: 'Ã¥ÂÂ¬Ã¥Â¼Â',\r\n    header: {\r\n        '': 'Ã¦Â ÂÃ©Â¢Â',\r\n        '1': 'Ã¦Â ÂÃ©Â¢Â1',\r\n        '2': 'Ã¦Â ÂÃ©Â¢Â2'\r\n    },\r\n    italic: 'Ã¦ÂÂÃ¤Â½Â',\r\n    image: 'Ã¥ÂÂ¾Ã§ÂÂ',\r\n    indent: {\r\n        '+1': 'Ã§Â¼Â©Ã¨Â¿Â',\r\n        '-1': 'Ã¥ÂÂÃ¦Â¶ÂÃ§Â¼Â©Ã¨Â¿Â'\r\n    },\r\n    link: 'Ã©ÂÂ¾Ã¦ÂÂ¥',\r\n    list: {\r\n        ordered: 'Ã¦ÂÂÃ¥ÂºÂÃ¥ÂÂÃ¨Â¡Â¨',\r\n        bullet: 'Ã¦ÂÂ Ã¥ÂºÂÃ¥ÂÂÃ¨Â¡Â¨',\r\n        check: 'Ã©ÂÂÃ¦ÂÂ©Ã¥ÂÂÃ¨Â¡Â¨'\r\n    },\r\n    script: {\r\n        sub: 'Ã¤Â¸ÂÃ¦Â Â',\r\n        super: 'Ã¤Â¸ÂÃ¦Â Â'\r\n    },\r\n    strike: 'Ã¥ÂÂ Ã©ÂÂ¤Ã§ÂºÂ¿',\r\n    underline: 'Ã¤Â¸ÂÃ¥ÂÂÃ§ÂºÂ¿',\r\n    video: 'Ã¨Â§ÂÃ©Â¢Â',\r\n    undo: 'Ã¦ÂÂ¤Ã©ÂÂ',\r\n    redo: 'Ã©ÂÂÃ¥ÂÂ',\r\n    size: 'Ã¥Â­ÂÃ¥ÂÂ·',\r\n    font: 'Ã¥Â­ÂÃ¤Â½Â',\r\n    divider: 'Ã¥ÂÂÃ¥ÂÂ²Ã§ÂºÂ¿',\r\n    formatBrush: 'Ã¦Â Â¼Ã¥Â¼ÂÃ¥ÂÂ·',\r\n    emoji: 'Ã¨Â¡Â¨Ã¦ÂÂ'\r\n};\r\n","export const getScrollParent = function(element) {\r\n    var parent = element.parentNode;\r\n    if (!parent) {\r\n        return element;\r\n    }\r\n    if (parent === document) {\r\n        if (document.body.scrollTop !== undefined) {\r\n            return document.body;\r\n        } else {\r\n            return document.documentElement;\r\n        }\r\n    }\r\n    if (\r\n        ['scroll', 'auto'].indexOf(\r\n            getStyleComputedProperty(parent, 'overflow')\r\n        ) !== -1 ||\r\n        ['scroll', 'auto'].indexOf(\r\n            getStyleComputedProperty(parent, 'overflow-x')\r\n        ) !== -1 ||\r\n        ['scroll', 'auto'].indexOf(\r\n            getStyleComputedProperty(parent, 'overflow-y')\r\n        ) !== -1\r\n    ) {\r\n        return parent;\r\n    }\r\n    return getScrollParent(element.parentNode);\r\n};\r\nexport const getStyleComputedProperty = function(element, property) {\r\n    var css = window.getComputedStyle(element, null);\r\n    return css[property];\r\n};\r\n","import { NgZone } from '@angular/core';\r\nimport { tooltips } from './tooltip-list';\r\nimport { getScrollParent } from './utils/scrollInfo';\r\nconst tooltipStyles = {\r\n    minWidth: '70px',\r\n    position: 'absolute',\r\n    padding: '4px 8px',\r\n    textAlign: 'center',\r\n    backgroundColor: 'rgba(0,0,0,0.7)',\r\n    color: '#fff',\r\n    cursor: 'default',\r\n    borderRadius: '4px',\r\n    fontSize: '12px',\r\n    top: '-9999px',\r\n    visibility: 'hidden',\r\n    'z-index': '9999'\r\n};\r\nexport class Tooltip {\r\n    quill: any;\r\n    toolbar: any;\r\n    buttons: any;\r\n    tip: any;\r\n    selectors: any;\r\n    mouseenterHandler: any;\r\n    mouseleaveHandler: any;\r\n    timeout: any;\r\n    scrollElm: any;\r\n    constructor(quill, private ngZone: NgZone) {\r\n        this.quill = quill;\r\n        this.toolbar = quill.getModule('toolbar');\r\n        this.buttons = null;\r\n        this.selectors = null;\r\n        this.tip = null;\r\n        this.timeout = null;\r\n        this.mouseenterHandler = null;\r\n        this.mouseleaveHandler = null;\r\n        const toolbarElement = this.toolbar.container;\r\n        if (toolbarElement) {\r\n            // Ã¦Â·Â»Ã¥ÂÂ Ã¥Â¤ÂÃ§ÂÂÃ¤ÂºÂÃ¤Â»Â¶\r\n            this.buttons = toolbarElement.querySelectorAll('button');\r\n            this.selectors = toolbarElement.querySelectorAll('.ql-picker');\r\n            for (let el of this.buttons) {\r\n                this.addHandler(el);\r\n            }\r\n            for (let el of this.selectors) {\r\n                this.addHandler(el);\r\n            }\r\n            // Ã¥ÂÂÃ¥Â»Âºtooltip\r\n            this.createTooltip();\r\n            // Ã¦Â»ÂÃ¥ÂÂ¨Ã¥ÂÂÃ§Â´Â Ã¥Â¢ÂÃ¥ÂÂ handler\r\n            this.scrollElm = getScrollParent(toolbarElement);\r\n            this.scrollElm.addEventListener('scroll', this.mouseleaveHandler);\r\n        }\r\n    }\r\n\r\n    createTooltip() {\r\n        this.tip = document.createElement('div');\r\n        this.tip.classList.add('quill-tooltip');\r\n        Object.assign(this.tip.style, tooltipStyles);\r\n        document.body.appendChild(this.tip);\r\n    }\r\n\r\n    addHandler(el) {\r\n        this.mouseenterHandler = () => {\r\n            // this.ngZone.runOutsideAngular(() => {\r\n            //     this.timeout = setTimeout(() => {\r\n            //         this.showTooltip(el);\r\n            //     }, 100);\r\n            // });\r\n            this.timeout = setTimeout(() => {\r\n                this.showTooltip(el);\r\n            }, 100);\r\n        };\r\n        this.mouseleaveHandler = () => {\r\n            if (this.timeout) {\r\n                // this.ngZone.runOutsideAngular(() => {\r\n                //     clearTimeout(this.timeout);\r\n                // });\r\n                clearTimeout(this.timeout);\r\n            }\r\n            this.hideTooltip();\r\n        };\r\n        // if (this.ngZone && this.ngZone.runOutsideAngular) {\r\n        //     this.ngZone.runOutsideAngular(() => {\r\n        //         el.addEventListener('mouseenter', this.mouseenterHandler);\r\n        //         el.addEventListener('mouseleave', this.mouseleaveHandler);\r\n        //     });\r\n        // }\r\n        el.addEventListener('mouseenter', this.mouseenterHandler);\r\n        el.addEventListener('mouseleave', this.mouseleaveHandler);\r\n    }\r\n\r\n    showTooltip(el) {\r\n        // let format = el.className.replace('ql-', '')\r\n        const format = [].find\r\n            .call(el.classList, className => {\r\n                return className.indexOf('ql-') === 0;\r\n            })\r\n            .replace('ql-', '');\r\n        if (tooltips[format]) {\r\n            const tool = tooltips[format];\r\n            if (typeof tool === 'string') {\r\n                this.tip.textContent = tool;\r\n            } else {\r\n                const value = el.value || '';\r\n                if (value != null && tool[value]) {\r\n                    this.tip.textContent = tool[value];\r\n                }\r\n            }\r\n            const elRect = el.getBoundingClientRect();\r\n            const tipRect = this.tip.getBoundingClientRect();\r\n            const body = document.documentElement || document.body;\r\n            const bodyRect = {\r\n                width: body.scrollWidth,\r\n                height: body.scrollHeight,\r\n                scrollTop: body.scrollTop,\r\n                scrollLeft: body.scrollLeft\r\n            };\r\n            const offset = 3;\r\n            Object.assign(this.tip.style, {\r\n                top: elRect.top - elRect.height - offset + bodyRect.scrollTop + 'px',\r\n                left: elRect.left - (tipRect.width - elRect.width) / 2 + bodyRect.scrollLeft + 'px',\r\n                visibility: 'visible'\r\n            });\r\n        }\r\n    }\r\n\r\n    hideTooltip() {\r\n        Object.assign(this.tip.style, {\r\n            top: '-9999px',\r\n            visibility: 'hidden'\r\n        });\r\n    }\r\n\r\n    onDestroy() {\r\n        // console.warn('ondestroy');\r\n        this.destroyTooltip();\r\n        if (this.buttons) {\r\n            for (let el of this.buttons) {\r\n                this.removeHandler(el);\r\n            }\r\n        }\r\n        if (this.selectors) {\r\n            for (let el of this.selectors) {\r\n                this.removeHandler(el);\r\n            }\r\n        }\r\n        if (this.scrollElm) {\r\n            this.scrollElm.removeEventListener('scroll', this.mouseleaveHandler);\r\n        }\r\n    }\r\n\r\n    destroyTooltip() {\r\n        if (this.tip.parentNode) {\r\n            this.tip.parentNode.removeChild(this.tip);\r\n        }\r\n    }\r\n\r\n    removeHandler(el) {\r\n        el.removeEventListener('mouseenter', this.mouseenterHandler);\r\n        el.removeEventListener('mouseleave', this.mouseleaveHandler);\r\n    }\r\n}\r\n","import {\r\n    AfterViewInit, Component, ElementRef, EventEmitter, forwardRef, Inject, Input, NgZone, OnChanges, OnDestroy,\r\n    Output, PLATFORM_ID, Renderer2, SecurityContext, SimpleChanges, ViewEncapsulation, HostBinding\r\n} from '@angular/core';\r\nimport { isPlatformServer, DOCUMENT} from '@angular/common';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\r\n\r\nimport Quill from 'quill';\r\n\r\nimport { Convert2HtmlEditorToolbars, RichTextEditorToolbars } from '@farris/ui-common';\r\n\r\nimport { defaultModules, toolbarOptions } from './html-editor-defaults';\r\nimport { QUILL_CONFIG_TOKEN, QuillConfig, QuillFormat, QuillModules } from './html-editor.interfaces';\r\nimport { ImageResize } from './image-resize-module/ImageResize';\r\nimport { ImageDrop } from './image-drop-module/image-drop'; // Ã¦ÂÂÃ¥ÂÂ¨Ã¥ÂÂ Ã¨Â½Â½Ã¥ÂÂ¾Ã§ÂÂÃ§Â»ÂÃ¤Â»Â¶Ã£ÂÂ\r\nimport { Tooltip } from './tool-tip-module/index';\r\n// Ã¤Â¿Â®Ã¦ÂÂ¹Ã©Â»ÂÃ¨Â®Â¤Ã¥Â­ÂÃ¤Â½Â\r\nconst Font = Quill.import('attributors/style/font');\r\nFont.whitelist = ['Microsoft-YaHei', 'SimSun', 'SimHei', 'KaiTi', 'FangSong', 'Arial', 'Times', 'sans-serif'];\r\nQuill.register(Font, true);\r\n\r\n\r\n// Ã¦Â³Â¨Ã¥ÂÂÃ¥ÂÂ¾Ã§ÂÂÃ¦ÂÂÃ¦ÂÂ½Ã¥ÂÂÃ¥ÂÂ¾Ã§ÂÂÃ¥Â¤Â§Ã¥Â°ÂÃ¨Â°ÂÃ¦ÂÂ´\r\nQuill.register('modules/imageDrop', ImageDrop);\r\nQuill.register('modules/imageResize', ImageResize);\r\nQuill.register('modules/tooltip', Tooltip);\r\n// Because quill uses `document` directly, we cannot `import` during SSR\r\n// instead, we load dynamically via `require('quill')` in `ngAfterViewInit()`\r\n// declare var require: any\r\n// let Quill: any = null\r\n\r\nexport interface CustomOption {\r\n    import: string;\r\n    whitelist: any[];\r\n}\r\n\r\nexport interface Range {\r\n    index: number;\r\n    length: number;\r\n}\r\n\r\nconst getFormat = (format?: QuillFormat, configFormat?: QuillFormat): QuillFormat => {\r\n    const passedFormat = format || configFormat;\r\n    return passedFormat || 'html';\r\n};\r\n\r\n@Component({\r\n    selector: 'farris-html-editor',\r\n    template: `\r\n        <ng-content select=\"[html-editor-toolbar]\"></ng-content>\r\n    `,\r\n    styleUrls: ['./html-editor.component.css'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    providers: [\r\n        {\r\n            multi: true,\r\n            provide: NG_VALUE_ACCESSOR, // Ã¨ÂÂªÃ¥Â®ÂÃ¤Â¹ÂÃ§Â»ÂÃ¤Â»Â¶Ã§ÂÂÃ¦ÂÂ°Ã¦ÂÂ®Ã§Â»ÂÃ¥Â®Â\r\n            useExisting: forwardRef(() => HtmlEditorComponent)\r\n        }, {\r\n            provide: NG_VALIDATORS,\r\n            useExisting: forwardRef(() => HtmlEditorComponent),\r\n            multi: true\r\n        }\r\n    ]\r\n})\r\nexport class HtmlEditorComponent implements AfterViewInit, ControlValueAccessor, OnChanges, OnDestroy {\r\n\r\n    quillEditor: any;\r\n    editorElem: HTMLElement | undefined;\r\n    content: any;\r\n    private _disabled = false; // used to store initial value before ViewInit\r\n\r\n    @HostBinding('class') rootClass = 'farris-html-editor';\r\n    @Input()\r\n    @HostBinding('class.farris-html-editor-readonly') readonly?: boolean;\r\n    @Input()\r\n    @HostBinding('class.farris-html-editor-disabled') disabled = false;\r\n    @Input()\r\n    @HostBinding('class.farris-html-editor-border') showBorder = true;\r\n\r\n    @Input() format?: 'object' | 'html' | 'text' | 'json';\r\n    @Input() theme?: string;\r\n    @Input() modules?: QuillModules = {\r\n        imageDrop: true,\r\n        imageResize: true,\r\n        tooltip: true\r\n    };\r\n    @Input() debug?: 'warn' | 'log' | 'error' | false;\r\n    @Input() placeholder?: string;\r\n    @Input() maxLength?: number;\r\n    @Input() minLength?: number;\r\n    @Input() required = false;\r\n    @Input() formats?: string[] | null;\r\n    @Input() customToolbarPosition: 'top' | 'bottom' = 'top';\r\n    @Input() sanitize = false; // Ã¥ÂÂÃ¥ÂÂdom\r\n    @Input() styles: any = null;\r\n    @Input() strict = true;\r\n    @Input() scrollingContainer?: HTMLElement | string | null;\r\n    @Input() bounds?: HTMLElement | string;\r\n    @Input() customOptions: CustomOption[] = [];\r\n    @Input() trackChanges?: 'user' | 'all';\r\n    @Input() preserveWhitespace = false;\r\n\r\n\r\n    // Ã¨ÂÂªÃ¥Â®ÂÃ¤Â¹Âtoobar\r\n    @Input() customToolbar = false;\r\n    // Ã¨ÂÂªÃ¥Â®ÂÃ¤Â¹ÂÃ¥ÂÂÃ¨ÂÂ½Ã¦ÂÂÃ©ÂÂ®\r\n    @Input() toolbar: RichTextEditorToolbars;\r\n\r\n\r\n    // Ã¦ÂÂÃ¥Â­ÂÃ¦Â Â·Ã¥Â¼Â\r\n    @Input() fontStyleBar: string[] | boolean = true;\r\n    // Ã¤Â»Â£Ã§Â ÂÃ¥ÂÂ\r\n    @Input() BlockBar: string[] | boolean =  false; // false;\r\n    // Ã¦Â ÂÃ©Â¢Â\r\n    @Input() headerBar: { header: any[] } | boolean = true;\r\n    // Ã¥Â­ÂÃ¥ÂÂ·\r\n    @Input() sizeBar: { size: any[] } | boolean = true;\r\n    // Ã¥ÂÂÃ¨Â¡Â¨\r\n    @Input() listBar: any[] | boolean = true;\r\n    // Ã¥Â­ÂÃ¤Â½Â\r\n    @Input() fontBar: { font: string[] } | boolean = true;\r\n    // Ã¤Â¸ÂÃ¦Â ÂÃ¥ÂÂÃ¤Â¸ÂÃ¦Â Â\r\n    @Input() superAndSubscriptBar: any[] | boolean = true; // false;\r\n    // Ã§Â¼Â©Ã¨Â¿Â\r\n    @Input() indentBar: any[] | boolean = true;\r\n    // Ã¦ÂÂÃ¥Â­ÂÃ©Â¢ÂÃ¨ÂÂ²\r\n    @Input() colorBar: any[] | boolean = true; // false;\r\n    // Ã¥ÂªÂÃ¤Â½Â\r\n    @Input() mediaBar: string | boolean = true; // false;\r\n    // Ã¥ÂÂ¾Ã§ÂÂ\r\n    @Input() imageBar: string | boolean = false;\r\n    // Ã¨Â§ÂÃ©Â¢Â\r\n    @Input() videoBar: string | boolean = false; // false;\r\n    // Ã¦Â¸ÂÃ©ÂÂ¤\r\n    @Input() cleanBar: string | boolean = true;\r\n    @Input() alignBar: string | boolean = true;\r\n    /** Ã¥ÂÂªÃ¨Â¯Â»Ã§Â¦ÂÃ§ÂÂ¨Ã¦ÂÂ¶Ã¯Â¼ÂÃ¦ÂÂÃ¥Â¤Â§Ã©Â«ÂÃ¥ÂºÂ¦Ã¯Â¼ÂÃ¤Â¸Âº 0 Ã¦ÂÂ¶Ã¯Â¼ÂÃ¤Â¸ÂÃ©ÂÂÃ¥ÂÂ¶Ã¦ÂÂÃ¥Â¤Â§Ã©Â«ÂÃ¥ÂºÂ¦ */\r\n    @Input() maxHeight = 0;\r\n    @Input() minHeight = 100;\r\n\r\n    @Output() onEditorCreated = new EventEmitter();\r\n\r\n    @Output() onContentChanged: EventEmitter<{\r\n        content: any;\r\n        delta: any;\r\n        editor: any;\r\n        html: string | null;\r\n        oldDelta: any;\r\n        source: string;\r\n        text: string;\r\n    }> = new EventEmitter();\r\n\r\n    @Output() onSelectionChanged: EventEmitter<{\r\n        editor: any;\r\n        oldRange: Range | null;\r\n        range: Range | null;\r\n        source: string;\r\n    }> = new EventEmitter<any>();\r\n\r\n    @Output() onFocus: EventEmitter<{\r\n        editor: any;\r\n        source: string;\r\n    }> = new EventEmitter();\r\n    @Output() onBlur: EventEmitter<{\r\n        editor: any;\r\n        source: string;\r\n    }> = new EventEmitter();\r\n\r\n    @Input() imageUpload: () => void;\r\n\r\n    @Input() valueGetter = (quillEditor: any, editorElement: HTMLElement): string | any => {\r\n        // tslint:disable-next-line: no-non-null-assertion\r\n        let html: string | null = editorElement.querySelector('.ql-editor')!.innerHTML;\r\n        if (html === '<p><br></p>' || html === '<div><br><div>') {\r\n            html = null;\r\n        }\r\n        let modelValue = html;\r\n        const format = getFormat(this.format, this.config.format);\r\n\r\n        if (format === 'text') {\r\n            modelValue = quillEditor.getText();\r\n        } else if (format === 'object') {\r\n            modelValue = quillEditor.getContents();\r\n        } else if (format === 'json') {\r\n            try {\r\n                modelValue = JSON.stringify(quillEditor.getContents());\r\n            } catch (e) {\r\n                modelValue = quillEditor.getText();\r\n            }\r\n        }\r\n        return modelValue;\r\n    }\r\n\r\n    @Input() valueSetter = (quillEditor: any, value: any): any => {\r\n        const format = getFormat(this.format, this.config.format);\r\n        if (format === 'html') {\r\n            if (this.sanitize) {\r\n                value = this.domSanitizer.sanitize(SecurityContext.HTML, value);\r\n            }\r\n            value = value ? (value + '').replace(/\\s\\s/g, '&nbsp;&nbsp;') : '';\r\n            return quillEditor.clipboard.convert(value);\r\n        } else if (format === 'json') {\r\n            try {\r\n                return JSON.parse(value);\r\n            } catch (e) {\r\n                return [{ insert: value }];\r\n            }\r\n        }\r\n        return value;\r\n    }\r\n\r\n    constructor(\r\n        private elementRef: ElementRef,\r\n        private domSanitizer: DomSanitizer,\r\n        @Inject(DOCUMENT) private doc: any,\r\n        // tslint:disable-next-line:ban-types\r\n        @Inject(PLATFORM_ID) private platformId: Object,\r\n        private renderer: Renderer2,\r\n        private zone: NgZone,\r\n        @Inject(QUILL_CONFIG_TOKEN) private config: QuillConfig\r\n    ) { }\r\n\r\n    // tslint:disable-next-line:no-empty\r\n    onModelChange(_modelValue?: any) { }\r\n    // tslint:disable-next-line:no-empty\r\n    onModelTouched() { }\r\n\r\n    ngAfterViewInit(): void {\r\n       this.editorCreate();\r\n\r\n       if (this.editorElem) {\r\n            this.renderer.setStyle(this.editorElem, 'min-height', `${this.minHeight || 100}px`);\r\n            if (this.maxHeight) {\r\n                this.renderer.setStyle(this.editorElem, 'max-height', `${this.maxHeight}px`);\r\n                this.renderer.setStyle(this.editorElem, 'overflow', 'auto');\r\n            }\r\n       }\r\n    }\r\n\r\n    setToolbar(toolbar) {\r\n        // console.log(toolbar);\r\n    }\r\n\r\n    private editorCreate() {\r\n        if (isPlatformServer(this.platformId)) {\r\n            return;\r\n        }\r\n\r\n        this.elementRef.nativeElement.insertAdjacentHTML(\r\n            this.customToolbarPosition === 'top' ? 'beforeend' : 'afterbegin',\r\n            this.preserveWhitespace ? '<pre html-editor-element></pre>' : '<div html-editor-element></div>'\r\n        );\r\n\r\n        this.editorElem = this.elementRef.nativeElement.querySelector('[html-editor-element]');\r\n\r\n        const toolbarElem = this.elementRef.nativeElement.querySelector('[html-editor-toolbar]');\r\n        const modules = this.modules || this.config.modules || defaultModules;\r\n        if (modules.toolbar === undefined) {\r\n            modules.toolbar = defaultModules.toolbar;\r\n        }\r\n        if (this.customToolbar) {\r\n            if (this.toolbar && this.toolbar.length) {\r\n                modules.toolbar = Convert2HtmlEditorToolbars('concise', this.toolbar);\r\n            } else  {\r\n                modules.toolbar =  defaultModules.toolbar;\r\n            }\r\n        }\r\n        if (modules.tooltip === undefined) {\r\n            modules.tooltip = defaultModules.tooltip;\r\n        }\r\n        if (modules.imageDrop === undefined) {\r\n            modules.imageDrop = defaultModules.imageDrop;\r\n        }\r\n        if (modules.imageResize === undefined) {\r\n            modules.imageResize =  defaultModules.imageResize;\r\n        }\r\n\r\n        let placeholder = this.placeholder !== undefined ? this.placeholder : this.config.placeholder;\r\n        if (placeholder === undefined) {\r\n            placeholder = '';\r\n        }\r\n\r\n        if (toolbarElem) {\r\n            // tslint:disable-next-line:no-string-literal\r\n            modules['toolbar'] = toolbarElem;\r\n        }\r\n\r\n        if (this.styles) {\r\n            Object.keys(this.styles).forEach((key: string) => {\r\n                this.renderer.setStyle(this.editorElem, key, this.styles[key]);\r\n            });\r\n        }\r\n\r\n        this.customOptions.forEach(customOption => {\r\n            const newCustomOption = Quill.import(customOption.import);\r\n            newCustomOption.whitelist = customOption.whitelist;\r\n            Quill.register(newCustomOption, true);\r\n        });\r\n\r\n        let bounds = this.bounds && this.bounds === 'self' ? this.editorElem : this.bounds;\r\n        if (!bounds) {\r\n            bounds = this.config.bounds ? this.config.bounds : this.doc.body;\r\n        }\r\n\r\n        let debug = this.debug;\r\n        if (!debug && debug !== false && this.config.debug) {\r\n            debug = this.config.debug;\r\n        }\r\n\r\n        let readOnly = this.readonly;\r\n        if (!readOnly && this.readonly !== false) {\r\n            readOnly = this.config.readOnly !== undefined ? this.config.readOnly : false;\r\n        }\r\n\r\n        // modules.imageResize = !(readOnly || this.disabled)\r\n\r\n        let scrollingContainer = this.scrollingContainer;\r\n        if (!scrollingContainer && this.scrollingContainer !== null) {\r\n            scrollingContainer =\r\n                this.config.scrollingContainer === null || this.config.scrollingContainer\r\n                    ? this.config.scrollingContainer\r\n                    : null;\r\n        }\r\n\r\n        let formats = this.formats;\r\n        if (!formats && formats === undefined) {\r\n            formats = this.config.formats || this.config.formats === null ? this.config.formats : undefined;\r\n        }\r\n        // Ã¥ÂÂÃ¥Â§ÂÃ¥ÂÂquill\r\n        this.quillEditor = new Quill(this.editorElem, {\r\n            bounds,\r\n            debug,\r\n            formats,\r\n            modules,\r\n            placeholder,\r\n            readOnly,\r\n            scrollingContainer,\r\n            strict: this.strict,\r\n            theme: this.theme || (this.config.theme ? this.config.theme : 'snow')\r\n        });\r\n\r\n        if (this.content) {\r\n            const format = getFormat(this.format, this.config.format);\r\n            if (format === 'object') {\r\n                this.quillEditor.setContents(this.content, 'silent');\r\n            } else if (format === 'text') {\r\n                this.quillEditor.setText(this.content, 'silent');\r\n            } else if (format === 'json') {\r\n                try {\r\n                    this.quillEditor.setContents(JSON.parse(this.content), 'silent');\r\n                } catch (e) {\r\n                    this.quillEditor.setText(this.content, 'silent');\r\n                }\r\n            } else {\r\n                if (this.sanitize) {\r\n                    this.content = this.domSanitizer.sanitize(SecurityContext.HTML, this.content);\r\n                }\r\n                const contents = this.quillEditor.clipboard.convert(this.content);\r\n                this.quillEditor.setContents(contents, 'silent');\r\n            }\r\n\r\n            this.quillEditor.history.clear();\r\n        }\r\n\r\n        // initialize _disabled status based on this._disabled as default value\r\n        // this.setDisabledState(this.disabled);\r\n        this.setStatusEditor(this.readonly, this.disabled);\r\n        this.onEditorCreated.emit(this.quillEditor);\r\n\r\n        // mark model as touched if editor lost focus\r\n        this.quillEditor.on('selection-change', this.selectionChangeHandler);\r\n\r\n        // update model if text changes\r\n        this.quillEditor.on('text-change', this.textChangeHandler);\r\n    }\r\n\r\n    random_id() {\r\n        return Math.random().toString(36).slice(2);\r\n    }\r\n\r\n    selectionChangeHandler = (range: Range | null, oldRange: Range | null, source: string) => {\r\n        this.zone.run(() => {\r\n            if (range === null) {\r\n                this.onBlur.emit({\r\n                    editor: this.quillEditor,\r\n                    source\r\n                });\r\n            } else if (oldRange === null) {\r\n                this.onFocus.emit({\r\n                    editor: this.quillEditor,\r\n                    source\r\n                });\r\n            }\r\n\r\n            this.onSelectionChanged.emit({\r\n                editor: this.quillEditor,\r\n                oldRange,\r\n                range,\r\n                source\r\n            });\r\n\r\n            if (!range && this.onModelTouched) {\r\n                this.onModelTouched();\r\n            }\r\n        });\r\n    }\r\n\r\n    textChangeHandler = (delta: any, oldDelta: any, source: string): void => {\r\n        // only emit changes emitted by user interactions\r\n\r\n        const text = this.quillEditor.getText();\r\n        const content = this.quillEditor.getContents();\r\n\r\n        // tslint:disable-next-line: no-non-null-assertion\r\n        let html: string | null = this.editorElem!.querySelector('.ql-editor')!.innerHTML;\r\n        if (html === '<p><br></p>' || html === '<div><br><div>') {\r\n            html = null;\r\n        }\r\n\r\n        this.zone.run(() => {\r\n            const trackChanges = this.trackChanges || this.config.trackChanges;\r\n            if ((source === Quill.sources.USER || (trackChanges && trackChanges === 'all')) && this.onModelChange) {\r\n                this.onModelChange(this.valueGetter(this.quillEditor, this.editorElem!));\r\n            }\r\n\r\n            this.onContentChanged.emit({\r\n                content,\r\n                delta,\r\n                editor: this.quillEditor,\r\n                html,\r\n                oldDelta,\r\n                source,\r\n                text\r\n            });\r\n        });\r\n    }\r\n\r\n    endEdit() {\r\n        this.onModelTouched();\r\n    }\r\n\r\n    buildToolbar(options: any) {\r\n        const rtn = [];\r\n        Object.keys(options).forEach(e => {\r\n            if (this[e] === true) {\r\n                rtn.push(options[e]);\r\n            } else if (this[e]) {\r\n                rtn.push(this[e]);\r\n            }\r\n        });\r\n        return rtn;\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.quillEditor) {\r\n            this.quillEditor.off('selection-change', this.selectionChangeHandler);\r\n            this.quillEditor.off('text-change', this.textChangeHandler);\r\n        }\r\n    }\r\n\r\n    private hideImgSelectionRange() {\r\n        const imgResizeIns: any = this.quillEditor.getModule('imageResize');\r\n        if (imgResizeIns) {\r\n            if (this.readonly || this.disabled) {\r\n                imgResizeIns.hide();\r\n            }\r\n        }\r\n    }\r\n    \r\n\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (!this.quillEditor) {\r\n            return;\r\n        }\r\n        if (changes['disabled']) {\r\n            this.setStatusEditor(false, this.disabled);\r\n            this.hideImgSelectionRange();\r\n        }\r\n        // tslint:disable:no-string-literal\r\n        if (changes['readonly']) {\r\n            this.quillEditor.enable(!changes['readonly'].currentValue);\r\n            this.disableToolbar(changes['readonly'].currentValue);\r\n            this.hideImgSelectionRange();\r\n        }\r\n        if (changes['placeholder']) {\r\n            this.quillEditor.root.dataset.placeholder = changes['placeholder'].currentValue;\r\n        }\r\n        if (changes['styles']) {\r\n            const currentStyling = changes['styles'].currentValue;\r\n            const previousStyling = changes['styles'].previousValue;\r\n\r\n            if (previousStyling) {\r\n                Object.keys(previousStyling).forEach((key: string) => {\r\n                    this.renderer.removeStyle(this.editorElem, key);\r\n                });\r\n            }\r\n            if (currentStyling) {\r\n                Object.keys(currentStyling).forEach((key: string) => {\r\n                    this.renderer.setStyle(this.editorElem, key, this.styles[key]);\r\n                });\r\n            }\r\n        }\r\n        // tslint:enable:no-string-literal\r\n    }\r\n\r\n    writeValue(currentValue: any) {\r\n        this.content = currentValue;\r\n        const format = getFormat(this.format, this.config.format);\r\n        if (this.quillEditor) {\r\n            this.quillEditor.setText('');\r\n            if (currentValue) {\r\n                if (format === 'text') {\r\n                    this.quillEditor.setText(currentValue);\r\n                } else {\r\n                    this.quillEditor.setContents(this.valueSetter(this.quillEditor, this.content));\r\n                }\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    disableToolbar(readonly: boolean) {\r\n        const toolbarElem = this.elementRef.nativeElement.querySelector('.ql-toolbar');\r\n        if (toolbarElem) {\r\n            toolbarElem.style.display = readonly ? 'none' : 'block';\r\n        }\r\n    }\r\n\r\n    setStatusEditor(readonly: boolean = false, disable: boolean) {\r\n        // if (disable || readonly) {\r\n        //     this.elementRef.nativeElement.style.border = 'none';\r\n        // }\r\n        this.disableToolbar(disable || readonly);\r\n        this.setDisabledState(disable);\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean = this._disabled): void {\r\n        // store initial value to set appropriate _disabled status after ViewInit\r\n        this._disabled = isDisabled;\r\n        if (this.quillEditor) {\r\n            if (isDisabled) {\r\n                this.quillEditor.disable();\r\n                this.renderer.setAttribute(this.elementRef.nativeElement, 'disabled', 'disabled');\r\n            } else {\r\n                if (!this.readonly) {\r\n                    this.quillEditor.enable();\r\n                }\r\n                this.renderer.removeAttribute(this.elementRef.nativeElement, 'disabled');\r\n            }\r\n        }\r\n    }\r\n\r\n    registerOnChange(fn: (modelValue: any) => void): void {\r\n        this.onModelChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: () => void): void {\r\n        this.onModelTouched = fn;\r\n    }\r\n\r\n    validate() {\r\n        return null;\r\n        // if (!this.quillEditor) {\r\n        // }\r\n        // const err: {\r\n        //     minLengthError?: {\r\n        //         given: number;\r\n        //         minLength: number;\r\n        //     };\r\n        //     maxLengthError?: {\r\n        //         given: number;\r\n        //         maxLength: number;\r\n        //     };\r\n        //     requiredError?: { empty: boolean };\r\n        // } = {};\r\n        // let valid = true;\r\n\r\n        // const textLength = this.quillEditor.getText().trim().length;\r\n\r\n        // if (this.minLength && textLength && textLength < this.minLength) {\r\n        //     err.minLengthError = {\r\n        //         given: textLength,\r\n        //         minLength: this.minLength\r\n        //     };\r\n\r\n        //     valid = false;\r\n        // }\r\n\r\n        // if (this.maxLength && textLength > this.maxLength) {\r\n        //     err.maxLengthError = {\r\n        //         given: textLength,\r\n        //         maxLength: this.maxLength\r\n        //     };\r\n\r\n        //     valid = false;\r\n        // }\r\n\r\n        // if (this.required && !textLength) {\r\n        //     err.requiredError = {\r\n        //         empty: true\r\n        //     };\r\n\r\n        //     valid = false;\r\n        // }\r\n\r\n        // return valid ? null : err;\r\n    }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { HtmlEditorComponent } from './html-editor.component';\r\nimport { defaultModules } from './html-editor-defaults';\r\nimport { QUILL_CONFIG_TOKEN, QuillConfig } from './html-editor.interfaces';\r\n@NgModule({\r\n    declarations: [HtmlEditorComponent],\r\n    imports: [],\r\n    exports: [HtmlEditorComponent],\r\n    providers: [\r\n        {\r\n            provide: QUILL_CONFIG_TOKEN,\r\n            useValue: { modules: defaultModules }\r\n        }\r\n    ]\r\n})\r\nexport class FarrisHtmlEditorModule {\r\n    static forRoot(config?: QuillConfig): ModuleWithProviders {\r\n        return {\r\n            ngModule: FarrisHtmlEditorModule,\r\n            providers: [\r\n                {\r\n                    provide: QUILL_CONFIG_TOKEN,\r\n                    // tslint:disable-next-line:only-arrow-functions\r\n                    useValue: config || { modules: defaultModules }\r\n                }\r\n            ]\r\n        };\r\n    }\r\n}\r\n"]}