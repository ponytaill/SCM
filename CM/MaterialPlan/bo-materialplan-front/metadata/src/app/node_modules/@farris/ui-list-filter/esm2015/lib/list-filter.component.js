/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, ViewChild, ChangeDetectorRef, ChangeDetectionStrategy, Output, EventEmitter, ElementRef, Renderer2, Injector, LOCALE_ID, Optional, InjectFlags } from '@angular/core';
import { ControlType } from './entity/controltype';
import { ListFilterService } from './service/list-filter.service';
import { QuerySolutionService } from './submithandlers/query-solution.service';
import { ConvertorService } from './service/convertorservice';
import { TextValue } from './entity/conditionvalue/textvalue';
import { HelpValue } from './entity/conditionvalue/helpvalue';
import { DropDownListValue } from './entity/conditionvalue/dropdownlistvalue';
import { DateRangeValue } from './entity/conditionvalue/daterangevalue';
import { NumberRangeValue } from './entity/conditionvalue/numberrangevaue';
import { SearchValue } from './entity/conditionvalue/searchvalue';
import { DateValue } from './entity/conditionvalue/datevalue';
import { CheckboxGroupValue } from './entity/conditionvalue/checkboxgroupvalue';
import { LISTFILTER_HANDLER_TOKEN } from './interface/IistFilterHandler';
import { RadioGroupValue } from './entity/conditionvalue/radiovalue';
import { MonthValue } from './entity/conditionvalue/month';
import { YearValue } from './entity/conditionvalue/yearvalue';
import { YearRangeValue } from './entity/conditionvalue/yearrange';
import { MonthRangeValue } from './entity/conditionvalue/monthrange';
import { InputGroupValue } from './entity/conditionvalue/inputgroup';
export class ListFilterComponent {
    /**
     * @param {?} filterService
     * @param {?} cd
     * @param {?} handler
     * @param {?} convertorService
     * @param {?} render
     * @param {?} injector
     */
    constructor(filterService, cd, handler, convertorService, render, injector) {
        this.filterService = filterService;
        this.cd = cd;
        this.handler = handler;
        this.convertorService = convertorService;
        this.render = render;
        this.injector = injector;
        //  表单左对齐
        this.alLeft = false;
        //  平分空间
        this.autoWidth = true;
        //  实时搜索
        this.liveSearch = false;
        //  label的宽度是否自适应
        this.autoLabel = false;
        //  是否禁用
        this.disabled = false;
        this.filterPaddingNone = false;
        this.query = new EventEmitter();
        this.clear = new EventEmitter();
        this.searchChange = new EventEmitter();
        //  filterWidth:number = 1000;
        //  标记是否有滚动条
        //  hasScroll = true;
        //  需要监听收折的表单
        //  resizeGroups: listFilterGroup;
        // 筛选icon部分小红点
        this.showExpandTag = false;
        /**
         * 是否需要显示展开更多icon
         */
        this.showMoreIcon = false;
        //  moreIconWidth:number = 0;
        this.showFilter = false;
        // 是否展现出的只有一个搜索控件
        this.formExpand = false;
        // 提交表单数据
        //  queryList;
        // 隐藏提交表单数据
        //  extendqueryList;
        /**
         * 循环表单
         */
        this.listFilterConditions = new Array();
        /**
         * 用来存储setvalue前数据
         */
        this.stagListFilterConditions = new Array();
        /**
         * 记录默认收起的搜索表单列表
         */
        this.extendFilterList = [];
        /**
         * 记录显示的搜索表单列表
         */
        this.showFilterList = [];
        /**
         * 显示中表单的必填项
         */
        this.requiredListFilter = [];
        /** 隐藏中表单的必填项 */
        //  extendRequiredListFilter: Array<QueryCondition> = [];
        /**
         * 表单是否允许提交
         */
        this.canSubmit = false;
        /**
         * 扩展表单是否允许提交
         */
        //  extendCanSubmit:boolean = false;
        this.localeIds = {
            en: 'en',
            'zh-CHS': 'zh-CHS'
        };
        this.currentLocale = 'zh-CHS';
        this.isControlInline = true;
        this.fieldCodeOfClearFields = [];
        if (this.injector) {
            this.currentLocale = this.injector.get(LOCALE_ID);
            this.listfilterHandler = this.injector.get(LISTFILTER_HANDLER_TOKEN, null, InjectFlags.Optional);
        }
    }
    /**
     * @param {?} configs
     * @return {?}
     */
    set defaultValue(configs) {
        this._defaultValue = configs;
        setTimeout((/**
         * @return {?}
         */
        () => {
            this.setFilterValue(this._defaultValue);
        }));
    }
    /**
     * @return {?}
     */
    get defaultValue() {
        return this._defaultValue;
    }
    /**
     * @return {?}
     */
    get filterList() {
        return this._filterList;
    }
    /**
     * @param {?} filterList
     * @return {?}
     */
    set filterList(filterList) {
        this._filterList = filterList;
        this.initFilterList();
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        // if (this.currentLocale === this.localeIds['en']) {
        //     this.isControlInline = false;
        // } else {
        //     this.isControlInline = true;
        // }
        this.canShowMoreIcon();
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
        if (this.autoWidth && !this.formExpand && this.filterMainBasisRef) {
            /** @type {?} */
            const basicList = this.filterMainBasisRef.nativeElement.querySelectorAll('.filter-input-list');
            /** @type {?} */
            let basicWidth = 0;
            if (basicList && basicList.length) {
                for (let k = 0; k < basicList.length; k++) {
                    /** @type {?} */
                    const offW = Math.ceil(parseFloat(basicList[k].offsetWidth || 0));
                    if (offW > 0) {
                        basicWidth += offW;
                    }
                }
            }
            if (basicWidth > 0) {
                this.render.setStyle(this.filterMainBasisRef.nativeElement, 'width', basicWidth + 'px');
            }
        }
    }
    /**
     * 初始化处理表单数据
     * @return {?}
     */
    initFilterList() {
        this.listFilterConditions = new Array();
        this.extendFilterList = [];
        this.showFilterList = [];
        this.filterDatas = this.filterService.fieldSchemasConvert(this._filterList);
        if (this.filterDatas && this.filterDatas.length) {
            this.listFilterConditions = this.convertorService.getSelectedFieldConditions(this.filterDatas, this.listFilterConditions);
            this.stagListFilterConditions = this.listFilterConditions.map((/**
             * @param {?} o
             * @return {?}
             */
            o => (Object.assign({}, o))));
            // 存储扩展项和默认展示表单
            this.listFilterConditions.forEach((/**
             * @param {?} field
             * @return {?}
             */
            field => {
                if (field.control.isExtend) {
                    this.extendFilterList.push(field);
                }
                else {
                    this.showFilterList.push(field);
                }
            }));
            // 判断是否是左对齐 只有一个搜索
            /** @type {?} */
            const _basisFilterList = this.listFilterConditions.filter((/**
             * @param {?} field
             * @return {?}
             */
            (field) => {
                return !field.control.isExtend;
            }));
            if (_basisFilterList && _basisFilterList.length === 1 && this.getControlType(_basisFilterList[0]) === 'search') {
                this.formExpand = true;
            }
            this.searchChange.emit(this.listFilterConditions);
            this.inSetCurrentFilterConditions();
            // 存储默认展示中必填项
            this.requiredListInit();
            this.canShowMoreIcon();
            //  this.listSearch();
            this.cd.detectChanges();
        }
    }
    /**
     * @return {?}
     */
    inSetCurrentFilterConditions() {
        if (this.listfilterHandler) {
            this.listfilterHandler.setCurrentFilterConditions(this.listFilterConditions);
        }
    }
    /**
     * 获取控件类型
     * @param {?} selectedFieldCondition
     * @return {?}
     */
    getControlType(selectedFieldCondition) {
        if (selectedFieldCondition) {
            if (selectedFieldCondition.control.getControlType() == ControlType.Text) {
                return 'input';
            }
            else if (selectedFieldCondition.control.getControlType() == ControlType.Search) {
                return 'search';
            }
            else if (selectedFieldCondition.control.getControlType() == ControlType.Date) {
                return 'date';
            }
            else if (selectedFieldCondition.control.getControlType() == ControlType.Month) {
                return 'month';
            }
            else if (selectedFieldCondition.control.getControlType() == ControlType.Year) {
                return 'year';
            }
            else if (selectedFieldCondition.control.getControlType() == ControlType.DateRange) {
                return 'daterange';
            }
            else if (selectedFieldCondition.control.getControlType() == ControlType.DateRangeTime) {
                return 'daterangetime';
            }
            else if (selectedFieldCondition.control.getControlType() == ControlType.MonthRange) {
                return 'monthrange';
            }
            else if (selectedFieldCondition.control.getControlType() == ControlType.YearRange) {
                return 'yearrange';
            }
            else if (selectedFieldCondition.control.getControlType() == ControlType.DropDown) {
                return 'dropdown';
            }
            else if (selectedFieldCondition.control.getControlType() == ControlType.NumberRange) {
                return 'number';
            }
            else if (selectedFieldCondition.control.getControlType() == ControlType.Help) {
                return 'help';
            }
            else if (selectedFieldCondition.control.getControlType() == ControlType.CheckboxGroup) {
                return 'checkboxgroup';
            }
            else if (selectedFieldCondition.control.getControlType() == ControlType.Radio) {
                return 'radio';
            }
            else if (selectedFieldCondition.control.getControlType() == ControlType.InputGroup) {
                return 'input-group';
            }
            else {
                return 'input';
            }
        }
    }
    /**
     * 获得类名
     * @param {?} currentItem
     * @return {?}
     */
    getStyle(currentItem) {
        /** @type {?} */
        const defaultCondtionStyle = 'col-12 col-md-6 col-xl-3 col-el-2';
        return (this.filterClass && !this.autoWidth) ? this.filterClass : defaultCondtionStyle;
    }
    /**
     * 判断是否需要显示更多按钮
     * @return {?}
     */
    canShowMoreIcon() {
        if (this.extendFilterList.length > 0) {
            this.showMoreIcon = true;
        }
        else {
            this.showMoreIcon = false;
        }
    }
    /**
     * 判断是否所有必填项都填写完毕
     * @param {?} requirelist
     * @return {?}
     */
    canSubmitFilter(requirelist) {
        /** @type {?} */
        let formCanSubmit = false;
        if (!requirelist || !requirelist.length) {
            formCanSubmit = true;
            return formCanSubmit;
        }
        else {
            for (let i = 0; i < requirelist.length; i++) {
                /** @type {?} */
                const item = requirelist[i];
                if (item.control.getControlType() === ControlType.Text) {
                    /** @type {?} */
                    const tv = ((/** @type {?} */ (item.value)));
                    if (Object.keys(tv).length < 0 || !tv.value) {
                        formCanSubmit = false;
                        return false;
                    }
                    else {
                        formCanSubmit = true;
                    }
                }
                else if (item.control.getControlType() === ControlType.Help) {
                    /** @type {?} */
                    const shv = ((/** @type {?} */ (item.value)));
                    if (Object.keys(shv).length === 0 || !shv.value || !shv.valueField) {
                        formCanSubmit = false;
                        return false;
                    }
                    else {
                        formCanSubmit = true;
                    }
                }
                else if (item.control.getControlType() === ControlType.DropDown) {
                    /** @type {?} */
                    const ddv = ((/** @type {?} */ (item.value)));
                    if (Object.keys(ddv).length === 0 || !ddv.value) {
                        formCanSubmit = false;
                        return false;
                    }
                    else {
                        formCanSubmit = true;
                    }
                }
                else if (item.control.getControlType() === ControlType.DateRange) {
                    /** @type {?} */
                    const drv = ((/** @type {?} */ (item.value)));
                    if (Object.keys(drv).length === 0 || (!drv.startTime && !drv.endTime)) {
                        formCanSubmit = false;
                        return false;
                    }
                    else {
                        formCanSubmit = true;
                    }
                }
                else if (item.control.getControlType() === ControlType.DateRangeTime) {
                    /** @type {?} */
                    const drv = ((/** @type {?} */ (item.value)));
                    if (Object.keys(drv).length === 0 || (!drv.startTime && !drv.endTime)) {
                        formCanSubmit = false;
                        return false;
                    }
                    else {
                        formCanSubmit = true;
                    }
                }
                else if (item.control.getControlType() === ControlType.MonthRange) {
                    /** @type {?} */
                    const mrv = ((/** @type {?} */ (item.value)));
                    if (Object.keys(mrv).length === 0 || (!mrv.startTime && !mrv.endTime)) {
                        formCanSubmit = false;
                        return false;
                    }
                    else {
                        formCanSubmit = true;
                    }
                }
                else if (item.control.getControlType() === ControlType.YearRange) {
                    /** @type {?} */
                    const yrv = ((/** @type {?} */ (item.value)));
                    if (Object.keys(yrv).length === 0 || (!yrv.startTime && !yrv.endTime)) {
                        formCanSubmit = false;
                        return false;
                    }
                    else {
                        formCanSubmit = true;
                    }
                }
                else if (item.control.getControlType() === ControlType.NumberRange) {
                    /** @type {?} */
                    const nrv = ((/** @type {?} */ (item.value)));
                    if (Object.keys(nrv).length === 0 || (!nrv.startValue && !nrv.endValue)) {
                        formCanSubmit = false;
                        return false;
                    }
                    else {
                        formCanSubmit = true;
                    }
                }
                else if (item.control.getControlType() === ControlType.Search) {
                    /** @type {?} */
                    const sv = ((/** @type {?} */ (item.value)));
                    if (Object.keys(sv).length < 0 || !sv.value) {
                        formCanSubmit = false;
                        return false;
                    }
                    else {
                        formCanSubmit = true;
                    }
                }
                else if (item.control.getControlType() === ControlType.Date) {
                    /** @type {?} */
                    const dv = ((/** @type {?} */ (item.value)));
                    if (Object.keys(dv).length < 0 || !dv.value) {
                        formCanSubmit = false;
                        return false;
                    }
                    else {
                        formCanSubmit = true;
                    }
                }
                else if (item.control.getControlType() === ControlType.Month) {
                    /** @type {?} */
                    const mv = ((/** @type {?} */ (item.value)));
                    if (Object.keys(mv).length < 0 || !mv.value) {
                        formCanSubmit = false;
                        return false;
                    }
                    else {
                        formCanSubmit = true;
                    }
                }
                else if (item.control.getControlType() === ControlType.Year) {
                    /** @type {?} */
                    const yv = ((/** @type {?} */ (item.value)));
                    if (Object.keys(yv).length < 0 || !yv.value) {
                        formCanSubmit = false;
                        return false;
                    }
                    else {
                        formCanSubmit = true;
                    }
                }
                else if (item.control.getControlType() === ControlType.CheckboxGroup) {
                    /** @type {?} */
                    const cbgv = ((/** @type {?} */ (item.value)));
                    if (Object.keys(cbgv).length === 0 || Object.keys(cbgv.value).length === 0) {
                        formCanSubmit = false;
                        return false;
                    }
                    else {
                        formCanSubmit = true;
                    }
                }
                else if (item.control.getControlType() === ControlType.Radio) {
                    /** @type {?} */
                    const ddv = ((/** @type {?} */ (item.value)));
                    if (Object.keys(ddv).length === 0 || !ddv.value) {
                        formCanSubmit = false;
                        return false;
                    }
                    else {
                        formCanSubmit = true;
                    }
                }
                else if (item.control.getControlType() === ControlType.InputGroup) {
                    /** @type {?} */
                    const sv = ((/** @type {?} */ (item.value)));
                    if (Object.keys(sv).length < 0 || !sv.textValue) {
                        formCanSubmit = false;
                        return false;
                    }
                    else {
                        formCanSubmit = true;
                    }
                }
            }
            return formCanSubmit;
        }
    }
    /**
     * 搜索表单变化
     * @param {?} $event
     * @param {?} item
     * @return {?}
     */
    onSearch($event, item) {
        if (this.disabled) {
            return;
        }
        this.searchChange.emit({ item, conditions: this.listFilterConditions, instance: this });
        this.inSetCurrentFilterConditions();
        this.canSubmit = this.canSubmitFilter(this.requiredListFilter);
        if (item.control.isExtend || !this.canSubmit || !this.liveSearch) {
            return;
        }
        this.submit('showFormData', this.listFilterConditions);
    }
    /**
     * 开始筛选
     * @return {?}
     */
    filterClick() {
        if (this.disabled || !this.canSubmit) {
            return;
        }
        this.submit('showFormData', this.listFilterConditions);
    }
    /**
     * 收折部分点击确定提交
     * @return {?}
     */
    listSearch() {
        if (this.disabled || !this.canSubmit) {
            return;
        }
        this.showFilter = false;
        this.submit('extendFormData', this.listFilterConditions);
    }
    /**
     * 取消搜索
     * @return {?}
     */
    listSearchCancel() {
        this.showFilter = false;
    }
    /**
     * 提交表单
     * @param {?} type
     * @param {?} filterlist
     * @return {?}
     */
    submit(type, filterlist) {
        /** @type {?} */
        let queryList;
        queryList = this.handler.setFilterConditions(filterlist);
        if (type == 'extendFormData') {
            if (queryList.length > 0) {
                this.showExpandTag = true;
            }
            else {
                this.showExpandTag = false;
            }
        }
        this.query.emit({ type, data: JSON.stringify(queryList) });
    }
    /**
     * 对外提供获得表单搜索数据
     * @return {?}
     */
    getFilterData() {
        /** @type {?} */
        let queryList;
        queryList = this.handler.setFilterConditions(this.listFilterConditions);
        return JSON.stringify(queryList);
    }
    /**
     * 获取展示在外部的表单长度
     * @return {?}
     */
    getShowLength() {
        if (this.showFilterList) {
            return this.showFilterList.length;
        }
    }
    /**
     * 清空条件
     * @return {?}
     */
    resetSearch() {
        if (this.disabled) {
            return;
        }
        if (this.listFilterConditions && this.listFilterConditions.length) {
            this.listFilterConditions.forEach((/**
             * @param {?} listFilterCondition
             * @return {?}
             */
            listFilterCondition => {
                if (listFilterCondition.control.getControlType() == ControlType.Text) {
                    listFilterCondition.value = new TextValue();
                }
                else if (listFilterCondition.control.getControlType() == ControlType.Search) {
                    listFilterCondition.value = new SearchValue();
                }
                else if (listFilterCondition.control.getControlType() == ControlType.Date) {
                    listFilterCondition.value = new DateValue();
                }
                else if (listFilterCondition.control.getControlType() == ControlType.Month) {
                    listFilterCondition.value = new MonthValue();
                }
                else if (listFilterCondition.control.getControlType() == ControlType.Year) {
                    listFilterCondition.value = new YearValue();
                }
                else if (listFilterCondition.control.getControlType() == ControlType.DateRange) {
                    listFilterCondition.value = new DateRangeValue();
                }
                else if (listFilterCondition.control.getControlType() == ControlType.MonthRange) {
                    listFilterCondition.value = new MonthRangeValue();
                }
                else if (listFilterCondition.control.getControlType() == ControlType.YearRange) {
                    listFilterCondition.value = new YearRangeValue();
                }
                else if (listFilterCondition.control.getControlType() == ControlType.DropDown) {
                    listFilterCondition.value = new DropDownListValue();
                }
                else if (listFilterCondition.control.getControlType() == ControlType.NumberRange) {
                    listFilterCondition.value = new NumberRangeValue();
                }
                else if (listFilterCondition.control.getControlType() == ControlType.Help) {
                    listFilterCondition.value = new HelpValue();
                }
                else if (listFilterCondition.control.getControlType() == ControlType.CheckboxGroup) {
                    listFilterCondition.value = new CheckboxGroupValue();
                }
                else if (listFilterCondition.control.getControlType() == ControlType.Radio) {
                    listFilterCondition.value = new RadioGroupValue();
                }
                else if (listFilterCondition.control.getControlType() == ControlType.InputGroup) {
                    listFilterCondition.value = new InputGroupValue();
                }
                else {
                    listFilterCondition.value = new TextValue();
                }
            }));
            //  let listFilter = this.listFilterConditions.map(o => Object.assign({}, o));
            /** @type {?} */
            const listFilter = this.listFilterConditions.map((/**
             * @param {?} o
             * @return {?}
             */
            o => (Object.assign({}, o))));
            this.listFilterConditions = listFilter;
            this.requiredListInit();
            //  this.cd.markForCheck();
        }
        this.clear.emit();
    }
    // 设置默认值
    /**
     * @param {?} fieldConfigs
     * @return {?}
     */
    setFilterValue(fieldConfigs) {
        this.listFilterConditions = this.stagListFilterConditions.map((/**
         * @param {?} o
         * @return {?}
         */
        o => (Object.assign({}, o))));
        if (this.listFilterConditions && this.listFilterConditions.length) {
            this.setValues(this.listFilterConditions, fieldConfigs);
            /** @type {?} */
            const listFilter = this.listFilterConditions.map((/**
             * @param {?} o
             * @return {?}
             */
            o => (Object.assign({}, o))));
            this.listFilterConditions = listFilter;
            this.requiredListInit();
            this.searchChange.emit(this.listFilterConditions);
            this.inSetCurrentFilterConditions();
            //  this.listSearch();
            this.cd.detectChanges();
            this.cd.markForCheck();
            this.canSubmit = this.canSubmitFilter(this.requiredListFilter);
            if (!this.canSubmit) {
                return;
            }
            this.submit('showFormData', this.listFilterConditions);
        }
    }
    // 设置value
    /**
     * @param {?} conditions
     * @param {?} fieldConfigs
     * @return {?}
     */
    setValues(conditions, fieldConfigs) {
        /** @type {?} */
        let qc;
        /** @type {?} */
        let controlType;
        if (fieldConfigs && fieldConfigs.length) {
            fieldConfigs.forEach((/**
             * @param {?} v
             * @return {?}
             */
            v => {
                qc = conditions.find((/**
                 * @param {?} c
                 * @return {?}
                 */
                c => c.fieldCode == v.labelCode));
                if (qc) {
                    controlType = this.getControlType(qc);
                    qc.value = this.filterService.setValues(controlType, v.value);
                }
            }));
        }
    }
    /**
     * @param {?} fieldName
     * @return {?}
     */
    getValue(fieldName) {
        /** @type {?} */
        const queryList = this.handler.setFilterConditions(this.listFilterConditions);
        /** @type {?} */
        const item = queryList.find((/**
         * @param {?} n
         * @return {?}
         */
        (n) => n['FilterField'] === fieldName));
        if (item) {
            return item.value;
        }
        return undefined;
    }
    // 必填项初始化
    /**
     * @return {?}
     */
    requiredListInit() {
        /** @type {?} */
        const requiredList = this.listFilterConditions.filter((/**
         * @param {?} listitem
         * @return {?}
         */
        (listitem) => {
            return listitem.control.required;
        }));
        if (requiredList && requiredList.length) {
            this.requiredListFilter = requiredList;
            this.canSubmit = this.canSubmitFilter(this.requiredListFilter);
        }
        else {
            this.requiredListFilter = [];
            this.canSubmit = true;
        }
    }
    /**
     * @param {?} fields
     * @return {?}
     */
    clearFilterValue(fields) {
        if (fields && fields.length) {
            if (typeof fields === 'string') {
                fields = fields.split(',');
            }
            fields = fields.map((/**
             * @param {?} n
             * @return {?}
             */
            n => {
                return n.toLowerCase();
            }));
            this.listFilterConditions.forEach((/**
             * @param {?} n
             * @return {?}
             */
            n => {
                if (fields.indexOf(n.fieldCode.toLowerCase()) > -1) {
                    n.value.clearValue();
                }
            }));
        }
    }
    /**
     * @param {?} values
     * @return {?}
     */
    updateValues(values) {
        if (values && Object.keys(values)) {
            /** @type {?} */
            const fields = Object.keys(values);
            fields.forEach((/**
             * @param {?} f
             * @return {?}
             */
            f => {
                this.listFilterConditions.forEach((/**
                 * @param {?} n
                 * @return {?}
                 */
                n => {
                    if (fields.indexOf(n.fieldCode.toLowerCase()) > -1) {
                        n.value['value'] = values[f];
                    }
                }));
            }));
        }
    }
}
ListFilterComponent.decorators = [
    { type: Component, args: [{
                selector: 'farris-list-filter',
                template: "<app-filter-common></app-filter-common>\r\n<div class=\"f-list-filter position-relative\"\r\n    [ngClass]=\"{'list-filter-padding': showMoreIcon,'list-filter-autoWidth': autoWidth,'list-filter-paddingnone': filterPaddingNone}\">\r\n    <ng-container *ngIf=\"filterType === 'list';else filterLayout\">\r\n        <div class=\"filter-inputs-main filter-inputs-main-list f-form-layout farris-form farris-form-controls-inline\">\r\n            <ng-container *ngFor=\"let formItem of listFilterConditions;let last = last;\">\r\n                <div class=\"col-12\"\r\n                    [ngClass]=\"{'filter-list-item': showFilterList && showFilterList.length && showFilterList[showFilterList.length-1]['id'] == formItem.id}\"\r\n                    *ngIf=\"!formItem.control.isExtend\">\r\n                    <div class=\"filter-input-list farris-group-wrap\"\r\n                        [ngClass]=\"{'filter-input-list-autolabel': autoLabel,'filter-input-list-checkbox': getControlType(formItem) === 'checkboxgroup'}\"\r\n                        [id]=\"'filter-'+formItem.id\">\r\n                        <ng-container [ngTemplateOutlet]=\"filterInputTemplate\"\r\n                            [ngTemplateOutletContext]=\"{ item: formItem }\"></ng-container>\r\n                        <div class=\"filter-search-btn\"\r\n                            *ngIf=\"!liveSearch && showFilterList && showFilterList.length && showFilterList[showFilterList.length-1]['id'] == formItem.id\">\r\n                            <button class=\"btn btn-primary\" [ngClass]=\"{'disabled': disabled || !canSubmit}\"\r\n                                (click)=\"filterClick()\">{{ 'listFilter.filter' | locale }}</button>\r\n                            <button class=\"btn btn-secondary filter-search-btn-reset\" *ngIf=\"!showMoreIcon\"\r\n                                (click)=\"resetSearch()\">\r\n                                <span class=\"f-icon f-icon-remove\"></span>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ng-container>\r\n        </div>\r\n    </ng-container>\r\n    <ng-template #filterLayout>\r\n        <ng-container *ngIf=\"autoWidth;else gridLayout\">\r\n            <div class=\"filter-inputs-main-basis-wrapper\"\r\n                [ngClass]=\"{'list-filter-wrapper-show-btn': !liveSearch,'list-filter-wrapper-show-btn-remove': !liveSearch && !showMoreIcon}\">\r\n                <div class=\"filter-inputs-main-basis-wrapper-inner\">\r\n                    <div class=\"filter-inputs-main filter-inputs-main-basis farris-form d-flex\"\r\n                        [ngClass]=\"{'justify-content-end': !alLeft,'farris-form-controls-inline':isControlInline}\"\r\n                        #filterMainBasis>\r\n                        <ng-container *ngFor=\"let formItem of listFilterConditions\">\r\n                            <div *ngIf=\"!formItem.control.isExtend\" class=\"filter-input-list farris-group-wrap\"\r\n                                [ngClass]=\"{'filter-input-list-autolabel': autoLabel,'filter-input-list-checkbox': getControlType(formItem) === 'checkboxgroup', 'filter-input-list-expand':formExpand,'filter-input-list-left': alLeft}\"\r\n                                [id]=\"'filter-'+formItem.id\">\r\n                                <ng-container [ngTemplateOutlet]=\"filterInputTemplate\"\r\n                                    [ngTemplateOutletContext]=\"{ item: formItem }\"></ng-container>\r\n                            </div>\r\n                        </ng-container>\r\n                    </div>\r\n                </div>\r\n                <div class=\"filter-search-btn\" [ngClass]=\"{'filter-search-btn-remove': !showMoreIcon}\"\r\n                    *ngIf=\"!liveSearch\">\r\n                    <button class=\"btn btn-primary\" [ngClass]=\"{'disabled': disabled || !canSubmit}\"\r\n                        (click)=\"filterClick()\">{{ 'listFilter.filter' | locale }}</button>\r\n                    <button class=\"btn btn-secondary filter-search-btn-reset\" *ngIf=\"!showMoreIcon\"\r\n                        (click)=\"resetSearch()\">\r\n                        <span class=\"f-icon f-icon-remove\"></span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n        <ng-template #gridLayout>\r\n            <div class=\"filter-inputs-main f-form-layout farris-form\" [ngClass]=\"\r\n                {'list-filter-type-1': getShowLength() === 1,\r\n                'list-filter-type-2': getShowLength() === 2,\r\n                'list-filter-type-3': getShowLength() === 3,\r\n                'list-filter-type-4': getShowLength() === 4,\r\n                'list-filter-type-5': getShowLength() === 5,\r\n                'list-filter-type-6': getShowLength() >= 6,\r\n                'list-filter-custom-type': this.filterClass,\r\n                'list-filter-show-reset': !showMoreIcon,\r\n                'list-filter-padding-none': liveSearch,\r\n                'farris-form-controls-inline':isControlInline}\">\r\n                <ng-container *ngFor=\"let formItem of listFilterConditions\">\r\n                    <div [ngClass]=\"getStyle(formItem)\" *ngIf=\"!formItem.control.isExtend\">\r\n                        <div class=\"filter-input-list farris-group-wrap\"\r\n                            [ngClass]=\"{'filter-input-list-autolabel': autoLabel,'filter-input-list-checkbox': getControlType(formItem) === 'checkboxgroup'}\"\r\n                            [id]=\"'filter-'+formItem.id\">\r\n                            <ng-container [ngTemplateOutlet]=\"filterInputTemplate\"\r\n                                [ngTemplateOutletContext]=\"{ item: formItem }\"></ng-container>\r\n                        </div>\r\n                    </div>\r\n                </ng-container>\r\n                <div class=\"filter-search-btn\" [ngClass]=\"{\r\n                    'filter-search-btn-type-1': getShowLength() === 1,\r\n                    'filter-search-btn-type-2': getShowLength() === 2,\r\n                    'filter-search-btn-type-3': getShowLength() === 3,\r\n                    'filter-search-btn-type-4': getShowLength() === 4,\r\n                    'filter-search-btn-type-5': getShowLength() === 5,\r\n                    'filter-search-custom-type': this.filterClass,\r\n                    'filter-search-btn-type-6': getShowLength() >= 6}\" *ngIf=\"!liveSearch\">\r\n                    <button class=\"btn btn-primary\" [ngClass]=\"{'disabled': disabled || !canSubmit}\"\r\n                        (click)=\"filterClick()\">{{ 'listFilter.filter' | locale }}</button>\r\n                    <button class=\"btn btn-secondary filter-search-btn-reset\" *ngIf=\"!showMoreIcon\"\r\n                        (click)=\"resetSearch()\">\r\n                        <span class=\"f-icon f-icon-remove\"></span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </ng-template>\r\n    </ng-template>\r\n    <div class=\"filter-expand position-absolute\" [class.active]=\"showFilter\" (click)=\"showFilter = !showFilter\"\r\n        *ngIf=\"showMoreIcon\">\r\n        <span class=\"f-icon f-icon-filtrate\"></span>\r\n        <span class=\"filter-expand-tag\" *ngIf=\"showExpandTag\"></span>\r\n    </div>\r\n    <div class=\"filter-inputs-extend position-absolute\" [hidden]=\"!showFilter\" *ngIf=\"showMoreIcon\">\r\n        <div class=\"filter-typelist-arrow\"></div>\r\n        <div class=\"farris-form farris-form-auto\" [ngClass]=\"{'farris-form-controls-inline':isControlInline}\">\r\n            <fieldset class=\"f-section-formgroup\">\r\n                <div class=\"f-section-formgroup-inputs\">\r\n                    <div class=\"col-12\">\r\n                        <ng-container *ngFor=\"let formItem of listFilterConditions\">\r\n                            <div class=\"filter-input-list farris-group-wrap\" *ngIf=\"formItem.control.isExtend\">\r\n                                <ng-container [ngTemplateOutlet]=\"filterInputTemplate\"\r\n                                    [ngTemplateOutletContext]=\"{ item: formItem }\"></ng-container>\r\n                            </div>\r\n                        </ng-container>\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n            <!-- bugNum:456508 -->\r\n            <div class=\"filter-form-btns text-right\">\r\n                <button class=\"btn btn-link filter-form-btn-reset\" (click)=\"resetSearch()\">{{ 'listFilter.reset' |\r\n                    locale }}</button>\r\n                <button class=\"btn btn-secondary\" (click)=\"listSearchCancel()\">{{ 'listFilter.cancel' | locale\r\n                    }}</button>\r\n                <button class=\"btn btn-primary\" [ngClass]=\"{'disabled': disabled || !canSubmit}\"\r\n                    (click)=\"listSearch()\">{{ 'listFilter.confirm' | locale }}</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<ng-template #filterInputTemplate let-item=\"item\">\r\n    <ng-container [ngSwitch]=\"item | controlType\">\r\n        <div class=\"filter-input-item filter-type-input\" *ngSwitchCase=\"'input'\">\r\n            <app-filter-input [item]=\"item\" [autoLabel]=\"autoLabel\" [disabled]=\"disabled\"\r\n                (searchHandle)=\"onSearch($event,item)\" class=\"form-group farris-form-group\"></app-filter-input>\r\n        </div>\r\n        <div class=\"filter-input-item filter-type-search\" *ngSwitchCase=\"'search'\">\r\n            <app-filter-search [item]=\"item\" [autoLabel]=\"autoLabel\" [disabled]=\"disabled\"\r\n                (searchHandle)=\"onSearch($event,item)\" class=\"form-group farris-form-group\"></app-filter-search>\r\n        </div>\r\n        <div class=\"filter-input-item filter-type-date\" *ngSwitchCase=\"'date'\">\r\n            <app-filter-date [changeFields]=\"fieldCodeOfClearFields\" [item]=\"item\" [autoLabel]=\"autoLabel\"\r\n                [disabled]=\"disabled\" (searchHandle)=\"onSearch($event,item)\" class=\"form-group farris-form-group\">\r\n            </app-filter-date>\r\n        </div>\r\n        <div class=\"filter-input-item filter-type-year\" *ngSwitchCase=\"'year'\">\r\n            <app-filter-date [changeFields]=\"fieldCodeOfClearFields\" [item]=\"item\" [autoLabel]=\"autoLabel\"\r\n                [disabled]=\"disabled\" [showType]=\"'3'\" (searchHandle)=\"onSearch($event,item)\"\r\n                class=\"form-group farris-form-group\"></app-filter-date>\r\n        </div>\r\n        <div class=\"filter-input-item filter-type-month\" *ngSwitchCase=\"'month'\">\r\n            <app-filter-date [changeFields]=\"fieldCodeOfClearFields\" [item]=\"item\" [autoLabel]=\"autoLabel\"\r\n                [disabled]=\"disabled\" [showType]=\"'2'\" (searchHandle)=\"onSearch($event,item)\"\r\n                class=\"form-group farris-form-group\"></app-filter-date>\r\n        </div>\r\n        <div class=\"filter-input-item filter-type-date\" *ngSwitchCase=\"'daterange'\">\r\n            <app-filter-daterange [changeFields]=\"fieldCodeOfClearFields\" [item]=\"item\" [autoLabel]=\"autoLabel\"\r\n                [disabled]=\"disabled\" (searchHandle)=\"onSearch($event,item)\" class=\"form-group farris-form-group\">\r\n            </app-filter-daterange>\r\n        </div>\r\n        <div class=\"filter-input-item filter-type-date\" *ngSwitchCase=\"'daterangetime'\">\r\n            <app-filter-daterange [changeFields]=\"fieldCodeOfClearFields\" [item]=\"item\" [autoLabel]=\"autoLabel\"\r\n                [disabled]=\"disabled\" [showTime]=\"true\" (searchHandle)=\"onSearch($event,item)\"\r\n                class=\"form-group farris-form-group\"></app-filter-daterange>\r\n        </div>\r\n        <div class=\"filter-input-item filter-type-monthrange\" *ngSwitchCase=\"'monthrange'\">\r\n            <app-filter-daterange [changeFields]=\"fieldCodeOfClearFields\" [item]=\"item\" [autoLabel]=\"autoLabel\"\r\n                [disabled]=\"disabled\" [showType]=\"'2'\" (searchHandle)=\"onSearch($event,item)\"\r\n                class=\"form-group farris-form-group\"></app-filter-daterange>\r\n        </div>\r\n        <div class=\"filter-input-item filter-type-yearrange\" *ngSwitchCase=\"'yearrange'\">\r\n            <app-filter-daterange [changeFields]=\"fieldCodeOfClearFields\" [item]=\"item\" [autoLabel]=\"autoLabel\"\r\n                [disabled]=\"disabled\" [showType]=\"'3'\" (searchHandle)=\"onSearch($event,item)\"\r\n                class=\"form-group farris-form-group\"></app-filter-daterange>\r\n        </div>\r\n        <div class=\"filter-input-item filter-type-dropdown\" *ngSwitchCase=\"'dropdown'\">\r\n            <app-filter-dropdown [changeFields]=\"fieldCodeOfClearFields\" [item]=\"item\" [autoLabel]=\"autoLabel\"\r\n                [disabled]=\"disabled\" (searchHandle)=\"onSearch($event,item)\" class=\"form-group farris-form-group\">\r\n            </app-filter-dropdown>\r\n        </div>\r\n        <div class=\"filter-input-item filter-type-number\" *ngSwitchCase=\"'number'\">\r\n            <app-filter-number [changeFields]=\"fieldCodeOfClearFields\" [item]=\"item\" [autoLabel]=\"autoLabel\"\r\n                [disabled]=\"disabled\" (searchHandle)=\"onSearch($event,item)\" class=\"form-group farris-form-group\">\r\n            </app-filter-number>\r\n        </div>\r\n        <div class=\"filter-input-item filter-type-help\" *ngSwitchCase=\"'help'\">\r\n            <app-filter-help [changeFields]=\"fieldCodeOfClearFields\" [item]=\"item\" [autoLabel]=\"autoLabel\"\r\n                [disabled]=\"disabled\" [hostRef]=\"this\" (searchHandle)=\"onSearch($event,item)\"\r\n                class=\"form-group farris-form-group\"></app-filter-help>\r\n        </div>\r\n        <div class=\"filter-input-item filter-type-checkboxgroup\" *ngSwitchCase=\"'checkboxgroup'\">\r\n            <app-filter-checkbox [changeFields]=\"fieldCodeOfClearFields\" [item]=\"item\" [autoLabel]=\"autoLabel\"\r\n                [disabled]=\"disabled\" (searchHandle)=\"onSearch($event,item)\" class=\"form-group farris-form-group\"\r\n                style=\"white-space: nowrap;\"></app-filter-checkbox>\r\n        </div>\r\n        <div class=\"filter-input-item filter-type-radio\" *ngSwitchCase=\"'radio'\">\r\n            <app-filter-radio [changeFields]=\"fieldCodeOfClearFields\" [item]=\"item\" [autoLabel]=\"autoLabel\"\r\n                [disabled]=\"disabled\" (searchHandle)=\"onSearch($event,item)\" class=\"form-group farris-form-group\"\r\n                style=\"white-space: nowrap;\"></app-filter-radio>\r\n        </div>\r\n        <div class=\"filter-input-item filter-type-input-group\" *ngSwitchCase=\"'input-group'\">\r\n            <app-filter-inputgroup [item]=\"item\" [autoLabel]=\"autoLabel\" [disabled]=\"disabled\"\r\n                (searchHandle)=\"onSearch($event,item)\" class=\"form-group farris-form-group\">\r\n            </app-filter-inputgroup>\r\n        </div>\r\n        <div class=\"filter-input-item filter-type-default\" *ngSwitchDefault>\r\n            <app-filter-input [item]=\"item\" [autoLabel]=\"autoLabel\" [disabled]=\"disabled\"\r\n                (searchHandle)=\"onSearch($event,item)\" class=\"form-group farris-form-group\"></app-filter-input>\r\n        </div>\r\n    </ng-container>\r\n</ng-template>",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: ["::-webkit-scrollbar{width:6px;height:6px;background-color:#eee}::-webkit-scrollbar-track{border-radius:0}::-webkit-scrollbar-thumb{background-color:rgba(0,0,0,.15);-webkit-transition:.2s;transition:.2s;border-radius:6px}::-webkit-scrollbar-thumb:hover{background-color:rgba(0,0,0,.45)}.filter-search-btn-col{flex-basis:0;-webkit-box-flex:1;flex-grow:1;max-width:100%}.filter-search-btn-absoulte{position:absolute;right:0;top:0}.f-list-filter .filter-inputs-main-basis-wrapper{width:100%;overflow:hidden}.f-list-filter .filter-inputs-main-basis-wrapper.list-filter-wrapper-show-btn{position:relative;padding-right:84px}.f-list-filter .filter-inputs-main-basis-wrapper.list-filter-wrapper-show-btn.list-filter-wrapper-show-btn-remove{padding-right:124px}.f-list-filter .filter-inputs-main-basis-wrapper.list-filter-wrapper-show-btn .filter-search-btn{position:absolute;right:0;top:0}.f-list-filter .filter-inputs-main-basis-wrapper.list-filter-wrapper-show-btn .filter-search-btn .btn{margin-left:6px}.f-list-filter .filter-inputs-main-basis-wrapper.list-filter-wrapper-show-btn .filter-search-btn .btn:first-child{margin-left:0}.f-list-filter .filter-inputs-main-basis-wrapper .filter-inputs-main-basis-wrapper-inner{width:100%;overflow:auto}.f-list-filter .filter-inputs-main-basis-wrapper .filter-inputs-main-basis-wrapper-inner .filter-inputs-main-basis.justify-content-end{margin-left:auto}.f-list-filter.list-filter-padding{padding-right:45px}.f-list-filter.list-filter-autoWidth{padding-bottom:8px}.f-list-filter.list-filter-autoWidth.list-filter-paddingnone{padding-bottom:0}@media (min-width:768px){.f-list-filter .list-filter-type-1{position:static;padding-right:0}.f-list-filter .list-filter-type-2,.f-list-filter .list-filter-type-3{position:relative;padding-right:70px}}@media (max-width:767px){.f-list-filter .list-filter-type-1{position:relative;padding-right:70px}.f-list-filter .list-filter-type-1.list-filter-show-reset{padding-right:110px}.f-list-filter .list-filter-type-2,.f-list-filter .list-filter-type-3{position:relative;padding-right:70px}.f-list-filter .list-filter-type-2.list-filter-show-reset,.f-list-filter .list-filter-type-3.list-filter-show-reset{position:relative;padding-right:110px}}@media (min-width:1200px){.f-list-filter .list-filter-type-2,.f-list-filter .list-filter-type-3{position:static;padding-right:0}.f-list-filter .list-filter-type-4,.f-list-filter .list-filter-type-5{position:relative;padding-right:70px}}@media (max-width:767px){.f-list-filter .list-filter-type-4,.f-list-filter .list-filter-type-5{position:relative;padding-right:70px}.f-list-filter .list-filter-type-4.list-filter-show-reset,.f-list-filter .list-filter-type-5.list-filter-show-reset{position:relative;padding-right:110px}}@media (min-width:768px){.f-list-filter .list-filter-type-2.list-filter-show-reset,.f-list-filter .list-filter-type-3.list-filter-show-reset{position:relative;padding-right:110px}.f-list-filter .list-filter-type-4,.f-list-filter .list-filter-type-5{position:relative;padding-right:70px}.f-list-filter .list-filter-type-4.list-filter-show-reset,.f-list-filter .list-filter-type-5.list-filter-show-reset{position:relative;padding-right:110px}}@media (min-width:1690px){.f-list-filter .list-filter-type-4,.f-list-filter .list-filter-type-5{position:static;padding-right:0}}@media (min-width:1200px){.f-list-filter .list-filter-type-4.list-filter-show-reset,.f-list-filter .list-filter-type-5.list-filter-show-reset{position:relative;padding-right:110px}}.f-list-filter .list-filter-custom-type,.f-list-filter .list-filter-type-6{position:relative;padding-right:70px}.f-list-filter .list-filter-custom-type.list-filter-show-reset,.f-list-filter .list-filter-type-6.list-filter-show-reset{padding-right:110px}.f-list-filter .list-filter-padding-none{padding-right:0}.f-list-filter .filter-inputs-main{width:100%;overflow:hidden}.f-list-filter .filter-inputs-main .col-12{padding-left:0}.f-list-filter .filter-inputs-main.filter-inputs-main-padding{padding-right:70px;position:relative}.f-list-filter .filter-inputs-main .filter-input-list.filter-input-list-autolabel{padding-right:14px}.f-list-filter .filter-inputs-main .filter-input-list.filter-input-list-autolabel:last-child{padding-right:0}.f-list-filter .filter-inputs-main .filter-input-list.filter-input-list-checkbox{max-width:none;-webkit-box-flex:inherit;flex:inherit}@media (max-width:767px){.f-list-filter .filter-inputs-main .filter-search-btn.filter-search-btn-type-1{position:absolute;right:0;top:0}}@media (min-width:768px){.f-list-filter .filter-inputs-main .filter-search-btn.filter-search-btn-type-1{flex-basis:0;-webkit-box-flex:1;flex-grow:1;max-width:100%;position:static}.f-list-filter .filter-inputs-main .filter-search-btn.filter-search-btn-type-2,.f-list-filter .filter-inputs-main .filter-search-btn.filter-search-btn-type-3{position:absolute;right:0;top:0}}@media (max-width:767px){.f-list-filter .filter-inputs-main .filter-search-btn.filter-search-btn-type-2,.f-list-filter .filter-inputs-main .filter-search-btn.filter-search-btn-type-3{position:absolute;right:0;top:0}}@media (min-width:1200px){.f-list-filter .filter-inputs-main .filter-search-btn.filter-search-btn-type-2,.f-list-filter .filter-inputs-main .filter-search-btn.filter-search-btn-type-3{flex-basis:0;-webkit-box-flex:1;flex-grow:1;max-width:100%;position:static}.f-list-filter .filter-inputs-main .filter-search-btn.filter-search-btn-type-4,.f-list-filter .filter-inputs-main .filter-search-btn.filter-search-btn-type-5{position:absolute;right:0;top:0}}@media (max-width:767px){.f-list-filter .filter-inputs-main .filter-search-btn.filter-search-btn-type-4,.f-list-filter .filter-inputs-main .filter-search-btn.filter-search-btn-type-5{position:absolute;right:0;top:0}}@media (min-width:768px){.f-list-filter .filter-inputs-main .filter-search-btn.filter-search-btn-type-4,.f-list-filter .filter-inputs-main .filter-search-btn.filter-search-btn-type-5{position:absolute;right:0;top:0}}@media (min-width:1690px){.f-list-filter .filter-inputs-main .filter-search-btn.filter-search-btn-type-4,.f-list-filter .filter-inputs-main .filter-search-btn.filter-search-btn-type-5{flex-basis:0;-webkit-box-flex:1;flex-grow:1;max-width:100%;position:static}}.f-list-filter .filter-inputs-main .filter-search-btn.filter-search-btn-type-6,.f-list-filter .filter-inputs-main .filter-search-btn.filter-search-custom-type{position:absolute;right:0;top:0}.f-list-filter .filter-inputs-main .filter-search-btn .btn{margin-left:6px}.f-list-filter .filter-inputs-main .filter-search-btn .btn:first-child{margin-left:0}.f-list-filter .filter-inputs-main.filter-inputs-main-basis .filter-input-list{min-width:200px}.f-list-filter .filter-inputs-main.filter-inputs-main-basis .filter-input-list .filter-input-item .form-group{margin-bottom:0}.f-list-filter .filter-inputs-main.filter-inputs-main-basis .filter-input-list.filter-input-list-left{-webkit-box-flex:1;flex:1 1 auto}.f-list-filter .filter-inputs-main.filter-inputs-main-basis .filter-input-list.filter-input-list-expand{max-width:none}.f-list-filter .filter-inputs-main.filter-inputs-main-basis.justify-content-end .filter-input-list:not(.filter-input-list-checkbox){-webkit-box-flex:1;flex:auto}.f-list-filter .filter-expand{right:0;top:0;width:24px;margin-left:21px;height:24px;line-height:24px;cursor:pointer}.f-list-filter .filter-expand.active{border-radius:2px}.f-list-filter .filter-expand .f-icon{display:block;line-height:24px;margin:0 auto;font-size:18px}.f-list-filter .filter-expand .filter-expand-tag{position:absolute;right:0;top:0;display:block;width:6px;height:6px;border-radius:50%}.f-list-filter .filter-inputs-extend{width:429px;right:0;top:34px;background-color:#fff;box-shadow:0 2px 3px 0 rgba(0,0,0,.15);z-index:900;padding:20px 0}.f-list-filter .filter-inputs-extend .filter-typelist-arrow{display:block;position:absolute;right:7px;top:-4px;width:8.48528137px;height:8.48528137px;background:0 0;border-style:solid;border-width:4.24264069px;box-shadow:-2px -2px 5px rgba(0,0,0,.08);-webkit-transform:translateX(-50%) rotate(45deg);transform:translateX(-50%) rotate(45deg);border-color:#fff transparent transparent #fff}.f-list-filter .filter-inputs-extend .filter-form-btns{margin-top:6px;padding:0 14px}.f-list-filter .filter-inputs-extend .filter-form-btns .btn{margin-left:6px}.f-list-filter .filter-inputs-extend .filter-form-btns .filter-form-btn-reset{position:relative;padding-right:10px;margin-right:4px}.f-list-filter .filter-inputs-extend .filter-form-btns .filter-form-btn-reset::after{content:'';position:absolute;right:0;top:50%;width:1px;height:16px;margin-top:-8px;background:#d9d9d9}.f-list-filter .filter-search-btn-reset{padding-left:4px;padding-right:4px;color:rgba(0,0,0,.65)}.f-list-filter .filter-input-list .form-group{display:block}.f-list-filter .farris-form-controls-inline .filter-input-list .form-group{display:-webkit-box;display:flex}.f-list-filter .filter-inputs-main-list .filter-input-item .farris-form-group{display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;-webkit-box-orient:horizontal;-webkit-box-direction:normal;flex-direction:row}.f-list-filter .filter-inputs-main-list .filter-list-item{padding-right:100px}.f-list-filter .filter-inputs-main-list .filter-list-item .filter-input-list{position:relative}.f-list-filter .filter-inputs-main-list .filter-list-item .filter-search-btn{display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;position:absolute;top:50%;left:calc(100% + 20px);-webkit-transform:translateY(-50%);transform:translateY(-50%)}.filter-expand-simulate{opacity:0;display:inline-block;width:24px;height:24px;padding-left:21px}.filter-expand-simulate .f-icon{font-size:24px}"]
            }] }
];
/** @nocollapse */
ListFilterComponent.ctorParameters = () => [
    { type: ListFilterService },
    { type: ChangeDetectorRef },
    { type: QuerySolutionService },
    { type: ConvertorService },
    { type: Renderer2 },
    { type: Injector, decorators: [{ type: Optional }] }
];
ListFilterComponent.propDecorators = {
    filterMainBasisRef: [{ type: ViewChild, args: ['filterMainBasis',] }],
    alLeft: [{ type: Input }],
    autoWidth: [{ type: Input }],
    liveSearch: [{ type: Input }],
    autoLabel: [{ type: Input }],
    disabled: [{ type: Input }],
    filterClass: [{ type: Input }],
    filterPaddingNone: [{ type: Input }],
    filterType: [{ type: Input }],
    defaultValue: [{ type: Input }],
    query: [{ type: Output }],
    clear: [{ type: Output }],
    searchChange: [{ type: Output }],
    isControlInline: [{ type: Input }],
    filterList: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    ListFilterComponent.prototype.filterMainBasisRef;
    /** @type {?} */
    ListFilterComponent.prototype.alLeft;
    /** @type {?} */
    ListFilterComponent.prototype.autoWidth;
    /** @type {?} */
    ListFilterComponent.prototype.liveSearch;
    /** @type {?} */
    ListFilterComponent.prototype.autoLabel;
    /** @type {?} */
    ListFilterComponent.prototype.disabled;
    /** @type {?} */
    ListFilterComponent.prototype.filterClass;
    /** @type {?} */
    ListFilterComponent.prototype.filterPaddingNone;
    /** @type {?} */
    ListFilterComponent.prototype.filterType;
    /** @type {?} */
    ListFilterComponent.prototype._defaultValue;
    /** @type {?} */
    ListFilterComponent.prototype.query;
    /** @type {?} */
    ListFilterComponent.prototype.clear;
    /** @type {?} */
    ListFilterComponent.prototype.searchChange;
    /** @type {?} */
    ListFilterComponent.prototype.filterDatas;
    /** @type {?} */
    ListFilterComponent.prototype.showExpandTag;
    /**
     * 搜索表单列表
     * @type {?}
     */
    ListFilterComponent.prototype._filterList;
    /**
     * 是否需要显示展开更多icon
     * @type {?}
     */
    ListFilterComponent.prototype.showMoreIcon;
    /** @type {?} */
    ListFilterComponent.prototype.showFilter;
    /** @type {?} */
    ListFilterComponent.prototype.formExpand;
    /**
     * 循环表单
     * @type {?}
     */
    ListFilterComponent.prototype.listFilterConditions;
    /**
     * 用来存储setvalue前数据
     * @type {?}
     */
    ListFilterComponent.prototype.stagListFilterConditions;
    /**
     * 记录默认收起的搜索表单列表
     * @type {?}
     */
    ListFilterComponent.prototype.extendFilterList;
    /**
     * 记录显示的搜索表单列表
     * @type {?}
     */
    ListFilterComponent.prototype.showFilterList;
    /**
     * 显示中表单的必填项
     * @type {?}
     */
    ListFilterComponent.prototype.requiredListFilter;
    /**
     * 表单是否允许提交
     * @type {?}
     */
    ListFilterComponent.prototype.canSubmit;
    /**
     * 扩展表单是否允许提交
     * @type {?}
     */
    ListFilterComponent.prototype.localeIds;
    /** @type {?} */
    ListFilterComponent.prototype.currentLocale;
    /** @type {?} */
    ListFilterComponent.prototype.isControlInline;
    /**
     * 组件服务接口
     * @type {?}
     */
    ListFilterComponent.prototype.listfilterHandler;
    /** @type {?} */
    ListFilterComponent.prototype.fieldCodeOfClearFields;
    /**
     * @type {?}
     * @private
     */
    ListFilterComponent.prototype.filterService;
    /**
     * @type {?}
     * @private
     */
    ListFilterComponent.prototype.cd;
    /**
     * @type {?}
     * @private
     */
    ListFilterComponent.prototype.handler;
    /**
     * @type {?}
     * @private
     */
    ListFilterComponent.prototype.convertorService;
    /**
     * @type {?}
     * @private
     */
    ListFilterComponent.prototype.render;
    /**
     * @type {?}
     * @private
     */
    ListFilterComponent.prototype.injector;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdC1maWx0ZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy91aS1saXN0LWZpbHRlci8iLCJzb3VyY2VzIjpbImxpYi9saXN0LWZpbHRlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFDSCxTQUFTLEVBQVUsS0FBSyxFQUFFLFNBQVMsRUFBaUIsaUJBQWlCLEVBQ3JFLHVCQUF1QixFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUUsVUFBVSxFQUN6RCxTQUFTLEVBQUUsUUFBUSxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUUsV0FBVyxFQUN4RCxNQUFNLGVBQWUsQ0FBQztBQUd2QixPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDbkQsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFDbEUsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0seUNBQXlDLENBQUM7QUFDL0UsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDOUQsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLG1DQUFtQyxDQUFDO0FBQzlELE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUM5RCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSwyQ0FBMkMsQ0FBQztBQUM5RSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sd0NBQXdDLENBQUM7QUFDeEUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0seUNBQXlDLENBQUM7QUFDM0UsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLHFDQUFxQyxDQUFDO0FBQ2xFLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUM5RCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSw0Q0FBNEMsQ0FBQztBQUVoRixPQUFPLEVBQXFCLHdCQUF3QixFQUFFLE1BQU0sK0JBQStCLENB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T25Jbml0LCBJbnB1dCwgVmlld0NoaWxkLCBBZnRlclZpZXdJbml0LCBDaGFuZ2VEZXRlY3RvclJlZixcclxuICAgIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBPdXRwdXQsIEV2ZW50RW1pdHRlciwgRWxlbWVudFJlZixcclxuICAgIFJlbmRlcmVyMiwgSW5qZWN0b3IsIExPQ0FMRV9JRCwgT3B0aW9uYWwsIEluamVjdEZsYWdzXHJcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEZpZWxkQ29uZmlnIH0gZnJvbSAnLi9lbnRpdHkvZmllbGRjb25maWcvZmllbGRjb25maWcnO1xyXG5pbXBvcnQgeyBRdWVyeUNvbmRpdGlvbiB9IGZyb20gJy4vZW50aXR5L3F1ZXJ5Y29uZGl0aW9uJztcclxuaW1wb3J0IHsgQ29udHJvbFR5cGUgfSBmcm9tICcuL2VudGl0eS9jb250cm9sdHlwZSc7XHJcbmltcG9ydCB7IExpc3RGaWx0ZXJTZXJ2aWNlIH0gZnJvbSAnLi9zZXJ2aWNlL2xpc3QtZmlsdGVyLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBRdWVyeVNvbHV0aW9uU2VydmljZSB9IGZyb20gJy4vc3VibWl0aGFuZGxlcnMvcXVlcnktc29sdXRpb24uc2VydmljZSc7XHJcbmltcG9ydCB7IENvbnZlcnRvclNlcnZpY2UgfSBmcm9tICcuL3NlcnZpY2UvY29udmVydG9yc2VydmljZSc7XHJcbmltcG9ydCB7IFRleHRWYWx1ZSB9IGZyb20gJy4vZW50aXR5L2NvbmRpdGlvbnZhbHVlL3RleHR2YWx1ZSc7XHJcbmltcG9ydCB7IEhlbHBWYWx1ZSB9IGZyb20gJy4vZW50aXR5L2NvbmRpdGlvbnZhbHVlL2hlbHB2YWx1ZSc7XHJcbmltcG9ydCB7IERyb3BEb3duTGlzdFZhbHVlIH0gZnJvbSAnLi9lbnRpdHkvY29uZGl0aW9udmFsdWUvZHJvcGRvd25saXN0dmFsdWUnO1xyXG5pbXBvcnQgeyBEYXRlUmFuZ2VWYWx1ZSB9IGZyb20gJy4vZW50aXR5L2NvbmRpdGlvbnZhbHVlL2RhdGVyYW5nZXZhbHVlJztcclxuaW1wb3J0IHsgTnVtYmVyUmFuZ2VWYWx1ZSB9IGZyb20gJy4vZW50aXR5L2NvbmRpdGlvbnZhbHVlL251bWJlcnJhbmdldmF1ZSc7XHJcbmltcG9ydCB7IFNlYXJjaFZhbHVlIH0gZnJvbSAnLi9lbnRpdHkvY29uZGl0aW9udmFsdWUvc2VhcmNodmFsdWUnO1xyXG5pbXBvcnQgeyBEYXRlVmFsdWUgfSBmcm9tICcuL2VudGl0eS9jb25kaXRpb252YWx1ZS9kYXRldmFsdWUnO1xyXG5pbXBvcnQgeyBDaGVja2JveEdyb3VwVmFsdWUgfSBmcm9tICcuL2VudGl0eS9jb25kaXRpb252YWx1ZS9jaGVja2JveGdyb3VwdmFsdWUnO1xyXG5pbXBvcnQgeyBEYXRlUmFuZ2VUaW1lVmFsdWUgfSBmcm9tICcuL2VudGl0eS9jb25kaXRpb252YWx1ZS9kYXRlcmFuZ2V0aW1ldmFsdWUnO1xyXG5pbXBvcnQgeyBMaXN0RmlsdGVySGFuZGxlciwgTElTVEZJTFRFUl9IQU5ETEVSX1RPS0VOIH0gZnJvbSAnLi9pbnRlcmZhY2UvSWlzdEZpbHRlckhhbmRsZXInO1xyXG5pbXBvcnQgeyBSYWRpb0dyb3VwVmFsdWUgfSBmcm9tICcuL2VudGl0eS9jb25kaXRpb252YWx1ZS9yYWRpb3ZhbHVlJztcclxuaW1wb3J0IHsgTW9udGhWYWx1ZSB9IGZyb20gJy4vZW50aXR5L2NvbmRpdGlvbnZhbHVlL21vbnRoJztcclxuaW1wb3J0IHsgWWVhclZhbHVlIH0gZnJvbSAnLi9lbnRpdHkvY29uZGl0aW9udmFsdWUveWVhcnZhbHVlJztcclxuaW1wb3J0IHsgWWVhclJhbmdlVmFsdWUgfSBmcm9tICcuL2VudGl0eS9jb25kaXRpb252YWx1ZS95ZWFycmFuZ2UnO1xyXG5pbXBvcnQgeyBNb250aFJhbmdlVmFsdWUgfSBmcm9tICcuL2VudGl0eS9jb25kaXRpb252YWx1ZS9tb250aHJhbmdlJztcclxuaW1wb3J0IHsgSW5wdXRHcm91cFZhbHVlIH0gZnJvbSAnLi9lbnRpdHkvY29uZGl0aW9udmFsdWUvaW5wdXRncm91cCc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICAgIHNlbGVjdG9yOiAnZmFycmlzLWxpc3QtZmlsdGVyJyxcclxuICAgIHRlbXBsYXRlVXJsOiAnLi9saXN0LWZpbHRlci5jb21wb25lbnQuaHRtbCcsXHJcbiAgICBzdHlsZVVybHM6IFsnLi9saXN0LWZpbHRlci5jb21wb25lbnQuc2NzcyddLFxyXG4gICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2hcclxufSlcclxuZXhwb3J0IGNsYXNzIExpc3RGaWx0ZXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIEFmdGVyVmlld0luaXQge1xyXG5cclxuICAgIEBWaWV3Q2hpbGQoJ2ZpbHRlck1haW5CYXNpcycpIGZpbHRlck1haW5CYXNpc1JlZjogRWxlbWVudFJlZjtcclxuICAgIC8vICDooajljZXlt6blr7npvZBcclxuICAgIEBJbnB1dCgpIGFsTGVmdCA9IGZhbHNlO1xyXG4gICAgLy8gIOW5s+WIhuepuumXtFxyXG4gICAgQElucHV0KCkgYXV0b1dpZHRoID0gdHJ1ZTtcclxuICAgIC8vICDlrp7ml7bmkJzntKJcclxuICAgIEBJbnB1dCgpIGxpdmVTZWFyY2ggPSBmYWxzZTtcclxuICAgIC8vICBsYWJlbOeahOWuveW6puaYr+WQpuiHqumAguW6lFxyXG4gICAgQElucHV0KCkgYXV0b0xhYmVsID0gZmFsc2U7XHJcbiAgICAvLyAg5piv5ZCm56aB55SoXHJcbiAgICBASW5wdXQoKSBkaXNhYmxlZCA9IGZhbHNlO1xyXG5cclxuICAgIEBJbnB1dCgpIGZpbHRlckNsYXNzOiBzdHJpbmc7XHJcbiAgICBASW5wdXQoKSBmaWx0ZXJQYWRkaW5nTm9uZSA9IGZhbHNlO1xyXG5cclxuICAgIEBJbnB1dCgpIGZpbHRlclR5cGU6IHN0cmluZztcclxuICAgIC8vIOWIneWni+WMluWAvFxyXG4gICAgX2RlZmF1bHRWYWx1ZTogRmllbGRDb25maWdbXTtcclxuICAgIEBJbnB1dCgpXHJcbiAgICBzZXQgZGVmYXVsdFZhbHVlKGNvbmZpZ3M6IEZpZWxkQ29uZmlnW10pIHtcclxuICAgICAgICB0aGlzLl9kZWZhdWx0VmFsdWUgPSBjb25maWdzO1xyXG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLnNldEZpbHRlclZhbHVlKHRoaXMuX2RlZmF1bHRWYWx1ZSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICBnZXQgZGVmYXVsdFZhbHVlKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9kZWZhdWx0VmFsdWU7XHJcbiAgICB9XHJcblxyXG4gICAgQE91dHB1dCgpIHF1ZXJ5ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xyXG4gICAgQE91dHB1dCgpIGNsZWFyID0gbmV3IEV2ZW50RW1pdHRlcigpO1xyXG4gICAgQE91dHB1dCgpIHNlYXJjaENoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuXHJcbiAgICBmaWx0ZXJEYXRhczogQXJyYXk8RmllbGRDb25maWc+O1xyXG4gICAgLy8gIGZpbHRlcldpZHRoOm51bWJlciA9IDEwMDA7XHJcbiAgICAvLyAg5qCH6K6w5piv5ZCm5pyJ5rua5Yqo5p2hXHJcbiAgICAvLyAgaGFzU2Nyb2xsID0gdHJ1ZTtcclxuICAgIC8vICDpnIDopoHnm5HlkKzmlLbmipjnmoTooajljZVcclxuICAgIC8vICByZXNpemVHcm91cHM6IGxpc3RGaWx0ZXJHcm91cDtcclxuICAgIC8vIOetm+mAiWljb27pg6jliIblsI/nuqLngrlcclxuICAgIHNob3dFeHBhbmRUYWcgPSBmYWxzZTtcclxuICAgIC8vICDlk43lupTlvI/lrrnlmahcclxuICAgIC8vICBAVmlld0NoaWxkKCdyZXNpemVkQ29udGFpbmVyJykgcmVzaXplZENvbnRhaW5lckVsO1xyXG4gICAgLy8gIOWTjeW6lOW8j+WGheWuueWuueWZqFxyXG4gICAgLy8gIEBWaWV3Q2hpbGQoJ3Jlc2l6ZWRDb250ZW50JykgcmVzaXplZENvbnRlbnRFbDtcclxuICAgIC8vICBAVmlld0NoaWxkKCdyZXNpemVMaXN0cycpIHJlc2l6ZUxpc3RzRWw7XHJcbiAgICAvLyAgQFZpZXdDaGlsZCgnc2ltdWxhdGVFeHRlbmQnKSBzaW11bGF0ZUV4dGVuZEVsO1xyXG5cclxuICAgIC8vICBAVmlld0NoaWxkKCdyZXNpemVkQ29udGFpbmVyJywgeyByZWFkOiBGUmVzaXplZERpcmVjdGl2ZSB9KVxyXG4gICAgLy8gIHJlc2l6ZWRDb250YWluZXJEaXJlY3RpdmU6IEZSZXNpemVkRGlyZWN0aXZlO1xyXG5cclxuICAgIC8qKiDmkJzntKLooajljZXliJfooaggKi9cclxuICAgIF9maWx0ZXJMaXN0OiBBcnJheTxhbnk+O1xyXG5cclxuICAgIC8qKiDmmK/lkKbpnIDopoHmmL7npLrlsZXlvIDmm7TlpJppY29uICovXHJcbiAgICBzaG93TW9yZUljb24gPSBmYWxzZTtcclxuICAgIC8vICBtb3JlSWNvbldpZHRoOm51bWJlciA9IDA7XHJcbiAgICBzaG93RmlsdGVyID0gZmFsc2U7XHJcbiAgICAvLyDmmK/lkKblsZXnjrDlh7rnmoTlj6rmnInkuIDkuKrmkJzntKLmjqfku7ZcclxuICAgIGZvcm1FeHBhbmQgPSBmYWxzZTtcclxuICAgIC8vIOaPkOS6pOihqOWNleaVsOaNrlxyXG4gICAgLy8gIHF1ZXJ5TGlzdDtcclxuICAgIC8vIOmakOiXj+aPkOS6pOihqOWNleaVsOaNrlxyXG4gICAgLy8gIGV4dGVuZHF1ZXJ5TGlzdDtcclxuICAgIC8qKiDlvqrnjq/ooajljZUgKi9cclxuICAgIGxpc3RGaWx0ZXJDb25kaXRpb25zOiBBcnJheTxRdWVyeUNvbmRpdGlvbj4gPSBuZXcgQXJyYXk8UXVlcnlDb25kaXRpb24+KCk7XHJcbiAgICAvKiog55So5p2l5a2Y5YKoc2V0dmFsdWXliY3mlbDmja4gKi9cclxuICAgIHN0YWdMaXN0RmlsdGVyQ29uZGl0aW9uczogQXJyYXk8UXVlcnlDb25kaXRpb24+ID0gbmV3IEFycmF5PFF1ZXJ5Q29uZGl0aW9uPigpO1xyXG4gICAgLyoqIOiusOW9lem7mOiupOaUtui1t+eahOaQnOe0ouihqOWNleWIl+ihqCAqL1xyXG4gICAgZXh0ZW5kRmlsdGVyTGlzdDogQXJyYXk8UXVlcnlDb25kaXRpb24+ID0gW107XHJcbiAgICAvKiog6K6w5b2V5pi+56S655qE5pCc57Si6KGo5Y2V5YiX6KGoICovXHJcbiAgICBzaG93RmlsdGVyTGlzdDogQXJyYXk8UXVlcnlDb25kaXRpb24+ID0gW107XHJcbiAgICAvKiog5pi+56S65Lit6KGo5Y2V55qE5b+F5aGr6aG5ICovXHJcbiAgICByZXF1aXJlZExpc3RGaWx0ZXI6IEFycmF5PFF1ZXJ5Q29uZGl0aW9uPiA9IFtdO1xyXG4gICAgLyoqIOmakOiXj+S4reihqOWNleeahOW/heWhq+mhuSAqL1xyXG4gICAgLy8gIGV4dGVuZFJlcXVpcmVkTGlzdEZpbHRlcjogQXJyYXk8UXVlcnlDb25kaXRpb24+ID0gW107XHJcbiAgICAvKiog6KGo5Y2V5piv5ZCm5YWB6K645o+Q5LqkICovXHJcbiAgICBjYW5TdWJtaXQgPSBmYWxzZTtcclxuICAgIC8qKiDmianlsZXooajljZXmmK/lkKblhYHorrjmj5DkuqQgKi9cclxuICAgIC8vICBleHRlbmRDYW5TdWJtaXQ6Ym9vbGVhbiA9IGZhbHNlO1xyXG5cclxuICAgIGxvY2FsZUlkcyA9IHtcclxuICAgICAgICBlbjogJ2VuJyxcclxuICAgICAgICAnemgtQ0hTJzogJ3poLUNIUydcclxuICAgIH07XHJcbiAgICBjdXJyZW50TG9jYWxlID0gJ3poLUNIUyc7XHJcbiAgICBASW5wdXQoKSBpc0NvbnRyb2xJbmxpbmUgPSB0cnVlO1xyXG5cclxuICAgIEBJbnB1dCgpXHJcbiAgICBnZXQgZmlsdGVyTGlzdCgpOiBBcnJheTxhbnk+IHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fZmlsdGVyTGlzdDtcclxuICAgIH1cclxuICAgIHNldCBmaWx0ZXJMaXN0KGZpbHRlckxpc3Q6IEFycmF5PGFueT4pIHtcclxuICAgICAgICB0aGlzLl9maWx0ZXJMaXN0ID0gZmlsdGVyTGlzdDtcclxuICAgICAgICB0aGlzLmluaXRGaWx0ZXJMaXN0KCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDnu4Tku7bmnI3liqHmjqXlj6NcclxuICAgICAqL1xyXG4gICAgbGlzdGZpbHRlckhhbmRsZXI6IExpc3RGaWx0ZXJIYW5kbGVyO1xyXG4gICAgXHJcbiAgICBmaWVsZENvZGVPZkNsZWFyRmllbGRzOiBBcnJheTxzdHJpbmc+ID0gW107XHJcbiAgICBjb25zdHJ1Y3RvcihcclxuICAgICAgICBwcml2YXRlIGZpbHRlclNlcnZpY2U6IExpc3RGaWx0ZXJTZXJ2aWNlLFxyXG4gICAgICAgIHByaXZhdGUgY2Q6IENoYW5nZURldGVjdG9yUmVmLFxyXG4gICAgICAgIHByaXZhdGUgaGFuZGxlcjogUXVlcnlTb2x1dGlvblNlcnZpY2UsXHJcbiAgICAgICAgcHJpdmF0ZSBjb252ZXJ0b3JTZXJ2aWNlOiBDb252ZXJ0b3JTZXJ2aWNlLFxyXG4gICAgICAgIHByaXZhdGUgcmVuZGVyOiBSZW5kZXJlcjIsXHJcbiAgICAgICAgQE9wdGlvbmFsKCkgcHJpdmF0ZSBpbmplY3RvcjogSW5qZWN0b3IsXHJcbiAgICApIHtcclxuICAgICAgICBpZiAodGhpcy5pbmplY3Rvcikge1xyXG4gICAgICAgICAgICB0aGlzLmN1cnJlbnRMb2NhbGUgPSB0aGlzLmluamVjdG9yLmdldChMT0NBTEVfSUQpO1xyXG4gICAgICAgICAgICB0aGlzLmxpc3RmaWx0ZXJIYW5kbGVyID0gdGhpcy5pbmplY3Rvci5nZXQ8TGlzdEZpbHRlckhhbmRsZXI+KExJU1RGSUxURVJfSEFORExFUl9UT0tFTiwgbnVsbCwgSW5qZWN0RmxhZ3MuT3B0aW9uYWwpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBuZ09uSW5pdCgpIHtcclxuICAgICAgICAvLyBpZiAodGhpcy5jdXJyZW50TG9jYWxlID09PSB0aGlzLmxvY2FsZUlkc1snZW4nXSkge1xyXG4gICAgICAgIC8vICAgICB0aGlzLmlzQ29udHJvbElubGluZSA9IGZhbHNlO1xyXG4gICAgICAgIC8vIH0gZWxzZSB7XHJcbiAgICAgICAgLy8gICAgIHRoaXMuaXNDb250cm9sSW5saW5lID0gdHJ1ZTtcclxuICAgICAgICAvLyB9XHJcbiAgICAgICAgdGhpcy5jYW5TaG93TW9yZUljb24oKTtcclxuICAgIH1cclxuXHJcbiAgICBuZ0FmdGVyVmlld0luaXQoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuYXV0b1dpZHRoICYmICF0aGlzLmZvcm1FeHBhbmQgJiYgdGhpcy5maWx0ZXJNYWluQmFzaXNSZWYpIHtcclxuICAgICAgICAgICAgY29uc3QgYmFzaWNMaXN0ID0gdGhpcy5maWx0ZXJNYWluQmFzaXNSZWYubmF0aXZlRWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuZmlsdGVyLWlucHV0LWxpc3QnKTtcclxuICAgICAgICAgICAgbGV0IGJhc2ljV2lkdGggPSAwO1xyXG4gICAgICAgICAgICBpZiAoYmFzaWNMaXN0ICYmIGJhc2ljTGlzdC5sZW5ndGgpIHtcclxuICAgICAgICAgICAgICAgIGZvciAobGV0IGsgPSAwOyBrIDwgYmFzaWNMaXN0Lmxlbmd0aDsgaysrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc3Qgb2ZmVyA9IE1hdGguY2VpbChwYXJzZUZsb2F0KGJhc2ljTGlzdFtrXS5vZmZzZXRXaWR0aCB8fCAwKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKG9mZlcgPiAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJhc2ljV2lkdGggKz0gb2ZmVztcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKGJhc2ljV2lkdGggPiAwKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnJlbmRlci5zZXRTdHlsZSh0aGlzLmZpbHRlck1haW5CYXNpc1JlZi5uYXRpdmVFbGVtZW50LCAnd2lkdGgnLCBiYXNpY1dpZHRoICsgJ3B4Jyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgfVxyXG4gICAgLyoqIOWIneWni+WMluWkhOeQhuihqOWNleaVsOaNriAqL1xyXG4gICAgaW5pdEZpbHRlckxpc3QoKSB7XHJcbiAgICAgICAgdGhpcy5saXN0RmlsdGVyQ29uZGl0aW9ucyA9IG5ldyBBcnJheTxRdWVyeUNvbmRpdGlvbj4oKTtcclxuICAgICAgICB0aGlzLmV4dGVuZEZpbHRlckxpc3QgPSBbXTtcclxuICAgICAgICB0aGlzLnNob3dGaWx0ZXJMaXN0ID0gW107XHJcbiAgICAgICAgdGhpcy5maWx0ZXJEYXRhcyA9IHRoaXMuZmlsdGVyU2VydmljZS5maWVsZFNjaGVtYXNDb252ZXJ0KHRoaXMuX2ZpbHRlckxpc3QpO1xyXG4gICAgICAgIGlmICh0aGlzLmZpbHRlckRhdGFzICYmIHRoaXMuZmlsdGVyRGF0YXMubGVuZ3RoKSB7XHJcbiAgICAgICAgICAgIHRoaXMubGlzdEZpbHRlckNvbmRpdGlvbnMgPSB0aGlzLmNvbnZlcnRvclNlcnZpY2UuZ2V0U2VsZWN0ZWRGaWVsZENvbmRpdGlvbnModGhpcy5maWx0ZXJEYXRhcywgdGhpcy5saXN0RmlsdGVyQ29uZGl0aW9ucyk7XHJcbiAgICAgICAgICAgIHRoaXMuc3RhZ0xpc3RGaWx0ZXJDb25kaXRpb25zID0gdGhpcy5saXN0RmlsdGVyQ29uZGl0aW9ucy5tYXAobyA9PiAoeyAuLi5vIH0pKTtcclxuICAgICAgICAgICAgLy8g5a2Y5YKo5omp5bGV6aG55ZKM6buY6K6k5bGV56S66KGo5Y2VXHJcbiAgICAgICAgICAgIHRoaXMubGlzdEZpbHRlckNvbmRpdGlvbnMuZm9yRWFjaChmaWVsZCA9PiB7XHJcbiAgICAgICAgICAgICAgICBpZiAoZmllbGQuY29udHJvbC5pc0V4dGVuZCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZXh0ZW5kRmlsdGVyTGlzdC5wdXNoKGZpZWxkKTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93RmlsdGVyTGlzdC5wdXNoKGZpZWxkKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIC8vIOWIpOaWreaYr+WQpuaYr+W3puWvuem9kCDlj6rmnInkuIDkuKrmkJzntKJcclxuICAgICAgICAgICAgY29uc3QgX2Jhc2lzRmlsdGVyTGlzdCA9IHRoaXMubGlzdEZpbHRlckNvbmRpdGlvbnMuZmlsdGVyKChmaWVsZCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuICFmaWVsZC5jb250cm9sLmlzRXh0ZW5kO1xyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICBpZiAoX2Jhc2lzRmlsdGVyTGlzdCAmJiBfYmFzaXNGaWx0ZXJMaXN0Lmxlbmd0aCA9PT0gMSAmJiB0aGlzLmdldENvbnRyb2xUeXBlKF9iYXNpc0ZpbHRlckxpc3RbMF0pID09PSAnc2VhcmNoJykge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5mb3JtRXhwYW5kID0gdHJ1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLnNlYXJjaENoYW5nZS5lbWl0KHRoaXMubGlzdEZpbHRlckNvbmRpdGlvbnMpO1xyXG4gICAgICAgICAgICB0aGlzLmluU2V0Q3VycmVudEZpbHRlckNvbmRpdGlvbnMoKTtcclxuICAgICAgICAgICAgLy8g5a2Y5YKo6buY6K6k5bGV56S65Lit5b+F5aGr6aG5XHJcbiAgICAgICAgICAgIHRoaXMucmVxdWlyZWRMaXN0SW5pdCgpO1xyXG4gICAgICAgICAgICB0aGlzLmNhblNob3dNb3JlSWNvbigpO1xyXG4gICAgICAgICAgICAvLyAgdGhpcy5saXN0U2VhcmNoKCk7XHJcbiAgICAgICAgICAgIHRoaXMuY2QuZGV0ZWN0Q2hhbmdlcygpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBpblNldEN1cnJlbnRGaWx0ZXJDb25kaXRpb25zKCkge1xyXG4gICAgICAgIGlmICh0aGlzLmxpc3RmaWx0ZXJIYW5kbGVyKSB7XHJcbiAgICAgICAgICAgIHRoaXMubGlzdGZpbHRlckhhbmRsZXIuc2V0Q3VycmVudEZpbHRlckNvbmRpdGlvbnModGhpcy5saXN0RmlsdGVyQ29uZGl0aW9ucyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuXHJcbiAgICAvKipcclxuICAgICAqIOiOt+WPluaOp+S7tuexu+Wei1xyXG4gICAgICogQHBhcmFtIHNlbGVjdGVkRmllbGRDb25kaXRpb25cclxuICAgICAqL1xyXG4gICAgZ2V0Q29udHJvbFR5cGUoc2VsZWN0ZWRGaWVsZENvbmRpdGlvbjogUXVlcnlDb25kaXRpb24pOiBzdHJpbmcge1xyXG4gICAgICAgIGlmIChzZWxlY3RlZEZpZWxkQ29uZGl0aW9uKSB7XHJcbiAgICAgICAgICAgIGlmIChzZWxlY3RlZEZpZWxkQ29uZGl0aW9uLmNvbnRyb2wuZ2V0Q29udHJvbFR5cGUoKSA9PSBDb250cm9sVHlwZS5UZXh0KSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gJ2lucHV0JztcclxuICAgICAgICAgICAgfSBlbHNlIGlmIChzZWxlY3RlZEZpZWxkQ29uZGl0aW9uLmNvbnRyb2wuZ2V0Q29udHJvbFR5cGUoKSA9PSBDb250cm9sVHlwZS5TZWFyY2gpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiAnc2VhcmNoJztcclxuICAgICAgICAgICAgfSBlbHNlIGlmIChzZWxlY3RlZEZpZWxkQ29uZGl0aW9uLmNvbnRyb2wuZ2V0Q29udHJvbFR5cGUoKSA9PSBDb250cm9sVHlwZS5EYXRlKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gJ2RhdGUnO1xyXG4gICAgICAgICAgICB9IGVsc2UgaWYgKHNlbGVjdGVkRmllbGRDb25kaXRpb24uY29udHJvbC5nZXRDb250cm9sVHlwZSgpID09IENvbnRyb2xUeXBlLk1vbnRoKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gJ21vbnRoJztcclxuICAgICAgICAgICAgfSBlbHNlIGlmIChzZWxlY3RlZEZpZWxkQ29uZGl0aW9uLmNvbnRyb2wuZ2V0Q29udHJvbFR5cGUoKSA9PSBDb250cm9sVHlwZS5ZZWFyKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gJ3llYXInO1xyXG4gICAgICAgICAgICB9IGVsc2UgaWYgKHNlbGVjdGVkRmllbGRDb25kaXRpb24uY29udHJvbC5nZXRDb250cm9sVHlwZSgpID09IENvbnRyb2xUeXBlLkRhdGVSYW5nZSkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuICdkYXRlcmFuZ2UnO1xyXG4gICAgICAgICAgICB9IGVsc2UgaWYgKHNlbGVjdGVkRmllbGRDb25kaXRpb24uY29udHJvbC5nZXRDb250cm9sVHlwZSgpID09IENvbnRyb2xUeXBlLkRhdGVSYW5nZVRpbWUpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiAnZGF0ZXJhbmdldGltZSc7XHJcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoc2VsZWN0ZWRGaWVsZENvbmRpdGlvbi5jb250cm9sLmdldENvbnRyb2xUeXBlKCkgPT0gQ29udHJvbFR5cGUuTW9udGhSYW5nZSkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuICdtb250aHJhbmdlJztcclxuICAgICAgICAgICAgfSBlbHNlIGlmIChzZWxlY3RlZEZpZWxkQ29uZGl0aW9uLmNvbnRyb2wuZ2V0Q29udHJvbFR5cGUoKSA9PSBDb250cm9sVHlwZS5ZZWFyUmFuZ2UpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiAneWVhcnJhbmdlJztcclxuICAgICAgICAgICAgfSBlbHNlIGlmIChzZWxlY3RlZEZpZWxkQ29uZGl0aW9uLmNvbnRyb2wuZ2V0Q29udHJvbFR5cGUoKSA9PSBDb250cm9sVHlwZS5Ecm9wRG93bikge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuICdkcm9wZG93bic7XHJcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoc2VsZWN0ZWRGaWVsZENvbmRpdGlvbi5jb250cm9sLmdldENvbnRyb2xUeXBlKCkgPT0gQ29udHJvbFR5cGUuTnVtYmVyUmFuZ2UpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiAnbnVtYmVyJztcclxuICAgICAgICAgICAgfSBlbHNlIGlmIChzZWxlY3RlZEZpZWxkQ29uZGl0aW9uLmNvbnRyb2wuZ2V0Q29udHJvbFR5cGUoKSA9PSBDb250cm9sVHlwZS5IZWxwKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gJ2hlbHAnO1xyXG4gICAgICAgICAgICB9IGVsc2UgaWYgKHNlbGVjdGVkRmllbGRDb25kaXRpb24uY29udHJvbC5nZXRDb250cm9sVHlwZSgpID09IENvbnRyb2xUeXBlLkNoZWNrYm94R3JvdXApIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiAnY2hlY2tib3hncm91cCc7XHJcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoc2VsZWN0ZWRGaWVsZENvbmRpdGlvbi5jb250cm9sLmdldENvbnRyb2xUeXBlKCkgPT0gQ29udHJvbFR5cGUuUmFkaW8pIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiAncmFkaW8nO1xyXG4gICAgICAgICAgICB9IGVsc2UgaWYgKHNlbGVjdGVkRmllbGRDb25kaXRpb24uY29udHJvbC5nZXRDb250cm9sVHlwZSgpID09IENvbnRyb2xUeXBlLklucHV0R3JvdXApIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiAnaW5wdXQtZ3JvdXAnO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuICdpbnB1dCc7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgfVxyXG4gICAgLyoqIOiOt+W+l+exu+WQjSAqL1xyXG4gICAgZ2V0U3R5bGUoY3VycmVudEl0ZW06IGFueSk6IHN0cmluZyB7XHJcbiAgICAgICAgY29uc3QgZGVmYXVsdENvbmR0aW9uU3R5bGUgPSAnY29sLTEyIGNvbC1tZC02IGNvbC14bC0zIGNvbC1lbC0yJztcclxuICAgICAgICByZXR1cm4gKHRoaXMuZmlsdGVyQ2xhc3MgJiYgIXRoaXMuYXV0b1dpZHRoKSA/IHRoaXMuZmlsdGVyQ2xhc3MgOiBkZWZhdWx0Q29uZHRpb25TdHlsZTtcclxuICAgIH1cclxuXHJcbiAgICAvKiog5Yik5pat5piv5ZCm6ZyA6KaB5pi+56S65pu05aSa5oyJ6ZKuICovXHJcbiAgICBjYW5TaG93TW9yZUljb24oKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuZXh0ZW5kRmlsdGVyTGlzdC5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgIHRoaXMuc2hvd01vcmVJY29uID0gdHJ1ZTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLnNob3dNb3JlSWNvbiA9IGZhbHNlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKiog5Yik5pat5piv5ZCm5omA5pyJ5b+F5aGr6aG56YO95aGr5YaZ5a6M5q+VICovXHJcbiAgICBjYW5TdWJtaXRGaWx0ZXIocmVxdWlyZWxpc3QpIHtcclxuICAgICAgICBsZXQgZm9ybUNhblN1Ym1pdCA9IGZhbHNlO1xyXG4gICAgICAgIGlmICghcmVxdWlyZWxpc3QgfHwgIXJlcXVpcmVsaXN0Lmxlbmd0aCkge1xyXG4gICAgICAgICAgICBmb3JtQ2FuU3VibWl0ID0gdHJ1ZTtcclxuICAgICAgICAgICAgcmV0dXJuIGZvcm1DYW5TdWJtaXQ7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCByZXF1aXJlbGlzdC5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgaXRlbSA9IHJlcXVpcmVsaXN0W2ldO1xyXG4gICAgICAgICAgICAgICAgaWYgKGl0ZW0uY29udHJvbC5nZXRDb250cm9sVHlwZSgpID09PSBDb250cm9sVHlwZS5UZXh0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgdHYgPSAoaXRlbS52YWx1ZSBhcyBUZXh0VmFsdWUpO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChPYmplY3Qua2V5cyh0dikubGVuZ3RoIDwgMCB8fCAhdHYudmFsdWUpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZm9ybUNhblN1Ym1pdCA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZm9ybUNhblN1Ym1pdCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmIChpdGVtLmNvbnRyb2wuZ2V0Q29udHJvbFR5cGUoKSA9PT0gQ29udHJvbFR5cGUuSGVscCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHNodiA9IChpdGVtLnZhbHVlIGFzIEhlbHBWYWx1ZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKE9iamVjdC5rZXlzKHNodikubGVuZ3RoID09PSAwIHx8ICFzaHYudmFsdWUgfHwgIXNodi52YWx1ZUZpZWxkKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvcm1DYW5TdWJtaXQgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvcm1DYW5TdWJtaXQgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoaXRlbS5jb250cm9sLmdldENvbnRyb2xUeXBlKCkgPT09IENvbnRyb2xUeXBlLkRyb3BEb3duKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgZGR2ID0gKGl0ZW0udmFsdWUgYXMgRHJvcERvd25MaXN0VmFsdWUpO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChPYmplY3Qua2V5cyhkZHYpLmxlbmd0aCA9PT0gMCB8fCAhZGR2LnZhbHVlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvcm1DYW5TdWJtaXQgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvcm1DYW5TdWJtaXQgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoaXRlbS5jb250cm9sLmdldENvbnRyb2xUeXBlKCkgPT09IENvbnRyb2xUeXBlLkRhdGVSYW5nZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGRydiA9IChpdGVtLnZhbHVlIGFzIERhdGVSYW5nZVZhbHVlKTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoT2JqZWN0LmtleXMoZHJ2KS5sZW5ndGggPT09IDAgfHwgKCFkcnYuc3RhcnRUaW1lICYmICFkcnYuZW5kVGltZSkpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZm9ybUNhblN1Ym1pdCA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZm9ybUNhblN1Ym1pdCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmIChpdGVtLmNvbnRyb2wuZ2V0Q29udHJvbFR5cGUoKSA9PT0gQ29udHJvbFR5cGUuRGF0ZVJhbmdlVGltZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGRydiA9IChpdGVtLnZhbHVlIGFzIERhdGVSYW5nZVRpbWVWYWx1ZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKE9iamVjdC5rZXlzKGRydikubGVuZ3RoID09PSAwIHx8ICghZHJ2LnN0YXJ0VGltZSAmJiAhZHJ2LmVuZFRpbWUpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvcm1DYW5TdWJtaXQgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvcm1DYW5TdWJtaXQgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoaXRlbS5jb250cm9sLmdldENvbnRyb2xUeXBlKCkgPT09IENvbnRyb2xUeXBlLk1vbnRoUmFuZ2UpIHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zdCBtcnYgPSAoaXRlbS52YWx1ZSBhcyBNb250aFJhbmdlVmFsdWUpO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChPYmplY3Qua2V5cyhtcnYpLmxlbmd0aCA9PT0gMCB8fCAoIW1ydi5zdGFydFRpbWUgJiYgIW1ydi5lbmRUaW1lKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmb3JtQ2FuU3VibWl0ID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmb3JtQ2FuU3VibWl0ID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGl0ZW0uY29udHJvbC5nZXRDb250cm9sVHlwZSgpID09PSBDb250cm9sVHlwZS5ZZWFyUmFuZ2UpIHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zdCB5cnYgPSAoaXRlbS52YWx1ZSBhcyBZZWFyUmFuZ2VWYWx1ZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKE9iamVjdC5rZXlzKHlydikubGVuZ3RoID09PSAwIHx8ICgheXJ2LnN0YXJ0VGltZSAmJiAheXJ2LmVuZFRpbWUpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvcm1DYW5TdWJtaXQgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvcm1DYW5TdWJtaXQgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoaXRlbS5jb250cm9sLmdldENvbnRyb2xUeXBlKCkgPT09IENvbnRyb2xUeXBlLk51bWJlclJhbmdlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgbnJ2ID0gKGl0ZW0udmFsdWUgYXMgTnVtYmVyUmFuZ2VWYWx1ZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKE9iamVjdC5rZXlzKG5ydikubGVuZ3RoID09PSAwIHx8ICghbnJ2LnN0YXJ0VmFsdWUgJiYgIW5ydi5lbmRWYWx1ZSkpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZm9ybUNhblN1Ym1pdCA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZm9ybUNhblN1Ym1pdCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmIChpdGVtLmNvbnRyb2wuZ2V0Q29udHJvbFR5cGUoKSA9PT0gQ29udHJvbFR5cGUuU2VhcmNoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc3Qgc3YgPSAoaXRlbS52YWx1ZSBhcyBTZWFyY2hWYWx1ZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKE9iamVjdC5rZXlzKHN2KS5sZW5ndGggPCAwIHx8ICFzdi52YWx1ZSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmb3JtQ2FuU3VibWl0ID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmb3JtQ2FuU3VibWl0ID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGl0ZW0uY29udHJvbC5nZXRDb250cm9sVHlwZSgpID09PSBDb250cm9sVHlwZS5EYXRlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgZHYgPSAoaXRlbS52YWx1ZSBhcyBEYXRlVmFsdWUpO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChPYmplY3Qua2V5cyhkdikubGVuZ3RoIDwgMCB8fCAhZHYudmFsdWUpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZm9ybUNhblN1Ym1pdCA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZm9ybUNhblN1Ym1pdCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmIChpdGVtLmNvbnRyb2wuZ2V0Q29udHJvbFR5cGUoKSA9PT0gQ29udHJvbFR5cGUuTW9udGgpIHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zdCBtdiA9IChpdGVtLnZhbHVlIGFzIE1vbnRoVmFsdWUpO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChPYmplY3Qua2V5cyhtdikubGVuZ3RoIDwgMCB8fCAhbXYudmFsdWUpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZm9ybUNhblN1Ym1pdCA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZm9ybUNhblN1Ym1pdCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmIChpdGVtLmNvbnRyb2wuZ2V0Q29udHJvbFR5cGUoKSA9PT0gQ29udHJvbFR5cGUuWWVhcikge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHl2ID0gKGl0ZW0udmFsdWUgYXMgWWVhclZhbHVlKTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoT2JqZWN0LmtleXMoeXYpLmxlbmd0aCA8IDAgfHwgIXl2LnZhbHVlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvcm1DYW5TdWJtaXQgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvcm1DYW5TdWJtaXQgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoaXRlbS5jb250cm9sLmdldENvbnRyb2xUeXBlKCkgPT09IENvbnRyb2xUeXBlLkNoZWNrYm94R3JvdXApIHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zdCBjYmd2ID0gKGl0ZW0udmFsdWUgYXMgQ2hlY2tib3hHcm91cFZhbHVlKTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoT2JqZWN0LmtleXMoY2JndikubGVuZ3RoID09PSAwIHx8IE9iamVjdC5rZXlzKGNiZ3YudmFsdWUpLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmb3JtQ2FuU3VibWl0ID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmb3JtQ2FuU3VibWl0ID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGl0ZW0uY29udHJvbC5nZXRDb250cm9sVHlwZSgpID09PSBDb250cm9sVHlwZS5SYWRpbykge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGRkdiA9IChpdGVtLnZhbHVlIGFzIFJhZGlvR3JvdXBWYWx1ZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKE9iamVjdC5rZXlzKGRkdikubGVuZ3RoID09PSAwIHx8ICFkZHYudmFsdWUpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZm9ybUNhblN1Ym1pdCA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZm9ybUNhblN1Ym1pdCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmIChpdGVtLmNvbnRyb2wuZ2V0Q29udHJvbFR5cGUoKSA9PT0gQ29udHJvbFR5cGUuSW5wdXRHcm91cCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHN2ID0gKGl0ZW0udmFsdWUgYXMgSW5wdXRHcm91cFZhbHVlKTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoT2JqZWN0LmtleXMoc3YpLmxlbmd0aCA8IDAgfHwgIXN2LnRleHRWYWx1ZSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmb3JtQ2FuU3VibWl0ID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmb3JtQ2FuU3VibWl0ID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiBmb3JtQ2FuU3VibWl0O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICB9XHJcbiAgICAvKiog5pCc57Si6KGo5Y2V5Y+Y5YyWICovXHJcbiAgICBvblNlYXJjaCgkZXZlbnQsIGl0ZW0pIHtcclxuICAgICAgICBpZiAodGhpcy5kaXNhYmxlZCkgeyByZXR1cm47IH1cclxuICAgICAgICB0aGlzLnNlYXJjaENoYW5nZS5lbWl0KHsgaXRlbSwgY29uZGl0aW9uczogdGhpcy5saXN0RmlsdGVyQ29uZGl0aW9ucywgaW5zdGFuY2U6IHRoaXN9KTtcclxuXHJcbiAgICAgICAgdGhpcy5pblNldEN1cnJlbnRGaWx0ZXJDb25kaXRpb25zKCk7XHJcbiAgICAgICAgdGhpcy5jYW5TdWJtaXQgPSB0aGlzLmNhblN1Ym1pdEZpbHRlcih0aGlzLnJlcXVpcmVkTGlzdEZpbHRlcik7XHJcbiAgICAgICAgaWYgKGl0ZW0uY29udHJvbC5pc0V4dGVuZCB8fCAhdGhpcy5jYW5TdWJtaXQgfHwgIXRoaXMubGl2ZVNlYXJjaCkge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuc3VibWl0KCdzaG93Rm9ybURhdGEnLCB0aGlzLmxpc3RGaWx0ZXJDb25kaXRpb25zKTtcclxuICAgIH1cclxuICAgIC8qKiDlvIDlp4vnrZvpgIkgKi9cclxuICAgIGZpbHRlckNsaWNrKCkge1xyXG4gICAgICAgIGlmICh0aGlzLmRpc2FibGVkIHx8ICF0aGlzLmNhblN1Ym1pdCkgeyByZXR1cm47IH1cclxuICAgICAgICB0aGlzLnN1Ym1pdCgnc2hvd0Zvcm1EYXRhJywgdGhpcy5saXN0RmlsdGVyQ29uZGl0aW9ucyk7XHJcbiAgICB9XHJcbiAgICAvKiog5pS25oqY6YOo5YiG54K55Ye756Gu5a6a5o+Q5LqkICovXHJcbiAgICBsaXN0U2VhcmNoKCkge1xyXG4gICAgICAgIGlmICh0aGlzLmRpc2FibGVkIHx8ICF0aGlzLmNhblN1Ym1pdCkgeyByZXR1cm47IH1cclxuICAgICAgICB0aGlzLnNob3dGaWx0ZXIgPSBmYWxzZTtcclxuICAgICAgICB0aGlzLnN1Ym1pdCgnZXh0ZW5kRm9ybURhdGEnLCB0aGlzLmxpc3RGaWx0ZXJDb25kaXRpb25zKTtcclxuICAgIH1cclxuICAgIC8qKiDlj5bmtojmkJzntKIgKi9cclxuICAgIGxpc3RTZWFyY2hDYW5jZWwoKSB7XHJcbiAgICAgICAgdGhpcy5zaG93RmlsdGVyID0gZmFsc2U7XHJcbiAgICB9XHJcbiAgICAvKiog5o+Q5Lqk6KGo5Y2VICovXHJcbiAgICBzdWJtaXQodHlwZSwgZmlsdGVybGlzdCkge1xyXG4gICAgICAgIGxldCBxdWVyeUxpc3Q7XHJcbiAgICAgICAgcXVlcnlMaXN0ID0gdGhpcy5oYW5kbGVyLnNldEZpbHRlckNvbmRpdGlvbnMoZmlsdGVybGlzdCk7XHJcbiAgICAgICAgaWYgKHR5cGUgPT0gJ2V4dGVuZEZvcm1EYXRhJykge1xyXG4gICAgICAgICAgICBpZiAocXVlcnlMaXN0Lmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuc2hvd0V4cGFuZFRhZyA9IHRydWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnNob3dFeHBhbmRUYWcgPSBmYWxzZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLnF1ZXJ5LmVtaXQoeyB0eXBlLCBkYXRhOiBKU09OLnN0cmluZ2lmeShxdWVyeUxpc3QpIH0pO1xyXG4gICAgfVxyXG4gICAgLyoqIOWvueWkluaPkOS+m+iOt+W+l+ihqOWNleaQnOe0ouaVsOaNriAqL1xyXG4gICAgZ2V0RmlsdGVyRGF0YSgpIHtcclxuICAgICAgICBsZXQgcXVlcnlMaXN0O1xyXG4gICAgICAgIHF1ZXJ5TGlzdCA9IHRoaXMuaGFuZGxlci5zZXRGaWx0ZXJDb25kaXRpb25zKHRoaXMubGlzdEZpbHRlckNvbmRpdGlvbnMpO1xyXG4gICAgICAgIHJldHVybiBKU09OLnN0cmluZ2lmeShxdWVyeUxpc3QpO1xyXG4gICAgfVxyXG4gICAgLyoqIOiOt+WPluWxleekuuWcqOWklumDqOeahOihqOWNlemVv+W6piAqL1xyXG4gICAgZ2V0U2hvd0xlbmd0aCgpIHtcclxuICAgICAgICBpZiAodGhpcy5zaG93RmlsdGVyTGlzdCkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5zaG93RmlsdGVyTGlzdC5sZW5ndGg7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLyoqIOa4heepuuadoeS7tiAqL1xyXG4gICAgcmVzZXRTZWFyY2goKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuZGlzYWJsZWQpIHsgcmV0dXJuOyB9XHJcbiAgICAgICAgaWYgKHRoaXMubGlzdEZpbHRlckNvbmRpdGlvbnMgJiYgdGhpcy5saXN0RmlsdGVyQ29uZGl0aW9ucy5sZW5ndGgpIHtcclxuICAgICAgICAgICAgdGhpcy5saXN0RmlsdGVyQ29uZGl0aW9ucy5mb3JFYWNoKGxpc3RGaWx0ZXJDb25kaXRpb24gPT4ge1xyXG4gICAgICAgICAgICAgICAgaWYgKGxpc3RGaWx0ZXJDb25kaXRpb24uY29udHJvbC5nZXRDb250cm9sVHlwZSgpID09IENvbnRyb2xUeXBlLlRleHQpIHtcclxuICAgICAgICAgICAgICAgICAgICBsaXN0RmlsdGVyQ29uZGl0aW9uLnZhbHVlID0gbmV3IFRleHRWYWx1ZSgpO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmIChsaXN0RmlsdGVyQ29uZGl0aW9uLmNvbnRyb2wuZ2V0Q29udHJvbFR5cGUoKSA9PSBDb250cm9sVHlwZS5TZWFyY2gpIHtcclxuICAgICAgICAgICAgICAgICAgICBsaXN0RmlsdGVyQ29uZGl0aW9uLnZhbHVlID0gbmV3IFNlYXJjaFZhbHVlKCk7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGxpc3RGaWx0ZXJDb25kaXRpb24uY29udHJvbC5nZXRDb250cm9sVHlwZSgpID09IENvbnRyb2xUeXBlLkRhdGUpIHtcclxuICAgICAgICAgICAgICAgICAgICBsaXN0RmlsdGVyQ29uZGl0aW9uLnZhbHVlID0gbmV3IERhdGVWYWx1ZSgpO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmIChsaXN0RmlsdGVyQ29uZGl0aW9uLmNvbnRyb2wuZ2V0Q29udHJvbFR5cGUoKSA9PSBDb250cm9sVHlwZS5Nb250aCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGxpc3RGaWx0ZXJDb25kaXRpb24udmFsdWUgPSBuZXcgTW9udGhWYWx1ZSgpO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmIChsaXN0RmlsdGVyQ29uZGl0aW9uLmNvbnRyb2wuZ2V0Q29udHJvbFR5cGUoKSA9PSBDb250cm9sVHlwZS5ZZWFyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbGlzdEZpbHRlckNvbmRpdGlvbi52YWx1ZSA9IG5ldyBZZWFyVmFsdWUoKTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAobGlzdEZpbHRlckNvbmRpdGlvbi5jb250cm9sLmdldENvbnRyb2xUeXBlKCkgPT0gQ29udHJvbFR5cGUuRGF0ZVJhbmdlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbGlzdEZpbHRlckNvbmRpdGlvbi52YWx1ZSA9IG5ldyBEYXRlUmFuZ2VWYWx1ZSgpO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmIChsaXN0RmlsdGVyQ29uZGl0aW9uLmNvbnRyb2wuZ2V0Q29udHJvbFR5cGUoKSA9PSBDb250cm9sVHlwZS5Nb250aFJhbmdlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbGlzdEZpbHRlckNvbmRpdGlvbi52YWx1ZSA9IG5ldyBNb250aFJhbmdlVmFsdWUoKTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAobGlzdEZpbHRlckNvbmRpdGlvbi5jb250cm9sLmdldENvbnRyb2xUeXBlKCkgPT0gQ29udHJvbFR5cGUuWWVhclJhbmdlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbGlzdEZpbHRlckNvbmRpdGlvbi52YWx1ZSA9IG5ldyBZZWFyUmFuZ2VWYWx1ZSgpO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmIChsaXN0RmlsdGVyQ29uZGl0aW9uLmNvbnRyb2wuZ2V0Q29udHJvbFR5cGUoKSA9PSBDb250cm9sVHlwZS5Ecm9wRG93bikge1xyXG4gICAgICAgICAgICAgICAgICAgIGxpc3RGaWx0ZXJDb25kaXRpb24udmFsdWUgPSBuZXcgRHJvcERvd25MaXN0VmFsdWUoKTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAobGlzdEZpbHRlckNvbmRpdGlvbi5jb250cm9sLmdldENvbnRyb2xUeXBlKCkgPT0gQ29udHJvbFR5cGUuTnVtYmVyUmFuZ2UpIHtcclxuICAgICAgICAgICAgICAgICAgICBsaXN0RmlsdGVyQ29uZGl0aW9uLnZhbHVlID0gbmV3IE51bWJlclJhbmdlVmFsdWUoKTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAobGlzdEZpbHRlckNvbmRpdGlvbi5jb250cm9sLmdldENvbnRyb2xUeXBlKCkgPT0gQ29udHJvbFR5cGUuSGVscCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGxpc3RGaWx0ZXJDb25kaXRpb24udmFsdWUgPSBuZXcgSGVscFZhbHVlKCk7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGxpc3RGaWx0ZXJDb25kaXRpb24uY29udHJvbC5nZXRDb250cm9sVHlwZSgpID09IENvbnRyb2xUeXBlLkNoZWNrYm94R3JvdXApIHtcclxuICAgICAgICAgICAgICAgICAgICBsaXN0RmlsdGVyQ29uZGl0aW9uLnZhbHVlID0gbmV3IENoZWNrYm94R3JvdXBWYWx1ZSgpO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmIChsaXN0RmlsdGVyQ29uZGl0aW9uLmNvbnRyb2wuZ2V0Q29udHJvbFR5cGUoKSA9PSBDb250cm9sVHlwZS5SYWRpbykge1xyXG4gICAgICAgICAgICAgICAgICAgIGxpc3RGaWx0ZXJDb25kaXRpb24udmFsdWUgPSBuZXcgUmFkaW9Hcm91cFZhbHVlKCk7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGxpc3RGaWx0ZXJDb25kaXRpb24uY29udHJvbC5nZXRDb250cm9sVHlwZSgpID09IENvbnRyb2xUeXBlLklucHV0R3JvdXApIHtcclxuICAgICAgICAgICAgICAgICAgICBsaXN0RmlsdGVyQ29uZGl0aW9uLnZhbHVlID0gbmV3IElucHV0R3JvdXBWYWx1ZSgpO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBsaXN0RmlsdGVyQ29uZGl0aW9uLnZhbHVlID0gbmV3IFRleHRWYWx1ZSgpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgLy8gIGxldCBsaXN0RmlsdGVyID0gdGhpcy5saXN0RmlsdGVyQ29uZGl0aW9ucy5tYXAobyA9PiBPYmplY3QuYXNzaWduKHt9LCBvKSk7XHJcbiAgICAgICAgICAgIGNvbnN0IGxpc3RGaWx0ZXIgPSB0aGlzLmxpc3RGaWx0ZXJDb25kaXRpb25zLm1hcChvID0+ICh7IC4uLm8gfSkpO1xyXG4gICAgICAgICAgICB0aGlzLmxpc3RGaWx0ZXJDb25kaXRpb25zID0gbGlzdEZpbHRlcjtcclxuICAgICAgICAgICAgdGhpcy5yZXF1aXJlZExpc3RJbml0KCk7XHJcbiAgICAgICAgICAgIC8vICB0aGlzLmNkLm1hcmtGb3JDaGVjaygpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdGhpcy5jbGVhci5lbWl0KCk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8g6K6+572u6buY6K6k5YC8XHJcbiAgICBzZXRGaWx0ZXJWYWx1ZShmaWVsZENvbmZpZ3M6IEZpZWxkQ29uZmlnW10pIHtcclxuICAgICAgICB0aGlzLmxpc3RGaWx0ZXJDb25kaXRpb25zID0gdGhpcy5zdGFnTGlzdEZpbHRlckNvbmRpdGlvbnMubWFwKG8gPT4gKHsgLi4ubyB9KSk7XHJcbiAgICAgICAgaWYgKHRoaXMubGlzdEZpbHRlckNvbmRpdGlvbnMgJiYgdGhpcy5saXN0RmlsdGVyQ29uZGl0aW9ucy5sZW5ndGgpIHtcclxuICAgICAgICAgICAgdGhpcy5zZXRWYWx1ZXModGhpcy5saXN0RmlsdGVyQ29uZGl0aW9ucywgZmllbGRDb25maWdzKTtcclxuICAgICAgICAgICAgY29uc3QgbGlzdEZpbHRlciA9IHRoaXMubGlzdEZpbHRlckNvbmRpdGlvbnMubWFwKG8gPT4gKHsgLi4ubyB9KSk7XHJcbiAgICAgICAgICAgIHRoaXMubGlzdEZpbHRlckNvbmRpdGlvbnMgPSBsaXN0RmlsdGVyO1xyXG4gICAgICAgICAgICB0aGlzLnJlcXVpcmVkTGlzdEluaXQoKTtcclxuICAgICAgICAgICAgdGhpcy5zZWFyY2hDaGFuZ2UuZW1pdCh0aGlzLmxpc3RGaWx0ZXJDb25kaXRpb25zKTtcclxuICAgICAgICAgICAgdGhpcy5pblNldEN1cnJlbnRGaWx0ZXJDb25kaXRpb25zKCk7XHJcbiAgICAgICAgICAgIC8vICB0aGlzLmxpc3RTZWFyY2goKTtcclxuICAgICAgICAgICAgdGhpcy5jZC5kZXRlY3RDaGFuZ2VzKCk7XHJcbiAgICAgICAgICAgIHRoaXMuY2QubWFya0ZvckNoZWNrKCk7XHJcbiAgICAgICAgICAgIHRoaXMuY2FuU3VibWl0ID0gdGhpcy5jYW5TdWJtaXRGaWx0ZXIodGhpcy5yZXF1aXJlZExpc3RGaWx0ZXIpO1xyXG4gICAgICAgICAgICBpZiAoIXRoaXMuY2FuU3VibWl0KSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdGhpcy5zdWJtaXQoJ3Nob3dGb3JtRGF0YScsIHRoaXMubGlzdEZpbHRlckNvbmRpdGlvbnMpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8vIOiuvue9rnZhbHVlXHJcbiAgICBzZXRWYWx1ZXMoY29uZGl0aW9ucywgZmllbGRDb25maWdzOiBGaWVsZENvbmZpZ1tdKSB7XHJcbiAgICAgICAgbGV0IHFjOiBRdWVyeUNvbmRpdGlvbjtcclxuICAgICAgICBsZXQgY29udHJvbFR5cGU6IHN0cmluZztcclxuICAgICAgICBpZiAoZmllbGRDb25maWdzICYmIGZpZWxkQ29uZmlncy5sZW5ndGgpIHtcclxuICAgICAgICAgICAgZmllbGRDb25maWdzLmZvckVhY2godiA9PiB7XHJcbiAgICAgICAgICAgICAgICBxYyA9IGNvbmRpdGlvbnMuZmluZChjID0+IGMuZmllbGRDb2RlID09IHYubGFiZWxDb2RlKTtcclxuICAgICAgICAgICAgICAgIGlmIChxYykge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnRyb2xUeXBlID0gdGhpcy5nZXRDb250cm9sVHlwZShxYyk7XHJcbiAgICAgICAgICAgICAgICAgICAgcWMudmFsdWUgPSB0aGlzLmZpbHRlclNlcnZpY2Uuc2V0VmFsdWVzKGNvbnRyb2xUeXBlLCB2LnZhbHVlKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGdldFZhbHVlKGZpZWxkTmFtZTogc3RyaW5nKSB7XHJcbiAgICAgICAgY29uc3QgcXVlcnlMaXN0ID0gdGhpcy5oYW5kbGVyLnNldEZpbHRlckNvbmRpdGlvbnModGhpcy5saXN0RmlsdGVyQ29uZGl0aW9ucyk7XHJcbiAgICAgICAgY29uc3QgaXRlbSA9IHF1ZXJ5TGlzdC5maW5kKChuOiBhbnkpID0+IG5bJ0ZpbHRlckZpZWxkJ10gPT09IGZpZWxkTmFtZSk7XHJcbiAgICAgICAgaWYgKGl0ZW0pIHtcclxuICAgICAgICAgICAgcmV0dXJuIGl0ZW0udmFsdWU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XHJcbiAgICB9XHJcblxyXG4gICAgLy8g5b+F5aGr6aG55Yid5aeL5YyWXHJcbiAgICByZXF1aXJlZExpc3RJbml0KCkge1xyXG4gICAgICAgIGNvbnN0IHJlcXVpcmVkTGlzdCA9IHRoaXMubGlzdEZpbHRlckNvbmRpdGlvbnMuZmlsdGVyKChsaXN0aXRlbSkgPT4ge1xyXG4gICAgICAgICAgICByZXR1cm4gbGlzdGl0ZW0uY29udHJvbC5yZXF1aXJlZDtcclxuICAgICAgICB9KTtcclxuICAgICAgICBpZiAocmVxdWlyZWRMaXN0ICYmIHJlcXVpcmVkTGlzdC5sZW5ndGgpIHtcclxuICAgICAgICAgICAgdGhpcy5yZXF1aXJlZExpc3RGaWx0ZXIgPSByZXF1aXJlZExpc3Q7XHJcbiAgICAgICAgICAgIHRoaXMuY2FuU3VibWl0ID0gdGhpcy5jYW5TdWJtaXRGaWx0ZXIodGhpcy5yZXF1aXJlZExpc3RGaWx0ZXIpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMucmVxdWlyZWRMaXN0RmlsdGVyID0gW107XHJcbiAgICAgICAgICAgIHRoaXMuY2FuU3VibWl0ID0gdHJ1ZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgY2xlYXJGaWx0ZXJWYWx1ZShmaWVsZHM6IGFueSkge1xyXG4gICAgICAgIGlmIChmaWVsZHMgJiYgZmllbGRzLmxlbmd0aCkge1xyXG4gICAgICAgICAgICBpZiAodHlwZW9mIGZpZWxkcyA9PT0gJ3N0cmluZycpIHtcclxuICAgICAgICAgICAgICAgIGZpZWxkcyA9IGZpZWxkcy5zcGxpdCgnLCcpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGZpZWxkcyA9IGZpZWxkcy5tYXAobiA9PiB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gbi50b0xvd2VyQ2FzZSgpO1xyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgIHRoaXMubGlzdEZpbHRlckNvbmRpdGlvbnMuZm9yRWFjaChuID0+IHtcclxuICAgICAgICAgICAgICAgIGlmIChmaWVsZHMuaW5kZXhPZihuLmZpZWxkQ29kZS50b0xvd2VyQ2FzZSgpKSA+IC0xKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbi52YWx1ZS5jbGVhclZhbHVlKCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICB1cGRhdGVWYWx1ZXModmFsdWVzOiB7IFtmaWVsZDogc3RyaW5nXTogYW55IH0pIHtcclxuICAgICAgICBpZiAodmFsdWVzICYmIE9iamVjdC5rZXlzKHZhbHVlcykpIHtcclxuICAgICAgICAgICAgY29uc3QgZmllbGRzID0gT2JqZWN0LmtleXModmFsdWVzKTtcclxuICAgICAgICAgICAgZmllbGRzLmZvckVhY2goIGYgPT4ge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5saXN0RmlsdGVyQ29uZGl0aW9ucy5mb3JFYWNoKG4gPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChmaWVsZHMuaW5kZXhPZihuLmZpZWxkQ29kZS50b0xvd2VyQ2FzZSgpKSA+IC0xKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG4udmFsdWVbJ3ZhbHVlJ10gPSB2YWx1ZXNbZl07XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbn1cclxuIl19