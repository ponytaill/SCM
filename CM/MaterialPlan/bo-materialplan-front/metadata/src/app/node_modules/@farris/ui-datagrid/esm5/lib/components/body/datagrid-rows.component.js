/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*
 * @Author: 疯狂秀才(Lucas Huang)
 * @Date: 2019-08-06 07:43:07
 * @LastEditors: 疯狂秀才(Lucas Huang)
 * @LastEditTime: 2019-11-20 08:19:06
 * @QQ: 1055818239
 * @Version: v0.0.1
 */
import { Component, Input, ViewChild, ElementRef, Injector, Inject, forwardRef } from '@angular/core';
import { ChangeDetectorRef, NgZone } from '@angular/core';
import { Subject } from 'rxjs';
import { TR_ID_PREFIX } from '../../types';
import { DatagridComponent } from '../../datagrid.component';
import { DatagridBodyComponent } from './datagrid-body.component';
import { IS_GROUP_ROW_FIELD, GROUP_ROW_FIELD, IS_GROUP_FOOTER_ROW_FIELD, GROUP_VISIBLE_FIELD, GROUP_LEVEL_FIELD } from '../../services/state';
import { takeUntil } from 'rxjs/operators';
var DatagridRowsComponent = /** @class */ (function () {
    function DatagridRowsComponent(cd, dg, dgb, el, injector, ngZone) {
        this.cd = cd;
        this.dg = dg;
        this.dgb = dgb;
        this.el = el;
        this.injector = injector;
        this.ngZone = ngZone;
        /**
         * 是否为右侧固定列。默认为 false
         */
        this.fixedRight = false;
        /**
         * 是否有左侧固定列
         */
        this.hasFixedColumns = false;
        this.isGroupRow = IS_GROUP_ROW_FIELD;
        this.groupRow = GROUP_ROW_FIELD;
        this.isGroupFooter = IS_GROUP_FOOTER_ROW_FIELD;
        this.visible = GROUP_VISIBLE_FIELD;
        this.groupLevelField = GROUP_LEVEL_FIELD;
        this.filterConditions = '';
        this.checkedRows = [];
        this.ro = null;
        this.subscriptions = [];
        this.destroy$ = new Subject();
    }
    Object.defineProperty(DatagridRowsComponent.prototype, "groupSummaryDataInGroupRow", {
        get: /**
         * @return {?}
         */
        function () {
            return this.dg.groupSummaryPosition === 'inGroupRow';
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @private
     * @return {?}
     */
    DatagridRowsComponent.prototype.listenEvent = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var _s3 = this.dg.dgs.setSelecedRow.pipe(takeUntil(this.destroy$)).subscribe((/**
         * @param {?} r
         * @return {?}
         */
        function (r) {
            _this.detectChanges();
        }));
        this.subscriptions.push(_s3);
        /** @type {?} */
        var _s4 = this.dg.dfs.rowAppend$.pipe(takeUntil(this.destroy$)).subscribe((/**
         * @return {?}
         */
        function () {
            _this.detectChanges();
        }));
        this.subscriptions.push(_s4);
        /** @type {?} */
        var _s5 = this.dg.dfs.rowUpdate$.pipe(takeUntil(this.destroy$)).subscribe((/**
         * @param {?} row
         * @return {?}
         */
        function (row) {
            if (row) {
                if (_this.dg.groupRows) {
                    if (_this.dg.groupFooter) {
                        _this.dg.dfs.updateGroupFooter(row.data[_this.groupRow]);
                    }
                }
            }
        }));
        this.subscriptions.push(_s5);
        this.scrollToCurrentRowSubscription = this.dg.dgs.scrollToCurrentRow.subscribe((/**
         * @return {?}
         */
        function () {
            _this.scrollToFirstSelectedRow();
            _this.dg.scrollInstance.scrollToLeft();
        }));
        this.dg.dfs.checkRow$.pipe(takeUntil(this.destroy$)).subscribe((/**
         * @return {?}
         */
        function () {
            _this.checkedRows = _this.dg.dfs.getCheckeds();
            _this.detectChanges();
        }));
        this.dg.dfs.clearCheckeds$.pipe(takeUntil(this.destroy$)).subscribe((/**
         * @return {?}
         */
        function () {
            _this.checkedRows = _this.dg.dfs.getCheckeds();
            _this.detectChanges();
        }));
    };
    /**
     * @return {?}
     */
    DatagridRowsComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.listenEvent();
    };
    /**
     * @return {?}
     */
    DatagridRowsComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this.unSubscriptions();
    };
    /**
     * @private
     * @return {?}
     */
    DatagridRowsComponent.prototype.unSubscriptions = /**
     * @private
     * @return {?}
     */
    function () {
        this.destroy$.next();
        this.destroy$.complete();
        if (this.scrollToCurrentRowSubscription) {
            this.scrollToCurrentRowSubscription.unsubscribe();
            this.scrollToCurrentRowSubscription = null;
        }
        if (this.subscriptions && this.subscriptions.length) {
            this.subscriptions.forEach((/**
             * @param {?} n
             * @return {?}
             */
            function (n) { return n.unsubscribe; }));
            this.subscriptions = [];
        }
    };
    /**
     * @return {?}
     */
    DatagridRowsComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.ngZone.runOutsideAngular((/**
         * @return {?}
         */
        function () {
            setTimeout((/**
             * @return {?}
             */
            function () {
                if (!_this.dg.nowrap) {
                    // this.dgb.updateRowHeight();
                    _this.dg.calculateGridSize();
                }
            }), 100);
        }));
    };
    /**
     * @param {?} field
     * @return {?}
     */
    DatagridRowsComponent.prototype.getGroupColumn = /**
     * @param {?} field
     * @return {?}
     */
    function (field) {
        return this.dg.flatColumns.find((/**
         * @param {?} col
         * @return {?}
         */
        function (col) { return col.field === field; }));
    };
    /**
     * @private
     * @return {?}
     */
    DatagridRowsComponent.prototype.detectChanges = /**
     * @private
     * @return {?}
     */
    function () {
        if (!this.cd['destroyed']) {
            this.cd.detectChanges();
        }
    };
    /**
     * @param {?} index
     * @param {?} item
     * @return {?}
     */
    DatagridRowsComponent.prototype.trackByField = /**
     * @param {?} index
     * @param {?} item
     * @return {?}
     */
    function (index, item) {
        return item.field;
    };
    /**
     * @param {?} el
     * @return {?}
     */
    DatagridRowsComponent.prototype.isElementInViewport = /**
     * @param {?} el
     * @return {?}
     */
    function (el) {
        /** @type {?} */
        var container = this.dgb.ps.instance.element.getBoundingClientRect();
        /** @type {?} */
        var box = el.getBoundingClientRect();
        /** @type {?} */
        var top = (box.top <= container.height + container.top);
        /** @type {?} */
        var bottom = (box.bottom <= (container.bottom));
        return (top && bottom);
    };
    /**
     * @private
     * @return {?}
     */
    DatagridRowsComponent.prototype.scrollToFirstSelectedRow = /**
     * @private
     * @return {?}
     */
    function () {
        if (this.dg.selectedRow) {
            /** @type {?} */
            var rowIndex = this.dg.selectedRow.index;
            /** @type {?} */
            var rowId = TR_ID_PREFIX + this.dg.selectedRow.id;
            /** @type {?} */
            var tr = document.querySelector(rowId);
            if (rowIndex === 0) {
                if (this.dgb.ps && this.dgb.ps.instance) {
                    if (this.dgb.ps.instance.element.scrollTop === 0) {
                        return;
                    }
                    else {
                        this.dg.scrollInstance.scrollToY(0);
                        return;
                    }
                }
            }
            var _a = this.dgb.getVisibleRange(), top_1 = _a.top, bottom = _a.bottom;
            if (rowIndex === top_1 || rowIndex === bottom) {
                return;
            }
            else {
                if (rowIndex > top_1 && rowIndex < bottom && tr && this.isElementInViewport(tr)) {
                    return;
                }
            }
            if (tr) {
                if (tr.scrollIntoViewIfNeeded) {
                    tr.scrollIntoViewIfNeeded(false);
                }
                else {
                    tr.scrollIntoView({ block: 'nearest', inline: 'nearest' });
                }
            }
            else {
                /** @type {?} */
                var currentTrTop = rowIndex * this.dg.rowHeight;
                if (currentTrTop) {
                    this.dg.scrollInstance.scrollToY(currentTrTop);
                }
            }
        }
    };
    /**
     * @param {?} row
     * @param {?} index
     * @param {?} open
     * @return {?}
     */
    DatagridRowsComponent.prototype.toggleGroupRow = /**
     * @param {?} row
     * @param {?} index
     * @param {?} open
     * @return {?}
     */
    function (row, index, open) {
        row.expanded = open;
        this.setGroupRowsVisible(row, open);
    };
    /**
     * @private
     * @param {?} row
     * @param {?} open
     * @return {?}
     */
    DatagridRowsComponent.prototype.setGroupRowsVisible = /**
     * @private
     * @param {?} row
     * @param {?} open
     * @return {?}
     */
    function (row, open) {
        var _this = this;
        if (row.rows) {
            /** @type {?} */
            var groupRows = row.rows.filter((/**
             * @param {?} n
             * @return {?}
             */
            function (n) { return n[IS_GROUP_ROW_FIELD]; }));
            /** @type {?} */
            var footerRows = row.rows.filter((/**
             * @param {?} n
             * @return {?}
             */
            function (n) { return n[IS_GROUP_FOOTER_ROW_FIELD]; }));
            if (footerRows && footerRows.length) {
                footerRows.forEach((/**
                 * @param {?} n
                 * @return {?}
                 */
                function (n) {
                    n[_this.visible] = open && row.expanded;
                }));
            }
            groupRows.forEach((/**
             * @param {?} t
             * @return {?}
             */
            function (t) {
                t[_this.visible] = open && row.expanded && row[_this.visible];
                _this.setGroupRowsVisible(t, open);
            }));
            if (!groupRows.length) {
                row.rows.forEach((/**
                 * @param {?} t
                 * @return {?}
                 */
                function (t) {
                    t[_this.visible] = open && row.expanded && row[_this.visible];
                }));
            }
        }
    };
    /**
     * @private
     * @param {?} field
     * @param {?} rowIndex
     * @return {?}
     */
    DatagridRowsComponent.prototype.mergeInfo = /**
     * @private
     * @param {?} field
     * @param {?} rowIndex
     * @return {?}
     */
    function (field, rowIndex) {
        return this.dg.dgs.getMergeInfo(rowIndex, field, this.dg.mergeCellInfo);
    };
    /**
     * @param {?} col
     * @param {?} rowIndex
     * @return {?}
     */
    DatagridRowsComponent.prototype.showCell = /**
     * @param {?} col
     * @param {?} rowIndex
     * @return {?}
     */
    function (col, rowIndex) {
        /** @type {?} */
        var mergeInfo = this.mergeInfo(col.field, rowIndex);
        /** @type {?} */
        var show = true;
        if (mergeInfo) {
            show = mergeInfo.show;
        }
        return show;
    };
    /**
     * @param {?} col
     * @param {?} rowIndex
     * @return {?}
     */
    DatagridRowsComponent.prototype.getRowSpan = /**
     * @param {?} col
     * @param {?} rowIndex
     * @return {?}
     */
    function (col, rowIndex) {
        /** @type {?} */
        var mergeInfo = this.mergeInfo(col.field, rowIndex);
        if (!mergeInfo) {
            return 1;
        }
        if (this.showCell(col, rowIndex)) {
            col.readonly = true;
            return mergeInfo.rowspan;
        }
        else {
            return 1;
        }
    };
    /**
     * @param {?} groupId
     * @return {?}
     */
    DatagridRowsComponent.prototype.getGroupSummaryData = /**
     * @param {?} groupId
     * @return {?}
     */
    function (groupId) {
        /** @type {?} */
        var row = this.data.find((/**
         * @param {?} n
         * @return {?}
         */
        function (n) { return n['__group_parent_id__'] === groupId && n['__group_footer__']; }));
        if (row) {
            return row.data;
        }
        return null;
    };
    DatagridRowsComponent.decorators = [
        { type: Component, args: [{
                    selector: 'datagrid-rows',
                    template: "<!--\r\n * @Author: \u75AF\u72C2\u79C0\u624D(Lucas Huang)\r\n * @Date: 2019-08-06 07:43:07\r\n * @LastEditors: \u75AF\u72C2\u79C0\u624D(Lucas Huang)\r\n * @LastEditTime: 2019-11-19 20:34:12\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n -->\r\n<!-- [class.f-datagrid-row-hover]=\"dg.rowHover && dgb.hoverRowIndex === hoverRow.rowIndex\" \r\n        [class.f-datagrid-row-odd]=\"odd && dg.striped\"\r\n        [class.f-datagrid-row-even]=\"!odd && dg.striped\"\r\n-->\r\n\r\n<table #tableEl style=\"border:0; width: 100%\" class=\"f-datagrid-rows\" cellpadding=0 cellspacing=\"0\" row-hover row-dblclick>\r\n    <colgroup>\r\n        <col width=\"36px\" *ngIf=\"dg.showCheckbox && dg.fast\">\r\n        <col [width]=\"dg?.lineNumberWidth + 'px'\" *ngIf=\"dg.showLineNumber && dg.fast\">\r\n        <col *ngFor=\"let col of columns\" [width]=\"col.width + 'px'\" />\r\n    </colgroup>\r\n\r\n    <tbody *ngIf=\"dg.groupRows && dg.groupField\" id=\"{{'row-group-tbody_'+ dg.id}}\" >\r\n        <ng-container *ngFor=\"let row of data; trackBy: dg.trackByRows; let i = index\">\r\n            <tr *ngIf=\"row[isGroupRow]\" class=\"f-datagrid-body-row f-datagrid-group-row\" [style.display]=\"row[visible] ? '': 'none'\"  [group-row]=\"row\">\r\n                <td *ngIf=\"dg.showCheckbox && dg.fast\" class=\"f-datagrid-cell f-datagrid-cell-checkbox\" style=\"text-align: center; left: 0\"\r\n                    [class.f-datagrid-fast__fixed-left]=\"dg.fast\" [class.l-shadow-col]=\"dg.fast && !dg.showLineNumber && !hasFixedColumns\">\r\n                        <div class=\"f-datagrid-cell-content checkbox-column\" style=\"text-overflow: unset;\">\r\n                        <datagrid-checkbox [disabled]=\"row | disableRow: dgb.startRowIndex + i: dg.disableRow\" [rowData]=\"row\"\r\n                            [rowIndex]=\"dgb.startRowIndex + i\" [checked]=\"row | rowIsChecked: checkedRows\"></datagrid-checkbox>\r\n                        </div>\r\n                    </td>\r\n        \r\n                    <td *ngIf=\"dg.showLineNumber && dg.fast\" [style.width.px]=\"dg.lineNumberWidth\"  class=\"f-datagrid-cell f-datagrid-cell-rownumber\"\r\n                    [class.f-datagrid-fast__fixed-left]=\"dg.fast\"  [style.left.px]=\"dg.showCheckbox ? 36: 0\" [class.l-shadow-col]=\"dg.fast && !hasFixedColumns\">\r\n                        <div class=\"f-datagrid-cell-content\">\r\n                            {{ dg.pageSize * (dg.pageIndex-1) + dgb.startRowIndex + i + 1 }}\r\n                        </div>\r\n                    </td>\r\n\r\n                <td *ngIf=\"!fixedRight && !groupSummaryDataInGroupRow\" class=\"f-datagrid-cell\" [attr.colspan]=\"row['colspan']\" [style.paddingLeft.px]=\"row[groupLevelField] * 15\">\r\n\r\n                    <div class=\"d-flex flex-row\" style=\"align-items: center;\">\r\n                        <span class=\"f-icon f-datagrid-group-expanded ml-1 mr-1\" *ngIf=\"!row.expanded\" (click)=\"toggleGroupRow(row, i, true)\"></span>\r\n                        <span class=\"f-icon f-datagrid-group-collapsed ml-1 mr-1\" *ngIf=\"row.expanded\" (click)=\"toggleGroupRow(row, i, false)\"></span>\r\n                        <span class=\"f-utils-fill\"  *ngIf=\"dg.groupFormatter\" [innerHTML]=\"row | formatGroupRow: '': dg.groupFormatter| safe: 'html' \"></span>\r\n                        <span class=\"f-utils-fill\" *ngIf=\"!dg.groupFormatter\"> {{ row | formatGroupRow: getGroupColumn(row.field)  }} </span>\r\n                    </div>\r\n                    \r\n                </td>\r\n\r\n                <ng-container *ngIf=\"groupSummaryDataInGroupRow && !fixedRight\">\r\n\r\n                    <ng-container *ngFor=\"let col of columns; trackBy: trackByField; let ci = index;\">\r\n                        <td *ngIf=\"!fixedRight && ci === 0\" class=\"f-datagrid-cell\" [style.paddingLeft.px]=\"row[groupLevelField] * 15\" [attr.colspan]=\"dg.groupCellColSpan\">\r\n                            <span class=\"f-icon f-datagrid-group-expanded\" *ngIf=\"!row.expanded\" (click)=\"toggleGroupRow(row, i, true)\"></span>\r\n                            <span class=\"f-icon f-datagrid-group-collapsed\" *ngIf=\"row.expanded\" (click)=\"toggleGroupRow(row, i, false)\"></span>\r\n                            <span *ngIf=\"dg.groupFormatter\" [innerHTML]=\"row | formatGroupRow: '': dg.groupFormatter| safe: 'html' \"></span>\r\n                            <span *ngIf=\"!dg.groupFormatter\"> {{ row | formatGroupRow: getGroupColumn(row.field)  }} </span>\r\n                        </td>\r\n                             \r\n                        <td class=\"f-datagrid-cell\"  \r\n                            *ngIf=\"ci > 0 && ci >= dg.groupCellColSpan\"\r\n                            [attr.field]=\"col.field\" \r\n                            [attr.align]=\" col.groupFooter?.align || col.align\">\r\n                            <div class=\"f-datagrid-cell-content\" [innerHTML]=\"col | formatCellData: getGroupSummaryData(row.id) : true: false | safe: 'html'\"></div>\r\n                        </td>\r\n                    </ng-container>\r\n                </ng-container>\r\n\r\n                <td *ngIf=\"fixedRight\" class=\"f-datagrid-cell\"></td>\r\n            </tr>\r\n\r\n            <ng-container *ngIf=\"!row[isGroupRow]\">\r\n                <ng-container *ngIf=\"!row[isGroupFooter]\">\r\n                    <tr class=\"f-datagrid-body-row\"\r\n                        [attr.id]=\"row | rowDataId:fixedRight\"\r\n                        [attr.index]=\"startRowIndex + i\"\r\n                        [grid-row]=\"row\"\r\n                        [editable]=\"dg.editable\"\r\n                        [rowIndex]=\"startRowIndex + i\" #dr=\"gridRow\"\r\n                        [formGroup]=\"dr.form\"\r\n                        [class.f-datagrid-row-selected]=\"row | rowIsSelected\"\r\n                        [style.display]=\"row[visible] ? '': 'none'\"\r\n                        [class.f-datagrid-disable-row]=\"dr.disabled\">\r\n\r\n                        <td *ngIf=\"dg.showCheckbox && dg.fast\" class=\"f-datagrid-cell f-datagrid-cell-checkbox\" style=\"text-align: center; left: 0\"\r\n                        [class.f-datagrid-fast__fixed-left]=\"dg.fast\" [class.l-shadow-col]=\"dg.fast && !dg.showLineNumber && !hasFixedColumns\">\r\n                            <div class=\"f-datagrid-cell-content checkbox-column\" style=\"text-overflow: unset;\">\r\n                            <datagrid-checkbox [disabled]=\"row | disableRow: dgb.startRowIndex + i: dg.disableRow\" [rowData]=\"row\"\r\n                                [rowIndex]=\"dgb.startRowIndex + i\" [checked]=\"row | rowIsChecked: checkedRows\"></datagrid-checkbox>\r\n                            </div>\r\n                        </td>\r\n            \r\n                        <td *ngIf=\"dg.showLineNumber && dg.fast\" [style.width.px]=\"dg.lineNumberWidth\"  class=\"f-datagrid-cell f-datagrid-cell-rownumber\"\r\n                        [class.f-datagrid-fast__fixed-left]=\"dg.fast\"  [style.left.px]=\"dg.showCheckbox ? 36: 0\" [class.l-shadow-col]=\"dg.fast && !hasFixedColumns\">\r\n                            <div class=\"f-datagrid-cell-content\">\r\n                                {{ dg.pageSize * (dg.pageIndex-1) + dgb.startRowIndex + i + 1 }}\r\n                            </div>\r\n                        </td>\r\n\r\n\r\n                        <td class=\"f-datagrid-cell\"\r\n                            [cell-editable]=\"row\"\r\n                            [column]=\"col\"\r\n                            [attr.field]=\"col.field\" #cell\r\n                            [style.paddingLeft.px]=\"(ci === 0 && !fixedRight) ? row[groupLevelField] * 10 + 25 : 0\"\r\n                            [attr.align]=\"col.align\"\r\n                            [class.f-datagrid-fast__fixed-left]=\"dg.fast && col.fixed && col.fixed === 'left'\"\r\n                            [class.f-datagrid-fast__fixed-right]=\"dg.fast && col.fixed && col.fixed === 'right'\"\r\n                            [class.r-shadow-col]=\"col.rightShadowCol\"\r\n                            [class.l-shadow-col]=\"col.leftShadowCol\"\r\n                            *ngFor=\"let col of columns; trackBy: trackByField; let ci = index;\">\r\n                            <grid-body-cell\r\n                                [width]=\"col.width\"\r\n                                [height]=\"dg.rowHeight\"\r\n                                [column]=\"col\"\r\n                                [rowData]=\"row\"\r\n                                [rowIndex]=\"startRowIndex + i\">\r\n                            </grid-body-cell>\r\n                        </td>\r\n                    </tr>\r\n                </ng-container>\r\n\r\n                <ng-container *ngIf=\"row[isGroupFooter] && !groupSummaryDataInGroupRow\">\r\n                    <tr class=\"f-datagrid-body-row f-datagrid-group-footer\" \r\n                        *ngIf=\"!row[isGroupRow]\"\r\n                        [attr.index]=\"startRowIndex + i\"\r\n                        [group-footer-row-styler]=\"row\"\r\n                        [style.display]=\"row[visible] ? '': 'none'\">\r\n                        <td class=\"f-datagrid-cell\"\r\n                            [attr.field]=\"col.field\" \r\n                            [attr.colspan]=\"col.groupFooter?.colspan || 1\"\r\n                            [attr.align]=\" col.groupFooter?.align || col.align\"\r\n                            [style.display]=\"col.groupFooter?.visible === false ? 'none': ''\"\r\n                            [style.paddingLeft.px]=\"(ci === 0 && !fixedRight )? row[groupLevelField] * 10 + 25 : 0\"\r\n                            footer-cell-styler [column]=\"col\" [rowData]=\"row\" [isGroupFooter]=\"true\"\r\n                            *ngFor=\"let col of columns; trackBy: trackByField; let ci = index;\">\r\n                            <div class=\"f-datagrid-cell-content\" [innerHTML]=\"col | formatCellData: row.data : true: false | safe: 'html'\"></div>\r\n                        </td>\r\n                    </tr>\r\n                </ng-container>\r\n\r\n            </ng-container>\r\n        </ng-container>\r\n\r\n    </tbody>\r\n    <tbody *ngIf=\"!dg.groupRows || !dg.groupField\" id=\"{{ (fixedRight? 'right-tbody_' : 'normal-rows-tbody_')+ dg.id}}\">\r\n\r\n        <ng-container *ngIf=\"!dg.mergeCell\">\r\n            <tr class=\"f-datagrid-body-row\"\r\n                [attr.id]=\"row | rowDataId: fixedRight\"\r\n                [attr.index]=\"startRowIndex + i\"\r\n                [grid-row]=\"row\"\r\n                [editable]=\"dg.editable\"\r\n                [rowIndex]=\"startRowIndex + i\" #dr=\"gridRow\"\r\n                [formGroup]=\"dr.form\"\r\n                #tr\r\n                [class.f-datagrid-row-selected]=\"row | rowIsSelected\"\r\n                [class.f-datagrid-disable-row]=\"dr.disabled\"\r\n                *ngFor=\"let row of data; trackBy: dg.trackByRows; let i = index\"\r\n                >\r\n\r\n                    <td *ngIf=\"dg.showCheckbox && dg.fast\" class=\"f-datagrid-cell f-datagrid-cell-checkbox\" style=\"text-align: center; left: 0\"\r\n                    [class.f-datagrid-fast__fixed-left]=\"dg.fast\" [class.l-shadow-col]=\"dg.fast && !dg.showLineNumber && !hasFixedColumns\">\r\n                        <div class=\"f-datagrid-cell-content checkbox-column\" style=\"text-overflow: unset;\">\r\n                        <datagrid-checkbox [disabled]=\"row | disableRow: dgb.startRowIndex + i: dg.disableRow\" [rowData]=\"row\"\r\n                            [rowIndex]=\"dgb.startRowIndex + i\" [checked]=\"row | rowIsChecked: checkedRows\"></datagrid-checkbox>\r\n                        </div>\r\n                    </td>\r\n        \r\n                    <td *ngIf=\"dg.showLineNumber && dg.fast\" [style.width.px]=\"dg.lineNumberWidth\"  class=\"f-datagrid-cell f-datagrid-cell-rownumber\"\r\n                    [class.f-datagrid-fast__fixed-left]=\"dg.fast\"  [style.left.px]=\"dg.showCheckbox ? 36: 0\" [class.l-shadow-col]=\"dg.fast && !hasFixedColumns\">\r\n                        <div class=\"f-datagrid-cell-content\">\r\n                            {{ dg.pageSize * (dg.pageIndex-1) + dgb.startRowIndex + i + 1 }}\r\n                        </div>\r\n                    </td>\r\n\r\n                    <td class=\"f-datagrid-cell\"\r\n                        [attr.field]=\"col.field\" \r\n                        [attr.align]=\"col.align\"\r\n                        [style.vertical-align]=\"col.valign\"\r\n                        [cell-editable]=\"row\"\r\n                        [column]=\"col\"  #editorcell=\"cellEditable\"\r\n                        [class.cell-readonly]=\"col | cellReadonly: row: dg\"\r\n                        [style.display]=\"dg.columnIsVisible(col) ? '': 'none'\"\r\n                        [class.f-datagrid-fast__fixed-left]=\"dg.fast && col.fixed && col.fixed === 'left'\"\r\n                        [class.f-datagrid-fast__fixed-right]=\"dg.fast && col.fixed && col.fixed === 'right'\"\r\n                        [class.r-shadow-col]=\"col.rightShadowCol\"\r\n                        [class.l-shadow-col]=\"col.leftShadowCol\"\r\n                        *ngFor=\"let col of columns;trackBy: dg.trackByRows; index as ci; last as islast;\">\r\n                        <grid-body-cell\r\n                            [width]=\"col.width\"\r\n                            [height]=\"dg.rowHeight\"\r\n                            [lastColumn]=\"islast\"\r\n                            [column]=\"col\"\r\n                            [rowData]=\"row\"\r\n                            [rowIndex]=\"startRowIndex + i\">\r\n                        </grid-body-cell>\r\n                    </td>\r\n                </tr>\r\n            </ng-container>\r\n            <ng-container *ngIf=\"dg.mergeCell\">\r\n                <tr class=\"f-datagrid-body-row\"\r\n                    [attr.id]=\"row | rowDataId: fixedRight \"\r\n                    [attr.index]=\"startRowIndex + i\"\r\n                    [grid-row]=\"row\"\r\n                    [editable]=\"dg.editable\"\r\n                    [rowIndex]=\"startRowIndex + i\"\r\n                    #dr=\"gridRow\" [formGroup]=\"dr.form\"\r\n                    [class.f-datagrid-row-selected]=\"row | rowIsSelected\"\r\n                    [class.f-datagrid-disable-row]=\"dr.disabled\"\r\n                    #tr\r\n                    *ngFor=\"let row of data; trackBy: dg.trackByRows; let i = index\">\r\n\r\n                        <td *ngIf=\"dg.showCheckbox && dg.fast\" class=\"f-datagrid-cell f-datagrid-cell-checkbox\" style=\"text-align: center;left:0\" \r\n                            [class.f-datagrid-fast__fixed-left]=\"dg.fast\" [class.l-shadow-col]=\"dg.fast && !dg.showLineNumber && !hasFixedColumns\">\r\n                            <div class=\"f-datagrid-cell-content checkbox-column\" style=\"text-overflow: unset;\">\r\n                            <datagrid-checkbox [disabled]=\"row | disableRow: startRowIndex + i: dg.disableRow\" [rowData]=\"row\"\r\n                                [rowIndex]=\"startRowIndex + i\" [checked]=\"row | rowIsChecked: checkedRows\"></datagrid-checkbox>\r\n                            </div>\r\n                        </td>\r\n            \r\n                        <td *ngIf=\"dg.showLineNumber  && dg.fast\" [style.width.px]=\"dg.lineNumberWidth\" class=\"f-datagrid-cell f-datagrid-cell-rownumber\"\r\n                        [class.f-datagrid-fast__fixed-left]=\"dg.fast\" [style.left.px]=\"dg.showCheckbox ? 36: 0\"\r\n                        [class.l-shadow-col]=\"dg.fast && !hasFixedColumns\">\r\n                            <div class=\"f-datagrid-cell-content\">\r\n                                {{ dg.pageSize * (dg.pageIndex-1) + startRowIndex + i + 1 }}\r\n                            </div>\r\n                        </td>\r\n\r\n                        <td *ngFor=\"let column of columns; trackBy: trackByField; index as ci; last as islast;\"\r\n                            [attr.field]=\"column.field\"\r\n                            class=\"f-datagrid-cell\" \r\n                            [attr.align]=\"column.align\"\r\n                            [style.display]=\" showCell(column, startRowIndex + i) ? '': 'none' \"\r\n                            [style.vertical-align]=\"column.valign\"\r\n                            [attr.rowspan]=\" getRowSpan(column, startRowIndex + i)\"\r\n                            [cell-editable]=\"row\"\r\n                            [column]=\"column\" #td \r\n                            [class.f-datagrid-td-merged]=\"td.rowSpan > 1\"\r\n                            [class.f-datagrid-fast__fixed-left]=\"dg.fast && column.fixed && column.fixed === 'left'\"\r\n                            [class.f-datagrid-fast__fixed-right]=\"dg.fast && column.fixed && column.fixed === 'right'\"\r\n                            [class.r-shadow-col]=\"column.rightShadowCol\"\r\n                            [class.l-shadow-col]=\"column.leftShadowCol\">\r\n                            <grid-body-cell \r\n                                [width]=\"column.width\"\r\n                                [height]=\"dg.rowHeight\" \r\n                                [lastColumn]=\"islast\"\r\n                                [column]=\"column\"\r\n                                [rowData]=\"row\"\r\n                                [rowIndex]=\"startRowIndex + i\">\r\n                            </grid-body-cell>\r\n                        </td>\r\n                </tr>\r\n            </ng-container>\r\n    </tbody>\r\n\r\n</table>"
                }] }
    ];
    /** @nocollapse */
    DatagridRowsComponent.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: DatagridComponent, decorators: [{ type: Inject, args: [forwardRef((/**
                         * @return {?}
                         */
                        function () { return DatagridComponent; })),] }] },
        { type: DatagridBodyComponent, decorators: [{ type: Inject, args: [forwardRef((/**
                         * @return {?}
                         */
                        function () { return DatagridBodyComponent; })),] }] },
        { type: ElementRef },
        { type: Injector },
        { type: NgZone }
    ]; };
    DatagridRowsComponent.propDecorators = {
        startRowIndex: [{ type: Input }],
        data: [{ type: Input }],
        columns: [{ type: Input }],
        tableEl: [{ type: ViewChild, args: ['tableEl',] }],
        fixedRight: [{ type: Input }],
        hasFixedColumns: [{ type: Input }]
    };
    return DatagridRowsComponent;
}());
export { DatagridRowsComponent };
if (false) {
    /** @type {?} */
    DatagridRowsComponent.prototype.startRowIndex;
    /** @type {?} */
    DatagridRowsComponent.prototype.data;
    /** @type {?} */
    DatagridRowsComponent.prototype.columns;
    /** @type {?} */
    DatagridRowsComponent.prototype.tableEl;
    /**
     * 是否为右侧固定列。默认为 false
     * @type {?}
     */
    DatagridRowsComponent.prototype.fixedRight;
    /**
     * 是否有左侧固定列
     * @type {?}
     */
    DatagridRowsComponent.prototype.hasFixedColumns;
    /** @type {?} */
    DatagridRowsComponent.prototype.isGroupRow;
    /** @type {?} */
    DatagridRowsComponent.prototype.groupRow;
    /** @type {?} */
    DatagridRowsComponent.prototype.isGroupFooter;
    /** @type {?} */
    DatagridRowsComponent.prototype.visible;
    /** @type {?} */
    DatagridRowsComponent.prototype.groupLevelField;
    /** @type {?} */
    DatagridRowsComponent.prototype.filterConditions;
    /** @type {?} */
    DatagridRowsComponent.prototype.checkedRows;
    /**
     * @type {?}
     * @private
     */
    DatagridRowsComponent.prototype.ro;
    /**
     * @type {?}
     * @private
     */
    DatagridRowsComponent.prototype.scrollToCurrentRowSubscription;
    /**
     * @type {?}
     * @private
     */
    DatagridRowsComponent.prototype.subscriptions;
    /**
     * @type {?}
     * @private
     */
    DatagridRowsComponent.prototype.destroy$;
    /** @type {?} */
    DatagridRowsComponent.prototype.cd;
    /** @type {?} */
    DatagridRowsComponent.prototype.dg;
    /** @type {?} */
    DatagridRowsComponent.prototype.dgb;
    /** @type {?} */
    DatagridRowsComponent.prototype.el;
    /**
     * @type {?}
     * @private
     */
    DatagridRowsComponent.prototype.injector;
    /**
     * @type {?}
     * @private
     */
    DatagridRowsComponent.prototype.ngZone;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YWdyaWQtcm93cy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL3VpLWRhdGFncmlkLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvYm9keS9kYXRhZ3JpZC1yb3dzLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFVQSxPQUFPLEVBQUUsU0FBUyxFQUFVLEtBQUssRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFpQixRQUFRLEVBQUUsTUFBTSxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM3SCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxFQUFhLE1BQU0sZUFBZSxDQUFDO0FBQ3JFLE9BQU8sRUFBRSxPQUFPLEVBQWdCLE1BQU0sTUFBTSxDQUFDO0FBQzdDLE9BQU8sRUFBK0IsWUFBWSxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQ3hFLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQzdELE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBRWxFLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxlQUFlLEVBQUUseUJBQXlCLEVBQUUsbUJBQW1CLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUM5SSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDM0M7SUFtQ0ksK0JBQ1csRUFBcUIsRUFDd0IsRUFBcUIsRUFDakIsR0FBMEIsRUFDM0UsRUFBYyxFQUFVLFFBQWtCLEVBQVUsTUFBYztRQUhsRSxPQUFFLEdBQUYsRUFBRSxDQUFtQjtRQUN3QixPQUFFLEdBQUYsRUFBRSxDQUFtQjtRQUNqQixRQUFHLEdBQUgsR0FBRyxDQUF1QjtRQUMzRSxPQUFFLEdBQUYsRUFBRSxDQUFZO1FBQVUsYUFBUSxHQUFSLFFBQVEsQ0FBVTtRQUFVLFdBQU0sR0FBTixNQUFNLENBQVE7Ozs7UUEzQnBFLGVBQVUs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Q0FBK0I7O0lBQy9CLHFDQUFtQjs7SUFDbkIsd0NBQStCOztJQUMvQix3Q0FBMEM7Ozs7O0lBRTFDLDJDQUE0Qjs7Ozs7SUFFNUIsZ0RBQWlDOztJQUVqQywyQ0FBZ0M7O0lBQ2hDLHlDQUEyQjs7SUFDM0IsOENBQTBDOztJQUMxQyx3Q0FBOEI7O0lBQzlCLGdEQUFvQzs7SUFFcEMsaURBQXNCOztJQU90Qiw0Q0FBaUI7Ozs7O0lBRWpCLG1DQUFrQzs7Ozs7SUFDbEMsK0RBQXFEOzs7OztJQUNyRCw4Q0FBMkM7Ozs7O0lBQzNDLHlDQUFpQzs7SUFFN0IsbUNBQTRCOztJQUM1QixtQ0FBeUU7O0lBQ3pFLG9DQUFrRjs7SUFDbEYsbUNBQXFCOzs7OztJQUFFLHlDQUEwQjs7Ozs7SUFBRSx1Q0FBc0IiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuXHJcbi8qXHJcbiAqIEBBdXRob3I6IOeWr+eLguengOaJjShMdWNhcyBIdWFuZylcclxuICogQERhdGU6IDIwMTktMDgtMDYgMDc6NDM6MDdcclxuICogQExhc3RFZGl0b3JzOiDnlq/ni4Lnp4DmiY0oTHVjYXMgSHVhbmcpXHJcbiAqIEBMYXN0RWRpdFRpbWU6IDIwMTktMTEtMjAgMDg6MTk6MDZcclxuICogQFFROiAxMDU1ODE4MjM5XHJcbiAqIEBWZXJzaW9uOiB2MC4wLjFcclxuICovXHJcbmltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBJbnB1dCwgVmlld0NoaWxkLCBFbGVtZW50UmVmLCBBZnRlclZpZXdJbml0LCBJbmplY3RvciwgSW5qZWN0LCBmb3J3YXJkUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IENoYW5nZURldGVjdG9yUmVmLCBOZ1pvbmUsIE9uRGVzdHJveSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBTdWJqZWN0LCBTdWJzY3JpcHRpb24gfSBmcm9tICdyeGpzJztcclxuaW1wb3J0IHsgRGF0YUNvbHVtbiwgU0NST0xMX1hfQUNUSU9OLCBUUl9JRF9QUkVGSVggfSBmcm9tICcuLi8uLi90eXBlcyc7XHJcbmltcG9ydCB7IERhdGFncmlkQ29tcG9uZW50IH0gZnJvbSAnLi4vLi4vZGF0YWdyaWQuY29tcG9uZW50JztcclxuaW1wb3J0IHsgRGF0YWdyaWRCb2R5Q29tcG9uZW50IH0gZnJvbSAnLi9kYXRhZ3JpZC1ib2R5LmNvbXBvbmVudCc7XHJcbmltcG9ydCBSZXNpemVPYnNlcnZlciBmcm9tICdyZXNpemUtb2JzZXJ2ZXItcG9seWZpbGwnO1xyXG5pbXBvcnQgeyBJU19HUk9VUF9ST1dfRklFTEQsIEdST1VQX1JPV19GSUVMRCwgSVNfR1JPVVBfRk9PVEVSX1JPV19GSUVMRCwgR1JPVVBfVklTSUJMRV9GSUVMRCwgR1JPVVBfTEVWRUxfRklFTEQgfSBmcm9tICcuLi8uLi9zZXJ2aWNlcy9zdGF0ZSc7XHJcbmltcG9ydCB7IHRha2VVbnRpbCB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcclxuQENvbXBvbmVudCh7XHJcbiAgICBzZWxlY3RvcjogJ2RhdGFncmlkLXJvd3MnLFxyXG4gICAgdGVtcGxhdGVVcmw6ICcuL2RhdGFncmlkLXJvd3MuY29tcG9uZW50Lmh0bWwnLFxyXG4gICAgLy8gY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2hcclxufSlcclxuZXhwb3J0IGNsYXNzIERhdGFncmlkUm93c0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgQWZ0ZXJWaWV3SW5pdCwgT25EZXN0cm95IHtcclxuXHJcbiAgICBASW5wdXQoKSBzdGFydFJvd0luZGV4OiBudW1iZXI7XHJcbiAgICBASW5wdXQoKSBkYXRhOiBhbnk7XHJcbiAgICBASW5wdXQoKSBjb2x1bW5zOiBEYXRhQ29sdW1uW107XHJcbiAgICBAVmlld0NoaWxkKCd0YWJsZUVsJykgdGFibGVFbDogRWxlbWVudFJlZjtcclxuICAgIC8qKiDmmK/lkKbkuLrlj7Pkvqflm7rlrprliJfjgILpu5jorqTkuLogZmFsc2UgKi9cclxuICAgIEBJbnB1dCgpIGZpeGVkUmlnaHQgPSBmYWxzZTtcclxuICAgIC8qKiDmmK/lkKbmnInlt6bkvqflm7rlrprliJcgKi9cclxuICAgIEBJbnB1dCgpIGhhc0ZpeGVkQ29sdW1ucyA9IGZhbHNlO1xyXG5cclxuICAgIGlzR3JvdXBSb3cgPSBJU19HUk9VUF9ST1dfRklFTEQ7XHJcbiAgICBncm91cFJvdyA9IEdST1VQX1JPV19GSUVMRDtcclxuICAgIGlzR3JvdXBGb290ZXIgPSBJU19HUk9VUF9GT09URVJfUk9XX0ZJRUxEO1xyXG4gICAgdmlzaWJsZSA9IEdST1VQX1ZJU0lCTEVfRklFTEQ7XHJcbiAgICBncm91cExldmVsRmllbGQgPSBHUk9VUF9MRVZFTF9GSUVMRDtcclxuXHJcbiAgICBmaWx0ZXJDb25kaXRpb25zID0gJyc7XHJcblxyXG5cclxuICAgIGdldCBncm91cFN1bW1hcnlEYXRhSW5Hcm91cFJvdygpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5kZy5ncm91cFN1bW1hcnlQb3NpdGlvbiA9PT0gJ2luR3JvdXBSb3cnO1xyXG4gICAgfVxyXG5cclxuICAgIGNoZWNrZWRSb3dzID0gW107XHJcblxyXG4gICAgcHJpdmF0ZSBybzogUmVzaXplT2JzZXJ2ZXIgPSBudWxsO1xyXG4gICAgcHJpdmF0ZSBzY3JvbGxUb0N1cnJlbnRSb3dTdWJzY3JpcHRpb246IFN1YnNjcmlwdGlvbjtcclxuICAgIHByaXZhdGUgc3Vic2NyaXB0aW9uczogU3Vic2NyaXB0aW9uW10gPSBbXTtcclxuICAgIHByaXZhdGUgZGVzdHJveSQgPSBuZXcgU3ViamVjdCgpO1xyXG4gICAgY29uc3RydWN0b3IoXHJcbiAgICAgICAgcHVibGljIGNkOiBDaGFuZ2VEZXRlY3RvclJlZixcclxuICAgICAgICBASW5qZWN0KGZvcndhcmRSZWYoKCkgPT4gRGF0YWdyaWRDb21wb25lbnQpKSBwdWJsaWMgZGc6IERhdGFncmlkQ29tcG9uZW50LFxyXG4gICAgICAgIEBJbmplY3QoZm9yd2FyZFJlZigoKSA9PiBEYXRhZ3JpZEJvZHlDb21wb25lbnQpKSBwdWJsaWMgZGdiOiBEYXRhZ3JpZEJvZHlDb21wb25lbnQsXHJcbiAgICAgICAgcHVibGljIGVsOiBFbGVtZW50UmVmLCBwcml2YXRlIGluamVjdG9yOiBJbmplY3RvciwgcHJpdmF0ZSBuZ1pvbmU6IE5nWm9uZSkge1xyXG5cclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIGxpc3RlbkV2ZW50KCkge1xyXG4gICAgICAgIGNvbnN0IF9zMyA9IHRoaXMuZGcuZGdzLnNldFNlbGVjZWRSb3cucGlwZSh0YWtlVW50aWwodGhpcy5kZXN0cm95JCkpLnN1YnNjcmliZSgocjogYW55KSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuZGV0ZWN0Q2hhbmdlcygpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMuc3Vic2NyaXB0aW9ucy5wdXNoKF9zMyk7XHJcblxyXG4gICAgICAgIGNvbnN0IF9zNCA9IHRoaXMuZGcuZGZzLnJvd0FwcGVuZCQucGlwZSh0YWtlVW50aWwodGhpcy5kZXN0cm95JCkpLnN1YnNjcmliZSgoKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuZGV0ZWN0Q2hhbmdlcygpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMuc3Vic2NyaXB0aW9ucy5wdXNoKF9zNCk7XHJcblxyXG4gICAgICAgIGNvbnN0IF9zNSA9IHRoaXMuZGcuZGZzLnJvd1VwZGF0ZSQucGlwZSh0YWtlVW50aWwodGhpcy5kZXN0cm95JCkpLnN1YnNjcmliZSgocm93OiB7IGluZGV4OiBudW1iZXI7IGRhdGE6IGFueTsgfSkgPT4ge1xyXG4gICAgICAgICAgICBpZiAocm93KSB7XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5kZy5ncm91cFJvd3MpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5kZy5ncm91cEZvb3Rlcikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmRnLmRmcy51cGRhdGVHcm91cEZvb3Rlcihyb3cuZGF0YVt0aGlzLmdyb3VwUm93XSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5zdWJzY3JpcHRpb25zLnB1c2goX3M1KTtcclxuXHJcbiAgICAgICAgdGhpcy5zY3JvbGxUb0N1cnJlbnRSb3dTdWJzY3JpcHRpb24gPSB0aGlzLmRnLmRncy5zY3JvbGxUb0N1cnJlbnRSb3cuc3Vic2NyaWJlKCgpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5zY3JvbGxUb0ZpcnN0U2VsZWN0ZWRSb3coKTtcclxuICAgICAgICAgICAgdGhpcy5kZy5zY3JvbGxJbnN0YW5jZS5zY3JvbGxUb0xlZnQoKTtcclxuICAgICAgICB9KTtcclxuXHJcblxyXG4gICAgICAgIHRoaXMuZGcuZGZzLmNoZWNrUm93JC5waXBlKFxyXG4gICAgICAgICAgICB0YWtlVW50aWwodGhpcy5kZXN0cm95JClcclxuICAgICAgICApLnN1YnNjcmliZSggKCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLmNoZWNrZWRSb3dzID0gdGhpcy5kZy5kZnMuZ2V0Q2hlY2tlZHMoKTtcclxuICAgICAgICAgICAgdGhpcy5kZXRlY3RDaGFuZ2VzKCk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHRoaXMuZGcuZGZzLmNsZWFyQ2hlY2tlZHMkLnBpcGUoXHJcbiAgICAgICAgICAgIHRha2VVbnRpbCh0aGlzLmRlc3Ryb3kkKVxyXG4gICAgICAgICkuc3Vic2NyaWJlKCAoKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuY2hlY2tlZFJvd3MgPSAgdGhpcy5kZy5kZnMuZ2V0Q2hlY2tlZHMoKTtcclxuICAgICAgICAgICAgdGhpcy5kZXRlY3RDaGFuZ2VzKCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgbmdPbkluaXQoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5saXN0ZW5FdmVudCgpO1xyXG4gICAgfVxyXG5cclxuICAgIG5nT25EZXN0cm95KCkge1xyXG4gICAgICAgIHRoaXMudW5TdWJzY3JpcHRpb25zKCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSB1blN1YnNjcmlwdGlvbnMoKSB7XHJcbiAgICAgICAgdGhpcy5kZXN0cm95JC5uZXh0KCk7XHJcbiAgICAgICAgdGhpcy5kZXN0cm95JC5jb21wbGV0ZSgpO1xyXG4gICAgICAgIGlmICh0aGlzLnNjcm9sbFRvQ3VycmVudFJvd1N1YnNjcmlwdGlvbikge1xyXG4gICAgICAgICAgICB0aGlzLnNjcm9sbFRvQ3VycmVudFJvd1N1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xyXG4gICAgICAgICAgICB0aGlzLnNjcm9sbFRvQ3VycmVudFJvd1N1YnNjcmlwdGlvbiA9IG51bGw7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAodGhpcy5zdWJzY3JpcHRpb25zICYmIHRoaXMuc3Vic2NyaXB0aW9ucy5sZW5ndGgpIHtcclxuICAgICAgICAgICAgdGhpcy5zdWJzY3JpcHRpb25zLmZvckVhY2gobiA9PiBuLnVuc3Vic2NyaWJlKTtcclxuICAgICAgICAgICAgdGhpcy5zdWJzY3JpcHRpb25zID0gW107XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIG5nQWZ0ZXJWaWV3SW5pdCgpIHtcclxuICAgICAgICB0aGlzLm5nWm9uZS5ydW5PdXRzaWRlQW5ndWxhcigoKSA9PiB7XHJcbiAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgaWYgKCF0aGlzLmRnLm5vd3JhcCkge1xyXG4gICAgICAgICAgICAgICAgICAgIC8vIHRoaXMuZGdiLnVwZGF0ZVJvd0hlaWdodCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZGcuY2FsY3VsYXRlR3JpZFNpemUoKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSwgMTAwKTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBnZXRHcm91cENvbHVtbihmaWVsZCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmRnLmZsYXRDb2x1bW5zLmZpbmQoY29sID0+IGNvbC5maWVsZCA9PT0gZmllbGQpO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgZGV0ZWN0Q2hhbmdlcygpIHtcclxuICAgICAgICBpZiAoIXRoaXMuY2RbJ2Rlc3Ryb3llZCddKSB7XHJcbiAgICAgICAgICAgIHRoaXMuY2QuZGV0ZWN0Q2hhbmdlcygpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICB0cmFja0J5RmllbGQoaW5kZXgsIGl0ZW0pIHtcclxuICAgICAgICByZXR1cm4gaXRlbS5maWVsZDtcclxuICAgIH1cclxuXHJcbiAgICBpc0VsZW1lbnRJblZpZXdwb3J0KGVsKSB7XHJcbiAgICAgICAgY29uc3QgY29udGFpbmVyID0gdGhpcy5kZ2IucHMuaW5zdGFuY2UuZWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcclxuICAgICAgICBjb25zdCBib3ggPSBlbC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcclxuICAgICAgICBjb25zdCB0b3AgPSAoYm94LnRvcCA8PSBjb250YWluZXIuaGVpZ2h0ICsgY29udGFpbmVyLnRvcCk7XHJcbiAgICAgICAgY29uc3QgYm90dG9tID0gKGJveC5ib3R0b20gPD0gKGNvbnRhaW5lci5ib3R0b20pKTtcclxuXHJcbiAgICAgICAgcmV0dXJuICh0b3AgJiYgYm90dG9tKTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIHNjcm9sbFRvRmlyc3RTZWxlY3RlZFJvdygpIHtcclxuICAgICAgICBpZiAodGhpcy5kZy5zZWxlY3RlZFJvdykge1xyXG4gICAgICAgICAgICBjb25zdCByb3dJbmRleCA9IHRoaXMuZGcuc2VsZWN0ZWRSb3cuaW5kZXg7XHJcbiAgICAgICAgICAgIGNvbnN0IHJvd0lkID0gVFJfSURfUFJFRklYICsgdGhpcy5kZy5zZWxlY3RlZFJvdy5pZDtcclxuICAgICAgICAgICAgY29uc3QgdHI6IGFueSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Iocm93SWQpO1xyXG5cclxuICAgICAgICAgICAgaWYgKHJvd0luZGV4ID09PSAwKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5kZ2IucHMgJiYgdGhpcy5kZ2IucHMuaW5zdGFuY2UpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5kZ2IucHMuaW5zdGFuY2UuZWxlbWVudC5zY3JvbGxUb3AgPT09IDApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZGcuc2Nyb2xsSW5zdGFuY2Uuc2Nyb2xsVG9ZKDApO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBjb25zdCB7IHRvcCwgYm90dG9tIH0gPSB0aGlzLmRnYi5nZXRWaXNpYmxlUmFuZ2UoKTtcclxuICAgICAgICAgICAgaWYgKHJvd0luZGV4ID09PSB0b3AgfHwgcm93SW5kZXggPT09IGJvdHRvbSkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG5cclxuICAgICAgICAgICAgICAgIGlmIChyb3dJbmRleCA+IHRvcCAmJiByb3dJbmRleCA8IGJvdHRvbSAmJiB0ciAmJiB0aGlzLmlzRWxlbWVudEluVmlld3BvcnQodHIpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBpZiAodHIpIHtcclxuICAgICAgICAgICAgICAgIGlmICh0ci5zY3JvbGxJbnRvVmlld0lmTmVlZGVkKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdHIuc2Nyb2xsSW50b1ZpZXdJZk5lZWRlZChmYWxzZSk7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIHRyLnNjcm9sbEludG9WaWV3KHsgYmxvY2s6ICduZWFyZXN0JywgaW5saW5lOiAnbmVhcmVzdCcgfSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBjdXJyZW50VHJUb3AgPSByb3dJbmRleCAqIHRoaXMuZGcucm93SGVpZ2h0O1xyXG4gICAgICAgICAgICAgICAgaWYgKGN1cnJlbnRUclRvcCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZGcuc2Nyb2xsSW5zdGFuY2Uuc2Nyb2xsVG9ZKGN1cnJlbnRUclRvcCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuXHJcbiAgICB0b2dnbGVHcm91cFJvdyhyb3csIGluZGV4LCBvcGVuKSB7XHJcbiAgICAgICAgcm93LmV4cGFuZGVkID0gb3BlbjtcclxuICAgICAgICB0aGlzLnNldEdyb3VwUm93c1Zpc2libGUocm93LCBvcGVuKTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIHNldEdyb3VwUm93c1Zpc2libGUocm93LCBvcGVuKSB7XHJcbiAgICAgICAgaWYgKHJvdy5yb3dzKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGdyb3VwUm93cyA9IHJvdy5yb3dzLmZpbHRlcihuID0+IG5bSVNfR1JPVVBfUk9XX0ZJRUxEXSk7XHJcbiAgICAgICAgICAgIGNvbnN0IGZvb3RlclJvd3MgPSByb3cucm93cy5maWx0ZXIobiA9PiBuW0lTX0dST1VQX0ZPT1RFUl9ST1dfRklFTERdKTtcclxuXHJcbiAgICAgICAgICAgIGlmIChmb290ZXJSb3dzICYmIGZvb3RlclJvd3MubGVuZ3RoKSB7XHJcbiAgICAgICAgICAgICAgICBmb290ZXJSb3dzLmZvckVhY2gobiA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgblt0aGlzLnZpc2libGVdID0gb3BlbiAmJiByb3cuZXhwYW5kZWQ7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgZ3JvdXBSb3dzLmZvckVhY2godCA9PiB7XHJcbiAgICAgICAgICAgICAgICB0W3RoaXMudmlzaWJsZV0gPSBvcGVuICYmIHJvdy5leHBhbmRlZCAmJiByb3dbdGhpcy52aXNpYmxlXTtcclxuICAgICAgICAgICAgICAgIHRoaXMuc2V0R3JvdXBSb3dzVmlzaWJsZSh0LCBvcGVuKTtcclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICBpZiAoIWdyb3VwUm93cy5sZW5ndGgpIHtcclxuICAgICAgICAgICAgICAgIHJvdy5yb3dzLmZvckVhY2godCA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdFt0aGlzLnZpc2libGVdID0gb3BlbiAmJiByb3cuZXhwYW5kZWQgJiYgcm93W3RoaXMudmlzaWJsZV07XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIG1lcmdlSW5mbyhmaWVsZDogc3RyaW5nLCByb3dJbmRleDogbnVtYmVyKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuZGcuZGdzLmdldE1lcmdlSW5mbyhyb3dJbmRleCwgZmllbGQsIHRoaXMuZGcubWVyZ2VDZWxsSW5mbyk7XHJcbiAgICB9XHJcblxyXG4gICAgc2hvd0NlbGwoY29sOiBEYXRhQ29sdW1uLCByb3dJbmRleDogbnVtYmVyKSB7XHJcbiAgICAgICAgY29uc3QgbWVyZ2VJbmZvID0gdGhpcy5tZXJnZUluZm8oY29sLmZpZWxkLCByb3dJbmRleCk7XHJcbiAgICAgICAgbGV0IHNob3cgPSB0cnVlO1xyXG4gICAgICAgIGlmIChtZXJnZUluZm8pIHtcclxuICAgICAgICAgICAgc2hvdyA9IG1lcmdlSW5mby5zaG93O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIHNob3c7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0Um93U3Bhbihjb2w6IERhdGFDb2x1bW4sIHJvd0luZGV4OiBudW1iZXIpIHtcclxuICAgICAgICBjb25zdCBtZXJnZUluZm8gPSB0aGlzLm1lcmdlSW5mbyhjb2wuZmllbGQsIHJvd0luZGV4KTtcclxuICAgICAgICBpZiAoIW1lcmdlSW5mbykge1xyXG4gICAgICAgICAgICByZXR1cm4gMTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHRoaXMuc2hvd0NlbGwoY29sLCByb3dJbmRleCkpIHtcclxuICAgICAgICAgICAgY29sLnJlYWRvbmx5ID0gdHJ1ZTtcclxuICAgICAgICAgICAgcmV0dXJuIG1lcmdlSW5mby5yb3dzcGFuO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiAxO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBnZXRHcm91cFN1bW1hcnlEYXRhKGdyb3VwSWQ6IHN0cmluZykge1xyXG4gICAgICAgIGNvbnN0IHJvdyA9IHRoaXMuZGF0YS5maW5kKG4gPT4gIG5bJ19fZ3JvdXBfcGFyZW50X2lkX18nXSA9PT0gZ3JvdXBJZCAmJiBuWydfX2dyb3VwX2Zvb3Rlcl9fJ10pO1xyXG4gICAgICAgIGlmIChyb3cpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHJvdy5kYXRhO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxufVxyXG5cclxuXHJcbiJdfQ==