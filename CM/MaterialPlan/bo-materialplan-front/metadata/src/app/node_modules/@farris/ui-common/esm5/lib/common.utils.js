/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { ColumnFormatService } from '@farris/ui-common/column';
import * as i0 from "@angular/core";
var CommonUtils = /** @class */ (function () {
    function CommonUtils() {
        this.cfs = null;
        if (!this.cfs) {
            this.cfs = new ColumnFormatService(null, null);
        }
    }
    /**
     * 获取对象中指定字段的值。 field: 可以为带有层级结构的路径，如： user.firstName | name 等
     * data: 获取字段的数据源，一般为JSON对象
     * safe: 为true, 将html字符进行转码输出，默认为 false
     */
    /**
     * 获取对象中指定字段的值。 field: 可以为带有层级结构的路径，如： user.firstName | name 等
     * data: 获取字段的数据源，一般为JSON对象
     * safe: 为true, 将html字符进行转码输出，默认为 false
     * @param {?} field
     * @param {?} data
     * @param {?=} safe
     * @return {?}
     */
    CommonUtils.prototype.getValue = /**
     * 获取对象中指定字段的值。 field: 可以为带有层级结构的路径，如： user.firstName | name 等
     * data: 获取字段的数据源，一般为JSON对象
     * safe: 为true, 将html字符进行转码输出，默认为 false
     * @param {?} field
     * @param {?} data
     * @param {?=} safe
     * @return {?}
     */
    function (field, data, safe) {
        if (safe === void 0) { safe = false; }
        if (!data) {
            return '';
        }
        /** @type {?} */
        var resultVal = '';
        if (field.indexOf('.') === -1 && data.hasOwnProperty(field)) {
            resultVal = data[field];
        }
        else {
            resultVal = field.split('.').reduce((/**
             * @param {?} obj
             * @param {?} key
             * @return {?}
             */
            function (obj, key) {
                if (obj) {
                    return obj[key];
                }
                else {
                    return null;
                }
            }), data);
        }
        if (safe) {
            return this.formatterValue(resultVal);
        }
        else {
            return resultVal;
        }
    };
    /**
     * 更新指定对象中某个字段的值
     * @param obj 被更新对象
     * @param field 被更新字段
     * @param val 新值
     * @param nest 是否为嵌套，默认为 true
     */
    /**
     * 更新指定对象中某个字段的值
     * @param {?} obj 被更新对象
     * @param {?} field 被更新字段
     * @param {?} val 新值
     * @param {?=} nest 是否为嵌套，默认为 true
     * @return {?}
     */
    CommonUtils.prototype.setValue = /**
     * 更新指定对象中某个字段的值
     * @param {?} obj 被更新对象
     * @param {?} field 被更新字段
     * @param {?} val 新值
     * @param {?=} nest 是否为嵌套，默认为 true
     * @return {?}
     */
    function (obj, field, val, nest) {
        if (nest === void 0) { nest = true; }
        if (field) {
            if (field.indexOf('.') > -1 && nest) {
                /** @type {?} */
                var lastObj_1 = null;
                /** @type {?} */
                var _fields = field.split('.');
                _fields.reduce((/**
                 * @param {?} c
                 * @param {?} p
                 * @return {?}
                 */
                function (c, p) {
                    lastObj_1 = c;
                    return c[p];
                }), obj);
                if (lastObj_1) {
                    lastObj_1[_fields.pop()] = val;
                }
            }
            else {
                obj[field] = val;
            }
        }
    };
    /**
     * @param {?} value
     * @param {?} enumData
     * @param {?} valueField
     * @return {?}
     */
    CommonUtils.prototype.getEnumItem = /**
     * @param {?} value
     * @param {?} enumData
     * @param {?} valueField
     * @return {?}
     */
    function (value, enumData, valueField) {
        /** @type {?} */
        var item = enumData.find((/**
         * @param {?} n
         * @return {?}
         */
        function (n) { return n[valueField] == value; }));
        return item;
    };
    /**
     * @private
     * @param {?} value
     * @param {?} col
     * @return {?}
     */
    CommonUtils.prototype._getEnumTitleFromColumn = /**
     * @private
     * @param {?} value
     * @param {?} col
     * @return {?}
     */
    function (value, col) {
        /** @type {?} */
        var _col = (/** @type {?} */ (col));
        /** @type {?} */
        var formatter = (/** @type {?} */ (_col.formatter));
        if (formatter && typeof formatter === 'object') {
            if (formatter.type === 'enum' && formatter.options) {
                return this.getEnumTitleFromColumnOptions(value, formatter.options);
            }
        }
        return value;
    };
    /**
     * @param {?} col
     * @param {?} data
     * @return {?}
     */
    CommonUtils.prototype.getEnumTitle = /**
     * @param {?} col
     * @param {?} data
     * @return {?}
     */
    function (col, data) {
        /** @type {?} */
        var val = this.getValue(col.field, data);
        return this._getEnumTitleFromColumn(val, col);
    };
    /**
     * @param {?} value
     * @param {?} opts
     * @return {?}
     */
    CommonUtils.prototype.getEnumTitleFromColumnOptions = /**
     * @param {?} value
     * @param {?} opts
     * @return {?}
     */
    function (value, opts) {
        var data = opts.data, valueField = opts.valueField, textField = opts.textField;
        /** @type {?} */
        var item = this.getEnumItem(value, data, valueField);
        if (item) {
            return item[textField];
        }
        else {
            return value;
        }
    };
    /**
     * @param {?} str
     * @return {?}
     */
    CommonUtils.prototype.escapeHtml = /**
     * @param {?} str
     * @return {?}
     */
    function (str) {
        if (str === null || str === undefined) {
            return '';
        }
        return str
            .replace(/&/g, '&amp;')
            .replace(/</g, '&lt;')
            .replace(/>/g, '&gt;')
            .replace(/\"/g, '&quot;')
            .replace(/\'/g, '&#39;')
            .replace(/\//g, '&#x2F;');
    };
    /**
     * @param {?} str
     * @return {?}
     */
    CommonUtils.prototype.unescapeHtml = /**
     * @param {?} str
     * @return {?}
     */
    function (str) {
        if (str === null || str === undefined) {
            return '';
        }
        return str
            .replace(/&amp;/g, '&')
            .replace(/&lt;/g, '<')
            .replace(/&gt;/g, '>')
            .replace(/&quot;/g, '"')
            .replace(/&#39;/g, '\'')
            .replace(/&#x2F;/g, '/');
    };
    /**
     * @private
     * @param {?} val
     * @return {?}
     */
    CommonUtils.prototype.formatterValue = /**
     * @private
     * @param {?} val
     * @return {?}
     */
    function (val) {
        if (val === null || val === undefined || val === '') {
            return '';
        }
        if (typeof val === 'string') {
            return this.escapeHtml(val);
        }
        return val;
    };
    /** 获取字符串在页面中的真实宽度 */
    /**
     * 获取字符串在页面中的真实宽度
     * @param {?} txt
     * @param {?} font
     * @return {?}
     */
    CommonUtils.prototype.getTextWidth = /**
     * 获取字符串在页面中的真实宽度
     * @param {?} txt
     * @param {?} font
     * @return {?}
     */
    function (txt, font) {
        // const frag = document.createDocumentFragment();
        /** @type {?} */
        var canvas = document.createElement('canvas');
        /** @type {?} */
        var context = canvas.getContext('2d');
        context.font = font;
        /** @type {?} */
        var metrics = context.measureText(txt);
        return Math.round(metrics.width);
    };
    /**
     * @param {?} id
     * @return {?}
     */
    CommonUtils.prototype.removeStyleSheet = /**
     * @param {?} id
     * @return {?}
     */
    function (id) {
        /** @type {?} */
        var styleElement = document.querySelector('#' + id);
        if (styleElement) {
            styleElement.remove();
        }
    };
    /**
     * @param {?} styleSheetId
     * @return {?}
     */
    CommonUtils.prototype.createStyleSheet = /**
     * @param {?} styleSheetId
     * @return {?}
     */
    function (styleSheetId) {
        /** @type {?} */
        var htmlHead = document.querySelector('head');
        /** @type {?} */
        var styleEleId = styleSheetId;
        /** @type {?} */
        var styleElement = null;
        if (document.querySelector('#' + styleEleId)) {
            styleElement = document.querySelector('#' + styleEleId);
            styleElement.innerText = '';
        }
        else {
            styleElement = document.createElement('style');
            styleElement.id = styleEleId;
            htmlHead.appendChild(styleElement);
        }
        return styleElement;
    };
    /**
     * @param {?} styleSheetId
     * @return {?}
     */
    CommonUtils.prototype.getStyleSheet = /**
     * @param {?} styleSheetId
     * @return {?}
     */
    function (styleSheetId) {
        var e_1, _a;
        /** @type {?} */
        var styleSheets = (/** @type {?} */ (document.styleSheets));
        /** @type {?} */
        var styleSheet = null;
        try {
            for (var styleSheets_1 = tslib_1.__values(styleSheets), styleSheets_1_1 = styleSheets_1.next(); !styleSheets_1_1.done; styleSheets_1_1 = styleSheets_1.next()) {
                var stylesheet = styleSheets_1_1.value;
                if ((stylesheet.ownerNode || stylesheet['owningElement']).id === styleSheetId) {
                    styleSheet = stylesheet;
                    break;
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (styleSheets_1_1 && !styleSheets_1_1.done && (_a = styleSheets_1.return)) _a.call(styleSheets_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
        return styleSheet;
    };
    /** 与现有样式合并 */
    /**
     * 与现有样式合并
     * @param {?} rules
     * @param {?} styleSheet
     * @return {?}
     */
    CommonUtils.prototype.appendCssRules = /**
     * 与现有样式合并
     * @param {?} rules
     * @param {?} styleSheet
     * @return {?}
     */
    function (rules, styleSheet) {
        var e_2, _a;
        try {
            for (var rules_1 = tslib_1.__values(rules), rules_1_1 = rules_1.next(); !rules_1_1.done; rules_1_1 = rules_1.next()) {
                var rule = rules_1_1.value;
                /** @type {?} */
                var ruleName = rule.slice(0, rule.indexOf('{'));
                /** @type {?} */
                var removedCssRule = this.removeCssRule(ruleName, styleSheet);
                /** @type {?} */
                var cssText = '';
                if (removedCssRule) {
                    cssText += removedCssRule.cssText.slice(removedCssRule.cssText.indexOf('{') + 1, removedCssRule.cssText.indexOf('}'));
                }
                cssText += rule.slice(rule.indexOf('{') + 1, rule.indexOf('}')).replace(/"/g, '').replace(/,/g, ';') + ';';
                if (styleSheet.addRule) {
                    styleSheet.addRule(ruleName, cssText, 0);
                }
                else {
                    /** @type {?} */
                    var _newRule = ruleName + "{ " + cssText + " }";
                    styleSheet.insertRule(_newRule, 0);
                }
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (rules_1_1 && !rules_1_1.done && (_a = rules_1.return)) _a.call(rules_1);
            }
            finally { if (e_2) throw e_2.error; }
        }
    };
    /** 覆盖现有的样式 */
    /**
     * 覆盖现有的样式
     * @param {?} rules
     * @param {?} styleSheet
     * @return {?}
     */
    CommonUtils.prototype.appendCssRules2 = /**
     * 覆盖现有的样式
     * @param {?} rules
     * @param {?} styleSheet
     * @return {?}
     */
    function (rules, styleSheet) {
        var e_3, _a;
        try {
            for (var rules_2 = tslib_1.__values(rules), rules_2_1 = rules_2.next(); !rules_2_1.done; rules_2_1 = rules_2.next()) {
                var rule = rules_2_1.value;
                /** @type {?} */
                var ruleName = rule.slice(0, rule.indexOf('{'));
                /** @type {?} */
                var removedCssRule = this.removeCssRule(ruleName, styleSheet);
                /** @type {?} */
                var cssText = rule.slice(rule.indexOf('{') + 1, rule.indexOf('}')).replace(/"/g, '').replace(/,/g, ';') + ';';
                if (styleSheet.addRule) {
                    styleSheet.addRule(ruleName, cssText, 0);
                }
                else {
                    /** @type {?} */
                    var _newRule = ruleName + "{ " + cssText + " }";
                    styleSheet.insertRule(_newRule, 0);
                }
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (rules_2_1 && !rules_2_1.done && (_a = rules_2.return)) _a.call(rules_2);
            }
            finally { if (e_3) throw e_3.error; }
        }
    };
    /**
     * @param {?} ruleName
     * @param {?} styleSheet
     * @return {?}
     */
    CommonUtils.prototype.getCssRule = /**
     * @param {?} ruleName
     * @param {?} styleSheet
     * @return {?}
     */
    function (ruleName, styleSheet) {
        var e_4, _a;
        /** @type {?} */
        var cssRules = (/** @type {?} */ ((styleSheet.cssRules || styleSheet.rules)));
        /** @type {?} */
        var r = null;
        try {
            for (var cssRules_1 = tslib_1.__values(cssRules), cssRules_1_1 = cssRules_1.next(); !cssRules_1_1.done; cssRules_1_1 = cssRules_1.next()) {
                var rule = cssRules_1_1.value;
                if (rule.selectorText == ruleName) {
                    r = rule;
                }
            }
        }
        catch (e_4_1) { e_4 = { error: e_4_1 }; }
        finally {
            try {
                if (cssRules_1_1 && !cssRules_1_1.done && (_a = cssRules_1.return)) _a.call(cssRules_1);
            }
            finally { if (e_4) throw e_4.error; }
        }
        return r;
    };
    /**
     * @param {?} ruleName
     * @param {?} styleSheet
     * @return {?}
     */
    CommonUtils.prototype.removeCssRule = /**
     * @param {?} ruleName
     * @param {?} styleSheet
     * @return {?}
     */
    function (ruleName, styleSheet) {
        /** @type {?} */
        var cssRules = (/** @type {?} */ ((styleSheet.cssRules || styleSheet.rules)));
        /** @type {?} */
        var ii = 0;
        /** @type {?} */
        var cssRule = false;
        do {
            cssRule = cssRules[ii];
            if (cssRule) {
                if (cssRule.selectorText.toLowerCase() == ruleName.toLowerCase()) {
                    if (styleSheet.cssRules) {
                        styleSheet.deleteRule(ii);
                    }
                    else {
                        styleSheet.removeRule(ii);
                    }
                    return cssRule;
                }
            }
            ii++;
        } while (cssRule);
    };
    /**
     * @param {?} val
     * @return {?}
     */
    CommonUtils.prototype.isNullOrUndefined = /**
     * @param {?} val
     * @return {?}
     */
    function (val) {
        return val === null || val === undefined;
    };
    /**
     * @return {?}
     */
    CommonUtils.prototype.isIE = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var uA = window.navigator.userAgent;
        return /msie\s|trident\/|edge\//i.test(uA) && !!('uniqueID' in document || 'documentMode' in document || ('ActiveXObject' in window) || 'MSInputMethodContext' in window);
    };
    /**
     * @param {?} sorts
     * @return {?}
     */
    CommonUtils.prototype.buildSortString = /**
     * @param {?} sorts
     * @return {?}
     */
    function (sorts) {
        return this.cfs.buildSortString(sorts);
    };
    /**
     * @param {?} conditions
     * @return {?}
     */
    CommonUtils.prototype.buildSqlWhere = /**
     * @param {?} conditions
     * @return {?}
     */
    function (conditions) {
        return this.cfs.buildSqlWhere(conditions);
    };
    /**
     * @return {?}
     */
    CommonUtils.prototype.getBrowserType = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var ua = navigator.userAgent.toLowerCase();
        // 获取用户端信息
        /** @type {?} */
        var info = {
            ie: /msie/.test(ua) && !/opera/.test(ua),
            //  匹配IE浏览器
            op: /opera/.test(ua),
            //  匹配Opera浏览器
            sa: /version.*safari/.test(ua),
            // 匹配Safari浏览器
            ch: /chrome/.test(ua),
            //  匹配Chrome浏览器
            ff: /gecko/.test(ua) && !/webkit/.test(ua) // 匹配Firefox浏览器
        };
        return info;
    };
    /**
     * @return {?}
     */
    CommonUtils.prototype.getFFVer = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var ua = navigator.userAgent;
        /** @type {?} */
        var b = ua.indexOf('Firefox/');
        if (b < 0) {
            return 0;
        }
        return parseFloat(ua.substring(b + 8, ua.lastIndexOf('\.')));
    };
    /**
     * @param {?} name
     * @param {?=} locationSearch
     * @return {?}
     */
    CommonUtils.prototype.getQueryString = /**
     * @param {?} name
     * @param {?=} locationSearch
     * @return {?}
     */
    function (name, locationSearch) {
        if (locationSearch === void 0) { locationSearch = ''; }
        /** @type {?} */
        var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)", "i");
        /** @type {?} */
        var _search = window.location.search;
        if (locationSearch) {
            _search = locationSearch;
        }
        /** @type {?} */
        var r = _search.substring(1).match(reg);
        if (r != null)
            return (r[2]);
        return null;
    };
    /**
     * 获取页面中body下所有元素的zIndex, 并返回下个浮层的新zindex
     */
    /**
     * 获取页面中body下所有元素的zIndex, 并返回下个浮层的新zindex
     * @param {?=} upperLayers
     * @return {?}
     */
    CommonUtils.prototype.getFloatingLayerIndex = /**
     * 获取页面中body下所有元素的zIndex, 并返回下个浮层的新zindex
     * @param {?=} upperLayers
     * @return {?}
     */
    function (upperLayers) {
        if (upperLayers === void 0) { upperLayers = 1; }
        /** @type {?} */
        var overlays = Array.from(document.body.querySelectorAll('body>div, body>farris-dialog>.farris-modal,body>.farris-modal')).filter((/**
         * @param {?} n
         * @return {?}
         */
        function (n) { return n; })).map((/**
         * @param {?} n
         * @return {?}
         */
        function (n) {
            return parseInt(window.getComputedStyle(n).zIndex, 10);
        })).filter((/**
         * @param {?} n
         * @return {?}
         */
        function (n) { return n; }));
        /** @type {?} */
        var maxZindex = Math.max.apply(Math, tslib_1.__spread(overlays));
        return maxZindex + upperLayers;
    };
    CommonUtils.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    CommonUtils.ctorParameters = function () { return []; };
    /** @nocollapse */ CommonUtils.ngInjectableDef = i0.defineInjectable({ factory: function CommonUtils_Factory() { return new CommonUtils(); }, token: CommonUtils, providedIn: "root" });
    return CommonUtils;
}());
export { CommonUtils };
if (false) {
    /**
     * @type {?}
     * @private
     */
    CommonUtils.prototype.cfs;
}
//# sourceMappingURL=data:application/json;base64,