import { Injector, InjectFlags } from '../core/index';
import { AppContext } from '../app/index';
/**
 * 视图模型上下文
 */
class ViewModelContext {
    constructor() {
    }
    init(viewModel) {
        this.innerViewModel = viewModel;
        this.id = this.innerViewModel.id;
        this.appContext = viewModel.injector.get(AppContext);
        this.regToTree();
        this.regToAppContext();
    }
    regToTree() {
        const parentInjector = this.innerViewModel.injector.get(Injector, null, InjectFlags.SkipSelf);
        if (parentInjector) {
            this.parent = parentInjector.get(ViewModelContext, null);
            this.root = this.parent ? this.parent.root : this;
        }
        else {
            this.parent = null;
            this.root = this;
        }
    }
    regToAppContext() {
        this.appContext.regViewModelContext(this);
    }
    get viewModel() {
        return this.innerViewModel;
    }
    get injector() {
        return this.innerViewModel.injector;
    }
    get repository() {
        return this.innerViewModel.repository;
    }
    get bindingData() {
        return this.innerViewModel.bindingData;
    }
    get uiState() {
        return this.innerViewModel.uiState;
    }
    get stateMachine() {
        return this.innerViewModel.stateMachine;
    }
    get form() {
        return this.innerViewModel.form;
    }
    get commandBus() {
        return this.innerViewModel.commandBus;
    }
}
export { ViewModelContext };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmlld19tb2RlbF9jb250ZXh0LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy9tb2JpbGUtZGV2a2l0LyIsInNvdXJjZXMiOlsibGliL3ZpZXctbW9kZWwvdmlld19tb2RlbF9jb250ZXh0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsV0FBVyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXRELE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFVMUM7O0dBRUc7QUFDSCxNQUFNLGdCQUFnQjtJQVlwQjtJQUNBLENBQUM7SUFFTSxJQUFJLENBQUMsU0FBUztRQUNuQixJQUFJLENBQUMsY0FBYyxHQUFHLFNBQVMsQ0FBQztRQUNoQyxJQUFJLENBQUMsRUFBRSxHQUFHLElBQUksQ0FBQyxjQUFjLENBQUMsRUFBRSxDQUFDO1FBQ2pDLElBQUksQ0FBQyxVQUFVLEdBQUcsU0FBUyxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDckQsSUFBSSxDQUFDLFNBQVMsRUFBRSxDQUFDO1FBQ2pCLElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztJQUN6QixDQUFDO0lBRU0sU0FBUztRQUNkLE1BQU0sY0FBYyxHQUFHLElBQUksQ0FBQyxjQUFjLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBVyxRQUFRLEVBQUUsSUFBSSxFQUFFLFdBQVcsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUN4RyxJQUFJLGNBQWMsRUFBRztZQUNuQixJQUFJLENBQUMsTUFBTSxHQUFHLGNBQWMsQ0FBQyxHQUFHLENBQUMsZ0JBQWdCLEVBQUUsSUFBSSxDQUFDLENBQUM7WUFDekQsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO1NBQ25EO2FBQU07WUFDTCxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQztZQUNuQixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztTQUNsQjtJQUNILENBQUM7SUFFTSxlQUFlO1FBQ3BCLElBQUksQ0FBQyxVQUFVLENBQUMsbUJBQW1CLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDNUMsQ0FBQztJQUVELElBQVcsU0FBUztRQUNsQixPQUFPLElBQUksQ0FBQyxjQUFjLENBQUM7SUFDN0IsQ0FBQztJQUVELElBQVcsUUFBUTtRQUNqQixPQUFPLElBQUksQ0FBQyxjQUFjLENBQUMsUUFBUSxDQUFDO0lBQ3RDLENBQUM7SUFFRCxJQUFXLFVBQVU7UUFDbkIsT0FBTyxJQUFJLENBQUMsY0FBYyxDQUFDLFVBQVUsQ0FBQztJQUN4QyxDQUFDO0lBRUQsSUFBVyxXQUFXO1FBQ3BCLE9BQU8sSUFBSSxDQUFDLGNBQWMsQ0FBQyxXQUFXLENBQUM7SUFDekMsQ0FBQztJQUVELElBQVcsT0FBTztRQUNoQixPQUFPLElBQUksQ0FBQyxjQUFjLENBQUMsT0FBTyxDQUFDO0lBQ3JDLENBQUM7SUFFRCxJQUFXLFlBQVk7UUFDckIsT0FBTyxJQUFJLENBQUMsY0FBYyxDQUFDLFlBQVksQ0FBQztJQUMxQyxDQUFDO0lBRUQsSUFBVyxJQUFJO1FBQ2IsT0FBTyxJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQztJQUNsQyxDQUFDO0lBRUQsSUFBVyxVQUFVO1FBQ25CLE9BQU8sSUFBSSxDQUFDLGNBQWMsQ0FBQyxVQUFVLENBQUM7SUFDeEMsQ0FBQztDQUVGO0FBRUQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RvciwgSW5qZWN0RmxhZ3MgfSBmcm9tICcuLi9jb3JlL2luZGV4JztcclxuaW1wb3J0IHsgQ29udGV4dCB9IGZyb20gJy4uL2NvbnRleHQvaW5kZXgnO1xyXG5pbXBvcnQgeyBBcHBDb250ZXh0IH0gZnJvbSAnLi4vYXBwL2luZGV4JztcclxuaW1wb3J0IHsgRW50aXR5IH0gZnJvbSAnLi4vZW50aXR5L2luZGV4JztcclxuaW1wb3J0IHsgUmVwb3NpdG9yeSB9IGZyb20gJy4uL3JlcG9zaXRvcnkvaW5kZXgnO1xyXG5pbXBvcnQgeyBCaW5kaW5nRGF0YSB9IGZyb20gJy4uL2JpbmRpbmctZGF0YS9pbmRleCc7XHJcbmltcG9ydCB7IFVJU3RhdGUgfSBmcm9tICcuLi91aS1zdGF0ZS9pbmRleCc7XHJcbmltcG9ydCB7IFN0YXRlTWFjaGluZSB9IGZyb20gJy4uL3N0YXRlLW1hY2hpbmUvaW5kZXgnO1xyXG5pbXBvcnQgeyBGb3JtIH0gZnJvbSAnLi4vZm9ybS9pbmRleCc7XHJcbmltcG9ydCB7IFZpZXdNb2RlbCB9IGZyb20gJy4uL3ZpZXctbW9kZWwvaW5kZXgnO1xyXG5pbXBvcnQgeyBDb21tYW5kQnVzIH0gZnJvbSAnLi4vY29tbWFuZC9pbmRleCc7XHJcblxyXG4vKipcclxuICog6KeG5Zu+5qih5Z6L5LiK5LiL5paHXHJcbiAqL1xyXG5jbGFzcyBWaWV3TW9kZWxDb250ZXh0IHtcclxuXHJcbiAgcHJpdmF0ZSBpbm5lclZpZXdNb2RlbDogVmlld01vZGVsO1xyXG5cclxuICBwdWJsaWMgYXBwQ29udGV4dDogQXBwQ29udGV4dDtcclxuXHJcbiAgcHVibGljIHJvb3Q6IFZpZXdNb2RlbENvbnRleHQ7XHJcblxyXG4gIHB1YmxpYyBwYXJlbnQ6IFZpZXdNb2RlbENvbnRleHQ7XHJcblxyXG4gIHB1YmxpYyBpZDogc3RyaW5nO1xyXG5cclxuICBjb25zdHJ1Y3RvcigpIHtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBpbml0KHZpZXdNb2RlbCk6IHZvaWQge1xyXG4gICAgdGhpcy5pbm5lclZpZXdNb2RlbCA9IHZpZXdNb2RlbDtcclxuICAgIHRoaXMuaWQgPSB0aGlzLmlubmVyVmlld01vZGVsLmlkO1xyXG4gICAgdGhpcy5hcHBDb250ZXh0ID0gdmlld01vZGVsLmluamVjdG9yLmdldChBcHBDb250ZXh0KTtcclxuICAgIHRoaXMucmVnVG9UcmVlKCk7XHJcbiAgICB0aGlzLnJlZ1RvQXBwQ29udGV4dCgpO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIHJlZ1RvVHJlZSgpIHtcclxuICAgIGNvbnN0IHBhcmVudEluamVjdG9yID0gdGhpcy5pbm5lclZpZXdNb2RlbC5pbmplY3Rvci5nZXQ8SW5qZWN0b3I+KEluamVjdG9yLCBudWxsLCBJbmplY3RGbGFncy5Ta2lwU2VsZik7XHJcbiAgICBpZiAocGFyZW50SW5qZWN0b3IpICB7XHJcbiAgICAgIHRoaXMucGFyZW50ID0gcGFyZW50SW5qZWN0b3IuZ2V0KFZpZXdNb2RlbENvbnRleHQsIG51bGwpO1xyXG4gICAgICB0aGlzLnJvb3QgPSB0aGlzLnBhcmVudCA/IHRoaXMucGFyZW50LnJvb3QgOiB0aGlzO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5wYXJlbnQgPSBudWxsO1xyXG4gICAgICB0aGlzLnJvb3QgPSB0aGlzO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcHVibGljIHJlZ1RvQXBwQ29udGV4dCgpIHtcclxuICAgIHRoaXMuYXBwQ29udGV4dC5yZWdWaWV3TW9kZWxDb250ZXh0KHRoaXMpO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGdldCB2aWV3TW9kZWwoKTogVmlld01vZGVsIHtcclxuICAgIHJldHVybiB0aGlzLmlubmVyVmlld01vZGVsO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGdldCBpbmplY3RvcigpOiBJbmplY3RvciB7XHJcbiAgICByZXR1cm4gdGhpcy5pbm5lclZpZXdNb2RlbC5pbmplY3RvcjtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBnZXQgcmVwb3NpdG9yeSgpOiBSZXBvc2l0b3J5PEVudGl0eT4ge1xyXG4gICAgcmV0dXJuIHRoaXMuaW5uZXJWaWV3TW9kZWwucmVwb3NpdG9yeTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBnZXQgYmluZGluZ0RhdGEoKTogQmluZGluZ0RhdGEge1xyXG4gICAgcmV0dXJuIHRoaXMuaW5uZXJWaWV3TW9kZWwuYmluZGluZ0RhdGE7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgZ2V0IHVpU3RhdGUoKTogVUlTdGF0ZSB7XHJcbiAgICByZXR1cm4gdGhpcy5pbm5lclZpZXdNb2RlbC51aVN0YXRlO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGdldCBzdGF0ZU1hY2hpbmUoKTogU3RhdGVNYWNoaW5lIHtcclxuICAgIHJldHVybiB0aGlzLmlubmVyVmlld01vZGVsLnN0YXRlTWFjaGluZTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBnZXQgZm9ybSgpOiBGb3JtIHtcclxuICAgIHJldHVybiB0aGlzLmlubmVyVmlld01vZGVsLmZvcm07XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgZ2V0IGNvbW1hbmRCdXMoKTogQ29tbWFuZEJ1cyB7XHJcbiAgICByZXR1cm4gdGhpcy5pbm5lclZpZXdNb2RlbC5jb21tYW5kQnVzO1xyXG4gIH1cclxuXHJcbn1cclxuXHJcbmV4cG9ydCB7IFZpZXdNb2RlbENvbnRleHQgfTtcclxuIl19