{"version":3,"sources":["ng://@farris/ui-filter/lib/entity/controltype.ts","ng://@farris/ui-filter/lib/entity/conditionvalue/checkboxgroupvalue.ts","ng://@farris/ui-filter/lib/entity/conditionvalue/helpvalue.ts","ng://@farris/ui-filter/lib/entity/conditionvalue/textvalue.ts","ng://@farris/ui-filter/lib/entity/fieldconfig/fieldconfig.ts","ng://@farris/ui-filter/lib/entity/controltype/text/textcontrol.ts","ng://@farris/ui-filter/lib/entity/conditionvalue/searchvalue.ts","ng://@farris/ui-filter/lib/entity/conditionvalue/datevalue.ts","ng://@farris/ui-filter/lib/entity/conditionvalue/daterangevalue.ts","ng://@farris/ui-filter/lib/entity/conditionvalue/daterangetimevalue.ts","ng://@farris/ui-filter/lib/entity/controltype/dropdownlist/enumtype.ts","ng://@farris/ui-filter/lib/entity/controltype/dropdownlist/integerenumvalue.ts","ng://@farris/ui-filter/lib/entity/controltype/dropdownlist/stringenumvalue.ts","ng://@farris/ui-filter/lib/entity/controltype/dropdownlist/boolenumvalue.ts","ng://@farris/ui-filter/lib/entity/controltype/dropdownlist/ienumvalue.ts","ng://@farris/ui-filter/lib/entity/conditionvalue/dropdownlistvalue.ts","ng://@farris/ui-filter/lib/entity/conditionvalue/numberrangevaue.ts","ng://@farris/ui-filter/lib/entity/controltype/date/datecontrol.ts","ng://@farris/ui-filter/lib/entity/controltype/numberrange/numberrangecontrol.ts","ng://@farris/ui-filter/lib/entity/controltype/search/searchcontrol.ts","ng://@farris/ui-filter/lib/entity/controltype/dropdownlist/dropdowncontrol.ts","ng://@farris/ui-filter/lib/entity/controltype/help/helpcontrol.ts","ng://@farris/ui-filter/lib/entity/controltype/datarange/daterangecontrol.ts","ng://@farris/ui-filter/lib/entity/controltype/datarangetime/daterangetimecontrol.ts","ng://@farris/ui-filter/lib/entity/controltype/checkbox/checkboxcontrol.ts","ng://@farris/ui-filter/lib/entity/controltype/radio/radiocontrol.ts","ng://@farris/ui-filter/lib/entity/conditionvalue/radiovalue.ts","ng://@farris/ui-filter/lib/entity/conditionvalue/yearvalue.ts","ng://@farris/ui-filter/lib/entity/conditionvalue/month.ts","ng://@farris/ui-filter/lib/entity/conditionvalue/yearrange.ts","ng://@farris/ui-filter/lib/entity/conditionvalue/monthrange.ts","ng://@farris/ui-filter/lib/entity/controltype/year/yearcontrol.ts","ng://@farris/ui-filter/lib/entity/controltype/month/monthcontrol.ts","ng://@farris/ui-filter/lib/entity/controltype/yearrange/yearrangecontrol.ts","ng://@farris/ui-filter/lib/entity/controltype/monthrange/monthrangecontrol.ts","ng://@farris/ui-filter/lib/entity/controltype/input-group/inputgroupcontrol.ts","ng://@farris/ui-filter/lib/entity/conditionvalue/inputgroup.ts","ng://@farris/ui-filter/lib/entity/controltype/number/numbercontrol.ts","ng://@farris/ui-filter/lib/entity/conditionvalue/numbervalue.ts","ng://@farris/ui-filter/lib/entity/conditionvalue/flexiblenumbervalue.ts","ng://@farris/ui-filter/lib/entity/controltype/flexiblenumbercontrol.ts","ng://@farris/ui-filter/lib/entity/conditionvalue/flexibledatevalue.ts","ng://@farris/ui-filter/lib/entity/controltype/flexibledatecontrol.ts","ng://@farris/ui-filter/lib/filter.service.ts","node_modules/tslib/tslib.es6.js","ng://@farris/ui-filter/lib/entity/querycondition.ts","ng://@farris/ui-filter/lib/entity/comparetype.ts","ng://@farris/ui-filter/lib/entity/valuetype.ts","ng://@farris/ui-filter/lib/entity/relationtype.ts","ng://@farris/ui-filter/lib/entity/controltype/checkbox/ienumvalue.ts","ng://@farris/ui-filter/lib/service/convertorservice.ts","ng://@farris/ui-filter/lib/interface/filterHandler.ts","ng://@farris/ui-filter/lib/utils.ts","ng://@farris/ui-filter/lib/filter.component.ts","ng://@farris/ui-filter/lib/service/solution.service.ts","ng://@farris/ui-filter/lib/components/inputcomponent/input.component.ts","ng://@farris/ui-filter/lib/components/numbercomponent/number.component.ts","ng://@farris/ui-filter/lib/components/dropdowncomponent/dropdown.component.ts","ng://@farris/ui-filter/lib/components/searchcomponent/search.component.ts","ng://@farris/ui-filter/lib/entity/controltype/checkbox/checkboxvalue.ts","ng://@farris/ui-filter/lib/components/checkboxcomponent/checkbox.component.ts","ng://@farris/ui-filter/lib/components/daterangecomponent/daterange.component.ts","ng://@farris/ui-filter/lib/components/helpcomponent.ts/help.component.ts","ng://@farris/ui-filter/lib/components/datecomponent/date.component.ts","ng://@farris/ui-filter/lib/controlType.pipe.ts","ng://@farris/ui-filter/lib/entity/controltype/radio/radiovalue.ts","ng://@farris/ui-filter/lib/components/radiocomponent/radio.component.ts","ng://@farris/ui-filter/lib/components/inputgroupcomponent/inputgroup.component.ts","ng://@farris/ui-filter/lib/components/singlenumbercomponent/number.component.ts","ng://@farris/ui-filter/lib/components/flexiblecomponent/flexiblenumber.component.ts","ng://@farris/ui-filter/lib/components/flexibledatecomponent/flexibledate.component.ts","ng://@farris/ui-filter/lib/filter.module.ts","ng://@farris/ui-filter/lib/entity/conditionvalue/ivalue.ts","ng://@farris/ui-filter/lib/entity/controltype/radio/ienumvalue.ts","ng://@farris/ui-filter/lib/entity/controltype/help/displayType.ts","ng://@farris/ui-filter/lib/entity/controltype/icontrol.ts","ng://@farris/ui-filter/lib/entity/list-filter.model.ts"],"names":["Text","Help","DropDown","DateRange","NumberRange","Search","Date","CheckboxGroup","DateRangeTime","Radio","Year","Month","MonthRange","YearRange","InputGroup","Number","FlexibleNumber","FlexibleDate","BoolCheck","CheckboxGroupValue","prototype","clearValue","this","value","clear$","emit","setOriginalValue","getOriginalValue","getControlType","ControlType","isEmpty","length","getValueText","join","EventEmitter","HelpValue","getPropValue","helpItem","args","arg","shift","valueField","undefined","textValue","Error","args_1","split","valueArr","map","cloneDeep","getTextValue","textField","textArr","data","hasOwnProperty","TextValue","FieldConfig","TextControl","SearchValue","DateValue","formatted","ctrl","format","DateTimeHelperService","formatTo","DateRangeValue","startTime","delimiter","endTime","dateHlp","DateRangeTimeValue","fmt","controltype","indexOf","IntType","StringType","BoolType","EnumIntegerValue","getEnumType","EnumType","getEnumValueName","name","getEnumValue","EnumStringValue","EnumBoolValue","EnumValueConvert","convertJObject","obj","enumValue","enumType","jobj","Object","initFromJobject","content","assign","DropDownListValue","DropDownListValueConvert","convertToObject","dropDownListValue","initFromObject","NumberRangeValue","startValue","endValue","begin","end","parseFloat","NumberRangeValueConvertor","numberRangeValue","DateControl","NumberRangeControl","SearchControl","DropDownControl","DropDownListControlConvert","dropDownListControl","valueType","enumValues","jarray_1","convertor_1","forEach","element","push","control","Array","convertor","HelpContol","DateRangeControl","DateRangeTimeControl","CheckboxGroupControl","boolcheck","RadioControl","RadioGroupValue","YearValue","MonthValue","YearRangeValue","MonthRangeValue","YearControl","MonthControl","YearRangeControl","MonthRangeControl","InputGroupControl","isRequired","required","DialogConfig","DialogButtonConfig","InputGroupValue","_this","item","isInputText","targetField","trim","NumberControl","NumberValue","FlexibleNumberValue","single","FlexibleNumberControl","FlexibleDateValue","FlexibleDateControl","FilterService","fieldSchemasConvert","filedSchemas","fieldConfigs","filedSchema","fieldConfig","id","labelCode","code","placeHolder","beginPlaceHolder","endPlaceHolder","fieldName","filled","getTextControl","getSearchControl","getDateControl","getYearControl","getMonthControl","getYearRangeControl","getMonthRangeControl","getDateRangeControl","getDateRangeTimeControl","getDropDownControl","getNumberRangeControl","getLookUpEditControl","getCheckboxGroupControl","getRadioControl","getInputGroupControl","getNumberControl","getFlexibleNumberControl","getFlexibleDateControl","enableClear","valueText","textControl","placeholder","isExtend","showLabel","inputGroupControl","editable","groupText","usageMode","dialogOptions","setInputGroupDialog","modalConfig","click","dateControl","compareType","yearControl","monthControl","yearRangeControl","monthRangeControl","numberRangeControl","precision","bigNumber","numberControl","flexiblenumberControl","flexibledateControl","showType","showTime","searchControl","dropdowncontrol","lookupEdit","uri","idField","helpId","mapFields","context","preEventCmd","postEventCmd","enableFullTree","loadTreeDataType","singleSelect","expandLevel","enableCascade","displayType","checkboxGroupcontrol","dateRangeControl","modalConfigData","dialogConfig","modalId","JSON","parse","replace","showHeader","title","width","height","setInputGroupDialogButtons","buttonData","button","text","appearance","class","cls","handle","setValues","Injectable","providedIn","__assign","t","s","i","n","arguments","p","call","apply","QueryCondition","Equal","GreaterThan","GreaterThanOrEqual","LessThan","LessThanOrEqual","BetWeen","Value","SmartHelp","Enum","Express","And","Or","CheckboxEnumValue","ConvertorService","getFeildConfigs","selectedConditions","fieldsConfigs","condition","fieldCode","getSelectedFieldConditions","fileds","selectedFieldConditions","tempSelectedFieldConditions","arrayClone","filed","getDropListEnumValues","tempIndex","findIndex","x","getNewFieldConditions","enumValues_1","enumValues_2","enumValues_3","getCheckGroupEnumValues","selectedFieldCondition","ValueType","relationType","RelationType","getTextValueFieldCondition","getDateRangeValueFieldCondition","getDateRangeTimeValueFieldCondition","getDateValueFieldCondition","getNumberRangeValueFieldCondition","getSmartHelpValueFieldCondition","getDropDownValueFieldCondition","getSearchValueFieldCondition","getCheckboxGroupValueFieldCondition","getRadioValueFieldCondition","getInputGroupValueFieldCondition","getNumberValueFieldCondition","getFlexibleNumberValueFieldCondition","getFlexibleDateValueFieldCondition","CompareType","input","result","FILTER_HANDLER_TOKEN","InjectionToken","deepCopy","newobj","constructor","type","toString","defineProperty","FilterComponent","_filterList","filterList","initFilterList","_enableAutoWidth","filterEllipsis","filterExtendShow","_defaultValue","configs","_this_1","setTimeout","setFilterValue","ngOnInit","filterWrapperEl","filterListWrapper","nativeElement","bindRoEvent","foldText","localeService","getValue","expandText","filterExtendText","currentLocale","localeIds","isControlInline","fromEvent","window","pipe","auditTime","subscribe","floatPanelHeight","innerHeight","floatFilterIconBottom","ngOnDestroy","ro","unobserve","floatPanel","overLayService","destory","filterWrapper","ngzone","runOutsideAngular","ResizeObserver","entries","observer","tempWidth","contentRect","Math","abs","containerWidthRecord","distanceThreshold","enableAutoWidth","listEllipsisInit","observe","ngOnChanges","changes","ngAfterViewInit","listFilterConditions","filterDatas","filterService","convertorService","stagListFilterConditions","o","filterListClassify","showReminder","showFilterList","showReminderItem","filterlistItems","children","showRemItem","getAttribute","reminderLeft","offsetLeft","cd","detectChanges","extendFilterList","extendFilterListStore","filledFilterList","filledExtendFilterList","loopFilterList","extendRequiredList","showRequiredList","requiredList","filter","listitem","requiredListFilter","canSubmit","canSubmitFilter","field","filledFilter","list","showrequiredList","showCanSubmit","advancedCanSubmit","filterClick","event","index","stopPropagation","disabled","instanceID","localStorageKey","currentFilterId","panelItem","_a","currentTarget","getBoundingClientRect","left","top_1","top","right","filterPanelContainer","filterPanelService","showPanel","hidePanel","e","clearFilter","_this_2","submit","panelListIndex","searchChange","inSetCurrentFilterConditions","findItem","find","markForCheck","filterClear","resetListCondition","advancedFilter","extendFilterListTemporary","farrissidebar","isOpen","listCancel","floatPanelOpen","floatFilterOpen","$evnet","bottom","registerMouseEvent","contains","target","nodeName","className","k","closest","filterListW","filterMainWidth","filterMain","offsetWidth","filterToolWidth","filterTool","filterExtend","filterItems","filterItemWidth","len","render","setStyle","filterResize","filterExpand","filterExtendIcon","expandFilter","packupFilter","onSearch","$event","conditions","instance","requirelist","formCanSubmit","tv","keys","shv","ddv","drv","mrv","yrv","nrv","sv","dv","mv","yv","cbgv","radiov","flexv","flexdatev","listSearch","farrisSearchRecord","farrisSearchRecordArray","storagelabelCode","filterPanelArray","localStorage","getItem","isArray","unshift","slice","setItem","stringify","extendAmendedList","showExpandTag","extendListIndex","filterlist","filterItem","queryList","handler","setFilterConditions","query","listFilter","resetFilterValue","resetCondition","qc","controlType","v","c","filterHandler","setCurrentFilterConditions","listFilterCondition","resetSearch","resetChange","resetAdvancedSearch","value_1","texts","val","value_2","enums","value_3","buildSmartHelpKey","idService","pathArr","prefix","location","hash","pathname","encrypt","Component","selector","template","encapsulation","ViewEncapsulation","None","providers","FilterPanelService","QuerySolutionService","ChangeDetectorRef","Renderer2","NgZone","LocaleService","Injector","decorators","Optional","Input","HostBinding","Output","ViewChild","injector","floatFilter","cla","sidebarOpen","en","zh-CHS","get","LOCALE_ID","InjectFlags","IdService","OverLayHiddenService","SolutionService","getGuid","s4","random","substring","getConditionItemTitle","InputComponent","extend","autoLabel","showlabel","solutionService","InputChanged","searchHandle","ElementRef","NumberComponent","_item","nr","min","max","constructMultiFieldNumberRange","beginValue","numberChange","dataArray","beginValueChange","endValueChange","canNull","DropDownComponent","getDataSource","initialValue","selectedItemId","dropDownList","dropDownListDataSource","onClear","SearchComponent","groupIcon","CheckboxValue","filterCheckboxComponent","checkValue","boolchecked","boolCheckState","checkboxList","checkboxDataSource","checkboxValue","handleClick","indeterminate","selectCheck","DateRangeComponent","initDate","itemDateFormat","dateFormat","rangeDateValue","rangeDate","getDate","dateString","onDateChange","returnFormatted","HelpComponent","getHelpBindingInfo","selectedDataHandler","selectedItem","helpValue","helpList_1","hostRef","selectItem","clearData","of","DateComponent","date","ControlTypeXPipe","transform","Pipe","RadioValue","filterRadioComponent","radioValue","radioboxList","radioDataSource","SimpleInputGroupComponent","constructTextItem","textItem","textValueObj","testId","getInputGroupBindingInfo","onClick","options","selectedItems","isTextFromDialog","textFormDialog","onBlur","SingleNumberComponent","FlexibleNumberComponent","setValueText","FlexibleDateComponent","constructMultiFieldDateRange","startValueText","endValueText","SimpleFilterModule","NgModule","declarations","imports","CommonModule","FormsModule","FilterPanelModule","FarrisSidebarModule","FarrisTooltipModule","InputGroupModule","FarrisDatePickerModule","DatalistModule","ComboListModule","LookupModule","FarrisFormsModule","NumberSpinnerModule","PerfectScrollbarModule","FilterConditionModule","LocaleModule","forRoot","FarrisCommonModule","exports","ConditionValueConvert","conditionValue","RadioEnumValue","LIST","TREELIST","ControlConvert","listFilterItem","setWidth","parseInt","getWidth","_id","_groupName","listFilterGroup","responsedIndex","listItems"],"mappings":"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","sourcesContent":["export enum ControlType{\r\n    Text=0,\r\n    Help=1,\r\n    DropDown=2,\r\n    DateRange=3,\r\n    NumberRange=4,\r\n    Search=5,\r\n    Date=6,\r\n    CheckboxGroup=7,\r\n    DateRangeTime=8,\r\n    Radio=9,\r\n    Year=10,\r\n    Month=11,\r\n    MonthRange=12,\r\n    YearRange=13,\r\n    InputGroup=14,\r\n    Number=15,\r\n    FlexibleNumber=16,\r\n    FlexibleDate=17,\r\n    BoolCheck=18\r\n}","import { IValue } from './ivalue';\r\nimport { ControlType } from '../controltype';\r\nimport { EventEmitter } from '@angular/core';\r\n\r\nexport class CheckboxGroupValue implements IValue {\r\n    value: any[];\r\n    clear$ = new EventEmitter();\r\n    constructor(value: { value: any[] } = { value: [] }) {\r\n        this.value = value.value;\r\n    }\r\n\r\n    clearValue(): void {\r\n        this.value = [];\r\n        this.clear$.emit();\r\n    }\r\n    setOriginalValue(value: any[]): void {\r\n        this.value = value;\r\n    }\r\n    getOriginalValue() {\r\n        return this.value;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.CheckboxGroup;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.value.length == 0;\r\n    }\r\n    getValueText(): string {\r\n        return this.value.join(',');\r\n    }\r\n}\r\n","import { IValue } from './ivalue';\r\nimport { ControlType } from '../controltype';\r\nimport { EventEmitter } from '@angular/core';\r\nimport { cloneDeep } from 'lodash-es';\r\n\r\nexport class HelpValue implements IValue {\r\n    valueField: string;\r\n    value: any[];\r\n    textValue: string;\r\n    clear$ = new EventEmitter();\r\n\r\n\r\n\r\n    constructor(data: {\r\n        value: any,\r\n        valueField: string,\r\n        textValue: string;\r\n    } = { value: [], valueField: undefined, textValue: undefined }) {\r\n        if (data.hasOwnProperty('textValue')) {// æ°ç»æï¼valueæ¯æ°ç»\r\n            this.valueField = data.valueField;\r\n            this.value = data.value;\r\n            this.textValue = data.textValue;\r\n        } else {// æ§ç»æï¼valueæ¯å¯¹è±¡\r\n            this.valueField = data.valueField;\r\n            this.value = data.value ? [data.value] : [];\r\n            this.textValue = 'help-text-value-null'; // æ§ç»ææ textValueå±æ§\r\n        }\r\n\r\n    }\r\n\r\n    static getPropValue(helpItem: any, args: Array<string>): any {\r\n        if (args.length > 1) {\r\n            const arg = args.shift();\r\n            return helpItem[arg] ? this.getPropValue(helpItem[arg], args) : null;\r\n        }\r\n        return helpItem[args[0]];\r\n    }\r\n\r\n\r\n    clearValue(): void {\r\n        this.value = [];\r\n        this.valueField = undefined;\r\n        this.textValue = undefined;\r\n        this.clear$.emit();\r\n    }\r\n    setOriginalValue(value: any): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    getOriginalValue(): string {\r\n        if (this.valueField) {\r\n            const args = this.valueField.split('.');\r\n            const valueArr = this.value.map(helpItem => HelpValue.getPropValue(helpItem, cloneDeep(args)));\r\n            return valueArr && valueArr.length ? valueArr.join(',') : '';\r\n        }\r\n        else {\r\n            return '';\r\n        }\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.Help;\r\n    }\r\n\r\n\r\n    isEmpty(): boolean {\r\n        return !this.valueField;\r\n    }\r\n\r\n\r\n\r\n    getTextValue(textField: string): string {\r\n        const args = textField.split('.');\r\n        const textArr = this.value.map(helpItem => HelpValue.getPropValue(helpItem, cloneDeep(args)));\r\n        return textArr && textArr.length ? textArr.join(',') : '';\r\n    }\r\n    getValueText(): string {\r\n        return this.textValue;\r\n    }\r\n}\r\n","import { IValue } from './ivalue';\r\nimport { ControlType } from '../controltype';\r\nimport { EventEmitter } from '@angular/core';\r\n\r\nexport class TextValue implements IValue {\r\n    value: string;\r\n    clear$ = new EventEmitter();\r\n    constructor(value: { value: string } = { value: '' }) {\r\n        this.value = value.value;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.Text;\r\n    }\r\n    clearValue(): void {\r\n        this.value = undefined;\r\n        this.clear$.emit();\r\n    }\r\n    setOriginalValue(value: any): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    getOriginalValue() {\r\n        return this.value;\r\n    }\r\n    isEmpty(): boolean {\r\n        return !this.value;\r\n    }\r\n\r\n    getValueText(): string {\r\n        return this.value;\r\n    }\r\n}","import { IControl } from \"../controltype/icontrol\";\r\nimport { IValue } from '../conditionvalue/ivalue';\r\n\r\n/**\r\n * å­æ®µéç½®\r\n */\r\nexport class FieldConfig{\r\n\r\n    /**\r\n     * å­æ®µID\r\n     */\r\n    id?:string;\r\n    \r\n    /**\r\n     * å­æ®µæ ç­¾ï¼å­æ®µç¼å·çå¯ä¸æ è¯\r\n     */\r\n    labelCode:string;\r\n\r\n    /**\r\n     * å­æ®µç¼å·\r\n     */\r\n    code?:string;\r\n\r\n    /**\r\n     * å­æ®µåç§°\r\n     */\r\n    name?:string;\r\n\r\n    /**\r\n     * å­æ®µæè¿°\r\n     */\r\n    //description:string;\r\n\r\n    /**\r\n     * å¼\r\n     * è¯¥å±æ§ä¸ºIValueæ¥å£ï¼æ ¹æ®ä¸åçæ§ä»¶ç±»åæä¸åçå®ç°ç±»ï¼å·ä½å¦ä¸ï¼\r\n     * 1. ææ¬ç±»åï¼TextValue\r\n     * 2. ä¸æåè¡¨ï¼DropDownListValue\r\n     * 3. æ¥æåºé´ï¼DateRangeValue\r\n     * 4. æ°å­åºé´ï¼NumberRangeValue\r\n     * 5. å¸®å©ç±»åï¼SmartHelpValue\r\n    */\r\n   //value:IValue;\r\n\r\n    /**\r\n     * æ©å±å­æ®µ1\r\n     */\r\n    //extend1:string;\r\n\r\n    /**\r\n     * æ©å±å­æ®µ2\r\n     */\r\n    //extend2:string;\r\n\r\n    /**\r\n     * æ©å±å­æ®µ3\r\n     */\r\n    //extend3:string;\r\n\r\n    /**\r\n     * æ§ä»¶ç±»åï¼ç®ååæ¬ææ¬ç±»åï¼ä¸æåè¡¨ï¼æ¥æåºé´ï¼æ°å­åºé´ï¼å¸®å©ç±»å\r\n     * æ§ä»¶ç±»åä¸ºIControlæ¥å£ï¼æ ¹æ®ä¸åçæ§ä»¶ç±»åå¯¹åºä¸åçå®ç°ç±»ï¼å·ä½å¦ä¸ï¼\r\n     * 1. ææ¬ç±»åï¼TextControl\r\n     * 2. ä¸æåè¡¨ï¼DropDownListControl\r\n     * 3. æ¥æåºé´ï¼DateRangeControl\r\n     * 4. æ°å­åºé´ï¼NumberRangeControl\r\n     * 5. å¸®å©ç±»åï¼SmartHelpContol\r\n     */\r\n    control?:IControl;\r\n\r\n    /** è¡¨åæ°æ® */\r\n    value?:any;\r\n\r\n    /**æ¯å¦æ¯æ©å±åºåçè¡¨å */\r\n    // isExtend:boolean;\r\n\r\n    /**æ¯å¦å æ»¡å¨å±å©ä½ */\r\n    // expand:boolean;\r\n    //é»è®¤æ¾ç¤º\r\n    placeHolder?:string;\r\n    //æ¯å¦æå¼\r\n    filled:boolean;\r\n    //éæ©åçå¼\r\n    valueText:string;\r\n    beginPlaceHolder?:string;\r\n    endPlaceHolder?:string;\r\n\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * ææ¬æ§ä»¶\r\n */\r\nexport class TextControl implements IControl{\r\n    \r\n    /**\r\n     * è·åæ§ä»¶ç±»åï¼è¿åå¼ï¼ææ¬æ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.Text;\r\n    }\r\n\r\n    /**\r\n     * é»è®¤æ¾ç¤º\r\n     */\r\n    placeholder:string;\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n}","import { IValue } from './ivalue';\r\nimport { ControlType } from '../controltype';\r\nimport { EventEmitter } from '@angular/core';\r\n\r\nexport class SearchValue implements IValue{\r\n    value:string;\r\n    clear$ = new EventEmitter();\r\n    constructor(value: { value: string } = {value: ''}){\r\n        this.value = value.value;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.Search;\r\n    }\r\n    \r\n    clearValue(): void {\r\n        this.value = undefined;\r\n        this.clear$.emit();\r\n    }\r\n    setOriginalValue(value: any): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    getOriginalValue() {\r\n        return this.value;\r\n    }\r\n    isEmpty(): boolean {\r\n        return !this.value;\r\n    }\r\n\r\n    getValueText():string{\r\n        return this.value;\r\n    }\r\n}\r\n","import { IValue } from './ivalue';\r\nimport { ControlType } from '../controltype';\r\nimport { EventEmitter } from '@angular/core';\r\nimport { DateTimeHelperService } from '@farris/ui-common/date';\r\nexport class DateValue implements IValue {\r\n    value: string;\r\n    clear$ = new EventEmitter();\r\n    constructor(value: { value: string } = { value: '' }) {\r\n        this.value = value.value;\r\n    }\r\n    setOriginalValue(value: any): void {\r\n        this.value = value.formatted;\r\n    }\r\n    getOriginalValue() {\r\n        return this.value;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.Date;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return !this.value;\r\n    }\r\n    clearValue(): void {\r\n        this.value = undefined;\r\n        this.clear$.emit();\r\n    }\r\n    getValueText(ctrl?: any): string {\r\n        if (ctrl && ctrl.format) {\r\n            return new DateTimeHelperService().formatTo(this.value, ctrl.format);\r\n        }\r\n        return this.value;\r\n    }\r\n}","import { IValue } from \"./ivalue\";\r\nimport { ControlType } from \"../controltype\";\r\nimport { EventEmitter } from '@angular/core';\r\nimport { DateTimeHelperService } from \"@farris/ui-common/date\";\r\nexport class DateRangeValue implements IValue {\r\n    startTime: string;\r\n    endTime: string;\r\n    clear$ = new EventEmitter();\r\n    constructor(value: { startTime: string, endTime: string } = { startTime: '', endTime: '' }) {\r\n        this.startTime = value.startTime;\r\n        this.endTime = value.endTime;\r\n    }\r\n\r\n    setOriginalValue(value: { formatted: string, delimiter: string }): void {\r\n        if (value.formatted) {\r\n            this.startTime = value.formatted.split(value.delimiter)[0];\r\n            this.endTime = value.formatted.split(value.delimiter)[1];\r\n        } else {\r\n            this.clearValue();\r\n        }\r\n    }\r\n    getOriginalValue() {\r\n        return `${this.startTime}~${this.endTime}`;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.DateRange;\r\n    }\r\n    clearValue(): void {\r\n        this.startTime = undefined;\r\n        this.endTime = undefined;\r\n        this.clear$.emit();\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return !this.startTime || !this.endTime;\r\n    }\r\n\r\n    getValueText(ctrl?: any): string {\r\n        if (!this.startTime.length || !this.endTime.length) {\r\n            return '';\r\n        }\r\n        else {\r\n            if (ctrl && ctrl.format) {\r\n                const dateHlp = new DateTimeHelperService();\r\n                return dateHlp.formatTo(this.startTime, ctrl.format) +'~'+ dateHlp.formatTo(this.endTime, ctrl.format);\r\n            }\r\n\r\n            return (this.startTime + '~' + this.endTime);\r\n        }\r\n    }\r\n}\r\n","import { IValue } from \"./ivalue\";\r\nimport { ControlType } from \"../controltype\";\r\nimport { EventEmitter } from '@angular/core';\r\nimport { DateTimeHelperService } from \"@farris/ui-common/date\";\r\nexport class DateRangeTimeValue implements IValue {\r\n\r\n    startTime: string;\r\n    endTime: string;\r\n    clear$ = new EventEmitter();\r\n    constructor(value: { startTime: string, endTime: string } = { startTime: '', endTime: '' }) {\r\n        this.startTime = value.startTime;\r\n        this.endTime = value.endTime;\r\n    }\r\n\r\n    setOriginalValue(value: { formatted: string, delimiter: string }): void {\r\n        if (value.formatted) {\r\n            this.startTime = value.formatted.split(value.delimiter)[0];\r\n            this.endTime = value.formatted.split(value.delimiter)[1];\r\n        } else {\r\n            this.clearValue();\r\n        }\r\n    }\r\n    getOriginalValue() {\r\n        return `${this.startTime}~${this.endTime}`;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.DateRangeTime;\r\n    }\r\n    clearValue(): void {\r\n        this.startTime = undefined;\r\n        this.endTime = undefined;\r\n        this.clear$.emit();\r\n    }\r\n    isEmpty(): boolean {\r\n        return !this.startTime || !this.endTime;\r\n    }\r\n    getValueText(ctrl?: any): string {\r\n        if (!this.startTime.length || !this.endTime.length) {\r\n            return '';\r\n        }\r\n        else {\r\n            if (ctrl && ctrl.format) {\r\n                let fmt = ctrl.format;\r\n                if (ctrl.controltype === 'datetime') {\r\n                    if (ctrl.format.indexOf('HH:mm') === -1) {\r\n                        fmt = ctrl.format + ' HH:mm:ss';\r\n                    } \r\n                }\r\n\r\n                const dateHlp = new DateTimeHelperService();\r\n                return dateHlp.formatTo(this.startTime, fmt) +'~'+ dateHlp.formatTo(this.endTime, fmt);\r\n            }\r\n            return (this.startTime + '~' + this.endTime);\r\n        }\r\n    }\r\n}\r\n","export enum EnumType{\r\n    IntType=0,\r\n    StringType=1,\r\n    BoolType=2\r\n}","import { IEnumValue } from \"./ienumvalue\";\r\nimport { EnumType } from \"./enumtype\";\r\n\r\n/**\r\n * ä¸æåè¡¨Integerç±»å\r\n */\r\nexport class EnumIntegerValue implements IEnumValue{\r\n    getEnumType(): EnumType {\r\n        return EnumType.IntType;\r\n    }\r\n    \r\n    getEnumValueName():string{\r\n        return this.name;\r\n    }\r\n\r\n    getEnumValue():any{\r\n        return this.value;\r\n    }\r\n\r\n    /**\r\n     * ææ¬æ¾ç¤º\r\n     */\r\n    name:string;\r\n\r\n    /**\r\n     * å¼æ¾ç¤º\r\n     */\r\n    value:number;\r\n}","import { IEnumValue } from \"./ienumvalue\";\r\nimport { EnumType } from \"./enumtype\";\r\n\r\n/**\r\n * ä¸æåè¡¨Stringç±»å\r\n */\r\nexport class EnumStringValue implements IEnumValue{\r\n    getEnumType(): EnumType {\r\n        return  EnumType.StringType;\r\n    }\r\n\r\n    getEnumValueName():string{\r\n        return this.name;\r\n    }\r\n\r\n    getEnumValue():any{\r\n        return this.value;\r\n    }\r\n    \r\n    /**\r\n     * ææ¬æ¾ç¤º\r\n     */\r\n    name:string;\r\n\r\n    /**\r\n     * å¼æ¾ç¤º\r\n     */\r\n    value:string;\r\n}","import { IEnumValue } from \"./ienumvalue\";\r\nimport { EnumType } from \"./enumtype\";\r\n\r\n/**\r\n * ä¸æåè¡¨Boolç±»å\r\n */\r\nexport class EnumBoolValue implements IEnumValue{\r\n    \r\n    getEnumType(): EnumType {\r\n        return  EnumType.BoolType;\r\n    }\r\n\r\n    getEnumValueName():string{\r\n        return this.name;\r\n    }\r\n\r\n    getEnumValue():any{\r\n        return this.value;\r\n    }\r\n\r\n    /**\r\n     * ææ¬æ¾ç¤º\r\n     */\r\n    name:string;\r\n\r\n    /**\r\n     * å¼æ¾ç¤º\r\n     */\r\n    value:boolean;\r\n}","import { EnumType } from \"./enumtype\";\r\nimport { EnumIntegerValue } from \"./integerenumvalue\";\r\nimport { EnumStringValue } from \"./stringenumvalue\";\r\nimport { EnumBoolValue } from \"./boolenumvalue\";\r\n\r\nexport interface IEnumValue{\r\n    getEnumType():EnumType;\r\n    getEnumValueName():string;\r\n    getEnumValue():any;\r\n}\r\n\r\nexport class EnumValueConvert{\r\n\r\n    convertJObject(obj:IEnumValue):Object{\r\n        let enumValue=obj as IEnumValue;\r\n        let enumType=enumValue.getEnumType();\r\n        let jobj=new Object();\r\n        jobj[\"Type\"]=enumType;\r\n        jobj[\"Content\"]=enumValue;\r\n        return jobj;\r\n    }\r\n\r\n    initFromJobject(jobj:Object):IEnumValue{\r\n        let enumType=jobj[\"Type\"] as EnumType;\r\n        let content=jobj[\"Content\"] as IEnumValue;\r\n        if(enumType==EnumType.IntType){\r\n            return Object.assign(new EnumIntegerValue(),content) ;\r\n        }\r\n        else if(enumType==EnumType.BoolType){\r\n            return Object.assign(new EnumBoolValue(),content) ;\r\n        }\r\n        else{\r\n            return Object.assign(new EnumStringValue(),content) ;\r\n        }\r\n    }\r\n}","import { IValue } from './ivalue';\r\nimport { ControlType } from '../controltype';\r\nimport { EventEmitter } from '@angular/core';\r\nimport { IEnumValue, EnumValueConvert } from '../controltype/dropdownlist/ienumvalue';\r\n\r\nexport class DropDownListValue implements IValue {\r\n    value: string;\r\n    clear$ = new EventEmitter();\r\n    constructor(data: string = '') {\r\n        this.value = data;\r\n    }\r\n    clearValue(): void {\r\n        this.value = undefined;\r\n        this.clear$.emit();\r\n    }\r\n    setOriginalValue(value: any): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    getOriginalValue() {\r\n        return this.value;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.DropDown;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return !this.value;\r\n    }\r\n    getValueText(): string {\r\n        return this.value;\r\n    }\r\n}\r\n\r\nexport class DropDownListValueConvert {\r\n    convertToObject(obj: IValue): Object {\r\n        let dropDownListValue = obj as DropDownListValue;\r\n        let jobj = new Object();\r\n        let convertor = new EnumValueConvert();\r\n        if (!!(dropDownListValue.value)) {\r\n            // jobj[\"value\"]=convertor.convertJObject(dropDownListValue.value);\r\n            jobj[\"value\"] = dropDownListValue.value;\r\n        }\r\n        return jobj;\r\n    }\r\n\r\n    initFromObject(jobj: Object): DropDownListValue {\r\n        let dropDownListValue = new DropDownListValue();\r\n        if (!!(jobj[\"value\"])) {\r\n            let convertor = new EnumValueConvert();\r\n            // dropDownListValue.value=convertor.initFromJobject(jobj[\"value\"]);\r\n            dropDownListValue.value = jobj[\"value\"];\r\n        }\r\n        return dropDownListValue;\r\n    }\r\n}","import { IValue } from './ivalue';\r\nimport { ControlType } from '../controltype';\r\nimport { EventEmitter } from '@angular/core';\r\n\r\nexport class NumberRangeValue implements IValue {\r\n    startValue: number;\r\n    endValue: number;\r\n    clear$ = new EventEmitter();\r\n    constructor(data: { startValue: string, endValue: string } = { startValue: '', endValue: '' }) {\r\n        this.startValue = data.startValue ? parseFloat(data.startValue) : null;\r\n        this.endValue = data.endValue ? parseFloat(data.endValue) : null;\r\n    }\r\n\r\n    getControlType(): ControlType {\r\n        return ControlType.NumberRange;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return (this.startValue == null && this.endValue == null);\r\n    }\r\n    clearValue(): void {\r\n        this.startValue = undefined;\r\n        this.endValue = undefined;\r\n        this.clear$.emit();\r\n    }\r\n    setOriginalValue(value: any): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    getOriginalValue() {\r\n        return {\r\n            begin: this.startValue,\r\n            end: this.endValue\r\n        };\r\n    }\r\n\r\n    getValueText(): string {\r\n        if (this.startValue == undefined && this.endValue == undefined) {\r\n            return '';\r\n        }\r\n        else if (this.startValue == undefined) {\r\n            return ('~' + this.endValue);\r\n        }\r\n        else if (this.endValue == undefined) {\r\n            return (this.startValue + '~');\r\n        }\r\n        else {\r\n            return (this.startValue + '~' + this.endValue);\r\n        }\r\n    }\r\n}\r\n\r\nexport class NumberRangeValueConvertor {\r\n    convertToObject(obj: IValue): Object {\r\n        let dropDownListValue = obj as NumberRangeValue;\r\n        let jobj = new Object();\r\n        jobj[\"startValue\"] = dropDownListValue.startValue;\r\n        jobj[\"endValue\"] = dropDownListValue.endValue;\r\n        return jobj;\r\n    }\r\n\r\n    initFromObject(jobj: Object): NumberRangeValue {\r\n        let numberRangeValue = new NumberRangeValue();\r\n        if (!!(jobj[\"startValue\"])) {\r\n            numberRangeValue.startValue = jobj[\"startValue\"] as number;\r\n        }\r\n        if (!!(jobj[\"endValue\"])) {\r\n            numberRangeValue.endValue = jobj[\"endValue\"] as number;\r\n        }\r\n        return numberRangeValue;\r\n    }\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\nimport { CompareType } from '../../comparetype';\r\n\r\n/**\r\n * æ¥ææ§ä»¶\r\n */\r\nexport class DateControl implements IControl{\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.Date;\r\n    }\r\n\r\n    /**\r\n     * æ¥ææ ¼å¼\r\n     */\r\n    //format:string;\r\n    /**\r\n     * é»è®¤æ¾ç¤º\r\n     */\r\n    placeholder:string;\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n\r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n    /**\r\n     * æ¥ææ ¼å¼\r\n     */\r\n    format:string;\r\n    /**\r\n     * æç´¢æ¥æç±»å\r\n     */\r\n    compareType:CompareType;\r\n    showType:string;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * æ°å­åºé´æ§ä»¶\r\n */\r\nexport class NumberRangeControl implements IControl{\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.NumberRange;\r\n    }\r\n\r\n    /**\r\n     * é¿åº¦\r\n     */\r\n    length:number;\r\n\r\n    /**\r\n     * ç²¾åº¦\r\n     */\r\n    precision:number;\r\n    /**\r\n     * é»è®¤æ¾ç¤º\r\n     */\r\n    placeholder:string;\r\n    beginPlaceHolder:string;\r\n    endPlaceHolder:string;\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n\r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n    /**æ¯å¦æ¯å¤§æ° */\r\n    bigNumber:boolean;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * æç´¢æ§ä»¶\r\n */\r\nexport class SearchControl implements IControl{\r\n    \r\n    /**\r\n     * è·åæ§ä»¶ç±»åï¼è¿åå¼ï¼æç´¢æ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.Search;\r\n    }\r\n\r\n    /**\r\n     * æç´¢æ¡é»è®¤æ¾ç¤º\r\n     */\r\n    placeholder:string;\r\n    \r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n\r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\nimport { EnumType } from \"./enumtype\";\r\nimport { IEnumValue, EnumValueConvert } from \"./ienumvalue\";\r\nimport { EnumStringValue } from \"./stringenumvalue\";\r\nimport { EnumBoolValue } from \"./boolenumvalue\";\r\nimport { EnumIntegerValue } from \"./integerenumvalue\";\r\n\r\n/**\r\n * ä¸æåè¡¨æ§ä»¶\r\n */\r\nexport class DropDownControl implements IControl{\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.DropDown;\r\n    }\r\n\r\n    /**\r\n     * ä¸æå¼ç±»å\r\n     */\r\n    valueType:EnumType;\r\n    /**\r\n     * é»è®¤æ¾ç¤º\r\n     */\r\n    placeholder:string;\r\n    /**\r\n     * ä¸ææ°æ®æºåè¡¨\r\n     * è¯¥å±æ§ä¸ºIEnumValueæ¥å£ç±»åï¼å·ä½å®ç°ç±»å¦ä¸ï¼\r\n     * 1.å¸å°ç±»åï¼EnumBoolValue,å¸å°ç±»åçæ§ä»¶ä¼è½¬æä¸æåè¡¨ï¼å®ç°ç±»ä½¿ç¨EnumBoolValue\r\n     * 2.å­ç¬¦ä¸²ç±»åï¼EnumStringValue\r\n     * 3.æ´åç±»åï¼EnumIntegerValue ä¾å¦Radio Buttonç±»åéè¦ä½¿ç¨EnumIntegerValueå®ç°ç±»\r\n     */\r\n    enumValues:Array<IEnumValue>;\r\n\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n\r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n}\r\n\r\n/**\r\n * ä¸æåè¡¨æ§ä»¶åºååä¸ååºååå¨\r\n */\r\nexport class DropDownListControlConvert{\r\n\r\n    /**\r\n     * åºåå\r\n     * @param obj ä¸æåè¡¨æ§ä»¶å®ä½\r\n     */\r\n    convertToObject(obj:DropDownControl){\r\n        let dropDownListControl= obj as DropDownControl;\r\n        let jobj=new Object();\r\n        jobj[\"valueType\"]=dropDownListControl.valueType;\r\n        if(dropDownListControl.enumValues!=null){\r\n            let jarray=jobj[\"enumValues\"]=[];\r\n            let convertor=new EnumValueConvert();\r\n            dropDownListControl.enumValues.forEach(element => {\r\n                if(dropDownListControl.valueType==EnumType.BoolType){\r\n                    jarray.push(convertor.convertJObject(Object.assign(new EnumBoolValue(),element)));\r\n                }\r\n                else if(dropDownListControl.valueType==EnumType.IntType){\r\n                    jarray.push(convertor.convertJObject(Object.assign(new EnumIntegerValue(),element)));\r\n                }\r\n                else{\r\n                    jarray.push(convertor.convertJObject(Object.assign(new EnumStringValue(),element)));\r\n                }\r\n            });\r\n        }\r\n        return jobj;\r\n    }\r\n\r\n    /**\r\n     * ååºåå\r\n     * @param jobj ä¸æåè¡¨æ§ä»¶å®ä½åºåååçJSONå¯¹è±¡\r\n     */\r\n    initFromObject(jobj:Object):DropDownControl{\r\n        let control=new DropDownControl();\r\n        if(jobj[\"valueType\"]!=null){\r\n            control.valueType=jobj[\"valueType\"] as number;\r\n        }\r\n        if(jobj[\"enumValues\"]!=null){\r\n            control.enumValues=new Array<IEnumValue>();\r\n            jobj[\"enumValues\"].forEach(element => {\r\n                let convertor=new EnumValueConvert();\r\n                control.enumValues.push(convertor.initFromJobject(element));\r\n            });\r\n        }\r\n        return control;\r\n    }\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\nimport { DisplayType } from './displayType';\r\n\r\n/**\r\n * å¸®å©æ§ä»¶\r\n */\r\nexport class HelpContol implements IControl{\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.Help;\r\n    }\r\n\r\n    /**\r\n     * é»è®¤æ¾ç¤º\r\n     */\r\n    placeholder:string;\r\n    /**\r\n     * å¸®å©æ°æ®æº\r\n     */\r\n    uri:string;\r\n\r\n    /**\r\n     * å¸®å©çææ¬æ¾ç¤ºå­æ®µ\r\n     */\r\n    textField:string;\r\n\r\n    /**\r\n     * å¸®å©å¼å­æ®µ\r\n     */\r\n    valueField:string;\r\n\r\n    idField:string;\r\n    helpId:string;\r\n    displayType:DisplayType;\r\n    /**\r\n     * å­æ®µæ å°ä¿¡æ¯\r\n     */\r\n    mapFields:any;\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n\r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n\r\n    /**\r\n     * å¸®å©åäºä»¶\r\n    */\r\n   preEventCmd: any;\r\n\r\n   /**\r\n   * å¸®å©åäºä»¶\r\n   */\r\n   postEventCmd: any;\r\n\r\n   /**\r\n     * è¿è¡æ¶åæ°éç½®ä¼ é\r\n    */\r\n   context: any;\r\n    /** å¯ç¨æé å®æ´æ è¿æ»¤ */\r\n   enableFullTree: boolean;\r\n   /** æ å½¢å¸®å©æ°æ®å è½½æ¹å¼ï¼ default: åç½®åæ°ï¼ loadall: å è½½ææ layerloadï¼åå±å è½½ */\r\n   loadTreeDataType: 'default' | 'loadall' | 'layerload';\r\n    /**æ¯å¦æ¯æå¤é */\r\n   singleSelect: boolean;\r\n   /**å±å¼å°æå®çº§æ° */\r\n   expandLevel: number;\r\n   /** æ¯å¦å¯ç¨çº§èéæ©æ§å¶éé¡¹ */\r\n   enableCascade: boolean;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * æ¥æåºé´æ§ä»¶\r\n */\r\nexport class DateRangeControl implements IControl{\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.DateRange;\r\n    }\r\n\r\n    /**\r\n     * é»è®¤æ¾ç¤º\r\n     */\r\n    placeholder:string;\r\n    beginPlaceHolder:string;\r\n    endPlaceHolder:string;\r\n    /**\r\n     * æ¥ææ ¼å¼\r\n     */\r\n    format:string;\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n    \r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n    showType:string;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * æ¥æåºé´å¸¦æ¶é´æ§ä»¶\r\n */\r\nexport class DateRangeTimeControl implements IControl{\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.DateRangeTime;\r\n    }\r\n\r\n    /**\r\n     * é»è®¤æ¾ç¤º\r\n     */\r\n    placeholder:string;\r\n    beginPlaceHolder:string;\r\n    endPlaceHolder:string;\r\n    /**\r\n     * æ¥ææ ¼å¼\r\n     */\r\n    format:string;\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n    \r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\nimport { CheckboxIEnumValue } from './ienumvalue';\r\n\r\n/**\r\n * å¤éç»æ§ä»¶\r\n */\r\nexport class CheckboxGroupControl implements IControl{\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.CheckboxGroup;\r\n    }\r\n\r\n    /**\r\n     * å¤éç»æ°æ®æºåè¡¨\r\n     */\r\n    enumValues:Array<CheckboxIEnumValue>;\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n\r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n    boolcheck:boolean = false;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\nimport { RadioIEnumValue } from './ienumvalue';\r\n\r\n/**\r\n * å¤éç»æ§ä»¶\r\n */\r\nexport class RadioControl implements IControl{\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.Radio;\r\n    }\r\n\r\n    /**\r\n     * å¤éç»æ°æ®æºåè¡¨\r\n     */\r\n    enumValues:Array<RadioIEnumValue>;\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n\r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n}","import { IValue } from './ivalue';\r\nimport { ControlType } from '../controltype';\r\nimport { EventEmitter } from '@angular/core';\r\n\r\nexport class RadioGroupValue implements IValue {\r\n\r\n    value: string;\r\n    clear$ = new EventEmitter();\r\n    constructor(value: { value: string } = { value: '' }) {\r\n        this.value = value.value;\r\n    }\r\n\r\n    clearValue(): void {\r\n        this.value = undefined;\r\n        this.clear$.emit();\r\n    }\r\n    setOriginalValue(value: any): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    getOriginalValue() {\r\n        return this.value;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.Radio;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return !this.value;\r\n    }\r\n    getValueText(): string {\r\n        return this.value;\r\n    }\r\n}\r\n","import { IValue } from './ivalue';\r\nimport { ControlType } from '../controltype';\r\nimport { EventEmitter } from '@angular/core';\r\nimport { DateTimeHelperService } from '@farris/ui-common/date';\r\nexport class YearValue implements IValue {\r\n    value: string;\r\n    clear$ = new EventEmitter();\r\n    constructor(value: { value: string } = { value: '' }) {\r\n        this.value = value.value;\r\n    }\r\n\r\n    setOriginalValue(value: any): void {\r\n        this.value = value.formatted;\r\n    }\r\n    getOriginalValue() {\r\n        return this.value;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.Date;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return !this.value;\r\n    }\r\n    clearValue(): void {\r\n        this.value = undefined;\r\n        this.clear$.emit();\r\n    }\r\n    getValueText(ctrl?: any): string {\r\n        if (ctrl && ctrl.format) {\r\n            return new DateTimeHelperService().formatTo(this.value, ctrl.format);\r\n        }\r\n\r\n        return this.value;\r\n    }\r\n}","import { IValue } from './ivalue';\r\nimport { ControlType } from '../controltype';\r\nimport { EventEmitter } from '@angular/core';\r\nimport { DateTimeHelperService } from '@farris/ui-common/date';\r\n\r\nexport class MonthValue implements IValue {\r\n    value: string;\r\n    clear$ = new EventEmitter();\r\n    constructor(value: { value: string } = { value: '' }) {\r\n        this.value = value.value;\r\n    }\r\n\r\n    setOriginalValue(value: any): void {\r\n        this.value = value.formatted;\r\n    }\r\n    getOriginalValue() {\r\n        return this.value;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.Date;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return !this.value;\r\n    }\r\n    clearValue(): void {\r\n        this.value = undefined;\r\n        this.clear$.emit();\r\n    }\r\n    getValueText(ctrl?: any): string {\r\n        if (ctrl && ctrl.format) {\r\n            return new DateTimeHelperService().formatTo(this.value, ctrl.format);\r\n        }\r\n        return this.value;\r\n    }\r\n}\r\n","import { IValue } from './ivalue';\r\nimport { ControlType } from '../controltype';\r\nimport { EventEmitter } from '@angular/core';\r\nimport { DateTimeHelperService } from '@farris/ui-common/date';\r\n\r\nexport class YearRangeValue implements IValue {\r\n\r\n    startTime: string;\r\n    endTime: string;\r\n    clear$ = new EventEmitter();\r\n    constructor(value: { startTime: string, endTime: string } = { startTime: '', endTime: '' }) {\r\n        this.startTime = value.startTime;\r\n        this.endTime = value.endTime;\r\n    }\r\n\r\n    setOriginalValue(value: { formatted: string, delimiter: string }): void {\r\n        if (value.formatted) {\r\n            this.startTime = value.formatted.split(value.delimiter)[0];\r\n            this.endTime = value.formatted.split(value.delimiter)[1];\r\n        } else {\r\n            this.clearValue();\r\n        }\r\n    }\r\n    getOriginalValue() {\r\n        return `${this.startTime}~${this.endTime}`;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.DateRange;\r\n    }\r\n    clearValue(): void {\r\n        this.startTime = undefined;\r\n        this.endTime = undefined;\r\n        this.clear$.emit();\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return !this.startTime || !this.endTime;\r\n    }\r\n    getValueText(ctrl?:any): string {\r\n        if (!this.startTime.length || !this.endTime.length) {\r\n            return '';\r\n        }\r\n        else {\r\n\r\n            if (ctrl && ctrl.format) {\r\n                const dateHlp = new DateTimeHelperService();\r\n                return dateHlp.formatTo(this.startTime, ctrl.format) +'~'+ dateHlp.formatTo(this.endTime, ctrl.format);\r\n            }\r\n\r\n            return (this.startTime + '~' + this.endTime);\r\n        }\r\n    }\r\n}","import { IValue } from './ivalue';\r\nimport { ControlType } from '../controltype';\r\nimport { EventEmitter } from '@angular/core';\r\nimport { DateTimeHelperService } from '@farris/ui-common/date';\r\n\r\nexport class MonthRangeValue implements IValue {\r\n\r\n    startTime: string;\r\n    endTime: string;\r\n    clear$ = new EventEmitter();\r\n    constructor(value: { startTime: string, endTime: string } = { startTime: '', endTime: '' }) {\r\n        this.startTime = value.startTime;\r\n        this.endTime = value.endTime;\r\n    }\r\n\r\n    setOriginalValue(value: { formatted: string, delimiter: string }): void {\r\n        if (value.formatted) {\r\n            this.startTime = value.formatted.split(value.delimiter)[0];\r\n            this.endTime = value.formatted.split(value.delimiter)[1];\r\n        } else {\r\n            this.clearValue();\r\n        }\r\n    }\r\n    getOriginalValue() {\r\n        return `${this.startTime}~${this.endTime}`;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.DateRange;\r\n    }\r\n    clearValue(): void {\r\n        this.startTime = undefined;\r\n        this.endTime = undefined;\r\n        this.clear$.emit();\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return !this.startTime || !this.endTime;\r\n    }\r\n    getValueText(ctrl?: any): string {\r\n        if (!this.startTime.length || !this.endTime.length) {\r\n            return '';\r\n        } else {\r\n\r\n            if (ctrl && ctrl.format) {\r\n                const dateHlp = new DateTimeHelperService();\r\n                return dateHlp.formatTo(this.startTime, ctrl.format) +'~'+ dateHlp.formatTo(this.endTime, ctrl.format);\r\n            }\r\n\r\n            return (this.startTime + '~' + this.endTime);\r\n        }\r\n    }\r\n}\r\n","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\nimport { CompareType } from '../../comparetype';\r\n\r\n/**\r\n * å¹´ä»½æ§ä»¶\r\n */\r\nexport class YearControl implements IControl{\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.Year;\r\n    }\r\n\r\n    /**\r\n     * æ¥ææ ¼å¼\r\n     */\r\n    //format:string;\r\n    /**\r\n     * é»è®¤æ¾ç¤º\r\n     */\r\n    placeholder:string;\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n\r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n    /**\r\n     * æ¥ææ ¼å¼\r\n     */\r\n    format:string;\r\n    /**\r\n     * æç´¢æ¥æç±»å\r\n     */\r\n    compareType:CompareType;\r\n    showType:string;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\nimport { CompareType } from '../../comparetype';\r\n\r\n/**\r\n * å¹´ææ§ä»¶\r\n */\r\nexport class MonthControl implements IControl{\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.Month;\r\n    }\r\n\r\n    /**\r\n     * æ¥ææ ¼å¼\r\n     */\r\n    //format:string;\r\n    /**\r\n     * é»è®¤æ¾ç¤º\r\n     */\r\n    placeholder:string;\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n\r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n    /**\r\n     * æ¥ææ ¼å¼\r\n     */\r\n    format:string;\r\n    /**\r\n     * æç´¢æ¥æç±»å\r\n     */\r\n    compareType:CompareType;\r\n    showType:string;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * å¹´åº¦åºé´æ§ä»¶\r\n */\r\nexport class YearRangeControl implements IControl{\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.YearRange;\r\n    }\r\n\r\n    /**\r\n     * é»è®¤æ¾ç¤º\r\n     */\r\n    placeholder:string;\r\n    beginPlaceHolder:string;\r\n    endPlaceHolder:string;\r\n    /**\r\n     * æ¥ææ ¼å¼\r\n     */\r\n    format:string;\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n    \r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n    showType:string;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * å¹´æåºé´æ§ä»¶\r\n */\r\nexport class MonthRangeControl implements IControl{\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.MonthRange;\r\n    }\r\n\r\n    /**\r\n     * é»è®¤æ¾ç¤º\r\n     */\r\n    placeholder:string;\r\n    beginPlaceHolder:string;\r\n    endPlaceHolder:string;\r\n    /**\r\n     * æ¥ææ ¼å¼\r\n     */\r\n    format:string;\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n    \r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n    showType:string;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * æºè½è¾å¥æ¡æ§ä»¶\r\n */\r\nexport class InputGroupControl implements IControl {\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»åï¼è¿åå¼ï¼æºè½è¾å¥æ¡æ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.InputGroup;\r\n    }\r\n    isRequired(): boolean {\r\n        return !!this.required;\r\n    }\r\n\r\n    /**\r\n     * æ¯å¦åè®¸è¾å¥\r\n     */\r\n    editable: boolean;\r\n\r\n    /**\r\n     * æé®æ¾ç¤ºææ¬\r\n     */\r\n    groupText: string;\r\n\r\n    /**\r\n     * ä½¿ç¨æ¨¡å¼ï¼ææ¬ãå¼¹åºè¡¨åï¼\r\n     */\r\n    usageMode: string;\r\n\r\n    /**\r\n     * å¼¹åºè¡¨åç¸å³éç½®\r\n     */\r\n    dialogOptions: DialogConfig;\r\n\r\n    /**\r\n     * æé®ç¹å»äºä»¶\r\n     */\r\n    click: any;\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n    /**\r\n     * é»è®¤æ¾ç¤º\r\n     */\r\n    placeholder:string;\r\n}\r\n\r\nexport class DialogConfig {\r\n    modalId: string;\r\n    mapFields: any;\r\n    title: string;\r\n    width: number;\r\n    height: number;\r\n    // showButtons: boolean;\r\n    // buttons: DialogButtonConfig[];\r\n}\r\n\r\nexport class DialogButtonConfig {\r\n    text: string;\r\n    cls: any;\r\n    handle: any;\r\n}","import { IValue } from './ivalue';\r\nimport { ControlType } from '../controltype';\r\nimport { EventEmitter } from '@angular/core';\r\nimport { cloneDeep } from 'lodash-es';\r\n\r\nexport class InputGroupValue implements IValue{\r\n    //å¯è½æ¯ç¨æ·æå¨è¾å¥çå­ç¬¦ä¸²ï¼ä¹å¯è½æ¯éè¿å¼¹çªè¿åçå¤ä¸ªå¼\r\n    value: any[];\r\n    //æ§ä»¶åæ¾ç¤ºçå¼\r\n    textValue: string;\r\n    //å¼¹çªæ¨¡å¼ä¸ï¼åå¼¹çªåè¡¨ååªä¸ªå­æ®µçå¼æ å°å°å½åå­æ®µ\r\n    textField: string;\r\n    //æ¯å¦æ¯æå¨è¾å¥çå¼\r\n    isInputText: boolean;\r\n    clear$ = new EventEmitter();\r\n    constructor(data: {\r\n        value: any,\r\n        textValue: string,\r\n        textField: string,\r\n        isInputText: boolean\r\n    } = {value: [], textValue: undefined, textField: undefined, isInputText: undefined}){\r\n        this.value = data.value;\r\n        this.textValue = data.textValue ? data.textValue.trim() : '';\r\n        this.textField = data.textField;\r\n        this.isInputText = data.isInputText;\r\n    }\r\n\r\n    getControlType(): ControlType {\r\n        return ControlType.InputGroup;\r\n    }\r\n\r\n    setOriginalValue(value: any) {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    getOriginalValue(): string {\r\n        if(this.textField){\r\n            const args = this.textField.split('.');\r\n            const textArr = this.value.map(item => this.getPropValue(item, cloneDeep(args)));\r\n            return textArr && textArr.length ? textArr.join(','): '';\r\n        }\r\n        else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    clearValue(): void {\r\n        this.value = [];\r\n        this.textValue = undefined;\r\n        this.textField = undefined;\r\n        this.isInputText = undefined;\r\n        this.clear$.emit();\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return !this.textValue;\r\n    }\r\n\r\n\r\n    getTextValue(targetField: string): string {\r\n        const args = targetField.split('.');\r\n        const textArr = this.value.map(item => this.getPropValue(item, cloneDeep(args)));\r\n        return textArr && textArr.length ? textArr.join(','): '';\r\n    }\r\n\r\n    getPropValue(item: any, args: Array<string>): any{\r\n        if(args.length > 1){\r\n            const arg = args.shift();\r\n            if(arg){\r\n                return item[arg] ? this.getPropValue(item[arg], args) : '';\r\n            }\r\n            else {\r\n                return '';\r\n            }\r\n        }\r\n        return item[args[0]];\r\n    }\r\n\r\n    getValueText():string{\r\n        return this.textValue;\r\n    }\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * æ°å­åºé´æ§ä»¶\r\n */\r\nexport class NumberControl implements IControl{\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.Number;\r\n    }\r\n\r\n    /**\r\n     * é¿åº¦\r\n     */\r\n    length:number;\r\n\r\n    /**\r\n     * ç²¾åº¦\r\n     */\r\n    precision:number;\r\n    /**\r\n     * é»è®¤æ¾ç¤º\r\n     */\r\n    placeholder:string;\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n\r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n    /**æ¯å¦æ¯å¤§æ° */\r\n    bigNumber:boolean;\r\n}","import { IValue } from './ivalue';\r\nimport { ControlType } from '../controltype';\r\nimport { EventEmitter } from '@angular/core';\r\n\r\nexport class NumberValue implements IValue {\r\n    value: number;\r\n    clear$ = new EventEmitter();\r\n    constructor(value: { value: number } = { value: null }) {\r\n        this.value = value.value;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.Number;\r\n    }\r\n    clearValue(): void {\r\n        this.value = undefined;\r\n        this.clear$.emit();\r\n    }\r\n    setOriginalValue(value: any): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    getOriginalValue() {\r\n        return this.value;\r\n    }\r\n    isEmpty(): boolean {\r\n        return !this.value;\r\n    }\r\n\r\n    getValueText(): any {\r\n        if (this.value == undefined || (!this.value && typeof (this.value) != 'undefined' && this.value != 0)) {\r\n            return this.value;\r\n        } else {\r\n            return '' + this.value;\r\n        }\r\n    }\r\n}\r\n","import { IValue } from './ivalue';\r\nimport { ControlType } from '../controltype';\r\nimport { EventEmitter } from '@angular/core';\r\n\r\nexport class FlexibleNumberValue implements IValue {\r\n    startValue: number;\r\n    endValue: number;\r\n    value: number;\r\n    single: boolean;\r\n    clear$ = new EventEmitter();\r\n\r\n    constructor(value: { startValue: number, endValue: number, value: number } = { startValue: null, endValue: null, value: null }, single: boolean = true) {\r\n        this.startValue = value.startValue;\r\n        this.endValue = value.endValue;\r\n        this.value = value.value;\r\n        this.single = single;\r\n    }\r\n\r\n    getControlType(): ControlType {\r\n        return ControlType.FlexibleNumber;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        if (this.single) {\r\n            return !this.value;\r\n        }\r\n        else return (this.startValue == null && this.endValue == null);\r\n    }\r\n    clearValue(): void {\r\n        this.startValue = undefined;\r\n        this.endValue = undefined;\r\n        this.value = undefined;\r\n        this.clear$.emit();\r\n    }\r\n    setOriginalValue(value: any): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    getOriginalValue() {\r\n        return {\r\n            begin: this.startValue,\r\n            end: this.endValue,\r\n            value: this.value\r\n        };\r\n    }\r\n\r\n\r\n    getValueText(): any {\r\n        if (this.single) {\r\n            if (this.value == undefined || (!this.value && typeof (this.value) != 'undefined' && this.value != 0)) {\r\n                return this.value;\r\n            }\r\n            else {\r\n                return '' + this.value;\r\n            }\r\n        }\r\n        else {\r\n            if (this.startValue == undefined && this.endValue == undefined) {\r\n                return '';\r\n            }\r\n            else if (this.startValue == undefined) {\r\n                return ('~' + this.endValue);\r\n            }\r\n            else if (this.endValue == undefined) {\r\n                return (this.startValue + '~');\r\n            }\r\n            else {\r\n                return (this.startValue + '~' + this.endValue);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { IControl } from \"./icontrol\";\r\nimport { ControlType } from \"./../controltype\";\r\n\r\n/**\r\n * æ°å­åºé´æ§ä»¶\r\n */\r\nexport class FlexibleNumberControl implements IControl{\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.FlexibleNumber;\r\n    }\r\n\r\n    /**\r\n     * é¿åº¦\r\n     */\r\n    length:number;\r\n\r\n    /**\r\n     * ç²¾åº¦\r\n     */\r\n    precision:number;\r\n    /**\r\n     * é»è®¤æ¾ç¤º\r\n     */\r\n    placeholder:string;\r\n    beginPlaceHolder:string;\r\n    endPlaceHolder:string;\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n\r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n    /**æ¯å¦æ¯å¤§æ° */\r\n    bigNumber:boolean;\r\n    /**æ¯å¦æ¯åæ°å¼ */\r\n    single:boolean;\r\n}","import { IValue } from './ivalue';\r\nimport { ControlType } from '../controltype';\r\nimport { EventEmitter } from '@angular/core';\r\nimport { DateTimeHelperService } from '@farris/ui-common/date';\r\n\r\nexport class FlexibleDateValue implements IValue {\r\n    startValue: string;\r\n    endValue: string;\r\n    value: string;\r\n    single: boolean;\r\n    clear$ = new EventEmitter();\r\n\r\n    constructor(value: { startValue: string, endValue: string, value: string } = { startValue: null, endValue: null, value: null }, single: boolean = true) {\r\n        this.startValue = value.startValue;\r\n        this.endValue = value.endValue;\r\n        this.value = value.value;\r\n        this.single = single;\r\n    }\r\n\r\n    getControlType(): ControlType {\r\n        return ControlType.FlexibleDate;\r\n    }\r\n    isEmpty(): boolean {\r\n        if (this.single) {\r\n            return !this.value;\r\n        } else {\r\n            return (this.startValue == null && this.endValue == null);\r\n        }\r\n    }\r\n    clearValue(): void {\r\n        this.startValue = undefined;\r\n        this.endValue = undefined;\r\n        this.value = undefined;\r\n        this.clear$.emit();\r\n    }\r\n    setOriginalValue(value: any): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    getOriginalValue() {\r\n        return {\r\n            begin: this.startValue,\r\n            end: this.endValue,\r\n            value: this.value\r\n        };\r\n    }\r\n\r\n\r\n    getValueText(ctrl?: any): any {\r\n\r\n        if (this.single) {\r\n            if (this.value == undefined || (!this.value && typeof (this.value) != 'undefined')) {\r\n                return this.value;\r\n            }\r\n            else {\r\n                if (ctrl && ctrl.format) {\r\n                    const dateHlp = new DateTimeHelperService();\r\n                    return dateHlp.formatTo(this.value, ctrl.format);\r\n                }\r\n                return this.value;\r\n            }\r\n        }\r\n        else {\r\n            if (this.startValue == undefined && this.endValue == undefined) {\r\n                return '';\r\n            } else {\r\n                if (ctrl && ctrl.format) {\r\n                    const dateHlp = new DateTimeHelperService();\r\n                    if (this.startValue == undefined) {\r\n                        return ('~' +  dateHlp.formatTo(this.endValue, ctrl.format));\r\n                    }\r\n                    else if (this.endValue == undefined) {\r\n                        return (dateHlp.formatTo(this.startValue, ctrl.format) + '~');\r\n                    }\r\n                    else {\r\n                        return dateHlp.formatTo(this.startValue, ctrl.format) +'~'+ dateHlp.formatTo(this.endValue, ctrl.format);\r\n                    }\r\n                } else {\r\n                    if (this.startValue == undefined) {\r\n                        return ('~' + this.endValue);\r\n                    }\r\n                    else if (this.endValue == undefined) {\r\n                        return (this.startValue + '~');\r\n                    }\r\n                    else {\r\n                        return (this.startValue + '~' + this.endValue);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { IControl } from \"./icontrol\";\r\nimport { ControlType } from \"../controltype\";\r\n\r\n/**\r\n * æ°å­åºé´æ§ä»¶\r\n */\r\nexport class FlexibleDateControl implements IControl{\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.FlexibleDate;\r\n    }\r\n\r\n    /**\r\n     * é¿åº¦\r\n     */\r\n    length:number;\r\n\r\n    /**\r\n     * é»è®¤æ¾ç¤º\r\n     */\r\n    placeholder:string;\r\n    beginPlaceHolder:string;\r\n    endPlaceHolder:string;\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n\r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n    /**æ¯å¦æ¯åæ°å¼ */\r\n    single:boolean;\r\n    showType:string;\r\n    /**\r\n     * æ¥ææ ¼å¼\r\n     */\r\n    format:string;\r\n    showTime:boolean;\r\n}","import { Injectable } from '@angular/core';\r\nimport { CheckboxGroupValue } from './entity/conditionvalue/checkboxgroupvalue';\r\nimport { HelpValue } from './entity/conditionvalue/helpvalue';\r\nimport { TextValue } from './entity/conditionvalue/textvalue';\r\nimport { FieldConfig } from './entity/fieldconfig/fieldconfig';\r\nimport { TextControl } from './entity/controltype/text/textcontrol';\r\nimport { SearchValue } from './entity/conditionvalue/searchvalue';\r\nimport { DateValue } from './entity/conditionvalue/datevalue';\r\nimport { DateRangeValue } from './entity/conditionvalue/daterangevalue';\r\nimport { DateRangeTimeValue } from './entity/conditionvalue/daterangetimevalue';\r\nimport { DropDownListValue } from './entity/conditionvalue/dropdownlistvalue';\r\nimport { NumberRangeValue } from './entity/conditionvalue/numberrangevaue';\r\nimport { IControl } from './entity/controltype/icontrol';\r\nimport { DateControl } from './entity/controltype/date/datecontrol';\r\nimport { NumberRangeControl } from './entity/controltype/numberrange/numberrangecontrol';\r\nimport { SearchControl } from './entity/controltype/search/searchcontrol';\r\nimport { DropDownControl } from './entity/controltype/dropdownlist/dropdowncontrol';\r\nimport { EnumType } from './entity/controltype/dropdownlist/enumtype';\r\nimport { EnumBoolValue } from './entity/controltype/dropdownlist/boolenumvalue';\r\nimport { EnumStringValue } from './entity/controltype/dropdownlist/stringenumvalue';\r\nimport { EnumIntegerValue } from './entity/controltype/dropdownlist/integerenumvalue';\r\nimport { HelpContol } from './entity/controltype/help/helpcontrol';\r\nimport { CheckboxValue } from './entity/controltype/checkbox/checkboxvalue';\r\nimport { DateRangeControl } from './entity/controltype/datarange/daterangecontrol';\r\nimport { DateRangeTimeControl } from './entity/controltype/datarangetime/daterangetimecontrol';\r\nimport { CheckboxGroupControl } from './entity/controltype/checkbox/checkboxcontrol';\r\nimport { RadioControl } from './entity/controltype/radio/radiocontrol';\r\nimport { RadioGroupValue } from './entity/conditionvalue/radiovalue';\r\nimport { RadioIEnumValue } from './entity/controltype/radio/ienumvalue';\r\nimport { YearValue } from './entity/conditionvalue/yearvalue';\r\nimport { MonthValue } from './entity/conditionvalue/month';\r\nimport { YearRangeValue } from './entity/conditionvalue/yearrange';\r\nimport { MonthRangeValue } from './entity/conditionvalue/monthrange';\r\nimport { YearControl } from './entity/controltype/year/yearcontrol';\r\nimport { MonthControl } from './entity/controltype/month/monthcontrol';\r\nimport { YearRangeControl } from './entity/controltype/yearrange/yearrangecontrol';\r\nimport { MonthRangeControl } from './entity/controltype/monthrange/monthrangecontrol';\r\nimport { DialogButtonConfig, DialogConfig, InputGroupControl } from './entity/controltype/input-group/inputgroupcontrol';\r\nimport { InputGroupValue } from './entity/conditionvalue/inputgroup';\r\nimport { NumberControl } from './entity/controltype/number/numbercontrol';\r\nimport { NumberValue } from './entity/conditionvalue/numbervalue';\r\nimport { FlexibleNumberValue } from './entity/conditionvalue/flexiblenumbervalue';\r\nimport { FlexibleNumberControl } from './entity/controltype/flexiblenumbercontrol';\r\nimport { FlexibleDateValue } from './entity/conditionvalue/flexibledatevalue';\r\nimport { FlexibleDateControl } from './entity/controltype/flexibledatecontrol';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class FilterService {\r\n\r\n\tconstructor() { }\r\n\tfieldSchemasConvert(filedSchemas: Array<any>): Array<FieldConfig> {\r\n\t\tconst fieldConfigs = new Array<FieldConfig>();\r\n\t\tif (!(filedSchemas) || filedSchemas.length <= 0) {\r\n\t\t\treturn fieldConfigs;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tfiledSchemas.forEach(filedSchema => {\r\n\t\t\t\tconst fieldConfig = new FieldConfig();\r\n\t\t\t\tfieldConfig.id = filedSchema.hasOwnProperty('id') ? filedSchema.id : '';\r\n\t\t\t\tfieldConfig.labelCode = filedSchema.labelCode;\r\n\t\t\t\tfieldConfig.code = filedSchema.hasOwnProperty('code') ? filedSchema.code : '';\r\n\t\t\t\tfieldConfig.placeHolder = filedSchema.placeHolder;\r\n\t\t\t\tfieldConfig.beginPlaceHolder = filedSchema.beginPlaceHolder;\r\n\t\t\t\tfieldConfig.endPlaceHolder = filedSchema.endPlaceHolder;\r\n\t\t\t\tfieldConfig.name = filedSchema.name || filedSchema.fieldName;\r\n\t\t\t\tif (filedSchema.value) {\r\n\t\t\t\t\tfieldConfig.filled = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfieldConfig.filled = false;\r\n\t\t\t\t}\r\n\t\t\t\tif (!(filedSchema.control) || !(filedSchema.control.controltype)) {\r\n\t\t\t\t\tfieldConfig.control = new TextControl();\r\n\t\t\t\t\tfieldConfig.value = new TextValue(filedSchema.value);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (filedSchema.control.controltype == 'text') {\r\n\t\t\t\t\t\tfieldConfig.control = this.getTextControl(filedSchema);\r\n\t\t\t\t\t\tfieldConfig.value = new TextValue(filedSchema.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (filedSchema.control.controltype == 'search') {\r\n\t\t\t\t\t\tfieldConfig.control = this.getSearchControl(filedSchema);\r\n\t\t\t\t\t\tfieldConfig.value = new SearchValue(filedSchema.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (filedSchema.control.controltype == 'singleDate') {\r\n\t\t\t\t\t\tfieldConfig.control = this.getDateControl(filedSchema);\r\n\t\t\t\t\t\tfieldConfig.value = new DateValue(filedSchema.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (filedSchema.control.controltype == 'year') {\r\n\t\t\t\t\t\tfieldConfig.control = this.getYearControl(filedSchema);\r\n\t\t\t\t\t\tfieldConfig.value = new YearValue(filedSchema.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (filedSchema.control.controltype == 'month') {\r\n\t\t\t\t\t\tfieldConfig.control = this.getMonthControl(filedSchema);\r\n\t\t\t\t\t\tfieldConfig.value = new MonthValue(filedSchema.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (filedSchema.control.controltype == 'yearRange') {\r\n\t\t\t\t\t\tfieldConfig.control = this.getYearRangeControl(filedSchema);\r\n\t\t\t\t\t\tfieldConfig.value = new YearRangeValue(filedSchema.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (filedSchema.control.controltype == 'monthRange') {\r\n\t\t\t\t\t\tfieldConfig.control = this.getMonthRangeControl(filedSchema);\r\n\t\t\t\t\t\tfieldConfig.value = new MonthRangeValue(filedSchema.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (filedSchema.control.controltype == 'date') {\r\n\t\t\t\t\t\tfieldConfig.control = this.getDateRangeControl(filedSchema);\r\n\t\t\t\t\t\tfieldConfig.value = new DateRangeValue(filedSchema.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (filedSchema.control.controltype == 'datetime') {\r\n\t\t\t\t\t\tfieldConfig.control = this.getDateRangeTimeControl(filedSchema);\r\n\t\t\t\t\t\tfieldConfig.value = new DateRangeTimeValue(filedSchema.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (filedSchema.control.controltype == 'dropdown') {\r\n\t\t\t\t\t\tfieldConfig.control = this.getDropDownControl(filedSchema);\r\n\t\t\t\t\t\tfieldConfig.value = new DropDownListValue(filedSchema.value);\r\n\t\t\t\t\t\t// fieldConfig.control = this.getRadioControl(filedSchema);\r\n\t\t\t\t\t\t// fieldConfig.value = new RadioGroupValue(filedSchema.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (filedSchema.control.controltype == 'number') {\r\n\t\t\t\t\t\tfieldConfig.control = this.getNumberRangeControl(filedSchema);\r\n\t\t\t\t\t\tfieldConfig.value = new NumberRangeValue(filedSchema.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (filedSchema.control.controltype == 'help') {\r\n\t\t\t\t\t\tfieldConfig.control = this.getLookUpEditControl(filedSchema);\r\n\t\t\t\t\t\tfieldConfig.value = new HelpValue(filedSchema.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (filedSchema.control.controltype == 'checkboxgroup') {\r\n\t\t\t\t\t\tfieldConfig.control = this.getCheckboxGroupControl(filedSchema);\r\n\t\t\t\t\t\tfieldConfig.value = new CheckboxGroupValue(filedSchema.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (filedSchema.control.controltype == 'radio') {\r\n\t\t\t\t\t\tfieldConfig.control = this.getRadioControl(filedSchema);\r\n\t\t\t\t\t\tfieldConfig.value = new RadioGroupValue(filedSchema.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (filedSchema.control.controltype == 'input-group') {\r\n\t\t\t\t\t\tfieldConfig.control = this.getInputGroupControl(filedSchema);\r\n\t\t\t\t\t\tfieldConfig.value = new InputGroupValue(filedSchema.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (filedSchema.control.controltype == 'singlenumber') {\r\n\t\t\t\t\t\tfieldConfig.control = this.getNumberControl(filedSchema);\r\n\t\t\t\t\t\tfieldConfig.value = new NumberValue(filedSchema.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (filedSchema.control.controltype == 'flexibleNumber') {\r\n\t\t\t\t\t\tfieldConfig.control = this.getFlexibleNumberControl(filedSchema);\r\n\t\t\t\t\t\tfieldConfig.value = new FlexibleNumberValue(filedSchema.value, fieldConfig.control['single']);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (filedSchema.control.controltype == 'flexibleDate') {\r\n\t\t\t\t\t\tfieldConfig.control = this.getFlexibleDateControl(filedSchema);\r\n\t\t\t\t\t\tfieldConfig.value = new FlexibleDateValue(filedSchema.value, fieldConfig.control['single']);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (filedSchema.control.controltype == 'bool-check') {\r\n\t\t\t\t\t\tfiledSchema.control.enumValues = [{ value: \"true\", name: filedSchema.name }];\r\n\t\t\t\t\t\tfieldConfig.control = this.getCheckboxGroupControl(filedSchema, true);\r\n\t\t\t\t\t\tfieldConfig.value = new CheckboxGroupValue(filedSchema.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tfieldConfig.control = this.getTextControl(filedSchema);\r\n\t\t\t\t\t\tfieldConfig.value = new TextValue(filedSchema.value);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (filedSchema.control.enableClear == undefined) {\r\n\t\t\t\t\t\tfieldConfig.control.enableClear = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfieldConfig.valueText = fieldConfig.value.getValueText();\r\n\t\t\t\t// if(filedSchema.control.controltype == 'dropdown'){\r\n\t\t\t\t//   fieldConfig.control.controltype = 'radio'\r\n\t\t\t\t// }\r\n\t\t\t\t// else{\r\n\t\t\t\tfieldConfig.control.controltype = filedSchema.control.controltype;\r\n\t\t\t\t//  }\r\n\t\t\t\tfieldConfigs.push(fieldConfig);\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn fieldConfigs;\r\n\t}\r\n\r\n\tprivate getTextControl(filedSchema: any): IControl {\r\n\t\tlet textControl = new TextControl();\r\n\t\ttextControl.placeholder = filedSchema.control.placeholder ? filedSchema.control.placeholder : '';\r\n\t\ttextControl.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n\t\ttextControl.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n\t\ttextControl.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n\t\treturn textControl;\r\n\t}\r\n\tprivate getInputGroupControl(filedSchema: any): IControl {\r\n\t\tlet inputGroupControl = new InputGroupControl();\r\n\t\tinputGroupControl.placeholder = filedSchema.control.placeholder ? filedSchema.control.placeholder : '';\r\n\t\tinputGroupControl.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n\t\tinputGroupControl.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n\t\tinputGroupControl.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n\t\tinputGroupControl.editable = filedSchema.control.hasOwnProperty('editable') ? filedSchema.control.editable : true;\r\n\t\tinputGroupControl.groupText = filedSchema.control.hasOwnProperty('groupText') ? filedSchema.control.groupText : '<span class=\"f-icon f-icon-lookup\"></span>';\r\n\t\tinputGroupControl.usageMode = filedSchema.control.usageMode;\r\n\t\tinputGroupControl.dialogOptions = this.setInputGroupDialog(filedSchema.control.usageMode, filedSchema.control.modalConfig, filedSchema.id);\r\n\t\tinputGroupControl.click = filedSchema.control.click;\r\n\t\treturn inputGroupControl;\r\n\t}\r\n\tprivate getDateControl(filedSchema: any): IControl {\r\n\t\tlet dateControl = new DateControl();\r\n\t\tdateControl.placeholder = filedSchema.control.placeholder ? filedSchema.control.placeholder : '';\r\n\t\tdateControl.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n\t\tdateControl.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n\t\tdateControl.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n\t\tdateControl.format = filedSchema.control.format;\r\n\t\tdateControl.compareType = filedSchema.control.hasOwnProperty('compareType') ? filedSchema.control.compareType : 0;\r\n\t\t// dateControl.showType = filedSchema.control.hasOwnProperty('showType')? filedSchema.control.showType : '';\r\n\t\treturn dateControl;\r\n\t}\r\n\tprivate getYearControl(filedSchema: any): IControl {\r\n\t\tlet yearControl = new YearControl();\r\n\t\tyearControl.placeholder = filedSchema.control.placeholder ? filedSchema.control.placeholder : '';\r\n\t\tyearControl.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n\t\tyearControl.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n\t\tyearControl.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n\t\tyearControl.format = filedSchema.control.hasOwnProperty('format') ? filedSchema.control.format : '';\r\n\t\tyearControl.compareType = filedSchema.control.hasOwnProperty('compareType') ? filedSchema.control.compareType : 0;\r\n\t\t// yearControl.showType = filedSchema.control.hasOwnProperty('showType')? filedSchema.control.showType : '';\r\n\t\treturn yearControl;\r\n\t}\r\n\tprivate getMonthControl(filedSchema: any): IControl {\r\n\t\tlet monthControl = new MonthControl();\r\n\t\tmonthControl.placeholder = filedSchema.control.placeholder ? filedSchema.control.placeholder : '';\r\n\t\tmonthControl.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n\t\tmonthControl.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n\t\tmonthControl.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n\t\tmonthControl.format = filedSchema.control.hasOwnProperty('format') ? filedSchema.control.format : '';\r\n\t\tmonthControl.compareType = filedSchema.control.hasOwnProperty('compareType') ? filedSchema.control.compareType : 0;\r\n\t\t// yearControl.showType = filedSchema.control.hasOwnProperty('showType')? filedSchema.control.showType : '';\r\n\t\treturn monthControl;\r\n\t}\r\n\tprivate getYearRangeControl(filedSchema: any): IControl {\r\n\t\tlet yearRangeControl = new YearRangeControl();\r\n\t\tyearRangeControl.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n\t\tyearRangeControl.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n\t\tyearRangeControl.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n\t\tyearRangeControl.placeholder = filedSchema.control.placeholder ? filedSchema.control.placeholder : '';\r\n\t\tyearRangeControl.beginPlaceHolder = filedSchema.control.beginPlaceHolder ? filedSchema.control.beginPlaceHolder : '';\r\n\t\tyearRangeControl.endPlaceHolder = filedSchema.control.endPlaceHolder ? filedSchema.control.endPlaceHolder : '';\r\n\t\tyearRangeControl.format = filedSchema.control.hasOwnProperty('format') ? filedSchema.control.format : '';\r\n\t\treturn yearRangeControl;\r\n\t}\r\n\tprivate getMonthRangeControl(filedSchema: any): IControl {\r\n\t\tlet monthRangeControl = new MonthRangeControl();\r\n\t\tmonthRangeControl.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n\t\tmonthRangeControl.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n\t\tmonthRangeControl.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n\t\tmonthRangeControl.placeholder = filedSchema.control.placeholder ? filedSchema.control.placeholder : '';\r\n\t\tmonthRangeControl.beginPlaceHolder = filedSchema.control.beginPlaceHolder ? filedSchema.control.beginPlaceHolder : '';\r\n\t\tmonthRangeControl.endPlaceHolder = filedSchema.control.endPlaceHolder ? filedSchema.control.endPlaceHolder : '';\r\n\t\tmonthRangeControl.format = filedSchema.control.hasOwnProperty('format') ? filedSchema.control.format : '';\r\n\t\treturn monthRangeControl;\r\n\t}\r\n\tprivate getNumberRangeControl(filedSchema: any): IControl {\r\n\t\tlet numberRangeControl = new NumberRangeControl();\r\n\t\tnumberRangeControl.placeholder = filedSchema.control.placeholder ? filedSchema.control.placeholder : '';\r\n\t\tnumberRangeControl.beginPlaceHolder = filedSchema.control.beginPlaceHolder ? filedSchema.control.beginPlaceHolder : '';\r\n\t\tnumberRangeControl.endPlaceHolder = filedSchema.control.endPlaceHolder ? filedSchema.control.endPlaceHolder : '';\r\n\t\tnumberRangeControl.precision = filedSchema.control.hasOwnProperty('precision') ? filedSchema.control.precision : 2;\r\n\t\tnumberRangeControl.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n\t\tnumberRangeControl.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n\t\tnumberRangeControl.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n\t\tnumberRangeControl.bigNumber = filedSchema.control.hasOwnProperty('bigNumber') ? filedSchema.control.bigNumber : false;\r\n\t\treturn numberRangeControl;\r\n\t}\r\n\r\n\tprivate getNumberControl(filedSchema: any): IControl {\r\n\t\tlet numberControl = new NumberControl();\r\n\t\tnumberControl.precision = filedSchema.control.hasOwnProperty('precision') ? filedSchema.control.precision : 2;\r\n\t\tnumberControl.placeholder = filedSchema.control.placeholder ? filedSchema.control.placeholder : '';\r\n\t\tnumberControl.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n\t\tnumberControl.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n\t\tnumberControl.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n\t\tnumberControl.bigNumber = filedSchema.control.hasOwnProperty('bigNumber') ? filedSchema.control.bigNumber : false;\r\n\t\treturn numberControl;\r\n\t}\r\n\r\n\tprivate getFlexibleNumberControl(filedSchema: any): IControl {\r\n\t\tlet flexiblenumberControl = new FlexibleNumberControl();\r\n\t\tflexiblenumberControl.placeholder = filedSchema.control.placeholder ? filedSchema.control.placeholder : '';\r\n\t\tflexiblenumberControl.beginPlaceHolder = filedSchema.control.beginPlaceHolder ? filedSchema.control.beginPlaceHolder : '';\r\n\t\tflexiblenumberControl.endPlaceHolder = filedSchema.control.endPlaceHolder ? filedSchema.control.endPlaceHolder : '';\r\n\t\tflexiblenumberControl.precision = filedSchema.control.hasOwnProperty('precision') ? filedSchema.control.precision : 2;\r\n\t\tflexiblenumberControl.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n\t\tflexiblenumberControl.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n\t\tflexiblenumberControl.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n\t\tflexiblenumberControl.bigNumber = filedSchema.control.hasOwnProperty('bigNumber') ? filedSchema.control.bigNumber : false;\r\n\t\tflexiblenumberControl.single = filedSchema.control.hasOwnProperty('single') ? filedSchema.control.single : true;\r\n\t\treturn flexiblenumberControl;\r\n\t}\r\n\tprivate getFlexibleDateControl(filedSchema: any): IControl {\r\n\t\tlet flexibledateControl = new FlexibleDateControl();\r\n\t\tflexibledateControl.placeholder = filedSchema.control.placeholder ? filedSchema.control.placeholder : '';\r\n\t\tflexibledateControl.beginPlaceHolder = filedSchema.control.beginPlaceHolder ? filedSchema.control.beginPlaceHolder : '';\r\n\t\tflexibledateControl.endPlaceHolder = filedSchema.control.endPlaceHolder ? filedSchema.control.endPlaceHolder : '';\r\n\t\tflexibledateControl.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n\t\tflexibledateControl.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n\t\tflexibledateControl.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n\t\tflexibledateControl.single = filedSchema.control.hasOwnProperty('single') ? filedSchema.control.single : true;\r\n\t\tflexibledateControl.format = filedSchema.control.hasOwnProperty('format') ? filedSchema.control.format : '';\r\n\t\tflexibledateControl.showType = filedSchema.control.showType;\r\n\t\tflexibledateControl.showTime = filedSchema.control.showTime;\r\n\t\treturn flexibledateControl;\r\n\t}\r\n\r\n\tprivate getSearchControl(filedSchema: any): IControl {\r\n\t\tlet searchControl = new SearchControl();\r\n\t\tsearchControl.placeholder = filedSchema.control.placeholder ? filedSchema.control.placeholder : '';\r\n\t\tsearchControl.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n\t\tsearchControl.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n\t\tsearchControl.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n\t\treturn searchControl;\r\n\t}\r\n\tprivate getDropDownControl(filedSchema: any): IControl {\r\n\t\tlet dropdowncontrol = new DropDownControl();\r\n\t\tdropdowncontrol.placeholder = filedSchema.control.placeholder ? filedSchema.control.placeholder : '';\r\n\t\tfiledSchema.control.valueType = filedSchema.control.valueType ? filedSchema.control.valueType : '1';\r\n\t\tdropdowncontrol.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n\t\tdropdowncontrol.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n\t\tdropdowncontrol.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n\t\tif (filedSchema.control.valueType == \"1\") {\r\n\t\t\tdropdowncontrol.valueType = EnumType.StringType;\r\n\t\t\tdropdowncontrol.enumValues = filedSchema.control.enumValues as Array<EnumStringValue>;\r\n\t\t}\r\n\t\telse if (filedSchema.control.valueType == \"2\") {\r\n\t\t\tdropdowncontrol.valueType = EnumType.BoolType;\r\n\t\t\tdropdowncontrol.enumValues = filedSchema.control.enumValues as Array<EnumBoolValue>;\r\n\t\t}\r\n\t\telse if (filedSchema.control.valueType == \"0\") {\r\n\t\t\tdropdowncontrol.valueType = EnumType.IntType;\r\n\t\t\tdropdowncontrol.enumValues = filedSchema.control.enumValues as Array<EnumIntegerValue>;\r\n\t\t}\r\n\t\treturn dropdowncontrol;\r\n\t}\r\n\r\n\tprivate getLookUpEditControl(filedSchema: any): IControl {\r\n\t\tlet lookupEdit = new HelpContol();\r\n\t\tif (!!(filedSchema.control.uri)) {\r\n\t\t\tlookupEdit.uri = filedSchema.control.uri;\r\n\t\t}\r\n\t\tlookupEdit.textField = filedSchema.control.textField;\r\n\t\tlookupEdit.valueField = filedSchema.control.valueField;\r\n\t\tlookupEdit.idField = filedSchema.control.idField;\r\n\t\tlookupEdit.helpId = filedSchema.control.helpId;\r\n\t\tlookupEdit.mapFields = filedSchema.control.mapFields;\r\n\t\tlookupEdit.context = filedSchema.control.context;\r\n\t\tlookupEdit.preEventCmd = filedSchema.control.preEventCmd;\r\n\t\tlookupEdit.postEventCmd = filedSchema.control.postEventCmd;\r\n\t\tlookupEdit.enableFullTree = filedSchema.control.enableFullTree;\r\n\t\tlookupEdit.loadTreeDataType = filedSchema.control.loadTreeDataType;\r\n\t\t//æ°å¢\r\n\t\tlookupEdit.singleSelect = filedSchema.control.hasOwnProperty('singleSelect') ? filedSchema.control.singleSelect : true;\r\n\t\tlookupEdit.expandLevel = filedSchema.control.expandLevel;\r\n\t\tlookupEdit.enableCascade = filedSchema.control.enableCascade;\r\n\t\tlookupEdit.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n\t\tlookupEdit.displayType = filedSchema.control.hasOwnProperty('displayType') ? filedSchema.control.displayType : \"LIST\";\r\n\t\tlookupEdit.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n\t\tlookupEdit.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n\t\tlookupEdit.placeholder = filedSchema.control.placeholder ? filedSchema.control.placeholder : '';\r\n\t\treturn lookupEdit;\r\n\t}\r\n\tprivate getCheckboxGroupControl(filedSchema: any, boolcheck: boolean = false): IControl {\r\n\t\tlet checkboxGroupcontrol = new CheckboxGroupControl();\r\n\t\tcheckboxGroupcontrol.enumValues = filedSchema.control.enumValues as Array<CheckboxValue>;\r\n\t\tcheckboxGroupcontrol.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n\t\tcheckboxGroupcontrol.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n\t\tcheckboxGroupcontrol.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n\t\tif (boolcheck) checkboxGroupcontrol.boolcheck = true;\r\n\t\treturn checkboxGroupcontrol;\r\n\t}\r\n\tprivate getDateRangeControl(filedSchema: any): IControl {\r\n\t\tlet dateRangeControl = new DateRangeControl();\r\n\t\tdateRangeControl.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n\t\tdateRangeControl.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n\t\tdateRangeControl.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n\t\tdateRangeControl.placeholder = filedSchema.control.placeholder ? filedSchema.control.placeholder : '';\r\n\t\tdateRangeControl.beginPlaceHolder = filedSchema.control.beginPlaceHolder ? filedSchema.control.beginPlaceHolder : '';\r\n\t\tdateRangeControl.endPlaceHolder = filedSchema.control.endPlaceHolder ? filedSchema.control.endPlaceHolder : '';\r\n\t\tdateRangeControl.format = filedSchema.control.format;\r\n\t\t// dateRangeControl.showType = filedSchema.control.hasOwnProperty('showType')? filedSchema.control.showType : '';\r\n\t\treturn dateRangeControl;\r\n\t}\r\n\tprivate getDateRangeTimeControl(filedSchema: any): IControl {\r\n\t\tlet dateRangeControl = new DateRangeTimeControl();\r\n\t\tdateRangeControl.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n\t\tdateRangeControl.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n\t\tdateRangeControl.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n\t\tdateRangeControl.placeholder = filedSchema.control.placeholder ? filedSchema.control.placeholder : '';\r\n\t\tdateRangeControl.beginPlaceHolder = filedSchema.control.beginPlaceHolder ? filedSchema.control.beginPlaceHolder : '';\r\n\t\tdateRangeControl.endPlaceHolder = filedSchema.control.endPlaceHolder ? filedSchema.control.endPlaceHolder : '';\r\n\t\tdateRangeControl.format = filedSchema.control.format;\r\n\t\treturn dateRangeControl;\r\n\t}\r\n\r\n\tprivate getRadioControl(filedSchema: any): IControl {\r\n\t\tlet checkboxGroupcontrol = new RadioControl();\r\n\t\tcheckboxGroupcontrol.enumValues = filedSchema.control.enumValues as Array<RadioIEnumValue>;\r\n\t\tcheckboxGroupcontrol.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n\t\tcheckboxGroupcontrol.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n\t\tcheckboxGroupcontrol.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n\t\treturn checkboxGroupcontrol;\r\n\t}\r\n\r\n\t/**\r\n   * æºè½è¾å¥æ¡æ§ä»¶éè¦å¼¹åºè¡¨åæ¶ï¼å°è¡¨åéç½®JSONæè¿°è½¬æ¢ä¸ºå¼¹åºè¡¨åå½ä»¤å¯æ¥æ¶çå¼¹çªåæ°\r\n   * @param usageMode æºè½è¾å¥æ¡æ§ä»¶ä½¿ç¨æ¨¡å¼\r\n   * @param modalConfigData è¡¨åéç½®JSONæè¿°\r\n   * @returns å¼¹åºè¡¨åå½ä»¤å¯æ¥æ¶çå¼¹çªåæ°\r\n   */\r\n\tprivate setInputGroupDialog(usageMode: string, modalConfigData: any, id: string): DialogConfig {\r\n\t\tif (usageMode == 'text' || usageMode == undefined || modalConfigData == undefined || id == undefined) {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\r\n\t\tlet dialogConfig = new DialogConfig();\r\n\t\t//dialogConfig.modalId = modalConfigData.modalId;\r\n\t\tdialogConfig.modalId = id;\r\n\t\tif (modalConfigData.mapFields) {\r\n\t\t\tdialogConfig.mapFields = JSON.parse(modalConfigData.mapFields.replace(/\\'/g, '\"'));\r\n\t\t}\r\n\t\tif (modalConfigData.showHeader) {\r\n\t\t\tdialogConfig.title = modalConfigData.title;\r\n\t\t}\r\n\t\tdialogConfig.width = modalConfigData.width;\r\n\t\tdialogConfig.height = modalConfigData.height;\r\n\t\t// dialogConfig.showButtons = modalConfigData.showFooterButtons;\r\n\t\t// dialogConfig.buttons = this.setInputGroupDialogButtons(modalConfigData.footerButtons);\r\n\t\treturn dialogConfig;\r\n\t}\r\n\r\n\t/**\r\n\t* æºè½è¾å¥æ¡æ§ä»¶éè¦å¼¹åºè¡¨åæ¶ï¼å°å¼¹çªæé®ç»éç½®JSONæè¿°è½¬æ¢ä¸ºå¼¹åºè¡¨åå½ä»¤å¯æ¥æ¶çå¼¹çªæé®ç»åæ°\r\n\t* @param buttonData å¼¹çªæé®ç»éç½®JSONæè¿°\r\n\t* @returns å¼¹åºè¡¨åå½ä»¤å¯æ¥æ¶çå¼¹çªæé®ç»åæ°\r\n\t*/\r\n\tprivate setInputGroupDialogButtons(buttonData: any): Array<DialogButtonConfig> {\r\n\t\tif (!buttonData) {\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\tlet button: DialogButtonConfig;\r\n\t\treturn buttonData.map(item => {\r\n\t\t\tbutton = new DialogButtonConfig();\r\n\t\t\tbutton.text = item.text;\r\n\t\t\tif (item.appearance && item.appearance.class) {\r\n\t\t\t\tbutton.cls = item.appearance.class;\r\n\t\t\t}\r\n\t\t\tbutton.handle = item.click;\r\n\t\t\treturn button;\r\n\t\t});\r\n\t}\r\n\r\n\t//æ ¹æ®ç±»åï¼new valueå¼\r\n\tsetValues(controltype, value, single: boolean = true) {\r\n\t\tif (controltype == 'input') {\r\n\t\t\treturn new TextValue({ 'value': value });\r\n\t\t}\r\n\t\telse if (controltype == 'search') {\r\n\t\t\treturn new SearchValue({ 'value': value });\r\n\t\t}\r\n\t\telse if (controltype == 'date') {\r\n\t\t\treturn new DateValue({ 'value': value });\r\n\t\t}\r\n\t\telse if (controltype == 'year') {\r\n\t\t\treturn new YearValue({ 'value': value });\r\n\t\t}\r\n\t\telse if (controltype == 'month') {\r\n\t\t\treturn new MonthValue({ 'value': value });\r\n\t\t}\r\n\t\telse if (controltype == 'daterange') {\r\n\t\t\treturn new DateRangeValue(value);\r\n\t\t}\r\n\t\telse if (controltype == 'daterangetime') {\r\n\t\t\treturn new DateRangeTimeValue(value);\r\n\t\t}\r\n\t\telse if (controltype == 'yearrange') {\r\n\t\t\treturn new YearRangeValue(value);\r\n\t\t}\r\n\t\telse if (controltype == 'monthrange') {\r\n\t\t\treturn new MonthRangeValue(value);\r\n\t\t}\r\n\t\telse if (controltype == 'dropdown' || controltype == 'radio') {\r\n\t\t\treturn new RadioGroupValue({ 'value': value });\r\n\t\t}\r\n\t\telse if (controltype == 'number') {\r\n\t\t\treturn new NumberRangeValue(value);\r\n\t\t}\r\n\t\telse if (controltype == 'help') {\r\n\t\t\treturn new HelpValue(value);\r\n\t\t}\r\n\t\telse if (controltype == 'checkboxgroup') {\r\n\t\t\treturn new CheckboxGroupValue({ 'value': value });\r\n\t\t}\r\n\t\telse if (controltype == 'input-group') {\r\n\t\t\treturn new InputGroupValue(value);\r\n\t\t}\r\n\t\telse if (controltype == 'singlenumber') {\r\n\t\t\treturn new NumberValue({ 'value': value });\r\n\t\t}\r\n\t\telse if (controltype == 'flexiblenumber') {\r\n\t\t\treturn new FlexibleNumberValue(value, single);\r\n\t\t}\r\n\t\telse if (controltype == 'flexibledate') {\r\n\t\t\treturn new FlexibleDateValue(value, single);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn new TextValue({ 'value': value });\r\n\t\t}\r\n\t}\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { CompareType } from \"./comparetype\";\r\nimport { ValueType } from \"./valuetype\";\r\nimport { RelationType } from \"./relationtype\";\r\nimport { IControl, ControlConvert } from \"./controltype/icontrol\";\r\nimport { IValue, ConditionValueConvert } from \"./conditionvalue/ivalue\";\r\n\r\n/**\r\n * æ¥è¯¢æ¡ä»¶å®ä½ç±»\r\n */\r\nexport class QueryCondition {\r\n\r\n    /**\r\n     * å¯ä¸æ§æ è¯\r\n     */\r\n    id: string;\r\n\r\n    /**\r\n     * å·¦æ¬å·\r\n     */\r\n    leftBrackets: string;\r\n\r\n    /**\r\n     * å­æ®µç¼å·\r\n     */\r\n    fieldCode: string;\r\n    labelCode?: string;\r\n\r\n    /**\r\n     * å­æ®µåç§°\r\n     */\r\n    fieldName: string;\r\n    name: string;\r\n\r\n    /**\r\n     * æ¯è¾ç¬¦\r\n     */\r\n    compareType: CompareType;\r\n\r\n    /**\r\n     * å¼ç±»å\r\n     */\r\n    valueType: ValueType;\r\n\r\n    /**\r\n     * å¼\r\n     * è¯¥å±æ§ä¸ºIValueæ¥å£ï¼æ ¹æ®ä¸åçæ§ä»¶ç±»åæä¸åçå®ç°ç±»ï¼å·ä½å¦ä¸ï¼\r\n     * 1. ææ¬ç±»åï¼TextValue\r\n     * 2. ä¸æåè¡¨ï¼DropDownListValue\r\n     * 3. æ¥æåºé´ï¼DateRangeValue\r\n     * 4. æ°å­åºé´ï¼NumberRangeValue\r\n     * 5. å¸®å©ç±»åï¼SmartHelpValue\r\n     */\r\n    value: IValue;\r\n\r\n    /**\r\n     * å³æ¬å·\r\n     */\r\n    rightBrackets: string;\r\n\r\n    /**\r\n     * å³ç³»ç¬¦\r\n     */\r\n    relationType: RelationType;\r\n\r\n    /**\r\n     * æ§ä»¶ç±»åï¼ç®ååæ¬ææ¬ç±»åï¼ä¸æåè¡¨ï¼æ¥æåºé´ï¼æ°å­åºé´ï¼å¸®å©ç±»å\r\n     * æ§ä»¶ç±»åä¸ºIControlæ¥å£ï¼æ ¹æ®ä¸åçæ§ä»¶ç±»åå¯¹åºä¸åçå®ç°ç±»ï¼å·ä½å¦ä¸ï¼\r\n     * 1. ææ¬ç±»åï¼TextControl\r\n     * 2. ä¸æåè¡¨ï¼DropDownListControl\r\n     * 3. æ¥æåºé´ï¼DateRangeControl\r\n     * 4. æ°å­åºé´ï¼NumberRangeControl\r\n     * 5. å¸®å©ç±»åï¼SmartHelpContol\r\n     */\r\n    control: IControl;\r\n    //é»è®¤æ¾ç¤º\r\n    placeHolder: string;\r\n    //æ¯å¦æå¼\r\n    filled: boolean;\r\n    //éæ©åçå¼\r\n    valueText: string;\r\n    beginPlaceHolder?: string;\r\n    endPlaceHolder?: string;\r\n}\r\n\r\n/**\r\n * æ¥è¯¢æ¡ä»¶åºååä¸ååºååå¨\r\n */\r\n// export class QueryConditionConvert{\r\n\r\n//     /**\r\n//      * åºåå\r\n//      * @param obj æ¥è¯¢æ¡ä»¶å®ä½\r\n//      */\r\n//     convertJObject(obj:QueryCondition):Object{\r\n//         let queryCondition=obj as QueryCondition;\r\n//         let jobj=new Object();\r\n//         jobj[\"id\"]=queryCondition.id;\r\n//         jobj[\"leftBrackets\"]=queryCondition.leftBrackets;\r\n//         jobj[\"fieldCode\"]=queryCondition.fieldCode;\r\n//         jobj[\"fieldName\"]=queryCondition.fieldName;\r\n//         jobj[\"compareType\"]=queryCondition.compareType;\r\n//         jobj[\"valueType\"]=queryCondition.valueType;\r\n//         let valueConvert=new ConditionValueConvert();\r\n//         if(queryCondition.value){\r\n//             jobj[\"value\"]=valueConvert.convertToObject(queryCondition.value);\r\n//         }\r\n//         jobj[\"rightBrackets\"]=queryCondition.rightBrackets;\r\n//         jobj[\"relationType\"]=queryCondition.relationType;\r\n//         let controlConvertor=new ControlConvert();\r\n//         if(queryCondition.control){\r\n//             jobj[\"control\"]=controlConvertor.convertJObject(queryCondition.control);\r\n//         }\r\n//         return jobj;\r\n//     }\r\n\r\n//     /**\r\n//      * ååºåå\r\n//      * @param jobj æ¥è¯¢æ¡ä»¶å®ä½åºåååçJSONå¯¹è±¡\r\n//      */\r\n//     initFromJobject(jobj:Object):QueryCondition{\r\n//         let queryCondition=new QueryCondition();\r\n//         queryCondition.id=jobj[\"id\"];\r\n//         queryCondition.fieldCode=jobj[\"fieldCode\"];\r\n//         queryCondition.fieldName=jobj[\"fieldName\"];\r\n//         queryCondition.leftBrackets=jobj[\"leftBrackets\"];\r\n//         queryCondition.compareType=jobj[\"compareType\"] as CompareType;\r\n//         queryCondition.valueType=jobj[\"valueType\"] as ValueType;\r\n//         if(jobj[\"value\"]){\r\n//             let valueConvert=new ConditionValueConvert();\r\n//             queryCondition.value=valueConvert.initFromObject(jobj[\"value\"]);\r\n//         }\r\n//         queryCondition.rightBrackets=jobj[\"rightBrackets\"];\r\n//         queryCondition.relationType=jobj[\"relationType\"] as RelationType;\r\n//         if(jobj[\"control\"]){\r\n//             let controlConvertor=new ControlConvert();\r\n//             queryCondition.control=controlConvertor.initFromJobject(jobj[\"control\"]);\r\n//         }\r\n//         return queryCondition;\r\n//     }\r\n// }\r\n","/**\r\n * æ¯è¾ç¬¦\r\n */\r\nexport enum CompareType{\r\n\r\n    /**\r\n     * ç­äº\r\n     */\r\n    // Equal=1,\r\n    Equal = 0,\r\n\r\n    /**\r\n     * å¤§äº\r\n     */\r\n    GreaterThan=2,\r\n\r\n    /**\r\n     * å¤§äºæç­äº\r\n     */\r\n    GreaterThanOrEqual=3,\r\n\r\n    /**\r\n     * å°äº\r\n     */\r\n    LessThan =4,\r\n\r\n    /**\r\n     * å°äºæç­äº\r\n     */\r\n    LessThanOrEqual = 5, \r\n\r\n    /**\r\n     * ä¹é´\r\n     */\r\n    BetWeen=6\r\n}","export enum ValueType{\r\n\r\n    /**\r\n     *å¼ç±»å\r\n     */\r\n    Value=0,\r\n\r\n    /**\r\n     * å¸®å©ç±»å\r\n     */\r\n    SmartHelp=1,\r\n\r\n    /**\r\n     * æä¸¾ç±»å\r\n     */\r\n    Enum=2,\r\n\r\n    /**\r\n     * è¡¨è¾¾å¼\r\n     */\r\n    Express=3\r\n}","export enum RelationType{\r\n\r\n    /**\r\n     * ä¸\r\n     */\r\n    // And=0,\r\n    And = 1,\r\n\r\n    /**\r\n     * æ\r\n     */\r\n    // Or=1\r\n    Or = 2\r\n}","// import { EnumIntegerValue } from \"./integerenumvalue\";\r\n// import { EnumStringValue } from \"./stringenumvalue\";\r\n// import { EnumBoolValue } from \"./boolenumvalue\";\r\n\r\nexport interface CheckboxIEnumValue{\r\n    getEnumValueName():string;\r\n    getEnumValue():any;\r\n\r\n    /**\r\n     * å¼æ¾ç¤º\r\n     */\r\n    value:string;\r\n}\r\n\r\nexport class CheckboxEnumValue implements CheckboxIEnumValue{\r\n\r\n    getEnumValueName():string{\r\n        return this.name;\r\n    }\r\n\r\n    getEnumValue():any{\r\n        return this.value;\r\n    }\r\n    \r\n    /**\r\n     * ææ¬æ¾ç¤º\r\n     */\r\n    name:string;\r\n\r\n    /**\r\n     * å¼æ¾ç¤º\r\n     */\r\n    value:string;\r\n}","import { Injectable } from '@angular/core';\r\nimport { FieldConfig } from '../entity/fieldconfig/fieldconfig';\r\nimport { QueryCondition } from '../entity/querycondition';\r\nimport { EnumType } from '../entity/controltype/dropdownlist/enumtype';\r\nimport { EnumBoolValue } from '../entity/controltype/dropdownlist/boolenumvalue';\r\nimport { EnumIntegerValue } from '../entity/controltype/dropdownlist/integerenumvalue';\r\nimport { EnumStringValue } from '../entity/controltype/dropdownlist/stringenumvalue';\r\nimport { ControlType } from '../entity/controltype';\r\nimport { CompareType } from '../entity/comparetype';\r\nimport { ValueType } from '../entity/valuetype';\r\nimport { RelationType } from '../entity/relationtype';\r\nimport { DropDownControl } from '../entity/controltype/dropdownlist/dropdowncontrol';\r\nimport { CheckboxGroupControl } from '../entity/controltype/checkbox/checkboxcontrol';\r\nimport { CheckboxIEnumValue, CheckboxEnumValue } from '../entity/controltype/checkbox/ienumvalue';\r\n\r\n@Injectable()\r\nexport class ConvertorService {\r\n\r\n    constructor() { }\r\n    // private solutionservice:SolutionService\r\n    /**\r\n    * è·åå·²éæ©çå­æ®µéç½®\r\n    * @param selectedConditions \r\n    */\r\n    getFeildConfigs(selectedConditions: Array<QueryCondition>) {\r\n        let fieldsConfigs = new Array<FieldConfig>();\r\n        if (!selectedConditions || selectedConditions.length <= 0) {\r\n            return fieldsConfigs;\r\n        }\r\n        else {\r\n            selectedConditions.forEach(condition => {\r\n                let fieldConfig = new FieldConfig();\r\n                fieldConfig.id = condition.id;\r\n                fieldConfig.labelCode = condition.fieldCode;\r\n                fieldConfig.name = condition.fieldName;\r\n                fieldConfig.control = condition.control;\r\n                fieldsConfigs.push(fieldConfig);\r\n            });\r\n        }\r\n        return fieldsConfigs;\r\n    }\r\n\r\n    getSelectedFieldConditions(fileds: Array<FieldConfig>, selectedFieldConditions: Array<QueryCondition>) {\r\n        // console.log(selectedFieldConditions);\r\n        let tempSelectedFieldConditions = new Array<QueryCondition>();\r\n        tempSelectedFieldConditions = this.arrayClone(selectedFieldConditions);\r\n        selectedFieldConditions = new Array<QueryCondition>();\r\n        fileds.forEach(filed => {\r\n\r\n            filed.control = this.getDropListEnumValues(filed.control as DropDownControl);\r\n            // filed.control = this.getCheckGroupEnumValues(filed.control as CheckboxGroupControl);\r\n            if (tempSelectedFieldConditions.length > 0) {\r\n                let tempIndex = tempSelectedFieldConditions.findIndex(x => x.id == filed.id);\r\n                if (tempIndex != (-1)) {\r\n                    selectedFieldConditions.push(tempSelectedFieldConditions[tempIndex]);\r\n                }\r\n                else {\r\n                    selectedFieldConditions = this.getNewFieldConditions(filed, selectedFieldConditions);\r\n                }\r\n            }\r\n            else {\r\n                selectedFieldConditions = this.getNewFieldConditions(filed, selectedFieldConditions);\r\n            }\r\n\r\n        });\r\n        return selectedFieldConditions;\r\n    }\r\n\r\n    private getDropListEnumValues(control: DropDownControl): DropDownControl {\r\n        if (control.valueType == EnumType.BoolType) {\r\n            let enumValues = new Array<EnumBoolValue>();\r\n            control.enumValues.forEach(element => {\r\n                enumValues.push(Object.assign(new EnumBoolValue(), element));\r\n            });\r\n            control.enumValues = enumValues;\r\n        }\r\n        else if (control.valueType == EnumType.IntType) {\r\n            let enumValues = new Array<EnumIntegerValue>();\r\n            control.enumValues.forEach(element => {\r\n                enumValues.push(Object.assign(new EnumIntegerValue(), element));\r\n            });\r\n            control.enumValues = enumValues;\r\n        }\r\n        else if (control.valueType == EnumType.StringType) {\r\n            let enumValues = new Array<EnumStringValue>();\r\n            control.enumValues.forEach(element => {\r\n                enumValues.push(Object.assign(new EnumStringValue(), element));\r\n            });\r\n            control.enumValues = enumValues;\r\n        }\r\n        return control;\r\n    }\r\n\r\n    private getCheckGroupEnumValues(control: CheckboxGroupControl): CheckboxGroupControl {\r\n        let enumValues = new Array<CheckboxIEnumValue>();\r\n        control.enumValues.forEach(element => {\r\n            enumValues.push(Object.assign(new CheckboxEnumValue(), element));\r\n        });\r\n        control.enumValues = enumValues;\r\n        return control;\r\n    }\r\n\r\n    public getNewFieldConditions(filed: FieldConfig, selectedFieldConditions: Array<QueryCondition>) {\r\n        let selectedFieldCondition = new QueryCondition();\r\n        selectedFieldCondition.id = filed.id;\r\n        selectedFieldCondition.fieldCode = filed.labelCode;\r\n        selectedFieldCondition.fieldName = filed.name;\r\n        selectedFieldCondition.valueType = ValueType.Value;\r\n        selectedFieldCondition.value = filed.value;\r\n        selectedFieldCondition.filled = filed.filled;\r\n        selectedFieldCondition.valueText = filed.valueText;\r\n        selectedFieldCondition.relationType = RelationType.And;\r\n        selectedFieldCondition.control = filed.control;\r\n        selectedFieldCondition.labelCode = filed.labelCode;\r\n\r\n        if (filed.control.getControlType() == ControlType.Text) {\r\n            selectedFieldConditions = this.getTextValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.DateRange) {\r\n            selectedFieldConditions = this.getDateRangeValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.DateRangeTime) {\r\n            selectedFieldConditions = this.getDateRangeTimeValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.MonthRange) {\r\n            selectedFieldConditions = this.getDateRangeValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.YearRange) {\r\n            selectedFieldConditions = this.getDateRangeValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.Year) {\r\n            selectedFieldConditions = this.getDateValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.Month) {\r\n            selectedFieldConditions = this.getDateValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.NumberRange) {\r\n            selectedFieldConditions = this.getNumberRangeValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.Help) {\r\n            selectedFieldConditions = this.getSmartHelpValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.DropDown) {\r\n            selectedFieldConditions = this.getDropDownValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.Search) {\r\n            selectedFieldConditions = this.getSearchValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.Date) {\r\n            selectedFieldConditions = this.getDateValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.CheckboxGroup) {\r\n            selectedFieldConditions = this.getCheckboxGroupValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.Radio) {\r\n            selectedFieldConditions = this.getRadioValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.InputGroup) {\r\n            selectedFieldConditions = this.getInputGroupValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.Number) {\r\n            selectedFieldConditions = this.getNumberValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.FlexibleNumber) {\r\n            selectedFieldConditions = this.getFlexibleNumberValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.FlexibleDate) {\r\n            selectedFieldConditions = this.getFlexibleDateValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.BoolCheck) {\r\n            selectedFieldConditions = this.getCheckboxGroupValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        return selectedFieldConditions;\r\n    }\r\n\r\n    private getDropDownValueFieldCondition(selectedFieldCondition: QueryCondition, filed: FieldConfig, selectedFieldConditions: Array<QueryCondition>) {\r\n        selectedFieldCondition.placeHolder = filed.placeHolder;\r\n        selectedFieldCondition.compareType = CompareType.Equal;\r\n        this.getDropListEnumValues(selectedFieldCondition.control as DropDownControl);\r\n        selectedFieldConditions.push(selectedFieldCondition);\r\n        return selectedFieldConditions;\r\n    }\r\n    private getRadioValueFieldCondition(selectedFieldCondition: QueryCondition, filed: FieldConfig, selectedFieldConditions: Array<QueryCondition>) {\r\n        selectedFieldCondition.placeHolder = filed.placeHolder;\r\n        selectedFieldCondition.compareType = CompareType.Equal;\r\n        this.getCheckGroupEnumValues(selectedFieldCondition.control as CheckboxGroupControl);\r\n        selectedFieldConditions.push(selectedFieldCondition);\r\n        return selectedFieldConditions;\r\n    }\r\n\r\n    private getCheckboxGroupValueFieldCondition(selectedFieldCondition: QueryCondition, filed: FieldConfig, selectedFieldConditions: Array<QueryCondition>) {\r\n        selectedFieldCondition.placeHolder = filed.placeHolder;\r\n        selectedFieldCondition.compareType = CompareType.Equal;\r\n        this.getCheckGroupEnumValues(selectedFieldCondition.control as CheckboxGroupControl);\r\n        selectedFieldConditions.push(selectedFieldCondition);\r\n        return selectedFieldConditions;\r\n    }\r\n\r\n    private getSmartHelpValueFieldCondition(selectedFieldCondition: QueryCondition, filed: FieldConfig, selectedFieldConditions: Array<QueryCondition>) {\r\n        selectedFieldCondition.placeHolder = filed.placeHolder;\r\n        selectedFieldCondition.compareType = CompareType.Equal;\r\n        selectedFieldConditions.push(selectedFieldCondition);\r\n        return selectedFieldConditions;\r\n    }\r\n\r\n    private getFlexibleNumberValueFieldCondition(selectedFieldCondition: QueryCondition, filed: FieldConfig, selectedFieldConditions: Array<QueryCondition>) {\r\n        selectedFieldCondition.placeHolder = filed.placeHolder;\r\n        selectedFieldCondition.beginPlaceHolder = filed.beginPlaceHolder;\r\n        selectedFieldCondition.endPlaceHolder = filed.endPlaceHolder;\r\n        selectedFieldCondition.compareType = CompareType.BetWeen;\r\n        selectedFieldConditions.push(selectedFieldCondition);\r\n        return selectedFieldConditions;\r\n    }\r\n    private getFlexibleDateValueFieldCondition(selectedFieldCondition: QueryCondition, filed: FieldConfig, selectedFieldConditions: Array<QueryCondition>) {\r\n        selectedFieldCondition.placeHolder = filed.placeHolder;\r\n        selectedFieldCondition.beginPlaceHolder = filed.beginPlaceHolder;\r\n        selectedFieldCondition.endPlaceHolder = filed.endPlaceHolder;\r\n        selectedFieldCondition.compareType = CompareType.BetWeen;\r\n        selectedFieldConditions.push(selectedFieldCondition);\r\n        return selectedFieldConditions;\r\n    }\r\n    private getNumberValueFieldCondition(selectedFieldCondition: QueryCondition, filed: FieldConfig, selectedFieldConditions: Array<QueryCondition>) {\r\n        selectedFieldCondition.placeHolder = filed.placeHolder;\r\n        selectedFieldCondition.compareType = CompareType.BetWeen;\r\n        selectedFieldConditions.push(selectedFieldCondition);\r\n        return selectedFieldConditions;\r\n    }\r\n\r\n    private getNumberRangeValueFieldCondition(selectedFieldCondition: QueryCondition, filed: FieldConfig, selectedFieldConditions: Array<QueryCondition>) {\r\n        selectedFieldCondition.placeHolder = filed.placeHolder;\r\n        selectedFieldCondition.beginPlaceHolder = filed.beginPlaceHolder;\r\n        selectedFieldCondition.endPlaceHolder = filed.endPlaceHolder;\r\n        selectedFieldCondition.compareType = CompareType.BetWeen;\r\n        selectedFieldConditions.push(selectedFieldCondition);\r\n        return selectedFieldConditions;\r\n    }\r\n\r\n    private getDateRangeValueFieldCondition(selectedFieldCondition: QueryCondition, filed: FieldConfig, selectedFieldConditions: Array<QueryCondition>) {\r\n        selectedFieldCondition.placeHolder = filed.placeHolder;\r\n        selectedFieldCondition.beginPlaceHolder = filed.beginPlaceHolder;\r\n        selectedFieldCondition.endPlaceHolder = filed.endPlaceHolder;\r\n        selectedFieldCondition.compareType = CompareType.BetWeen;\r\n        selectedFieldConditions.push(selectedFieldCondition);\r\n        return selectedFieldConditions;\r\n    }\r\n\r\n    private getDateRangeTimeValueFieldCondition(selectedFieldCondition: QueryCondition, filed: FieldConfig, selectedFieldConditions: Array<QueryCondition>) {\r\n        selectedFieldCondition.placeHolder = filed.placeHolder;\r\n        selectedFieldCondition.beginPlaceHolder = filed.beginPlaceHolder;\r\n        selectedFieldCondition.endPlaceHolder = filed.endPlaceHolder;\r\n        selectedFieldCondition.compareType = CompareType.BetWeen;\r\n        selectedFieldConditions.push(selectedFieldCondition);\r\n        return selectedFieldConditions;\r\n    }\r\n\r\n    private getTextValueFieldCondition(selectedFieldCondition: QueryCondition, filed: FieldConfig, selectedFieldConditions: Array<QueryCondition>) {\r\n        selectedFieldCondition.placeHolder = filed.placeHolder;\r\n        selectedFieldCondition.compareType = CompareType.Equal;\r\n        selectedFieldConditions.push(selectedFieldCondition);\r\n        return selectedFieldConditions;\r\n    }\r\n\r\n    private getDateValueFieldCondition(selectedFieldCondition: QueryCondition, filed: FieldConfig, selectedFieldConditions: Array<QueryCondition>) {\r\n        selectedFieldCondition.placeHolder = filed.placeHolder;\r\n        selectedFieldCondition.compareType = CompareType.Equal;\r\n        selectedFieldConditions.push(selectedFieldCondition);\r\n        return selectedFieldConditions;\r\n    }\r\n\r\n    private getInputGroupValueFieldCondition(selectedFieldCondition: QueryCondition, filed: FieldConfig, selectedFieldConditions: Array<QueryCondition>) {\r\n        selectedFieldCondition.placeHolder = filed.placeHolder;\r\n        selectedFieldCondition.compareType = CompareType.Equal;\r\n        selectedFieldConditions.push(selectedFieldCondition);\r\n        return selectedFieldConditions;\r\n    }\r\n\r\n    private getSearchValueFieldCondition(selectedFieldCondition: QueryCondition, filed: FieldConfig, selectedFieldConditions: Array<QueryCondition>) {\r\n        selectedFieldCondition.placeHolder = filed.placeHolder;\r\n        selectedFieldCondition.compareType = CompareType.Equal;\r\n        selectedFieldConditions.push(selectedFieldCondition);\r\n        return selectedFieldConditions;\r\n    }\r\n\r\n    private arrayClone(input: Array<any>): Array<any> {\r\n        let result = new Array<any>();\r\n        if (input && input.length > 0) {\r\n            input.forEach(element => {\r\n                result.push(Object.assign({}, element));\r\n            });\r\n        }\r\n        return result;\r\n    }\r\n}","import { InjectionToken } from '@angular/core';\r\nimport { QueryCondition } from '../entity/querycondition';\r\n\r\nexport interface FilterHandler{\r\n    setCurrentFilterConditions(conditions: QueryCondition[]): void;\r\n}\r\n\r\nexport const FILTER_HANDLER_TOKEN = new InjectionToken<FilterHandler>('gsp-cmp/FILTER_HANDLER');","// export function deepCopy (data) {\r\n//     return JSON.parse(JSON.stringify(data));\r\n//   }\r\n\r\nexport function deepCopy(obj) {\r\n    var newobj = obj.constructor === Array ? [] : {};\r\n    if (typeof obj !== 'object') {\r\n      return obj;\r\n    } else {\r\n        for (var i in obj) {\r\n            if (typeof obj[i] === 'object'){ //å¤æ­å¯¹è±¡çè¿æ¡å±æ§æ¯å¦ä¸ºå¯¹è±¡\r\n                const type = Object.prototype.toString.call(obj[i]);\r\n                if(type == '[object Null]'){\r\n                    newobj[i] = obj[i];\r\n                }\r\n                else{\r\n                    newobj[i] = deepCopy(obj[i]);  //è¥æ¯å¯¹è±¡è¿è¡åµå¥è°ç¨\r\n                }\r\n            }else{\r\n                newobj[i] = obj[i];\r\n            }\r\n        }\r\n    }\r\n    return newobj; //è¿åæ·±åº¦åéåçå¯¹è±¡\r\n}  ","import {\r\n    Component, OnInit, Input, ViewChild, ViewEncapsulation, ElementRef, AfterViewInit, ChangeDetectorRef, Renderer2, NgZone,\r\n    EventEmitter, Output, Injector, Optional, LOCALE_ID, InjectFlags, HostBinding, OnChanges, SimpleChanges, OnDestroy\r\n} from '@angular/core';\r\nimport { fromEvent } from 'rxjs';\r\nimport { auditTime, debounceTime, filter } from 'rxjs/operators';\r\nimport { animationFrame } from 'rxjs/internal/scheduler/animationFrame';\r\nimport { FarrisSidebarComponent } from '@farris/ui-sidebar';\r\n\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { FilterPanelService } from '@farris/ui-filter-panel';\r\nimport { QuerySolutionService } from '@farris/ui-filter-condition';\r\n\r\nimport { FilterService } from './filter.service';\r\nimport { ConvertorService } from './service/convertorservice';\r\nimport { QueryCondition } from './entity/querycondition';\r\nimport { ControlType } from './entity/controltype';\r\nimport { TextValue } from './entity/conditionvalue/textvalue';\r\nimport { HelpValue } from './entity/conditionvalue/helpvalue';\r\nimport { DropDownListValue } from './entity/conditionvalue/dropdownlistvalue';\r\nimport { DateRangeValue } from './entity/conditionvalue/daterangevalue';\r\nimport { DateRangeTimeValue } from './entity/conditionvalue/daterangetimevalue';\r\nimport { NumberRangeValue } from './entity/conditionvalue/numberrangevaue';\r\nimport { SearchValue } from './entity/conditionvalue/searchvalue';\r\nimport { DateValue } from './entity/conditionvalue/datevalue';\r\nimport { CheckboxGroupValue } from './entity/conditionvalue/checkboxgroupvalue';\r\n\r\nimport { FieldConfig } from './entity/fieldconfig/fieldconfig';\r\nimport { FilterHandler, FILTER_HANDLER_TOKEN } from './interface/filterHandler';\r\nimport { deepCopy } from './utils';\r\nimport { DropDownControl } from './entity/controltype/dropdownlist/dropdowncontrol';\r\nimport { CheckboxGroupControl } from './entity/controltype/checkbox/checkboxcontrol';\r\nimport { RadioGroupValue } from './entity/conditionvalue/radiovalue';\r\nimport { RadioControl } from './entity/controltype/radio/radiocontrol';\r\nimport { MonthRangeValue } from './entity/conditionvalue/monthrange';\r\nimport { YearRangeValue } from './entity/conditionvalue/yearrange';\r\nimport { MonthValue } from './entity/conditionvalue/month';\r\nimport { YearValue } from './entity/conditionvalue/yearvalue';\r\nimport { InputGroupValue } from './entity/conditionvalue/inputgroup';\r\nimport { NumberValue } from './entity/conditionvalue/numbervalue';\r\nimport { FlexibleNumberValue } from './entity/conditionvalue/flexiblenumbervalue';\r\nimport { FlexibleDateValue } from './entity/conditionvalue/flexibledatevalue';\r\nimport ResizeObserver from \"resize-observer-polyfill\";\r\nimport { IdService, OverLayHiddenService } from '@farris/ui-common';\r\n@Component({\r\n    selector: 'farris-filter',\r\n    templateUrl: './filter.component.html',\r\n    encapsulation: ViewEncapsulation.None,\r\n    providers: [\r\n        FilterPanelService\r\n    ]\r\n})\r\nexport class FilterComponent implements OnInit, AfterViewInit, OnChanges, OnDestroy {\r\n\r\n    _filterList: Array<any> = [];\r\n    @Input()\r\n    get filterList(): Array<any> {\r\n        return this._filterList;\r\n    }\r\n    set filterList(filterList: Array<any>) {\r\n        this._filterList = filterList || [];\r\n        this.initFilterList();\r\n    }\r\n    //æ¯å¦ç¦ç¨\r\n    @Input() disabled = false;\r\n    @Input() showReminder = false;\r\n    // æ¯å¦å¯ç¨ä¾§è¾¹æ åæ-è¿æ»¤æ¡ä»¶å¨ä¾§è¾¹æ æ¾ç¤º\r\n    @Input() floatFilter = true;\r\n    // å¯ç¨èªå¨å®½åº¦\r\n    private _enableAutoWidth = false;\r\n    @Input()\r\n    set enableAutoWidth(value) {\r\n        if (value !== this._enableAutoWidth) {\r\n            if (value) {\r\n                this.filterEllipsis = false;\r\n                this.filterExtendShow = false;\r\n            }\r\n            this._enableAutoWidth = value;\r\n        }\r\n    }\r\n    get enableAutoWidth() {\r\n        return this._enableAutoWidth;\r\n    }\r\n\r\n    @Input() localStorageKey: string = 'farrisSearchRecord';\r\n\r\n    //åå§åå¼\r\n    _defaultValue: FieldConfig[];\r\n    @Input()\r\n    set defaultValue(configs: FieldConfig[]) {\r\n        this._defaultValue = configs;\r\n        setTimeout(() => {\r\n            this.setFilterValue(this._defaultValue);\r\n        });\r\n    }\r\n    get defaultValue() {\r\n        return this._defaultValue;\r\n    }\r\n    @HostBinding('class.f-filter') cla = true;\r\n\r\n    @Output() query = new EventEmitter();\r\n    @Output() searchChange = new EventEmitter();\r\n    @Output() resetChange = new EventEmitter();\r\n    @Output() clearFilter = new EventEmitter();\r\n    @Output() expandFilter = new EventEmitter();\r\n    @Output() packupFilter = new EventEmitter();\r\n    @Output() filterResize = new EventEmitter();\r\n\r\n    @ViewChild('filterMain') filterMain: ElementRef;\r\n    @ViewChild('filterTool') filterTool: ElementRef;\r\n    @ViewChild('filterWrapper') filterWrapper: ElementRef;\r\n    @ViewChild('farrissidebar') farrissidebar: FarrisSidebarComponent;\r\n    @ViewChild('listWrapper') listWrapper: ElementRef;\r\n    @ViewChild('filterListWrapper') filterListWrapper: ElementRef;\r\n    @ViewChild('floatPanel') floatPanel: ElementRef;\r\n    currentFilterId;\r\n    // å±å¼\r\n    filterExtend = false;\r\n    // æ¯å¦æ¾ç¤ºä¸ä¸ªç¹\r\n    filterEllipsis = false;\r\n    // æ¯å¦æ¾ç¤ºå±å¼æ¶èµ·\r\n    filterExtendShow = false;\r\n    filterExtendText = 'å±å¼';\r\n    filterExtendIcon = 'f-icon-arrow-chevron-down';\r\n    expandText = 'å±å¼';\r\n    foldText = 'æ¶èµ·';\r\n    filterWrapperEl;\r\n    filterToolWidth: number;\r\n    sidebarOpen = false;\r\n    floatPanelOpen = false;\r\n    showExpandTag = false;\r\n    /** è¡¨åæ¯å¦åè®¸æäº¤ */\r\n    canSubmit = false;\r\n    /** è¡¨åæ¯å¦åè®¸æäº¤,ç¨äºé«çº§ç­éæ¸ç©ºå */\r\n    advancedCanSubmit = true;\r\n    /** é»è®¤å±å¼é¡¹æ¯å¦åè®¸æäº¤ */\r\n    showCanSubmit = true;\r\n    /** æ¯å¦æ¾ç¤ºæ¸ç©ºå·²é */\r\n    filledFilter = false;\r\n    /** é»è®¤å±å¼çç­éé¡¹ */\r\n    showFilterList: Array<QueryCondition> = new Array<QueryCondition>();\r\n    /** é«çº§ç­é */\r\n    extendFilterList: Array<QueryCondition> = new Array<QueryCondition>();\r\n    extendFilterListStore: Array<QueryCondition> = new Array<QueryCondition>();\r\n    extendFilterListTemporary: Array<QueryCondition> = new Array<QueryCondition>();\r\n    /** å·²å¡«åç­éæ°æ® */\r\n    filledFilterList: Array<QueryCondition> = new Array<QueryCondition>();\r\n    /** é«çº§ç­éä¸­å·²å¡«åç */\r\n    filledExtendFilterList: Array<QueryCondition> = new Array<QueryCondition>();\r\n    /** æ²¡æå¡«åçç­éé¡¹ */\r\n    // unFilledFilterList:Array<QueryCondition> = new Array<QueryCondition>();\r\n    /** é«çº§ç­éä¸­å¿å¡«é¡¹ */\r\n    extendRequiredList: Array<QueryCondition> = new Array<QueryCondition>();\r\n    /** é»è®¤ç­éä¸­å¿å¡«é¡¹ */\r\n    showRequiredList: Array<QueryCondition> = new Array<QueryCondition>();\r\n    /** å¾ªç¯è¡¨å */\r\n    listFilterConditions: Array<QueryCondition> = new Array<QueryCondition>();\r\n    /** é»è®¤å±å¼ï¼é«çº§ç­éä¸­å·²å¡«åç */\r\n    loopFilterList: Array<QueryCondition> = new Array<QueryCondition>();\r\n    /** ç¨æ¥å­å¨setvalueåæ°æ® */\r\n    stagListFilterConditions: Array<QueryCondition> = new Array<QueryCondition>();\r\n    /** æ¾ç¤ºä¸­è¡¨åçå¿å¡«é¡¹ */\r\n    requiredListFilter: Array<QueryCondition> = [];\r\n\r\n    localeIds = {\r\n        'en': 'en',\r\n        'zh-CHS': 'zh-CHS'\r\n    };\r\n    currentLocale = 'zh-CHS';\r\n    isControlInline = true;\r\n    /**\r\n     * ç»ä»¶æå¡æ¥å£\r\n     */\r\n    filterHandler: FilterHandler;\r\n    filterPanelContainer;\r\n\r\n    showReminderItem: QueryCondition;\r\n    reminderLeft = 0;\r\n\r\n    floatPanelHeight = null;\r\n    floatFilterIconBottom = 0;\r\n    // ç»å®å¤§å°ååååº\r\n    private ro: ResizeObserver | null = null;\r\n    // è®°å½æ§çå®½åº¦æ°æ®\r\n    private containerWidthRecord = 0;\r\n    // éå¼\r\n    private distanceThreshold = 20;\r\n\r\n    private idService: IdService;\r\n    private overLayService: OverLayHiddenService = null;\r\n    constructor(\r\n        private filterPanelService: FilterPanelService,\r\n        private filterService: FilterService,\r\n        private convertorService: ConvertorService,\r\n        private handler: QuerySolutionService,\r\n        private cd: ChangeDetectorRef,\r\n        private render: Renderer2,\r\n        public ngzone: NgZone,\r\n        public localeService: LocaleService,\r\n        @Optional() private injector: Injector\r\n    ) {\r\n        if (this.injector) {\r\n            this.currentLocale = this.injector.get(LOCALE_ID);\r\n            this.filterHandler = this.injector.get<FilterHandler>(FILTER_HANDLER_TOKEN, null, InjectFlags.Optional);\r\n            this.idService = this.injector.get(IdService);\r\n        }\r\n\r\n        this.overLayService = this.injector.get(OverLayHiddenService, null);\r\n        if (!this.overLayService) {\r\n            this.overLayService = new OverLayHiddenService();\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.filterWrapperEl = this.filterListWrapper && this.filterListWrapper.nativeElement;\r\n        // ç»å®äºä»¶\r\n        this.bindRoEvent();\r\n        this.foldText = this.localeService.getValue('filterPanel.fold');\r\n        this.expandText = this.localeService.getValue('filterPanel.expand');\r\n        this.filterExtendText = this.expandText;\r\n        if (this.currentLocale === this.localeIds['en']) {\r\n            this.isControlInline = false;\r\n        }\r\n        else {\r\n            this.isControlInline = true;\r\n        }\r\n\r\n        fromEvent(window, 'resize').pipe(\r\n            auditTime(50)\r\n        ).subscribe(() => {\r\n            this.floatPanelHeight = window.innerHeight - this.floatFilterIconBottom;\r\n        })\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.ro) {\r\n            this.ro.unobserve(this.filterWrapperEl);\r\n            this.ro = null;\r\n        }\r\n\r\n        if (this.floatPanel) {\r\n            this.overLayService.destory(this.floatPanel.nativeElement);\r\n        }\r\n    }\r\n    /**\r\n     * ç»å®çæ§å¤§å°çäºä»¶\r\n     */\r\n    private bindRoEvent(){\r\n        if(!this.filterWrapper){\r\n            return;\r\n        }\r\n        this.ngzone.runOutsideAngular(() => {\r\n            // è¿æ ·ä¸ç´é½ç»å®å¯è½ææ§è½é®é¢\r\n            this.ro = new ResizeObserver((entries, observer) => {\r\n                const tempWidth = entries[0].contentRect.width;\r\n                if (\r\n                    Math.abs(tempWidth - this.containerWidthRecord) >\r\n                    this.distanceThreshold\r\n                ) {\r\n                    if (!this.filterList.length) return;\r\n                    if (this.enableAutoWidth) {\r\n                        return;\r\n                    }\r\n                    this.listEllipsisInit();\r\n                    this.containerWidthRecord = tempWidth;\r\n                }\r\n            });\r\n            this.ro.observe(this.filterWrapper.nativeElement);\r\n            // fromEvent(window, 'resize')\r\n            //     .pipe(debounceTime(50, animationFrame))\r\n            //     .subscribe((): void => {\r\n            //         this.ngzone.run(() => {\r\n            //             // console.log('resize');\r\n            //             if (!this.filterList.length) return;\r\n            //             if (this.enableAutoWidth) {return;}\r\n            //             this.listEllipsisInit();\r\n            //         });\r\n            //     });\r\n        });\r\n    }\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        // if (changes.filterList && !changes.filterList.isFirstChange()) {\r\n        //   this.initFilterList();\r\n        // }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n\r\n    }\r\n    /**\r\n     * åå§åç­éé¡¹\r\n     */\r\n    initFilterList() {\r\n        this.listFilterConditions = new Array<QueryCondition>();\r\n        const filterDatas = this.filterService.fieldSchemasConvert(this.filterList);\r\n        if (filterDatas && filterDatas.length) {\r\n            this.listFilterConditions = this.convertorService.getSelectedFieldConditions(filterDatas, this.listFilterConditions);\r\n        }\r\n        this.stagListFilterConditions = this.listFilterConditions.map(o => ({ ...o }));\r\n        this.filterListClassify();\r\n        setTimeout(() => {\r\n            if (this.showReminder && this.showFilterList && this.showFilterList.length) {\r\n                this.showReminderItem = this.showFilterList[0];\r\n                if (this.showReminderItem) {\r\n                    let filterlistItems = this.filterListWrapper && this.filterListWrapper.nativeElement.children;\r\n                    if (filterlistItems && filterlistItems.length) {\r\n                        let showRemItem;\r\n                        for (let i = 0; i < filterlistItems.length; i++) {\r\n                            if (this.showReminderItem['id'] == filterlistItems[i].getAttribute('id')) {\r\n                                showRemItem = filterlistItems[i];\r\n                            }\r\n                        }\r\n                        if (showRemItem) {\r\n                            this.reminderLeft = showRemItem.offsetLeft >= 0 ? showRemItem.offsetLeft : 0;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                this.showReminderItem = null;\r\n            }\r\n        }, 0);\r\n        this.cd.detectChanges();\r\n    }\r\n    /** ç­éé¡¹åç±» */\r\n    filterListClassify() {\r\n        this.extendFilterList = [];\r\n        this.extendFilterListStore = [];\r\n        this.showFilterList = [];\r\n        this.filledFilterList = [];\r\n        this.filledExtendFilterList = [];\r\n        this.loopFilterList = [];\r\n        this.extendRequiredList = [];\r\n        this.showRequiredList = [];\r\n        // å¿å¡«\r\n        let requiredList = this.listFilterConditions.filter((listitem) => {\r\n            return listitem.control.required;\r\n        });\r\n        if (requiredList && requiredList.length) {\r\n            this.requiredListFilter = requiredList;\r\n            this.canSubmit = this.canSubmitFilter(this.requiredListFilter);\r\n        } else {\r\n            this.requiredListFilter = [];\r\n            this.canSubmit = true;\r\n        }\r\n        // å ç§ç±»ååç±»\r\n        this.listFilterConditions.forEach(field => {\r\n            if (field.control.isExtend && field['filled']) {\r\n                this.filledExtendFilterList.push(field);\r\n            }\r\n            if (field['filled']) {\r\n                this.filledFilterList.push(field);\r\n            }\r\n            // else if(!field.control.isExtend){\r\n            //   this.unFilledFilterList.push(field);\r\n            // }\r\n\r\n            if (field.control.isExtend) {\r\n                this.extendFilterListStore.push(field);\r\n            } else {\r\n                this.showFilterList.push(field);\r\n            }\r\n        });\r\n\r\n        if (this.filledFilterList.length) {\r\n            this.filledFilter = true;\r\n        } else {\r\n            this.filledFilter = false;\r\n        }\r\n\r\n        const list = this.listFilterConditions.filter(item => {\r\n            return !item.control.isExtend || item['filled']\r\n        });\r\n        // this.loopFilterList = this.showFilterList.concat(this.filledExtendFilterList);\r\n        this.loopFilterList = list ? list : [];\r\n        this.loopFilterList.forEach(item => {\r\n            this.getValueText(item);\r\n        });\r\n        this.extendFilterList = this.extendFilterListStore.map(o => ({ ...o }));\r\n        const extendRequiredList = this.extendFilterList.filter((listitem) => {\r\n            return listitem.control.required;\r\n        });\r\n        if (extendRequiredList && extendRequiredList.length) {\r\n            this.extendRequiredList = extendRequiredList;\r\n        }\r\n\r\n        const showrequiredList = this.showFilterList.filter((listitem) => {\r\n            return listitem.control.required;\r\n        });\r\n        if (showrequiredList && showrequiredList.length) {\r\n            this.showRequiredList = showrequiredList;\r\n        }\r\n\r\n        this.showCanSubmit = this.canSubmitFilter(this.showRequiredList);\r\n        this.advancedCanSubmit = this.canSubmitFilter(this.extendRequiredList);\r\n        // console.log('å·²å¡«å',this.filledExtendFilterList);\r\n        // console.log('æ¾ç¤ºåºæ¥ç',this.loopFilterList);\r\n        // console.log('éèé¨å',this.extendFilterList);\r\n        this.filterExtendShow = true;\r\n        // å¦ææ¯æ¯æèªå¨å®½åº¦ï¼å°±æ¯ä¸åæ,å¤æ­æ¶åèµå¼æ¶æº\r\n        if (!this.enableAutoWidth) {\r\n            setTimeout(() => {\r\n                this.listEllipsisInit();\r\n            }, 0);\r\n        }\r\n    }\r\n    /**\r\n     * å·²å¡«åç­éé¡¹ç¹å»\r\n     * @param event \r\n     * @param data \r\n     */\r\n    filterClick(event, data, index) {\r\n        event.stopPropagation();\r\n        if (this.disabled) return;\r\n        if (data) {\r\n            this.showReminderItem = null;\r\n        }\r\n        const instanceID = this.localStorageKey + '_'+ data.id;\r\n        if (data && this.currentFilterId != data.id) {\r\n            const panelItem = deepCopy(data);\r\n            this.currentFilterId = data.id;\r\n            const { left, top, height, right } = event.currentTarget.getBoundingClientRect();\r\n            this.filterPanelContainer = this.filterPanelService.showPanel({\r\n                left: left,\r\n                top: top + height + 2,\r\n                right: right,\r\n                item: panelItem,\r\n                localStorageKey: instanceID\r\n            });\r\n            this.filterPanelContainer.hidePanel.subscribe(e => {\r\n                this.filterPanelService.hidePanel();\r\n                this.filterPanelContainer = null;\r\n                this.currentFilterId = null;\r\n            });\r\n            this.filterPanelContainer.clearFilter.subscribe(e => {\r\n                this.clearFilter.emit(e);\r\n            });\r\n            //æäº¤å¼¹çªå\r\n            const _this = this;\r\n            this.filterPanelContainer.submit.subscribe(e => {\r\n                e.filled = (e.valueText && e.valueText.length > 0) ? true : false;\r\n                _this.loopFilterList[index] = e;\r\n                let panelListIndex = _this.listFilterConditions.findIndex(item => {\r\n                    return item['id'] == e['id'];\r\n                });\r\n                if (panelListIndex >= 0) {\r\n                    _this.listFilterConditions[panelListIndex] = e;\r\n                }\r\n                this.searchChange.emit(this.listFilterConditions);\r\n                this.inSetCurrentFilterConditions();\r\n                this.filterListClassify();\r\n                // valueTextæ¯æéè¦è®¡ç®çï¼æä»¥å»¶åå¤æ­æ¯å¦æ¾ç¤º\r\n                let findItem = _this.loopFilterList.find(item => {\r\n                    return item['id'] == e['id'];\r\n                });\r\n                if (findItem) {\r\n                    findItem['filled'] = findItem.valueText && findItem.valueText.length > 0 ? true : false;\r\n                }\r\n                this.cd.markForCheck();\r\n                this.submit('panelFormData', this.listFilterConditions, e);\r\n                this.filterPanelService.hidePanel();\r\n                this.filterPanelContainer = null;\r\n                this.currentFilterId = null;\r\n            });\r\n        }\r\n        else {\r\n            this.filterPanelService.hidePanel();\r\n            this.filterPanelContainer = null;\r\n            this.currentFilterId = null;\r\n        }\r\n    }\r\n    /**\r\n     * æ¸ç©ºç­éé¡¹\r\n     */\r\n    filterClear(data, index, event) {\r\n        event.stopPropagation();\r\n        this.filterPanelService.hidePanel();\r\n        this.currentFilterId = null;\r\n        this.resetListCondition(data);\r\n        this.filterListClassify();\r\n        this.cd.markForCheck();\r\n        this.searchChange.emit(this.listFilterConditions);\r\n        this.clearFilter.emit(data);\r\n        this.inSetCurrentFilterConditions();\r\n        this.advancedCanSubmit = this.canSubmitFilter(this.extendRequiredList);\r\n        this.submit('panelFormData', this.listFilterConditions);\r\n    }\r\n    /**\r\n     * å±å¼é«çº§ç­é\r\n     */\r\n    advancedFilter() {\r\n        this.showReminderItem = null;\r\n        this.extendFilterListTemporary = deepCopy(this.extendFilterList);\r\n        this.farrissidebar.isOpen = true;\r\n    }\r\n    listCancel() {\r\n        this.extendFilterList = deepCopy(this.extendFilterListTemporary);\r\n        this.farrissidebar.isOpen = false;\r\n        this.floatPanelOpen = false;\r\n    }\r\n    /**\r\n     * æå¼é¢æ¿é«çº§ç­é\r\n     */\r\n    floatFilterOpen($evnet: MouseEvent) {\r\n        this.floatPanelOpen = !this.floatPanelOpen;\r\n        if (this.floatPanelOpen) {\r\n            this.extendFilterListTemporary = deepCopy(this.extendFilterList);\r\n            if (!this.floatFilterIconBottom) {\r\n                const { bottom } = (<any>$evnet.target).getBoundingClientRect();\r\n                this.floatFilterIconBottom = bottom + 100;\r\n            }\r\n            this.floatPanelHeight = window.innerHeight - this.floatFilterIconBottom;\r\n\r\n            this.overLayService.registerMouseEvent(this.floatPanel.nativeElement, (e: any) => {\r\n               \r\n                if (this.floatPanel.nativeElement.contains(e.target)) {\r\n                    return;\r\n                } else {\r\n                    if (e.target.nodeName === 'SPAN' && e.target.className.indexOf('f-icon-filtrate')) {\r\n                        return;\r\n                    }\r\n\r\n                    const cls = ['.f-datepicker-container', '.farris-timer-picker', '.farris-modal', '.f-combo-lookup', '.date-overlay-container']\r\n\r\n                    if (cls.find(k => e.target.closest(k))) {\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                this.floatPanelOpen = false;\r\n                this.overLayService.destory(this.floatPanel.nativeElement);\r\n            });\r\n\r\n            this.cd.detectChanges();\r\n        } else {\r\n            this.overLayService.destory(this.floatPanel.nativeElement);\r\n        }\r\n    }\r\n    /**\r\n     * åè¡¨å±ç¤ºåå§å\r\n     */\r\n    listEllipsisInit() {\r\n        if (this.enableAutoWidth) return;\r\n        // if(this.filterExtend) return;\r\n        const filterMainWidth = this.filterMain.nativeElement.offsetWidth;\r\n        this.filterToolWidth = 0;\r\n        // filterTool = this.filterTool.nativeElement.offsetWidth;\r\n        if (this.filterTool) {\r\n            this.filterToolWidth = this.filterTool.nativeElement.offsetWidth;\r\n        }\r\n        // ç­éæ¡ä»¶åºåæå¤§å®½åº¦\r\n        let filterListW;\r\n        if (this.filterExtend) {\r\n            filterListW = filterMainWidth - 26;\r\n        }\r\n        else {\r\n            // filterListW = filterMainWidth- 48 - this.filterToolWidth - 26;\r\n            filterListW = filterMainWidth - 48 - this.filterToolWidth - 26;\r\n        }\r\n        // const filterWrapper = this.filterListWrapper.nativeElement;\r\n        // const filterWrapperWidth = filterWrapper.offsetWidth;\r\n        // console.log(filterWrapperWidth);\r\n        const filterItems = this.filterWrapperEl ? this.filterWrapperEl.children : [];\r\n        let filterItemWidth = 0;\r\n        if (filterItems && filterItems.length) {\r\n            for (let i = 0, len = filterItems.length; i < len; i++) {\r\n                this.render.setStyle(filterItems[i], 'display', 'flex');\r\n                let width = filterItems[i].offsetWidth;\r\n                filterItemWidth += width + 8;\r\n                if (filterItemWidth >= filterListW && !this.filterExtend) {\r\n                    this.render.setStyle(filterItems[i], 'display', 'none');\r\n                }\r\n                else {\r\n                    this.render.setStyle(filterItems[i], 'display', 'flex');\r\n                }\r\n                // console.log(filterItemWidth,filterListW,i);\r\n            }\r\n        }\r\n        // if(filterItemWidth > this.filterWrapperEl.offsetWidth){\r\n        if (filterItemWidth >= filterListW) {\r\n            this.filterEllipsis = true;\r\n            this.filterExtendShow = true;\r\n        }\r\n        else {\r\n            this.filterEllipsis = false;\r\n            this.filterExtendShow = false;\r\n        }\r\n\r\n        \r\n\r\n        if (filterItems.length) this.filterResize.emit();\r\n        if (!this.cd['destroyed']) {\r\n            this.cd.detectChanges();\r\n        }\r\n    }\r\n    /**\r\n     * ç­éé¡¹å±å¼æ¶èµ·åæ¢\r\n     */\r\n    filterExpand() {\r\n        this.showReminderItem = null;\r\n        this.filterExtend = !this.filterExtend;\r\n        if (this.filterExtend) {\r\n            this.filterEllipsis = false;\r\n            this.filterExtendText = this.foldText;\r\n            this.filterExtendIcon = 'f-icon-arrow-chevron-up';\r\n            const filterItems = this.filterWrapperEl.children;\r\n            if (filterItems && filterItems.length) {\r\n                for (let i = 0, len = filterItems.length; i < len; i++) {\r\n                    this.render.setStyle(filterItems[i], 'display', 'flex');\r\n                }\r\n            };\r\n            this.render.setStyle(this.filterWrapperEl, 'flex-wrap', 'wrap');\r\n            this.expandFilter.emit();\r\n            this.cd.detectChanges();\r\n        } else {\r\n            this.filterExtendText = this.expandText;\r\n            this.filterExtendIcon = 'f-icon-arrow-chevron-down';\r\n            setTimeout(() => {\r\n                this.listEllipsisInit();\r\n            }, 0);\r\n            this.packupFilter.emit();\r\n        }\r\n    }\r\n    /**\r\n     * é«çº§ç­éè¡¨åé¡¹æç´¢åå\r\n     * @param $event \r\n     * @param item \r\n     */\r\n    onSearch($event, item) {\r\n        if (this.disabled) { return; }\r\n        this.advancedCanSubmit = this.canSubmitFilter(this.extendRequiredList);\r\n        // console.log(this.advancedCanSubmit,this.canSubmit);\r\n        this.searchChange.emit({ item, conditions: this.listFilterConditions, instance: this });\r\n    }\r\n\r\n    /** å¤æ­æ¯å¦ææå¿å¡«é¡¹é½å¡«åå®æ¯ */\r\n    canSubmitFilter(requirelist) {\r\n        let formCanSubmit = false;\r\n        if (!requirelist || !requirelist.length) {\r\n            formCanSubmit = true;\r\n            return formCanSubmit;\r\n        } else {\r\n            for (let i = 0; i < requirelist.length; i++) {\r\n                const item = requirelist[i];\r\n                if (item.control.getControlType() === ControlType.Text) {\r\n                    const tv = (item.value as TextValue);\r\n                    if (Object.keys(tv).length < 0 || !tv.value) {\r\n                        formCanSubmit = false;\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        formCanSubmit = true;\r\n                    }\r\n                }\r\n                else if (item.control.getControlType() === ControlType.Help) {\r\n                    const shv = (item.value as HelpValue);\r\n                    if (Object.keys(shv).length === 0 || !shv.value || !shv.valueField) {\r\n                        formCanSubmit = false;\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        formCanSubmit = true;\r\n                    }\r\n                }\r\n                else if (item.control.getControlType() === ControlType.DropDown) {\r\n                    const ddv = (item.value as DropDownListValue);\r\n                    if (Object.keys(ddv).length === 0 || !ddv.value) {\r\n                        formCanSubmit = false;\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        formCanSubmit = true;\r\n                    }\r\n                }\r\n                else if (item.control.getControlType() === ControlType.DateRange) {\r\n                    const drv = (item.value as DateRangeValue);\r\n                    if (Object.keys(drv).length === 0 || (!drv.startTime && !drv.endTime)) {\r\n                        formCanSubmit = false;\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        formCanSubmit = true;\r\n                    }\r\n                }\r\n                else if (item.control.getControlType() === ControlType.DateRangeTime) {\r\n                    const drv = (item.value as DateRangeTimeValue);\r\n                    if (Object.keys(drv).length === 0 || (!drv.startTime && !drv.endTime)) {\r\n                        formCanSubmit = false;\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        formCanSubmit = true;\r\n                    }\r\n                }\r\n                else if (item.control.getControlType() === ControlType.MonthRange) {\r\n                    const mrv = (item.value as MonthRangeValue);\r\n                    if (Object.keys(mrv).length === 0 || (!mrv.startTime && !mrv.endTime)) {\r\n                        formCanSubmit = false;\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        formCanSubmit = true;\r\n                    }\r\n                }\r\n                else if (item.control.getControlType() === ControlType.YearRange) {\r\n                    const yrv = (item.value as YearRangeValue);\r\n                    if (Object.keys(yrv).length === 0 || (!yrv.startTime && !yrv.endTime)) {\r\n                        formCanSubmit = false;\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        formCanSubmit = true;\r\n                    }\r\n                } else if (item.control.getControlType() === ControlType.NumberRange) {\r\n                    const nrv = (item.value as NumberRangeValue);\r\n                    if (Object.keys(nrv).length === 0 || (nrv.startValue === null && nrv.endValue === null)) {\r\n                        formCanSubmit = false;\r\n                        return false;\r\n                    } else {\r\n                        formCanSubmit = true;\r\n                    }\r\n                } else if (item.control.getControlType() === ControlType.Search) {\r\n                    const sv = (item.value as SearchValue);\r\n                    if (Object.keys(sv).length < 0 || !sv.value) {\r\n                        formCanSubmit = false;\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        formCanSubmit = true;\r\n                    }\r\n                }\r\n                else if (item.control.getControlType() === ControlType.Date) {\r\n                    const dv = (item.value as DateValue);\r\n                    if (Object.keys(dv).length < 0 || !dv.value) {\r\n                        formCanSubmit = false;\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        formCanSubmit = true;\r\n                    }\r\n                }\r\n                else if (item.control.getControlType() === ControlType.Month) {\r\n                    const mv = (item.value as MonthValue);\r\n                    if (Object.keys(mv).length < 0 || !mv.value) {\r\n                        formCanSubmit = false;\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        formCanSubmit = true;\r\n                    }\r\n                }\r\n                else if (item.control.getControlType() === ControlType.Year) {\r\n                    const yv = (item.value as YearValue);\r\n                    if (Object.keys(yv).length < 0 || !yv.value) {\r\n                        formCanSubmit = false;\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        formCanSubmit = true;\r\n                    }\r\n                }\r\n                else if (item.control.getControlType() === ControlType.CheckboxGroup) {\r\n                    const cbgv = (item.value as CheckboxGroupValue);\r\n                    if (Object.keys(cbgv).length === 0 || Object.keys(cbgv.value).length === 0) {\r\n                        formCanSubmit = false;\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        formCanSubmit = true;\r\n                    }\r\n                }\r\n                else if (item.control.getControlType() === ControlType.Radio) {\r\n                    const radiov = (item.value as RadioGroupValue);\r\n                    if (Object.keys(radiov).length < 0 || radiov.value === '') {\r\n                        formCanSubmit = false;\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        formCanSubmit = true;\r\n                    }\r\n                }\r\n                else if (item.control.getControlType() === ControlType.InputGroup) {\r\n                    const sv = (item.value as InputGroupValue);\r\n                    if (Object.keys(sv).length < 0 || !sv.textValue) {\r\n                        formCanSubmit = false;\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        formCanSubmit = true;\r\n                    }\r\n                }\r\n                else if (item.control.getControlType() === ControlType.Number) {\r\n                    const nrv = (item.value as NumberValue);\r\n                    if (Object.keys(nrv).length === 0 || (nrv.value == null)) {\r\n                        formCanSubmit = false;\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        formCanSubmit = true;\r\n                    }\r\n                }\r\n                else if (item.control.getControlType() === ControlType.FlexibleNumber) {\r\n                    const flexv = (item.value as FlexibleNumberValue);\r\n                    if (flexv.single) {\r\n                        if (Object.keys(flexv).length < 0 || flexv.value == null) {\r\n                            formCanSubmit = false;\r\n                            return false;\r\n                        }\r\n                        else {\r\n                            formCanSubmit = true;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (Object.keys(flexv).length === 0 || (flexv.startValue == null && flexv.endValue == null)) {\r\n                            formCanSubmit = false;\r\n                            return false;\r\n                        }\r\n                        else {\r\n                            formCanSubmit = true;\r\n                        }\r\n                    }\r\n                }\r\n                else if (item.control.getControlType() === ControlType.FlexibleDate) {\r\n                    const flexdatev = (item.value as FlexibleDateValue);\r\n                    if (flexdatev.single) {\r\n                        if (Object.keys(flexdatev).length < 0 || !flexdatev.value) {\r\n                            formCanSubmit = false;\r\n                            return false;\r\n                        }\r\n                        else {\r\n                            formCanSubmit = true;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (Object.keys(flexdatev).length === 0 || (!flexdatev.startValue && !flexdatev.endValue)) {\r\n                            formCanSubmit = false;\r\n                            return false;\r\n                        }\r\n                        else {\r\n                            formCanSubmit = true;\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n            return formCanSubmit;\r\n        }\r\n\r\n    }\r\n\r\n    /** é«çº§ç­éç¹å»ç¡®å®æäº¤ */\r\n    listSearch() {\r\n        if (this.disabled) { return; };\r\n        this.extendFilterList.forEach(field => {\r\n            if ((field.control.getControlType() != ControlType.Date)\r\n                && (field.control.getControlType() != ControlType.DateRange)\r\n                && (field.control.getControlType() != ControlType.DateRangeTime)\r\n                && (field.control.getControlType() != ControlType.FlexibleDate)) {\r\n                    if (!field.valueText) {\r\n                        field.valueText = field.value.getValueText();\r\n                    }\r\n            }\r\n            // if(field.control.getControlType() == ControlType.Radio){\r\n            //   console.log(field);\r\n            // }\r\n            field.filled = (field.valueText && field.valueText.length > 0) ? true : false;\r\n\r\n            if (field.control.getControlType() == ControlType.Text) {\r\n                let farrisSearchRecord = field.valueText;\r\n                let farrisSearchRecordArray = [];\r\n                let storagelabelCode = field.labelCode;\r\n                let filterPanelArray = JSON.parse(localStorage.getItem(this.localStorageKey));\r\n                if (Array.isArray(filterPanelArray)) {\r\n                    filterPanelArray = null;\r\n                }\r\n                if (!filterPanelArray || !filterPanelArray[storagelabelCode] || !filterPanelArray[storagelabelCode].length && farrisSearchRecord && farrisSearchRecord.length) {\r\n                    farrisSearchRecordArray.push(farrisSearchRecord);\r\n                }\r\n                else {\r\n                    farrisSearchRecordArray = filterPanelArray[storagelabelCode];\r\n                    let index = filterPanelArray[storagelabelCode].indexOf(farrisSearchRecord);\r\n                    if (index < 0 && farrisSearchRecord && farrisSearchRecord.length) {\r\n                        farrisSearchRecordArray.unshift(farrisSearchRecord);\r\n                    }\r\n                    farrisSearchRecordArray = farrisSearchRecordArray.slice(0, 6);\r\n                }\r\n                if (filterPanelArray == null) filterPanelArray = {};\r\n                filterPanelArray[storagelabelCode] = farrisSearchRecordArray;\r\n                localStorage.setItem(this.localStorageKey, JSON.stringify(filterPanelArray));\r\n            }\r\n\r\n        });\r\n        //å¤æ­é«çº§ç­ééæ¯å¦å·²ä¿®æ¹\r\n        let extendAmendedList = this.extendFilterList.filter(item => { return item.filled });\r\n        if (extendAmendedList && extendAmendedList.length) {\r\n            this.showExpandTag = true;\r\n        }\r\n        else {\r\n            this.showExpandTag = false;\r\n        }\r\n        this.extendFilterListStore = this.extendFilterList.map(o => ({ ...o }));\r\n        this.extendFilterListStore.forEach(field => {\r\n            let extendListIndex = this.listFilterConditions.findIndex(item => {\r\n                return item['id'] == field['id'];\r\n            });\r\n            if (extendListIndex >= 0) {\r\n                this.listFilterConditions[extendListIndex] = field;\r\n            }\r\n        });\r\n        // console.log(this.listFilterConditions);\r\n        this.searchChange.emit(this.listFilterConditions);\r\n        this.inSetCurrentFilterConditions();\r\n        this.filterListClassify();\r\n        this.farrissidebar.isOpen = false;\r\n        this.floatPanelOpen = false;\r\n        this.cd.markForCheck();\r\n        this.submit('extendFormData', this.listFilterConditions);\r\n    }\r\n    /** æäº¤è¡¨å */\r\n    submit(type, filterlist, filterItem = null) {\r\n        if (this.disabled || !this.showCanSubmit || !this.advancedCanSubmit) { return; }\r\n        const queryList = this.handler.setFilterConditions(filterlist);\r\n        this.query.emit({ type: type, data: JSON.stringify(queryList), filterItem });\r\n    }\r\n    /** è®¾ç½®ç­éåå§å¼ */\r\n    setFilterValue(fieldConfigs: FieldConfig[]) {\r\n        this.listFilterConditions = this.stagListFilterConditions.map(o => ({ ...o }));\r\n        if (this.listFilterConditions && this.listFilterConditions.length) {\r\n            this.setValues(this.listFilterConditions, fieldConfigs);\r\n            let listFilter = this.listFilterConditions.map(o => ({ ...o }));\r\n            this.listFilterConditions = listFilter;\r\n            this.filterListClassify();\r\n            this.searchChange.emit(this.listFilterConditions);\r\n            this.inSetCurrentFilterConditions();\r\n            // this.listSearch();\r\n            this.cd.detectChanges();\r\n            this.cd.markForCheck();\r\n            this.canSubmit = this.canSubmitFilter(this.requiredListFilter);\r\n            if (!this.canSubmit) {\r\n                return;\r\n            }\r\n            this.submit('showFormData', this.listFilterConditions);\r\n        }\r\n    }\r\n    /**\r\n     * æ¸ç©ºç­éæä¸é¡¹\r\n     * @param labelCode å­æ®µç¼å·å¯ä¸æ è¯\r\n     */\r\n    resetFilterValue(labelCode: string) {\r\n        if (labelCode && this.listFilterConditions && this.listFilterConditions.length) {\r\n            let resetCondition = this.listFilterConditions.find((conditions) => {\r\n                return conditions['fieldCode'] === labelCode;\r\n            })\r\n            if (resetCondition) {\r\n                this.resetListCondition(resetCondition);\r\n                this.filterListClassify();\r\n                this.cd.markForCheck();\r\n                this.searchChange.emit(this.listFilterConditions);\r\n                this.inSetCurrentFilterConditions();\r\n                this.advancedCanSubmit = this.canSubmitFilter(this.extendRequiredList);\r\n                this.submit('panelFormData', this.listFilterConditions);\r\n            }\r\n        }\r\n    }\r\n\r\n    // è®¾ç½®value\r\n    setValues(conditions, fieldConfigs: FieldConfig[]) {\r\n        let qc: QueryCondition;\r\n        let controlType: string;\r\n        if (fieldConfigs && fieldConfigs.length) {\r\n            fieldConfigs.forEach(v => {\r\n                qc = conditions.find(c => c.fieldCode == v.labelCode);\r\n                if (qc) {\r\n                    controlType = this.getControlType(qc);\r\n                    qc.value = this.filterService.setValues(controlType, v.value, qc.control.single);\r\n                    qc.valueText = qc.value.getValueText(qc.control);\r\n                    if (v.value) {\r\n                        qc.filled = true;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    getValue(fieldName: string) {\r\n        const queryList = this.handler.setFilterConditions(this.listFilterConditions);\r\n        const item = queryList.find((n: any) => n['FilterField'] === fieldName);\r\n        if (item) {\r\n            return item.value;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     * @param selectedFieldCondition \r\n     */\r\n    getControlType(selectedFieldCondition: QueryCondition): string {\r\n        if (selectedFieldCondition) {\r\n            if (selectedFieldCondition.control.getControlType() == ControlType.Text) {\r\n                return 'input';\r\n            }\r\n            else if (selectedFieldCondition.control.getControlType() == ControlType.Search) {\r\n                return 'search';\r\n            }\r\n            else if (selectedFieldCondition.control.getControlType() == ControlType.Date) {\r\n                return 'date';\r\n            }\r\n            else if (selectedFieldCondition.control.getControlType() == ControlType.Month) {\r\n                return 'month';\r\n            }\r\n            else if (selectedFieldCondition.control.getControlType() == ControlType.Year) {\r\n                return 'year';\r\n            }\r\n            else if (selectedFieldCondition.control.getControlType() == ControlType.DateRange) {\r\n                return 'daterange';\r\n            }\r\n            else if (selectedFieldCondition.control.getControlType() == ControlType.MonthRange) {\r\n                return 'monthrange';\r\n            }\r\n            else if (selectedFieldCondition.control.getControlType() == ControlType.YearRange) {\r\n                return 'yearrange';\r\n            }\r\n            else if (selectedFieldCondition.control.getControlType() == ControlType.DateRangeTime) {\r\n                return 'daterangetime';\r\n            }\r\n            else if (selectedFieldCondition.control.getControlType() == ControlType.DropDown) {\r\n                return 'dropdown';\r\n            }\r\n            else if (selectedFieldCondition.control.getControlType() == ControlType.NumberRange) {\r\n                return 'number';\r\n            }\r\n            else if (selectedFieldCondition.control.getControlType() == ControlType.Help) {\r\n                return 'help';\r\n            }\r\n            else if (selectedFieldCondition.control.getControlType() == ControlType.CheckboxGroup) {\r\n                return 'checkboxgroup';\r\n            }\r\n            else if (selectedFieldCondition.control.getControlType() == ControlType.Radio) {\r\n                return 'radio';\r\n            }\r\n            else if (selectedFieldCondition.control.getControlType() == ControlType.InputGroup) {\r\n                return 'input-group';\r\n            }\r\n            else if (selectedFieldCondition.control.getControlType() == ControlType.Number) {\r\n                return 'singlenumber';\r\n            }\r\n            else if (selectedFieldCondition.control.getControlType() == ControlType.FlexibleNumber) {\r\n                return 'flexiblenumber';\r\n            }\r\n            else if (selectedFieldCondition.control.getControlType() == ControlType.FlexibleDate) {\r\n                return 'flexibledate';\r\n            }\r\n            else {\r\n                return 'input';\r\n            }\r\n        }\r\n\r\n    }\r\n    /**\r\n     * æ´æ°ä¸ä¸æä¸­ç­éæ°æ®\r\n     */\r\n    inSetCurrentFilterConditions() {\r\n        if (this.filterHandler) {\r\n            this.filterHandler.setCurrentFilterConditions(this.listFilterConditions);\r\n        }\r\n    }\r\n\r\n    /** æ¸ç©ºæ¡ä»¶ */\r\n    resetListCondition(listFilterCondition: QueryCondition) {\r\n        if (listFilterCondition.control.getControlType() == ControlType.Text) {\r\n            listFilterCondition.value = new TextValue();\r\n        }\r\n        else if (listFilterCondition.control.getControlType() == ControlType.Search) {\r\n            listFilterCondition.value = new SearchValue();\r\n        }\r\n        else if (listFilterCondition.control.getControlType() == ControlType.Date) {\r\n            listFilterCondition.value = new DateValue();\r\n        }\r\n        else if (listFilterCondition.control.getControlType() == ControlType.Month) {\r\n            listFilterCondition.value = new MonthValue();\r\n        }\r\n        else if (listFilterCondition.control.getControlType() == ControlType.Year) {\r\n            listFilterCondition.value = new YearValue();\r\n        }\r\n        else if (listFilterCondition.control.getControlType() == ControlType.DateRange) {\r\n            listFilterCondition.value = new DateRangeValue();\r\n        }\r\n        else if (listFilterCondition.control.getControlType() == ControlType.MonthRange) {\r\n            listFilterCondition.value = new MonthRangeValue();\r\n        }\r\n        else if (listFilterCondition.control.getControlType() == ControlType.YearRange) {\r\n            listFilterCondition.value = new YearRangeValue();\r\n        }\r\n        else if (listFilterCondition.control.getControlType() == ControlType.DropDown) {\r\n            listFilterCondition.value = new DropDownListValue();\r\n        }\r\n        else if (listFilterCondition.control.getControlType() == ControlType.NumberRange) {\r\n            listFilterCondition.value = new NumberRangeValue();\r\n        }\r\n        else if (listFilterCondition.control.getControlType() == ControlType.Help) {\r\n            listFilterCondition.value = new HelpValue();\r\n        }\r\n        else if (listFilterCondition.control.getControlType() == ControlType.CheckboxGroup) {\r\n            listFilterCondition.value = new CheckboxGroupValue();\r\n        }\r\n        else if (listFilterCondition.control.getControlType() == ControlType.Radio) {\r\n            listFilterCondition.value = new RadioGroupValue();\r\n        }\r\n        else if (listFilterCondition.control.getControlType() == ControlType.InputGroup) {\r\n            listFilterCondition.value = new InputGroupValue();\r\n        }\r\n        else if (listFilterCondition.control.getControlType() == ControlType.Number) {\r\n            listFilterCondition.value = new NumberValue();\r\n        }\r\n        else if (listFilterCondition.control.getControlType() == ControlType.FlexibleNumber) {\r\n            listFilterCondition.value = new FlexibleNumberValue({ startValue: null, endValue: null, value: null }, listFilterCondition.control.single);\r\n        }\r\n        else if (listFilterCondition.control.getControlType() == ControlType.FlexibleDate) {\r\n            listFilterCondition.value = new FlexibleDateValue({ startValue: null, endValue: null, value: null }, listFilterCondition.control.single);\r\n        }\r\n        else {\r\n            listFilterCondition.value = new TextValue();\r\n        }\r\n        listFilterCondition.valueText = '';\r\n        listFilterCondition.filled = false;\r\n        // return listFilterCondition;\r\n    }\r\n\r\n    resetSearch() {\r\n        if (this.disabled) { return; }\r\n        if (this.listFilterConditions && this.listFilterConditions.length) {\r\n            this.listFilterConditions.forEach(listFilterCondition => {\r\n                this.resetListCondition(listFilterCondition);\r\n            });\r\n            this.listFilterConditions = this.listFilterConditions.map(o => ({ ...o }));\r\n            this.filterListClassify();\r\n            this.showCanSubmit = true;\r\n            this.submit('panelFormData', this.listFilterConditions);\r\n        }\r\n        this.resetChange.emit();\r\n        this.showExpandTag = false;\r\n    }\r\n    /**\r\n     * é«çº§ç­éæ¸ç©ºç­é\r\n     */\r\n    resetAdvancedSearch() {\r\n        if (this.extendFilterList && this.extendFilterList.length) {\r\n            this.extendFilterList.forEach(listFilterCondition => {\r\n                this.resetListCondition(listFilterCondition);\r\n            })\r\n            this.extendFilterList = this.extendFilterList.map(o => ({ ...o }));\r\n        }\r\n        if (this.extendRequiredList.length) {\r\n            this.advancedCanSubmit = false;\r\n        }\r\n\r\n    }\r\n    /**\r\n     * valueText ç¹æ®ç±»åå¤ç\r\n     * @param item \r\n     */\r\n    getValueText(item: QueryCondition) {\r\n        // console.log(item.fieldName,item.control.getControlType());\r\n        if (item.control.getControlType() === ControlType.DropDown) {\r\n            const enumValue = (item.control as DropDownControl).enumValues;\r\n            const value = (item.value as DropDownListValue).value;\r\n            if (enumValue && enumValue.length) {\r\n                const texts = enumValue.find(val => {\r\n                    return val['value'] == value;\r\n                });\r\n                if (texts) {\r\n                    item.valueText = texts['name'];\r\n                }\r\n            }\r\n        }\r\n        else if (item.control.getControlType() === ControlType.CheckboxGroup) {\r\n            const enumValue = (item.control as CheckboxGroupControl).enumValues;\r\n            const value = (item.value as CheckboxGroupValue).value;\r\n            if (enumValue && enumValue.length && value && value['length'] > 0) {\r\n                if (item.control.boolcheck) {\r\n                    item.valueText = value[0].toString();\r\n                    if (item.valueText == 'true') {\r\n                        item.valueText = this.localeService.getValue('text.yes');\r\n                    } else if (item.valueText == 'false') {\r\n                        item.valueText = this.localeService.getValue('text.no');\r\n                    }\r\n                }\r\n                else {\r\n                    let texts = [];\r\n                    for (let i = 0; i <= value['length']; i++) {\r\n                        const enums = enumValue.find(val => {\r\n                            return val['value'] == value[i];\r\n                        });\r\n                        if (enums) {\r\n                            texts.push(enums['name']);\r\n                        }\r\n                    }\r\n                    item.valueText = texts.join(',');\r\n                }\r\n            }\r\n        }\r\n        else if (item.control.getControlType() === ControlType.Radio) {\r\n            const enumValue = (item.control as RadioControl).enumValues;\r\n            const value = (item.value as RadioGroupValue).value;\r\n            if (enumValue && enumValue.length) {\r\n                const texts = enumValue.find(val => {\r\n                    return val['value'] == value;\r\n                });\r\n                if (texts) {\r\n                    item.valueText = texts['name'];\r\n                    if (item.valueText == 'true') {\r\n                        item.valueText = this.localeService.getValue('text.yes');\r\n                    } else if (item.valueText == 'false') {\r\n                        item.valueText = this.localeService.getValue('text.no');\r\n                    }\r\n                }\r\n            }\r\n        } else if (item.control.getControlType() == ControlType.InputGroup) {\r\n            item.valueText = item.value.getValueText();\r\n        }\r\n    }\r\n\r\n    buildSmartHelpKey(value: string) {\r\n        if(this.idService) {\r\n            let prefix = '';\r\n            if (location.hash) {\r\n                const pathArr = location.hash.split('?');\r\n                prefix = pathArr ? pathArr[0] : '';\r\n            } else {\r\n                const pathArr  = location.pathname.split('/');\r\n                prefix = pathArr ? pathArr[pathArr.length - 1] : '';\r\n            }\r\n            return this.idService.encrypt(prefix + '/list-filter/' + value);\r\n        } else {\r\n            return 'list-filter/' + value;\r\n        }\r\n    }\r\n\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { QueryCondition } from '../entity/querycondition';\r\n\r\n@Injectable()\r\nexport class SolutionService {\r\n\r\n  constructor() { }\r\n\r\n  getGuid() {\r\n    return (this.s4() + this.s4() + \"-\" + this.s4() + \"-\" + this.s4() + \"-\" + this.s4() + \"-\" + this.s4() + this.s4() + this.s4());\r\n  }\r\n\r\n  private s4() {\r\n    return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n  }\r\n  /**\r\n  * æ ¹æ®å­æ®µè·åLableæ§ä»¶çTitle\r\n  * @param field \r\n  */\r\n  getConditionItemTitle(field: QueryCondition) {\r\n    if (field.id && field.id !== '') {\r\n      return field.fieldName;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * æ°ç»åé ä¹å¯ä½¿ç¨JSON.Parse(JSON.Stringify([input])),åæç±»ç»æä¸­æ²¡æåå£\r\n   * @param input \r\n   */\r\n  arrayClone(input: Array<any>): Array<any> {\r\n    let result = new Array<any>();\r\n    if (input && input.length > 0) {\r\n      input.forEach(element => {\r\n        result.push(Object.assign({}, element));\r\n      });\r\n    }\r\n    return result;\r\n  }\r\n}\r\n","import { Component, Input, OnInit, OnChanges, HostBinding, EventEmitter, Output, AfterViewInit, ElementRef} from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { SolutionService } from '../../service/solution.service';\r\n\r\n@Component({\r\n    selector: 'app-filter-input',\r\n    templateUrl: './input.component.html'\r\n})\r\n\r\nexport class InputComponent implements OnInit,OnChanges,AfterViewInit{\r\n   \r\n    /**\r\n     * QueryConditionç±»å\r\n     */\r\n    @Input() item:any;\r\n    @Input() autoLabel:boolean;\r\n    @Input() disabled:boolean;\r\n    @Output('searchHandle') searchHandle = new EventEmitter();\r\n\r\n    /**å¤æ­æ¯å¦æ¯å¨æ©å±åºåå±ç¤º */\r\n    extend:boolean = false;\r\n    /**å¤æ­æ¯å¦æ¾ç¤ºlabel */\r\n    showlabel:boolean = true;\r\n    placeholder: string;\r\n\r\n    @HostBinding('class.filter-item-wrap')\r\n    get isExtend(): boolean {\r\n        return !this.extend && this.autoLabel;\r\n    }\r\n    @HostBinding('class.filter-item-hiddenlabel')\r\n    get hidenLabel(): boolean {\r\n        return !this.showlabel;\r\n    }\r\n    \r\n    constructor(private solutionService:SolutionService,private readonly element: ElementRef){}\r\n\r\n    ngOnInit(): void {\r\n        //console.log(this.item);\r\n        if(this.item){\r\n            this.placeholder = this.item.placeHolder || '';\r\n            // const type = Object.prototype.toString.call(this.item.placeHolder);\r\n            // if(type == '[object Undefined]'){\r\n            //     if(this.item.control && this.item.control.hasOwnProperty('placeholder')){\r\n            //         this.placeholder = this.item.control.placeholder;\r\n            //     }\r\n            // }\r\n            // else{\r\n            //     this.placeholder = this.item.placeHolder;\r\n            // }\r\n        }\r\n        if(this.item && this.item.control && this.item.control.hasOwnProperty('isExtend')) {\r\n            this.extend = this.item.control.isExtend;\r\n            if(!this.extend){\r\n                this.showlabel = this.item.control.showLabel;\r\n            }\r\n        }\r\n    }\r\n    ngAfterViewInit() {\r\n        // if(!this.extend){\r\n        //     const El = this.element.nativeElement;\r\n        //     const itemWidth = El.clientWidth;\r\n        //     El.querySelector('.list-filter-input-item').style.width = itemWidth + 'px';\r\n        //     El.querySelector('.input-item-btns').style.width = itemWidth + 100 + 'px';\r\n        // }\r\n    }\r\n    ngOnChanges(): void {\r\n        \r\n    }\r\n\r\n    // getConditionItemStyle(field: QueryCondition, controlType: any) {\r\n    //     return this.solutionService.getConditionItemStyle(field,controlType);\r\n    // }\r\n\r\n    getConditionItemTitle(field:QueryCondition){\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n\r\n    InputChanged(e){\r\n        // let keycode = window.event ? e.keyCode : e.which;\r\n        // if(keycode == 13){//åè½¦é®\r\n        //     this.searchHandle.emit(this.item.value.value);\r\n        // }\r\n        if(this.disabled){return;}\r\n        this.searchHandle.emit(this.item.value.value);\r\n    }\r\n}","import { Component, Input, OnInit, HostBinding, EventEmitter, Output, AfterViewInit, ElementRef} from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { SolutionService } from '../../service/solution.service';\r\nimport { NumberRangeValue, NumberRangeValueConvertor } from '../../entity/conditionvalue/numberrangevaue';\r\n// import { NumberRangeValue } from '../../entity/conditionvalue/numberrangevaue';\r\n\r\n\r\n@Component({\r\n    selector: 'app-filter-number',\r\n    templateUrl: './number.component.html'\r\n})\r\n\r\nexport class NumberComponent implements OnInit,AfterViewInit{\r\n   \r\n    // @Input() item:any;\r\n    @Input() autoLabel:boolean;\r\n    @Input() disabled:boolean;\r\n    @Output('searchHandle') searchHandle = new EventEmitter();\r\n\r\n    /**å¤æ­æ¯å¦æ¯å¨æ©å±åºåå±ç¤º */\r\n    extend:boolean = false;\r\n    /**å¤æ­æ¯å¦æ¾ç¤ºlabel */\r\n    showlabel:boolean = true;\r\n    canNull:boolean = true;\r\n\r\n    number:string;\r\n    beginValue: any;\r\n    endValue: any;\r\n    precision: number;\r\n    placeholder: string;\r\n    beginPlaceHolder:string;\r\n    endPlaceHolder:string;\r\n    bigNumber:boolean;\r\n    max:number;\r\n    min:number;\r\n\r\n    @HostBinding('class.filter-item-wrap')\r\n    get isExtend(): boolean {\r\n        return !this.extend && this.autoLabel;\r\n    }\r\n    @HostBinding('class.filter-item-hiddenlabel')\r\n    get hidenLabel(): boolean {\r\n        return !this.showlabel;\r\n    }\r\n\r\n    _item: any;\r\n    numberRange: string;\r\n    @Input() \r\n    set item(nr: any){\r\n        this._item = nr;\r\n        this.precision = nr.control.precision;\r\n        this.bigNumber = nr.control.bigNumber;\r\n        if(!this.bigNumber){\r\n            this.min = -2147483648;\r\n            this.max = 2147483647;\r\n        }\r\n        this.constructMultiFieldNumberRange(nr.value as NumberRangeValue);\r\n        if(this._item && this._item.control && this._item.control.hasOwnProperty('isExtend')){\r\n            this.extend = this._item.control.isExtend;\r\n            if(!this.extend){\r\n                this.showlabel = this._item.control.showLabel;\r\n            }\r\n        }\r\n    }\r\n\r\n    get item(){\r\n        return this._item;\r\n    }\r\n\r\n    constructor(private solutionService:SolutionService,private readonly element: ElementRef){}\r\n\r\n    ngOnInit(): void {\r\n        if(this.item){\r\n            this.beginPlaceHolder = this.item.beginPlaceHolder || '';\r\n            this.endPlaceHolder = this.item.endPlaceHolder || '';\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n\r\n    }\r\n\r\n    getConditionItemTitle(field:QueryCondition){\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n\r\n\r\n    constructMultiFieldNumberRange(value: NumberRangeValue) {\r\n        this.beginValue = value.startValue == null ? null : value.startValue;\r\n        this.endValue = value.endValue == null ? null : value.endValue;\r\n      }\r\n\r\n    numberChange(event){\r\n        if(event){\r\n            const dataArray = event.split(\"~\");\r\n            this.item.value.startValue = dataArray[0] ? dataArray[0] : null;\r\n            this.item.value.endValue = dataArray[1] ? dataArray[1] : null;\r\n        }\r\n        else{\r\n            this._item.value.startValue = null;\r\n            this._item.value.endValue = null;\r\n        }\r\n        if(this.disabled){return;}\r\n        this.searchHandle.emit();\r\n    }\r\n\r\n    beginValueChange($event) {\r\n        this.beginValue = $event;\r\n    }\r\n\r\n    endValueChange($event) {\r\n        this.endValue = $event;\r\n    }\r\n}","import { Component, Input, OnInit, OnChanges, HostBinding, EventEmitter, Output} from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { ControlType } from '../../entity/controltype';\r\nimport { DropDownControl } from '../../entity/controltype/dropdownlist/dropdowncontrol';\r\nimport { EnumType } from '../../entity/controltype/dropdownlist/enumtype';\r\nimport { EnumIntegerValue } from '../../entity/controltype/dropdownlist/integerenumvalue';\r\nimport { EnumStringValue } from '../../entity/controltype/dropdownlist/stringenumvalue';\r\nimport { EnumBoolValue } from '../../entity/controltype/dropdownlist/boolenumvalue';\r\nimport { SolutionService } from '../../service/solution.service';\r\nimport { DropDownListValue } from '../../entity/conditionvalue/dropdownlistvalue';\r\n\r\n@Component({\r\n    selector: 'app-filter-dropdown',\r\n    templateUrl: './dropdown.component.html'\r\n})\r\n\r\nexport class DropDownComponent implements OnInit,OnChanges{\r\n   \r\n    /**\r\n     * QueryConditionç±»å\r\n     */\r\n    @Input() item:any;\r\n    @Input() autoLabel:boolean;\r\n    @Input() disabled:boolean;\r\n    @Input() enableClear = true;\r\n    @Output('searchHandle') searchHandle = new EventEmitter();\r\n\r\n    dropDownListDataSource:Array<any>=new Array<any>();\r\n    /**å¤æ­æ¯å¦æ¯å¨æ©å±åºåå±ç¤º */\r\n    extend:boolean = false;\r\n    /**å¤æ­æ¯å¦æ¾ç¤ºlabel */\r\n    showlabel:boolean = true;\r\n    \r\n    selectedItemId: any;\r\n    placeholder: string;\r\n\r\n\r\n    @HostBinding('class.filter-item-wrap')\r\n    get isExtend(): boolean {\r\n        return !this.extend && this.autoLabel;\r\n    }\r\n    @HostBinding('class.filter-item-hiddenlabel')\r\n    get hidenLabel(): boolean {\r\n        return !this.showlabel;\r\n    }\r\n\r\n    constructor(private solutionService:SolutionService){}\r\n\r\n    ngOnInit(): void {\r\n        // this.getDataSource();\r\n        // const initialValue = this.item.value as DropDownListValue;\r\n        // initialValue.value && (this.selectedItemId = initialValue.value.getEnumValue());\r\n        if(this.item){\r\n            this.placeholder = this.item.placeHolder;\r\n            // const type = Object.prototype.toString.call(this.item.placeHolder);\r\n            // if(type == '[object Undefined]'){\r\n            //     if(this.item.control && this.item.control.hasOwnProperty('placeholder')){\r\n            //         this.placeholder = this.item.control.placeholder;\r\n            //     }\r\n            // }\r\n            // else{\r\n            //     this.placeholder = this.item.placeHolder;\r\n            // }\r\n        }\r\n        this.getDataSource();\r\n        const initialValue = this.item.value as DropDownListValue;\r\n        initialValue.value && (this.selectedItemId = initialValue.value);\r\n        if(this.item && this.item.control && this.item.control.hasOwnProperty('isExtend')){\r\n            this.extend = this.item.control.isExtend;\r\n            if(!this.extend){\r\n                this.showlabel = this.item.control.showLabel;\r\n            }\r\n        }\r\n        \r\n        // this.testId = this.solutionService.getGuid();\r\n    }\r\n\r\n    ngOnChanges(): void {\r\n        this.getDataSource();\r\n        //console.log(this.dropDownListDataSource);\r\n    }\r\n\r\n    getDataSource(){\r\n        if(this.item&&this.item.value\r\n            &&this.item.control&&this.item.control.getControlType()==ControlType.DropDown){\r\n                let dropDownList=(this.item.control as DropDownControl);\r\n                if(dropDownList.valueType==EnumType.BoolType){\r\n                    this.dropDownListDataSource=Array<EnumBoolValue>();\r\n                    if(dropDownList.enumValues&&dropDownList.enumValues.length>0){\r\n                        dropDownList.enumValues.forEach(element => {\r\n                            this.dropDownListDataSource.push(Object.assign(new EnumBoolValue(),element));\r\n                        });\r\n                    }\r\n                }\r\n                else if(dropDownList.valueType==EnumType.IntType){\r\n                    this.dropDownListDataSource=Array<EnumIntegerValue>();\r\n                    if(dropDownList.enumValues&&dropDownList.enumValues.length>0){\r\n                        dropDownList.enumValues.forEach(element => {\r\n                            this.dropDownListDataSource.push(Object.assign(new EnumIntegerValue(),element));\r\n                        });\r\n                    }\r\n                }\r\n                else if(dropDownList.valueType==EnumType.StringType){\r\n                    this.dropDownListDataSource=Array<EnumStringValue>();\r\n                    if(dropDownList.enumValues&&dropDownList.enumValues.length>0){\r\n                        dropDownList.enumValues.forEach(element => {\r\n                            this.dropDownListDataSource.push(Object.assign(new EnumStringValue(),element));\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n    }\r\n\r\n    // getConditionItemStyle(field: QueryCondition, controlType: any) {\r\n    //     return this.solutionService.getConditionItemStyle(field,controlType);\r\n    // }\r\n\r\n    getConditionItemTitle(field:QueryCondition){\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n\r\n    onSearch(event){\r\n        if(event){\r\n            (this.item.value as DropDownListValue).value = event.data.value;\r\n        }else{\r\n            (this.item.value as DropDownListValue).value = '';\r\n        }\r\n        if(this.disabled){return;}\r\n        this.searchHandle.emit();\r\n    }\r\n\r\n    onClear(event){\r\n        (this.item.value as DropDownListValue).value = '';\r\n        this.searchHandle.emit();\r\n    }\r\n}","import { Component, Input, OnInit, OnChanges, HostBinding, Output, EventEmitter} from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { SolutionService } from '../../service/solution.service';\r\n\r\n@Component({\r\n    selector: 'app-filter-search',\r\n    templateUrl: './search.component.html'\r\n})\r\n\r\nexport class SearchComponent implements OnInit,OnChanges{\r\n   \r\n    /**\r\n     * QueryConditionç±»å\r\n     */\r\n    @Input() item:any;\r\n    @Input() autoLabel:boolean;\r\n    @Input() disabled:boolean;\r\n    @Output('searchHandle') searchHandle = new EventEmitter();\r\n\r\n    /**å¤æ­æ¯å¦æ¯å¨æ©å±åºåå±ç¤º */\r\n    extend:boolean = false;\r\n    /**å¤æ­æ¯å¦æ¾ç¤ºlabel */\r\n    showlabel:boolean = true;\r\n    placeholder: string;\r\n\r\n    @HostBinding('class.filter-item-wrap')\r\n    get isExtend(): boolean {\r\n        return !this.extend && this.autoLabel;\r\n    }\r\n\r\n    @HostBinding('class.filter-item-hiddenlabel')\r\n    get hidenLabel(): boolean {\r\n        return !this.showlabel;\r\n    }\r\n\r\n    groupIcon = '<span class=\"k-icon k-i-search\"></span>';\r\n\r\n    constructor(private solutionService:SolutionService){}\r\n\r\n    ngOnInit(): void {\r\n        if(this.item){\r\n            this.placeholder = this.item.placeHolder || '';\r\n            // const type = Object.prototype.toString.call(this.item.placeHolder);\r\n            // if(type == '[object Undefined]'){\r\n            //     if(this.item.control && this.item.control.hasOwnProperty('placeholder')){\r\n            //         this.placeholder = this.item.control.placeholder;\r\n            //     }\r\n            // }\r\n            // else{\r\n            //     this.placeholder = this.item.placeHolder;\r\n            // }\r\n        }\r\n        if(this.item && this.item.control && this.item.control.hasOwnProperty('isExtend')){\r\n            this.extend = this.item.control.isExtend;\r\n            if(!this.extend){\r\n                this.showlabel = this.item.control.showLabel;\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnChanges(): void {\r\n        \r\n    }\r\n\r\n    // getConditionItemStyle(field: QueryCondition, controlType: any) {\r\n    //     return this.solutionService.getConditionItemStyle(field,controlType);\r\n    // }\r\n\r\n    getConditionItemTitle(field:QueryCondition){\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n\r\n    onSearch($event){\r\n        if(this.disabled){return;}\r\n        this.searchHandle.emit($event);\r\n    }\r\n}","import { CheckboxIEnumValue } from \"./ienumvalue\";\r\n\r\n/**\r\n * checboxgroupç±»å\r\n */\r\nexport class CheckboxValue implements CheckboxIEnumValue{\r\n\r\n    getEnumValueName():string{\r\n        return this.name;\r\n    }\r\n\r\n    getEnumValue():any{\r\n        return this.value;\r\n    }\r\n    \r\n    /**\r\n     * ææ¬æ¾ç¤º\r\n     */\r\n    name:string;\r\n\r\n    /**\r\n     * å¼æ¾ç¤º\r\n     */\r\n    value:string;\r\n}","import { Component, Input, OnInit, OnChanges, ViewEncapsulation, HostBinding, EventEmitter, Output} from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { ControlType } from '../../entity/controltype';\r\nimport { SolutionService } from '../../service/solution.service';\r\nimport { CheckboxGroupControl } from '../../entity/controltype/checkbox/checkboxcontrol';\r\nimport { CheckboxValue } from '../../entity/controltype/checkbox/checkboxvalue';\r\nimport { CheckboxGroupValue } from '../../entity/conditionvalue/checkboxgroupvalue';\r\n\r\n@Component({\r\n    selector: 'app-filter-checkbox',\r\n    templateUrl: './checkbox.component.html'\r\n    // encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class filterCheckboxComponent implements OnInit,OnChanges{\r\n   \r\n    /**\r\n     * QueryConditionç±»å\r\n     */\r\n    @Input() item:any;\r\n    @Input() autoLabel:boolean;\r\n    @Input() disabled:boolean;\r\n    @Output('searchHandle') searchHandle = new EventEmitter();\r\n    /**å¤æ­æ¯å¦æ¯å¨æ©å±åºåå±ç¤º */\r\n    extend:boolean = false;\r\n    /**å¤æ­æ¯å¦æ¾ç¤ºlabel */\r\n    showlabel:boolean = true;\r\n    boolcheck:boolean = false;\r\n    checkValue: any[];\r\n    indeterminate:boolean = true;\r\n    boolchecked:boolean;\r\n    boolCheckState:string = 'indeterminate';\r\n\r\n    selectCheck = [];\r\n\r\n    @HostBinding('class.filter-item-wrap')\r\n    get isExtend(): boolean {\r\n        return !this.extend && this.autoLabel;\r\n    }\r\n\r\n    @HostBinding('class.filter-item-checbox-wrap')\r\n    get isCheckExtend(): boolean {\r\n        return !this.extend;\r\n    }\r\n\r\n    @HostBinding('class.filter-item-checkboxgroup') cla = true;\r\n    @HostBinding('class.filter-item-hiddenlabel')\r\n    get hidenLabel(): boolean {\r\n        return !this.showlabel;\r\n    }\r\n\r\n    checkboxDataSource:Array<any>=new Array<any>();\r\n\r\n    constructor(private solutionService:SolutionService){}\r\n\r\n    ngOnInit(): void {\r\n        //this.checkValue = this.item.value.getOriginalValue();\r\n        if(this.item && this.item.control && this.item.control.hasOwnProperty('isExtend')){\r\n            this.extend = this.item.control.isExtend;\r\n            this.boolcheck = this.item.control.boolcheck;\r\n            if(!this.extend){\r\n                this.showlabel = this.item.control.showLabel;\r\n            }\r\n        }\r\n        this.getDataSource();\r\n    }\r\n\r\n    ngOnChanges(): void {\r\n        this.getDataSource();\r\n    }\r\n\r\n    getDataSource(){\r\n        this.checkValue = this.item.value.getOriginalValue();\r\n        if(this.boolcheck){\r\n            if(this.checkValue.length) {\r\n                this.boolchecked = this.checkValue[0];\r\n                if(this.boolchecked) this.boolCheckState = 'checked';\r\n                else this.boolCheckState = 'unchecked';\r\n            }\r\n            else this.boolCheckState = 'indeterminate';\r\n        }\r\n        if(this.item && this.item.control && this.item.control.getControlType()==ControlType.CheckboxGroup){\r\n            let checkboxList=(this.item.control as CheckboxGroupControl);\r\n            this.checkboxDataSource = Array<CheckboxValue>();\r\n\r\n            if(checkboxList.enumValues && checkboxList.enumValues.length>0){\r\n                checkboxList.enumValues.forEach(element => {\r\n                    this.checkboxDataSource.push(Object.assign(new CheckboxValue(),element));\r\n                });\r\n            }\r\n        }\r\n        // if(this.item && this.item.control && this.item.control.hasOwnProperty('isExtend')){\r\n        //     this.extend = this.item.control.isExtend;\r\n        // }\r\n    }\r\n\r\n    // getConditionItemStyle(field: QueryCondition, controlType: any) {\r\n    //     return this.solutionService.getConditionItemStyle(field,controlType);\r\n    // }\r\n\r\n    getConditionItemTitle(field:QueryCondition){\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n\r\n    onSearch(event){\r\n        let checkboxValue = [];\r\n        if(event){\r\n            // let checkboxList = event.split(',');\r\n            let checkboxList = event;\r\n            if(checkboxList && checkboxList.length){\r\n                checkboxValue = checkboxList;\r\n            }\r\n            this.item.value.value = checkboxValue;\r\n        }\r\n        else{\r\n            this.item.value.value = new CheckboxGroupValue();\r\n        }\r\n        if(this.disabled){return;}\r\n        this.searchHandle.emit();\r\n    }\r\n\r\n    handleClick() {\r\n        if(this.boolCheckState == 'indeterminate'){\r\n            this.boolCheckState = 'checked';\r\n            this.boolchecked = true;\r\n            this.item.value.value = [true];\r\n        }\r\n        else if(this.boolCheckState == 'checked'){\r\n            this.boolCheckState = 'unchecked';\r\n            this.boolchecked = false;\r\n            this.item.value.value = [false];\r\n        }\r\n        else if(this.boolCheckState == 'unchecked'){\r\n            this.boolCheckState = 'indeterminate';\r\n            this.boolchecked = null;\r\n            this.item.value.value = [];\r\n        }\r\n        if(this.disabled){return;}\r\n        this.searchHandle.emit();\r\n    }\r\n}","import { Component, Input, OnInit, OnChanges, HostBinding, Output, EventEmitter} from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { DateRangeValue } from '../../entity/conditionvalue/daterangevalue';\r\nimport { SolutionService } from '../../service/solution.service';\r\n\r\n@Component({\r\n    selector: 'app-filter-daterange',\r\n    templateUrl: './daterange.component.html'\r\n})\r\n\r\nexport class DateRangeComponent implements OnInit,OnChanges{\r\n\r\n    /**\r\n     * QueryConditionç±»å\r\n     */\r\n    @Input() item:any;\r\n    @Input() autoLabel:boolean;\r\n    @Input() disabled:boolean;\r\n    @Input() showTime:boolean;\r\n    @Input() showType:string;\r\n    @Output('searchHandle') searchHandle = new EventEmitter();\r\n\r\n    startTime:Date;\r\n    endTime:Date;\r\n    //TODO: need 2 placeholder text for date range\r\n    // rangeDate = {\r\n    //     begin:null,\r\n    //     end:null\r\n    // };\r\n    /**å¤æ­æ¯å¦æ¯å¨æ©å±åºåå±ç¤º */\r\n    extend:boolean = false;\r\n    /**å¤æ­æ¯å¦æ¾ç¤ºlabel */\r\n    showlabel:boolean = true;\r\n\r\n    rangeDate: string;\r\n    placeholder: string;\r\n    beginPlaceHolder:string;\r\n    endPlaceHolder:string;\r\n    dateFormat:string;\r\n\r\n    @HostBinding('class.filter-item-wrap')\r\n    get isExtend(): boolean {\r\n        return !this.extend && this.autoLabel;\r\n    }\r\n    @HostBinding('class.filter-item-hiddenlabel')\r\n    get hidenLabel(): boolean {\r\n        return !this.showlabel;\r\n    }\r\n\r\n    constructor(private solutionService:SolutionService){}\r\n\r\n    ngOnInit(): void {\r\n        this.initDate();\r\n        if(this.item){\r\n            this.beginPlaceHolder = this.item.beginPlaceHolder || '';\r\n            this.endPlaceHolder = this.item.endPlaceHolder || '';\r\n            // const type = Object.prototype.toString.call(this.item.placeHolder);\r\n            // if(type == '[object Undefined]'){\r\n            //     if(this.item.control && this.item.control.hasOwnProperty('placeholder')){\r\n            //         this.placeholder = this.item.control.placeholder;\r\n            //     }\r\n            // }\r\n            // else{\r\n            //     this.placeholder = this.item.placeHolder;\r\n            // }\r\n            // const beginplac = Object.prototype.toString.call(this.item.beginPlaceHolder);\r\n            // if(beginplac == '[object Undefined]'){\r\n            //     if(this.item.control && this.item.control.hasOwnProperty('placeholder')){\r\n            //         this.beginPlaceHolder = this.item.control.beginPlaceHolder;\r\n            //     }\r\n            // }\r\n            // else{\r\n            //     this.beginPlaceHolder = this.item.beginPlaceHolder;\r\n            // }\r\n            // const endplac = Object.prototype.toString.call(this.item.endPlaceHolder);\r\n            // if(endplac == '[object Undefined]'){\r\n            //     if(this.item.control && this.item.control.hasOwnProperty('placeholder')){\r\n            //         this.endPlaceHolder = this.item.control.endPlaceHolder;\r\n            //     }\r\n            // }\r\n            // else{\r\n            //     this.endPlaceHolder = this.item.endPlaceHolder;\r\n            // }\r\n        }\r\n    }\r\n\r\n    ngOnChanges(): void {\r\n        this.initDate();\r\n    }\r\n\r\n    initDate(){\r\n        // if(this.item && this.item.control && this.item.control.hasOwnProperty('format') && this.item.control.format){\r\n        //     this.dateFormat = this.item.control.format;\r\n        //     if(this.showTime){\r\n        //         if(this.dateFormat.length > 0 && this.dateFormat.indexOf('HH:mm') == -1){\r\n        //             this.dateFormat = this.dateFormat + ' HH:mm:ss';\r\n        //         }\r\n        //     }\r\n        // }\r\n        // else{\r\n        //     this.dateFormat = this.showTime? 'yyyy-MM-dd HH:mm:ss':'yyyy-MM-dd';\r\n        // }\r\n        if(this.item && this.item.control && this.item.control.hasOwnProperty('format')){\r\n            let itemDateFormat = this.item.control.format;\r\n            if(this.showTime){\r\n                if(itemDateFormat.length > 0 && itemDateFormat.indexOf('HH:mm') == -1){\r\n                    itemDateFormat = itemDateFormat + ' HH:mm:ss';\r\n                }\r\n            }\r\n            const format = this.showTime ? 'yyyy-MM-dd HH:mm:ss': (this.showType == '2'? 'yyyy-MM': (this.showType == '3'? 'yyyy':'yyyy-MM-dd'));\r\n            this.dateFormat = itemDateFormat?itemDateFormat:format;\r\n        }\r\n        const rangeDateValue : DateRangeValue = this.item && this.item.value;\r\n        if(rangeDateValue.startTime && rangeDateValue.endTime){\r\n            this.rangeDate = `${rangeDateValue.startTime}~${rangeDateValue.endTime}`;\r\n        }\r\n    }\r\n\r\n    getDate(dateString:Date):Date{\r\n        // let arr1:Array<any> = dateString.split(\" \"); \r\n        // let sdate = arr1[0].split('-'); \r\n        // let date = new Date(sdate[0], sdate[1]-1, sdate[2]);\r\n        let date = new Date(dateString); \r\n        return date;\r\n    }\r\n   \r\n    onDateChange(event:any){\r\n        if(event.returnFormatted){\r\n            (this.item.value as DateRangeValue).startTime = event.returnFormatted.split('~')[0];\r\n            (this.item.value as DateRangeValue).endTime = event.returnFormatted.split('~')[1];\r\n        }else{\r\n            // this.item.value = new DateRangeValue();\r\n            this.item.value.startTime = '';\r\n            this.item.value.endTime = '';\r\n        }\r\n        this.item.valueText = event.formatted;\r\n        if(this.disabled){return;}\r\n        this.searchHandle.emit(event);\r\n    }\r\n    getConditionItemTitle(field:QueryCondition){\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n}","import { Component, Input, OnInit, OnChanges, HostBinding, Output, EventEmitter } from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { ControlType } from '../../entity/controltype';\r\nimport { HelpContol } from '../../entity/controltype/help/helpcontrol';\r\nimport { IControl } from '../../entity/controltype/icontrol';\r\nimport { deepCopy } from '../../utils';\r\nimport { SolutionService } from '../../service/solution.service';\r\nimport { HelpValue } from '../../entity/conditionvalue/helpvalue';\r\nimport { DisplayType } from '../../entity/controltype/help/displayType';\r\n\r\n// import { ServerSideToken } from '@farris/ui-lookup';\r\n// import { LookupHttpBeQueryService } from './service/Lookup-http.service';\r\nimport { of } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'app-filter-help',\r\n    templateUrl: './help.component.html'\r\n    // providers: [{ provide: ServerSideToken, useClass: LookupHttpBeQueryService }]\r\n})\r\n\r\nexport class HelpComponent implements OnInit, OnChanges {\r\n\r\n    /**\r\n     * QueryConditionç±»å\r\n     */\r\n    @Input() item: any;\r\n    @Input() autoLabel: boolean;\r\n    @Input() disabled: boolean;\r\n\r\n    @Input() hostRef: any;\r\n\r\n    @Input() instanceId: string;\r\n\r\n    @Output('searchHandle') searchHandle = new EventEmitter();\r\n\r\n    uri: string;\r\n    textField: string;\r\n    idField: string;\r\n    valueField: any;\r\n    textValue: any;\r\n    displayType: DisplayType;\r\n    mapFields: any;\r\n    context: any;\r\n    preEventCmd: any;\r\n    postEventCmd: any;\r\n    enableFullTree: boolean;\r\n    loadTreeDataType: 'default' | 'loadall' | 'layerload';\r\n    singleSelect: boolean;\r\n    expandLevel: number;\r\n    enableCascade: boolean;\r\n    helpId: string;\r\n\r\n    /**å¤æ­æ¯å¦æ¯å¨æ©å±åºåå±ç¤º */\r\n    extend: boolean = false;\r\n    /**å¤æ­æ¯å¦æ¾ç¤ºlabel */\r\n    showlabel: boolean = true;\r\n    placeholder: string;\r\n\r\n    @HostBinding('class.filter-item-wrap')\r\n    get isExtend(): boolean {\r\n        return !this.extend && this.autoLabel;\r\n    }\r\n    @HostBinding('class.filter-item-hiddenlabel')\r\n    get hidenLabel(): boolean {\r\n        return !this.showlabel;\r\n    }\r\n\r\n    constructor(private solutionService: SolutionService) { }\r\n\r\n    ngOnInit(): void {\r\n        if (this.item) {\r\n            this.placeholder = this.item.placeHolder;\r\n            // const type = Object.prototype.toString.call(this.item.placeHolder);\r\n            // if(type == '[object Undefined]'){\r\n            //     if(this.item.control && this.item.control.hasOwnProperty('placeholder')){\r\n            //         this.placeholder = this.item.control.placeholder;\r\n            //     }\r\n            // }\r\n            // else{\r\n            //     this.placeholder = this.item.placeHolder;\r\n            // }\r\n        }\r\n        this.getHelpBindingInfo();\r\n        if (this.item && this.item.control && this.item.control.hasOwnProperty('isExtend')) {\r\n            this.extend = this.item.control.isExtend;\r\n            if (!this.extend) {\r\n                this.showlabel = this.item.control.showLabel;\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnChanges(): void {\r\n        this.getHelpBindingInfo();\r\n    }\r\n\r\n    selectedDataHandler(selectedItem: any) {\r\n        // console.log(selectedItem);\r\n        //    let mapFields=new Function('return'+(this.item.control as HelpContol).mapFields);\r\n        //    let mapFieldsKeys=Object.keys(mapFields());\r\n        //    (this.item.value as HelpValue).value=new Object();\r\n        //    mapFieldsKeys.forEach(mapFeildKey => {\r\n        //     (this.item.value as HelpValue).value[mapFeildKey]=selectedItem[mapFeildKey];\r\n        //    });\r\n        //    (this.item.value as HelpValue).valueField=(this.item.control as HelpContol).valueField;\r\n        //    let textField=(this.item.control as HelpContol).textField;\r\n        //    this.textValue=(this.item.value as HelpValue).value[textField];\r\n\r\n        const helpValue = (this.item.value as HelpValue);\r\n        helpValue.value = this.singleSelect ? [selectedItem] : selectedItem;//åéè¿åå¯¹è±¡ï¼å¤éè¿åæ°ç»\r\n        helpValue.valueField = this.valueField;\r\n        helpValue.textValue = helpValue.getTextValue(this.textField);\r\n        this.textValue = helpValue.textValue;\r\n        // this.conditionChange.emit();\r\n        if (this.disabled) { return; }\r\n        this.searchHandle.emit();\r\n\r\n    }\r\n\r\n    getHelpBindingInfo() {\r\n        if (this.item && this.item.control && this.item.control.getControlType() == ControlType.Help) {\r\n            let helpList = (this.item.control as HelpContol);\r\n            this.uri = helpList.uri;\r\n            this.textField = helpList.textField;\r\n            this.valueField = helpList.valueField;\r\n            this.idField = helpList.idField;\r\n            this.mapFields = helpList.mapFields;\r\n            this.context = helpList.context;\r\n            this.preEventCmd = helpList.preEventCmd;\r\n            this.postEventCmd = helpList.postEventCmd;\r\n\r\n            if (helpList.preEventCmd) {\r\n                this.preEventCmd = (e) => {\r\n                    e['hostRef'] = this.hostRef;\r\n                    return helpList.preEventCmd(e);\r\n                };\r\n            }\r\n\r\n            if (helpList.postEventCmd) {\r\n                this.postEventCmd = (e) => {\r\n                    let selectItem = deepCopy(e);\r\n                    selectItem['hostRef'] = this.hostRef;\r\n                    return helpList.postEventCmd(selectItem);\r\n                };\r\n            }\r\n\r\n\r\n            this.singleSelect = helpList.singleSelect;\r\n            this.enableFullTree = helpList.enableFullTree;\r\n            this.loadTreeDataType = helpList.loadTreeDataType;\r\n            this.expandLevel = helpList.expandLevel;\r\n            this.enableCascade = helpList.enableCascade;\r\n            this.helpId = helpList.helpId;\r\n            const helpValue = (this.item.value as HelpValue);\r\n            // if (helpValue && helpValue.value) {\r\n            //     // this.textValue = (this.item.value as HelpValue).value[this.textField];\r\n            //     this.textValue = HelpValue.getPropValue(helpValue.value, this.textField.split('.'));\r\n            // }\r\n            this.displayType = helpList.displayType;\r\n            if (helpValue.textValue == 'help-text-value-null') {// æ§æ°æ®å¼å®¹\r\n                this.textValue = helpValue.getTextValue(this.textField);\r\n            } else {\r\n                this.textValue = helpValue.textValue;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    // getConditionItemStyle(field: QueryCondition, controlType: any) {\r\n    //     return this.solutionService.getConditionItemStyle(field,controlType);\r\n    // }\r\n\r\n    getConditionItemTitle(field: QueryCondition) {\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n\r\n    onSearch = () => {\r\n        if (this.disabled) { return; }\r\n        this.searchHandle.emit();\r\n        return of(true);\r\n    }\r\n\r\n    // clearData(event){\r\n    //     (this.item.value as HelpValue).value = null;\r\n    //     (this.item.value as HelpValue).valueField = null;\r\n    //     this.searchHandle.emit();\r\n    // }\r\n\r\n    clearData(data: any) {\r\n        (this.item.value as HelpValue).clearValue();\r\n        this.searchHandle.emit();\r\n    }\r\n\r\n}\r\n","import { Component, Input, OnInit, OnChanges, HostBinding, Output, EventEmitter} from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { SolutionService } from '../../service/solution.service';\r\nimport { DateValue } from '../../entity/conditionvalue/datevalue';\r\n\r\n@Component({\r\n    selector: 'app-filter-date',\r\n    templateUrl: './date.component.html'\r\n})\r\n\r\nexport class DateComponent implements OnInit,OnChanges{\r\n\r\n    /**\r\n     * QueryConditionç±»å\r\n     */\r\n    @Input() item:any;\r\n    @Input() autoLabel:boolean;\r\n    @Input() disabled:boolean;\r\n    @Input() showType:string;\r\n    @Output('searchHandle') searchHandle = new EventEmitter();\r\n\r\n    // time:Date;\r\n    date: string;\r\n    /**å¤æ­æ¯å¦æ¯å¨æ©å±åºåå±ç¤º */\r\n    extend:boolean = false;\r\n    /**å¤æ­æ¯å¦æ¾ç¤ºlabel */\r\n    showlabel:boolean = true;\r\n    placeholder: string;\r\n    dateFormat:string;\r\n\r\n    @HostBinding('class.filter-item-wrap')\r\n    get isExtend(): boolean {\r\n        return !this.extend && this.autoLabel;\r\n    }\r\n    @HostBinding('class.filter-item-hiddenlabel')\r\n    get hidenLabel(): boolean {\r\n        return !this.showlabel;\r\n    }\r\n\r\n    constructor(private solutionService:SolutionService){}\r\n\r\n    ngOnInit(): void {\r\n        this.initDate();\r\n        if(this.item){\r\n            this.placeholder = this.item.placeHolder || '';\r\n            // const type = Object.prototype.toString.call(this.item.placeHolder);\r\n            // if(type == '[object Undefined]'){\r\n            //     if(this.item.control && this.item.control.hasOwnProperty('placeholder')){\r\n            //         this.placeholder = this.item.control.placeholder;\r\n            //     }\r\n            // }\r\n            // else{\r\n            //     this.placeholder = this.item.placeHolder;\r\n            // }\r\n        }\r\n        if(this.item && this.item.control && this.item.control.hasOwnProperty('isExtend')){\r\n            this.extend = this.item.control.isExtend;\r\n            if(!this.extend){\r\n                this.showlabel = this.item.control.showLabel;\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnChanges(): void {\r\n        this.initDate();\r\n    }\r\n\r\n    initDate(){\r\n        // if(this.item && this.item.value.value){\r\n        //     //this.time = this.getDate((this.item.value as DateValue).value);\r\n        //     this.time = (this.item.value as DateValue).value;\r\n        // }\r\n\r\n        if(this.item&&this.item.value\r\n        &&(this.item.value as DateValue).value){\r\n            this.date = this.item.value.getOriginalValue();\r\n        }else{\r\n            this.date = undefined;\r\n        }\r\n\r\n        const format = this.showType == '2'? 'yyyy-MM': (this.showType == '3'? 'yyyy':'yyyy-MM-dd');\r\n        this.dateFormat = this.item.control.format?this.item.control.format: format;\r\n\r\n    }\r\n\r\n    // getDate(dateString:string):Date{\r\n    //     let arr1:Array<any> = dateString.split(\" \"); \r\n    //     let sdate = arr1[0].split('-'); \r\n    //     let date = new Date(sdate[0], sdate[1]-1, sdate[2]); \r\n    //     return date;\r\n    // }\r\n   \r\n    onDateChange(event:any){\r\n        // console.log(event);\r\n        if(event.returnFormatted){\r\n            (this.item.value as DateValue).value = event.returnFormatted;\r\n        }else{\r\n            (this.item.value as DateValue).value = '';\r\n            // this.item.value = new DateValue();\r\n        }\r\n        this.item.valueText = event.formatted;\r\n        if(this.disabled){return;}\r\n        this.searchHandle.emit(event);\r\n    }\r\n\r\n    // getConditionItemStyle(field: QueryCondition, controlType: any) {\r\n    //     return this.solutionService.getConditionItemStyle(field,controlType);\r\n    // }\r\n\r\n    getConditionItemTitle(field:QueryCondition){\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n}","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { QueryCondition } from './entity/querycondition';\r\nimport { ControlType } from './entity/controltype';\r\n\r\n@Pipe({name: 'controlType'})\r\nexport class ControlTypeXPipe implements PipeTransform {\r\n    transform(value: QueryCondition): Array<any> {\r\n        let type;\r\n        switch(value.control.getControlType()){\r\n            case ControlType.Text:\r\n                type = 'input';\r\n                break;\r\n            case ControlType.Search:\r\n                type = 'search';\r\n                break;\r\n            case ControlType.Date:\r\n                type = 'date';\r\n                break;\r\n            case ControlType.Year:\r\n                type = 'year';\r\n                break;\r\n            case ControlType.Month:\r\n                type = 'month';\r\n                break;\r\n            case ControlType.MonthRange:\r\n                type = 'monthrange';\r\n                break;\r\n            case ControlType.YearRange:\r\n                type = 'yearrange';\r\n                break;\r\n            case ControlType.DateRange:\r\n                type = 'daterange';\r\n                break;\r\n            case ControlType.DateRangeTime:\r\n                type = 'daterangetime';\r\n                break;\r\n            case ControlType.DropDown:\r\n                type = 'dropdown';\r\n                break;\r\n            case ControlType.NumberRange:\r\n                type = 'number';\r\n                break;\r\n            case ControlType.Help:\r\n                type = 'help';\r\n                break;\r\n            case ControlType.CheckboxGroup:\r\n                type = 'checkboxgroup';\r\n                break; \r\n            case ControlType.Radio:\r\n                type = 'radio';\r\n                break;\r\n            case ControlType.InputGroup:\r\n                type = 'input-group';\r\n                break;\r\n            case ControlType.Number:\r\n                type = 'singlenumber';\r\n                break;\r\n            case ControlType.FlexibleNumber:\r\n                type = 'flexiblenumber';\r\n                break;\r\n            case ControlType.FlexibleDate:\r\n                type = 'flexibledate';\r\n                break;\r\n            case ControlType.BoolCheck:\r\n                type = 'bool-check';\r\n                break;\r\n            default:\r\n                type = 'input';\r\n                break;     \r\n        }\r\n        return type;\r\n    }\r\n}\r\n","import { RadioIEnumValue } from \"./ienumvalue\";\r\n\r\n/**\r\n * checboxgroupç±»å\r\n */\r\nexport class RadioValue implements RadioIEnumValue{\r\n\r\n    getEnumValueName():string{\r\n        return this.name;\r\n    }\r\n\r\n    getEnumValue():any{\r\n        return this.value;\r\n    }\r\n    \r\n    /**\r\n     * ææ¬æ¾ç¤º\r\n     */\r\n    name:string;\r\n\r\n    /**\r\n     * å¼æ¾ç¤º\r\n     */\r\n    value:string;\r\n}","import { Component, Input, OnInit, OnChanges, ViewEncapsulation, HostBinding, EventEmitter, Output} from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { ControlType } from '../../entity/controltype';\r\nimport { SolutionService } from '../../service/solution.service';\r\nimport { RadioGroupValue } from '../../entity/conditionvalue/radiovalue';\r\nimport { RadioValue } from '../../entity/controltype/radio/radiovalue';\r\nimport { RadioControl } from '../../entity/controltype/radio/radiocontrol';\r\n\r\n@Component({\r\n    selector: 'app-filter-radio',\r\n    templateUrl: './radio.component.html'\r\n    // encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class filterRadioComponent implements OnInit,OnChanges{\r\n   \r\n    /**\r\n     * QueryConditionç±»å\r\n     */\r\n    @Input() item:any;\r\n    @Input() autoLabel:boolean;\r\n    @Input() disabled:boolean;\r\n    @Output('searchHandle') searchHandle = new EventEmitter();\r\n    /**å¤æ­æ¯å¦æ¯å¨æ©å±åºåå±ç¤º */\r\n    extend:boolean = false;\r\n    /**å¤æ­æ¯å¦æ¾ç¤ºlabel */\r\n    showlabel:boolean = true;\r\n    radioValue: any[];\r\n\r\n    selectCheck = [];\r\n\r\n    @HostBinding('class.filter-item-wrap')\r\n    get isExtend(): boolean {\r\n        return !this.extend && this.autoLabel;\r\n    }\r\n\r\n    @HostBinding('class.filter-item-checbox-wrap')\r\n    get isCheckExtend(): boolean {\r\n        return !this.extend;\r\n    }\r\n\r\n    @HostBinding('class.filter-item-checkboxgroup') cla = true;\r\n    @HostBinding('class.filter-item-hiddenlabel')\r\n    get hidenLabel(): boolean {\r\n        return !this.showlabel;\r\n    }\r\n\r\n    radioDataSource:Array<any>=new Array<any>();\r\n\r\n    constructor(private solutionService:SolutionService){}\r\n\r\n    ngOnInit(): void {\r\n        this.getDataSource();\r\n        this.radioValue = this.item.value.getOriginalValue();\r\n        if(this.item && this.item.control && this.item.control.hasOwnProperty('isExtend')){\r\n            this.extend = this.item.control.isExtend;\r\n            if(!this.extend){\r\n                this.showlabel = this.item.control.showLabel;\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnChanges(): void {\r\n        this.getDataSource();\r\n    }\r\n\r\n    getDataSource(){\r\n        if(this.item && this.item.control && this.item.control.getControlType()==ControlType.Radio){\r\n            let radioboxList=(this.item.control as RadioControl);\r\n            this.radioDataSource = Array<RadioValue>();\r\n\r\n            if(radioboxList.enumValues && radioboxList.enumValues.length>0){\r\n                radioboxList.enumValues.forEach(element => {\r\n                    this.radioDataSource.push(Object.assign(new RadioValue(),element));\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    getConditionItemTitle(field:QueryCondition){\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n\r\n    onSearch(event){\r\n        if(event){\r\n            this.item.value.value = event;\r\n        }\r\n        else{\r\n            this.item.value.value = new RadioGroupValue();\r\n        }\r\n        if(this.disabled){return;}\r\n        this.searchHandle.emit();\r\n    }\r\n}","import { Component, Input, OnInit, OnChanges, EventEmitter, Output, HostBinding} from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { SolutionService } from '../../service/solution.service';\r\nimport { InputGroupControl } from '../../entity/controltype/input-group/inputgroupcontrol';\r\nimport { InputGroupValue } from '../../entity/conditionvalue/inputgroup';\r\n\r\n\r\n@Component({\r\n    selector: 'app-filter-inputgroup',\r\n    templateUrl: './inputgroup.component.html',\r\n})\r\n\r\nexport class SimpleInputGroupComponent implements OnInit{\r\n    /**\r\n     * QueryConditionç±»å\r\n     */\r\n    _item: QueryCondition;\r\n\r\n    testId: string;\r\n\r\n    usageMode: string;\r\n\r\n    dialogOptions: any;\r\n\r\n    @Input()\r\n    set item(textItem: any) {\r\n        this._item = textItem;\r\n    }\r\n    get item(): any{\r\n        return this.constructTextItem(this._item);\r\n    }\r\n    @Input() autoLabel:boolean;\r\n    @Input() disabled:boolean;\r\n\r\n    /**å¤æ­æ¯å¦æ¯å¨æ©å±åºåå±ç¤º */\r\n    extend:boolean = false;\r\n    /**å¤æ­æ¯å¦æ¾ç¤ºlabel */\r\n    showlabel:boolean = true;\r\n    \r\n    @HostBinding('class.filter-item-wrap')\r\n    get isExtend(): boolean {\r\n        return !this.extend && this.autoLabel;\r\n    }\r\n    @HostBinding('class.filter-item-hiddenlabel')\r\n    get hidenLabel(): boolean {\r\n        return !this.showlabel;\r\n    }\r\n\r\n    @Output('searchHandle') searchHandle = new EventEmitter();\r\n\r\n    textField: string;\r\n    isTextFromDialog: boolean = false;\r\n    textFormDialog: string;\r\n\r\n    constructTextItem(textItem: QueryCondition): QueryCondition {\r\n        const textValueObj = textItem.value as InputGroupValue;\r\n        textValueObj.textValue = textValueObj.textValue && textValueObj.textValue.trim();\r\n        textItem.value = textValueObj;\r\n        return textItem;\r\n    }\r\n\r\n    constructor(private solutionService:SolutionService){}\r\n\r\n    ngOnInit(): void {\r\n        this.testId = this.solutionService.getGuid();\r\n        this.getInputGroupBindingInfo();\r\n\r\n        if(this.item && this.item.control && this.item.control.hasOwnProperty('isExtend')){\r\n            this.extend = this.item.control.isExtend;\r\n            if(!this.extend){\r\n                this.showlabel = this.item.control.showLabel;\r\n            }\r\n        }\r\n    }\r\n\r\n    getInputGroupBindingInfo() {\r\n        const inputGroupControl = (this.item.control as InputGroupControl);\r\n        this.usageMode = inputGroupControl.usageMode;\r\n        if(this.usageMode == 'open-modal' || this.usageMode == 'open-remote-modal') {\r\n            this.dialogOptions = inputGroupControl.dialogOptions;\r\n            /*\r\n                example of dialogOptions = {\r\n                   modalId: \"1e011720-eb0f-4c9c-82b6-6844c89b2303\"\r\n                   mapFields: {hDepartment: \"Name\"}\r\n                   title: \"æµè¯æ é¢æ \"\r\n                   width: 800\r\n                   height: 600\r\n                }\r\n             */\r\n            if(this.dialogOptions.mapFields){\r\n                this.textField = JSON.stringify(this.dialogOptions.mapFields).split('\"')[1];\r\n            }\r\n        }\r\n    }\r\n\r\n    getConditionItemTitle(field:QueryCondition){\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n    \r\n    /*\r\n        dialogOptions = {\r\n            modalId: \"ae011720-eb0f-4c9c-82b6-6844c89b2303\"\r\n            mapFields: {hDepartment: \"Name\"}\r\n            title: \"æµè¯æ é¢æ \"\r\n            width: 800\r\n            height: 600\r\n            showButtons: true\r\n            buttons: [\r\n                { text: \"ç¡®å®\", cls: \"btn-primary\", handle: _this.viewModel.rootviewmodelconfirm1 },\r\n                { text: \"åæ¶\", cls: \"btn-secondary\", handle: _this.viewModel.rootviewmodelcancel1}\r\n            ]\r\n        }\r\n    */\r\n   onClick(event: any){\r\n        if(this.usageMode == 'text'){\r\n            this.item.control.click();\r\n        }\r\n        else{\r\n            const options = this.dialogOptions;\r\n            options.handle = (selectedItem) => {\r\n                // let modalData = item[0];\r\n                // this.item.value.value = modalData[this.targetField];\r\n                let selectedItems = selectedItem.filter(n => n);\r\n                if(selectedItems && this.textField){\r\n                    this.item.value.value = selectedItems;\r\n                    this.item.value.textValue = this.item.value.getTextValue(this.textField);\r\n                    this.item.value.textField = this.textField;\r\n                    this.item.value.isInputText = false;\r\n\r\n                    this.isTextFromDialog = true;\r\n                    this.textFormDialog = this.item.value.textValue;\r\n                }\r\n            }\r\n            this.item.control.click({event, options});\r\n        }\r\n    }\r\n\r\n    onBlur(event){\r\n        if(this.disabled){return;}\r\n        if(this.usageMode == 'text') {\r\n            this.item.value.isInputText = true;\r\n        }\r\n        if(this.usageMode == 'open-modal' || this.usageMode == 'open-remote-modal') {\r\n            if(!this.isTextFromDialog) {\r\n                this.item.value.isInputText = true;\r\n            }\r\n            if(this.item.value.textValue != this.textFormDialog){\r\n                this.isTextFromDialog = false;\r\n                this.item.value.value = [];\r\n                this.item.value.textField = undefined;\r\n                this.item.value.isInputText = true;\r\n            }\r\n        }\r\n        this.searchHandle.emit(event);\r\n    }\r\n\r\n    onClear() {\r\n        (this.item.value as InputGroupValue).clearValue();\r\n        this.searchHandle.emit();\r\n    }\r\n}","import { Component, Input, OnInit, HostBinding, EventEmitter, Output, ElementRef} from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { SolutionService } from '../../service/solution.service';\r\n\r\n\r\n@Component({\r\n    selector: 'app-filter-single-number',\r\n    templateUrl: './number.component.html'\r\n})\r\n\r\nexport class SingleNumberComponent implements OnInit{\r\n   \r\n    // @Input() item:any;\r\n    @Input() autoLabel:boolean;\r\n    @Input() disabled:boolean;\r\n    @Output('searchHandle') searchHandle = new EventEmitter();\r\n\r\n    /**å¤æ­æ¯å¦æ¯å¨æ©å±åºåå±ç¤º */\r\n    extend:boolean = false;\r\n    /**å¤æ­æ¯å¦æ¾ç¤ºlabel */\r\n    showlabel:boolean = true;\r\n    canNull:boolean = true;\r\n\r\n    number:string;\r\n    precision: number;\r\n    placeholder: string;\r\n    bigNumber:boolean;\r\n    max:number;\r\n    min:number;\r\n\r\n    @HostBinding('class.filter-item-wrap')\r\n    get isExtend(): boolean {\r\n        return !this.extend && this.autoLabel;\r\n    }\r\n    @HostBinding('class.filter-item-hiddenlabel')\r\n    get hidenLabel(): boolean {\r\n        return !this.showlabel;\r\n    }\r\n\r\n    _item: any;\r\n    numberRange: string;\r\n    @Input() \r\n    set item(nr: any){\r\n        this._item = nr;\r\n        this.precision = nr.control.precision;\r\n        this.bigNumber = nr.control.bigNumber;\r\n        if(this._item && this._item.control && this._item.control.hasOwnProperty('isExtend')){\r\n            this.extend = this._item.control.isExtend;\r\n            if(!this.extend){\r\n                this.showlabel = this._item.control.showLabel;\r\n            }\r\n        }\r\n        if(!this.bigNumber){\r\n            this.min = -2147483648;\r\n            this.max = 2147483647;\r\n        }\r\n    }\r\n\r\n    get item(){\r\n        return this._item;\r\n    }\r\n\r\n    constructor(private solutionService:SolutionService,private readonly element: ElementRef){}\r\n\r\n    ngOnInit(): void {\r\n        if(this.item){\r\n            this.placeholder = this.item.placeHolder;\r\n            // const type = Object.prototype.toString.call(this.item.placeHolder);\r\n            // if(type == '[object Undefined]'){\r\n            //     if(this.item.control && this.item.control.hasOwnProperty('placeholder')){\r\n            //         this.placeholder = this.item.control.placeholder;\r\n            //     }\r\n            // }\r\n            // else{\r\n            //     this.placeholder = this.item.placeHolder;\r\n            // }\r\n        }\r\n    }\r\n\r\n    getConditionItemTitle(field:QueryCondition){\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n\r\n    numberChange(event){\r\n        this.item.value.value = event;\r\n        if(this.disabled){return;}\r\n        this.searchHandle.emit();\r\n    }\r\n}","import { Component, Input, OnInit, HostBinding, EventEmitter, Output, AfterViewInit, ElementRef } from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { SolutionService } from '../../service/solution.service';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { FlexibleNumberValue } from '../../entity/conditionvalue/flexiblenumbervalue';\r\n\r\n\r\n@Component({\r\n    selector: 'app-filter-flexiblenumber',\r\n    templateUrl: './flexiblenumber.component.html'\r\n})\r\n\r\nexport class FlexibleNumberComponent implements OnInit, AfterViewInit {\r\n\r\n    // @Input() item:any;\r\n    @Input() autoLabel: boolean;\r\n    @Input() disabled: boolean;\r\n    @Output('searchHandle') searchHandle = new EventEmitter();\r\n\r\n    /**å¤æ­æ¯å¦æ¯å¨æ©å±åºåå±ç¤º */\r\n    extend: boolean = false;\r\n    /**å¤æ­æ¯å¦æ¾ç¤ºlabel */\r\n    showlabel: boolean = true;\r\n    canNull: boolean = true;\r\n\r\n    number: string;\r\n    value: any;\r\n    beginValue: any;\r\n    endValue: any;\r\n    precision: number;\r\n    placeholder: string;\r\n    beginPlaceHolder: string;\r\n    endPlaceHolder: string;\r\n    bigNumber: boolean;\r\n    max: number;\r\n    min: number;\r\n    single: boolean;\r\n\r\n    @HostBinding('class.filter-item-wrap')\r\n    get isExtend(): boolean {\r\n        return !this.extend && this.autoLabel;\r\n    }\r\n    @HostBinding('class.filter-item-hiddenlabel')\r\n    get hidenLabel(): boolean {\r\n        return !this.showlabel;\r\n    }\r\n\r\n    _item: any;\r\n    @Input()\r\n    set item(nr: any) {\r\n        this._item = nr;\r\n        this.precision = nr.control.precision;\r\n        this.bigNumber = nr.control.bigNumber;\r\n        if (!this.bigNumber) {\r\n            this.min = -2147483648;\r\n            this.max = 2147483647;\r\n        }\r\n        if (this._item && this._item.control && this._item.control.hasOwnProperty('isExtend')) {\r\n            this.extend = this._item.control.isExtend;\r\n            if (!this.extend) {\r\n                this.showlabel = this._item.control.showLabel;\r\n            }\r\n        }\r\n        this.beginPlaceHolder = (this._item.hasOwnProperty('beginPlaceHolder') && this._item.beginPlaceHolder) ? this._item.beginPlaceHolder : this.localeService.getValue('filterPanel.beginPlaceHolder');\r\n        this.endPlaceHolder = (this._item.hasOwnProperty('endPlaceHolder') && this._item.beginPlaceHolder) ? this._item.endPlaceHolder : this.localeService.getValue('filterPanel.endPlaceHolder');\r\n        this.placeholder = (this._item.hasOwnProperty('placeHolder') && this._item.placeHolder) ? this._item.placeHolder : '';\r\n        this.single = this._item.control.single;\r\n        this._item.value.single = this.single;\r\n        this.constructMultiFieldNumberRange(nr.value as FlexibleNumberValue);\r\n    }\r\n\r\n    get item() {\r\n        return this._item;\r\n    }\r\n\r\n    constructor(private solutionService: SolutionService, private readonly element: ElementRef, private localeService: LocaleService) { }\r\n\r\n    ngOnInit(): void { }\r\n\r\n    ngAfterViewInit() { }\r\n\r\n    getConditionItemTitle(field: QueryCondition) {\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n\r\n    constructMultiFieldNumberRange(value: FlexibleNumberValue) {\r\n        if (this.single) {\r\n            this.value = value.value == null ? null : value.value;\r\n        }\r\n        else {\r\n            this.beginValue = value.startValue == null ? null : value.startValue;\r\n            this.endValue = value.endValue == null ? null : value.endValue;\r\n        }\r\n    }\r\n\r\n    numberChange(event) {\r\n        if (event) {\r\n            this._item.value.value = event;\r\n        }\r\n        else {\r\n            this._item.value.value = null;\r\n        }\r\n        if (Object.keys(this._item.value).length === 0) {\r\n            this._item.valueText = ''\r\n        }\r\n        else {\r\n            this._item.valueText = '' + this._item.value.value;\r\n        }\r\n        if(this.disabled){return;}\r\n        this.searchHandle.emit();\r\n    }\r\n\r\n    beginValueChange(event) {\r\n        this._item.value.startValue = event;\r\n        this.setValueText();\r\n        if(this.disabled){return;}\r\n        this.searchHandle.emit();\r\n    }\r\n\r\n    endValueChange(event) {\r\n        this._item.value.endValue = event;\r\n        this.setValueText();\r\n        if(this.disabled){return;}\r\n        this.searchHandle.emit();\r\n    }\r\n    setValueText() {\r\n        if (Object.keys(this._item.value).length === 0 || (this._item.value.startValue == null && this._item.value.endValue == null)) {\r\n            this._item.valueText = ''\r\n        }\r\n        else if (this._item.value.startValue == null) {\r\n            this._item.valueText = '~' + this._item.value.endValue;\r\n        }\r\n        else if (this._item.value.endValue == null) {\r\n            this._item.valueText = this._item.value.startValue + '~';\r\n        }\r\n        else {\r\n            this._item.valueText = this._item.value.startValue + '~' + this._item.value.endValue;\r\n        }\r\n    }\r\n}","import { Component, Input, OnInit, EventEmitter, Output, HostBinding} from '@angular/core';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { SolutionService } from '../../service/solution.service';\r\n\r\n@Component({\r\n    selector: 'app-filter-flexibledate',\r\n    templateUrl: './flexibledate.component.html'\r\n})\r\n\r\nexport class FlexibleDateComponent implements OnInit{\r\n   \r\n    @Input() autoLabel: boolean;\r\n    @Input() disabled: boolean;\r\n    @Output('searchHandle') searchHandle = new EventEmitter();\r\n\r\n    /**å¤æ­æ¯å¦æ¯å¨æ©å±åºåå±ç¤º */\r\n    extend: boolean = false;\r\n    /**å¤æ­æ¯å¦æ¾ç¤ºlabel */\r\n    showlabel: boolean = true;\r\n\r\n    placeholder: string;\r\n    beginPlaceHolder:string;\r\n    endPlaceHolder:string;\r\n    single:boolean;//æ¯å¦ä¸ºåæ¥æ\r\n    showTime: boolean;//æ¯å¦æ¾ç¤ºæ¶é´\r\n    showType:string;//æ¾ç¤ºç±»å\r\n    dateFormat: string;//æ ¼å¼\r\n    value: Date;\r\n    startValue: Date;\r\n    endValue: Date;\r\n\r\n    @HostBinding('class.filter-item-wrap')\r\n    get isExtend(): boolean {\r\n        return !this.extend && this.autoLabel;\r\n    }\r\n    @HostBinding('class.filter-item-hiddenlabel')\r\n    get hidenLabel(): boolean {\r\n        return !this.showlabel;\r\n    }\r\n\r\n    _item: any;\r\n    @Input() \r\n    set item(nr: any){\r\n        this._item = nr;\r\n        if(this._item){\r\n            if(!this._item.hasOwnProperty('value')) {\r\n                this._item.value = {\r\n                    startValue : null,\r\n                    endValue : null,\r\n                    value: null,\r\n                    single:true\r\n                }\r\n            }\r\n            if(!this._item.control.hasOwnProperty('single')) {\r\n                this._item.control.single = true;\r\n            }\r\n            this.beginPlaceHolder = (this._item.hasOwnProperty('beginPlaceHolder') && this._item.beginPlaceHolder) ? this._item.beginPlaceHolder: this.localeService.getValue('filterPanel.dateBeginPlaceHolder');\r\n            this.endPlaceHolder = (this._item.hasOwnProperty('endPlaceHolder') && this._item.beginPlaceHolder) ? this._item.endPlaceHolder: this.localeService.getValue('filterPanel.dateEndPlaceHolder');\r\n            this.placeholder = (this._item.hasOwnProperty('placeHolder') && this._item.placeHolder) ? this._item.placeHolder:'';\r\n            this.single = this._item.control.single;\r\n            this._item.value.single = this.single;\r\n            this.showTime = (this._item.control.hasOwnProperty('showTime') && this._item.control.showTime) ? this._item.control.showTime:'';\r\n            this.showType = (this._item.control.hasOwnProperty('showType') && this._item.control.showType) ? this._item.control.showType:'';\r\n            let itemDateFormat = this._item.control.format;\r\n            if(this.showTime && itemDateFormat){\r\n                if(itemDateFormat.length > 0 && itemDateFormat.indexOf('HH:mm') == -1){\r\n                    itemDateFormat = itemDateFormat + ' HH:mm:ss';\r\n                }\r\n            }\r\n            const format = this.showTime ? 'yyyy-MM-dd HH:mm:ss': (this.showType == '2'? 'yyyy-MM': (this.showType == '3'? 'yyyy':'yyyy-MM-dd'));\r\n            this.dateFormat = itemDateFormat?itemDateFormat:format;\r\n        }\r\n        this.constructMultiFieldDateRange(nr.value);\r\n    }\r\n    get item(){\r\n        return this._item;\r\n    }\r\n    constructor(private localeService: LocaleService,private solutionService: SolutionService){}\r\n\r\n    ngOnInit(): void {}\r\n    getConditionItemTitle(field: QueryCondition) {\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n    constructMultiFieldDateRange(value) {\r\n        if(this.single){\r\n            this.value = value.value == null ? null : value.value;\r\n        }\r\n        else{\r\n            this.startValue = value.startValue == null ? null : value.startValue;\r\n            this.endValue = value.endValue == null ? null : value.endValue;\r\n        }\r\n    }\r\n\r\n    onDateChange(event:any){\r\n        this._item.value.value = event.returnFormatted ? event.returnFormatted :null;\r\n        this._item.valueText = event.formatted;\r\n        if(this.disabled){return;}\r\n        this.searchHandle.emit();\r\n    }\r\n\r\n    beginValueChange(event) {\r\n        this._item.value.startValue = event.returnFormatted ? event.returnFormatted : null;\r\n        this._item.value.startValueText = event.formatted;\r\n        this.setValueText();\r\n        if(this.disabled){return;}\r\n        this.searchHandle.emit();\r\n    }\r\n\r\n    endValueChange(event) {\r\n        this._item.value.endValue = event.returnFormatted ? event.returnFormatted : null;\r\n        this._item.value.endValueText = event.formatted;\r\n        this.setValueText();\r\n        if(this.disabled){return;}\r\n        this.searchHandle.emit();\r\n    }\r\n\r\n    setValueText(){\r\n        if (Object.keys(this._item.value).length === 0 || (!this._item.value.startValue && !this._item.value.endValue)) {\r\n            this._item.valueText = ''\r\n        }\r\n        else if(!this._item.value.startValueText){\r\n            this._item.valueText = '~' + this._item.value.endValueText;\r\n        }\r\n        else if(!this._item.value.endValueText){\r\n            this._item.valueText = this._item.value.startValueText + '~';\r\n        }\r\n        else{\r\n            this._item.valueText = this._item.value.startValueText + '~' + this._item.value.endValueText;\r\n        }\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { FilterComponent } from './filter.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { FarrisSidebarModule } from '@farris/ui-sidebar';\r\nimport { FarrisTooltipModule } from '@farris/ui-tooltip';\r\nimport { InputGroupModule } from '@farris/ui-input-group';\r\nimport { FarrisDatePickerModule } from '@farris/ui-datepicker';\r\nimport { DatalistModule } from '@farris/ui-datalist';\r\nimport { ComboListModule } from '@farris/ui-combo-list';\r\nimport { LookupModule } from '@farris/ui-lookup';\r\nimport { FarrisFormsModule } from '@farris/ui-forms';\r\nimport { NumberSpinnerModule } from '@farris/ui-number-spinner';\r\nimport { PerfectScrollbarModule } from '@farris/ui-perfect-scrollbar';\r\nimport { LocaleModule } from '@farris/ui-locale';\r\nimport { FarrisCommonModule } from '@farris/ui-common';\r\n\r\nimport { FilterPanelModule } from '@farris/ui-filter-panel';\r\nimport { FilterConditionModule, QuerySolutionService } from '@farris/ui-filter-condition';\r\n\r\nimport { ConvertorService } from './service/convertorservice';\r\nimport { InputComponent } from './components/inputcomponent/input.component';\r\nimport { NumberComponent } from './components/numbercomponent/number.component';\r\nimport { DropDownComponent } from './components/dropdowncomponent/dropdown.component';\r\nimport { SearchComponent } from './components/searchcomponent/search.component';\r\nimport { filterCheckboxComponent } from './components/checkboxcomponent/checkbox.component';\r\nimport { DateRangeComponent } from './components/daterangecomponent/daterange.component';\r\nimport { HelpComponent } from './components/helpcomponent.ts/help.component';\r\nimport { SolutionService } from './service/solution.service';\r\nimport { DateComponent } from './components/datecomponent/date.component';\r\nimport { ControlTypeXPipe } from './controlType.pipe';\r\nimport { filterRadioComponent } from './components/radiocomponent/radio.component';\r\n\r\n\r\nimport { FilterService } from './filter.service';\r\nimport { SimpleInputGroupComponent } from './components/inputgroupcomponent/inputgroup.component';\r\nimport { SingleNumberComponent } from './components/singlenumbercomponent/number.component';\r\nimport { FlexibleNumberComponent } from './components/flexiblecomponent/flexiblenumber.component';\r\nimport { FlexibleDateComponent } from './components/flexibledatecomponent/flexibledate.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    FilterComponent,\r\n    DateComponent,\r\n    NumberComponent,\r\n    HelpComponent,\r\n    InputComponent,\r\n    DropDownComponent,\r\n    SearchComponent,\r\n    filterCheckboxComponent,\r\n    DateRangeComponent,\r\n    filterRadioComponent,\r\n    SimpleInputGroupComponent,\r\n    SingleNumberComponent,\r\n    FlexibleNumberComponent,\r\n    FlexibleDateComponent,\r\n    ControlTypeXPipe\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    FilterPanelModule,\r\n    FarrisSidebarModule,\r\n    FarrisTooltipModule,\r\n    InputGroupModule,\r\n    FarrisDatePickerModule,\r\n    DatalistModule,\r\n    ComboListModule,\r\n    LookupModule,\r\n    FarrisFormsModule,\r\n    NumberSpinnerModule,\r\n    PerfectScrollbarModule,\r\n    FilterConditionModule,\r\n    LocaleModule.forRoot(),\r\n    FarrisCommonModule\r\n  ],\r\n  exports: [\r\n    FilterComponent,\r\n    DateComponent,\r\n    NumberComponent,\r\n    HelpComponent,\r\n    InputComponent,\r\n    DropDownComponent,\r\n    SearchComponent,\r\n    filterCheckboxComponent,\r\n    DateRangeComponent,\r\n    filterRadioComponent,\r\n    SimpleInputGroupComponent,\r\n    SingleNumberComponent,\r\n    FlexibleNumberComponent,\r\n    FlexibleDateComponent,\r\n    ControlTypeXPipe\r\n  ],\r\n  providers:[\r\n    FilterService,\r\n    ConvertorService,\r\n    SolutionService,\r\n    QuerySolutionService\r\n  ],\r\n})\r\nexport class SimpleFilterModule { }\r\n","import { ControlType } from \"../controltype\";\r\nimport { TextValue } from \"./textvalue\";\r\nimport { NumberRangeValueConvertor } from \"./numberrangevaue\";\r\nimport { DateRangeValue } from \"./daterangevalue\";\r\nimport { HelpValue } from \"./helpvalue\";\r\nimport { DropDownListValueConvert } from \"./dropdownlistvalue\";\r\nimport { IControl } from \"../controltype/icontrol\";\r\nexport interface IValue{\r\n    getControlType():ControlType;\r\n    getOriginalValue(): any;\r\n    setOriginalValue(value: any): void;\r\n    clearValue(): void;\r\n    isEmpty(): boolean;\r\n    getValueText(ctrl?: any):string;\r\n}\r\n\r\nexport class ConditionValueConvert{\r\n    convertToObject(obj:IValue):Object{\r\n        let conditionValue=obj as IValue;\r\n        let controlType=conditionValue.getControlType();\r\n        let jobj=new Object();\r\n        jobj[\"Type\"]=controlType;\r\n        if(controlType==ControlType.DropDown){\r\n            let convertor=new DropDownListValueConvert();\r\n            jobj[\"Content\"]=convertor.convertToObject(conditionValue);\r\n        }\r\n        else if(controlType==ControlType.NumberRange){\r\n            let convertor=new NumberRangeValueConvertor();\r\n            jobj[\"Content\"]=convertor.convertToObject(conditionValue);\r\n        }\r\n        else{\r\n            jobj[\"Content\"]=conditionValue;\r\n        }\r\n        return jobj;\r\n    }\r\n\r\n    initFromObject(jobj:Object):IValue{\r\n        let controlType=jobj[\"Type\"] as ControlType;\r\n        let content:IValue=jobj[\"Content\"];\r\n        if(controlType==ControlType.Text){\r\n            return Object.assign(new TextValue(),content as TextValue);\r\n        }\r\n        else if(controlType==ControlType.NumberRange){\r\n            let convertor=new NumberRangeValueConvertor();\r\n            return convertor.initFromObject(content);\r\n        }\r\n        else if(controlType==ControlType.DateRange){\r\n            return Object.assign(new DateRangeValue(),content as DateRangeValue);\r\n        }\r\n        else if(controlType==ControlType.DropDown){\r\n            let convertor=new DropDownListValueConvert();\r\n            return convertor.initFromObject(content);\r\n        }\r\n        else if(controlType==ControlType.Help){\r\n            return Object.assign(new HelpValue(),content as HelpValue);\r\n        }\r\n    }\r\n}","export interface RadioIEnumValue{\r\n    getEnumValueName():string;\r\n    getEnumValue():any;\r\n\r\n    /**\r\n     * å¼æ¾ç¤º\r\n     */\r\n    value:string;\r\n}\r\n\r\nexport class RadioEnumValue implements RadioIEnumValue{\r\n\r\n    getEnumValueName():string{\r\n        return this.name;\r\n    }\r\n\r\n    getEnumValue():any{\r\n        return this.value;\r\n    }\r\n    \r\n    /**\r\n     * ææ¬æ¾ç¤º\r\n     */\r\n    name:string;\r\n\r\n    /**\r\n     * å¼æ¾ç¤º\r\n     */\r\n    value:string;\r\n}","export enum DisplayType{\r\n    LIST=0,\r\n    TREELIST=1\r\n}","import { ControlType } from \"../controltype\";\r\nimport { DropDownControl, DropDownListControlConvert } from \"./dropdownlist/dropdowncontrol\";\r\nimport { TextControl } from \"./text/textcontrol\";\r\nimport { SearchControl } from './search/searchcontrol';\r\n\r\n\r\nimport { DateRangeControl } from \"./datarange/daterangecontrol\";\r\nimport { DateControl } from \"./date/datecontrol\";\r\nimport { HelpContol } from \"./help/helpcontrol\";\r\nimport { NumberRangeControl } from \"./numberrange/numberrangecontrol\";\r\nimport { CompareType } from '../comparetype';\r\n\r\n/**\r\n * æ§ä»¶æ¥å£\r\n */\r\nexport interface IControl{\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType():ControlType;\r\n    \r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n    /**æ¥æéè¦å¢å ç±»åæ¯è¾ */\r\n    compareType?:CompareType;\r\n    controltype?:string;\r\n    /**æ¯å¦æ¯åæ°å¼ */\r\n    single?:boolean;\r\n    boolcheck?:boolean;\r\n    /** åè®¸æ¸é¤ */\r\n    enableClear?: boolean;\r\n}\r\n\r\nexport class ControlConvert{\r\n    convertJObject(obj:IControl):Object{\r\n        let control=obj as IControl;\r\n        let controlType=control.getControlType();\r\n        let jobj=new Object();\r\n        jobj[\"Type\"]=controlType;\r\n        if(controlType!=ControlType.DropDown){\r\n            jobj[\"Content\"]=control;\r\n        }\r\n        else{\r\n            let convertor=new DropDownListControlConvert();\r\n            jobj[\"Content\"]=convertor.convertToObject(control as DropDownControl);\r\n        }\r\n        return jobj;\r\n    }\r\n\r\n    initFromJobject(jobj:Object):IControl{\r\n        let controlType=jobj[\"Type\"] as ControlType;\r\n        let content:IControl=jobj[\"Content\"];\r\n        if(controlType==ControlType.Text){\r\n            return Object.assign(new TextControl(),content as TextControl);\r\n        }\r\n        else if( controlType==ControlType.Search ){\r\n            return Object.assign(new SearchControl(),content as SearchControl);\r\n        }\r\n\r\n\r\n        else if(controlType==ControlType.DateRange){\r\n            return Object.assign(new DateRangeControl(),content as DateRangeControl);\r\n        }\r\n        else if(controlType==ControlType.NumberRange){\r\n            return Object.assign(new NumberRangeControl(),content as NumberRangeControl);\r\n        }\r\n        // else if(controlType==ControlType.DateTime){\r\n        //     return Object.assign(new DateControl(),content as DateControl);\r\n        // }\r\n        else if(controlType==ControlType.DropDown){\r\n            let convert=new DropDownListControlConvert();\r\n            return convert.initFromObject(content);\r\n        }\r\n        else if(controlType==ControlType.Help){\r\n            return Object.assign(new HelpContol(),content as HelpContol);\r\n        }\r\n    }\r\n}","import { FieldConfig } from './fieldconfig/fieldconfig';\r\n\r\nexport class listFilterItem{\r\n    id: string;\r\n    name: string;\r\n    width: Number; // è®°å½å®½åº¦\r\n    isExtend: boolean\r\n    constructor(_id: string, _groupName: string) {\r\n        this.id = _id;\r\n        this.name = _groupName;\r\n        this.width = 0;\r\n        this.isExtend = false;\r\n    }\r\n    // è®¾ç½®å®½åº¦\r\n    setWidth(value: string) {\r\n        this.width = parseInt(value, 10);\r\n    }\r\n    // è·åå®½åº¦\r\n    getWidth(): any {\r\n        return this.width;\r\n    }\r\n}\r\nexport class listFilterGroup {\r\n    listItems:Array<listFilterItem>;\r\n    responsedIndex:number = 0;\r\n    constructor(){\r\n        this.listItems = [];\r\n    }\r\n}\r\n\r\n// export class listFilterGroup {\r\n//     id: string;\r\n//     name: string;\r\n//     presetId: Array<string> = []; // è®°å½åç´ çId\r\n//     responsedIndex: Array<Number> = []; // è®°å½è½¬åä¸ºä¸ææ¶åç´ çä½ç½®\r\n//     width: number; // è®°å½å®½åº¦\r\n//     constructor(_id: string, _groupName: string) {\r\n//         this.id = _id;\r\n//         this.name = _groupName;\r\n//         this.width = 0;\r\n//     }\r\n//     // è®¾ç½®å®½åº¦\r\n//     setWidth(value: any) {\r\n//         this.width = parseInt(value + '', 10);\r\n//     }\r\n//     // è·åå®½åº¦\r\n//     getWidth(): any {\r\n//         return this.width;\r\n//     }\r\n//     // æ´æ°presetIndex\r\n//     setPreset(value: Array<string> | string) {\r\n//         if (Array.isArray(value)) {\r\n//             this.presetId = this.presetId.concat(value);\r\n//         } else {\r\n//             this.presetId.push(value);\r\n//         }\r\n//     }\r\n//     // æ¸é¤preset\r\n//     delPreset(){\r\n//         this.presetId=[];\r\n//     }\r\n//     // å é¤\r\n//     removeResponsed(index) {\r\n//         this.responsedIndex.splice(index, 1);\r\n//     }\r\n//     // æ´æ°responsedIndex\r\n//     setResponsed(value: Array<Number> | Number) {\r\n//         if (Array.isArray(value)) {\r\n//             this.responsedIndex = this.responsedIndex.concat(value);\r\n//         } else {\r\n//             this.responsedIndex.push(value);\r\n//         }\r\n//     }\r\n//     // æ¯å¦å·²ç»å¼å§å¤çååºå¼\r\n//     isResponsing() {\r\n//         return this.responsedIndex.length > 0;\r\n//     }\r\n//     // æ¯å¦å·²ç»å¤çå®ååºå¼\r\n//     isResponsed() {\r\n//         return this.presetId.length === this.responsedIndex.length;\r\n//     }\r\n// }\r\n"]}