{"version":3,"sources":["ng://@farris/ui-filter/lib/entity/controltype.ts","ng://@farris/ui-filter/lib/entity/conditionvalue/checkboxgroupvalue.ts","ng://@farris/ui-filter/lib/entity/conditionvalue/helpvalue.ts","ng://@farris/ui-filter/lib/entity/conditionvalue/textvalue.ts","ng://@farris/ui-filter/lib/entity/fieldconfig/fieldconfig.ts","ng://@farris/ui-filter/lib/entity/controltype/text/textcontrol.ts","ng://@farris/ui-filter/lib/entity/conditionvalue/searchvalue.ts","ng://@farris/ui-filter/lib/entity/conditionvalue/datevalue.ts","ng://@farris/ui-filter/lib/entity/conditionvalue/daterangevalue.ts","ng://@farris/ui-filter/lib/entity/conditionvalue/daterangetimevalue.ts","ng://@farris/ui-filter/lib/entity/controltype/dropdownlist/enumtype.ts","ng://@farris/ui-filter/lib/entity/controltype/dropdownlist/integerenumvalue.ts","ng://@farris/ui-filter/lib/entity/controltype/dropdownlist/stringenumvalue.ts","ng://@farris/ui-filter/lib/entity/controltype/dropdownlist/boolenumvalue.ts","ng://@farris/ui-filter/lib/entity/controltype/dropdownlist/ienumvalue.ts","ng://@farris/ui-filter/lib/entity/conditionvalue/dropdownlistvalue.ts","ng://@farris/ui-filter/lib/entity/conditionvalue/numberrangevaue.ts","ng://@farris/ui-filter/lib/entity/controltype/date/datecontrol.ts","ng://@farris/ui-filter/lib/entity/controltype/numberrange/numberrangecontrol.ts","ng://@farris/ui-filter/lib/entity/controltype/search/searchcontrol.ts","ng://@farris/ui-filter/lib/entity/controltype/dropdownlist/dropdowncontrol.ts","ng://@farris/ui-filter/lib/entity/controltype/help/helpcontrol.ts","ng://@farris/ui-filter/lib/entity/controltype/datarange/daterangecontrol.ts","ng://@farris/ui-filter/lib/entity/controltype/datarangetime/daterangetimecontrol.ts","ng://@farris/ui-filter/lib/entity/controltype/checkbox/checkboxcontrol.ts","ng://@farris/ui-filter/lib/entity/controltype/radio/radiocontrol.ts","ng://@farris/ui-filter/lib/entity/conditionvalue/radiovalue.ts","ng://@farris/ui-filter/lib/entity/conditionvalue/yearvalue.ts","ng://@farris/ui-filter/lib/entity/conditionvalue/month.ts","ng://@farris/ui-filter/lib/entity/conditionvalue/yearrange.ts","ng://@farris/ui-filter/lib/entity/conditionvalue/monthrange.ts","ng://@farris/ui-filter/lib/entity/controltype/year/yearcontrol.ts","ng://@farris/ui-filter/lib/entity/controltype/month/monthcontrol.ts","ng://@farris/ui-filter/lib/entity/controltype/yearrange/yearrangecontrol.ts","ng://@farris/ui-filter/lib/entity/controltype/monthrange/monthrangecontrol.ts","ng://@farris/ui-filter/lib/entity/controltype/input-group/inputgroupcontrol.ts","ng://@farris/ui-filter/lib/entity/conditionvalue/inputgroup.ts","ng://@farris/ui-filter/lib/entity/controltype/number/numbercontrol.ts","ng://@farris/ui-filter/lib/entity/conditionvalue/numbervalue.ts","ng://@farris/ui-filter/lib/entity/conditionvalue/flexiblenumbervalue.ts","ng://@farris/ui-filter/lib/entity/controltype/flexiblenumbercontrol.ts","ng://@farris/ui-filter/lib/entity/conditionvalue/flexibledatevalue.ts","ng://@farris/ui-filter/lib/entity/controltype/flexibledatecontrol.ts","ng://@farris/ui-filter/lib/filter.service.ts","node_modules/tslib/tslib.es6.js","ng://@farris/ui-filter/lib/entity/querycondition.ts","ng://@farris/ui-filter/lib/entity/comparetype.ts","ng://@farris/ui-filter/lib/entity/valuetype.ts","ng://@farris/ui-filter/lib/entity/relationtype.ts","ng://@farris/ui-filter/lib/entity/controltype/checkbox/ienumvalue.ts","ng://@farris/ui-filter/lib/service/convertorservice.ts","ng://@farris/ui-filter/lib/interface/filterHandler.ts","ng://@farris/ui-filter/lib/utils.ts","ng://@farris/ui-filter/lib/filter.component.ts","ng://@farris/ui-filter/lib/service/solution.service.ts","ng://@farris/ui-filter/lib/components/inputcomponent/input.component.ts","ng://@farris/ui-filter/lib/components/numbercomponent/number.component.ts","ng://@farris/ui-filter/lib/components/dropdowncomponent/dropdown.component.ts","ng://@farris/ui-filter/lib/components/searchcomponent/search.component.ts","ng://@farris/ui-filter/lib/entity/controltype/checkbox/checkboxvalue.ts","ng://@farris/ui-filter/lib/components/checkboxcomponent/checkbox.component.ts","ng://@farris/ui-filter/lib/components/daterangecomponent/daterange.component.ts","ng://@farris/ui-filter/lib/components/helpcomponent.ts/help.component.ts","ng://@farris/ui-filter/lib/components/datecomponent/date.component.ts","ng://@farris/ui-filter/lib/controlType.pipe.ts","ng://@farris/ui-filter/lib/entity/controltype/radio/radiovalue.ts","ng://@farris/ui-filter/lib/components/radiocomponent/radio.component.ts","ng://@farris/ui-filter/lib/components/inputgroupcomponent/inputgroup.component.ts","ng://@farris/ui-filter/lib/components/singlenumbercomponent/number.component.ts","ng://@farris/ui-filter/lib/components/flexiblecomponent/flexiblenumber.component.ts","ng://@farris/ui-filter/lib/components/flexibledatecomponent/flexibledate.component.ts","ng://@farris/ui-filter/lib/filter.module.ts","ng://@farris/ui-filter/lib/entity/conditionvalue/ivalue.ts","ng://@farris/ui-filter/lib/entity/controltype/radio/ienumvalue.ts","ng://@farris/ui-filter/lib/entity/controltype/help/displayType.ts","ng://@farris/ui-filter/lib/entity/controltype/icontrol.ts","ng://@farris/ui-filter/lib/entity/list-filter.model.ts"],"names":["Text","Help","DropDown","DateRange","NumberRange","Search","Date","CheckboxGroup","DateRangeTime","Radio","Year","Month","MonthRange","YearRange","InputGroup","Number","FlexibleNumber","FlexibleDate","BoolCheck","CheckboxGroupValue","prototype","clearValue","this","value","clear$","emit","setOriginalValue","getOriginalValue","getControlType","ControlType","isEmpty","length","getValueText","join","EventEmitter","HelpValue","getPropValue","helpItem","args","arg","shift","valueField","undefined","textValue","Error","args_1","split","valueArr","map","cloneDeep","getTextValue","textField","textArr","data","hasOwnProperty","TextValue","FieldConfig","TextControl","SearchValue","DateValue","formatted","ctrl","format","DateTimeHelperService","formatTo","DateRangeValue","startTime","delimiter","endTime","dateHlp","DateRangeTimeValue","IntType","StringType","BoolType","EnumIntegerValue","getEnumType","EnumType","getEnumValueName","name","getEnumValue","EnumStringValue","EnumBoolValue","EnumValueConvert","convertJObject","obj","enumValue","enumType","jobj","Object","initFromJobject","content","assign","DropDownListValue","DropDownListValueConvert","convertToObject","dropDownListValue","initFromObject","NumberRangeValue","startValue","endValue","begin","end","parseFloat","NumberRangeValueConvertor","numberRangeValue","DateControl","NumberRangeControl","SearchControl","DropDownControl","DropDownListControlConvert","dropDownListControl","valueType","enumValues","jarray_1","convertor_1","forEach","element","push","control","Array","convertor","HelpContol","DateRangeControl","DateRangeTimeControl","CheckboxGroupControl","boolcheck","RadioControl","RadioGroupValue","YearValue","MonthValue","YearRangeValue","MonthRangeValue","YearControl","MonthControl","YearRangeControl","MonthRangeControl","InputGroupControl","isRequired","required","DialogConfig","DialogButtonConfig","InputGroupValue","_this","item","isInputText","targetField","trim","NumberControl","NumberValue","FlexibleNumberValue","single","FlexibleNumberControl","FlexibleDateValue","FlexibleDateControl","FilterService","fieldSchemasConvert","filedSchemas","fieldConfigs","filedSchema","fieldConfig","id","labelCode","code","placeHolder","beginPlaceHolder","endPlaceHolder","fieldName","filled","controltype","getTextControl","getSearchControl","getDateControl","getYearControl","getMonthControl","getYearRangeControl","getMonthRangeControl","getDateRangeControl","getDateRangeTimeControl","getDropDownControl","getNumberRangeControl","getLookUpEditControl","getCheckboxGroupControl","getRadioControl","getInputGroupControl","getNumberControl","getFlexibleNumberControl","getFlexibleDateControl","valueText","textControl","placeholder","isExtend","showLabel","inputGroupControl","editable","groupText","usageMode","dialogOptions","setInputGroupDialog","modalConfig","click","dateControl","compareType","yearControl","monthControl","yearRangeControl","monthRangeControl","numberRangeControl","precision","bigNumber","numberControl","flexiblenumberControl","flexibledateControl","showType","showTime","searchControl","dropdowncontrol","lookupEdit","uri","idField","helpId","mapFields","context","preEventCmd","postEventCmd","enableFullTree","loadTreeDataType","singleSelect","expandLevel","enableCascade","displayType","checkboxGroupcontrol","dateRangeControl","modalConfigData","dialogConfig","modalId","JSON","parse","replace","showHeader","title","width","height","setInputGroupDialogButtons","buttonData","button","text","appearance","class","cls","handle","setValues","Injectable","providedIn","__assign","t","s","i","n","arguments","p","call","apply","QueryCondition","Equal","GreaterThan","GreaterThanOrEqual","LessThan","LessThanOrEqual","BetWeen","Value","SmartHelp","Enum","Express","And","Or","CheckboxEnumValue","ConvertorService","getFeildConfigs","selectedConditions","fieldsConfigs","condition","fieldCode","getSelectedFieldConditions","fileds","selectedFieldConditions","tempSelectedFieldConditions","arrayClone","filed","getDropListEnumValues","tempIndex","findIndex","x","getNewFieldConditions","enumValues_1","enumValues_2","enumValues_3","getCheckGroupEnumValues","selectedFieldCondition","ValueType","relationType","RelationType","getTextValueFieldCondition","getDateRangeValueFieldCondition","getDateRangeTimeValueFieldCondition","getDateValueFieldCondition","getNumberRangeValueFieldCondition","getSmartHelpValueFieldCondition","getDropDownValueFieldCondition","getSearchValueFieldCondition","getCheckboxGroupValueFieldCondition","getRadioValueFieldCondition","getInputGroupValueFieldCondition","getNumberValueFieldCondition","getFlexibleNumberValueFieldCondition","getFlexibleDateValueFieldCondition","CompareType","input","result","FILTER_HANDLER_TOKEN","InjectionToken","deepCopy","newobj","constructor","type","toString","defineProperty","FilterComponent","_filterList","filterList","initFilterList","_enableAutoWidth","filterEllipsis","filterExtendShow","_defaultValue","configs","_this_1","setTimeout","setFilterValue","ngOnInit","filterWrapperEl","filterListWrapper","nativeElement","bindRoEvent","foldText","localeService","getValue","expandText","filterExtendText","currentLocale","localeIds","isControlInline","ngOnDestroy","ro","unobserve","filterWrapper","ngzone","runOutsideAngular","ResizeObserver","entries","observer","tempWidth","contentRect","Math","abs","containerWidthRecord","distanceThreshold","enableAutoWidth","listEllipsisInit","observe","ngOnChanges","changes","ngAfterViewInit","listFilterConditions","filterDatas","filterService","convertorService","stagListFilterConditions","o","filterListClassify","showReminder","showFilterList","showReminderItem","filterlistItems","children","showRemItem","getAttribute","reminderLeft","offsetLeft","cd","detectChanges","extendFilterList","extendFilterListStore","filledFilterList","filledExtendFilterList","loopFilterList","extendRequiredList","showRequiredList","requiredList","filter","listitem","requiredListFilter","canSubmit","canSubmitFilter","field","filledFilter","list","showrequiredList","showCanSubmit","advancedCanSubmit","filterClick","event","index","stopPropagation","disabled","currentFilterId","panelItem","_a","currentTarget","getBoundingClientRect","left","top_1","top","right","filterPanelContainer","filterPanelService","showPanel","localStorageKey","hidePanel","subscribe","e","clearFilter","_this_2","submit","panelListIndex","searchChange","inSetCurrentFilterConditions","findItem","find","markForCheck","filterClear","resetListCondition","advancedFilter","extendFilterListTemporary","farrissidebar","isOpen","listCancel","floatPanelOpen","floatFilterOpen","filterListW","filterMainWidth","filterMain","offsetWidth","filterToolWidth","filterTool","filterExtend","filterItems","filterItemWidth","len","render","setStyle","filterResize","filterExpand","filterExtendIcon","expandFilter","packupFilter","onSearch","$event","conditions","instance","requirelist","formCanSubmit","tv","keys","shv","ddv","drv","mrv","yrv","nrv","sv","dv","mv","yv","cbgv","radiov","flexv","flexdatev","listSearch","farrisSearchRecord","farrisSearchRecordArray","storagelabelCode","filterPanelArray","localStorage","getItem","isArray","indexOf","unshift","slice","setItem","stringify","extendAmendedList","showExpandTag","extendListIndex","filterlist","filterItem","queryList","handler","setFilterConditions","query","listFilter","resetFilterValue","resetCondition","qc","controlType","v","c","filterHandler","setCurrentFilterConditions","listFilterCondition","resetSearch","resetChange","resetAdvancedSearch","value_1","texts","val","value_2","enums","value_3","Component","selector","template","encapsulation","ViewEncapsulation","None","providers","FilterPanelService","QuerySolutionService","ChangeDetectorRef","Renderer2","NgZone","LocaleService","Injector","decorators","Optional","Input","HostBinding","Output","ViewChild","injector","floatFilter","cla","sidebarOpen","en","zh-CHS","get","LOCALE_ID","InjectFlags","SolutionService","getGuid","s4","random","substring","getConditionItemTitle","InputComponent","extend","autoLabel","showlabel","solutionService","InputChanged","searchHandle","ElementRef","NumberComponent","_item","nr","min","max","constructMultiFieldNumberRange","beginValue","numberChange","dataArray","beginValueChange","endValueChange","canNull","DropDownComponent","getDataSource","initialValue","selectedItemId","dropDownList","dropDownListDataSource","onClear","SearchComponent","groupIcon","CheckboxValue","filterCheckboxComponent","checkValue","boolchecked","boolCheckState","checkboxList","checkboxDataSource","checkboxValue","handleClick","indeterminate","selectCheck","DateRangeComponent","initDate","itemDateFormat","dateFormat","rangeDateValue","rangeDate","getDate","dateString","onDateChange","returnFormatted","HelpComponent","getHelpBindingInfo","selectedDataHandler","selectedItem","helpValue","helpList_1","hostRef","selectItem","clearData","of","DateComponent","date","ControlTypeXPipe","transform","Pipe","RadioValue","filterRadioComponent","radioValue","radioboxList","radioDataSource","SimpleInputGroupComponent","constructTextItem","textItem","textValueObj","testId","getInputGroupBindingInfo","onClick","options","selectedItems","isTextFromDialog","textFormDialog","onBlur","SingleNumberComponent","FlexibleNumberComponent","setValueText","FlexibleDateComponent","constructMultiFieldDateRange","startValueText","endValueText","SimpleFilterModule","NgModule","declarations","imports","CommonModule","FormsModule","FilterPanelModule","FarrisSidebarModule","FarrisTooltipModule","InputGroupModule","FarrisDatePickerModule","DatalistModule","ComboListModule","LookupModule","FarrisFormsModule","NumberSpinnerModule","PerfectScrollbarModule","FilterConditionModule","LocaleModule","forRoot","FarrisCommonModule","exports","ConditionValueConvert","conditionValue","RadioEnumValue","LIST","TREELIST","ControlConvert","listFilterItem","setWidth","parseInt","getWidth","_id","_groupName","listFilterGroup","responsedIndex","listItems"],"mappings":"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","sourcesContent":["export enum ControlType{\r\n    Text=0,\r\n    Help=1,\r\n    DropDown=2,\r\n    DateRange=3,\r\n    NumberRange=4,\r\n    Search=5,\r\n    Date=6,\r\n    CheckboxGroup=7,\r\n    DateRangeTime=8,\r\n    Radio=9,\r\n    Year=10,\r\n    Month=11,\r\n    MonthRange=12,\r\n    YearRange=13,\r\n    InputGroup=14,\r\n    Number=15,\r\n    FlexibleNumber=16,\r\n    FlexibleDate=17,\r\n    BoolCheck=18\r\n}","import { IValue } from './ivalue';\r\nimport { ControlType } from '../controltype';\r\nimport { EventEmitter } from '@angular/core';\r\n\r\nexport class CheckboxGroupValue implements IValue {\r\n    value: any[];\r\n    clear$ = new EventEmitter();\r\n    constructor(value: { value: any[] } = { value: [] }) {\r\n        this.value = value.value;\r\n    }\r\n\r\n    clearValue(): void {\r\n        this.value = [];\r\n        this.clear$.emit();\r\n    }\r\n    setOriginalValue(value: any[]): void {\r\n        this.value = value;\r\n    }\r\n    getOriginalValue() {\r\n        return this.value;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.CheckboxGroup;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.value.length == 0;\r\n    }\r\n    getValueText(): string {\r\n        return this.value.join(',');\r\n    }\r\n}\r\n","import { IValue } from './ivalue';\r\nimport { ControlType } from '../controltype';\r\nimport { EventEmitter } from '@angular/core';\r\nimport { cloneDeep } from 'lodash-es';\r\n\r\nexport class HelpValue implements IValue {\r\n    valueField: string;\r\n    value: any[];\r\n    textValue: string;\r\n    clear$ = new EventEmitter();\r\n\r\n\r\n\r\n    constructor(data: {\r\n        value: any,\r\n        valueField: string,\r\n        textValue: string;\r\n    } = { value: [], valueField: undefined, textValue: undefined }) {\r\n        if (data.hasOwnProperty('textValue')) {// æ°ç»æï¼valueæ¯æ°ç»\r\n            this.valueField = data.valueField;\r\n            this.value = data.value;\r\n            this.textValue = data.textValue;\r\n        } else {// æ§ç»æï¼valueæ¯å¯¹è±¡\r\n            this.valueField = data.valueField;\r\n            this.value = data.value ? [data.value] : [];\r\n            this.textValue = 'help-text-value-null'; // æ§ç»ææ textValueå±æ§\r\n        }\r\n\r\n    }\r\n\r\n    static getPropValue(helpItem: any, args: Array<string>): any {\r\n        if (args.length > 1) {\r\n            const arg = args.shift();\r\n            return helpItem[arg] ? this.getPropValue(helpItem[arg], args) : null;\r\n        }\r\n        return helpItem[args[0]];\r\n    }\r\n\r\n\r\n    clearValue(): void {\r\n        this.value = [];\r\n        this.valueField = undefined;\r\n        this.textValue = undefined;\r\n        this.clear$.emit();\r\n    }\r\n    setOriginalValue(value: any): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    getOriginalValue(): string {\r\n        if (this.valueField) {\r\n            const args = this.valueField.split('.');\r\n            const valueArr = this.value.map(helpItem => HelpValue.getPropValue(helpItem, cloneDeep(args)));\r\n            return valueArr && valueArr.length ? valueArr.join(',') : '';\r\n        }\r\n        else {\r\n            return '';\r\n        }\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.Help;\r\n    }\r\n\r\n\r\n    isEmpty(): boolean {\r\n        return !this.valueField;\r\n    }\r\n\r\n\r\n\r\n    getTextValue(textField: string): string {\r\n        const args = textField.split('.');\r\n        const textArr = this.value.map(helpItem => HelpValue.getPropValue(helpItem, cloneDeep(args)));\r\n        return textArr && textArr.length ? textArr.join(',') : '';\r\n    }\r\n    getValueText(): string {\r\n        return this.textValue;\r\n    }\r\n}\r\n","import { IValue } from './ivalue';\r\nimport { ControlType } from '../controltype';\r\nimport { EventEmitter } from '@angular/core';\r\n\r\nexport class TextValue implements IValue {\r\n    value: string;\r\n    clear$ = new EventEmitter();\r\n    constructor(value: { value: string } = { value: '' }) {\r\n        this.value = value.value;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.Text;\r\n    }\r\n    clearValue(): void {\r\n        this.value = undefined;\r\n        this.clear$.emit();\r\n    }\r\n    setOriginalValue(value: any): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    getOriginalValue() {\r\n        return this.value;\r\n    }\r\n    isEmpty(): boolean {\r\n        return !this.value;\r\n    }\r\n\r\n    getValueText(): string {\r\n        return this.value;\r\n    }\r\n}","import { IControl } from \"../controltype/icontrol\";\r\nimport { IValue } from '../conditionvalue/ivalue';\r\n\r\n/**\r\n * å­æ®µéç½®\r\n */\r\nexport class FieldConfig{\r\n\r\n    /**\r\n     * å­æ®µID\r\n     */\r\n    id?:string;\r\n    \r\n    /**\r\n     * å­æ®µæ ç­¾ï¼å­æ®µç¼å·çå¯ä¸æ è¯\r\n     */\r\n    labelCode:string;\r\n\r\n    /**\r\n     * å­æ®µç¼å·\r\n     */\r\n    code?:string;\r\n\r\n    /**\r\n     * å­æ®µåç§°\r\n     */\r\n    name?:string;\r\n\r\n    /**\r\n     * å­æ®µæè¿°\r\n     */\r\n    //description:string;\r\n\r\n    /**\r\n     * å¼\r\n     * è¯¥å±æ§ä¸ºIValueæ¥å£ï¼æ ¹æ®ä¸åçæ§ä»¶ç±»åæä¸åçå®ç°ç±»ï¼å·ä½å¦ä¸ï¼\r\n     * 1. ææ¬ç±»åï¼TextValue\r\n     * 2. ä¸æåè¡¨ï¼DropDownListValue\r\n     * 3. æ¥æåºé´ï¼DateRangeValue\r\n     * 4. æ°å­åºé´ï¼NumberRangeValue\r\n     * 5. å¸®å©ç±»åï¼SmartHelpValue\r\n    */\r\n   //value:IValue;\r\n\r\n    /**\r\n     * æ©å±å­æ®µ1\r\n     */\r\n    //extend1:string;\r\n\r\n    /**\r\n     * æ©å±å­æ®µ2\r\n     */\r\n    //extend2:string;\r\n\r\n    /**\r\n     * æ©å±å­æ®µ3\r\n     */\r\n    //extend3:string;\r\n\r\n    /**\r\n     * æ§ä»¶ç±»åï¼ç®ååæ¬ææ¬ç±»åï¼ä¸æåè¡¨ï¼æ¥æåºé´ï¼æ°å­åºé´ï¼å¸®å©ç±»å\r\n     * æ§ä»¶ç±»åä¸ºIControlæ¥å£ï¼æ ¹æ®ä¸åçæ§ä»¶ç±»åå¯¹åºä¸åçå®ç°ç±»ï¼å·ä½å¦ä¸ï¼\r\n     * 1. ææ¬ç±»åï¼TextControl\r\n     * 2. ä¸æåè¡¨ï¼DropDownListControl\r\n     * 3. æ¥æåºé´ï¼DateRangeControl\r\n     * 4. æ°å­åºé´ï¼NumberRangeControl\r\n     * 5. å¸®å©ç±»åï¼SmartHelpContol\r\n     */\r\n    control?:IControl;\r\n\r\n    /** è¡¨åæ°æ® */\r\n    value?:any;\r\n\r\n    /**æ¯å¦æ¯æ©å±åºåçè¡¨å */\r\n    // isExtend:boolean;\r\n\r\n    /**æ¯å¦å æ»¡å¨å±å©ä½ */\r\n    // expand:boolean;\r\n    //é»è®¤æ¾ç¤º\r\n    placeHolder?:string;\r\n    //æ¯å¦æå¼\r\n    filled:boolean;\r\n    //éæ©åçå¼\r\n    valueText:string;\r\n    beginPlaceHolder?:string;\r\n    endPlaceHolder?:string;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * ææ¬æ§ä»¶\r\n */\r\nexport class TextControl implements IControl{\r\n    \r\n    /**\r\n     * è·åæ§ä»¶ç±»åï¼è¿åå¼ï¼ææ¬æ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.Text;\r\n    }\r\n\r\n    /**\r\n     * é»è®¤æ¾ç¤º\r\n     */\r\n    placeholder:string;\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n}","import { IValue } from './ivalue';\r\nimport { ControlType } from '../controltype';\r\nimport { EventEmitter } from '@angular/core';\r\n\r\nexport class SearchValue implements IValue{\r\n    value:string;\r\n    clear$ = new EventEmitter();\r\n    constructor(value: { value: string } = {value: ''}){\r\n        this.value = value.value;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.Search;\r\n    }\r\n    \r\n    clearValue(): void {\r\n        this.value = undefined;\r\n        this.clear$.emit();\r\n    }\r\n    setOriginalValue(value: any): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    getOriginalValue() {\r\n        return this.value;\r\n    }\r\n    isEmpty(): boolean {\r\n        return !this.value;\r\n    }\r\n\r\n    getValueText():string{\r\n        return this.value;\r\n    }\r\n}\r\n","import { IValue } from './ivalue';\r\nimport { ControlType } from '../controltype';\r\nimport { EventEmitter } from '@angular/core';\r\nimport { DateTimeHelperService } from '@farris/ui-common/date';\r\nexport class DateValue implements IValue {\r\n    value: string;\r\n    clear$ = new EventEmitter();\r\n    constructor(value: { value: string } = { value: '' }) {\r\n        this.value = value.value;\r\n    }\r\n    setOriginalValue(value: any): void {\r\n        this.value = value.formatted;\r\n    }\r\n    getOriginalValue() {\r\n        return this.value;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.Date;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return !this.value;\r\n    }\r\n    clearValue(): void {\r\n        this.value = undefined;\r\n        this.clear$.emit();\r\n    }\r\n    getValueText(ctrl?: any): string {\r\n        if (ctrl && ctrl.format) {\r\n            return new DateTimeHelperService().formatTo(this.value, ctrl.format);\r\n        }\r\n        return this.value;\r\n    }\r\n}","import { IValue } from \"./ivalue\";\r\nimport { ControlType } from \"../controltype\";\r\nimport { EventEmitter } from '@angular/core';\r\nimport { DateTimeHelperService } from \"@farris/ui-common/date\";\r\nexport class DateRangeValue implements IValue {\r\n    startTime: string;\r\n    endTime: string;\r\n    clear$ = new EventEmitter();\r\n    constructor(value: { startTime: string, endTime: string } = { startTime: '', endTime: '' }) {\r\n        this.startTime = value.startTime;\r\n        this.endTime = value.endTime;\r\n    }\r\n\r\n    setOriginalValue(value: { formatted: string, delimiter: string }): void {\r\n        if (value.formatted) {\r\n            this.startTime = value.formatted.split(value.delimiter)[0];\r\n            this.endTime = value.formatted.split(value.delimiter)[1];\r\n        } else {\r\n            this.clearValue();\r\n        }\r\n    }\r\n    getOriginalValue() {\r\n        return `${this.startTime}~${this.endTime}`;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.DateRange;\r\n    }\r\n    clearValue(): void {\r\n        this.startTime = undefined;\r\n        this.endTime = undefined;\r\n        this.clear$.emit();\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return !this.startTime || !this.endTime;\r\n    }\r\n\r\n    getValueText(ctrl?: any): string {\r\n        if (!this.startTime.length || !this.endTime.length) {\r\n            return '';\r\n        }\r\n        else {\r\n            if (ctrl && ctrl.format) {\r\n                const dateHlp = new DateTimeHelperService();\r\n                return dateHlp.formatTo(this.startTime, ctrl.format) +'~'+ dateHlp.formatTo(this.endTime, ctrl.format);\r\n            }\r\n\r\n            return (this.startTime + '~' + this.endTime);\r\n        }\r\n    }\r\n}\r\n","import { IValue } from \"./ivalue\";\r\nimport { ControlType } from \"../controltype\";\r\nimport { EventEmitter } from '@angular/core';\r\nimport { DateTimeHelperService } from \"@farris/ui-common/date\";\r\nexport class DateRangeTimeValue implements IValue {\r\n\r\n    startTime: string;\r\n    endTime: string;\r\n    clear$ = new EventEmitter();\r\n    constructor(value: { startTime: string, endTime: string } = { startTime: '', endTime: '' }) {\r\n        this.startTime = value.startTime;\r\n        this.endTime = value.endTime;\r\n    }\r\n\r\n    setOriginalValue(value: { formatted: string, delimiter: string }): void {\r\n        if (value.formatted) {\r\n            this.startTime = value.formatted.split(value.delimiter)[0];\r\n            this.endTime = value.formatted.split(value.delimiter)[1];\r\n        } else {\r\n            this.clearValue();\r\n        }\r\n    }\r\n    getOriginalValue() {\r\n        return `${this.startTime}~${this.endTime}`;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.DateRangeTime;\r\n    }\r\n    clearValue(): void {\r\n        this.startTime = undefined;\r\n        this.endTime = undefined;\r\n        this.clear$.emit();\r\n    }\r\n    isEmpty(): boolean {\r\n        return !this.startTime || !this.endTime;\r\n    }\r\n    getValueText(ctrl?: any): string {\r\n        if (!this.startTime.length || !this.endTime.length) {\r\n            return '';\r\n        }\r\n        else {\r\n            if (ctrl && ctrl.format) {\r\n                const dateHlp = new DateTimeHelperService();\r\n                return dateHlp.formatTo(this.startTime, ctrl.format) +'~'+ dateHlp.formatTo(this.endTime, ctrl.format);\r\n            }\r\n            return (this.startTime + '~' + this.endTime);\r\n        }\r\n    }\r\n}\r\n","export enum EnumType{\r\n    IntType=0,\r\n    StringType=1,\r\n    BoolType=2\r\n}","import { IEnumValue } from \"./ienumvalue\";\r\nimport { EnumType } from \"./enumtype\";\r\n\r\n/**\r\n * ä¸æåè¡¨Integerç±»å\r\n */\r\nexport class EnumIntegerValue implements IEnumValue{\r\n    getEnumType(): EnumType {\r\n        return EnumType.IntType;\r\n    }\r\n    \r\n    getEnumValueName():string{\r\n        return this.name;\r\n    }\r\n\r\n    getEnumValue():any{\r\n        return this.value;\r\n    }\r\n\r\n    /**\r\n     * ææ¬æ¾ç¤º\r\n     */\r\n    name:string;\r\n\r\n    /**\r\n     * å¼æ¾ç¤º\r\n     */\r\n    value:number;\r\n}","import { IEnumValue } from \"./ienumvalue\";\r\nimport { EnumType } from \"./enumtype\";\r\n\r\n/**\r\n * ä¸æåè¡¨Stringç±»å\r\n */\r\nexport class EnumStringValue implements IEnumValue{\r\n    getEnumType(): EnumType {\r\n        return  EnumType.StringType;\r\n    }\r\n\r\n    getEnumValueName():string{\r\n        return this.name;\r\n    }\r\n\r\n    getEnumValue():any{\r\n        return this.value;\r\n    }\r\n    \r\n    /**\r\n     * ææ¬æ¾ç¤º\r\n     */\r\n    name:string;\r\n\r\n    /**\r\n     * å¼æ¾ç¤º\r\n     */\r\n    value:string;\r\n}","import { IEnumValue } from \"./ienumvalue\";\r\nimport { EnumType } from \"./enumtype\";\r\n\r\n/**\r\n * ä¸æåè¡¨Boolç±»å\r\n */\r\nexport class EnumBoolValue implements IEnumValue{\r\n    \r\n    getEnumType(): EnumType {\r\n        return  EnumType.BoolType;\r\n    }\r\n\r\n    getEnumValueName():string{\r\n        return this.name;\r\n    }\r\n\r\n    getEnumValue():any{\r\n        return this.value;\r\n    }\r\n\r\n    /**\r\n     * ææ¬æ¾ç¤º\r\n     */\r\n    name:string;\r\n\r\n    /**\r\n     * å¼æ¾ç¤º\r\n     */\r\n    value:boolean;\r\n}","import { EnumType } from \"./enumtype\";\r\nimport { EnumIntegerValue } from \"./integerenumvalue\";\r\nimport { EnumStringValue } from \"./stringenumvalue\";\r\nimport { EnumBoolValue } from \"./boolenumvalue\";\r\n\r\nexport interface IEnumValue{\r\n    getEnumType():EnumType;\r\n    getEnumValueName():string;\r\n    getEnumValue():any;\r\n}\r\n\r\nexport class EnumValueConvert{\r\n\r\n    convertJObject(obj:IEnumValue):Object{\r\n        let enumValue=obj as IEnumValue;\r\n        let enumType=enumValue.getEnumType();\r\n        let jobj=new Object();\r\n        jobj[\"Type\"]=enumType;\r\n        jobj[\"Content\"]=enumValue;\r\n        return jobj;\r\n    }\r\n\r\n    initFromJobject(jobj:Object):IEnumValue{\r\n        let enumType=jobj[\"Type\"] as EnumType;\r\n        let content=jobj[\"Content\"] as IEnumValue;\r\n        if(enumType==EnumType.IntType){\r\n            return Object.assign(new EnumIntegerValue(),content) ;\r\n        }\r\n        else if(enumType==EnumType.BoolType){\r\n            return Object.assign(new EnumBoolValue(),content) ;\r\n        }\r\n        else{\r\n            return Object.assign(new EnumStringValue(),content) ;\r\n        }\r\n    }\r\n}","import { IValue } from './ivalue';\r\nimport { ControlType } from '../controltype';\r\nimport { EventEmitter } from '@angular/core';\r\nimport { IEnumValue, EnumValueConvert } from '../controltype/dropdownlist/ienumvalue';\r\n\r\nexport class DropDownListValue implements IValue {\r\n    value: string;\r\n    clear$ = new EventEmitter();\r\n    constructor(data: string = '') {\r\n        this.value = data;\r\n    }\r\n    clearValue(): void {\r\n        this.value = undefined;\r\n        this.clear$.emit();\r\n    }\r\n    setOriginalValue(value: any): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    getOriginalValue() {\r\n        return this.value;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.DropDown;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return !this.value;\r\n    }\r\n    getValueText(): string {\r\n        return this.value;\r\n    }\r\n}\r\n\r\nexport class DropDownListValueConvert {\r\n    convertToObject(obj: IValue): Object {\r\n        let dropDownListValue = obj as DropDownListValue;\r\n        let jobj = new Object();\r\n        let convertor = new EnumValueConvert();\r\n        if (!!(dropDownListValue.value)) {\r\n            // jobj[\"value\"]=convertor.convertJObject(dropDownListValue.value);\r\n            jobj[\"value\"] = dropDownListValue.value;\r\n        }\r\n        return jobj;\r\n    }\r\n\r\n    initFromObject(jobj: Object): DropDownListValue {\r\n        let dropDownListValue = new DropDownListValue();\r\n        if (!!(jobj[\"value\"])) {\r\n            let convertor = new EnumValueConvert();\r\n            // dropDownListValue.value=convertor.initFromJobject(jobj[\"value\"]);\r\n            dropDownListValue.value = jobj[\"value\"];\r\n        }\r\n        return dropDownListValue;\r\n    }\r\n}","import { IValue } from './ivalue';\r\nimport { ControlType } from '../controltype';\r\nimport { EventEmitter } from '@angular/core';\r\n\r\nexport class NumberRangeValue implements IValue {\r\n    startValue: number;\r\n    endValue: number;\r\n    clear$ = new EventEmitter();\r\n    constructor(data: { startValue: string, endValue: string } = { startValue: '', endValue: '' }) {\r\n        this.startValue = data.startValue ? parseFloat(data.startValue) : null;\r\n        this.endValue = data.endValue ? parseFloat(data.endValue) : null;\r\n    }\r\n\r\n    getControlType(): ControlType {\r\n        return ControlType.NumberRange;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return (this.startValue == null && this.endValue == null);\r\n    }\r\n    clearValue(): void {\r\n        this.startValue = undefined;\r\n        this.endValue = undefined;\r\n        this.clear$.emit();\r\n    }\r\n    setOriginalValue(value: any): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    getOriginalValue() {\r\n        return {\r\n            begin: this.startValue,\r\n            end: this.endValue\r\n        };\r\n    }\r\n\r\n    getValueText(): string {\r\n        if (this.startValue == undefined && this.endValue == undefined) {\r\n            return '';\r\n        }\r\n        else if (this.startValue == undefined) {\r\n            return ('~' + this.endValue);\r\n        }\r\n        else if (this.endValue == undefined) {\r\n            return (this.startValue + '~');\r\n        }\r\n        else {\r\n            return (this.startValue + '~' + this.endValue);\r\n        }\r\n    }\r\n}\r\n\r\nexport class NumberRangeValueConvertor {\r\n    convertToObject(obj: IValue): Object {\r\n        let dropDownListValue = obj as NumberRangeValue;\r\n        let jobj = new Object();\r\n        jobj[\"startValue\"] = dropDownListValue.startValue;\r\n        jobj[\"endValue\"] = dropDownListValue.endValue;\r\n        return jobj;\r\n    }\r\n\r\n    initFromObject(jobj: Object): NumberRangeValue {\r\n        let numberRangeValue = new NumberRangeValue();\r\n        if (!!(jobj[\"startValue\"])) {\r\n            numberRangeValue.startValue = jobj[\"startValue\"] as number;\r\n        }\r\n        if (!!(jobj[\"endValue\"])) {\r\n            numberRangeValue.endValue = jobj[\"endValue\"] as number;\r\n        }\r\n        return numberRangeValue;\r\n    }\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\nimport { CompareType } from '../../comparetype';\r\n\r\n/**\r\n * æ¥ææ§ä»¶\r\n */\r\nexport class DateControl implements IControl{\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.Date;\r\n    }\r\n\r\n    /**\r\n     * æ¥ææ ¼å¼\r\n     */\r\n    //format:string;\r\n    /**\r\n     * é»è®¤æ¾ç¤º\r\n     */\r\n    placeholder:string;\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n\r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n    /**\r\n     * æ¥ææ ¼å¼\r\n     */\r\n    format:string;\r\n    /**\r\n     * æç´¢æ¥æç±»å\r\n     */\r\n    compareType:CompareType;\r\n    showType:string;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * æ°å­åºé´æ§ä»¶\r\n */\r\nexport class NumberRangeControl implements IControl{\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.NumberRange;\r\n    }\r\n\r\n    /**\r\n     * é¿åº¦\r\n     */\r\n    length:number;\r\n\r\n    /**\r\n     * ç²¾åº¦\r\n     */\r\n    precision:number;\r\n    /**\r\n     * é»è®¤æ¾ç¤º\r\n     */\r\n    placeholder:string;\r\n    beginPlaceHolder:string;\r\n    endPlaceHolder:string;\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n\r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n    /**æ¯å¦æ¯å¤§æ° */\r\n    bigNumber:boolean;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * æç´¢æ§ä»¶\r\n */\r\nexport class SearchControl implements IControl{\r\n    \r\n    /**\r\n     * è·åæ§ä»¶ç±»åï¼è¿åå¼ï¼æç´¢æ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.Search;\r\n    }\r\n\r\n    /**\r\n     * æç´¢æ¡é»è®¤æ¾ç¤º\r\n     */\r\n    placeholder:string;\r\n    \r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n\r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\nimport { EnumType } from \"./enumtype\";\r\nimport { IEnumValue, EnumValueConvert } from \"./ienumvalue\";\r\nimport { EnumStringValue } from \"./stringenumvalue\";\r\nimport { EnumBoolValue } from \"./boolenumvalue\";\r\nimport { EnumIntegerValue } from \"./integerenumvalue\";\r\n\r\n/**\r\n * ä¸æåè¡¨æ§ä»¶\r\n */\r\nexport class DropDownControl implements IControl{\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.DropDown;\r\n    }\r\n\r\n    /**\r\n     * ä¸æå¼ç±»å\r\n     */\r\n    valueType:EnumType;\r\n    /**\r\n     * é»è®¤æ¾ç¤º\r\n     */\r\n    placeholder:string;\r\n    /**\r\n     * ä¸ææ°æ®æºåè¡¨\r\n     * è¯¥å±æ§ä¸ºIEnumValueæ¥å£ç±»åï¼å·ä½å®ç°ç±»å¦ä¸ï¼\r\n     * 1.å¸å°ç±»åï¼EnumBoolValue,å¸å°ç±»åçæ§ä»¶ä¼è½¬æä¸æåè¡¨ï¼å®ç°ç±»ä½¿ç¨EnumBoolValue\r\n     * 2.å­ç¬¦ä¸²ç±»åï¼EnumStringValue\r\n     * 3.æ´åç±»åï¼EnumIntegerValue ä¾å¦Radio Buttonç±»åéè¦ä½¿ç¨EnumIntegerValueå®ç°ç±»\r\n     */\r\n    enumValues:Array<IEnumValue>;\r\n\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n\r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n}\r\n\r\n/**\r\n * ä¸æåè¡¨æ§ä»¶åºååä¸ååºååå¨\r\n */\r\nexport class DropDownListControlConvert{\r\n\r\n    /**\r\n     * åºåå\r\n     * @param obj ä¸æåè¡¨æ§ä»¶å®ä½\r\n     */\r\n    convertToObject(obj:DropDownControl){\r\n        let dropDownListControl= obj as DropDownControl;\r\n        let jobj=new Object();\r\n        jobj[\"valueType\"]=dropDownListControl.valueType;\r\n        if(dropDownListControl.enumValues!=null){\r\n            let jarray=jobj[\"enumValues\"]=[];\r\n            let convertor=new EnumValueConvert();\r\n            dropDownListControl.enumValues.forEach(element => {\r\n                if(dropDownListControl.valueType==EnumType.BoolType){\r\n                    jarray.push(convertor.convertJObject(Object.assign(new EnumBoolValue(),element)));\r\n                }\r\n                else if(dropDownListControl.valueType==EnumType.IntType){\r\n                    jarray.push(convertor.convertJObject(Object.assign(new EnumIntegerValue(),element)));\r\n                }\r\n                else{\r\n                    jarray.push(convertor.convertJObject(Object.assign(new EnumStringValue(),element)));\r\n                }\r\n            });\r\n        }\r\n        return jobj;\r\n    }\r\n\r\n    /**\r\n     * ååºåå\r\n     * @param jobj ä¸æåè¡¨æ§ä»¶å®ä½åºåååçJSONå¯¹è±¡\r\n     */\r\n    initFromObject(jobj:Object):DropDownControl{\r\n        let control=new DropDownControl();\r\n        if(jobj[\"valueType\"]!=null){\r\n            control.valueType=jobj[\"valueType\"] as number;\r\n        }\r\n        if(jobj[\"enumValues\"]!=null){\r\n            control.enumValues=new Array<IEnumValue>();\r\n            jobj[\"enumValues\"].forEach(element => {\r\n                let convertor=new EnumValueConvert();\r\n                control.enumValues.push(convertor.initFromJobject(element));\r\n            });\r\n        }\r\n        return control;\r\n    }\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\nimport { DisplayType } from './displayType';\r\n\r\n/**\r\n * å¸®å©æ§ä»¶\r\n */\r\nexport class HelpContol implements IControl{\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.Help;\r\n    }\r\n\r\n    /**\r\n     * é»è®¤æ¾ç¤º\r\n     */\r\n    placeholder:string;\r\n    /**\r\n     * å¸®å©æ°æ®æº\r\n     */\r\n    uri:string;\r\n\r\n    /**\r\n     * å¸®å©çææ¬æ¾ç¤ºå­æ®µ\r\n     */\r\n    textField:string;\r\n\r\n    /**\r\n     * å¸®å©å¼å­æ®µ\r\n     */\r\n    valueField:string;\r\n\r\n    idField:string;\r\n    helpId:string;\r\n    displayType:DisplayType;\r\n    /**\r\n     * å­æ®µæ å°ä¿¡æ¯\r\n     */\r\n    mapFields:any;\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n\r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n\r\n    /**\r\n     * å¸®å©åäºä»¶\r\n    */\r\n   preEventCmd: any;\r\n\r\n   /**\r\n   * å¸®å©åäºä»¶\r\n   */\r\n   postEventCmd: any;\r\n\r\n   /**\r\n     * è¿è¡æ¶åæ°éç½®ä¼ é\r\n    */\r\n   context: any;\r\n    /** å¯ç¨æé å®æ´æ è¿æ»¤ */\r\n   enableFullTree: boolean;\r\n   /** æ å½¢å¸®å©æ°æ®å è½½æ¹å¼ï¼ default: åç½®åæ°ï¼ loadall: å è½½ææ layerloadï¼åå±å è½½ */\r\n   loadTreeDataType: 'default' | 'loadall' | 'layerload';\r\n    /**æ¯å¦æ¯æå¤é */\r\n   singleSelect: boolean;\r\n   /**å±å¼å°æå®çº§æ° */\r\n   expandLevel: number;\r\n   /** æ¯å¦å¯ç¨çº§èéæ©æ§å¶éé¡¹ */\r\n   enableCascade: boolean;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * æ¥æåºé´æ§ä»¶\r\n */\r\nexport class DateRangeControl implements IControl{\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.DateRange;\r\n    }\r\n\r\n    /**\r\n     * é»è®¤æ¾ç¤º\r\n     */\r\n    placeholder:string;\r\n    beginPlaceHolder:string;\r\n    endPlaceHolder:string;\r\n    /**\r\n     * æ¥ææ ¼å¼\r\n     */\r\n    format:string;\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n    \r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n    showType:string;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * æ¥æåºé´å¸¦æ¶é´æ§ä»¶\r\n */\r\nexport class DateRangeTimeControl implements IControl{\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.DateRangeTime;\r\n    }\r\n\r\n    /**\r\n     * é»è®¤æ¾ç¤º\r\n     */\r\n    placeholder:string;\r\n    beginPlaceHolder:string;\r\n    endPlaceHolder:string;\r\n    /**\r\n     * æ¥ææ ¼å¼\r\n     */\r\n    format:string;\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n    \r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\nimport { CheckboxIEnumValue } from './ienumvalue';\r\n\r\n/**\r\n * å¤éç»æ§ä»¶\r\n */\r\nexport class CheckboxGroupControl implements IControl{\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.CheckboxGroup;\r\n    }\r\n\r\n    /**\r\n     * å¤éç»æ°æ®æºåè¡¨\r\n     */\r\n    enumValues:Array<CheckboxIEnumValue>;\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n\r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n    boolcheck:boolean = false;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\nimport { RadioIEnumValue } from './ienumvalue';\r\n\r\n/**\r\n * å¤éç»æ§ä»¶\r\n */\r\nexport class RadioControl implements IControl{\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.Radio;\r\n    }\r\n\r\n    /**\r\n     * å¤éç»æ°æ®æºåè¡¨\r\n     */\r\n    enumValues:Array<RadioIEnumValue>;\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n\r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n}","import { IValue } from './ivalue';\r\nimport { ControlType } from '../controltype';\r\nimport { EventEmitter } from '@angular/core';\r\n\r\nexport class RadioGroupValue implements IValue {\r\n\r\n    value: string;\r\n    clear$ = new EventEmitter();\r\n    constructor(value: { value: string } = { value: '' }) {\r\n        this.value = value.value;\r\n    }\r\n\r\n    clearValue(): void {\r\n        this.value = undefined;\r\n        this.clear$.emit();\r\n    }\r\n    setOriginalValue(value: any): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    getOriginalValue() {\r\n        return this.value;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.Radio;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return !this.value;\r\n    }\r\n    getValueText(): string {\r\n        return this.value;\r\n    }\r\n}\r\n","import { IValue } from './ivalue';\r\nimport { ControlType } from '../controltype';\r\nimport { EventEmitter } from '@angular/core';\r\nimport { DateTimeHelperService } from '@farris/ui-common/date';\r\nexport class YearValue implements IValue {\r\n    value: string;\r\n    clear$ = new EventEmitter();\r\n    constructor(value: { value: string } = { value: '' }) {\r\n        this.value = value.value;\r\n    }\r\n\r\n    setOriginalValue(value: any): void {\r\n        this.value = value.formatted;\r\n    }\r\n    getOriginalValue() {\r\n        return this.value;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.Date;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return !this.value;\r\n    }\r\n    clearValue(): void {\r\n        this.value = undefined;\r\n        this.clear$.emit();\r\n    }\r\n    getValueText(ctrl?: any): string {\r\n        if (ctrl && ctrl.format) {\r\n            return new DateTimeHelperService().formatTo(this.value, ctrl.format);\r\n        }\r\n\r\n        return this.value;\r\n    }\r\n}","import { IValue } from './ivalue';\r\nimport { ControlType } from '../controltype';\r\nimport { EventEmitter } from '@angular/core';\r\nimport { DateTimeHelperService } from '@farris/ui-common/date';\r\n\r\nexport class MonthValue implements IValue {\r\n    value: string;\r\n    clear$ = new EventEmitter();\r\n    constructor(value: { value: string } = { value: '' }) {\r\n        this.value = value.value;\r\n    }\r\n\r\n    setOriginalValue(value: any): void {\r\n        this.value = value.formatted;\r\n    }\r\n    getOriginalValue() {\r\n        return this.value;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.Date;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return !this.value;\r\n    }\r\n    clearValue(): void {\r\n        this.value = undefined;\r\n        this.clear$.emit();\r\n    }\r\n    getValueText(ctrl?: any): string {\r\n        if (ctrl && ctrl.format) {\r\n            return new DateTimeHelperService().formatTo(this.value, ctrl.format);\r\n        }\r\n        return this.value;\r\n    }\r\n}\r\n","import { IValue } from './ivalue';\r\nimport { ControlType } from '../controltype';\r\nimport { EventEmitter } from '@angular/core';\r\nimport { DateTimeHelperService } from '@farris/ui-common/date';\r\n\r\nexport class YearRangeValue implements IValue {\r\n\r\n    startTime: string;\r\n    endTime: string;\r\n    clear$ = new EventEmitter();\r\n    constructor(value: { startTime: string, endTime: string } = { startTime: '', endTime: '' }) {\r\n        this.startTime = value.startTime;\r\n        this.endTime = value.endTime;\r\n    }\r\n\r\n    setOriginalValue(value: { formatted: string, delimiter: string }): void {\r\n        if (value.formatted) {\r\n            this.startTime = value.formatted.split(value.delimiter)[0];\r\n            this.endTime = value.formatted.split(value.delimiter)[1];\r\n        } else {\r\n            this.clearValue();\r\n        }\r\n    }\r\n    getOriginalValue() {\r\n        return `${this.startTime}~${this.endTime}`;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.DateRange;\r\n    }\r\n    clearValue(): void {\r\n        this.startTime = undefined;\r\n        this.endTime = undefined;\r\n        this.clear$.emit();\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return !this.startTime || !this.endTime;\r\n    }\r\n    getValueText(ctrl?:any): string {\r\n        if (!this.startTime.length || !this.endTime.length) {\r\n            return '';\r\n        }\r\n        else {\r\n\r\n            if (ctrl && ctrl.format) {\r\n                const dateHlp = new DateTimeHelperService();\r\n                return dateHlp.formatTo(this.startTime, ctrl.format) +'~'+ dateHlp.formatTo(this.endTime, ctrl.format);\r\n            }\r\n\r\n            return (this.startTime + '~' + this.endTime);\r\n        }\r\n    }\r\n}","import { IValue } from './ivalue';\r\nimport { ControlType } from '../controltype';\r\nimport { EventEmitter } from '@angular/core';\r\nimport { DateTimeHelperService } from '@farris/ui-common/date';\r\n\r\nexport class MonthRangeValue implements IValue {\r\n\r\n    startTime: string;\r\n    endTime: string;\r\n    clear$ = new EventEmitter();\r\n    constructor(value: { startTime: string, endTime: string } = { startTime: '', endTime: '' }) {\r\n        this.startTime = value.startTime;\r\n        this.endTime = value.endTime;\r\n    }\r\n\r\n    setOriginalValue(value: { formatted: string, delimiter: string }): void {\r\n        if (value.formatted) {\r\n            this.startTime = value.formatted.split(value.delimiter)[0];\r\n            this.endTime = value.formatted.split(value.delimiter)[1];\r\n        } else {\r\n            this.clearValue();\r\n        }\r\n    }\r\n    getOriginalValue() {\r\n        return `${this.startTime}~${this.endTime}`;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.DateRange;\r\n    }\r\n    clearValue(): void {\r\n        this.startTime = undefined;\r\n        this.endTime = undefined;\r\n        this.clear$.emit();\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return !this.startTime || !this.endTime;\r\n    }\r\n    getValueText(ctrl?: any): string {\r\n        if (!this.startTime.length || !this.endTime.length) {\r\n            return '';\r\n        } else {\r\n\r\n            if (ctrl && ctrl.format) {\r\n                const dateHlp = new DateTimeHelperService();\r\n                return dateHlp.formatTo(this.startTime, ctrl.format) +'~'+ dateHlp.formatTo(this.endTime, ctrl.format);\r\n            }\r\n\r\n            return (this.startTime + '~' + this.endTime);\r\n        }\r\n    }\r\n}\r\n","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\nimport { CompareType } from '../../comparetype';\r\n\r\n/**\r\n * å¹´ä»½æ§ä»¶\r\n */\r\nexport class YearControl implements IControl{\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.Year;\r\n    }\r\n\r\n    /**\r\n     * æ¥ææ ¼å¼\r\n     */\r\n    //format:string;\r\n    /**\r\n     * é»è®¤æ¾ç¤º\r\n     */\r\n    placeholder:string;\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n\r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n    /**\r\n     * æ¥ææ ¼å¼\r\n     */\r\n    format:string;\r\n    /**\r\n     * æç´¢æ¥æç±»å\r\n     */\r\n    compareType:CompareType;\r\n    showType:string;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\nimport { CompareType } from '../../comparetype';\r\n\r\n/**\r\n * å¹´ææ§ä»¶\r\n */\r\nexport class MonthControl implements IControl{\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.Month;\r\n    }\r\n\r\n    /**\r\n     * æ¥ææ ¼å¼\r\n     */\r\n    //format:string;\r\n    /**\r\n     * é»è®¤æ¾ç¤º\r\n     */\r\n    placeholder:string;\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n\r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n    /**\r\n     * æ¥ææ ¼å¼\r\n     */\r\n    format:string;\r\n    /**\r\n     * æç´¢æ¥æç±»å\r\n     */\r\n    compareType:CompareType;\r\n    showType:string;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * å¹´åº¦åºé´æ§ä»¶\r\n */\r\nexport class YearRangeControl implements IControl{\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.YearRange;\r\n    }\r\n\r\n    /**\r\n     * é»è®¤æ¾ç¤º\r\n     */\r\n    placeholder:string;\r\n    beginPlaceHolder:string;\r\n    endPlaceHolder:string;\r\n    /**\r\n     * æ¥ææ ¼å¼\r\n     */\r\n    format:string;\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n    \r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n    showType:string;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * å¹´æåºé´æ§ä»¶\r\n */\r\nexport class MonthRangeControl implements IControl{\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.MonthRange;\r\n    }\r\n\r\n    /**\r\n     * é»è®¤æ¾ç¤º\r\n     */\r\n    placeholder:string;\r\n    beginPlaceHolder:string;\r\n    endPlaceHolder:string;\r\n    /**\r\n     * æ¥ææ ¼å¼\r\n     */\r\n    format:string;\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n    \r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n    showType:string;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * æºè½è¾å¥æ¡æ§ä»¶\r\n */\r\nexport class InputGroupControl implements IControl {\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»åï¼è¿åå¼ï¼æºè½è¾å¥æ¡æ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.InputGroup;\r\n    }\r\n    isRequired(): boolean {\r\n        return !!this.required;\r\n    }\r\n\r\n    /**\r\n     * æ¯å¦åè®¸è¾å¥\r\n     */\r\n    editable: boolean;\r\n\r\n    /**\r\n     * æé®æ¾ç¤ºææ¬\r\n     */\r\n    groupText: string;\r\n\r\n    /**\r\n     * ä½¿ç¨æ¨¡å¼ï¼ææ¬ãå¼¹åºè¡¨åï¼\r\n     */\r\n    usageMode: string;\r\n\r\n    /**\r\n     * å¼¹åºè¡¨åç¸å³éç½®\r\n     */\r\n    dialogOptions: DialogConfig;\r\n\r\n    /**\r\n     * æé®ç¹å»äºä»¶\r\n     */\r\n    click: any;\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n    /**\r\n     * é»è®¤æ¾ç¤º\r\n     */\r\n    placeholder:string;\r\n}\r\n\r\nexport class DialogConfig {\r\n    modalId: string;\r\n    mapFields: any;\r\n    title: string;\r\n    width: number;\r\n    height: number;\r\n    // showButtons: boolean;\r\n    // buttons: DialogButtonConfig[];\r\n}\r\n\r\nexport class DialogButtonConfig {\r\n    text: string;\r\n    cls: any;\r\n    handle: any;\r\n}","import { IValue } from './ivalue';\r\nimport { ControlType } from '../controltype';\r\nimport { EventEmitter } from '@angular/core';\r\nimport { cloneDeep } from 'lodash-es';\r\n\r\nexport class InputGroupValue implements IValue{\r\n    //å¯è½æ¯ç¨æ·æå¨è¾å¥çå­ç¬¦ä¸²ï¼ä¹å¯è½æ¯éè¿å¼¹çªè¿åçå¤ä¸ªå¼\r\n    value: any[];\r\n    //æ§ä»¶åæ¾ç¤ºçå¼\r\n    textValue: string;\r\n    //å¼¹çªæ¨¡å¼ä¸ï¼åå¼¹çªåè¡¨ååªä¸ªå­æ®µçå¼æ å°å°å½åå­æ®µ\r\n    textField: string;\r\n    //æ¯å¦æ¯æå¨è¾å¥çå¼\r\n    isInputText: boolean;\r\n    clear$ = new EventEmitter();\r\n    constructor(data: {\r\n        value: any,\r\n        textValue: string,\r\n        textField: string,\r\n        isInputText: boolean\r\n    } = {value: [], textValue: undefined, textField: undefined, isInputText: undefined}){\r\n        this.value = data.value;\r\n        this.textValue = data.textValue ? data.textValue.trim() : '';\r\n        this.textField = data.textField;\r\n        this.isInputText = data.isInputText;\r\n    }\r\n\r\n    getControlType(): ControlType {\r\n        return ControlType.InputGroup;\r\n    }\r\n\r\n    setOriginalValue(value: any) {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    getOriginalValue(): string {\r\n        if(this.textField){\r\n            const args = this.textField.split('.');\r\n            const textArr = this.value.map(item => this.getPropValue(item, cloneDeep(args)));\r\n            return textArr && textArr.length ? textArr.join(','): '';\r\n        }\r\n        else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    clearValue(): void {\r\n        this.value = [];\r\n        this.textValue = undefined;\r\n        this.textField = undefined;\r\n        this.isInputText = undefined;\r\n        this.clear$.emit();\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return !this.textValue;\r\n    }\r\n\r\n\r\n    getTextValue(targetField: string): string {\r\n        const args = targetField.split('.');\r\n        const textArr = this.value.map(item => this.getPropValue(item, cloneDeep(args)));\r\n        return textArr && textArr.length ? textArr.join(','): '';\r\n    }\r\n\r\n    getPropValue(item: any, args: Array<string>): any{\r\n        if(args.length > 1){\r\n            const arg = args.shift();\r\n            if(arg){\r\n                return item[arg] ? this.getPropValue(item[arg], args) : '';\r\n            }\r\n            else {\r\n                return '';\r\n            }\r\n        }\r\n        return item[args[0]];\r\n    }\r\n\r\n    getValueText():string{\r\n        return this.textValue;\r\n    }\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * æ°å­åºé´æ§ä»¶\r\n */\r\nexport class NumberControl implements IControl{\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.Number;\r\n    }\r\n\r\n    /**\r\n     * é¿åº¦\r\n     */\r\n    length:number;\r\n\r\n    /**\r\n     * ç²¾åº¦\r\n     */\r\n    precision:number;\r\n    /**\r\n     * é»è®¤æ¾ç¤º\r\n     */\r\n    placeholder:string;\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n\r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n    /**æ¯å¦æ¯å¤§æ° */\r\n    bigNumber:boolean;\r\n}","import { IValue } from './ivalue';\r\nimport { ControlType } from '../controltype';\r\nimport { EventEmitter } from '@angular/core';\r\n\r\nexport class NumberValue implements IValue {\r\n    value: number;\r\n    clear$ = new EventEmitter();\r\n    constructor(value: { value: number } = { value: null }) {\r\n        this.value = value.value;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.Number;\r\n    }\r\n    clearValue(): void {\r\n        this.value = undefined;\r\n        this.clear$.emit();\r\n    }\r\n    setOriginalValue(value: any): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    getOriginalValue() {\r\n        return this.value;\r\n    }\r\n    isEmpty(): boolean {\r\n        return !this.value;\r\n    }\r\n\r\n    getValueText(): any {\r\n        if (this.value == undefined || (!this.value && typeof (this.value) != 'undefined' && this.value != 0)) {\r\n            return this.value;\r\n        } else {\r\n            return '' + this.value;\r\n        }\r\n    }\r\n}\r\n","import { IValue } from './ivalue';\r\nimport { ControlType } from '../controltype';\r\nimport { EventEmitter } from '@angular/core';\r\n\r\nexport class FlexibleNumberValue implements IValue {\r\n    startValue: number;\r\n    endValue: number;\r\n    value: number;\r\n    single: boolean;\r\n    clear$ = new EventEmitter();\r\n\r\n    constructor(value: { startValue: number, endValue: number, value: number } = { startValue: null, endValue: null, value: null }, single: boolean = true) {\r\n        this.startValue = value.startValue;\r\n        this.endValue = value.endValue;\r\n        this.value = value.value;\r\n        this.single = single;\r\n    }\r\n\r\n    getControlType(): ControlType {\r\n        return ControlType.FlexibleNumber;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        if (this.single) {\r\n            return !this.value;\r\n        }\r\n        else return (this.startValue == null && this.endValue == null);\r\n    }\r\n    clearValue(): void {\r\n        this.startValue = undefined;\r\n        this.endValue = undefined;\r\n        this.value = undefined;\r\n        this.clear$.emit();\r\n    }\r\n    setOriginalValue(value: any): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    getOriginalValue() {\r\n        return {\r\n            begin: this.startValue,\r\n            end: this.endValue,\r\n            value: this.value\r\n        };\r\n    }\r\n\r\n\r\n    getValueText(): any {\r\n        if (this.single) {\r\n            if (this.value == undefined || (!this.value && typeof (this.value) != 'undefined' && this.value != 0)) {\r\n                return this.value;\r\n            }\r\n            else {\r\n                return '' + this.value;\r\n            }\r\n        }\r\n        else {\r\n            if (this.startValue == undefined && this.endValue == undefined) {\r\n                return '';\r\n            }\r\n            else if (this.startValue == undefined) {\r\n                return ('~' + this.endValue);\r\n            }\r\n            else if (this.endValue == undefined) {\r\n                return (this.startValue + '~');\r\n            }\r\n            else {\r\n                return (this.startValue + '~' + this.endValue);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { IControl } from \"./icontrol\";\r\nimport { ControlType } from \"./../controltype\";\r\n\r\n/**\r\n * æ°å­åºé´æ§ä»¶\r\n */\r\nexport class FlexibleNumberControl implements IControl{\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.FlexibleNumber;\r\n    }\r\n\r\n    /**\r\n     * é¿åº¦\r\n     */\r\n    length:number;\r\n\r\n    /**\r\n     * ç²¾åº¦\r\n     */\r\n    precision:number;\r\n    /**\r\n     * é»è®¤æ¾ç¤º\r\n     */\r\n    placeholder:string;\r\n    beginPlaceHolder:string;\r\n    endPlaceHolder:string;\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n\r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n    /**æ¯å¦æ¯å¤§æ° */\r\n    bigNumber:boolean;\r\n    /**æ¯å¦æ¯åæ°å¼ */\r\n    single:boolean;\r\n}","import { IValue } from './ivalue';\r\nimport { ControlType } from '../controltype';\r\nimport { EventEmitter } from '@angular/core';\r\nimport { DateTimeHelperService } from '@farris/ui-common/date';\r\n\r\nexport class FlexibleDateValue implements IValue {\r\n    startValue: string;\r\n    endValue: string;\r\n    value: string;\r\n    single: boolean;\r\n    clear$ = new EventEmitter();\r\n\r\n    constructor(value: { startValue: string, endValue: string, value: string } = { startValue: null, endValue: null, value: null }, single: boolean = true) {\r\n        this.startValue = value.startValue;\r\n        this.endValue = value.endValue;\r\n        this.value = value.value;\r\n        this.single = single;\r\n    }\r\n\r\n    getControlType(): ControlType {\r\n        return ControlType.FlexibleDate;\r\n    }\r\n    isEmpty(): boolean {\r\n        if (this.single) {\r\n            return !this.value;\r\n        } else {\r\n            return (this.startValue == null && this.endValue == null);\r\n        }\r\n    }\r\n    clearValue(): void {\r\n        this.startValue = undefined;\r\n        this.endValue = undefined;\r\n        this.value = undefined;\r\n        this.clear$.emit();\r\n    }\r\n    setOriginalValue(value: any): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    getOriginalValue() {\r\n        return {\r\n            begin: this.startValue,\r\n            end: this.endValue,\r\n            value: this.value\r\n        };\r\n    }\r\n\r\n\r\n    getValueText(ctrl?: any): any {\r\n        if (this.single) {\r\n            if (this.value == undefined || (!this.value && typeof (this.value) != 'undefined')) {\r\n                return this.value;\r\n            }\r\n            else {\r\n                return '' + this.value;\r\n            }\r\n        }\r\n        else {\r\n            if (this.startValue == undefined && this.endValue == undefined) {\r\n                return '';\r\n            } else {\r\n                if (ctrl && ctrl.format) {\r\n                    const dateHlp = new DateTimeHelperService();\r\n                    if (this.startValue == undefined) {\r\n                        return ('~' +  dateHlp.formatTo(this.endValue, ctrl.format));\r\n                    }\r\n                    else if (this.endValue == undefined) {\r\n                        return (dateHlp.formatTo(this.startValue, ctrl.format) + '~');\r\n                    }\r\n                    else {\r\n                        return dateHlp.formatTo(this.startValue, ctrl.format) +'~'+ dateHlp.formatTo(this.endValue, ctrl.format);\r\n                    }\r\n                } else {\r\n                    if (this.startValue == undefined) {\r\n                        return ('~' + this.endValue);\r\n                    }\r\n                    else if (this.endValue == undefined) {\r\n                        return (this.startValue + '~');\r\n                    }\r\n                    else {\r\n                        return (this.startValue + '~' + this.endValue);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { IControl } from \"./icontrol\";\r\nimport { ControlType } from \"../controltype\";\r\n\r\n/**\r\n * æ°å­åºé´æ§ä»¶\r\n */\r\nexport class FlexibleDateControl implements IControl{\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.FlexibleDate;\r\n    }\r\n\r\n    /**\r\n     * é¿åº¦\r\n     */\r\n    length:number;\r\n\r\n    /**\r\n     * é»è®¤æ¾ç¤º\r\n     */\r\n    placeholder:string;\r\n    beginPlaceHolder:string;\r\n    endPlaceHolder:string;\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n\r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n    /**æ¯å¦æ¯åæ°å¼ */\r\n    single:boolean;\r\n    showType:string;\r\n    /**\r\n     * æ¥ææ ¼å¼\r\n     */\r\n    format:string;\r\n    showTime:boolean;\r\n}","import { Injectable } from '@angular/core';\r\nimport { CheckboxGroupValue } from './entity/conditionvalue/checkboxgroupvalue';\r\nimport { HelpValue } from './entity/conditionvalue/helpvalue';\r\nimport { TextValue } from './entity/conditionvalue/textvalue';\r\nimport { FieldConfig } from './entity/fieldconfig/fieldconfig';\r\nimport { TextControl } from './entity/controltype/text/textcontrol';\r\nimport { SearchValue } from './entity/conditionvalue/searchvalue';\r\nimport { DateValue } from './entity/conditionvalue/datevalue';\r\nimport { DateRangeValue } from './entity/conditionvalue/daterangevalue';\r\nimport { DateRangeTimeValue } from './entity/conditionvalue/daterangetimevalue';\r\nimport { DropDownListValue } from './entity/conditionvalue/dropdownlistvalue';\r\nimport { NumberRangeValue } from './entity/conditionvalue/numberrangevaue';\r\nimport { IControl } from './entity/controltype/icontrol';\r\nimport { DateControl } from './entity/controltype/date/datecontrol';\r\nimport { NumberRangeControl } from './entity/controltype/numberrange/numberrangecontrol';\r\nimport { SearchControl } from './entity/controltype/search/searchcontrol';\r\nimport { DropDownControl } from './entity/controltype/dropdownlist/dropdowncontrol';\r\nimport { EnumType } from './entity/controltype/dropdownlist/enumtype';\r\nimport { EnumBoolValue } from './entity/controltype/dropdownlist/boolenumvalue';\r\nimport { EnumStringValue } from './entity/controltype/dropdownlist/stringenumvalue';\r\nimport { EnumIntegerValue } from './entity/controltype/dropdownlist/integerenumvalue';\r\nimport { HelpContol } from './entity/controltype/help/helpcontrol';\r\nimport { CheckboxValue } from './entity/controltype/checkbox/checkboxvalue';\r\nimport { DateRangeControl } from './entity/controltype/datarange/daterangecontrol';\r\nimport { DateRangeTimeControl } from './entity/controltype/datarangetime/daterangetimecontrol';\r\nimport { CheckboxGroupControl } from './entity/controltype/checkbox/checkboxcontrol';\r\nimport { RadioControl } from './entity/controltype/radio/radiocontrol';\r\nimport { RadioGroupValue } from './entity/conditionvalue/radiovalue';\r\nimport { RadioIEnumValue } from './entity/controltype/radio/ienumvalue';\r\nimport { YearValue } from './entity/conditionvalue/yearvalue';\r\nimport { MonthValue } from './entity/conditionvalue/month';\r\nimport { YearRangeValue } from './entity/conditionvalue/yearrange';\r\nimport { MonthRangeValue } from './entity/conditionvalue/monthrange';\r\nimport { YearControl } from './entity/controltype/year/yearcontrol';\r\nimport { MonthControl } from './entity/controltype/month/monthcontrol';\r\nimport { YearRangeControl } from './entity/controltype/yearrange/yearrangecontrol';\r\nimport { MonthRangeControl } from './entity/controltype/monthrange/monthrangecontrol';\r\nimport { DialogButtonConfig, DialogConfig, InputGroupControl } from './entity/controltype/input-group/inputgroupcontrol';\r\nimport { InputGroupValue } from './entity/conditionvalue/inputgroup';\r\nimport { NumberControl } from './entity/controltype/number/numbercontrol';\r\nimport { NumberValue } from './entity/conditionvalue/numbervalue';\r\nimport { FlexibleNumberValue } from './entity/conditionvalue/flexiblenumbervalue';\r\nimport { FlexibleNumberControl } from './entity/controltype/flexiblenumbercontrol';\r\nimport { FlexibleDateValue } from './entity/conditionvalue/flexibledatevalue';\r\nimport { FlexibleDateControl } from './entity/controltype/flexibledatecontrol';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class FilterService {\r\n\r\n\tconstructor() { }\r\n\tfieldSchemasConvert(filedSchemas: Array<any>): Array<FieldConfig> {\r\n\t\tconst fieldConfigs = new Array<FieldConfig>();\r\n\t\tif (!(filedSchemas) || filedSchemas.length <= 0) {\r\n\t\t\treturn fieldConfigs;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tfiledSchemas.forEach(filedSchema => {\r\n\t\t\t\tconst fieldConfig = new FieldConfig();\r\n\t\t\t\tfieldConfig.id = filedSchema.hasOwnProperty('id') ? filedSchema.id : '';\r\n\t\t\t\tfieldConfig.labelCode = filedSchema.labelCode;\r\n\t\t\t\tfieldConfig.code = filedSchema.hasOwnProperty('code') ? filedSchema.code : '';\r\n\t\t\t\tfieldConfig.placeHolder = filedSchema.placeHolder;\r\n\t\t\t\tfieldConfig.beginPlaceHolder = filedSchema.beginPlaceHolder;\r\n\t\t\t\tfieldConfig.endPlaceHolder = filedSchema.endPlaceHolder;\r\n\t\t\t\tfieldConfig.name = filedSchema.name || filedSchema.fieldName;\r\n\t\t\t\tif (filedSchema.value) {\r\n\t\t\t\t\tfieldConfig.filled = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfieldConfig.filled = false;\r\n\t\t\t\t}\r\n\t\t\t\tif (!(filedSchema.control) || !(filedSchema.control.controltype)) {\r\n\t\t\t\t\tfieldConfig.control = new TextControl();\r\n\t\t\t\t\tfieldConfig.value = new TextValue(filedSchema.value);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (filedSchema.control.controltype == 'text') {\r\n\t\t\t\t\t\tfieldConfig.control = this.getTextControl(filedSchema);\r\n\t\t\t\t\t\tfieldConfig.value = new TextValue(filedSchema.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (filedSchema.control.controltype == 'search') {\r\n\t\t\t\t\t\tfieldConfig.control = this.getSearchControl(filedSchema);\r\n\t\t\t\t\t\tfieldConfig.value = new SearchValue(filedSchema.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (filedSchema.control.controltype == 'singleDate') {\r\n\t\t\t\t\t\tfieldConfig.control = this.getDateControl(filedSchema);\r\n\t\t\t\t\t\tfieldConfig.value = new DateValue(filedSchema.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (filedSchema.control.controltype == 'year') {\r\n\t\t\t\t\t\tfieldConfig.control = this.getYearControl(filedSchema);\r\n\t\t\t\t\t\tfieldConfig.value = new YearValue(filedSchema.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (filedSchema.control.controltype == 'month') {\r\n\t\t\t\t\t\tfieldConfig.control = this.getMonthControl(filedSchema);\r\n\t\t\t\t\t\tfieldConfig.value = new MonthValue(filedSchema.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (filedSchema.control.controltype == 'yearRange') {\r\n\t\t\t\t\t\tfieldConfig.control = this.getYearRangeControl(filedSchema);\r\n\t\t\t\t\t\tfieldConfig.value = new YearRangeValue(filedSchema.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (filedSchema.control.controltype == 'monthRange') {\r\n\t\t\t\t\t\tfieldConfig.control = this.getMonthRangeControl(filedSchema);\r\n\t\t\t\t\t\tfieldConfig.value = new MonthRangeValue(filedSchema.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (filedSchema.control.controltype == 'date') {\r\n\t\t\t\t\t\tfieldConfig.control = this.getDateRangeControl(filedSchema);\r\n\t\t\t\t\t\tfieldConfig.value = new DateRangeValue(filedSchema.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (filedSchema.control.controltype == 'datetime') {\r\n\t\t\t\t\t\tfieldConfig.control = this.getDateRangeTimeControl(filedSchema);\r\n\t\t\t\t\t\tfieldConfig.value = new DateRangeTimeValue(filedSchema.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (filedSchema.control.controltype == 'dropdown') {\r\n\t\t\t\t\t\tfieldConfig.control = this.getDropDownControl(filedSchema);\r\n\t\t\t\t\t\tfieldConfig.value = new DropDownListValue(filedSchema.value);\r\n\t\t\t\t\t\t// fieldConfig.control = this.getRadioControl(filedSchema);\r\n\t\t\t\t\t\t// fieldConfig.value = new RadioGroupValue(filedSchema.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (filedSchema.control.controltype == 'number') {\r\n\t\t\t\t\t\tfieldConfig.control = this.getNumberRangeControl(filedSchema);\r\n\t\t\t\t\t\tfieldConfig.value = new NumberRangeValue(filedSchema.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (filedSchema.control.controltype == 'help') {\r\n\t\t\t\t\t\tfieldConfig.control = this.getLookUpEditControl(filedSchema);\r\n\t\t\t\t\t\tfieldConfig.value = new HelpValue(filedSchema.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (filedSchema.control.controltype == 'checkboxgroup') {\r\n\t\t\t\t\t\tfieldConfig.control = this.getCheckboxGroupControl(filedSchema);\r\n\t\t\t\t\t\tfieldConfig.value = new CheckboxGroupValue(filedSchema.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (filedSchema.control.controltype == 'radio') {\r\n\t\t\t\t\t\tfieldConfig.control = this.getRadioControl(filedSchema);\r\n\t\t\t\t\t\tfieldConfig.value = new RadioGroupValue(filedSchema.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (filedSchema.control.controltype == 'input-group') {\r\n\t\t\t\t\t\tfieldConfig.control = this.getInputGroupControl(filedSchema);\r\n\t\t\t\t\t\tfieldConfig.value = new InputGroupValue(filedSchema.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (filedSchema.control.controltype == 'singlenumber') {\r\n\t\t\t\t\t\tfieldConfig.control = this.getNumberControl(filedSchema);\r\n\t\t\t\t\t\tfieldConfig.value = new NumberValue(filedSchema.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (filedSchema.control.controltype == 'flexibleNumber') {\r\n\t\t\t\t\t\tfieldConfig.control = this.getFlexibleNumberControl(filedSchema);\r\n\t\t\t\t\t\tfieldConfig.value = new FlexibleNumberValue(filedSchema.value, fieldConfig.control['single']);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (filedSchema.control.controltype == 'flexibleDate') {\r\n\t\t\t\t\t\tfieldConfig.control = this.getFlexibleDateControl(filedSchema);\r\n\t\t\t\t\t\tfieldConfig.value = new FlexibleDateValue(filedSchema.value, fieldConfig.control['single']);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (filedSchema.control.controltype == 'bool-check') {\r\n\t\t\t\t\t\tfiledSchema.control.enumValues = [{ value: \"true\", name: filedSchema.name }];\r\n\t\t\t\t\t\tfieldConfig.control = this.getCheckboxGroupControl(filedSchema, true);\r\n\t\t\t\t\t\tfieldConfig.value = new CheckboxGroupValue(filedSchema.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tfieldConfig.control = this.getTextControl(filedSchema);\r\n\t\t\t\t\t\tfieldConfig.value = new TextValue(filedSchema.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfieldConfig.valueText = fieldConfig.value.getValueText();\r\n\t\t\t\t// if(filedSchema.control.controltype == 'dropdown'){\r\n\t\t\t\t//   fieldConfig.control.controltype = 'radio'\r\n\t\t\t\t// }\r\n\t\t\t\t// else{\r\n\t\t\t\tfieldConfig.control.controltype = filedSchema.control.controltype;\r\n\t\t\t\t//  }\r\n\t\t\t\tfieldConfigs.push(fieldConfig);\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn fieldConfigs;\r\n\t}\r\n\r\n\tprivate getTextControl(filedSchema: any): IControl {\r\n\t\tlet textControl = new TextControl();\r\n\t\ttextControl.placeholder = filedSchema.control.placeholder ? filedSchema.control.placeholder : '';\r\n\t\ttextControl.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n\t\ttextControl.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n\t\ttextControl.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n\t\treturn textControl;\r\n\t}\r\n\tprivate getInputGroupControl(filedSchema: any): IControl {\r\n\t\tlet inputGroupControl = new InputGroupControl();\r\n\t\tinputGroupControl.placeholder = filedSchema.control.placeholder ? filedSchema.control.placeholder : '';\r\n\t\tinputGroupControl.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n\t\tinputGroupControl.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n\t\tinputGroupControl.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n\t\tinputGroupControl.editable = filedSchema.control.hasOwnProperty('editable') ? filedSchema.control.editable : true;\r\n\t\tinputGroupControl.groupText = filedSchema.control.hasOwnProperty('groupText') ? filedSchema.control.groupText : '<span class=\"f-icon f-icon-lookup\"></span>';\r\n\t\tinputGroupControl.usageMode = filedSchema.control.usageMode;\r\n\t\tinputGroupControl.dialogOptions = this.setInputGroupDialog(filedSchema.control.usageMode, filedSchema.control.modalConfig, filedSchema.id);\r\n\t\tinputGroupControl.click = filedSchema.control.click;\r\n\t\treturn inputGroupControl;\r\n\t}\r\n\tprivate getDateControl(filedSchema: any): IControl {\r\n\t\tlet dateControl = new DateControl();\r\n\t\tdateControl.placeholder = filedSchema.control.placeholder ? filedSchema.control.placeholder : '';\r\n\t\tdateControl.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n\t\tdateControl.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n\t\tdateControl.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n\t\tdateControl.format = filedSchema.control.format;\r\n\t\tdateControl.compareType = filedSchema.control.hasOwnProperty('compareType') ? filedSchema.control.compareType : 0;\r\n\t\t// dateControl.showType = filedSchema.control.hasOwnProperty('showType')? filedSchema.control.showType : '';\r\n\t\treturn dateControl;\r\n\t}\r\n\tprivate getYearControl(filedSchema: any): IControl {\r\n\t\tlet yearControl = new YearControl();\r\n\t\tyearControl.placeholder = filedSchema.control.placeholder ? filedSchema.control.placeholder : '';\r\n\t\tyearControl.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n\t\tyearControl.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n\t\tyearControl.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n\t\tyearControl.format = filedSchema.control.hasOwnProperty('format') ? filedSchema.control.format : '';\r\n\t\tyearControl.compareType = filedSchema.control.hasOwnProperty('compareType') ? filedSchema.control.compareType : 0;\r\n\t\t// yearControl.showType = filedSchema.control.hasOwnProperty('showType')? filedSchema.control.showType : '';\r\n\t\treturn yearControl;\r\n\t}\r\n\tprivate getMonthControl(filedSchema: any): IControl {\r\n\t\tlet monthControl = new MonthControl();\r\n\t\tmonthControl.placeholder = filedSchema.control.placeholder ? filedSchema.control.placeholder : '';\r\n\t\tmonthControl.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n\t\tmonthControl.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n\t\tmonthControl.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n\t\tmonthControl.format = filedSchema.control.hasOwnProperty('format') ? filedSchema.control.format : '';\r\n\t\tmonthControl.compareType = filedSchema.control.hasOwnProperty('compareType') ? filedSchema.control.compareType : 0;\r\n\t\t// yearControl.showType = filedSchema.control.hasOwnProperty('showType')? filedSchema.control.showType : '';\r\n\t\treturn monthControl;\r\n\t}\r\n\tprivate getYearRangeControl(filedSchema: any): IControl {\r\n\t\tlet yearRangeControl = new YearRangeControl();\r\n\t\tyearRangeControl.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n\t\tyearRangeControl.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n\t\tyearRangeControl.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n\t\tyearRangeControl.placeholder = filedSchema.control.placeholder ? filedSchema.control.placeholder : '';\r\n\t\tyearRangeControl.beginPlaceHolder = filedSchema.control.beginPlaceHolder ? filedSchema.control.beginPlaceHolder : '';\r\n\t\tyearRangeControl.endPlaceHolder = filedSchema.control.endPlaceHolder ? filedSchema.control.endPlaceHolder : '';\r\n\t\tyearRangeControl.format = filedSchema.control.hasOwnProperty('format') ? filedSchema.control.format : '';\r\n\t\treturn yearRangeControl;\r\n\t}\r\n\tprivate getMonthRangeControl(filedSchema: any): IControl {\r\n\t\tlet monthRangeControl = new MonthRangeControl();\r\n\t\tmonthRangeControl.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n\t\tmonthRangeControl.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n\t\tmonthRangeControl.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n\t\tmonthRangeControl.placeholder = filedSchema.control.placeholder ? filedSchema.control.placeholder : '';\r\n\t\tmonthRangeControl.beginPlaceHolder = filedSchema.control.beginPlaceHolder ? filedSchema.control.beginPlaceHolder : '';\r\n\t\tmonthRangeControl.endPlaceHolder = filedSchema.control.endPlaceHolder ? filedSchema.control.endPlaceHolder : '';\r\n\t\tmonthRangeControl.format = filedSchema.control.hasOwnProperty('format') ? filedSchema.control.format : '';\r\n\t\treturn monthRangeControl;\r\n\t}\r\n\tprivate getNumberRangeControl(filedSchema: any): IControl {\r\n\t\tlet numberRangeControl = new NumberRangeControl();\r\n\t\tnumberRangeControl.placeholder = filedSchema.control.placeholder ? filedSchema.control.placeholder : '';\r\n\t\tnumberRangeControl.beginPlaceHolder = filedSchema.control.beginPlaceHolder ? filedSchema.control.beginPlaceHolder : '';\r\n\t\tnumberRangeControl.endPlaceHolder = filedSchema.control.endPlaceHolder ? filedSchema.control.endPlaceHolder : '';\r\n\t\tnumberRangeControl.precision = filedSchema.control.hasOwnProperty('precision') ? filedSchema.control.precision : 2;\r\n\t\tnumberRangeControl.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n\t\tnumberRangeControl.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n\t\tnumberRangeControl.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n\t\tnumberRangeControl.bigNumber = filedSchema.control.hasOwnProperty('bigNumber') ? filedSchema.control.bigNumber : false;\r\n\t\treturn numberRangeControl;\r\n\t}\r\n\r\n\tprivate getNumberControl(filedSchema: any): IControl {\r\n\t\tlet numberControl = new NumberControl();\r\n\t\tnumberControl.precision = filedSchema.control.hasOwnProperty('precision') ? filedSchema.control.precision : 2;\r\n\t\tnumberControl.placeholder = filedSchema.control.placeholder ? filedSchema.control.placeholder : '';\r\n\t\tnumberControl.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n\t\tnumberControl.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n\t\tnumberControl.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n\t\tnumberControl.bigNumber = filedSchema.control.hasOwnProperty('bigNumber') ? filedSchema.control.bigNumber : false;\r\n\t\treturn numberControl;\r\n\t}\r\n\r\n\tprivate getFlexibleNumberControl(filedSchema: any): IControl {\r\n\t\tlet flexiblenumberControl = new FlexibleNumberControl();\r\n\t\tflexiblenumberControl.placeholder = filedSchema.control.placeholder ? filedSchema.control.placeholder : '';\r\n\t\tflexiblenumberControl.beginPlaceHolder = filedSchema.control.beginPlaceHolder ? filedSchema.control.beginPlaceHolder : '';\r\n\t\tflexiblenumberControl.endPlaceHolder = filedSchema.control.endPlaceHolder ? filedSchema.control.endPlaceHolder : '';\r\n\t\tflexiblenumberControl.precision = filedSchema.control.hasOwnProperty('precision') ? filedSchema.control.precision : 2;\r\n\t\tflexiblenumberControl.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n\t\tflexiblenumberControl.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n\t\tflexiblenumberControl.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n\t\tflexiblenumberControl.bigNumber = filedSchema.control.hasOwnProperty('bigNumber') ? filedSchema.control.bigNumber : false;\r\n\t\tflexiblenumberControl.single = filedSchema.control.hasOwnProperty('single') ? filedSchema.control.single : true;\r\n\t\treturn flexiblenumberControl;\r\n\t}\r\n\tprivate getFlexibleDateControl(filedSchema: any): IControl {\r\n\t\tlet flexibledateControl = new FlexibleDateControl();\r\n\t\tflexibledateControl.placeholder = filedSchema.control.placeholder ? filedSchema.control.placeholder : '';\r\n\t\tflexibledateControl.beginPlaceHolder = filedSchema.control.beginPlaceHolder ? filedSchema.control.beginPlaceHolder : '';\r\n\t\tflexibledateControl.endPlaceHolder = filedSchema.control.endPlaceHolder ? filedSchema.control.endPlaceHolder : '';\r\n\t\tflexibledateControl.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n\t\tflexibledateControl.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n\t\tflexibledateControl.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n\t\tflexibledateControl.single = filedSchema.control.hasOwnProperty('single') ? filedSchema.control.single : true;\r\n\t\tflexibledateControl.format = filedSchema.control.hasOwnProperty('format') ? filedSchema.control.format : '';\r\n\t\tflexibledateControl.showType = filedSchema.control.showType;\r\n\t\tflexibledateControl.showTime = filedSchema.control.showTime;\r\n\t\treturn flexibledateControl;\r\n\t}\r\n\r\n\tprivate getSearchControl(filedSchema: any): IControl {\r\n\t\tlet searchControl = new SearchControl();\r\n\t\tsearchControl.placeholder = filedSchema.control.placeholder ? filedSchema.control.placeholder : '';\r\n\t\tsearchControl.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n\t\tsearchControl.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n\t\tsearchControl.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n\t\treturn searchControl;\r\n\t}\r\n\tprivate getDropDownControl(filedSchema: any): IControl {\r\n\t\tlet dropdowncontrol = new DropDownControl();\r\n\t\tdropdowncontrol.placeholder = filedSchema.control.placeholder ? filedSchema.control.placeholder : '';\r\n\t\tfiledSchema.control.valueType = filedSchema.control.valueType ? filedSchema.control.valueType : '1';\r\n\t\tdropdowncontrol.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n\t\tdropdowncontrol.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n\t\tdropdowncontrol.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n\t\tif (filedSchema.control.valueType == \"1\") {\r\n\t\t\tdropdowncontrol.valueType = EnumType.StringType;\r\n\t\t\tdropdowncontrol.enumValues = filedSchema.control.enumValues as Array<EnumStringValue>;\r\n\t\t}\r\n\t\telse if (filedSchema.control.valueType == \"2\") {\r\n\t\t\tdropdowncontrol.valueType = EnumType.BoolType;\r\n\t\t\tdropdowncontrol.enumValues = filedSchema.control.enumValues as Array<EnumBoolValue>;\r\n\t\t}\r\n\t\telse if (filedSchema.control.valueType == \"0\") {\r\n\t\t\tdropdowncontrol.valueType = EnumType.IntType;\r\n\t\t\tdropdowncontrol.enumValues = filedSchema.control.enumValues as Array<EnumIntegerValue>;\r\n\t\t}\r\n\t\treturn dropdowncontrol;\r\n\t}\r\n\r\n\tprivate getLookUpEditControl(filedSchema: any): IControl {\r\n\t\tlet lookupEdit = new HelpContol();\r\n\t\tif (!!(filedSchema.control.uri)) {\r\n\t\t\tlookupEdit.uri = filedSchema.control.uri;\r\n\t\t}\r\n\t\tlookupEdit.textField = filedSchema.control.textField;\r\n\t\tlookupEdit.valueField = filedSchema.control.valueField;\r\n\t\tlookupEdit.idField = filedSchema.control.idField;\r\n\t\tlookupEdit.helpId = filedSchema.control.helpId;\r\n\t\tlookupEdit.mapFields = filedSchema.control.mapFields;\r\n\t\tlookupEdit.context = filedSchema.control.context;\r\n\t\tlookupEdit.preEventCmd = filedSchema.control.preEventCmd;\r\n\t\tlookupEdit.postEventCmd = filedSchema.control.postEventCmd;\r\n\t\tlookupEdit.enableFullTree = filedSchema.control.enableFullTree;\r\n\t\tlookupEdit.loadTreeDataType = filedSchema.control.loadTreeDataType;\r\n\t\t//æ°å¢\r\n\t\tlookupEdit.singleSelect = filedSchema.control.hasOwnProperty('singleSelect') ? filedSchema.control.singleSelect : true;\r\n\t\tlookupEdit.expandLevel = filedSchema.control.expandLevel;\r\n\t\tlookupEdit.enableCascade = filedSchema.control.enableCascade;\r\n\t\tlookupEdit.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n\t\tlookupEdit.displayType = filedSchema.control.hasOwnProperty('displayType') ? filedSchema.control.displayType : \"LIST\";\r\n\t\tlookupEdit.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n\t\tlookupEdit.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n\t\tlookupEdit.placeholder = filedSchema.control.placeholder ? filedSchema.control.placeholder : '';\r\n\t\treturn lookupEdit;\r\n\t}\r\n\tprivate getCheckboxGroupControl(filedSchema: any, boolcheck: boolean = false): IControl {\r\n\t\tlet checkboxGroupcontrol = new CheckboxGroupControl();\r\n\t\tcheckboxGroupcontrol.enumValues = filedSchema.control.enumValues as Array<CheckboxValue>;\r\n\t\tcheckboxGroupcontrol.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n\t\tcheckboxGroupcontrol.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n\t\tcheckboxGroupcontrol.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n\t\tif (boolcheck) checkboxGroupcontrol.boolcheck = true;\r\n\t\treturn checkboxGroupcontrol;\r\n\t}\r\n\tprivate getDateRangeControl(filedSchema: any): IControl {\r\n\t\tlet dateRangeControl = new DateRangeControl();\r\n\t\tdateRangeControl.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n\t\tdateRangeControl.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n\t\tdateRangeControl.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n\t\tdateRangeControl.placeholder = filedSchema.control.placeholder ? filedSchema.control.placeholder : '';\r\n\t\tdateRangeControl.beginPlaceHolder = filedSchema.control.beginPlaceHolder ? filedSchema.control.beginPlaceHolder : '';\r\n\t\tdateRangeControl.endPlaceHolder = filedSchema.control.endPlaceHolder ? filedSchema.control.endPlaceHolder : '';\r\n\t\tdateRangeControl.format = filedSchema.control.format;\r\n\t\t// dateRangeControl.showType = filedSchema.control.hasOwnProperty('showType')? filedSchema.control.showType : '';\r\n\t\treturn dateRangeControl;\r\n\t}\r\n\tprivate getDateRangeTimeControl(filedSchema: any): IControl {\r\n\t\tlet dateRangeControl = new DateRangeTimeControl();\r\n\t\tdateRangeControl.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n\t\tdateRangeControl.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n\t\tdateRangeControl.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n\t\tdateRangeControl.placeholder = filedSchema.control.placeholder ? filedSchema.control.placeholder : '';\r\n\t\tdateRangeControl.beginPlaceHolder = filedSchema.control.beginPlaceHolder ? filedSchema.control.beginPlaceHolder : '';\r\n\t\tdateRangeControl.endPlaceHolder = filedSchema.control.endPlaceHolder ? filedSchema.control.endPlaceHolder : '';\r\n\t\tdateRangeControl.format = filedSchema.control.format;\r\n\t\treturn dateRangeControl;\r\n\t}\r\n\r\n\tprivate getRadioControl(filedSchema: any): IControl {\r\n\t\tlet checkboxGroupcontrol = new RadioControl();\r\n\t\tcheckboxGroupcontrol.enumValues = filedSchema.control.enumValues as Array<RadioIEnumValue>;\r\n\t\tcheckboxGroupcontrol.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n\t\tcheckboxGroupcontrol.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n\t\tcheckboxGroupcontrol.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n\t\treturn checkboxGroupcontrol;\r\n\t}\r\n\r\n\t/**\r\n   * æºè½è¾å¥æ¡æ§ä»¶éè¦å¼¹åºè¡¨åæ¶ï¼å°è¡¨åéç½®JSONæè¿°è½¬æ¢ä¸ºå¼¹åºè¡¨åå½ä»¤å¯æ¥æ¶çå¼¹çªåæ°\r\n   * @param usageMode æºè½è¾å¥æ¡æ§ä»¶ä½¿ç¨æ¨¡å¼\r\n   * @param modalConfigData è¡¨åéç½®JSONæè¿°\r\n   * @returns å¼¹åºè¡¨åå½ä»¤å¯æ¥æ¶çå¼¹çªåæ°\r\n   */\r\n\tprivate setInputGroupDialog(usageMode: string, modalConfigData: any, id: string): DialogConfig {\r\n\t\tif (usageMode == 'text' || usageMode == undefined || modalConfigData == undefined || id == undefined) {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\r\n\t\tlet dialogConfig = new DialogConfig();\r\n\t\t//dialogConfig.modalId = modalConfigData.modalId;\r\n\t\tdialogConfig.modalId = id;\r\n\t\tif (modalConfigData.mapFields) {\r\n\t\t\tdialogConfig.mapFields = JSON.parse(modalConfigData.mapFields.replace(/\\'/g, '\"'));\r\n\t\t}\r\n\t\tif (modalConfigData.showHeader) {\r\n\t\t\tdialogConfig.title = modalConfigData.title;\r\n\t\t}\r\n\t\tdialogConfig.width = modalConfigData.width;\r\n\t\tdialogConfig.height = modalConfigData.height;\r\n\t\t// dialogConfig.showButtons = modalConfigData.showFooterButtons;\r\n\t\t// dialogConfig.buttons = this.setInputGroupDialogButtons(modalConfigData.footerButtons);\r\n\t\treturn dialogConfig;\r\n\t}\r\n\r\n\t/**\r\n\t* æºè½è¾å¥æ¡æ§ä»¶éè¦å¼¹åºè¡¨åæ¶ï¼å°å¼¹çªæé®ç»éç½®JSONæè¿°è½¬æ¢ä¸ºå¼¹åºè¡¨åå½ä»¤å¯æ¥æ¶çå¼¹çªæé®ç»åæ°\r\n\t* @param buttonData å¼¹çªæé®ç»éç½®JSONæè¿°\r\n\t* @returns å¼¹åºè¡¨åå½ä»¤å¯æ¥æ¶çå¼¹çªæé®ç»åæ°\r\n\t*/\r\n\tprivate setInputGroupDialogButtons(buttonData: any): Array<DialogButtonConfig> {\r\n\t\tif (!buttonData) {\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\tlet button: DialogButtonConfig;\r\n\t\treturn buttonData.map(item => {\r\n\t\t\tbutton = new DialogButtonConfig();\r\n\t\t\tbutton.text = item.text;\r\n\t\t\tif (item.appearance && item.appearance.class) {\r\n\t\t\t\tbutton.cls = item.appearance.class;\r\n\t\t\t}\r\n\t\t\tbutton.handle = item.click;\r\n\t\t\treturn button;\r\n\t\t});\r\n\t}\r\n\r\n\t//æ ¹æ®ç±»åï¼new valueå¼\r\n\tsetValues(controltype, value, single: boolean = true) {\r\n\t\tif (controltype == 'input') {\r\n\t\t\treturn new TextValue({ 'value': value });\r\n\t\t}\r\n\t\telse if (controltype == 'search') {\r\n\t\t\treturn new SearchValue({ 'value': value });\r\n\t\t}\r\n\t\telse if (controltype == 'date') {\r\n\t\t\treturn new DateValue({ 'value': value });\r\n\t\t}\r\n\t\telse if (controltype == 'year') {\r\n\t\t\treturn new YearValue({ 'value': value });\r\n\t\t}\r\n\t\telse if (controltype == 'month') {\r\n\t\t\treturn new MonthValue({ 'value': value });\r\n\t\t}\r\n\t\telse if (controltype == 'daterange') {\r\n\t\t\treturn new DateRangeValue(value);\r\n\t\t}\r\n\t\telse if (controltype == 'daterangetime') {\r\n\t\t\treturn new DateRangeTimeValue(value);\r\n\t\t}\r\n\t\telse if (controltype == 'yearrange') {\r\n\t\t\treturn new YearRangeValue(value);\r\n\t\t}\r\n\t\telse if (controltype == 'monthrange') {\r\n\t\t\treturn new MonthRangeValue(value);\r\n\t\t}\r\n\t\telse if (controltype == 'dropdown' || controltype == 'radio') {\r\n\t\t\treturn new RadioGroupValue({ 'value': value });\r\n\t\t}\r\n\t\telse if (controltype == 'number') {\r\n\t\t\treturn new NumberRangeValue(value);\r\n\t\t}\r\n\t\telse if (controltype == 'help') {\r\n\t\t\treturn new HelpValue(value);\r\n\t\t}\r\n\t\telse if (controltype == 'checkboxgroup') {\r\n\t\t\treturn new CheckboxGroupValue({ 'value': value });\r\n\t\t}\r\n\t\telse if (controltype == 'input-group') {\r\n\t\t\treturn new InputGroupValue(value);\r\n\t\t}\r\n\t\telse if (controltype == 'singlenumber') {\r\n\t\t\treturn new NumberValue({ 'value': value });\r\n\t\t}\r\n\t\telse if (controltype == 'flexiblenumber') {\r\n\t\t\treturn new FlexibleNumberValue(value, single);\r\n\t\t}\r\n\t\telse if (controltype == 'flexibledate') {\r\n\t\t\treturn new FlexibleDateValue(value, single);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn new TextValue({ 'value': value });\r\n\t\t}\r\n\t}\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { CompareType } from \"./comparetype\";\r\nimport { ValueType } from \"./valuetype\";\r\nimport { RelationType } from \"./relationtype\";\r\nimport { IControl, ControlConvert } from \"./controltype/icontrol\";\r\nimport { IValue, ConditionValueConvert } from \"./conditionvalue/ivalue\";\r\n\r\n/**\r\n * æ¥è¯¢æ¡ä»¶å®ä½ç±»\r\n */\r\nexport class QueryCondition {\r\n\r\n    /**\r\n     * å¯ä¸æ§æ è¯\r\n     */\r\n    id: string;\r\n\r\n    /**\r\n     * å·¦æ¬å·\r\n     */\r\n    leftBrackets: string;\r\n\r\n    /**\r\n     * å­æ®µç¼å·\r\n     */\r\n    fieldCode: string;\r\n    labelCode?: string;\r\n\r\n    /**\r\n     * å­æ®µåç§°\r\n     */\r\n    fieldName: string;\r\n    name: string;\r\n\r\n    /**\r\n     * æ¯è¾ç¬¦\r\n     */\r\n    compareType: CompareType;\r\n\r\n    /**\r\n     * å¼ç±»å\r\n     */\r\n    valueType: ValueType;\r\n\r\n    /**\r\n     * å¼\r\n     * è¯¥å±æ§ä¸ºIValueæ¥å£ï¼æ ¹æ®ä¸åçæ§ä»¶ç±»åæä¸åçå®ç°ç±»ï¼å·ä½å¦ä¸ï¼\r\n     * 1. ææ¬ç±»åï¼TextValue\r\n     * 2. ä¸æåè¡¨ï¼DropDownListValue\r\n     * 3. æ¥æåºé´ï¼DateRangeValue\r\n     * 4. æ°å­åºé´ï¼NumberRangeValue\r\n     * 5. å¸®å©ç±»åï¼SmartHelpValue\r\n     */\r\n    value: IValue;\r\n\r\n    /**\r\n     * å³æ¬å·\r\n     */\r\n    rightBrackets: string;\r\n\r\n    /**\r\n     * å³ç³»ç¬¦\r\n     */\r\n    relationType: RelationType;\r\n\r\n    /**\r\n     * æ§ä»¶ç±»åï¼ç®ååæ¬ææ¬ç±»åï¼ä¸æåè¡¨ï¼æ¥æåºé´ï¼æ°å­åºé´ï¼å¸®å©ç±»å\r\n     * æ§ä»¶ç±»åä¸ºIControlæ¥å£ï¼æ ¹æ®ä¸åçæ§ä»¶ç±»åå¯¹åºä¸åçå®ç°ç±»ï¼å·ä½å¦ä¸ï¼\r\n     * 1. ææ¬ç±»åï¼TextControl\r\n     * 2. ä¸æåè¡¨ï¼DropDownListControl\r\n     * 3. æ¥æåºé´ï¼DateRangeControl\r\n     * 4. æ°å­åºé´ï¼NumberRangeControl\r\n     * 5. å¸®å©ç±»åï¼SmartHelpContol\r\n     */\r\n    control: IControl;\r\n    //é»è®¤æ¾ç¤º\r\n    placeHolder: string;\r\n    //æ¯å¦æå¼\r\n    filled: boolean;\r\n    //éæ©åçå¼\r\n    valueText: string;\r\n    beginPlaceHolder?: string;\r\n    endPlaceHolder?: string;\r\n}\r\n\r\n/**\r\n * æ¥è¯¢æ¡ä»¶åºååä¸ååºååå¨\r\n */\r\n// export class QueryConditionConvert{\r\n\r\n//     /**\r\n//      * åºåå\r\n//      * @param obj æ¥è¯¢æ¡ä»¶å®ä½\r\n//      */\r\n//     convertJObject(obj:QueryCondition):Object{\r\n//         let queryCondition=obj as QueryCondition;\r\n//         let jobj=new Object();\r\n//         jobj[\"id\"]=queryCondition.id;\r\n//         jobj[\"leftBrackets\"]=queryCondition.leftBrackets;\r\n//         jobj[\"fieldCode\"]=queryCondition.fieldCode;\r\n//         jobj[\"fieldName\"]=queryCondition.fieldName;\r\n//         jobj[\"compareType\"]=queryCondition.compareType;\r\n//         jobj[\"valueType\"]=queryCondition.valueType;\r\n//         let valueConvert=new ConditionValueConvert();\r\n//         if(queryCondition.value){\r\n//             jobj[\"value\"]=valueConvert.convertToObject(queryCondition.value);\r\n//         }\r\n//         jobj[\"rightBrackets\"]=queryCondition.rightBrackets;\r\n//         jobj[\"relationType\"]=queryCondition.relationType;\r\n//         let controlConvertor=new ControlConvert();\r\n//         if(queryCondition.control){\r\n//             jobj[\"control\"]=controlConvertor.convertJObject(queryCondition.control);\r\n//         }\r\n//         return jobj;\r\n//     }\r\n\r\n//     /**\r\n//      * ååºåå\r\n//      * @param jobj æ¥è¯¢æ¡ä»¶å®ä½åºåååçJSONå¯¹è±¡\r\n//      */\r\n//     initFromJobject(jobj:Object):QueryCondition{\r\n//         let queryCondition=new QueryCondition();\r\n//         queryCondition.id=jobj[\"id\"];\r\n//         queryCondition.fieldCode=jobj[\"fieldCode\"];\r\n//         queryCondition.fieldName=jobj[\"fieldName\"];\r\n//         queryCondition.leftBrackets=jobj[\"leftBrackets\"];\r\n//         queryCondition.compareType=jobj[\"compareType\"] as CompareType;\r\n//         queryCondition.valueType=jobj[\"valueType\"] as ValueType;\r\n//         if(jobj[\"value\"]){\r\n//             let valueConvert=new ConditionValueConvert();\r\n//             queryCondition.value=valueConvert.initFromObject(jobj[\"value\"]);\r\n//         }\r\n//         queryCondition.rightBrackets=jobj[\"rightBrackets\"];\r\n//         queryCondition.relationType=jobj[\"relationType\"] as RelationType;\r\n//         if(jobj[\"control\"]){\r\n//             let controlConvertor=new ControlConvert();\r\n//             queryCondition.control=controlConvertor.initFromJobject(jobj[\"control\"]);\r\n//         }\r\n//         return queryCondition;\r\n//     }\r\n// }\r\n","/**\r\n * æ¯è¾ç¬¦\r\n */\r\nexport enum CompareType{\r\n\r\n    /**\r\n     * ç­äº\r\n     */\r\n    // Equal=1,\r\n    Equal = 0,\r\n\r\n    /**\r\n     * å¤§äº\r\n     */\r\n    GreaterThan=2,\r\n\r\n    /**\r\n     * å¤§äºæç­äº\r\n     */\r\n    GreaterThanOrEqual=3,\r\n\r\n    /**\r\n     * å°äº\r\n     */\r\n    LessThan =4,\r\n\r\n    /**\r\n     * å°äºæç­äº\r\n     */\r\n    LessThanOrEqual = 5, \r\n\r\n    /**\r\n     * ä¹é´\r\n     */\r\n    BetWeen=6\r\n}","export enum ValueType{\r\n\r\n    /**\r\n     *å¼ç±»å\r\n     */\r\n    Value=0,\r\n\r\n    /**\r\n     * å¸®å©ç±»å\r\n     */\r\n    SmartHelp=1,\r\n\r\n    /**\r\n     * æä¸¾ç±»å\r\n     */\r\n    Enum=2,\r\n\r\n    /**\r\n     * è¡¨è¾¾å¼\r\n     */\r\n    Express=3\r\n}","export enum RelationType{\r\n\r\n    /**\r\n     * ä¸\r\n     */\r\n    // And=0,\r\n    And = 1,\r\n\r\n    /**\r\n     * æ\r\n     */\r\n    // Or=1\r\n    Or = 2\r\n}","// import { EnumIntegerValue } from \"./integerenumvalue\";\r\n// import { EnumStringValue } from \"./stringenumvalue\";\r\n// import { EnumBoolValue } from \"./boolenumvalue\";\r\n\r\nexport interface CheckboxIEnumValue{\r\n    getEnumValueName():string;\r\n    getEnumValue():any;\r\n\r\n    /**\r\n     * å¼æ¾ç¤º\r\n     */\r\n    value:string;\r\n}\r\n\r\nexport class CheckboxEnumValue implements CheckboxIEnumValue{\r\n\r\n    getEnumValueName():string{\r\n        return this.name;\r\n    }\r\n\r\n    getEnumValue():any{\r\n        return this.value;\r\n    }\r\n    \r\n    /**\r\n     * ææ¬æ¾ç¤º\r\n     */\r\n    name:string;\r\n\r\n    /**\r\n     * å¼æ¾ç¤º\r\n     */\r\n    value:string;\r\n}","import { Injectable } from '@angular/core';\r\nimport { FieldConfig } from '../entity/fieldconfig/fieldconfig';\r\nimport { QueryCondition } from '../entity/querycondition';\r\nimport { EnumType } from '../entity/controltype/dropdownlist/enumtype';\r\nimport { EnumBoolValue } from '../entity/controltype/dropdownlist/boolenumvalue';\r\nimport { EnumIntegerValue } from '../entity/controltype/dropdownlist/integerenumvalue';\r\nimport { EnumStringValue } from '../entity/controltype/dropdownlist/stringenumvalue';\r\nimport { ControlType } from '../entity/controltype';\r\nimport { CompareType } from '../entity/comparetype';\r\nimport { ValueType } from '../entity/valuetype';\r\nimport { RelationType } from '../entity/relationtype';\r\nimport { DropDownControl } from '../entity/controltype/dropdownlist/dropdowncontrol';\r\nimport { CheckboxGroupControl } from '../entity/controltype/checkbox/checkboxcontrol';\r\nimport { CheckboxIEnumValue, CheckboxEnumValue } from '../entity/controltype/checkbox/ienumvalue';\r\n\r\n@Injectable()\r\nexport class ConvertorService {\r\n\r\n    constructor() { }\r\n    // private solutionservice:SolutionService\r\n    /**\r\n    * è·åå·²éæ©çå­æ®µéç½®\r\n    * @param selectedConditions \r\n    */\r\n    getFeildConfigs(selectedConditions: Array<QueryCondition>) {\r\n        let fieldsConfigs = new Array<FieldConfig>();\r\n        if (!selectedConditions || selectedConditions.length <= 0) {\r\n            return fieldsConfigs;\r\n        }\r\n        else {\r\n            selectedConditions.forEach(condition => {\r\n                let fieldConfig = new FieldConfig();\r\n                fieldConfig.id = condition.id;\r\n                fieldConfig.labelCode = condition.fieldCode;\r\n                fieldConfig.name = condition.fieldName;\r\n                fieldConfig.control = condition.control;\r\n                fieldsConfigs.push(fieldConfig);\r\n            });\r\n        }\r\n        return fieldsConfigs;\r\n    }\r\n\r\n    getSelectedFieldConditions(fileds: Array<FieldConfig>, selectedFieldConditions: Array<QueryCondition>) {\r\n        // console.log(selectedFieldConditions);\r\n        let tempSelectedFieldConditions = new Array<QueryCondition>();\r\n        tempSelectedFieldConditions = this.arrayClone(selectedFieldConditions);\r\n        selectedFieldConditions = new Array<QueryCondition>();\r\n        fileds.forEach(filed => {\r\n\r\n            filed.control = this.getDropListEnumValues(filed.control as DropDownControl);\r\n            // filed.control = this.getCheckGroupEnumValues(filed.control as CheckboxGroupControl);\r\n            if (tempSelectedFieldConditions.length > 0) {\r\n                let tempIndex = tempSelectedFieldConditions.findIndex(x => x.id == filed.id);\r\n                if (tempIndex != (-1)) {\r\n                    selectedFieldConditions.push(tempSelectedFieldConditions[tempIndex]);\r\n                }\r\n                else {\r\n                    selectedFieldConditions = this.getNewFieldConditions(filed, selectedFieldConditions);\r\n                }\r\n            }\r\n            else {\r\n                selectedFieldConditions = this.getNewFieldConditions(filed, selectedFieldConditions);\r\n            }\r\n\r\n        });\r\n        return selectedFieldConditions;\r\n    }\r\n\r\n    private getDropListEnumValues(control: DropDownControl): DropDownControl {\r\n        if (control.valueType == EnumType.BoolType) {\r\n            let enumValues = new Array<EnumBoolValue>();\r\n            control.enumValues.forEach(element => {\r\n                enumValues.push(Object.assign(new EnumBoolValue(), element));\r\n            });\r\n            control.enumValues = enumValues;\r\n        }\r\n        else if (control.valueType == EnumType.IntType) {\r\n            let enumValues = new Array<EnumIntegerValue>();\r\n            control.enumValues.forEach(element => {\r\n                enumValues.push(Object.assign(new EnumIntegerValue(), element));\r\n            });\r\n            control.enumValues = enumValues;\r\n        }\r\n        else if (control.valueType == EnumType.StringType) {\r\n            let enumValues = new Array<EnumStringValue>();\r\n            control.enumValues.forEach(element => {\r\n                enumValues.push(Object.assign(new EnumStringValue(), element));\r\n            });\r\n            control.enumValues = enumValues;\r\n        }\r\n        return control;\r\n    }\r\n\r\n    private getCheckGroupEnumValues(control: CheckboxGroupControl): CheckboxGroupControl {\r\n        let enumValues = new Array<CheckboxIEnumValue>();\r\n        control.enumValues.forEach(element => {\r\n            enumValues.push(Object.assign(new CheckboxEnumValue(), element));\r\n        });\r\n        control.enumValues = enumValues;\r\n        return control;\r\n    }\r\n\r\n    public getNewFieldConditions(filed: FieldConfig, selectedFieldConditions: Array<QueryCondition>) {\r\n        let selectedFieldCondition = new QueryCondition();\r\n        selectedFieldCondition.id = filed.id;\r\n        selectedFieldCondition.fieldCode = filed.labelCode;\r\n        selectedFieldCondition.fieldName = filed.name;\r\n        selectedFieldCondition.valueType = ValueType.Value;\r\n        selectedFieldCondition.value = filed.value;\r\n        selectedFieldCondition.filled = filed.filled;\r\n        selectedFieldCondition.valueText = filed.valueText;\r\n        selectedFieldCondition.relationType = RelationType.And;\r\n        selectedFieldCondition.control = filed.control;\r\n        selectedFieldCondition.labelCode = filed.labelCode;\r\n\r\n        if (filed.control.getControlType() == ControlType.Text) {\r\n            selectedFieldConditions = this.getTextValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.DateRange) {\r\n            selectedFieldConditions = this.getDateRangeValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.DateRangeTime) {\r\n            selectedFieldConditions = this.getDateRangeTimeValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.MonthRange) {\r\n            selectedFieldConditions = this.getDateRangeValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.YearRange) {\r\n            selectedFieldConditions = this.getDateRangeValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.Year) {\r\n            selectedFieldConditions = this.getDateValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.Month) {\r\n            selectedFieldConditions = this.getDateValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.NumberRange) {\r\n            selectedFieldConditions = this.getNumberRangeValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.Help) {\r\n            selectedFieldConditions = this.getSmartHelpValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.DropDown) {\r\n            selectedFieldConditions = this.getDropDownValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.Search) {\r\n            selectedFieldConditions = this.getSearchValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.Date) {\r\n            selectedFieldConditions = this.getDateValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.CheckboxGroup) {\r\n            selectedFieldConditions = this.getCheckboxGroupValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.Radio) {\r\n            selectedFieldConditions = this.getRadioValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.InputGroup) {\r\n            selectedFieldConditions = this.getInputGroupValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.Number) {\r\n            selectedFieldConditions = this.getNumberValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.FlexibleNumber) {\r\n            selectedFieldConditions = this.getFlexibleNumberValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.FlexibleDate) {\r\n            selectedFieldConditions = this.getFlexibleDateValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.BoolCheck) {\r\n            selectedFieldConditions = this.getCheckboxGroupValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        return selectedFieldConditions;\r\n    }\r\n\r\n    private getDropDownValueFieldCondition(selectedFieldCondition: QueryCondition, filed: FieldConfig, selectedFieldConditions: Array<QueryCondition>) {\r\n        selectedFieldCondition.placeHolder = filed.placeHolder;\r\n        selectedFieldCondition.compareType = CompareType.Equal;\r\n        this.getDropListEnumValues(selectedFieldCondition.control as DropDownControl);\r\n        selectedFieldConditions.push(selectedFieldCondition);\r\n        return selectedFieldConditions;\r\n    }\r\n    private getRadioValueFieldCondition(selectedFieldCondition: QueryCondition, filed: FieldConfig, selectedFieldConditions: Array<QueryCondition>) {\r\n        selectedFieldCondition.placeHolder = filed.placeHolder;\r\n        selectedFieldCondition.compareType = CompareType.Equal;\r\n        this.getCheckGroupEnumValues(selectedFieldCondition.control as CheckboxGroupControl);\r\n        selectedFieldConditions.push(selectedFieldCondition);\r\n        return selectedFieldConditions;\r\n    }\r\n\r\n    private getCheckboxGroupValueFieldCondition(selectedFieldCondition: QueryCondition, filed: FieldConfig, selectedFieldConditions: Array<QueryCondition>) {\r\n        selectedFieldCondition.placeHolder = filed.placeHolder;\r\n        selectedFieldCondition.compareType = CompareType.Equal;\r\n        this.getCheckGroupEnumValues(selectedFieldCondition.control as CheckboxGroupControl);\r\n        selectedFieldConditions.push(selectedFieldCondition);\r\n        return selectedFieldConditions;\r\n    }\r\n\r\n    private getSmartHelpValueFieldCondition(selectedFieldCondition: QueryCondition, filed: FieldConfig, selectedFieldConditions: Array<QueryCondition>) {\r\n        selectedFieldCondition.placeHolder = filed.placeHolder;\r\n        selectedFieldCondition.compareType = CompareType.Equal;\r\n        selectedFieldConditions.push(selectedFieldCondition);\r\n        return selectedFieldConditions;\r\n    }\r\n\r\n    private getFlexibleNumberValueFieldCondition(selectedFieldCondition: QueryCondition, filed: FieldConfig, selectedFieldConditions: Array<QueryCondition>) {\r\n        selectedFieldCondition.placeHolder = filed.placeHolder;\r\n        selectedFieldCondition.beginPlaceHolder = filed.beginPlaceHolder;\r\n        selectedFieldCondition.endPlaceHolder = filed.endPlaceHolder;\r\n        selectedFieldCondition.compareType = CompareType.BetWeen;\r\n        selectedFieldConditions.push(selectedFieldCondition);\r\n        return selectedFieldConditions;\r\n    }\r\n    private getFlexibleDateValueFieldCondition(selectedFieldCondition: QueryCondition, filed: FieldConfig, selectedFieldConditions: Array<QueryCondition>) {\r\n        selectedFieldCondition.placeHolder = filed.placeHolder;\r\n        selectedFieldCondition.beginPlaceHolder = filed.beginPlaceHolder;\r\n        selectedFieldCondition.endPlaceHolder = filed.endPlaceHolder;\r\n        selectedFieldCondition.compareType = CompareType.BetWeen;\r\n        selectedFieldConditions.push(selectedFieldCondition);\r\n        return selectedFieldConditions;\r\n    }\r\n    private getNumberValueFieldCondition(selectedFieldCondition: QueryCondition, filed: FieldConfig, selectedFieldConditions: Array<QueryCondition>) {\r\n        selectedFieldCondition.placeHolder = filed.placeHolder;\r\n        selectedFieldCondition.compareType = CompareType.BetWeen;\r\n        selectedFieldConditions.push(selectedFieldCondition);\r\n        return selectedFieldConditions;\r\n    }\r\n\r\n    private getNumberRangeValueFieldCondition(selectedFieldCondition: QueryCondition, filed: FieldConfig, selectedFieldConditions: Array<QueryCondition>) {\r\n        selectedFieldCondition.placeHolder = filed.placeHolder;\r\n        selectedFieldCondition.beginPlaceHolder = filed.beginPlaceHolder;\r\n        selectedFieldCondition.endPlaceHolder = filed.endPlaceHolder;\r\n        selectedFieldCondition.compareType = CompareType.BetWeen;\r\n        selectedFieldConditions.push(selectedFieldCondition);\r\n        return selectedFieldConditions;\r\n    }\r\n\r\n    private getDateRangeValueFieldCondition(selectedFieldCondition: QueryCondition, filed: FieldConfig, selectedFieldConditions: Array<QueryCondition>) {\r\n        selectedFieldCondition.placeHolder = filed.placeHolder;\r\n        selectedFieldCondition.beginPlaceHolder = filed.beginPlaceHolder;\r\n        selectedFieldCondition.endPlaceHolder = filed.endPlaceHolder;\r\n        selectedFieldCondition.compareType = CompareType.BetWeen;\r\n        selectedFieldConditions.push(selectedFieldCondition);\r\n        return selectedFieldConditions;\r\n    }\r\n\r\n    private getDateRangeTimeValueFieldCondition(selectedFieldCondition: QueryCondition, filed: FieldConfig, selectedFieldConditions: Array<QueryCondition>) {\r\n        selectedFieldCondition.placeHolder = filed.placeHolder;\r\n        selectedFieldCondition.beginPlaceHolder = filed.beginPlaceHolder;\r\n        selectedFieldCondition.endPlaceHolder = filed.endPlaceHolder;\r\n        selectedFieldCondition.compareType = CompareType.BetWeen;\r\n        selectedFieldConditions.push(selectedFieldCondition);\r\n        return selectedFieldConditions;\r\n    }\r\n\r\n    private getTextValueFieldCondition(selectedFieldCondition: QueryCondition, filed: FieldConfig, selectedFieldConditions: Array<QueryCondition>) {\r\n        selectedFieldCondition.placeHolder = filed.placeHolder;\r\n        selectedFieldCondition.compareType = CompareType.Equal;\r\n        selectedFieldConditions.push(selectedFieldCondition);\r\n        return selectedFieldConditions;\r\n    }\r\n\r\n    private getDateValueFieldCondition(selectedFieldCondition: QueryCondition, filed: FieldConfig, selectedFieldConditions: Array<QueryCondition>) {\r\n        selectedFieldCondition.placeHolder = filed.placeHolder;\r\n        selectedFieldCondition.compareType = CompareType.Equal;\r\n        selectedFieldConditions.push(selectedFieldCondition);\r\n        return selectedFieldConditions;\r\n    }\r\n\r\n    private getInputGroupValueFieldCondition(selectedFieldCondition: QueryCondition, filed: FieldConfig, selectedFieldConditions: Array<QueryCondition>) {\r\n        selectedFieldCondition.placeHolder = filed.placeHolder;\r\n        selectedFieldCondition.compareType = CompareType.Equal;\r\n        selectedFieldConditions.push(selectedFieldCondition);\r\n        return selectedFieldConditions;\r\n    }\r\n\r\n    private getSearchValueFieldCondition(selectedFieldCondition: QueryCondition, filed: FieldConfig, selectedFieldConditions: Array<QueryCondition>) {\r\n        selectedFieldCondition.placeHolder = filed.placeHolder;\r\n        selectedFieldCondition.compareType = CompareType.Equal;\r\n        selectedFieldConditions.push(selectedFieldCondition);\r\n        return selectedFieldConditions;\r\n    }\r\n\r\n    private arrayClone(input: Array<any>): Array<any> {\r\n        let result = new Array<any>();\r\n        if (input && input.length > 0) {\r\n            input.forEach(element => {\r\n                result.push(Object.assign({}, element));\r\n            });\r\n        }\r\n        return result;\r\n    }\r\n}","import { InjectionToken } from '@angular/core';\r\nimport { QueryCondition } from '../entity/querycondition';\r\n\r\nexport interface FilterHandler{\r\n    setCurrentFilterConditions(conditions: QueryCondition[]): void;\r\n}\r\n\r\nexport const FILTER_HANDLER_TOKEN = new InjectionToken<FilterHandler>('gsp-cmp/FILTER_HANDLER');","// export function deepCopy (data) {\r\n//     return JSON.parse(JSON.stringify(data));\r\n//   }\r\n\r\nexport function deepCopy(obj) {\r\n    var newobj = obj.constructor === Array ? [] : {};\r\n    if (typeof obj !== 'object') {\r\n      return obj;\r\n    } else {\r\n        for (var i in obj) {\r\n            if (typeof obj[i] === 'object'){ //å¤æ­å¯¹è±¡çè¿æ¡å±æ§æ¯å¦ä¸ºå¯¹è±¡\r\n                const type = Object.prototype.toString.call(obj[i]);\r\n                if(type == '[object Null]'){\r\n                    newobj[i] = obj[i];\r\n                }\r\n                else{\r\n                    newobj[i] = deepCopy(obj[i]);  //è¥æ¯å¯¹è±¡è¿è¡åµå¥è°ç¨\r\n                }\r\n            }else{\r\n                newobj[i] = obj[i];\r\n            }\r\n        }\r\n    }\r\n    return newobj; //è¿åæ·±åº¦åéåçå¯¹è±¡\r\n}  ","import {\r\n    Component, OnInit, Input, ViewChild, ViewEncapsulation, ElementRef, AfterViewInit, ChangeDetectorRef, Renderer2, NgZone,\r\n    EventEmitter, Output, Injector, Optional, LOCALE_ID, InjectFlags, HostBinding, OnChanges, SimpleChanges, OnDestroy\r\n} from '@angular/core';\r\nimport { fromEvent } from 'rxjs';\r\nimport { debounceTime, filter } from 'rxjs/operators';\r\nimport { animationFrame } from 'rxjs/internal/scheduler/animationFrame';\r\nimport { FarrisSidebarComponent } from '@farris/ui-sidebar';\r\n\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { FilterPanelService } from '@farris/ui-filter-panel';\r\nimport { QuerySolutionService } from '@farris/ui-filter-condition';\r\n\r\nimport { FilterService } from './filter.service';\r\nimport { ConvertorService } from './service/convertorservice';\r\nimport { QueryCondition } from './entity/querycondition';\r\nimport { ControlType } from './entity/controltype';\r\nimport { TextValue } from './entity/conditionvalue/textvalue';\r\nimport { HelpValue } from './entity/conditionvalue/helpvalue';\r\nimport { DropDownListValue } from './entity/conditionvalue/dropdownlistvalue';\r\nimport { DateRangeValue } from './entity/conditionvalue/daterangevalue';\r\nimport { DateRangeTimeValue } from './entity/conditionvalue/daterangetimevalue';\r\nimport { NumberRangeValue } from './entity/conditionvalue/numberrangevaue';\r\nimport { SearchValue } from './entity/conditionvalue/searchvalue';\r\nimport { DateValue } from './entity/conditionvalue/datevalue';\r\nimport { CheckboxGroupValue } from './entity/conditionvalue/checkboxgroupvalue';\r\n\r\nimport { FieldConfig } from './entity/fieldconfig/fieldconfig';\r\nimport { FilterHandler, FILTER_HANDLER_TOKEN } from './interface/filterHandler';\r\nimport { deepCopy } from './utils';\r\nimport { DropDownControl } from './entity/controltype/dropdownlist/dropdowncontrol';\r\nimport { CheckboxGroupControl } from './entity/controltype/checkbox/checkboxcontrol';\r\nimport { RadioGroupValue } from './entity/conditionvalue/radiovalue';\r\nimport { RadioControl } from './entity/controltype/radio/radiocontrol';\r\nimport { MonthRangeValue } from './entity/conditionvalue/monthrange';\r\nimport { YearRangeValue } from './entity/conditionvalue/yearrange';\r\nimport { MonthValue } from './entity/conditionvalue/month';\r\nimport { YearValue } from './entity/conditionvalue/yearvalue';\r\nimport { InputGroupValue } from './entity/conditionvalue/inputgroup';\r\nimport { NumberValue } from './entity/conditionvalue/numbervalue';\r\nimport { FlexibleNumberValue } from './entity/conditionvalue/flexiblenumbervalue';\r\nimport { FlexibleDateValue } from './entity/conditionvalue/flexibledatevalue';\r\nimport ResizeObserver from \"resize-observer-polyfill\";\r\n@Component({\r\n    selector: 'farris-filter',\r\n    templateUrl: './filter.component.html',\r\n    encapsulation: ViewEncapsulation.None,\r\n    providers: [\r\n        FilterPanelService\r\n    ]\r\n})\r\nexport class FilterComponent implements OnInit, AfterViewInit, OnChanges, OnDestroy {\r\n\r\n    _filterList: Array<any> = [];\r\n    @Input()\r\n    get filterList(): Array<any> {\r\n        return this._filterList;\r\n    }\r\n    set filterList(filterList: Array<any>) {\r\n        this._filterList = filterList || [];\r\n        this.initFilterList();\r\n    }\r\n    //æ¯å¦ç¦ç¨\r\n    @Input() disabled = false;\r\n    @Input() showReminder = false;\r\n    // æ¯å¦å¯ç¨ä¾§è¾¹æ åæ-è¿æ»¤æ¡ä»¶å¨ä¾§è¾¹æ æ¾ç¤º\r\n    @Input() floatFilter = true;\r\n    // å¯ç¨èªå¨å®½åº¦\r\n    private _enableAutoWidth = false;\r\n    @Input()\r\n    set enableAutoWidth(value) {\r\n        if (value !== this._enableAutoWidth) {\r\n            if (value) {\r\n                this.filterEllipsis = false;\r\n                this.filterExtendShow = false;\r\n            }\r\n            this._enableAutoWidth = value;\r\n        }\r\n    }\r\n    get enableAutoWidth() {\r\n        return this._enableAutoWidth;\r\n    }\r\n\r\n    @Input() localStorageKey: string = 'farrisSearchRecord';\r\n\r\n    //åå§åå¼\r\n    _defaultValue: FieldConfig[];\r\n    @Input()\r\n    set defaultValue(configs: FieldConfig[]) {\r\n        this._defaultValue = configs;\r\n        setTimeout(() => {\r\n            this.setFilterValue(this._defaultValue);\r\n        });\r\n    }\r\n    get defaultValue() {\r\n        return this._defaultValue;\r\n    }\r\n    @HostBinding('class.f-filter') cla = true;\r\n\r\n    @Output() query = new EventEmitter();\r\n    @Output() searchChange = new EventEmitter();\r\n    @Output() resetChange = new EventEmitter();\r\n    @Output() clearFilter = new EventEmitter();\r\n    @Output() expandFilter = new EventEmitter();\r\n    @Output() packupFilter = new EventEmitter();\r\n    @Output() filterResize = new EventEmitter();\r\n\r\n    @ViewChild('filterMain') filterMain: ElementRef;\r\n    @ViewChild('filterTool') filterTool: ElementRef;\r\n    @ViewChild('filterWrapper') filterWrapper: ElementRef;\r\n    @ViewChild('farrissidebar') farrissidebar: FarrisSidebarComponent;\r\n    @ViewChild('listWrapper') listWrapper: ElementRef;\r\n    @ViewChild('filterListWrapper') filterListWrapper: ElementRef;\r\n    currentFilterId;\r\n    // å±å¼\r\n    filterExtend = false;\r\n    // æ¯å¦æ¾ç¤ºä¸ä¸ªç¹\r\n    filterEllipsis = false;\r\n    // æ¯å¦æ¾ç¤ºå±å¼æ¶èµ·\r\n    filterExtendShow = false;\r\n    filterExtendText = 'å±å¼';\r\n    filterExtendIcon = 'f-icon-arrow-chevron-down';\r\n    expandText = 'å±å¼';\r\n    foldText = 'æ¶èµ·';\r\n    filterWrapperEl;\r\n    filterToolWidth: number;\r\n    sidebarOpen = false;\r\n    floatPanelOpen = false;\r\n    showExpandTag = false;\r\n    /** è¡¨åæ¯å¦åè®¸æäº¤ */\r\n    canSubmit = false;\r\n    /** è¡¨åæ¯å¦åè®¸æäº¤,ç¨äºé«çº§ç­éæ¸ç©ºå */\r\n    advancedCanSubmit = true;\r\n    /** é»è®¤å±å¼é¡¹æ¯å¦åè®¸æäº¤ */\r\n    showCanSubmit = true;\r\n    /** æ¯å¦æ¾ç¤ºæ¸ç©ºå·²é */\r\n    filledFilter = false;\r\n    /** é»è®¤å±å¼çç­éé¡¹ */\r\n    showFilterList: Array<QueryCondition> = new Array<QueryCondition>();\r\n    /** é«çº§ç­é */\r\n    extendFilterList: Array<QueryCondition> = new Array<QueryCondition>();\r\n    extendFilterListStore: Array<QueryCondition> = new Array<QueryCondition>();\r\n    extendFilterListTemporary: Array<QueryCondition> = new Array<QueryCondition>();\r\n    /** å·²å¡«åç­éæ°æ® */\r\n    filledFilterList: Array<QueryCondition> = new Array<QueryCondition>();\r\n    /** é«çº§ç­éä¸­å·²å¡«åç */\r\n    filledExtendFilterList: Array<QueryCondition> = new Array<QueryCondition>();\r\n    /** æ²¡æå¡«åçç­éé¡¹ */\r\n    // unFilledFilterList:Array<QueryCondition> = new Array<QueryCondition>();\r\n    /** é«çº§ç­éä¸­å¿å¡«é¡¹ */\r\n    extendRequiredList: Array<QueryCondition> = new Array<QueryCondition>();\r\n    /** é»è®¤ç­éä¸­å¿å¡«é¡¹ */\r\n    showRequiredList: Array<QueryCondition> = new Array<QueryCondition>();\r\n    /** å¾ªç¯è¡¨å */\r\n    listFilterConditions: Array<QueryCondition> = new Array<QueryCondition>();\r\n    /** é»è®¤å±å¼ï¼é«çº§ç­éä¸­å·²å¡«åç */\r\n    loopFilterList: Array<QueryCondition> = new Array<QueryCondition>();\r\n    /** ç¨æ¥å­å¨setvalueåæ°æ® */\r\n    stagListFilterConditions: Array<QueryCondition> = new Array<QueryCondition>();\r\n    /** æ¾ç¤ºä¸­è¡¨åçå¿å¡«é¡¹ */\r\n    requiredListFilter: Array<QueryCondition> = [];\r\n\r\n    localeIds = {\r\n        'en': 'en',\r\n        'zh-CHS': 'zh-CHS'\r\n    };\r\n    currentLocale = 'zh-CHS';\r\n    isControlInline = true;\r\n    /**\r\n     * ç»ä»¶æå¡æ¥å£\r\n     */\r\n    filterHandler: FilterHandler;\r\n    filterPanelContainer;\r\n\r\n    showReminderItem: QueryCondition;\r\n    reminderLeft = 0;\r\n    // ç»å®å¤§å°ååååº\r\n    private ro: ResizeObserver | null = null;\r\n    // è®°å½æ§çå®½åº¦æ°æ®\r\n    private containerWidthRecord = 0;\r\n    // éå¼\r\n    private distanceThreshold = 20;\r\n\r\n    constructor(\r\n        private filterPanelService: FilterPanelService,\r\n        private filterService: FilterService,\r\n        private convertorService: ConvertorService,\r\n        private handler: QuerySolutionService,\r\n        private cd: ChangeDetectorRef,\r\n        private render: Renderer2,\r\n        public ngzone: NgZone,\r\n        public localeService: LocaleService,\r\n        @Optional() private injector: Injector\r\n    ) {\r\n        if (this.injector) {\r\n            this.currentLocale = this.injector.get(LOCALE_ID);\r\n            this.filterHandler = this.injector.get<FilterHandler>(FILTER_HANDLER_TOKEN, null, InjectFlags.Optional);\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.filterWrapperEl = this.filterListWrapper && this.filterListWrapper.nativeElement;\r\n        // ç»å®äºä»¶\r\n        this.bindRoEvent();\r\n        this.foldText = this.localeService.getValue('filterPanel.fold');\r\n        this.expandText = this.localeService.getValue('filterPanel.expand');\r\n        this.filterExtendText = this.expandText;\r\n        if (this.currentLocale === this.localeIds['en']) {\r\n            this.isControlInline = false;\r\n        }\r\n        else {\r\n            this.isControlInline = true;\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.ro) {\r\n            this.ro.unobserve(this.filterWrapperEl);\r\n            this.ro = null;\r\n        }\r\n    }\r\n    /**\r\n     * ç»å®çæ§å¤§å°çäºä»¶\r\n     */\r\n    private bindRoEvent(){\r\n        if(!this.filterWrapper){\r\n            return;\r\n        }\r\n        this.ngzone.runOutsideAngular(() => {\r\n            // è¿æ ·ä¸ç´é½ç»å®å¯è½ææ§è½é®é¢\r\n            this.ro = new ResizeObserver((entries, observer) => {\r\n                const tempWidth = entries[0].contentRect.width;\r\n                if (\r\n                    Math.abs(tempWidth - this.containerWidthRecord) >\r\n                    this.distanceThreshold\r\n                ) {\r\n                    if (!this.filterList.length) return;\r\n                    if (this.enableAutoWidth) {\r\n                        return;\r\n                    }\r\n                    this.listEllipsisInit();\r\n                    this.containerWidthRecord = tempWidth;\r\n                }\r\n            });\r\n            this.ro.observe(this.filterWrapper.nativeElement);\r\n            // fromEvent(window, 'resize')\r\n            //     .pipe(debounceTime(50, animationFrame))\r\n            //     .subscribe((): void => {\r\n            //         this.ngzone.run(() => {\r\n            //             // console.log('resize');\r\n            //             if (!this.filterList.length) return;\r\n            //             if (this.enableAutoWidth) {return;}\r\n            //             this.listEllipsisInit();\r\n            //         });\r\n            //     });\r\n        });\r\n    }\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        // if (changes.filterList && !changes.filterList.isFirstChange()) {\r\n        //   this.initFilterList();\r\n        // }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n\r\n    }\r\n    /**\r\n     * åå§åç­éé¡¹\r\n     */\r\n    initFilterList() {\r\n        this.listFilterConditions = new Array<QueryCondition>();\r\n        const filterDatas = this.filterService.fieldSchemasConvert(this.filterList);\r\n        if (filterDatas && filterDatas.length) {\r\n            this.listFilterConditions = this.convertorService.getSelectedFieldConditions(filterDatas, this.listFilterConditions);\r\n        }\r\n        this.stagListFilterConditions = this.listFilterConditions.map(o => ({ ...o }));\r\n        this.filterListClassify();\r\n        setTimeout(() => {\r\n            if (this.showReminder && this.showFilterList && this.showFilterList.length) {\r\n                this.showReminderItem = this.showFilterList[0];\r\n                if (this.showReminderItem) {\r\n                    let filterlistItems = this.filterListWrapper && this.filterListWrapper.nativeElement.children;\r\n                    if (filterlistItems && filterlistItems.length) {\r\n                        let showRemItem;\r\n                        for (let i = 0; i < filterlistItems.length; i++) {\r\n                            if (this.showReminderItem['id'] == filterlistItems[i].getAttribute('id')) {\r\n                                showRemItem = filterlistItems[i];\r\n                            }\r\n                        }\r\n                        if (showRemItem) {\r\n                            this.reminderLeft = showRemItem.offsetLeft >= 0 ? showRemItem.offsetLeft : 0;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                this.showReminderItem = null;\r\n            }\r\n        }, 0);\r\n        this.cd.detectChanges();\r\n    }\r\n    /** ç­éé¡¹åç±» */\r\n    filterListClassify() {\r\n        this.extendFilterList = [];\r\n        this.extendFilterListStore = [];\r\n        this.showFilterList = [];\r\n        this.filledFilterList = [];\r\n        this.filledExtendFilterList = [];\r\n        this.loopFilterList = [];\r\n        this.extendRequiredList = [];\r\n        this.showRequiredList = [];\r\n        // å¿å¡«\r\n        let requiredList = this.listFilterConditions.filter((listitem) => {\r\n            return listitem.control.required;\r\n        });\r\n        if (requiredList && requiredList.length) {\r\n            this.requiredListFilter = requiredList;\r\n            this.canSubmit = this.canSubmitFilter(this.requiredListFilter);\r\n        } else {\r\n            this.requiredListFilter = [];\r\n            this.canSubmit = true;\r\n        }\r\n        // å ç§ç±»ååç±»\r\n        this.listFilterConditions.forEach(field => {\r\n            if (field.control.isExtend && field['filled']) {\r\n                this.filledExtendFilterList.push(field);\r\n            }\r\n            if (field['filled']) {\r\n                this.filledFilterList.push(field);\r\n            }\r\n            // else if(!field.control.isExtend){\r\n            //   this.unFilledFilterList.push(field);\r\n            // }\r\n\r\n            if (field.control.isExtend) {\r\n                this.extendFilterListStore.push(field);\r\n            } else {\r\n                this.showFilterList.push(field);\r\n            }\r\n        });\r\n\r\n        if (this.filledFilterList.length) {\r\n            this.filledFilter = true;\r\n        } else {\r\n            this.filledFilter = false;\r\n        }\r\n\r\n        const list = this.listFilterConditions.filter(item => {\r\n            return !item.control.isExtend || item['filled']\r\n        });\r\n        // this.loopFilterList = this.showFilterList.concat(this.filledExtendFilterList);\r\n        this.loopFilterList = list ? list : [];\r\n        this.loopFilterList.forEach(item => {\r\n            this.getValueText(item);\r\n        });\r\n        this.extendFilterList = this.extendFilterListStore.map(o => ({ ...o }));\r\n        const extendRequiredList = this.extendFilterList.filter((listitem) => {\r\n            return listitem.control.required;\r\n        });\r\n        if (extendRequiredList && extendRequiredList.length) {\r\n            this.extendRequiredList = extendRequiredList;\r\n        }\r\n\r\n        const showrequiredList = this.showFilterList.filter((listitem) => {\r\n            return listitem.control.required;\r\n        });\r\n        if (showrequiredList && showrequiredList.length) {\r\n            this.showRequiredList = showrequiredList;\r\n        }\r\n\r\n        this.showCanSubmit = this.canSubmitFilter(this.showRequiredList);\r\n        this.advancedCanSubmit = this.canSubmitFilter(this.extendRequiredList);\r\n        // console.log('å·²å¡«å',this.filledExtendFilterList);\r\n        // console.log('æ¾ç¤ºåºæ¥ç',this.loopFilterList);\r\n        // console.log('éèé¨å',this.extendFilterList);\r\n        this.filterExtendShow = true;\r\n        // å¦ææ¯æ¯æèªå¨å®½åº¦ï¼å°±æ¯ä¸åæ,å¤æ­æ¶åèµå¼æ¶æº\r\n        if (!this.enableAutoWidth) {\r\n            setTimeout(() => {\r\n                this.listEllipsisInit();\r\n            }, 0);\r\n        }\r\n    }\r\n    /**\r\n     * å·²å¡«åç­éé¡¹ç¹å»\r\n     * @param event \r\n     * @param data \r\n     */\r\n    filterClick(event, data, index) {\r\n        event.stopPropagation();\r\n        if (this.disabled) return;\r\n        if (data) {\r\n            this.showReminderItem = null;\r\n        }\r\n        if (data && this.currentFilterId != data.id) {\r\n            const panelItem = deepCopy(data);\r\n            this.currentFilterId = data.id;\r\n            const { left, top, height, right } = event.currentTarget.getBoundingClientRect();\r\n            this.filterPanelContainer = this.filterPanelService.showPanel({\r\n                left: left,\r\n                top: top + height + 2,\r\n                right: right,\r\n                item: panelItem,\r\n                localStorageKey: this.localStorageKey\r\n            });\r\n            this.filterPanelContainer.hidePanel.subscribe(e => {\r\n                this.filterPanelService.hidePanel();\r\n                this.filterPanelContainer = null;\r\n                this.currentFilterId = null;\r\n            });\r\n            this.filterPanelContainer.clearFilter.subscribe(e => {\r\n                this.clearFilter.emit(e);\r\n            });\r\n            //æäº¤å¼¹çªå\r\n            const _this = this;\r\n            this.filterPanelContainer.submit.subscribe(e => {\r\n                e.filled = (e.valueText && e.valueText.length > 0) ? true : false;\r\n                _this.loopFilterList[index] = e;\r\n                let panelListIndex = _this.listFilterConditions.findIndex(item => {\r\n                    return item['id'] == e['id'];\r\n                });\r\n                if (panelListIndex >= 0) {\r\n                    _this.listFilterConditions[panelListIndex] = e;\r\n                }\r\n                this.searchChange.emit(this.listFilterConditions);\r\n                this.inSetCurrentFilterConditions();\r\n                this.filterListClassify();\r\n                // valueTextæ¯æéè¦è®¡ç®çï¼æä»¥å»¶åå¤æ­æ¯å¦æ¾ç¤º\r\n                let findItem = _this.loopFilterList.find(item => {\r\n                    return item['id'] == e['id'];\r\n                });\r\n                if (findItem) {\r\n                    findItem['filled'] = findItem.valueText && findItem.valueText.length > 0 ? true : false;\r\n                }\r\n                this.cd.markForCheck();\r\n                this.submit('panelFormData', this.listFilterConditions, e);\r\n                this.filterPanelService.hidePanel();\r\n                this.filterPanelContainer = null;\r\n                this.currentFilterId = null;\r\n            });\r\n        }\r\n        else {\r\n            this.filterPanelService.hidePanel();\r\n            this.filterPanelContainer = null;\r\n            this.currentFilterId = null;\r\n        }\r\n    }\r\n    /**\r\n     * æ¸ç©ºç­éé¡¹\r\n     */\r\n    filterClear(data, index, event) {\r\n        event.stopPropagation();\r\n        this.filterPanelService.hidePanel();\r\n        this.currentFilterId = null;\r\n        this.resetListCondition(data);\r\n        this.filterListClassify();\r\n        this.cd.markForCheck();\r\n        this.searchChange.emit(this.listFilterConditions);\r\n        this.clearFilter.emit(data);\r\n        this.inSetCurrentFilterConditions();\r\n        this.advancedCanSubmit = this.canSubmitFilter(this.extendRequiredList);\r\n        this.submit('panelFormData', this.listFilterConditions);\r\n    }\r\n    /**\r\n     * å±å¼é«çº§ç­é\r\n     */\r\n    advancedFilter() {\r\n        this.showReminderItem = null;\r\n        this.extendFilterListTemporary = deepCopy(this.extendFilterList);\r\n        this.farrissidebar.isOpen = true;\r\n    }\r\n    listCancel() {\r\n        this.extendFilterList = deepCopy(this.extendFilterListTemporary);\r\n        this.farrissidebar.isOpen = false;\r\n        this.floatPanelOpen = false;\r\n    }\r\n    /**\r\n     * æå¼é¢æ¿é«çº§ç­é\r\n     */\r\n    floatFilterOpen() {\r\n        this.floatPanelOpen = !this.floatPanelOpen;\r\n        if (this.floatPanelOpen) {\r\n            this.extendFilterListTemporary = deepCopy(this.extendFilterList);\r\n        }\r\n    }\r\n    /**\r\n     * åè¡¨å±ç¤ºåå§å\r\n     */\r\n    listEllipsisInit() {\r\n        if (this.enableAutoWidth) return;\r\n        // if(this.filterExtend) return;\r\n        const filterMainWidth = this.filterMain.nativeElement.offsetWidth;\r\n        this.filterToolWidth = 0;\r\n        // filterTool = this.filterTool.nativeElement.offsetWidth;\r\n        if (this.filterTool) {\r\n            this.filterToolWidth = this.filterTool.nativeElement.offsetWidth;\r\n        }\r\n        // ç­éæ¡ä»¶åºåæå¤§å®½åº¦\r\n        let filterListW;\r\n        if (this.filterExtend) {\r\n            filterListW = filterMainWidth - 26;\r\n        }\r\n        else {\r\n            // filterListW = filterMainWidth- 48 - this.filterToolWidth - 26;\r\n            filterListW = filterMainWidth - 48 - this.filterToolWidth - 26;\r\n        }\r\n        // const filterWrapper = this.filterListWrapper.nativeElement;\r\n        // const filterWrapperWidth = filterWrapper.offsetWidth;\r\n        // console.log(filterWrapperWidth);\r\n        const filterItems = this.filterWrapperEl ? this.filterWrapperEl.children : [];\r\n        let filterItemWidth = 0;\r\n        if (filterItems && filterItems.length) {\r\n            for (let i = 0, len = filterItems.length; i < len; i++) {\r\n                this.render.setStyle(filterItems[i], 'display', 'flex');\r\n                let width = filterItems[i].offsetWidth;\r\n                filterItemWidth += width + 8;\r\n                if (filterItemWidth >= filterListW && !this.filterExtend) {\r\n                    this.render.setStyle(filterItems[i], 'display', 'none');\r\n                }\r\n                else {\r\n                    this.render.setStyle(filterItems[i], 'display', 'flex');\r\n                }\r\n                // console.log(filterItemWidth,filterListW,i);\r\n            }\r\n        }\r\n        // if(filterItemWidth > this.filterWrapperEl.offsetWidth){\r\n        if (filterItemWidth >= filterListW) {\r\n            this.filterEllipsis = true;\r\n            this.filterExtendShow = true;\r\n        }\r\n        else {\r\n            this.filterEllipsis = false;\r\n            this.filterExtendShow = false;\r\n        }\r\n        if (filterItems.length) this.filterResize.emit();\r\n        if (!this.cd['destroyed']) {\r\n            this.cd.detectChanges();\r\n        }\r\n    }\r\n    /**\r\n     * ç­éé¡¹å±å¼æ¶èµ·åæ¢\r\n     */\r\n    filterExpand() {\r\n        this.showReminderItem = null;\r\n        this.filterExtend = !this.filterExtend;\r\n        if (this.filterExtend) {\r\n            this.filterEllipsis = false;\r\n            this.filterExtendText = this.foldText;\r\n            this.filterExtendIcon = 'f-icon-arrow-chevron-up';\r\n            const filterItems = this.filterWrapperEl.children;\r\n            if (filterItems && filterItems.length) {\r\n                for (let i = 0, len = filterItems.length; i < len; i++) {\r\n                    this.render.setStyle(filterItems[i], 'display', 'flex');\r\n                }\r\n            };\r\n            this.render.setStyle(this.filterWrapperEl, 'flex-wrap', 'wrap');\r\n            this.expandFilter.emit();\r\n            this.cd.detectChanges();\r\n        } else {\r\n            this.filterExtendText = this.expandText;\r\n            this.filterExtendIcon = 'f-icon-arrow-chevron-down';\r\n            setTimeout(() => {\r\n                this.listEllipsisInit();\r\n            }, 0);\r\n            this.packupFilter.emit();\r\n        }\r\n    }\r\n    /**\r\n     * é«çº§ç­éè¡¨åé¡¹æç´¢åå\r\n     * @param $event \r\n     * @param item \r\n     */\r\n    onSearch($event, item) {\r\n        if (this.disabled) { return; }\r\n        this.advancedCanSubmit = this.canSubmitFilter(this.extendRequiredList);\r\n        // console.log(this.advancedCanSubmit,this.canSubmit);\r\n        this.searchChange.emit({ item, conditions: this.listFilterConditions, instance: this });\r\n    }\r\n\r\n    /** å¤æ­æ¯å¦ææå¿å¡«é¡¹é½å¡«åå®æ¯ */\r\n    canSubmitFilter(requirelist) {\r\n        let formCanSubmit = false;\r\n        if (!requirelist || !requirelist.length) {\r\n            formCanSubmit = true;\r\n            return formCanSubmit;\r\n        } else {\r\n            for (let i = 0; i < requirelist.length; i++) {\r\n                const item = requirelist[i];\r\n                if (item.control.getControlType() === ControlType.Text) {\r\n                    const tv = (item.value as TextValue);\r\n                    if (Object.keys(tv).length < 0 || !tv.value) {\r\n                        formCanSubmit = false;\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        formCanSubmit = true;\r\n                    }\r\n                }\r\n                else if (item.control.getControlType() === ControlType.Help) {\r\n                    const shv = (item.value as HelpValue);\r\n                    if (Object.keys(shv).length === 0 || !shv.value || !shv.valueField) {\r\n                        formCanSubmit = false;\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        formCanSubmit = true;\r\n                    }\r\n                }\r\n                else if (item.control.getControlType() === ControlType.DropDown) {\r\n                    const ddv = (item.value as DropDownListValue);\r\n                    if (Object.keys(ddv).length === 0 || !ddv.value) {\r\n                        formCanSubmit = false;\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        formCanSubmit = true;\r\n                    }\r\n                }\r\n                else if (item.control.getControlType() === ControlType.DateRange) {\r\n                    const drv = (item.value as DateRangeValue);\r\n                    if (Object.keys(drv).length === 0 || (!drv.startTime && !drv.endTime)) {\r\n                        formCanSubmit = false;\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        formCanSubmit = true;\r\n                    }\r\n                }\r\n                else if (item.control.getControlType() === ControlType.DateRangeTime) {\r\n                    const drv = (item.value as DateRangeTimeValue);\r\n                    if (Object.keys(drv).length === 0 || (!drv.startTime && !drv.endTime)) {\r\n                        formCanSubmit = false;\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        formCanSubmit = true;\r\n                    }\r\n                }\r\n                else if (item.control.getControlType() === ControlType.MonthRange) {\r\n                    const mrv = (item.value as MonthRangeValue);\r\n                    if (Object.keys(mrv).length === 0 || (!mrv.startTime && !mrv.endTime)) {\r\n                        formCanSubmit = false;\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        formCanSubmit = true;\r\n                    }\r\n                }\r\n                else if (item.control.getControlType() === ControlType.YearRange) {\r\n                    const yrv = (item.value as YearRangeValue);\r\n                    if (Object.keys(yrv).length === 0 || (!yrv.startTime && !yrv.endTime)) {\r\n                        formCanSubmit = false;\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        formCanSubmit = true;\r\n                    }\r\n                } else if (item.control.getControlType() === ControlType.NumberRange) {\r\n                    const nrv = (item.value as NumberRangeValue);\r\n                    if (Object.keys(nrv).length === 0 || (nrv.startValue === null && nrv.endValue === null)) {\r\n                        formCanSubmit = false;\r\n                        return false;\r\n                    } else {\r\n                        formCanSubmit = true;\r\n                    }\r\n                } else if (item.control.getControlType() === ControlType.Search) {\r\n                    const sv = (item.value as SearchValue);\r\n                    if (Object.keys(sv).length < 0 || !sv.value) {\r\n                        formCanSubmit = false;\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        formCanSubmit = true;\r\n                    }\r\n                }\r\n                else if (item.control.getControlType() === ControlType.Date) {\r\n                    const dv = (item.value as DateValue);\r\n                    if (Object.keys(dv).length < 0 || !dv.value) {\r\n                        formCanSubmit = false;\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        formCanSubmit = true;\r\n                    }\r\n                }\r\n                else if (item.control.getControlType() === ControlType.Month) {\r\n                    const mv = (item.value as MonthValue);\r\n                    if (Object.keys(mv).length < 0 || !mv.value) {\r\n                        formCanSubmit = false;\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        formCanSubmit = true;\r\n                    }\r\n                }\r\n                else if (item.control.getControlType() === ControlType.Year) {\r\n                    const yv = (item.value as YearValue);\r\n                    if (Object.keys(yv).length < 0 || !yv.value) {\r\n                        formCanSubmit = false;\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        formCanSubmit = true;\r\n                    }\r\n                }\r\n                else if (item.control.getControlType() === ControlType.CheckboxGroup) {\r\n                    const cbgv = (item.value as CheckboxGroupValue);\r\n                    if (Object.keys(cbgv).length === 0 || Object.keys(cbgv.value).length === 0) {\r\n                        formCanSubmit = false;\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        formCanSubmit = true;\r\n                    }\r\n                }\r\n                else if (item.control.getControlType() === ControlType.Radio) {\r\n                    const radiov = (item.value as RadioGroupValue);\r\n                    if (Object.keys(radiov).length < 0 || radiov.value === '') {\r\n                        formCanSubmit = false;\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        formCanSubmit = true;\r\n                    }\r\n                }\r\n                else if (item.control.getControlType() === ControlType.InputGroup) {\r\n                    const sv = (item.value as InputGroupValue);\r\n                    if (Object.keys(sv).length < 0 || !sv.textValue) {\r\n                        formCanSubmit = false;\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        formCanSubmit = true;\r\n                    }\r\n                }\r\n                else if (item.control.getControlType() === ControlType.Number) {\r\n                    const nrv = (item.value as NumberValue);\r\n                    if (Object.keys(nrv).length === 0 || (nrv.value == null)) {\r\n                        formCanSubmit = false;\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        formCanSubmit = true;\r\n                    }\r\n                }\r\n                else if (item.control.getControlType() === ControlType.FlexibleNumber) {\r\n                    const flexv = (item.value as FlexibleNumberValue);\r\n                    if (flexv.single) {\r\n                        if (Object.keys(flexv).length < 0 || flexv.value == null) {\r\n                            formCanSubmit = false;\r\n                            return false;\r\n                        }\r\n                        else {\r\n                            formCanSubmit = true;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (Object.keys(flexv).length === 0 || (flexv.startValue == null && flexv.endValue == null)) {\r\n                            formCanSubmit = false;\r\n                            return false;\r\n                        }\r\n                        else {\r\n                            formCanSubmit = true;\r\n                        }\r\n                    }\r\n                }\r\n                else if (item.control.getControlType() === ControlType.FlexibleDate) {\r\n                    const flexdatev = (item.value as FlexibleDateValue);\r\n                    if (flexdatev.single) {\r\n                        if (Object.keys(flexdatev).length < 0 || !flexdatev.value) {\r\n                            formCanSubmit = false;\r\n                            return false;\r\n                        }\r\n                        else {\r\n                            formCanSubmit = true;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (Object.keys(flexdatev).length === 0 || (!flexdatev.startValue && !flexdatev.endValue)) {\r\n                            formCanSubmit = false;\r\n                            return false;\r\n                        }\r\n                        else {\r\n                            formCanSubmit = true;\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n            return formCanSubmit;\r\n        }\r\n\r\n    }\r\n\r\n    /** é«çº§ç­éç¹å»ç¡®å®æäº¤ */\r\n    listSearch() {\r\n        if (this.disabled) { return; };\r\n        this.extendFilterList.forEach(field => {\r\n            if ((field.control.getControlType() != ControlType.Date)\r\n                && (field.control.getControlType() != ControlType.DateRange)\r\n                && (field.control.getControlType() != ControlType.DateRangeTime)\r\n                && (field.control.getControlType() != ControlType.FlexibleDate)) {\r\n                    if (!field.valueText) {\r\n                        field.valueText = field.value.getValueText();\r\n                    }\r\n            }\r\n            // if(field.control.getControlType() == ControlType.Radio){\r\n            //   console.log(field);\r\n            // }\r\n            field.filled = (field.valueText && field.valueText.length > 0) ? true : false;\r\n\r\n            if (field.control.getControlType() == ControlType.Text) {\r\n                let farrisSearchRecord = field.valueText;\r\n                let farrisSearchRecordArray = [];\r\n                let storagelabelCode = field.labelCode;\r\n                let filterPanelArray = JSON.parse(localStorage.getItem(this.localStorageKey));\r\n                if (Array.isArray(filterPanelArray)) {\r\n                    filterPanelArray = null;\r\n                }\r\n                if (!filterPanelArray || !filterPanelArray[storagelabelCode] || !filterPanelArray[storagelabelCode].length && farrisSearchRecord && farrisSearchRecord.length) {\r\n                    farrisSearchRecordArray.push(farrisSearchRecord);\r\n                }\r\n                else {\r\n                    farrisSearchRecordArray = filterPanelArray[storagelabelCode];\r\n                    let index = filterPanelArray[storagelabelCode].indexOf(farrisSearchRecord);\r\n                    if (index < 0 && farrisSearchRecord && farrisSearchRecord.length) {\r\n                        farrisSearchRecordArray.unshift(farrisSearchRecord);\r\n                    }\r\n                    farrisSearchRecordArray = farrisSearchRecordArray.slice(0, 6);\r\n                }\r\n                if (filterPanelArray == null) filterPanelArray = {};\r\n                filterPanelArray[storagelabelCode] = farrisSearchRecordArray;\r\n                localStorage.setItem(this.localStorageKey, JSON.stringify(filterPanelArray));\r\n            }\r\n\r\n        });\r\n        //å¤æ­é«çº§ç­ééæ¯å¦å·²ä¿®æ¹\r\n        let extendAmendedList = this.extendFilterList.filter(item => { return item.filled });\r\n        if (extendAmendedList && extendAmendedList.length) {\r\n            this.showExpandTag = true;\r\n        }\r\n        else {\r\n            this.showExpandTag = false;\r\n        }\r\n        this.extendFilterListStore = this.extendFilterList.map(o => ({ ...o }));\r\n        this.extendFilterListStore.forEach(field => {\r\n            let extendListIndex = this.listFilterConditions.findIndex(item => {\r\n                return item['id'] == field['id'];\r\n            });\r\n            if (extendListIndex >= 0) {\r\n                this.listFilterConditions[extendListIndex] = field;\r\n            }\r\n        });\r\n        // console.log(this.listFilterConditions);\r\n        this.searchChange.emit(this.listFilterConditions);\r\n        this.inSetCurrentFilterConditions();\r\n        this.filterListClassify();\r\n        this.farrissidebar.isOpen = false;\r\n        this.floatPanelOpen = false;\r\n        this.cd.markForCheck();\r\n        this.submit('extendFormData', this.listFilterConditions);\r\n    }\r\n    /** æäº¤è¡¨å */\r\n    submit(type, filterlist, filterItem = null) {\r\n        if (this.disabled || !this.showCanSubmit || !this.advancedCanSubmit) { return; }\r\n        const queryList = this.handler.setFilterConditions(filterlist);\r\n        this.query.emit({ type: type, data: JSON.stringify(queryList), filterItem });\r\n    }\r\n    /** è®¾ç½®ç­éåå§å¼ */\r\n    setFilterValue(fieldConfigs: FieldConfig[]) {\r\n        this.listFilterConditions = this.stagListFilterConditions.map(o => ({ ...o }));\r\n        if (this.listFilterConditions && this.listFilterConditions.length) {\r\n            this.setValues(this.listFilterConditions, fieldConfigs);\r\n            let listFilter = this.listFilterConditions.map(o => ({ ...o }));\r\n            this.listFilterConditions = listFilter;\r\n            this.filterListClassify();\r\n            this.searchChange.emit(this.listFilterConditions);\r\n            this.inSetCurrentFilterConditions();\r\n            // this.listSearch();\r\n            this.cd.detectChanges();\r\n            this.cd.markForCheck();\r\n            this.canSubmit = this.canSubmitFilter(this.requiredListFilter);\r\n            if (!this.canSubmit) {\r\n                return;\r\n            }\r\n            this.submit('showFormData', this.listFilterConditions);\r\n        }\r\n    }\r\n    /**\r\n     * æ¸ç©ºç­éæä¸é¡¹\r\n     * @param labelCode å­æ®µç¼å·å¯ä¸æ è¯\r\n     */\r\n    resetFilterValue(labelCode: string) {\r\n        if (labelCode && this.listFilterConditions && this.listFilterConditions.length) {\r\n            let resetCondition = this.listFilterConditions.find((conditions) => {\r\n                return conditions['fieldCode'] === labelCode;\r\n            })\r\n            if (resetCondition) {\r\n                this.resetListCondition(resetCondition);\r\n                this.filterListClassify();\r\n                this.cd.markForCheck();\r\n                this.searchChange.emit(this.listFilterConditions);\r\n                this.inSetCurrentFilterConditions();\r\n                this.advancedCanSubmit = this.canSubmitFilter(this.extendRequiredList);\r\n                this.submit('panelFormData', this.listFilterConditions);\r\n            }\r\n        }\r\n    }\r\n\r\n    // è®¾ç½®value\r\n    setValues(conditions, fieldConfigs: FieldConfig[]) {\r\n        let qc: QueryCondition;\r\n        let controlType: string;\r\n        if (fieldConfigs && fieldConfigs.length) {\r\n            fieldConfigs.forEach(v => {\r\n                qc = conditions.find(c => c.fieldCode == v.labelCode);\r\n                if (qc) {\r\n                    controlType = this.getControlType(qc);\r\n                    qc.value = this.filterService.setValues(controlType, v.value, qc.control.single);\r\n                    qc.valueText = qc.value.getValueText(qc.control);\r\n                    if (v.value) {\r\n                        qc.filled = true;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    getValue(fieldName: string) {\r\n        const queryList = this.handler.setFilterConditions(this.listFilterConditions);\r\n        const item = queryList.find((n: any) => n['FilterField'] === fieldName);\r\n        if (item) {\r\n            return item.value;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     * @param selectedFieldCondition \r\n     */\r\n    getControlType(selectedFieldCondition: QueryCondition): string {\r\n        if (selectedFieldCondition) {\r\n            if (selectedFieldCondition.control.getControlType() == ControlType.Text) {\r\n                return 'input';\r\n            }\r\n            else if (selectedFieldCondition.control.getControlType() == ControlType.Search) {\r\n                return 'search';\r\n            }\r\n            else if (selectedFieldCondition.control.getControlType() == ControlType.Date) {\r\n                return 'date';\r\n            }\r\n            else if (selectedFieldCondition.control.getControlType() == ControlType.Month) {\r\n                return 'month';\r\n            }\r\n            else if (selectedFieldCondition.control.getControlType() == ControlType.Year) {\r\n                return 'year';\r\n            }\r\n            else if (selectedFieldCondition.control.getControlType() == ControlType.DateRange) {\r\n                return 'daterange';\r\n            }\r\n            else if (selectedFieldCondition.control.getControlType() == ControlType.MonthRange) {\r\n                return 'monthrange';\r\n            }\r\n            else if (selectedFieldCondition.control.getControlType() == ControlType.YearRange) {\r\n                return 'yearrange';\r\n            }\r\n            else if (selectedFieldCondition.control.getControlType() == ControlType.DateRangeTime) {\r\n                return 'daterangetime';\r\n            }\r\n            else if (selectedFieldCondition.control.getControlType() == ControlType.DropDown) {\r\n                return 'dropdown';\r\n            }\r\n            else if (selectedFieldCondition.control.getControlType() == ControlType.NumberRange) {\r\n                return 'number';\r\n            }\r\n            else if (selectedFieldCondition.control.getControlType() == ControlType.Help) {\r\n                return 'help';\r\n            }\r\n            else if (selectedFieldCondition.control.getControlType() == ControlType.CheckboxGroup) {\r\n                return 'checkboxgroup';\r\n            }\r\n            else if (selectedFieldCondition.control.getControlType() == ControlType.Radio) {\r\n                return 'radio';\r\n            }\r\n            else if (selectedFieldCondition.control.getControlType() == ControlType.InputGroup) {\r\n                return 'input-group';\r\n            }\r\n            else if (selectedFieldCondition.control.getControlType() == ControlType.Number) {\r\n                return 'singlenumber';\r\n            }\r\n            else if (selectedFieldCondition.control.getControlType() == ControlType.FlexibleNumber) {\r\n                return 'flexiblenumber';\r\n            }\r\n            else if (selectedFieldCondition.control.getControlType() == ControlType.FlexibleDate) {\r\n                return 'flexibledate';\r\n            }\r\n            else {\r\n                return 'input';\r\n            }\r\n        }\r\n\r\n    }\r\n    /**\r\n     * æ´æ°ä¸ä¸æä¸­ç­éæ°æ®\r\n     */\r\n    inSetCurrentFilterConditions() {\r\n        if (this.filterHandler) {\r\n            this.filterHandler.setCurrentFilterConditions(this.listFilterConditions);\r\n        }\r\n    }\r\n\r\n    /** æ¸ç©ºæ¡ä»¶ */\r\n    resetListCondition(listFilterCondition: QueryCondition) {\r\n        if (listFilterCondition.control.getControlType() == ControlType.Text) {\r\n            listFilterCondition.value = new TextValue();\r\n        }\r\n        else if (listFilterCondition.control.getControlType() == ControlType.Search) {\r\n            listFilterCondition.value = new SearchValue();\r\n        }\r\n        else if (listFilterCondition.control.getControlType() == ControlType.Date) {\r\n            listFilterCondition.value = new DateValue();\r\n        }\r\n        else if (listFilterCondition.control.getControlType() == ControlType.Month) {\r\n            listFilterCondition.value = new MonthValue();\r\n        }\r\n        else if (listFilterCondition.control.getControlType() == ControlType.Year) {\r\n            listFilterCondition.value = new YearValue();\r\n        }\r\n        else if (listFilterCondition.control.getControlType() == ControlType.DateRange) {\r\n            listFilterCondition.value = new DateRangeValue();\r\n        }\r\n        else if (listFilterCondition.control.getControlType() == ControlType.MonthRange) {\r\n            listFilterCondition.value = new MonthRangeValue();\r\n        }\r\n        else if (listFilterCondition.control.getControlType() == ControlType.YearRange) {\r\n            listFilterCondition.value = new YearRangeValue();\r\n        }\r\n        else if (listFilterCondition.control.getControlType() == ControlType.DropDown) {\r\n            listFilterCondition.value = new DropDownListValue();\r\n        }\r\n        else if (listFilterCondition.control.getControlType() == ControlType.NumberRange) {\r\n            listFilterCondition.value = new NumberRangeValue();\r\n        }\r\n        else if (listFilterCondition.control.getControlType() == ControlType.Help) {\r\n            listFilterCondition.value = new HelpValue();\r\n        }\r\n        else if (listFilterCondition.control.getControlType() == ControlType.CheckboxGroup) {\r\n            listFilterCondition.value = new CheckboxGroupValue();\r\n        }\r\n        else if (listFilterCondition.control.getControlType() == ControlType.Radio) {\r\n            listFilterCondition.value = new RadioGroupValue();\r\n        }\r\n        else if (listFilterCondition.control.getControlType() == ControlType.InputGroup) {\r\n            listFilterCondition.value = new InputGroupValue();\r\n        }\r\n        else if (listFilterCondition.control.getControlType() == ControlType.Number) {\r\n            listFilterCondition.value = new NumberValue();\r\n        }\r\n        else if (listFilterCondition.control.getControlType() == ControlType.FlexibleNumber) {\r\n            listFilterCondition.value = new FlexibleNumberValue({ startValue: null, endValue: null, value: null }, listFilterCondition.control.single);\r\n        }\r\n        else if (listFilterCondition.control.getControlType() == ControlType.FlexibleDate) {\r\n            listFilterCondition.value = new FlexibleDateValue({ startValue: null, endValue: null, value: null }, listFilterCondition.control.single);\r\n        }\r\n        else {\r\n            listFilterCondition.value = new TextValue();\r\n        }\r\n        listFilterCondition.valueText = '';\r\n        listFilterCondition.filled = false;\r\n        // return listFilterCondition;\r\n    }\r\n\r\n    resetSearch() {\r\n        if (this.disabled) { return; }\r\n        if (this.listFilterConditions && this.listFilterConditions.length) {\r\n            this.listFilterConditions.forEach(listFilterCondition => {\r\n                this.resetListCondition(listFilterCondition);\r\n            });\r\n            this.listFilterConditions = this.listFilterConditions.map(o => ({ ...o }));\r\n            this.filterListClassify();\r\n            this.showCanSubmit = true;\r\n            this.submit('panelFormData', this.listFilterConditions);\r\n        }\r\n        this.resetChange.emit();\r\n        this.showExpandTag = false;\r\n    }\r\n    /**\r\n     * é«çº§ç­éæ¸ç©ºç­é\r\n     */\r\n    resetAdvancedSearch() {\r\n        if (this.extendFilterList && this.extendFilterList.length) {\r\n            this.extendFilterList.forEach(listFilterCondition => {\r\n                this.resetListCondition(listFilterCondition);\r\n            })\r\n            this.extendFilterList = this.extendFilterList.map(o => ({ ...o }));\r\n        }\r\n        if (this.extendRequiredList.length) {\r\n            this.advancedCanSubmit = false;\r\n        }\r\n\r\n    }\r\n    /**\r\n     * valueText ç¹æ®ç±»åå¤ç\r\n     * @param item \r\n     */\r\n    getValueText(item: QueryCondition) {\r\n        // console.log(item.fieldName,item.control.getControlType());\r\n        if (item.control.getControlType() === ControlType.DropDown) {\r\n            const enumValue = (item.control as DropDownControl).enumValues;\r\n            const value = (item.value as DropDownListValue).value;\r\n            if (enumValue && enumValue.length) {\r\n                const texts = enumValue.find(val => {\r\n                    return val['value'] == value;\r\n                });\r\n                if (texts) {\r\n                    item.valueText = texts['name'];\r\n                }\r\n            }\r\n        }\r\n        else if (item.control.getControlType() === ControlType.CheckboxGroup) {\r\n            const enumValue = (item.control as CheckboxGroupControl).enumValues;\r\n            const value = (item.value as CheckboxGroupValue).value;\r\n            if (enumValue && enumValue.length && value && value['length'] > 0) {\r\n                if (item.control.boolcheck) {\r\n                    item.valueText = value[0].toString();\r\n                    if (item.valueText == 'true') {\r\n                        item.valueText = this.localeService.getValue('text.yes');\r\n                    } else if (item.valueText == 'false') {\r\n                        item.valueText = this.localeService.getValue('text.no');\r\n                    }\r\n                }\r\n                else {\r\n                    let texts = [];\r\n                    for (let i = 0; i <= value['length']; i++) {\r\n                        const enums = enumValue.find(val => {\r\n                            return val['value'] == value[i];\r\n                        });\r\n                        if (enums) {\r\n                            texts.push(enums['name']);\r\n                        }\r\n                    }\r\n                    item.valueText = texts.join(',');\r\n                }\r\n            }\r\n        }\r\n        else if (item.control.getControlType() === ControlType.Radio) {\r\n            const enumValue = (item.control as RadioControl).enumValues;\r\n            const value = (item.value as RadioGroupValue).value;\r\n            if (enumValue && enumValue.length) {\r\n                const texts = enumValue.find(val => {\r\n                    return val['value'] == value;\r\n                });\r\n                if (texts) {\r\n                    item.valueText = texts['name'];\r\n                    if (item.valueText == 'true') {\r\n                        item.valueText = this.localeService.getValue('text.yes');\r\n                    } else if (item.valueText == 'false') {\r\n                        item.valueText = this.localeService.getValue('text.no');\r\n                    }\r\n                }\r\n            }\r\n        } else if (item.control.getControlType() == ControlType.InputGroup) {\r\n            item.valueText = item.value.getValueText();\r\n        }\r\n    }\r\n\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { QueryCondition } from '../entity/querycondition';\r\n\r\n@Injectable()\r\nexport class SolutionService {\r\n\r\n  constructor() { }\r\n\r\n  getGuid() {\r\n    return (this.s4() + this.s4() + \"-\" + this.s4() + \"-\" + this.s4() + \"-\" + this.s4() + \"-\" + this.s4() + this.s4() + this.s4());\r\n  }\r\n\r\n  private s4() {\r\n    return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n  }\r\n  /**\r\n  * æ ¹æ®å­æ®µè·åLableæ§ä»¶çTitle\r\n  * @param field \r\n  */\r\n  getConditionItemTitle(field: QueryCondition) {\r\n    if (field.id && field.id !== '') {\r\n      return field.fieldName;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * æ°ç»åé ä¹å¯ä½¿ç¨JSON.Parse(JSON.Stringify([input])),åæç±»ç»æä¸­æ²¡æåå£\r\n   * @param input \r\n   */\r\n  arrayClone(input: Array<any>): Array<any> {\r\n    let result = new Array<any>();\r\n    if (input && input.length > 0) {\r\n      input.forEach(element => {\r\n        result.push(Object.assign({}, element));\r\n      });\r\n    }\r\n    return result;\r\n  }\r\n}\r\n","import { Component, Input, OnInit, OnChanges, HostBinding, EventEmitter, Output, AfterViewInit, ElementRef} from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { SolutionService } from '../../service/solution.service';\r\n\r\n@Component({\r\n    selector: 'app-filter-input',\r\n    templateUrl: './input.component.html'\r\n})\r\n\r\nexport class InputComponent implements OnInit,OnChanges,AfterViewInit{\r\n   \r\n    /**\r\n     * QueryConditionç±»å\r\n     */\r\n    @Input() item:any;\r\n    @Input() autoLabel:boolean;\r\n    @Input() disabled:boolean;\r\n    @Output('searchHandle') searchHandle = new EventEmitter();\r\n\r\n    /**å¤æ­æ¯å¦æ¯å¨æ©å±åºåå±ç¤º */\r\n    extend:boolean = false;\r\n    /**å¤æ­æ¯å¦æ¾ç¤ºlabel */\r\n    showlabel:boolean = true;\r\n    placeholder: string;\r\n\r\n    @HostBinding('class.filter-item-wrap')\r\n    get isExtend(): boolean {\r\n        return !this.extend && this.autoLabel;\r\n    }\r\n    @HostBinding('class.filter-item-hiddenlabel')\r\n    get hidenLabel(): boolean {\r\n        return !this.showlabel;\r\n    }\r\n    \r\n    constructor(private solutionService:SolutionService,private readonly element: ElementRef){}\r\n\r\n    ngOnInit(): void {\r\n        //console.log(this.item);\r\n        if(this.item){\r\n            this.placeholder = this.item.placeHolder || '';\r\n            // const type = Object.prototype.toString.call(this.item.placeHolder);\r\n            // if(type == '[object Undefined]'){\r\n            //     if(this.item.control && this.item.control.hasOwnProperty('placeholder')){\r\n            //         this.placeholder = this.item.control.placeholder;\r\n            //     }\r\n            // }\r\n            // else{\r\n            //     this.placeholder = this.item.placeHolder;\r\n            // }\r\n        }\r\n        if(this.item && this.item.control && this.item.control.hasOwnProperty('isExtend')) {\r\n            this.extend = this.item.control.isExtend;\r\n            if(!this.extend){\r\n                this.showlabel = this.item.control.showLabel;\r\n            }\r\n        }\r\n    }\r\n    ngAfterViewInit() {\r\n        // if(!this.extend){\r\n        //     const El = this.element.nativeElement;\r\n        //     const itemWidth = El.clientWidth;\r\n        //     El.querySelector('.list-filter-input-item').style.width = itemWidth + 'px';\r\n        //     El.querySelector('.input-item-btns').style.width = itemWidth + 100 + 'px';\r\n        // }\r\n    }\r\n    ngOnChanges(): void {\r\n        \r\n    }\r\n\r\n    // getConditionItemStyle(field: QueryCondition, controlType: any) {\r\n    //     return this.solutionService.getConditionItemStyle(field,controlType);\r\n    // }\r\n\r\n    getConditionItemTitle(field:QueryCondition){\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n\r\n    InputChanged(e){\r\n        // let keycode = window.event ? e.keyCode : e.which;\r\n        // if(keycode == 13){//åè½¦é®\r\n        //     this.searchHandle.emit(this.item.value.value);\r\n        // }\r\n        if(this.disabled){return;}\r\n        this.searchHandle.emit(this.item.value.value);\r\n    }\r\n}","import { Component, Input, OnInit, HostBinding, EventEmitter, Output, AfterViewInit, ElementRef} from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { SolutionService } from '../../service/solution.service';\r\nimport { NumberRangeValue, NumberRangeValueConvertor } from '../../entity/conditionvalue/numberrangevaue';\r\n// import { NumberRangeValue } from '../../entity/conditionvalue/numberrangevaue';\r\n\r\n\r\n@Component({\r\n    selector: 'app-filter-number',\r\n    templateUrl: './number.component.html'\r\n})\r\n\r\nexport class NumberComponent implements OnInit,AfterViewInit{\r\n   \r\n    // @Input() item:any;\r\n    @Input() autoLabel:boolean;\r\n    @Input() disabled:boolean;\r\n    @Output('searchHandle') searchHandle = new EventEmitter();\r\n\r\n    /**å¤æ­æ¯å¦æ¯å¨æ©å±åºåå±ç¤º */\r\n    extend:boolean = false;\r\n    /**å¤æ­æ¯å¦æ¾ç¤ºlabel */\r\n    showlabel:boolean = true;\r\n    canNull:boolean = true;\r\n\r\n    number:string;\r\n    beginValue: any;\r\n    endValue: any;\r\n    precision: number;\r\n    placeholder: string;\r\n    beginPlaceHolder:string;\r\n    endPlaceHolder:string;\r\n    bigNumber:boolean;\r\n    max:number;\r\n    min:number;\r\n\r\n    @HostBinding('class.filter-item-wrap')\r\n    get isExtend(): boolean {\r\n        return !this.extend && this.autoLabel;\r\n    }\r\n    @HostBinding('class.filter-item-hiddenlabel')\r\n    get hidenLabel(): boolean {\r\n        return !this.showlabel;\r\n    }\r\n\r\n    _item: any;\r\n    numberRange: string;\r\n    @Input() \r\n    set item(nr: any){\r\n        this._item = nr;\r\n        this.precision = nr.control.precision;\r\n        this.bigNumber = nr.control.bigNumber;\r\n        if(!this.bigNumber){\r\n            this.min = -2147483648;\r\n            this.max = 2147483647;\r\n        }\r\n        this.constructMultiFieldNumberRange(nr.value as NumberRangeValue);\r\n        if(this._item && this._item.control && this._item.control.hasOwnProperty('isExtend')){\r\n            this.extend = this._item.control.isExtend;\r\n            if(!this.extend){\r\n                this.showlabel = this._item.control.showLabel;\r\n            }\r\n        }\r\n    }\r\n\r\n    get item(){\r\n        return this._item;\r\n    }\r\n\r\n    constructor(private solutionService:SolutionService,private readonly element: ElementRef){}\r\n\r\n    ngOnInit(): void {\r\n        if(this.item){\r\n            this.beginPlaceHolder = this.item.beginPlaceHolder || '';\r\n            this.endPlaceHolder = this.item.endPlaceHolder || '';\r\n            // const type = Object.prototype.toString.call(this.item.placeHolder);\r\n            // if(type == '[object Undefined]'){\r\n            //     if(this.item.control && this.item.control.hasOwnProperty('placeholder')){\r\n            //         this.placeholder = this.item.control.placeholder;\r\n            //     }\r\n            // }\r\n            // else{\r\n            //     this.placeholder = this.item.placeHolder;\r\n            // }\r\n            // const beginplac = Object.prototype.toString.call(this.item.beginPlaceHolder);\r\n            // if(beginplac == '[object Undefined]'){\r\n            //     if(this.item.control && this.item.control.hasOwnProperty('placeholder')){\r\n            //         this.beginPlaceHolder = this.item.control.beginPlaceHolder;\r\n            //     }\r\n            // }\r\n            // else{\r\n            //     this.beginPlaceHolder = this.item.beginPlaceHolder;\r\n            // }\r\n            // const endplac = Object.prototype.toString.call(this.item.beginPlaceHolder);\r\n            // if(endplac == '[object Undefined]'){\r\n            //     if(this.item.control && this.item.control.hasOwnProperty('placeholder')){\r\n            //         this.endPlaceHolder = this.item.control.endPlaceHolder;\r\n            //     }\r\n            // }\r\n            // else{\r\n            //     this.endPlaceHolder = this.item.endPlaceHolder;\r\n            // }\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        // if(!this.extend){\r\n        //     const El = this.element.nativeElement;\r\n        //     const itemWidth = El.clientWidth;\r\n        //     El.querySelector('.list-filter-number-item').style.width = itemWidth + 'px';\r\n        //     El.querySelector('.number-item-btns').style.width = itemWidth + 100 + 'px';\r\n        // }\r\n    }\r\n\r\n    getConditionItemTitle(field:QueryCondition){\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n\r\n    // constructNumberRange(value: NumberRangeValue): string{\r\n    //     return \"a~b\".replace(/a/,value.startValue?value.startValue.toString().trim():\"\").replace(/b/,value.endValue?value.endValue.toString().trim():\"\");\r\n    // }\r\n    constructMultiFieldNumberRange(value: NumberRangeValue) {\r\n        // this.beginValue = value && value.startValue ? value.startValue.toString().trim() : '';\r\n        // this.endValue = value && value.endValue ? value.endValue.toString().trim() : '';\r\n        this.beginValue = value.startValue == null ? null : value.startValue;\r\n        this.endValue = value.endValue == null ? null : value.endValue;\r\n      }\r\n\r\n    numberChange(event){\r\n        if(event){\r\n            // const dataArray = event.split(\"~\");\r\n            // console.log(dataArray);\r\n            // this._item.value = (new NumberRangeValueConvertor).initFromObject({startValue: dataArray[0], endValue: dataArray[1]});\r\n            const dataArray = event.split(\"~\");\r\n            this.item.value.startValue = dataArray[0] ? dataArray[0] : null;\r\n            this.item.value.endValue = dataArray[1] ? dataArray[1] : null;\r\n        }\r\n        else{\r\n            this._item.value.startValue = null;\r\n            this._item.value.endValue = null;\r\n        }\r\n        // const dataArray = event.split(\"~\");\r\n        // this._item.value = (new NumberRangeValueConvertor).initFromObject({startValue: dataArray[0], endValue: dataArray[1]});\r\n        if(this.disabled){return;}\r\n        this.searchHandle.emit();\r\n    }\r\n\r\n    beginValueChange($event) {\r\n        this.beginValue = $event;\r\n    }\r\n\r\n    endValueChange($event) {\r\n        this.endValue = $event;\r\n    }\r\n\r\n    // onSearch(){\r\n    //     if(this.disabled){return;}\r\n    //     this.searchHandle.emit();\r\n    // }\r\n}","import { Component, Input, OnInit, OnChanges, HostBinding, EventEmitter, Output} from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { ControlType } from '../../entity/controltype';\r\nimport { DropDownControl } from '../../entity/controltype/dropdownlist/dropdowncontrol';\r\nimport { EnumType } from '../../entity/controltype/dropdownlist/enumtype';\r\nimport { EnumIntegerValue } from '../../entity/controltype/dropdownlist/integerenumvalue';\r\nimport { EnumStringValue } from '../../entity/controltype/dropdownlist/stringenumvalue';\r\nimport { EnumBoolValue } from '../../entity/controltype/dropdownlist/boolenumvalue';\r\nimport { SolutionService } from '../../service/solution.service';\r\nimport { DropDownListValue } from '../../entity/conditionvalue/dropdownlistvalue';\r\n\r\n@Component({\r\n    selector: 'app-filter-dropdown',\r\n    templateUrl: './dropdown.component.html'\r\n})\r\n\r\nexport class DropDownComponent implements OnInit,OnChanges{\r\n   \r\n    /**\r\n     * QueryConditionç±»å\r\n     */\r\n    @Input() item:any;\r\n    @Input() autoLabel:boolean;\r\n    @Input() disabled:boolean;\r\n    @Output('searchHandle') searchHandle = new EventEmitter();\r\n\r\n    dropDownListDataSource:Array<any>=new Array<any>();\r\n    /**å¤æ­æ¯å¦æ¯å¨æ©å±åºåå±ç¤º */\r\n    extend:boolean = false;\r\n    /**å¤æ­æ¯å¦æ¾ç¤ºlabel */\r\n    showlabel:boolean = true;\r\n    \r\n    selectedItemId: any;\r\n    placeholder: string;\r\n\r\n\r\n    @HostBinding('class.filter-item-wrap')\r\n    get isExtend(): boolean {\r\n        return !this.extend && this.autoLabel;\r\n    }\r\n    @HostBinding('class.filter-item-hiddenlabel')\r\n    get hidenLabel(): boolean {\r\n        return !this.showlabel;\r\n    }\r\n\r\n    constructor(private solutionService:SolutionService){}\r\n\r\n    ngOnInit(): void {\r\n        // this.getDataSource();\r\n        // const initialValue = this.item.value as DropDownListValue;\r\n        // initialValue.value && (this.selectedItemId = initialValue.value.getEnumValue());\r\n        if(this.item){\r\n            this.placeholder = this.item.placeHolder;\r\n            // const type = Object.prototype.toString.call(this.item.placeHolder);\r\n            // if(type == '[object Undefined]'){\r\n            //     if(this.item.control && this.item.control.hasOwnProperty('placeholder')){\r\n            //         this.placeholder = this.item.control.placeholder;\r\n            //     }\r\n            // }\r\n            // else{\r\n            //     this.placeholder = this.item.placeHolder;\r\n            // }\r\n        }\r\n        this.getDataSource();\r\n        const initialValue = this.item.value as DropDownListValue;\r\n        initialValue.value && (this.selectedItemId = initialValue.value);\r\n        if(this.item && this.item.control && this.item.control.hasOwnProperty('isExtend')){\r\n            this.extend = this.item.control.isExtend;\r\n            if(!this.extend){\r\n                this.showlabel = this.item.control.showLabel;\r\n            }\r\n        }\r\n        \r\n        // this.testId = this.solutionService.getGuid();\r\n    }\r\n\r\n    ngOnChanges(): void {\r\n        this.getDataSource();\r\n        //console.log(this.dropDownListDataSource);\r\n    }\r\n\r\n    getDataSource(){\r\n        if(this.item&&this.item.value\r\n            &&this.item.control&&this.item.control.getControlType()==ControlType.DropDown){\r\n                let dropDownList=(this.item.control as DropDownControl);\r\n                if(dropDownList.valueType==EnumType.BoolType){\r\n                    this.dropDownListDataSource=Array<EnumBoolValue>();\r\n                    if(dropDownList.enumValues&&dropDownList.enumValues.length>0){\r\n                        dropDownList.enumValues.forEach(element => {\r\n                            this.dropDownListDataSource.push(Object.assign(new EnumBoolValue(),element));\r\n                        });\r\n                    }\r\n                }\r\n                else if(dropDownList.valueType==EnumType.IntType){\r\n                    this.dropDownListDataSource=Array<EnumIntegerValue>();\r\n                    if(dropDownList.enumValues&&dropDownList.enumValues.length>0){\r\n                        dropDownList.enumValues.forEach(element => {\r\n                            this.dropDownListDataSource.push(Object.assign(new EnumIntegerValue(),element));\r\n                        });\r\n                    }\r\n                }\r\n                else if(dropDownList.valueType==EnumType.StringType){\r\n                    this.dropDownListDataSource=Array<EnumStringValue>();\r\n                    if(dropDownList.enumValues&&dropDownList.enumValues.length>0){\r\n                        dropDownList.enumValues.forEach(element => {\r\n                            this.dropDownListDataSource.push(Object.assign(new EnumStringValue(),element));\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n    }\r\n\r\n    // getConditionItemStyle(field: QueryCondition, controlType: any) {\r\n    //     return this.solutionService.getConditionItemStyle(field,controlType);\r\n    // }\r\n\r\n    getConditionItemTitle(field:QueryCondition){\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n\r\n    onSearch(event){\r\n        if(event){\r\n            (this.item.value as DropDownListValue).value = event.data.value;\r\n        }else{\r\n            (this.item.value as DropDownListValue).value = '';\r\n        }\r\n        if(this.disabled){return;}\r\n        this.searchHandle.emit();\r\n    }\r\n\r\n    onClear(event){\r\n        (this.item.value as DropDownListValue).value = '';\r\n        this.searchHandle.emit();\r\n    }\r\n}","import { Component, Input, OnInit, OnChanges, HostBinding, Output, EventEmitter} from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { SolutionService } from '../../service/solution.service';\r\n\r\n@Component({\r\n    selector: 'app-filter-search',\r\n    templateUrl: './search.component.html'\r\n})\r\n\r\nexport class SearchComponent implements OnInit,OnChanges{\r\n   \r\n    /**\r\n     * QueryConditionç±»å\r\n     */\r\n    @Input() item:any;\r\n    @Input() autoLabel:boolean;\r\n    @Input() disabled:boolean;\r\n    @Output('searchHandle') searchHandle = new EventEmitter();\r\n\r\n    /**å¤æ­æ¯å¦æ¯å¨æ©å±åºåå±ç¤º */\r\n    extend:boolean = false;\r\n    /**å¤æ­æ¯å¦æ¾ç¤ºlabel */\r\n    showlabel:boolean = true;\r\n    placeholder: string;\r\n\r\n    @HostBinding('class.filter-item-wrap')\r\n    get isExtend(): boolean {\r\n        return !this.extend && this.autoLabel;\r\n    }\r\n\r\n    @HostBinding('class.filter-item-hiddenlabel')\r\n    get hidenLabel(): boolean {\r\n        return !this.showlabel;\r\n    }\r\n\r\n    groupIcon = '<span class=\"k-icon k-i-search\"></span>';\r\n\r\n    constructor(private solutionService:SolutionService){}\r\n\r\n    ngOnInit(): void {\r\n        if(this.item){\r\n            this.placeholder = this.item.placeHolder || '';\r\n            // const type = Object.prototype.toString.call(this.item.placeHolder);\r\n            // if(type == '[object Undefined]'){\r\n            //     if(this.item.control && this.item.control.hasOwnProperty('placeholder')){\r\n            //         this.placeholder = this.item.control.placeholder;\r\n            //     }\r\n            // }\r\n            // else{\r\n            //     this.placeholder = this.item.placeHolder;\r\n            // }\r\n        }\r\n        if(this.item && this.item.control && this.item.control.hasOwnProperty('isExtend')){\r\n            this.extend = this.item.control.isExtend;\r\n            if(!this.extend){\r\n                this.showlabel = this.item.control.showLabel;\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnChanges(): void {\r\n        \r\n    }\r\n\r\n    // getConditionItemStyle(field: QueryCondition, controlType: any) {\r\n    //     return this.solutionService.getConditionItemStyle(field,controlType);\r\n    // }\r\n\r\n    getConditionItemTitle(field:QueryCondition){\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n\r\n    onSearch($event){\r\n        if(this.disabled){return;}\r\n        this.searchHandle.emit($event);\r\n    }\r\n}","import { CheckboxIEnumValue } from \"./ienumvalue\";\r\n\r\n/**\r\n * checboxgroupç±»å\r\n */\r\nexport class CheckboxValue implements CheckboxIEnumValue{\r\n\r\n    getEnumValueName():string{\r\n        return this.name;\r\n    }\r\n\r\n    getEnumValue():any{\r\n        return this.value;\r\n    }\r\n    \r\n    /**\r\n     * ææ¬æ¾ç¤º\r\n     */\r\n    name:string;\r\n\r\n    /**\r\n     * å¼æ¾ç¤º\r\n     */\r\n    value:string;\r\n}","import { Component, Input, OnInit, OnChanges, ViewEncapsulation, HostBinding, EventEmitter, Output} from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { ControlType } from '../../entity/controltype';\r\nimport { SolutionService } from '../../service/solution.service';\r\nimport { CheckboxGroupControl } from '../../entity/controltype/checkbox/checkboxcontrol';\r\nimport { CheckboxValue } from '../../entity/controltype/checkbox/checkboxvalue';\r\nimport { CheckboxGroupValue } from '../../entity/conditionvalue/checkboxgroupvalue';\r\n\r\n@Component({\r\n    selector: 'app-filter-checkbox',\r\n    templateUrl: './checkbox.component.html'\r\n    // encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class filterCheckboxComponent implements OnInit,OnChanges{\r\n   \r\n    /**\r\n     * QueryConditionç±»å\r\n     */\r\n    @Input() item:any;\r\n    @Input() autoLabel:boolean;\r\n    @Input() disabled:boolean;\r\n    @Output('searchHandle') searchHandle = new EventEmitter();\r\n    /**å¤æ­æ¯å¦æ¯å¨æ©å±åºåå±ç¤º */\r\n    extend:boolean = false;\r\n    /**å¤æ­æ¯å¦æ¾ç¤ºlabel */\r\n    showlabel:boolean = true;\r\n    boolcheck:boolean = false;\r\n    checkValue: any[];\r\n    indeterminate:boolean = true;\r\n    boolchecked:boolean;\r\n    boolCheckState:string = 'indeterminate';\r\n\r\n    selectCheck = [];\r\n\r\n    @HostBinding('class.filter-item-wrap')\r\n    get isExtend(): boolean {\r\n        return !this.extend && this.autoLabel;\r\n    }\r\n\r\n    @HostBinding('class.filter-item-checbox-wrap')\r\n    get isCheckExtend(): boolean {\r\n        return !this.extend;\r\n    }\r\n\r\n    @HostBinding('class.filter-item-checkboxgroup') cla = true;\r\n    @HostBinding('class.filter-item-hiddenlabel')\r\n    get hidenLabel(): boolean {\r\n        return !this.showlabel;\r\n    }\r\n\r\n    checkboxDataSource:Array<any>=new Array<any>();\r\n\r\n    constructor(private solutionService:SolutionService){}\r\n\r\n    ngOnInit(): void {\r\n        //this.checkValue = this.item.value.getOriginalValue();\r\n        if(this.item && this.item.control && this.item.control.hasOwnProperty('isExtend')){\r\n            this.extend = this.item.control.isExtend;\r\n            this.boolcheck = this.item.control.boolcheck;\r\n            if(!this.extend){\r\n                this.showlabel = this.item.control.showLabel;\r\n            }\r\n        }\r\n        this.getDataSource();\r\n    }\r\n\r\n    ngOnChanges(): void {\r\n        this.getDataSource();\r\n    }\r\n\r\n    getDataSource(){\r\n        this.checkValue = this.item.value.getOriginalValue();\r\n        if(this.boolcheck){\r\n            if(this.checkValue.length) {\r\n                this.boolchecked = this.checkValue[0];\r\n                if(this.boolchecked) this.boolCheckState = 'checked';\r\n                else this.boolCheckState = 'unchecked';\r\n            }\r\n            else this.boolCheckState = 'indeterminate';\r\n        }\r\n        if(this.item && this.item.control && this.item.control.getControlType()==ControlType.CheckboxGroup){\r\n            let checkboxList=(this.item.control as CheckboxGroupControl);\r\n            this.checkboxDataSource = Array<CheckboxValue>();\r\n\r\n            if(checkboxList.enumValues && checkboxList.enumValues.length>0){\r\n                checkboxList.enumValues.forEach(element => {\r\n                    this.checkboxDataSource.push(Object.assign(new CheckboxValue(),element));\r\n                });\r\n            }\r\n        }\r\n        // if(this.item && this.item.control && this.item.control.hasOwnProperty('isExtend')){\r\n        //     this.extend = this.item.control.isExtend;\r\n        // }\r\n    }\r\n\r\n    // getConditionItemStyle(field: QueryCondition, controlType: any) {\r\n    //     return this.solutionService.getConditionItemStyle(field,controlType);\r\n    // }\r\n\r\n    getConditionItemTitle(field:QueryCondition){\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n\r\n    onSearch(event){\r\n        let checkboxValue = [];\r\n        if(event){\r\n            // let checkboxList = event.split(',');\r\n            let checkboxList = event;\r\n            if(checkboxList && checkboxList.length){\r\n                checkboxValue = checkboxList;\r\n            }\r\n            this.item.value.value = checkboxValue;\r\n        }\r\n        else{\r\n            this.item.value.value = new CheckboxGroupValue();\r\n        }\r\n        if(this.disabled){return;}\r\n        this.searchHandle.emit();\r\n    }\r\n\r\n    handleClick() {\r\n        if(this.boolCheckState == 'indeterminate'){\r\n            this.boolCheckState = 'checked';\r\n            this.boolchecked = true;\r\n            this.item.value.value = [true];\r\n        }\r\n        else if(this.boolCheckState == 'checked'){\r\n            this.boolCheckState = 'unchecked';\r\n            this.boolchecked = false;\r\n            this.item.value.value = [false];\r\n        }\r\n        else if(this.boolCheckState == 'unchecked'){\r\n            this.boolCheckState = 'indeterminate';\r\n            this.boolchecked = null;\r\n            this.item.value.value = [];\r\n        }\r\n        if(this.disabled){return;}\r\n        this.searchHandle.emit();\r\n    }\r\n}","import { Component, Input, OnInit, OnChanges, HostBinding, Output, EventEmitter} from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { DateRangeValue } from '../../entity/conditionvalue/daterangevalue';\r\nimport { SolutionService } from '../../service/solution.service';\r\n\r\n@Component({\r\n    selector: 'app-filter-daterange',\r\n    templateUrl: './daterange.component.html'\r\n})\r\n\r\nexport class DateRangeComponent implements OnInit,OnChanges{\r\n\r\n    /**\r\n     * QueryConditionç±»å\r\n     */\r\n    @Input() item:any;\r\n    @Input() autoLabel:boolean;\r\n    @Input() disabled:boolean;\r\n    @Input() showTime:boolean;\r\n    @Input() showType:string;\r\n    @Output('searchHandle') searchHandle = new EventEmitter();\r\n\r\n    startTime:Date;\r\n    endTime:Date;\r\n    //TODO: need 2 placeholder text for date range\r\n    // rangeDate = {\r\n    //     begin:null,\r\n    //     end:null\r\n    // };\r\n    /**å¤æ­æ¯å¦æ¯å¨æ©å±åºåå±ç¤º */\r\n    extend:boolean = false;\r\n    /**å¤æ­æ¯å¦æ¾ç¤ºlabel */\r\n    showlabel:boolean = true;\r\n\r\n    rangeDate: string;\r\n    placeholder: string;\r\n    beginPlaceHolder:string;\r\n    endPlaceHolder:string;\r\n    dateFormat:string;\r\n\r\n    @HostBinding('class.filter-item-wrap')\r\n    get isExtend(): boolean {\r\n        return !this.extend && this.autoLabel;\r\n    }\r\n    @HostBinding('class.filter-item-hiddenlabel')\r\n    get hidenLabel(): boolean {\r\n        return !this.showlabel;\r\n    }\r\n\r\n    constructor(private solutionService:SolutionService){}\r\n\r\n    ngOnInit(): void {\r\n        this.initDate();\r\n        if(this.item){\r\n            this.beginPlaceHolder = this.item.beginPlaceHolder || '';\r\n            this.endPlaceHolder = this.item.endPlaceHolder || '';\r\n            // const type = Object.prototype.toString.call(this.item.placeHolder);\r\n            // if(type == '[object Undefined]'){\r\n            //     if(this.item.control && this.item.control.hasOwnProperty('placeholder')){\r\n            //         this.placeholder = this.item.control.placeholder;\r\n            //     }\r\n            // }\r\n            // else{\r\n            //     this.placeholder = this.item.placeHolder;\r\n            // }\r\n            // const beginplac = Object.prototype.toString.call(this.item.beginPlaceHolder);\r\n            // if(beginplac == '[object Undefined]'){\r\n            //     if(this.item.control && this.item.control.hasOwnProperty('placeholder')){\r\n            //         this.beginPlaceHolder = this.item.control.beginPlaceHolder;\r\n            //     }\r\n            // }\r\n            // else{\r\n            //     this.beginPlaceHolder = this.item.beginPlaceHolder;\r\n            // }\r\n            // const endplac = Object.prototype.toString.call(this.item.endPlaceHolder);\r\n            // if(endplac == '[object Undefined]'){\r\n            //     if(this.item.control && this.item.control.hasOwnProperty('placeholder')){\r\n            //         this.endPlaceHolder = this.item.control.endPlaceHolder;\r\n            //     }\r\n            // }\r\n            // else{\r\n            //     this.endPlaceHolder = this.item.endPlaceHolder;\r\n            // }\r\n        }\r\n    }\r\n\r\n    ngOnChanges(): void {\r\n        this.initDate();\r\n    }\r\n\r\n    initDate(){\r\n        // if(this.item && this.item.control && this.item.control.hasOwnProperty('format') && this.item.control.format){\r\n        //     this.dateFormat = this.item.control.format;\r\n        //     if(this.showTime){\r\n        //         if(this.dateFormat.length > 0 && this.dateFormat.indexOf('HH:mm') == -1){\r\n        //             this.dateFormat = this.dateFormat + ' HH:mm:ss';\r\n        //         }\r\n        //     }\r\n        // }\r\n        // else{\r\n        //     this.dateFormat = this.showTime? 'yyyy-MM-dd HH:mm:ss':'yyyy-MM-dd';\r\n        // }\r\n        if(this.item && this.item.control && this.item.control.hasOwnProperty('format')){\r\n            let itemDateFormat = this.item.control.format;\r\n            if(this.showTime){\r\n                if(itemDateFormat.length > 0 && itemDateFormat.indexOf('HH:mm') == -1){\r\n                    itemDateFormat = itemDateFormat + ' HH:mm:ss';\r\n                }\r\n            }\r\n            const format = this.showTime ? 'yyyy-MM-dd HH:mm:ss': (this.showType == '2'? 'yyyy-MM': (this.showType == '3'? 'yyyy':'yyyy-MM-dd'));\r\n            this.dateFormat = itemDateFormat?itemDateFormat:format;\r\n        }\r\n        const rangeDateValue : DateRangeValue = this.item && this.item.value;\r\n        if(rangeDateValue.startTime && rangeDateValue.endTime){\r\n            this.rangeDate = `${rangeDateValue.startTime}~${rangeDateValue.endTime}`;\r\n        }\r\n    }\r\n\r\n    getDate(dateString:Date):Date{\r\n        // let arr1:Array<any> = dateString.split(\" \"); \r\n        // let sdate = arr1[0].split('-'); \r\n        // let date = new Date(sdate[0], sdate[1]-1, sdate[2]);\r\n        let date = new Date(dateString); \r\n        return date;\r\n    }\r\n   \r\n    onDateChange(event:any){\r\n        if(event.returnFormatted){\r\n            (this.item.value as DateRangeValue).startTime = event.returnFormatted.split('~')[0];\r\n            (this.item.value as DateRangeValue).endTime = event.returnFormatted.split('~')[1];\r\n        }else{\r\n            // this.item.value = new DateRangeValue();\r\n            this.item.value.startTime = '';\r\n            this.item.value.endTime = '';\r\n        }\r\n        this.item.valueText = event.formatted;\r\n        if(this.disabled){return;}\r\n        this.searchHandle.emit(event);\r\n    }\r\n    getConditionItemTitle(field:QueryCondition){\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n}","import { Component, Input, OnInit, OnChanges, HostBinding, Output, EventEmitter } from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { ControlType } from '../../entity/controltype';\r\nimport { HelpContol } from '../../entity/controltype/help/helpcontrol';\r\nimport { IControl } from '../../entity/controltype/icontrol';\r\nimport { deepCopy } from '../../utils';\r\nimport { SolutionService } from '../../service/solution.service';\r\nimport { HelpValue } from '../../entity/conditionvalue/helpvalue';\r\nimport { DisplayType } from '../../entity/controltype/help/displayType';\r\n\r\n// import { ServerSideToken } from '@farris/ui-lookup';\r\n// import { LookupHttpBeQueryService } from './service/Lookup-http.service';\r\nimport { of } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'app-filter-help',\r\n    templateUrl: './help.component.html'\r\n    // providers: [{ provide: ServerSideToken, useClass: LookupHttpBeQueryService }]\r\n})\r\n\r\nexport class HelpComponent implements OnInit, OnChanges {\r\n\r\n    /**\r\n     * QueryConditionç±»å\r\n     */\r\n    @Input() item: any;\r\n    @Input() autoLabel: boolean;\r\n    @Input() disabled: boolean;\r\n\r\n    @Input() hostRef: any;\r\n\r\n    @Output('searchHandle') searchHandle = new EventEmitter();\r\n\r\n    uri: string;\r\n    textField: string;\r\n    idField: string;\r\n    valueField: any;\r\n    textValue: any;\r\n    displayType: DisplayType;\r\n    mapFields: any;\r\n    context: any;\r\n    preEventCmd: any;\r\n    postEventCmd: any;\r\n    enableFullTree: boolean;\r\n    loadTreeDataType: 'default' | 'loadall' | 'layerload';\r\n    singleSelect: boolean;\r\n    expandLevel: number;\r\n    enableCascade: boolean;\r\n    helpId: string;\r\n\r\n    /**å¤æ­æ¯å¦æ¯å¨æ©å±åºåå±ç¤º */\r\n    extend: boolean = false;\r\n    /**å¤æ­æ¯å¦æ¾ç¤ºlabel */\r\n    showlabel: boolean = true;\r\n    placeholder: string;\r\n\r\n    @HostBinding('class.filter-item-wrap')\r\n    get isExtend(): boolean {\r\n        return !this.extend && this.autoLabel;\r\n    }\r\n    @HostBinding('class.filter-item-hiddenlabel')\r\n    get hidenLabel(): boolean {\r\n        return !this.showlabel;\r\n    }\r\n\r\n    constructor(private solutionService: SolutionService) { }\r\n\r\n    ngOnInit(): void {\r\n        if (this.item) {\r\n            this.placeholder = this.item.placeHolder;\r\n            // const type = Object.prototype.toString.call(this.item.placeHolder);\r\n            // if(type == '[object Undefined]'){\r\n            //     if(this.item.control && this.item.control.hasOwnProperty('placeholder')){\r\n            //         this.placeholder = this.item.control.placeholder;\r\n            //     }\r\n            // }\r\n            // else{\r\n            //     this.placeholder = this.item.placeHolder;\r\n            // }\r\n        }\r\n        this.getHelpBindingInfo();\r\n        if (this.item && this.item.control && this.item.control.hasOwnProperty('isExtend')) {\r\n            this.extend = this.item.control.isExtend;\r\n            if (!this.extend) {\r\n                this.showlabel = this.item.control.showLabel;\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnChanges(): void {\r\n        this.getHelpBindingInfo();\r\n    }\r\n\r\n    selectedDataHandler(selectedItem: any) {\r\n        // console.log(selectedItem);\r\n        //    let mapFields=new Function('return'+(this.item.control as HelpContol).mapFields);\r\n        //    let mapFieldsKeys=Object.keys(mapFields());\r\n        //    (this.item.value as HelpValue).value=new Object();\r\n        //    mapFieldsKeys.forEach(mapFeildKey => {\r\n        //     (this.item.value as HelpValue).value[mapFeildKey]=selectedItem[mapFeildKey];\r\n        //    });\r\n        //    (this.item.value as HelpValue).valueField=(this.item.control as HelpContol).valueField;\r\n        //    let textField=(this.item.control as HelpContol).textField;\r\n        //    this.textValue=(this.item.value as HelpValue).value[textField];\r\n\r\n        const helpValue = (this.item.value as HelpValue);\r\n        helpValue.value = this.singleSelect ? [selectedItem] : selectedItem;//åéè¿åå¯¹è±¡ï¼å¤éè¿åæ°ç»\r\n        helpValue.valueField = this.valueField;\r\n        helpValue.textValue = helpValue.getTextValue(this.textField);\r\n        this.textValue = helpValue.textValue;\r\n        // this.conditionChange.emit();\r\n        if (this.disabled) { return; }\r\n        this.searchHandle.emit();\r\n\r\n    }\r\n\r\n    getHelpBindingInfo() {\r\n        if (this.item && this.item.control && this.item.control.getControlType() == ControlType.Help) {\r\n            let helpList = (this.item.control as HelpContol);\r\n            this.uri = helpList.uri;\r\n            this.textField = helpList.textField;\r\n            this.valueField = helpList.valueField;\r\n            this.idField = helpList.idField;\r\n            this.mapFields = helpList.mapFields;\r\n            this.context = helpList.context;\r\n            this.preEventCmd = helpList.preEventCmd;\r\n            this.postEventCmd = helpList.postEventCmd;\r\n\r\n            if (helpList.preEventCmd) {\r\n                this.preEventCmd = (e) => {\r\n                    e['hostRef'] = this.hostRef;\r\n                    return helpList.preEventCmd(e);\r\n                };\r\n            }\r\n\r\n            if (helpList.postEventCmd) {\r\n                this.postEventCmd = (e) => {\r\n                    let selectItem = deepCopy(e);\r\n                    selectItem['hostRef'] = this.hostRef;\r\n                    return helpList.postEventCmd(selectItem);\r\n                };\r\n            }\r\n\r\n\r\n            this.singleSelect = helpList.singleSelect;\r\n            this.enableFullTree = helpList.enableFullTree;\r\n            this.loadTreeDataType = helpList.loadTreeDataType;\r\n            this.expandLevel = helpList.expandLevel;\r\n            this.enableCascade = helpList.enableCascade;\r\n            this.helpId = helpList.helpId;\r\n            const helpValue = (this.item.value as HelpValue);\r\n            // if (helpValue && helpValue.value) {\r\n            //     // this.textValue = (this.item.value as HelpValue).value[this.textField];\r\n            //     this.textValue = HelpValue.getPropValue(helpValue.value, this.textField.split('.'));\r\n            // }\r\n            this.displayType = helpList.displayType;\r\n            if (helpValue.textValue == 'help-text-value-null') {// æ§æ°æ®å¼å®¹\r\n                this.textValue = helpValue.getTextValue(this.textField);\r\n            } else {\r\n                this.textValue = helpValue.textValue;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    // getConditionItemStyle(field: QueryCondition, controlType: any) {\r\n    //     return this.solutionService.getConditionItemStyle(field,controlType);\r\n    // }\r\n\r\n    getConditionItemTitle(field: QueryCondition) {\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n\r\n    onSearch = () => {\r\n        if (this.disabled) { return; }\r\n        this.searchHandle.emit();\r\n        return of(true);\r\n    }\r\n\r\n    // clearData(event){\r\n    //     (this.item.value as HelpValue).value = null;\r\n    //     (this.item.value as HelpValue).valueField = null;\r\n    //     this.searchHandle.emit();\r\n    // }\r\n\r\n    clearData(data: any) {\r\n        (this.item.value as HelpValue).clearValue();\r\n        this.searchHandle.emit();\r\n    }\r\n\r\n}\r\n","import { Component, Input, OnInit, OnChanges, HostBinding, Output, EventEmitter} from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { SolutionService } from '../../service/solution.service';\r\nimport { DateValue } from '../../entity/conditionvalue/datevalue';\r\n\r\n@Component({\r\n    selector: 'app-filter-date',\r\n    templateUrl: './date.component.html'\r\n})\r\n\r\nexport class DateComponent implements OnInit,OnChanges{\r\n\r\n    /**\r\n     * QueryConditionç±»å\r\n     */\r\n    @Input() item:any;\r\n    @Input() autoLabel:boolean;\r\n    @Input() disabled:boolean;\r\n    @Input() showType:string;\r\n    @Output('searchHandle') searchHandle = new EventEmitter();\r\n\r\n    // time:Date;\r\n    date: string;\r\n    /**å¤æ­æ¯å¦æ¯å¨æ©å±åºåå±ç¤º */\r\n    extend:boolean = false;\r\n    /**å¤æ­æ¯å¦æ¾ç¤ºlabel */\r\n    showlabel:boolean = true;\r\n    placeholder: string;\r\n    dateFormat:string;\r\n\r\n    @HostBinding('class.filter-item-wrap')\r\n    get isExtend(): boolean {\r\n        return !this.extend && this.autoLabel;\r\n    }\r\n    @HostBinding('class.filter-item-hiddenlabel')\r\n    get hidenLabel(): boolean {\r\n        return !this.showlabel;\r\n    }\r\n\r\n    constructor(private solutionService:SolutionService){}\r\n\r\n    ngOnInit(): void {\r\n        this.initDate();\r\n        if(this.item){\r\n            this.placeholder = this.item.placeHolder || '';\r\n            // const type = Object.prototype.toString.call(this.item.placeHolder);\r\n            // if(type == '[object Undefined]'){\r\n            //     if(this.item.control && this.item.control.hasOwnProperty('placeholder')){\r\n            //         this.placeholder = this.item.control.placeholder;\r\n            //     }\r\n            // }\r\n            // else{\r\n            //     this.placeholder = this.item.placeHolder;\r\n            // }\r\n        }\r\n        if(this.item && this.item.control && this.item.control.hasOwnProperty('isExtend')){\r\n            this.extend = this.item.control.isExtend;\r\n            if(!this.extend){\r\n                this.showlabel = this.item.control.showLabel;\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnChanges(): void {\r\n        this.initDate();\r\n    }\r\n\r\n    initDate(){\r\n        // if(this.item && this.item.value.value){\r\n        //     //this.time = this.getDate((this.item.value as DateValue).value);\r\n        //     this.time = (this.item.value as DateValue).value;\r\n        // }\r\n\r\n        if(this.item&&this.item.value\r\n        &&(this.item.value as DateValue).value){\r\n            this.date = this.item.value.getOriginalValue();\r\n        }else{\r\n            this.date = undefined;\r\n        }\r\n\r\n        const format = this.showType == '2'? 'yyyy-MM': (this.showType == '3'? 'yyyy':'yyyy-MM-dd');\r\n        this.dateFormat = this.item.control.format?this.item.control.format: format;\r\n\r\n    }\r\n\r\n    // getDate(dateString:string):Date{\r\n    //     let arr1:Array<any> = dateString.split(\" \"); \r\n    //     let sdate = arr1[0].split('-'); \r\n    //     let date = new Date(sdate[0], sdate[1]-1, sdate[2]); \r\n    //     return date;\r\n    // }\r\n   \r\n    onDateChange(event:any){\r\n        // console.log(event);\r\n        if(event.returnFormatted){\r\n            (this.item.value as DateValue).value = event.returnFormatted;\r\n        }else{\r\n            (this.item.value as DateValue).value = '';\r\n            // this.item.value = new DateValue();\r\n        }\r\n        this.item.valueText = event.formatted;\r\n        if(this.disabled){return;}\r\n        this.searchHandle.emit(event);\r\n    }\r\n\r\n    // getConditionItemStyle(field: QueryCondition, controlType: any) {\r\n    //     return this.solutionService.getConditionItemStyle(field,controlType);\r\n    // }\r\n\r\n    getConditionItemTitle(field:QueryCondition){\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n}","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { QueryCondition } from './entity/querycondition';\r\nimport { ControlType } from './entity/controltype';\r\n\r\n@Pipe({name: 'controlType'})\r\nexport class ControlTypeXPipe implements PipeTransform {\r\n    transform(value: QueryCondition): Array<any> {\r\n        let type;\r\n        switch(value.control.getControlType()){\r\n            case ControlType.Text:\r\n                type = 'input';\r\n                break;\r\n            case ControlType.Search:\r\n                type = 'search';\r\n                break;\r\n            case ControlType.Date:\r\n                type = 'date';\r\n                break;\r\n            case ControlType.Year:\r\n                type = 'year';\r\n                break;\r\n            case ControlType.Month:\r\n                type = 'month';\r\n                break;\r\n            case ControlType.MonthRange:\r\n                type = 'monthrange';\r\n                break;\r\n            case ControlType.YearRange:\r\n                type = 'yearrange';\r\n                break;\r\n            case ControlType.DateRange:\r\n                type = 'daterange';\r\n                break;\r\n            case ControlType.DateRangeTime:\r\n                type = 'daterangetime';\r\n                break;\r\n            case ControlType.DropDown:\r\n                type = 'dropdown';\r\n                break;\r\n            case ControlType.NumberRange:\r\n                type = 'number';\r\n                break;\r\n            case ControlType.Help:\r\n                type = 'help';\r\n                break;\r\n            case ControlType.CheckboxGroup:\r\n                type = 'checkboxgroup';\r\n                break; \r\n            case ControlType.Radio:\r\n                type = 'radio';\r\n                break;\r\n            case ControlType.InputGroup:\r\n                type = 'input-group';\r\n                break;\r\n            case ControlType.Number:\r\n                type = 'singlenumber';\r\n                break;\r\n            case ControlType.FlexibleNumber:\r\n                type = 'flexiblenumber';\r\n                break;\r\n            case ControlType.FlexibleDate:\r\n                type = 'flexibledate';\r\n                break;\r\n            case ControlType.BoolCheck:\r\n                type = 'bool-check';\r\n                break;\r\n            default:\r\n                type = 'input';\r\n                break;     \r\n        }\r\n        return type;\r\n    }\r\n}\r\n","import { RadioIEnumValue } from \"./ienumvalue\";\r\n\r\n/**\r\n * checboxgroupç±»å\r\n */\r\nexport class RadioValue implements RadioIEnumValue{\r\n\r\n    getEnumValueName():string{\r\n        return this.name;\r\n    }\r\n\r\n    getEnumValue():any{\r\n        return this.value;\r\n    }\r\n    \r\n    /**\r\n     * ææ¬æ¾ç¤º\r\n     */\r\n    name:string;\r\n\r\n    /**\r\n     * å¼æ¾ç¤º\r\n     */\r\n    value:string;\r\n}","import { Component, Input, OnInit, OnChanges, ViewEncapsulation, HostBinding, EventEmitter, Output} from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { ControlType } from '../../entity/controltype';\r\nimport { SolutionService } from '../../service/solution.service';\r\nimport { RadioGroupValue } from '../../entity/conditionvalue/radiovalue';\r\nimport { RadioValue } from '../../entity/controltype/radio/radiovalue';\r\nimport { RadioControl } from '../../entity/controltype/radio/radiocontrol';\r\n\r\n@Component({\r\n    selector: 'app-filter-radio',\r\n    templateUrl: './radio.component.html'\r\n    // encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class filterRadioComponent implements OnInit,OnChanges{\r\n   \r\n    /**\r\n     * QueryConditionç±»å\r\n     */\r\n    @Input() item:any;\r\n    @Input() autoLabel:boolean;\r\n    @Input() disabled:boolean;\r\n    @Output('searchHandle') searchHandle = new EventEmitter();\r\n    /**å¤æ­æ¯å¦æ¯å¨æ©å±åºåå±ç¤º */\r\n    extend:boolean = false;\r\n    /**å¤æ­æ¯å¦æ¾ç¤ºlabel */\r\n    showlabel:boolean = true;\r\n    radioValue: any[];\r\n\r\n    selectCheck = [];\r\n\r\n    @HostBinding('class.filter-item-wrap')\r\n    get isExtend(): boolean {\r\n        return !this.extend && this.autoLabel;\r\n    }\r\n\r\n    @HostBinding('class.filter-item-checbox-wrap')\r\n    get isCheckExtend(): boolean {\r\n        return !this.extend;\r\n    }\r\n\r\n    @HostBinding('class.filter-item-checkboxgroup') cla = true;\r\n    @HostBinding('class.filter-item-hiddenlabel')\r\n    get hidenLabel(): boolean {\r\n        return !this.showlabel;\r\n    }\r\n\r\n    radioDataSource:Array<any>=new Array<any>();\r\n\r\n    constructor(private solutionService:SolutionService){}\r\n\r\n    ngOnInit(): void {\r\n        this.getDataSource();\r\n        this.radioValue = this.item.value.getOriginalValue();\r\n        if(this.item && this.item.control && this.item.control.hasOwnProperty('isExtend')){\r\n            this.extend = this.item.control.isExtend;\r\n            if(!this.extend){\r\n                this.showlabel = this.item.control.showLabel;\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnChanges(): void {\r\n        this.getDataSource();\r\n    }\r\n\r\n    getDataSource(){\r\n        if(this.item && this.item.control && this.item.control.getControlType()==ControlType.Radio){\r\n            let radioboxList=(this.item.control as RadioControl);\r\n            this.radioDataSource = Array<RadioValue>();\r\n\r\n            if(radioboxList.enumValues && radioboxList.enumValues.length>0){\r\n                radioboxList.enumValues.forEach(element => {\r\n                    this.radioDataSource.push(Object.assign(new RadioValue(),element));\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    getConditionItemTitle(field:QueryCondition){\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n\r\n    onSearch(event){\r\n        if(event){\r\n            this.item.value.value = event;\r\n        }\r\n        else{\r\n            this.item.value.value = new RadioGroupValue();\r\n        }\r\n        if(this.disabled){return;}\r\n        this.searchHandle.emit();\r\n    }\r\n}","import { Component, Input, OnInit, OnChanges, EventEmitter, Output, HostBinding} from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { SolutionService } from '../../service/solution.service';\r\nimport { InputGroupControl } from '../../entity/controltype/input-group/inputgroupcontrol';\r\nimport { InputGroupValue } from '../../entity/conditionvalue/inputgroup';\r\n\r\n\r\n@Component({\r\n    selector: 'app-filter-inputgroup',\r\n    templateUrl: './inputgroup.component.html',\r\n})\r\n\r\nexport class SimpleInputGroupComponent implements OnInit{\r\n    /**\r\n     * QueryConditionç±»å\r\n     */\r\n    _item: QueryCondition;\r\n\r\n    testId: string;\r\n\r\n    usageMode: string;\r\n\r\n    dialogOptions: any;\r\n\r\n    @Input()\r\n    set item(textItem: any) {\r\n        this._item = textItem;\r\n    }\r\n    get item(): any{\r\n        return this.constructTextItem(this._item);\r\n    }\r\n    @Input() autoLabel:boolean;\r\n    @Input() disabled:boolean;\r\n\r\n    /**å¤æ­æ¯å¦æ¯å¨æ©å±åºåå±ç¤º */\r\n    extend:boolean = false;\r\n    /**å¤æ­æ¯å¦æ¾ç¤ºlabel */\r\n    showlabel:boolean = true;\r\n    \r\n    @HostBinding('class.filter-item-wrap')\r\n    get isExtend(): boolean {\r\n        return !this.extend && this.autoLabel;\r\n    }\r\n    @HostBinding('class.filter-item-hiddenlabel')\r\n    get hidenLabel(): boolean {\r\n        return !this.showlabel;\r\n    }\r\n\r\n    @Output('searchHandle') searchHandle = new EventEmitter();\r\n\r\n    textField: string;\r\n    isTextFromDialog: boolean = false;\r\n    textFormDialog: string;\r\n\r\n    constructTextItem(textItem: QueryCondition): QueryCondition {\r\n        const textValueObj = textItem.value as InputGroupValue;\r\n        textValueObj.textValue = textValueObj.textValue && textValueObj.textValue.trim();\r\n        textItem.value = textValueObj;\r\n        return textItem;\r\n    }\r\n\r\n    constructor(private solutionService:SolutionService){}\r\n\r\n    ngOnInit(): void {\r\n        this.testId = this.solutionService.getGuid();\r\n        this.getInputGroupBindingInfo();\r\n\r\n        if(this.item && this.item.control && this.item.control.hasOwnProperty('isExtend')){\r\n            this.extend = this.item.control.isExtend;\r\n            if(!this.extend){\r\n                this.showlabel = this.item.control.showLabel;\r\n            }\r\n        }\r\n    }\r\n\r\n    getInputGroupBindingInfo() {\r\n        const inputGroupControl = (this.item.control as InputGroupControl);\r\n        this.usageMode = inputGroupControl.usageMode;\r\n        if(this.usageMode == 'open-modal' || this.usageMode == 'open-remote-modal') {\r\n            this.dialogOptions = inputGroupControl.dialogOptions;\r\n            /*\r\n                example of dialogOptions = {\r\n                   modalId: \"1e011720-eb0f-4c9c-82b6-6844c89b2303\"\r\n                   mapFields: {hDepartment: \"Name\"}\r\n                   title: \"æµè¯æ é¢æ \"\r\n                   width: 800\r\n                   height: 600\r\n                }\r\n             */\r\n            if(this.dialogOptions.mapFields){\r\n                this.textField = JSON.stringify(this.dialogOptions.mapFields).split('\"')[1];\r\n            }\r\n        }\r\n    }\r\n\r\n    getConditionItemTitle(field:QueryCondition){\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n    \r\n    /*\r\n        dialogOptions = {\r\n            modalId: \"ae011720-eb0f-4c9c-82b6-6844c89b2303\"\r\n            mapFields: {hDepartment: \"Name\"}\r\n            title: \"æµè¯æ é¢æ \"\r\n            width: 800\r\n            height: 600\r\n            showButtons: true\r\n            buttons: [\r\n                { text: \"ç¡®å®\", cls: \"btn-primary\", handle: _this.viewModel.rootviewmodelconfirm1 },\r\n                { text: \"åæ¶\", cls: \"btn-secondary\", handle: _this.viewModel.rootviewmodelcancel1}\r\n            ]\r\n        }\r\n    */\r\n   onClick(event: any){\r\n        if(this.usageMode == 'text'){\r\n            this.item.control.click();\r\n        }\r\n        else{\r\n            const options = this.dialogOptions;\r\n            options.handle = (selectedItem) => {\r\n                // let modalData = item[0];\r\n                // this.item.value.value = modalData[this.targetField];\r\n                let selectedItems = selectedItem.filter(n => n);\r\n                if(selectedItems && this.textField){\r\n                    this.item.value.value = selectedItems;\r\n                    this.item.value.textValue = this.item.value.getTextValue(this.textField);\r\n                    this.item.value.textField = this.textField;\r\n                    this.item.value.isInputText = false;\r\n\r\n                    this.isTextFromDialog = true;\r\n                    this.textFormDialog = this.item.value.textValue;\r\n                }\r\n            }\r\n            this.item.control.click({event, options});\r\n        }\r\n    }\r\n\r\n    onBlur(event){\r\n        if(this.disabled){return;}\r\n        if(this.usageMode == 'text') {\r\n            this.item.value.isInputText = true;\r\n        }\r\n        if(this.usageMode == 'open-modal' || this.usageMode == 'open-remote-modal') {\r\n            if(!this.isTextFromDialog) {\r\n                this.item.value.isInputText = true;\r\n            }\r\n            if(this.item.value.textValue != this.textFormDialog){\r\n                this.isTextFromDialog = false;\r\n                this.item.value.value = [];\r\n                this.item.value.textField = undefined;\r\n                this.item.value.isInputText = true;\r\n            }\r\n        }\r\n        this.searchHandle.emit(event);\r\n    }\r\n\r\n    onClear() {\r\n        (this.item.value as InputGroupValue).clearValue();\r\n        this.searchHandle.emit();\r\n    }\r\n}","import { Component, Input, OnInit, HostBinding, EventEmitter, Output, ElementRef} from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { SolutionService } from '../../service/solution.service';\r\n\r\n\r\n@Component({\r\n    selector: 'app-filter-single-number',\r\n    templateUrl: './number.component.html'\r\n})\r\n\r\nexport class SingleNumberComponent implements OnInit{\r\n   \r\n    // @Input() item:any;\r\n    @Input() autoLabel:boolean;\r\n    @Input() disabled:boolean;\r\n    @Output('searchHandle') searchHandle = new EventEmitter();\r\n\r\n    /**å¤æ­æ¯å¦æ¯å¨æ©å±åºåå±ç¤º */\r\n    extend:boolean = false;\r\n    /**å¤æ­æ¯å¦æ¾ç¤ºlabel */\r\n    showlabel:boolean = true;\r\n    canNull:boolean = true;\r\n\r\n    number:string;\r\n    precision: number;\r\n    placeholder: string;\r\n    bigNumber:boolean;\r\n    max:number;\r\n    min:number;\r\n\r\n    @HostBinding('class.filter-item-wrap')\r\n    get isExtend(): boolean {\r\n        return !this.extend && this.autoLabel;\r\n    }\r\n    @HostBinding('class.filter-item-hiddenlabel')\r\n    get hidenLabel(): boolean {\r\n        return !this.showlabel;\r\n    }\r\n\r\n    _item: any;\r\n    numberRange: string;\r\n    @Input() \r\n    set item(nr: any){\r\n        this._item = nr;\r\n        this.precision = nr.control.precision;\r\n        this.bigNumber = nr.control.bigNumber;\r\n        if(this._item && this._item.control && this._item.control.hasOwnProperty('isExtend')){\r\n            this.extend = this._item.control.isExtend;\r\n            if(!this.extend){\r\n                this.showlabel = this._item.control.showLabel;\r\n            }\r\n        }\r\n        if(!this.bigNumber){\r\n            this.min = -2147483648;\r\n            this.max = 2147483647;\r\n        }\r\n    }\r\n\r\n    get item(){\r\n        return this._item;\r\n    }\r\n\r\n    constructor(private solutionService:SolutionService,private readonly element: ElementRef){}\r\n\r\n    ngOnInit(): void {\r\n        if(this.item){\r\n            this.placeholder = this.item.placeHolder;\r\n            // const type = Object.prototype.toString.call(this.item.placeHolder);\r\n            // if(type == '[object Undefined]'){\r\n            //     if(this.item.control && this.item.control.hasOwnProperty('placeholder')){\r\n            //         this.placeholder = this.item.control.placeholder;\r\n            //     }\r\n            // }\r\n            // else{\r\n            //     this.placeholder = this.item.placeHolder;\r\n            // }\r\n        }\r\n    }\r\n\r\n    getConditionItemTitle(field:QueryCondition){\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n\r\n    numberChange(event){\r\n        this.item.value.value = event;\r\n        if(this.disabled){return;}\r\n        this.searchHandle.emit();\r\n    }\r\n}","import { Component, Input, OnInit, HostBinding, EventEmitter, Output, AfterViewInit, ElementRef } from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { SolutionService } from '../../service/solution.service';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { FlexibleNumberValue } from '../../entity/conditionvalue/flexiblenumbervalue';\r\n\r\n\r\n@Component({\r\n    selector: 'app-filter-flexiblenumber',\r\n    templateUrl: './flexiblenumber.component.html'\r\n})\r\n\r\nexport class FlexibleNumberComponent implements OnInit, AfterViewInit {\r\n\r\n    // @Input() item:any;\r\n    @Input() autoLabel: boolean;\r\n    @Input() disabled: boolean;\r\n    @Output('searchHandle') searchHandle = new EventEmitter();\r\n\r\n    /**å¤æ­æ¯å¦æ¯å¨æ©å±åºåå±ç¤º */\r\n    extend: boolean = false;\r\n    /**å¤æ­æ¯å¦æ¾ç¤ºlabel */\r\n    showlabel: boolean = true;\r\n    canNull: boolean = true;\r\n\r\n    number: string;\r\n    value: any;\r\n    beginValue: any;\r\n    endValue: any;\r\n    precision: number;\r\n    placeholder: string;\r\n    beginPlaceHolder: string;\r\n    endPlaceHolder: string;\r\n    bigNumber: boolean;\r\n    max: number;\r\n    min: number;\r\n    single: boolean;\r\n\r\n    @HostBinding('class.filter-item-wrap')\r\n    get isExtend(): boolean {\r\n        return !this.extend && this.autoLabel;\r\n    }\r\n    @HostBinding('class.filter-item-hiddenlabel')\r\n    get hidenLabel(): boolean {\r\n        return !this.showlabel;\r\n    }\r\n\r\n    _item: any;\r\n    @Input()\r\n    set item(nr: any) {\r\n        this._item = nr;\r\n        this.precision = nr.control.precision;\r\n        this.bigNumber = nr.control.bigNumber;\r\n        if (!this.bigNumber) {\r\n            this.min = -2147483648;\r\n            this.max = 2147483647;\r\n        }\r\n        if (this._item && this._item.control && this._item.control.hasOwnProperty('isExtend')) {\r\n            this.extend = this._item.control.isExtend;\r\n            if (!this.extend) {\r\n                this.showlabel = this._item.control.showLabel;\r\n            }\r\n        }\r\n        this.beginPlaceHolder = (this._item.hasOwnProperty('beginPlaceHolder') && this._item.beginPlaceHolder) ? this._item.beginPlaceHolder : this.localeService.getValue('filterPanel.beginPlaceHolder');\r\n        this.endPlaceHolder = (this._item.hasOwnProperty('endPlaceHolder') && this._item.beginPlaceHolder) ? this._item.endPlaceHolder : this.localeService.getValue('filterPanel.endPlaceHolder');\r\n        this.placeholder = (this._item.hasOwnProperty('placeHolder') && this._item.placeHolder) ? this._item.placeHolder : '';\r\n        this.single = this._item.control.single;\r\n        this._item.value.single = this.single;\r\n        this.constructMultiFieldNumberRange(nr.value as FlexibleNumberValue);\r\n    }\r\n\r\n    get item() {\r\n        return this._item;\r\n    }\r\n\r\n    constructor(private solutionService: SolutionService, private readonly element: ElementRef, private localeService: LocaleService) { }\r\n\r\n    ngOnInit(): void { }\r\n\r\n    ngAfterViewInit() { }\r\n\r\n    getConditionItemTitle(field: QueryCondition) {\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n\r\n    constructMultiFieldNumberRange(value: FlexibleNumberValue) {\r\n        if (this.single) {\r\n            this.value = value.value == null ? null : value.value;\r\n        }\r\n        else {\r\n            this.beginValue = value.startValue == null ? null : value.startValue;\r\n            this.endValue = value.endValue == null ? null : value.endValue;\r\n        }\r\n    }\r\n\r\n    numberChange(event) {\r\n        if (event) {\r\n            this._item.value.value = event;\r\n        }\r\n        else {\r\n            this._item.value.value = null;\r\n        }\r\n        if (Object.keys(this._item.value).length === 0) {\r\n            this._item.valueText = ''\r\n        }\r\n        else {\r\n            this._item.valueText = '' + this._item.value.value;\r\n        }\r\n        if(this.disabled){return;}\r\n        this.searchHandle.emit();\r\n    }\r\n\r\n    beginValueChange(event) {\r\n        this._item.value.startValue = event;\r\n        this.setValueText();\r\n        if(this.disabled){return;}\r\n        this.searchHandle.emit();\r\n    }\r\n\r\n    endValueChange(event) {\r\n        this._item.value.endValue = event;\r\n        this.setValueText();\r\n        if(this.disabled){return;}\r\n        this.searchHandle.emit();\r\n    }\r\n    setValueText() {\r\n        if (Object.keys(this._item.value).length === 0 || (this._item.value.startValue == null && this._item.value.endValue == null)) {\r\n            this._item.valueText = ''\r\n        }\r\n        else if (this._item.value.startValue == null) {\r\n            this._item.valueText = '~' + this._item.value.endValue;\r\n        }\r\n        else if (this._item.value.endValue == null) {\r\n            this._item.valueText = this._item.value.startValue + '~';\r\n        }\r\n        else {\r\n            this._item.valueText = this._item.value.startValue + '~' + this._item.value.endValue;\r\n        }\r\n    }\r\n}","import { Component, Input, OnInit, EventEmitter, Output, HostBinding} from '@angular/core';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { SolutionService } from '../../service/solution.service';\r\n\r\n@Component({\r\n    selector: 'app-filter-flexibledate',\r\n    templateUrl: './flexibledate.component.html'\r\n})\r\n\r\nexport class FlexibleDateComponent implements OnInit{\r\n   \r\n    @Input() autoLabel: boolean;\r\n    @Input() disabled: boolean;\r\n    @Output('searchHandle') searchHandle = new EventEmitter();\r\n\r\n    /**å¤æ­æ¯å¦æ¯å¨æ©å±åºåå±ç¤º */\r\n    extend: boolean = false;\r\n    /**å¤æ­æ¯å¦æ¾ç¤ºlabel */\r\n    showlabel: boolean = true;\r\n\r\n    placeholder: string;\r\n    beginPlaceHolder:string;\r\n    endPlaceHolder:string;\r\n    single:boolean;//æ¯å¦ä¸ºåæ¥æ\r\n    showTime: boolean;//æ¯å¦æ¾ç¤ºæ¶é´\r\n    showType:string;//æ¾ç¤ºç±»å\r\n    dateFormat: string;//æ ¼å¼\r\n    value: Date;\r\n    startValue: Date;\r\n    endValue: Date;\r\n\r\n    @HostBinding('class.filter-item-wrap')\r\n    get isExtend(): boolean {\r\n        return !this.extend && this.autoLabel;\r\n    }\r\n    @HostBinding('class.filter-item-hiddenlabel')\r\n    get hidenLabel(): boolean {\r\n        return !this.showlabel;\r\n    }\r\n\r\n    _item: any;\r\n    @Input() \r\n    set item(nr: any){\r\n        this._item = nr;\r\n        if(this._item){\r\n            if(!this._item.hasOwnProperty('value')) {\r\n                this._item.value = {\r\n                    startValue : null,\r\n                    endValue : null,\r\n                    value: null,\r\n                    single:true\r\n                }\r\n            }\r\n            if(!this._item.control.hasOwnProperty('single')) {\r\n                this._item.control.single = true;\r\n            }\r\n            this.beginPlaceHolder = (this._item.hasOwnProperty('beginPlaceHolder') && this._item.beginPlaceHolder) ? this._item.beginPlaceHolder: this.localeService.getValue('filterPanel.dateBeginPlaceHolder');\r\n            this.endPlaceHolder = (this._item.hasOwnProperty('endPlaceHolder') && this._item.beginPlaceHolder) ? this._item.endPlaceHolder: this.localeService.getValue('filterPanel.dateEndPlaceHolder');\r\n            this.placeholder = (this._item.hasOwnProperty('placeHolder') && this._item.placeHolder) ? this._item.placeHolder:'';\r\n            this.single = this._item.control.single;\r\n            this._item.value.single = this.single;\r\n            this.showTime = (this._item.control.hasOwnProperty('showTime') && this._item.control.showTime) ? this._item.control.showTime:'';\r\n            this.showType = (this._item.control.hasOwnProperty('showType') && this._item.control.showType) ? this._item.control.showType:'';\r\n            let itemDateFormat = this._item.control.format;\r\n            if(this.showTime && itemDateFormat){\r\n                if(itemDateFormat.length > 0 && itemDateFormat.indexOf('HH:mm') == -1){\r\n                    itemDateFormat = itemDateFormat + ' HH:mm:ss';\r\n                }\r\n            }\r\n            const format = this.showTime ? 'yyyy-MM-dd HH:mm:ss': (this.showType == '2'? 'yyyy-MM': (this.showType == '3'? 'yyyy':'yyyy-MM-dd'));\r\n            this.dateFormat = itemDateFormat?itemDateFormat:format;\r\n        }\r\n        this.constructMultiFieldDateRange(nr.value);\r\n    }\r\n    get item(){\r\n        return this._item;\r\n    }\r\n    constructor(private localeService: LocaleService,private solutionService: SolutionService){}\r\n\r\n    ngOnInit(): void {}\r\n    getConditionItemTitle(field: QueryCondition) {\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n    constructMultiFieldDateRange(value) {\r\n        if(this.single){\r\n            this.value = value.value == null ? null : value.value;\r\n        }\r\n        else{\r\n            this.startValue = value.startValue == null ? null : value.startValue;\r\n            this.endValue = value.endValue == null ? null : value.endValue;\r\n        }\r\n    }\r\n\r\n    onDateChange(event:any){\r\n        this._item.value.value = event.returnFormatted ? event.returnFormatted :null;\r\n        this._item.valueText = event.formatted;\r\n        if(this.disabled){return;}\r\n        this.searchHandle.emit();\r\n    }\r\n\r\n    beginValueChange(event) {\r\n        this._item.value.startValue = event.returnFormatted ? event.returnFormatted : null;\r\n        this._item.value.startValueText = event.formatted;\r\n        this.setValueText();\r\n        if(this.disabled){return;}\r\n        this.searchHandle.emit();\r\n    }\r\n\r\n    endValueChange(event) {\r\n        this._item.value.endValue = event.returnFormatted ? event.returnFormatted : null;\r\n        this._item.value.endValueText = event.formatted;\r\n        this.setValueText();\r\n        if(this.disabled){return;}\r\n        this.searchHandle.emit();\r\n    }\r\n\r\n    setValueText(){\r\n        if (Object.keys(this._item.value).length === 0 || (!this._item.value.startValue && !this._item.value.endValue)) {\r\n            this._item.valueText = ''\r\n        }\r\n        else if(!this._item.value.startValueText){\r\n            this._item.valueText = '~' + this._item.value.endValueText;\r\n        }\r\n        else if(!this._item.value.endValueText){\r\n            this._item.valueText = this._item.value.startValueText + '~';\r\n        }\r\n        else{\r\n            this._item.valueText = this._item.value.startValueText + '~' + this._item.value.endValueText;\r\n        }\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { FilterComponent } from './filter.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { FarrisSidebarModule } from '@farris/ui-sidebar';\r\nimport { FarrisTooltipModule } from '@farris/ui-tooltip';\r\nimport { InputGroupModule } from '@farris/ui-input-group';\r\nimport { FarrisDatePickerModule } from '@farris/ui-datepicker';\r\nimport { DatalistModule } from '@farris/ui-datalist';\r\nimport { ComboListModule } from '@farris/ui-combo-list';\r\nimport { LookupModule } from '@farris/ui-lookup';\r\nimport { FarrisFormsModule } from '@farris/ui-forms';\r\nimport { NumberSpinnerModule } from '@farris/ui-number-spinner';\r\nimport { PerfectScrollbarModule } from '@farris/ui-perfect-scrollbar';\r\nimport { LocaleModule } from '@farris/ui-locale';\r\nimport { FarrisCommonModule } from '@farris/ui-common';\r\n\r\nimport { FilterPanelModule } from '@farris/ui-filter-panel';\r\nimport { FilterConditionModule, QuerySolutionService } from '@farris/ui-filter-condition';\r\n\r\nimport { ConvertorService } from './service/convertorservice';\r\nimport { InputComponent } from './components/inputcomponent/input.component';\r\nimport { NumberComponent } from './components/numbercomponent/number.component';\r\nimport { DropDownComponent } from './components/dropdowncomponent/dropdown.component';\r\nimport { SearchComponent } from './components/searchcomponent/search.component';\r\nimport { filterCheckboxComponent } from './components/checkboxcomponent/checkbox.component';\r\nimport { DateRangeComponent } from './components/daterangecomponent/daterange.component';\r\nimport { HelpComponent } from './components/helpcomponent.ts/help.component';\r\nimport { SolutionService } from './service/solution.service';\r\nimport { DateComponent } from './components/datecomponent/date.component';\r\nimport { ControlTypeXPipe } from './controlType.pipe';\r\nimport { filterRadioComponent } from './components/radiocomponent/radio.component';\r\n\r\n\r\nimport { FilterService } from './filter.service';\r\nimport { SimpleInputGroupComponent } from './components/inputgroupcomponent/inputgroup.component';\r\nimport { SingleNumberComponent } from './components/singlenumbercomponent/number.component';\r\nimport { FlexibleNumberComponent } from './components/flexiblecomponent/flexiblenumber.component';\r\nimport { FlexibleDateComponent } from './components/flexibledatecomponent/flexibledate.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    FilterComponent,\r\n    DateComponent,\r\n    NumberComponent,\r\n    HelpComponent,\r\n    InputComponent,\r\n    DropDownComponent,\r\n    SearchComponent,\r\n    filterCheckboxComponent,\r\n    DateRangeComponent,\r\n    filterRadioComponent,\r\n    SimpleInputGroupComponent,\r\n    SingleNumberComponent,\r\n    FlexibleNumberComponent,\r\n    FlexibleDateComponent,\r\n    ControlTypeXPipe\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    FilterPanelModule,\r\n    FarrisSidebarModule,\r\n    FarrisTooltipModule,\r\n    InputGroupModule,\r\n    FarrisDatePickerModule,\r\n    DatalistModule,\r\n    ComboListModule,\r\n    LookupModule,\r\n    FarrisFormsModule,\r\n    NumberSpinnerModule,\r\n    PerfectScrollbarModule,\r\n    FilterConditionModule,\r\n    LocaleModule.forRoot(),\r\n    FarrisCommonModule\r\n  ],\r\n  exports: [\r\n    FilterComponent,\r\n    DateComponent,\r\n    NumberComponent,\r\n    HelpComponent,\r\n    InputComponent,\r\n    DropDownComponent,\r\n    SearchComponent,\r\n    filterCheckboxComponent,\r\n    DateRangeComponent,\r\n    filterRadioComponent,\r\n    SimpleInputGroupComponent,\r\n    SingleNumberComponent,\r\n    FlexibleNumberComponent,\r\n    FlexibleDateComponent,\r\n    ControlTypeXPipe\r\n  ],\r\n  providers:[\r\n    FilterService,\r\n    ConvertorService,\r\n    SolutionService,\r\n    QuerySolutionService\r\n  ],\r\n})\r\nexport class SimpleFilterModule { }\r\n","import { ControlType } from \"../controltype\";\r\nimport { TextValue } from \"./textvalue\";\r\nimport { NumberRangeValueConvertor } from \"./numberrangevaue\";\r\nimport { DateRangeValue } from \"./daterangevalue\";\r\nimport { HelpValue } from \"./helpvalue\";\r\nimport { DropDownListValueConvert } from \"./dropdownlistvalue\";\r\nimport { IControl } from \"../controltype/icontrol\";\r\nexport interface IValue{\r\n    getControlType():ControlType;\r\n    getOriginalValue(): any;\r\n    setOriginalValue(value: any): void;\r\n    clearValue(): void;\r\n    isEmpty(): boolean;\r\n    getValueText(ctrl?: any):string;\r\n}\r\n\r\nexport class ConditionValueConvert{\r\n    convertToObject(obj:IValue):Object{\r\n        let conditionValue=obj as IValue;\r\n        let controlType=conditionValue.getControlType();\r\n        let jobj=new Object();\r\n        jobj[\"Type\"]=controlType;\r\n        if(controlType==ControlType.DropDown){\r\n            let convertor=new DropDownListValueConvert();\r\n            jobj[\"Content\"]=convertor.convertToObject(conditionValue);\r\n        }\r\n        else if(controlType==ControlType.NumberRange){\r\n            let convertor=new NumberRangeValueConvertor();\r\n            jobj[\"Content\"]=convertor.convertToObject(conditionValue);\r\n        }\r\n        else{\r\n            jobj[\"Content\"]=conditionValue;\r\n        }\r\n        return jobj;\r\n    }\r\n\r\n    initFromObject(jobj:Object):IValue{\r\n        let controlType=jobj[\"Type\"] as ControlType;\r\n        let content:IValue=jobj[\"Content\"];\r\n        if(controlType==ControlType.Text){\r\n            return Object.assign(new TextValue(),content as TextValue);\r\n        }\r\n        else if(controlType==ControlType.NumberRange){\r\n            let convertor=new NumberRangeValueConvertor();\r\n            return convertor.initFromObject(content);\r\n        }\r\n        else if(controlType==ControlType.DateRange){\r\n            return Object.assign(new DateRangeValue(),content as DateRangeValue);\r\n        }\r\n        else if(controlType==ControlType.DropDown){\r\n            let convertor=new DropDownListValueConvert();\r\n            return convertor.initFromObject(content);\r\n        }\r\n        else if(controlType==ControlType.Help){\r\n            return Object.assign(new HelpValue(),content as HelpValue);\r\n        }\r\n    }\r\n}","export interface RadioIEnumValue{\r\n    getEnumValueName():string;\r\n    getEnumValue():any;\r\n\r\n    /**\r\n     * å¼æ¾ç¤º\r\n     */\r\n    value:string;\r\n}\r\n\r\nexport class RadioEnumValue implements RadioIEnumValue{\r\n\r\n    getEnumValueName():string{\r\n        return this.name;\r\n    }\r\n\r\n    getEnumValue():any{\r\n        return this.value;\r\n    }\r\n    \r\n    /**\r\n     * ææ¬æ¾ç¤º\r\n     */\r\n    name:string;\r\n\r\n    /**\r\n     * å¼æ¾ç¤º\r\n     */\r\n    value:string;\r\n}","export enum DisplayType{\r\n    LIST=0,\r\n    TREELIST=1\r\n}","import { ControlType } from \"../controltype\";\r\nimport { DropDownControl, DropDownListControlConvert } from \"./dropdownlist/dropdowncontrol\";\r\nimport { TextControl } from \"./text/textcontrol\";\r\nimport { SearchControl } from './search/searchcontrol';\r\n\r\n\r\nimport { DateRangeControl } from \"./datarange/daterangecontrol\";\r\nimport { DateControl } from \"./date/datecontrol\";\r\nimport { HelpContol } from \"./help/helpcontrol\";\r\nimport { NumberRangeControl } from \"./numberrange/numberrangecontrol\";\r\nimport { CompareType } from '../comparetype';\r\n\r\n/**\r\n * æ§ä»¶æ¥å£\r\n */\r\nexport interface IControl{\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType():ControlType;\r\n    \r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n    /**æ¥æéè¦å¢å ç±»åæ¯è¾ */\r\n    compareType?:CompareType;\r\n    controltype?:string;\r\n    /**æ¯å¦æ¯åæ°å¼ */\r\n    single?:boolean;\r\n    boolcheck?:boolean;\r\n}\r\n\r\nexport class ControlConvert{\r\n    convertJObject(obj:IControl):Object{\r\n        let control=obj as IControl;\r\n        let controlType=control.getControlType();\r\n        let jobj=new Object();\r\n        jobj[\"Type\"]=controlType;\r\n        if(controlType!=ControlType.DropDown){\r\n            jobj[\"Content\"]=control;\r\n        }\r\n        else{\r\n            let convertor=new DropDownListControlConvert();\r\n            jobj[\"Content\"]=convertor.convertToObject(control as DropDownControl);\r\n        }\r\n        return jobj;\r\n    }\r\n\r\n    initFromJobject(jobj:Object):IControl{\r\n        let controlType=jobj[\"Type\"] as ControlType;\r\n        let content:IControl=jobj[\"Content\"];\r\n        if(controlType==ControlType.Text){\r\n            return Object.assign(new TextControl(),content as TextControl);\r\n        }\r\n        else if( controlType==ControlType.Search ){\r\n            return Object.assign(new SearchControl(),content as SearchControl);\r\n        }\r\n\r\n\r\n        else if(controlType==ControlType.DateRange){\r\n            return Object.assign(new DateRangeControl(),content as DateRangeControl);\r\n        }\r\n        else if(controlType==ControlType.NumberRange){\r\n            return Object.assign(new NumberRangeControl(),content as NumberRangeControl);\r\n        }\r\n        // else if(controlType==ControlType.DateTime){\r\n        //     return Object.assign(new DateControl(),content as DateControl);\r\n        // }\r\n        else if(controlType==ControlType.DropDown){\r\n            let convert=new DropDownListControlConvert();\r\n            return convert.initFromObject(content);\r\n        }\r\n        else if(controlType==ControlType.Help){\r\n            return Object.assign(new HelpContol(),content as HelpContol);\r\n        }\r\n    }\r\n}","import { FieldConfig } from './fieldconfig/fieldconfig';\r\n\r\nexport class listFilterItem{\r\n    id: string;\r\n    name: string;\r\n    width: Number; // è®°å½å®½åº¦\r\n    isExtend: boolean\r\n    constructor(_id: string, _groupName: string) {\r\n        this.id = _id;\r\n        this.name = _groupName;\r\n        this.width = 0;\r\n        this.isExtend = false;\r\n    }\r\n    // è®¾ç½®å®½åº¦\r\n    setWidth(value: string) {\r\n        this.width = parseInt(value, 10);\r\n    }\r\n    // è·åå®½åº¦\r\n    getWidth(): any {\r\n        return this.width;\r\n    }\r\n}\r\nexport class listFilterGroup {\r\n    listItems:Array<listFilterItem>;\r\n    responsedIndex:number = 0;\r\n    constructor(){\r\n        this.listItems = [];\r\n    }\r\n}\r\n\r\n// export class listFilterGroup {\r\n//     id: string;\r\n//     name: string;\r\n//     presetId: Array<string> = []; // è®°å½åç´ çId\r\n//     responsedIndex: Array<Number> = []; // è®°å½è½¬åä¸ºä¸ææ¶åç´ çä½ç½®\r\n//     width: number; // è®°å½å®½åº¦\r\n//     constructor(_id: string, _groupName: string) {\r\n//         this.id = _id;\r\n//         this.name = _groupName;\r\n//         this.width = 0;\r\n//     }\r\n//     // è®¾ç½®å®½åº¦\r\n//     setWidth(value: any) {\r\n//         this.width = parseInt(value + '', 10);\r\n//     }\r\n//     // è·åå®½åº¦\r\n//     getWidth(): any {\r\n//         return this.width;\r\n//     }\r\n//     // æ´æ°presetIndex\r\n//     setPreset(value: Array<string> | string) {\r\n//         if (Array.isArray(value)) {\r\n//             this.presetId = this.presetId.concat(value);\r\n//         } else {\r\n//             this.presetId.push(value);\r\n//         }\r\n//     }\r\n//     // æ¸é¤preset\r\n//     delPreset(){\r\n//         this.presetId=[];\r\n//     }\r\n//     // å é¤\r\n//     removeResponsed(index) {\r\n//         this.responsedIndex.splice(index, 1);\r\n//     }\r\n//     // æ´æ°responsedIndex\r\n//     setResponsed(value: Array<Number> | Number) {\r\n//         if (Array.isArray(value)) {\r\n//             this.responsedIndex = this.responsedIndex.concat(value);\r\n//         } else {\r\n//             this.responsedIndex.push(value);\r\n//         }\r\n//     }\r\n//     // æ¯å¦å·²ç»å¼å§å¤çååºå¼\r\n//     isResponsing() {\r\n//         return this.responsedIndex.length > 0;\r\n//     }\r\n//     // æ¯å¦å·²ç»å¤çå®ååºå¼\r\n//     isResponsed() {\r\n//         return this.presetId.length === this.responsedIndex.length;\r\n//     }\r\n// }\r\n"]}