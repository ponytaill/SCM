/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*
* @Author: 疯狂秀才(Lucas Huang)
* @LastEditors: 疯狂秀才(Lucas Huang)
* @Company: Inspur
* @Version: v0.1.8
* @Date: 2018-09-18 16:04:05
* @LastEditTime: 2019-10-17 13:42:45
*/
import { Component, ElementRef, ViewChild, Renderer2, Output, EventEmitter, Input } from '@angular/core';
import { LOADING_STYLES } from './loading.styles';
import { delay, filter, takeUntil } from 'rxjs/operators';
import { Subject, BehaviorSubject } from 'rxjs';
export class LoadingComponent {
    /**
     * @param {?} render
     * @param {?} el
     */
    constructor(render, el) {
        this.render = render;
        this.el = el;
        this.showMessage = true;
        this.loadingStyleDom = LOADING_STYLES;
        this._isActive = false;
        this.activeSubject = new BehaviorSubject(false);
        this.message = '';
        this.width = 30;
        /**
         * loading 样式
         */
        this.type = 0;
        this.delay = 300;
        this.closed = new EventEmitter();
        this.activedSubscrition = null;
        this.parentContainer = null;
        this.destroy$ = new Subject();
    }
    /**
     * @return {?}
     */
    get isActive() {
        return this._isActive;
    }
    /**
     * @param {?} val
     * @return {?}
     */
    set isActive(val) {
        this._isActive = val;
        if (this.activeSubject) {
            this.activeSubject.next(val);
        }
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.activedSubscrition = this.activeSubject.pipe(takeUntil(this.destroy$)).pipe(filter((/**
         * @param {?} n
         * @return {?}
         */
        (n) => {
            return n;
        })), delay(this.delay)).subscribe((/**
         * @param {?} v
         * @return {?}
         */
        v => {
            if (v && this.isActive) {
                // this.render.setStyle(this.loadingContainerEl.nativeElement, 'display', 'block');
                this.render.setStyle(this.loadingBackdrop.nativeElement, 'display', 'block');
                this.render.setStyle(this.loadingContainerEl.nativeElement, 'left', 0);
                this.setPosition();
                this.render.removeStyle(this.loadingContainerEl.nativeElement, 'visibility');
                this.render.removeStyle(this.loadingContainerEl.nativeElement, 'left');
            }
        }));
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        this.destroy$.next();
        this.destroy$.complete();
    }
    /**
     * @return {?}
     */
    close() {
        if (this.loadingBackdrop) {
            this.loadingBackdrop.nativeElement.remove();
        }
        this.isActive = false;
        this.render.removeAttribute(this.el.nativeElement, 'class');
        // this.animate('f-component-loading fadeOut animated animated-0.5');
        this.closed.emit(this.isActive);
    }
    /**
     * @private
     * @return {?}
     */
    setPosition() {
        /** @type {?} */
        const containerWidth = this.loadingContainerEl.nativeElement.clientWidth;
        /** @type {?} */
        const containerHeight = this.loadingContainerEl.nativeElement.clientHeight;
        this.render.setStyle(this.loadingContainerEl.nativeElement, 'marginTop', -containerHeight / 2 + 'px');
        /** @type {?} */
        let ml = -containerWidth / 2 + 'px';
        if (this.parentContainer) {
            if (this.parentContainer.clientWidth <= 200) {
                ml = '-100px';
            }
        }
        this.render.setStyle(this.loadingContainerEl.nativeElement, 'marginLeft', ml);
    }
    /**
     * @private
     * @param {?} animateCls
     * @return {?}
     */
    animate(animateCls) {
        this.addAnimationEndEvent('webkitAnimationEnd', 'mozAnimationEnd', 'MSAnimationEnd', 'oanimationend', 'animationend');
        this.render.setAttribute(this.el.nativeElement, 'class', animateCls);
    }
    /**
     * @private
     * @param {...?} events
     * @return {?}
     */
    addAnimationEndEvent(...events) {
        /** @type {?} */
        const _this = this;
        events.forEach((/**
         * @param {?} e
         * @return {?}
         */
        e => {
            _this.el.nativeElement.addEventListener(e, (/**
             * @return {?}
             */
            function handler() {
                _this.el.nativeElement.removeEventListener(e, handler);
                // _this.render.removeAttribute(_this.el.nativeElement, 'class');
                ['fadeIn', 'fadeOut', 'animated', 'animated-0.5'].forEach((/**
                 * @param {?} n
                 * @return {?}
                 */
                n => {
                    _this.render.removeClass(_this.el.nativeElement, n);
                }));
                _this.closed.emit(_this.isActive);
            }));
        }));
    }
}
LoadingComponent.decorators = [
    { type: Component, args: [{
                selector: 'farris-loading',
                template: `
        <div #loadingBackdrop class="farris-loading-backdrop loading-wait" style="display: none"></div>
        <div #loadingContainerEl class="farris-loading" style="visibility: hidden">
            <div class="ng-busy-default-wrapper">
                <div class="ng-busy-default-sign" >
                    <div [style.width]="width+ 'px'" [style.height]="width+'px'" style="display: inline-block;margin:4px;"
                                [innerHTML]="loadingStyleDom[type] | safe: 'html'"></div>
                    <div class="ng-busy-default-text" style="margin-left:0;"
                                 *ngIf="showMessage" [innerHTML]="'loading.message' | locale: '' :message | safe: 'html'"></div>
                </div>
            </div>
        </div>
    `,
                styles: [`.loading-wait {
            cursor: wait
        }
        .animated-0.5 {
            -webkit-animation-duration: 0s;
            animation-duration: 0s;
        }
        `]
            }] }
];
/** @nocollapse */
LoadingComponent.ctorParameters = () => [
    { type: Renderer2 },
    { type: ElementRef }
];
LoadingComponent.propDecorators = {
    showMessage: [{ type: Input }],
    loadingContainerEl: [{ type: ViewChild, args: ['loadingContainerEl',] }],
    loadingBackdrop: [{ type: ViewChild, args: ['loadingBackdrop',] }],
    closed: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    LoadingComponent.prototype.showMessage;
    /** @type {?} */
    LoadingComponent.prototype.loadingStyleDom;
    /** @type {?} */
    LoadingComponent.prototype.id;
    /**
     * @type {?}
     * @private
     */
    LoadingComponent.prototype._isActive;
    /**
     * @type {?}
     * @private
     */
    LoadingComponent.prototype.activeSubject;
    /** @type {?} */
    LoadingComponent.prototype.message;
    /** @type {?} */
    LoadingComponent.prototype.width;
    /**
     * loading 样式
     * @type {?}
     */
    LoadingComponent.prototype.type;
    /** @type {?} */
    LoadingComponent.prototype.delay;
    /** @type {?} */
    LoadingComponent.prototype.loadingContainerEl;
    /** @type {?} */
    LoadingComponent.prototype.loadingBackdrop;
    /** @type {?} */
    LoadingComponent.prototype.closed;
    /** @type {?} */
    LoadingComponent.prototype.activedSubscrition;
    /** @type {?} */
    LoadingComponent.prototype.parentContainer;
    /**
     * @type {?}
     * @private
     */
    LoadingComponent.prototype.destroy$;
    /**
     * @type {?}
     * @private
     */
    LoadingComponent.prototype.render;
    /**
     * @type {?}
     * @private
     */
    LoadingComponent.prototype.el;
}
//# sourceMappingURL=data:application/json;base64,