import { MetadataUtil } from '../../core/index';
import { PRIMITIVE_PROP_META, OBJECT_PROP_META, DYNAMIC_PROP_META, LIST_PROP_META } from './field_decorator';
/**
 * 属性注解器通用方法
 */
var FieldMetadataUtil = /** @class */ (function () {
    function FieldMetadataUtil() {
    }
    /**
     * 获取实体所有的简单属性元数据
     * @param target 实体类型
     * @returns 形如：{[propName: string]: NgObjectProperty}
     */
    FieldMetadataUtil.getNgFields = function (target) {
        return MetadataUtil.getPropsMetadatasByName(target, PRIMITIVE_PROP_META);
    };
    /**
     * 获取某个简单属性的元数据
     */
    FieldMetadataUtil.getNgField = function (target, propName) {
        var ngFields = this.getNgFields(target);
        var ngField = ngFields[propName];
        return ngField;
    };
    /**
     * 获取实体属性在原始数据中的属性名
     */
    FieldMetadataUtil.getDataField = function (target, propName) {
        var ngField = this.getNgField(target, propName);
        return ngField.dataField || propName;
    };
    /**
     * 获取标注为NgObject的属性的元数据
     * @param target 实体类型
     * @returns 形如：{[propName: string]: NgObjectProperty}
     */
    FieldMetadataUtil.getNgObjects = function (target) {
        return MetadataUtil.getPropsMetadatasByName(target, OBJECT_PROP_META);
    };
    FieldMetadataUtil.getNgDynamic = function (target) {
        return MetadataUtil.getPropsMetadatasByName(target, DYNAMIC_PROP_META);
    };
    /**
     * 获取标注为NgList的属性的元数据
     * @param target 实体类型
     * @returns 形如：{[propName: string]: NgListProperty}
     */
    FieldMetadataUtil.getNgList = function (target) {
        return MetadataUtil.getPropsMetadatasByName(target, LIST_PROP_META);
    };
    /**
     * 获取实体标注为主键的属性元数据
     * @param target 实体类型
     */
    FieldMetadataUtil.getPrimaryFieldMetadata = function (target) {
        var ngFieldObj = FieldMetadataUtil.getNgFields(target);
        var primaryKey = Object.keys(ngFieldObj).find(function (prop) {
            return ngFieldObj[prop].primary;
        });
        if (primaryKey) {
            var propMeta = ngFieldObj[primaryKey];
            propMeta.property = primaryKey;
            if (!propMeta.dataField) {
                propMeta.dataField = primaryKey;
            }
            return propMeta;
        }
        return undefined;
    };
    /**
     * 获取主键名称，没有主键时返回空字符串
     */
    FieldMetadataUtil.getPrimaryKey = function (entityType) {
        var primaryNgField = this.getPrimaryFieldMetadata(entityType);
        if (!primaryNgField) {
            return '';
        }
        return primaryNgField.property;
    };
    return FieldMetadataUtil;
}());
export { FieldMetadataUtil };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmllbGRfbWV0YWRhdGFfdXRpbC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvbW9iaWxlLWRldmtpdC8iLCJzb3VyY2VzIjpbImxpYi9lbnRpdHkvbWV0YWRhdGEvZmllbGRfbWV0YWRhdGFfdXRpbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDaEQsT0FBTyxFQUNMLG1CQUFtQixFQUFFLGdCQUFnQixFQUFFLGlCQUFpQixFQUFFLGNBQWMsRUFFekUsTUFBTSxtQkFBbUIsQ0FBQztBQUUzQjs7R0FFRztBQUNIO0lBQUE7SUFrRkEsQ0FBQztJQWpGQzs7OztPQUlHO0lBQ0ksNkJBQVcsR0FBbEIsVUFBbUIsTUFBVztRQUM1QixPQUFPLFlBQVksQ0FBQyx1QkFBdUIsQ0FBQyxNQUFNLEVBQUUsbUJBQW1CLENBQUMsQ0FBQztJQUMzRSxDQUFDO0lBRUQ7O09BRUc7SUFDSSw0QkFBVSxHQUFqQixVQUFrQixNQUFXLEVBQUUsUUFBZ0I7UUFDN0MsSUFBTSxRQUFRLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUMxQyxJQUFNLE9BQU8sR0FBRyxRQUFRLENBQUMsUUFBUSxDQUEwQixDQUFDO1FBQzVELE9BQU8sT0FBTyxDQUFDO0lBQ2pCLENBQUM7SUFFRDs7T0FFRztJQUNJLDhCQUFZLEdBQW5CLFVBQW9CLE1BQVcsRUFBRSxRQUFnQjtRQUMvQyxJQUFNLE9BQU8sR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sRUFBRSxRQUFRLENBQUMsQ0FBQztRQUNsRCxPQUFPLE9BQU8sQ0FBQyxTQUFTLElBQUksUUFBUSxDQUFDO0lBQ3ZDLENBQUM7SUFFRDs7OztPQUlHO0lBQ0ksOEJBQVksR0FBbkIsVUFBb0IsTUFBVztRQUM3QixPQUFPLFlBQVksQ0FBQyx1QkFBdUIsQ0FBQyxNQUFNLEVBQUUsZ0JBQWdCLENBQUMsQ0FBQztJQUN4RSxDQUFDO0lBRU0sOEJBQVksR0FBbkIsVUFBb0IsTUFBVztRQUM3QixPQUFPLFlBQVksQ0FBQyx1QkFBdUIsQ0FBQyxNQUFNLEVBQUUsaUJBQWlCLENBQUMsQ0FBQztJQUN6RSxDQUFDO0lBRUQ7Ozs7T0FJRztJQUNJLDJCQUFTLEdBQWhCLFVBQWlCLE1BQVc7UUFDMUIsT0FBTyxZQUFZLENBQUMsdUJBQXVCLENBQUMsTUFBTSxFQUFFLGNBQWMsQ0FBQyxDQUFDO0lBQ3RFLENBQUM7SUFFRDs7O09BR0c7SUFDSSx5Q0FBdUIsR0FBOUIsVUFBK0IsTUFBVztRQUN4QyxJQUFNLFVBQVUsR0FBRyxpQkFBaUIsQ0FBQyxXQUFXLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDekQsSUFBTSxVQUFVLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBQyxJQUFZO1lBQzNELE9BQU8sVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDLE9BQU8sQ0FBQztRQUNsQyxDQUFDLENBQUMsQ0FBQztRQUVILElBQUksVUFBVSxFQUFFO1lBQ2QsSUFBTSxRQUFRLEdBQUcsVUFBVSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1lBQ3hDLFFBQVEsQ0FBQyxRQUFRLEdBQUcsVUFBVSxDQUFDO1lBQy9CLElBQUksQ0FBQyxRQUFRLENBQUMsU0FBUyxFQUFFO2dCQUN2QixRQUFRLENBQUMsU0FBUyxHQUFHLFVBQVUsQ0FBQzthQUNqQztZQUVELE9BQU8sUUFBUSxDQUFDO1NBQ2pCO1FBQ0QsT0FBTyxTQUFTLENBQUM7SUFDbkIsQ0FBQztJQUVEOztPQUVHO0lBQ0ksK0JBQWEsR0FBcEIsVUFBcUIsVUFBZTtRQUNsQyxJQUFNLGNBQWMsR0FBRyxJQUFJLENBQUMsdUJBQXVCLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDaEUsSUFBSSxDQUFDLGNBQWMsRUFBRTtZQUNuQixPQUFPLEVBQUUsQ0FBQztTQUNYO1FBQ0QsT0FBTyxjQUFjLENBQUMsUUFBUSxDQUFDO0lBQ2pDLENBQUM7SUFFSCx3QkFBQztBQUFELENBQUMsQUFsRkQsSUFrRkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNZXRhZGF0YVV0aWwgfSBmcm9tICcuLi8uLi9jb3JlL2luZGV4JztcclxuaW1wb3J0IHtcclxuICBQUklNSVRJVkVfUFJPUF9NRVRBLCBPQkpFQ1RfUFJPUF9NRVRBLCBEWU5BTUlDX1BST1BfTUVUQSwgTElTVF9QUk9QX01FVEEsXHJcbiAgUHJpbWl0aXZlUHJvcE1ldGFkYXRhLCBPYmplY3RQcm9wTWV0YWRhdGEsIER5bmFtaWNQcm9wTWV0YWRhdGEsIExpc3RQcm9wTWV0YWRhdGFcclxufSBmcm9tICcuL2ZpZWxkX2RlY29yYXRvcic7XHJcblxyXG4vKipcclxuICog5bGe5oCn5rOo6Kej5Zmo6YCa55So5pa55rOVXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgRmllbGRNZXRhZGF0YVV0aWwge1xyXG4gIC8qKlxyXG4gICAqIOiOt+WPluWunuS9k+aJgOacieeahOeugOWNleWxnuaAp+WFg+aVsOaNrlxyXG4gICAqIEBwYXJhbSB0YXJnZXQg5a6e5L2T57G75Z6LXHJcbiAgICogQHJldHVybnMg5b2i5aaC77yae1twcm9wTmFtZTogc3RyaW5nXTogTmdPYmplY3RQcm9wZXJ0eX1cclxuICAgKi9cclxuICBzdGF0aWMgZ2V0TmdGaWVsZHModGFyZ2V0OiBhbnkpOiB7IFtwcm9wTmFtZTogc3RyaW5nXTogUHJpbWl0aXZlUHJvcE1ldGFkYXRhIH0ge1xyXG4gICAgcmV0dXJuIE1ldGFkYXRhVXRpbC5nZXRQcm9wc01ldGFkYXRhc0J5TmFtZSh0YXJnZXQsIFBSSU1JVElWRV9QUk9QX01FVEEpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog6I635Y+W5p+Q5Liq566A5Y2V5bGe5oCn55qE5YWD5pWw5o2uXHJcbiAgICovXHJcbiAgc3RhdGljIGdldE5nRmllbGQodGFyZ2V0OiBhbnksIHByb3BOYW1lOiBzdHJpbmcpOiBQcmltaXRpdmVQcm9wTWV0YWRhdGEge1xyXG4gICAgY29uc3QgbmdGaWVsZHMgPSB0aGlzLmdldE5nRmllbGRzKHRhcmdldCk7XHJcbiAgICBjb25zdCBuZ0ZpZWxkID0gbmdGaWVsZHNbcHJvcE5hbWVdIGFzIFByaW1pdGl2ZVByb3BNZXRhZGF0YTtcclxuICAgIHJldHVybiBuZ0ZpZWxkO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog6I635Y+W5a6e5L2T5bGe5oCn5Zyo5Y6f5aeL5pWw5o2u5Lit55qE5bGe5oCn5ZCNXHJcbiAgICovXHJcbiAgc3RhdGljIGdldERhdGFGaWVsZCh0YXJnZXQ6IGFueSwgcHJvcE5hbWU6IHN0cmluZykge1xyXG4gICAgY29uc3QgbmdGaWVsZCA9IHRoaXMuZ2V0TmdGaWVsZCh0YXJnZXQsIHByb3BOYW1lKTtcclxuICAgIHJldHVybiBuZ0ZpZWxkLmRhdGFGaWVsZCB8fCBwcm9wTmFtZTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOiOt+WPluagh+azqOS4uk5nT2JqZWN055qE5bGe5oCn55qE5YWD5pWw5o2uXHJcbiAgICogQHBhcmFtIHRhcmdldCDlrp7kvZPnsbvlnotcclxuICAgKiBAcmV0dXJucyDlvaLlpoLvvJp7W3Byb3BOYW1lOiBzdHJpbmddOiBOZ09iamVjdFByb3BlcnR5fVxyXG4gICAqL1xyXG4gIHN0YXRpYyBnZXROZ09iamVjdHModGFyZ2V0OiBhbnkpOiB7IFtwcm9wTmFtZTogc3RyaW5nXTogT2JqZWN0UHJvcE1ldGFkYXRhIH0ge1xyXG4gICAgcmV0dXJuIE1ldGFkYXRhVXRpbC5nZXRQcm9wc01ldGFkYXRhc0J5TmFtZSh0YXJnZXQsIE9CSkVDVF9QUk9QX01FVEEpO1xyXG4gIH1cclxuXHJcbiAgc3RhdGljIGdldE5nRHluYW1pYyh0YXJnZXQ6IGFueSk6IHsgW3Byb3BOYW1lOiBzdHJpbmddOiBPYmplY3RQcm9wTWV0YWRhdGEgfSB7XHJcbiAgICByZXR1cm4gTWV0YWRhdGFVdGlsLmdldFByb3BzTWV0YWRhdGFzQnlOYW1lKHRhcmdldCwgRFlOQU1JQ19QUk9QX01FVEEpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog6I635Y+W5qCH5rOo5Li6TmdMaXN055qE5bGe5oCn55qE5YWD5pWw5o2uXHJcbiAgICogQHBhcmFtIHRhcmdldCDlrp7kvZPnsbvlnotcclxuICAgKiBAcmV0dXJucyDlvaLlpoLvvJp7W3Byb3BOYW1lOiBzdHJpbmddOiBOZ0xpc3RQcm9wZXJ0eX1cclxuICAgKi9cclxuICBzdGF0aWMgZ2V0TmdMaXN0KHRhcmdldDogYW55KTogeyBbcHJvcE5hbWU6IHN0cmluZ106IExpc3RQcm9wTWV0YWRhdGEgfSB7XHJcbiAgICByZXR1cm4gTWV0YWRhdGFVdGlsLmdldFByb3BzTWV0YWRhdGFzQnlOYW1lKHRhcmdldCwgTElTVF9QUk9QX01FVEEpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog6I635Y+W5a6e5L2T5qCH5rOo5Li65Li76ZSu55qE5bGe5oCn5YWD5pWw5o2uXHJcbiAgICogQHBhcmFtIHRhcmdldCDlrp7kvZPnsbvlnotcclxuICAgKi9cclxuICBzdGF0aWMgZ2V0UHJpbWFyeUZpZWxkTWV0YWRhdGEodGFyZ2V0OiBhbnkpOiBQcmltaXRpdmVQcm9wTWV0YWRhdGEgfCB1bmRlZmluZWQge1xyXG4gICAgY29uc3QgbmdGaWVsZE9iaiA9IEZpZWxkTWV0YWRhdGFVdGlsLmdldE5nRmllbGRzKHRhcmdldCk7XHJcbiAgICBjb25zdCBwcmltYXJ5S2V5ID0gT2JqZWN0LmtleXMobmdGaWVsZE9iaikuZmluZCgocHJvcDogc3RyaW5nKSA9PiB7XHJcbiAgICAgIHJldHVybiBuZ0ZpZWxkT2JqW3Byb3BdLnByaW1hcnk7XHJcbiAgICB9KTtcclxuXHJcbiAgICBpZiAocHJpbWFyeUtleSkge1xyXG4gICAgICBjb25zdCBwcm9wTWV0YSA9IG5nRmllbGRPYmpbcHJpbWFyeUtleV07XHJcbiAgICAgIHByb3BNZXRhLnByb3BlcnR5ID0gcHJpbWFyeUtleTtcclxuICAgICAgaWYgKCFwcm9wTWV0YS5kYXRhRmllbGQpIHtcclxuICAgICAgICBwcm9wTWV0YS5kYXRhRmllbGQgPSBwcmltYXJ5S2V5O1xyXG4gICAgICB9XHJcblxyXG4gICAgICByZXR1cm4gcHJvcE1ldGE7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gdW5kZWZpbmVkO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog6I635Y+W5Li76ZSu5ZCN56ew77yM5rKh5pyJ5Li76ZSu5pe26L+U5Zue56m65a2X56ym5LiyXHJcbiAgICovXHJcbiAgc3RhdGljIGdldFByaW1hcnlLZXkoZW50aXR5VHlwZTogYW55KSB7XHJcbiAgICBjb25zdCBwcmltYXJ5TmdGaWVsZCA9IHRoaXMuZ2V0UHJpbWFyeUZpZWxkTWV0YWRhdGEoZW50aXR5VHlwZSk7XHJcbiAgICBpZiAoIXByaW1hcnlOZ0ZpZWxkKSB7XHJcbiAgICAgIHJldHVybiAnJztcclxuICAgIH1cclxuICAgIHJldHVybiBwcmltYXJ5TmdGaWVsZC5wcm9wZXJ0eTtcclxuICB9XHJcblxyXG59XHJcbiJdfQ==