import { DataTypeInfo, DataPropGroup } from '../entity-type-info/index';
import { DataPathNodeType } from './data_path_node';
import { DataPath } from './data_path';
/**
 * 数据Path工厂类
 */
var DataPathCreator = /** @class */ (function () {
    function DataPathCreator() {
    }
    /**
     * 将长路径数组或字符串转换为
     * @param fullPathArrayOrString 路径数组或字符串
     * @param repository 实体仓库
     * @summary
     * 1、长路径格式说明参考：data-path.md
     */
    DataPathCreator.createByLongPathFromRoot = function (fullPathArrayOrString, entityManager) {
        var dataPath = new DataPath();
        var fullPathArray = fullPathArrayOrString;
        if (!fullPathArray || fullPathArray.length === 0) {
            return dataPath;
        }
        var currentNodeInfo = {
            nodeValue: fullPathArray.shift(),
            nodeType: DataPathNodeType.DataId,
            entityTypeInfo: new DataTypeInfo(entityManager.entityType)
        };
        while (currentNodeInfo) {
            dataPath.push(currentNodeInfo.nodeType, currentNodeInfo.nodeValue);
            // 处理下一个节点
            var nextNodeValue = fullPathArray.shift();
            if (!nextNodeValue || !currentNodeInfo.entityTypeInfo) {
                break;
            }
            currentNodeInfo = this.getNextPathNodeInfo(currentNodeInfo, nextNodeValue);
        }
        return dataPath;
    };
    /**
     * 获取下一个路径节点的信息
     * @param parentNodeInfo 当前路径节点信息
     * @param nextNodeValue 下一个路径节点的值
     * @summary
     * 1、这个递归写的很绕，说明数据结构设计不合理；
     * 2、多个因素混用了一个结构；
     */
    DataPathCreator.getNextPathNodeInfo = function (parentNodeInfo, nextNodeValue) {
        var parentNodeValue = parentNodeInfo.nodeValue;
        var parentNodeType = parentNodeInfo.nodeType;
        var parentEntityTypeInfo = parentNodeInfo.entityTypeInfo;
        if (!nextNodeValue || !parentEntityTypeInfo) {
            return null;
        }
        var nextPathNodeInfo = {
            nodeValue: nextNodeValue,
            nodeType: null,
            entityTypeInfo: null
        };
        // DataNodeType=List：下一节点肯定是Object，并且EntityTypeInfo不变
        if (parentNodeType === DataPathNodeType.DataId) {
            nextPathNodeInfo.nodeType = DataPathNodeType.PropName;
            nextPathNodeInfo.entityTypeInfo = parentEntityTypeInfo;
        }
        else {
            // DataNodeType=Object：必然对应一个属性信息
            var nextPropInfo = parentEntityTypeInfo.getPropInfoByName(parentNodeValue);
            if (nextPropInfo.group === DataPropGroup.List) {
                // EntityPropGroup=EntityList：下一个节点是List类型。
                nextPathNodeInfo.nodeType = DataPathNodeType.DataId;
                nextPathNodeInfo.entityTypeInfo = nextPropInfo.typeInfo;
            }
            else {
                // EntityPropGroup=Entity：       下级entityTypeInfo为
                // EntityPropGroup=Dynamic|Plain：null
                nextPathNodeInfo.nodeType = DataPathNodeType.PropName;
                nextPathNodeInfo.entityTypeInfo = nextPropInfo.group === DataPropGroup.Object ? nextPropInfo.typeInfo : null;
            }
        }
        return nextPathNodeInfo;
    };
    /**
     * @param fullPathArrayOrString 路径数组或字符串
     * @param repository 实体仓库
     * @summary
     * 1、长路径格式说明参考：data-path.md
     * 2、shortPathArrayOrString暂时只支持字符串数组
     */
    DataPathCreator.createByShortPathFromRoot = function (shortPathArrayOrString, entityManager, bindingData) {
        var dataPath = new DataPath();
        var shortPathArray = shortPathArrayOrString;
        // 根节点
        var currentBindingObject = bindingData.list.currentItem;
        var currentEntityTypeInfo = new DataTypeInfo(entityManager.entityType);
        dataPath.push(DataPathNodeType.DataId, currentBindingObject.primaryKeyValue);
        // 遍历下级节点
        shortPathArray.forEach(function (propName) {
            var propInfo = currentEntityTypeInfo.getPropInfoByName(propName);
            switch (propInfo.group) {
                case DataPropGroup.Primitive:
                    dataPath.push(DataPathNodeType.PropName, propName);
                    break;
                case DataPropGroup.Object:
                    currentBindingObject = currentBindingObject[propName];
                    currentEntityTypeInfo = propInfo.typeInfo;
                    dataPath.push(DataPathNodeType.PropName, propName);
                    break;
                case DataPropGroup.List:
                    var currentBindingList = currentBindingObject[propName];
                    currentBindingObject = currentBindingList.currentItem;
                    currentEntityTypeInfo = propInfo.typeInfo;
                    dataPath.push(DataPathNodeType.PropName, propName);
                    dataPath.push(DataPathNodeType.DataId, currentBindingObject.primaryKeyValue);
                    break;
                default:
                    break;
            }
        });
        return dataPath;
    };
    return DataPathCreator;
}());
export { DataPathCreator };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YV9wYXRoX2NyZWF0b3IuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL21vYmlsZS1kZXZraXQvIiwic291cmNlcyI6WyJsaWIvZW50aXR5L2VudGl0eS1wYXRoL2RhdGFfcGF0aF9jcmVhdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxZQUFZLEVBQUUsYUFBYSxFQUFHLE1BQU0sMkJBQTJCLENBQUM7QUFJekUsT0FBTyxFQUFnQixnQkFBZ0IsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ2xFLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFFdkM7O0dBRUc7QUFDSDtJQUFBO0lBcUlBLENBQUM7SUFuSUM7Ozs7OztPQU1HO0lBQ1csd0NBQXdCLEdBQXRDLFVBQXVDLHFCQUF3QyxFQUFFLGFBQW9DO1FBQ25ILElBQU0sUUFBUSxHQUFHLElBQUksUUFBUSxFQUFFLENBQUM7UUFDaEMsSUFBTSxhQUFhLEdBQUcscUJBQWlDLENBQUM7UUFDeEQsSUFBSSxDQUFDLGFBQWEsSUFBSSxhQUFhLENBQUMsTUFBTSxLQUFLLENBQUMsRUFBRTtZQUNoRCxPQUFPLFFBQVEsQ0FBQztTQUNqQjtRQUVELElBQUksZUFBZSxHQUFHO1lBQ3BCLFNBQVMsRUFBRSxhQUFhLENBQUMsS0FBSyxFQUFFO1lBQ2hDLFFBQVEsRUFBRSxnQkFBZ0IsQ0FBQyxNQUFNO1lBQ2pDLGNBQWMsRUFBRSxJQUFJLFlBQVksQ0FBQyxhQUFhLENBQUMsVUFBVSxDQUFDO1NBQzNELENBQUM7UUFDRixPQUFPLGVBQWUsRUFBRTtZQUN0QixRQUFRLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxRQUFRLEVBQUUsZUFBZSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1lBRW5FLFVBQVU7WUFDVixJQUFNLGFBQWEsR0FBRyxhQUFhLENBQUMsS0FBSyxFQUFFLENBQUM7WUFDNUMsSUFBSSxDQUFDLGFBQWEsSUFBSSxDQUFDLGVBQWUsQ0FBQyxjQUFjLEVB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Q0FBQztvQkFDMUMsUUFBUSxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxRQUFRLEVBQUUsUUFBUSxDQUFDLENBQUM7b0JBRW5ELE1BQU07Z0JBQ1IsS0FBSyxhQUFhLENBQUMsSUFBSTtvQkFDckIsSUFBTSxrQkFBa0IsR0FBRyxvQkFBb0IsQ0FBQyxRQUFRLENBQUMsQ0FBQztvQkFDMUQsb0JBQW9CLEdBQUcsa0JBQWtCLENBQUMsV0FBVyxDQUFDO29CQUN0RCxxQkFBcUIsR0FBRyxRQUFRLENBQUMsUUFBUSxDQUFDO29CQUUxQyxRQUFRLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLFFBQVEsRUFBRSxRQUFRLENBQUMsQ0FBQztvQkFDbkQsUUFBUSxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxNQUFNLEVBQUUsb0JBQW9CLENBQUMsZUFBZSxDQUFDLENBQUM7b0JBQzdFLE1BQU07Z0JBQ1I7b0JBQ0ksTUFBTTthQUNYO1FBQ0gsQ0FBQyxDQUFDLENBQUM7UUFFSCxPQUFPLFFBQVEsQ0FBQztJQUNsQixDQUFDO0lBRUgsc0JBQUM7QUFBRCxDQUFDLEFBcklELElBcUlDO0FBRUQsT0FBTyxFQUFFLGVBQWUsRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmltcG9ydCB7IERhdGFUeXBlSW5mbywgRGF0YVByb3BHcm91cCAgfSBmcm9tICcuLi9lbnRpdHktdHlwZS1pbmZvL2luZGV4JztcclxuaW1wb3J0IHsgRW50aXR5ICB9IGZyb20gJy4uL2luZGV4JztcclxuaW1wb3J0IHsgUmVwb3NpdG9yeSwgRW50aXR5TWFuYWdlciB9IGZyb20gJy4uLy4uL3JlcG9zaXRvcnkvaW5kZXgnO1xyXG5pbXBvcnQgeyBCaW5kaW5nRGF0YSB9IGZyb20gJy4uLy4uL2JpbmRpbmctZGF0YS9pbmRleCc7XHJcbmltcG9ydCB7IERhdGFQYXRoTm9kZSwgRGF0YVBhdGhOb2RlVHlwZSB9IGZyb20gJy4vZGF0YV9wYXRoX25vZGUnO1xyXG5pbXBvcnQgeyBEYXRhUGF0aCB9IGZyb20gJy4vZGF0YV9wYXRoJztcclxuXHJcbi8qKlxyXG4gKiDmlbDmja5QYXRo5bel5Y6C57G7XHJcbiAqL1xyXG5jbGFzcyBEYXRhUGF0aENyZWF0b3Ige1xyXG5cclxuICAvKipcclxuICAgKiDlsIbplb/ot6/lvoTmlbDnu4TmiJblrZfnrKbkuLLovazmjaLkuLpcclxuICAgKiBAcGFyYW0gZnVsbFBhdGhBcnJheU9yU3RyaW5nIOi3r+W+hOaVsOe7hOaIluWtl+espuS4slxyXG4gICAqIEBwYXJhbSByZXBvc2l0b3J5IOWunuS9k+S7k+W6k1xyXG4gICAqIEBzdW1tYXJ5XHJcbiAgICogMeOAgemVv+i3r+W+hOagvOW8j+ivtOaYjuWPguiAg++8mmRhdGEtcGF0aC5tZFxyXG4gICAqL1xyXG4gIHB1YmxpYyBzdGF0aWMgY3JlYXRlQnlMb25nUGF0aEZyb21Sb290KGZ1bGxQYXRoQXJyYXlPclN0cmluZzogc3RyaW5nW10gfCBzdHJpbmcsIGVudGl0eU1hbmFnZXI6IEVudGl0eU1hbmFnZXI8RW50aXR5Pik6IERhdGFQYXRoIHtcclxuICAgIGNvbnN0IGRhdGFQYXRoID0gbmV3IERhdGFQYXRoKCk7XHJcbiAgICBjb25zdCBmdWxsUGF0aEFycmF5ID0gZnVsbFBhdGhBcnJheU9yU3RyaW5nIGFzIHN0cmluZ1tdO1xyXG4gICAgaWYgKCFmdWxsUGF0aEFycmF5IHx8IGZ1bGxQYXRoQXJyYXkubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgIHJldHVybiBkYXRhUGF0aDtcclxuICAgIH1cclxuXHJcbiAgICBsZXQgY3VycmVudE5vZGVJbmZvID0ge1xyXG4gICAgICBub2RlVmFsdWU6IGZ1bGxQYXRoQXJyYXkuc2hpZnQoKSxcclxuICAgICAgbm9kZVR5cGU6IERhdGFQYXRoTm9kZVR5cGUuRGF0YUlkLFxyXG4gICAgICBlbnRpdHlUeXBlSW5mbzogbmV3IERhdGFUeXBlSW5mbyhlbnRpdHlNYW5hZ2VyLmVudGl0eVR5cGUpXHJcbiAgICB9O1xyXG4gICAgd2hpbGUgKGN1cnJlbnROb2RlSW5mbykge1xyXG4gICAgICBkYXRhUGF0aC5wdXNoKGN1cnJlbnROb2RlSW5mby5ub2RlVHlwZSwgY3VycmVudE5vZGVJbmZvLm5vZGVWYWx1ZSk7XHJcblxyXG4gICAgICAvLyDlpITnkIbkuIvkuIDkuKroioLngrlcclxuICAgICAgY29uc3QgbmV4dE5vZGVWYWx1ZSA9IGZ1bGxQYXRoQXJyYXkuc2hpZnQoKTtcclxuICAgICAgaWYgKCFuZXh0Tm9kZVZhbHVlIHx8ICFjdXJyZW50Tm9kZUluZm8uZW50aXR5VHlwZUluZm8pIHtcclxuICAgICAgICBicmVhaztcclxuICAgICAgfVxyXG4gICAgICBjdXJyZW50Tm9kZUluZm8gPSB0aGlzLmdldE5leHRQYXRoTm9kZUluZm8oY3VycmVudE5vZGVJbmZvLCBuZXh0Tm9kZVZhbHVlKTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gZGF0YVBhdGg7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDojrflj5bkuIvkuIDkuKrot6/lvoToioLngrnnmoTkv6Hmga9cclxuICAgKiBAcGFyYW0gcGFyZW50Tm9kZUluZm8g5b2T5YmN6Lev5b6E6IqC54K55L+h5oGvXHJcbiAgICogQHBhcmFtIG5leHROb2RlVmFsdWUg5LiL5LiA5Liq6Lev5b6E6IqC54K555qE5YC8XHJcbiAgICogQHN1bW1hcnlcclxuICAgKiAx44CB6L+Z5Liq6YCS5b2S5YaZ55qE5b6I57uV77yM6K+05piO5pWw5o2u57uT5p6E6K6+6K6h5LiN5ZCI55CG77ybXHJcbiAgICogMuOAgeWkmuS4quWboOe0oOa3t+eUqOS6huS4gOS4que7k+aehO+8m1xyXG4gICAqL1xyXG4gIHByaXZhdGUgc3RhdGljIGdldE5leHRQYXRoTm9kZUluZm8ocGFyZW50Tm9kZUluZm86IGFueSwgbmV4dE5vZGVWYWx1ZTogc3RyaW5nKTogYW55IHtcclxuXHJcbiAgICBjb25zdCBwYXJlbnROb2RlVmFsdWUgPSBwYXJlbnROb2RlSW5mby5ub2RlVmFsdWU7XHJcbiAgICBjb25zdCBwYXJlbnROb2RlVHlwZSA9IHBhcmVudE5vZGVJbmZvLm5vZGVUeXBlO1xyXG4gICAgY29uc3QgcGFyZW50RW50aXR5VHlwZUluZm8gPSBwYXJlbnROb2RlSW5mby5lbnRpdHlUeXBlSW5mbztcclxuXHJcbiAgICBpZiAoIW5leHROb2RlVmFsdWUgfHwgIXBhcmVudEVudGl0eVR5cGVJbmZvKSB7XHJcbiAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IG5leHRQYXRoTm9kZUluZm8gPSB7XHJcbiAgICAgIG5vZGVWYWx1ZTogbmV4dE5vZGVWYWx1ZSxcclxuICAgICAgbm9kZVR5cGU6IG51bGwsXHJcbiAgICAgIGVudGl0eVR5cGVJbmZvOiBudWxsXHJcbiAgICB9O1xyXG5cclxuXHJcbiAgICAvLyBEYXRhTm9kZVR5cGU9TGlzdO+8muS4i+S4gOiKgueCueiCr+WumuaYr09iamVjdO+8jOW5tuS4lEVudGl0eVR5cGVJbmZv5LiN5Y+YXHJcbiAgICBpZiAocGFyZW50Tm9kZVR5cGUgPT09IERhdGFQYXRoTm9kZVR5cGUuRGF0YUlkKSB7XHJcbiAgICAgIG5leHRQYXRoTm9kZUluZm8ubm9kZVR5cGUgPSBEYXRhUGF0aE5vZGVUeXBlLlByb3BOYW1lO1xyXG4gICAgICBuZXh0UGF0aE5vZGVJbmZvLmVudGl0eVR5cGVJbmZvID0gcGFyZW50RW50aXR5VHlwZUluZm87XHJcbiAgICB9IGVsc2Uge1xyXG5cclxuICAgICAgLy8gRGF0YU5vZGVUeXBlPU9iamVjdO+8muW/heeEtuWvueW6lOS4gOS4quWxnuaAp+S/oeaBr1xyXG4gICAgICBjb25zdCBuZXh0UHJvcEluZm8gPSBwYXJlbnRFbnRpdHlUeXBlSW5mby5nZXRQcm9wSW5mb0J5TmFtZShwYXJlbnROb2RlVmFsdWUpO1xyXG4gICAgICBpZiAobmV4dFByb3BJbmZvLmdyb3VwID09PSBEYXRhUHJvcEdyb3VwLkxpc3QpIHtcclxuXHJcbiAgICAgICAgLy8gRW50aXR5UHJvcEdyb3VwPUVudGl0eUxpc3TvvJrkuIvkuIDkuKroioLngrnmmK9MaXN057G75Z6L44CCXHJcbiAgICAgICAgbmV4dFBhdGhOb2RlSW5mby5ub2RlVHlwZSA9IERhdGFQYXRoTm9kZVR5cGUuRGF0YUlkO1xyXG4gICAgICAgIG5leHRQYXRoTm9kZUluZm8uZW50aXR5VHlwZUluZm8gPSBuZXh0UHJvcEluZm8udHlwZUluZm87XHJcbiAgICAgIH0gZWxzZSB7XHJcblxyXG4gICAgICAgIC8vIEVudGl0eVByb3BHcm91cD1FbnRpdHnvvJogICAgICAg5LiL57qnZW50aXR5VHlwZUluZm/kuLpcclxuICAgICAgICAvLyBFbnRpdHlQcm9wR3JvdXA9RHluYW1pY3xQbGFpbu+8mm51bGxcclxuICAgICAgICBuZXh0UGF0aE5vZGVJbmZvLm5vZGVUeXBlID0gRGF0YVBhdGhOb2RlVHlwZS5Qcm9wTmFtZTtcclxuICAgICAgICBuZXh0UGF0aE5vZGVJbmZvLmVudGl0eVR5cGVJbmZvID0gbmV4dFByb3BJbmZvLmdyb3VwID09PSBEYXRhUHJvcEdyb3VwLk9iamVjdCA/IG5leHRQcm9wSW5mby50eXBlSW5mbyA6IG51bGw7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gbmV4dFBhdGhOb2RlSW5mbztcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEBwYXJhbSBmdWxsUGF0aEFycmF5T3JTdHJpbmcg6Lev5b6E5pWw57uE5oiW5a2X56ym5LiyXHJcbiAgICogQHBhcmFtIHJlcG9zaXRvcnkg5a6e5L2T5LuT5bqTXHJcbiAgICogQHN1bW1hcnlcclxuICAgKiAx44CB6ZW/6Lev5b6E5qC85byP6K+05piO5Y+C6ICD77yaZGF0YS1wYXRoLm1kXHJcbiAgICogMuOAgXNob3J0UGF0aEFycmF5T3JTdHJpbmfmmoLml7blj6rmlK/mjIHlrZfnrKbkuLLmlbDnu4RcclxuICAgKi9cclxuICBwdWJsaWMgc3RhdGljIGNyZWF0ZUJ5U2hvcnRQYXRoRnJvbVJvb3QoXHJcbiAgICBzaG9ydFBhdGhBcnJheU9yU3RyaW5nOiBzdHJpbmdbXSB8IHN0cmluZywgZW50aXR5TWFuYWdlcjogRW50aXR5TWFuYWdlcjxFbnRpdHk+LCBiaW5kaW5nRGF0YTogQmluZGluZ0RhdGFcclxuICApOiBEYXRhUGF0aCB7XHJcblxyXG4gICAgY29uc3QgZGF0YVBhdGggPSBuZXcgRGF0YVBhdGgoKTtcclxuICAgIGNvbnN0IHNob3J0UGF0aEFycmF5OiBzdHJpbmdbXSA9IHNob3J0UGF0aEFycmF5T3JTdHJpbmcgYXMgc3RyaW5nW107XHJcblxyXG4gICAgLy8g5qC56IqC54K5XHJcbiAgICBsZXQgY3VycmVudEJpbmRpbmdPYmplY3QgPSBiaW5kaW5nRGF0YS5saXN0LmN1cnJlbnRJdGVtO1xyXG4gICAgbGV0IGN1cnJlbnRFbnRpdHlUeXBlSW5mbyA9IG5ldyBEYXRhVHlwZUluZm8oZW50aXR5TWFuYWdlci5lbnRpdHlUeXBlKTtcclxuICAgIGRhdGFQYXRoLnB1c2goRGF0YVBhdGhOb2RlVHlwZS5EYXRhSWQsIGN1cnJlbnRCaW5kaW5nT2JqZWN0LnByaW1hcnlLZXlWYWx1ZSk7XHJcblxyXG4gICAgLy8g6YGN5Y6G5LiL57qn6IqC54K5XHJcbiAgICBzaG9ydFBhdGhBcnJheS5mb3JFYWNoKChwcm9wTmFtZTogc3RyaW5nKSA9PiB7XHJcbiAgICAgIGNvbnN0IHByb3BJbmZvID0gY3VycmVudEVudGl0eVR5cGVJbmZvLmdldFByb3BJbmZvQnlOYW1lKHByb3BOYW1lKTtcclxuICAgICAgc3dpdGNoIChwcm9wSW5mby5ncm91cCkge1xyXG4gICAgICAgIGNhc2UgRGF0YVByb3BHcm91cC5QcmltaXRpdmU6XHJcbiAgICAgICAgICBkYXRhUGF0aC5wdXNoKERhdGFQYXRoTm9kZVR5cGUuUHJvcE5hbWUsIHByb3BOYW1lKTtcclxuICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIGNhc2UgRGF0YVByb3BHcm91cC5PYmplY3Q6XHJcbiAgICAgICAgICBjdXJyZW50QmluZGluZ09iamVjdCA9IGN1cnJlbnRCaW5kaW5nT2JqZWN0W3Byb3BOYW1lXTtcclxuICAgICAgICAgIGN1cnJlbnRFbnRpdHlUeXBlSW5mbyA9IHByb3BJbmZvLnR5cGVJbmZvO1xyXG4gICAgICAgICAgZGF0YVBhdGgucHVzaChEYXRhUGF0aE5vZGVUeXBlLlByb3BOYW1lLCBwcm9wTmFtZSk7XHJcblxyXG4gICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgY2FzZSBEYXRhUHJvcEdyb3VwLkxpc3Q6XHJcbiAgICAgICAgICBjb25zdCBjdXJyZW50QmluZGluZ0xpc3QgPSBjdXJyZW50QmluZGluZ09iamVjdFtwcm9wTmFtZV07XHJcbiAgICAgICAgICBjdXJyZW50QmluZGluZ09iamVjdCA9IGN1cnJlbnRCaW5kaW5nTGlzdC5jdXJyZW50SXRlbTtcclxuICAgICAgICAgIGN1cnJlbnRFbnRpdHlUeXBlSW5mbyA9IHByb3BJbmZvLnR5cGVJbmZvO1xyXG5cclxuICAgICAgICAgIGRhdGFQYXRoLnB1c2goRGF0YVBhdGhOb2RlVHlwZS5Qcm9wTmFtZSwgcHJvcE5hbWUpO1xyXG4gICAgICAgICAgZGF0YVBhdGgucHVzaChEYXRhUGF0aE5vZGVUeXBlLkRhdGFJZCwgY3VycmVudEJpbmRpbmdPYmplY3QucHJpbWFyeUtleVZhbHVlKTtcclxuICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuXHJcbiAgICByZXR1cm4gZGF0YVBhdGg7XHJcbiAgfVxyXG5cclxufVxyXG5cclxuZXhwb3J0IHsgRGF0YVBhdGhDcmVhdG9yIH07XHJcbiJdfQ==