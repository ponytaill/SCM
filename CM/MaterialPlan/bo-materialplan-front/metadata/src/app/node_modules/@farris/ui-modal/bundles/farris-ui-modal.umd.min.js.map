{"version":3,"sources":["ng://@farris/ui-modal/lib/bs-modal-ref.service.ts","node_modules/tslib/tslib.es6.js","ng://@farris/ui-modal/lib/modal-options.class.ts","ng://@farris/ui-modal/lib/modal-backdrop.component.ts","ng://@farris/ui-modal/lib/modal-button.directive.ts","ng://@farris/ui-modal/lib/modal-container.component.ts","ng://@farris/ui-modal/lib/bs-modal.service.ts","ng://@farris/ui-modal/lib/modal-backdrop.options.ts","ng://@farris/ui-modal/lib/modal.directive.ts","ng://@farris/ui-modal/lib/modal.module.ts"],"names":["BsModalRef","Injectable","this","close","Function","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","ModalOptions","modalConfigDefaults","backdrop","keyboard","focus","show","ignoreBackdropClick","class","animated","initialState","width","height","minHeight","minWidth","maxHeight","maxWidth","title","showCloseButton","showMaxButton","showButtons","buttonAlign","draggable","resizable","enableScroll","beforeOpen","of","beforeClose","okText","cancelText","dialogHeaderHeight","dialogFooterHeight","dialogType","showHeader","fitContent","areaResponse","CLASS_NAME","SCROLLBAR_MEASURER","BACKDROP","OPEN","FADE","IN","SHOW","TRANSITION_DURATIONS","DISMISS_REASONS","ModalBackdropComponent","defineProperty","_isAnimated","_isShown","renderer","addClass","element","nativeElement","removeClass","isBs3","ngOnInit","isAnimated","Utils","reflow","isShown","Component","args","selector","template","host","ElementRef","Renderer2","ModalButtonDirective","setDisabled","disable","el","disabled","visable","hide","Directive","Injector","Input","injector","ModalContainerComponent","sanitizer","iframeSrc","bypassSecurityTrustResourceUrl","_this","boundsElement","config","_renderer","setTimeout","setStyle","className","indexOf","scrollTop","document","body","bsModalService","getModalsCount","checkScrollbar","setScrollbar","classList","contains","opened","emit","modal","dlgHeaderLineHeight","getDialogHeaderLineHeight","ngAfterViewInit","initElRect","getBoundingClientRect","initBodySize","getContainerSize","originalHeight","originalWidth","windowResize$","fromEvent","window","pipe","debounceTime","subscribe","winWidth","innerWidth","winHeight","innerHeight","_windowResizeToMax","revertDialog","isMax","maxDialog","toCenter","moveTo","getDlgElement","querySelector","modalHeaderStyles","getComputedStyle","modalHeader","paddingTop","parseInt","replace","paddingBottom","bodyTarget","offsetHeight","offsetWidth","buildFooterStyles","styles","dialogFooterStyles","useButtonsTemplate","buttons","TemplateRef","onClick","event","target","stopPropagation","setDismissReason","onEsc","keyCode","preventDefault","level","ngOnDestroy","unsubscribe","isCloseButton","isModalHiding","closed","modalRef","marginLeft","Number","marginTop","dialogEl","contentEl","contentHeight","container","containerWidth","containerHeight","resized","x","y","draggbar","position","resetPosition","rememberPrevSize","prevWidth","prevHeight","resize","dropdown","ww","wh","changeDialogSize","resizeStop","opts","size","role","tabindex","[attr.aria-modal]","DomSanitizer","ViewChild","AngularDraggableDirective","Output","HostBinding","ViewChildren","HostListener","options","EventEmitter","modalID","Date","now","toPrecision","text","cls","iconCls","handle","alert","BsModalService","clearDocumentEvents","_documentMouseDownHandler","removeEventListener","content","modalsCount","_createLoaders","checkDialogSize","_showBackdrop","lastDismissReason","_showModal","_hideBackdrop","resetScrollbar","_hideModal","removeLoaders","isBackdropEnabled","isBackdropInDOM","backdropRef","instance","removeBackdrop","_backdropLoader","attach","to","_componentRef","duration","ngZone","runOutsideAngular","updateZindex","_modal","overlays","Array","from","querySelectorAll","filter","map","zIndex","maxZindex","Math","max","__spread","concat","dialog","location","style","modalLoader","loaders","bsModalRef","modalContainerRef","provide","useValue","iframe","addEventListener","_onMouseDown","getInnerComponent","localName","getCurrentModalContainer","reason","isBodyOverflowing","clientWidth","scrollbarWidth","getScrollbarWidth","originalBodyPadding","getPropertyValue","paddingRight","scrollDiv","createElement","appendChild","removeChild","loader","clf","createLoader","copyEvent","onBeforeShow","onShow","onShown","onBeforeHide","onHide","onHidden","splice","forEach","newSize","RendererFactory2","ComponentLoaderFactory","NgZone","rendererFactory","version","createRenderer","ModalBackdropOptions","animate","ModalDirective","_config","conf","getConfig","_element","dismissReason","hideModal","_backdrop","dispose","toggle","clearTimeout","timerHideModal","timerRmBackDrop","isNested","showBackdrop","showElement","parentNode","nodeType","Node","ELEMENT_NODE","setAttribute","setProperty","transitionComplete","resetAdjustments","focusOtherModal","callback","callbackRemove","parentElement","otherOpenedModals","exportAs","ViewContainerRef","ChangeDetectorRef","decorators","type","Optional","_viewContainerRef","cd","ModalModule","forRoot","ngModule","providers","PositioningService","NgModule","imports","CommonModule","PerfectScrollbarModule","AngularDraggableModule","FAreaResponseModule","FarrisTooltipModule","declarations","exports","entryComponents"],"mappings":"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","sourcesContent":["import { ModalButtonDirective } from './modal-button.directive';\r\nimport { Injectable, ComponentRef, QueryList } from '@angular/core';\r\nimport { ModalContainerComponent } from './modal-container.component';\r\n\r\n@Injectable()\r\nexport class BsModalRef {\r\n  /**\r\n   * Reference to a component inside the modal. Null if modal's been created with TemplateRef\r\n   */\r\n  content?: any | null;\r\n\r\n  /**\r\n   * Hides the modal\r\n   */\r\n  close: (e?: any) => void = Function;\r\n\r\n  dialog?: ComponentRef<ModalContainerComponent> | null;\r\n\r\n  buttons?: QueryList<ModalButtonDirective>;\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable, TemplateRef, EventEmitter } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class ModalOptions {\r\n    /**\r\n     *  Includes a modal-backdrop element. Alternatively,\r\n     *  specify static for a backdrop which doesn't close the modal on click.\r\n     */\r\n    backdrop?: boolean | 'static';\r\n    /**\r\n     * Closes the modal when escape key is pressed.\r\n     */\r\n    keyboard?: boolean;\r\n\r\n    focus?: boolean;\r\n    /**\r\n     * Shows the modal when initialized.\r\n     */\r\n    show?: boolean;\r\n    /**\r\n     * Ignore the backdrop click\r\n     */\r\n    ignoreBackdropClick?: boolean;\r\n    /**\r\n     * Css class for opened modal\r\n     */\r\n    class?: string;\r\n    /**\r\n     * Toggle animation\r\n     */\r\n    animated?: boolean;\r\n    /**\r\n     * Modal data\r\n     */\r\n    initialState?: object;\r\n    /**\r\n     * çªå£æ é¢\r\n     */\r\n    title: string;\r\n    /** æ é¢åå¾æ  */\r\n    iconCls?: string;\r\n\r\n    /** æ¾ç¤ºå¤´é¨ */\r\n    showHeader?: boolean;\r\n\r\n    /**\r\n     * æ¾ç¤ºå³é­æé®\r\n     */\r\n    showCloseButton?: boolean;\r\n    /**\r\n     * æ¾ç¤ºæå¤§åæé®\r\n     */\r\n    showMaxButton?: boolean;\r\n    /**\r\n     * æ¾ç¤ºæå°åæé®\r\n     */\r\n    showMinButton?: boolean;\r\n\r\n    /**\r\n     * çªå£å®½åº¦\r\n     */\r\n    width?: number;\r\n    /**\r\n     * çªå£é«åº¦\r\n     */\r\n    height?: number;\r\n\r\n    minWidth?: number;\r\n    minHeight?: number;\r\n    maxWidth?: number;\r\n    maxHeight?: number;\r\n    /** çªå£æ é¢æ é«åº¦ */\r\n    dialogHeaderHeight?: number;\r\n    /** çªå£æé®åºé«åº¦ */\r\n    dialogFooterHeight?: number;\r\n\r\n    dialogFooterStyles?: any;\r\n\r\n    /**\r\n     * æ¾ç¤ºæé®åº\r\n     */\r\n    showButtons?: boolean;\r\n    /** æé®å¯¹é½æ¹å¼ */\r\n    buttonAlign?: string;\r\n\r\n    /** æé®åè¡¨æ¨¡æ¿ */\r\n    buttons?: TemplateRef<any> | DialogButton[];\r\n\r\n    /** å¯ç¨ææ½åè½ */\r\n    draggable?: boolean;\r\n\r\n    /** å¯ç¨è°æ´å°ºå¯¸å¤§å° */\r\n    resizable?: boolean;\r\n\r\n    /** æ¯å¦å¯ç¨æ»å¨æ¡ */\r\n    enableScroll?: boolean;\r\n\r\n    beforeOpen?: () => Observable<boolean>;\r\n    beforeClose?: (modalRef: any, args?: any) => Observable<boolean>;\r\n    opened?: ( p?: {[key: string]: any }) => void;\r\n    closed?: (isCloseButtonClick: boolean | any, args?: any) => void;\r\n    okText?: string;\r\n    cancelText?: string;\r\n    /** å¼¹çªç±»åï¼defaultï¼å¼¹åºç»ä»¶ãæ¨¡æ¿ç­ï¼iframe,å¼¹åºiframe; ngFactory, å¼¹åºngFactory; */\r\n    dialogType?: string;\r\n    // çªå£éåºåå®¹èªå¨\r\n    fitContent?: boolean;\r\n    // çªå£åå®¹åºåæ¯å¦èªå¨ååºå¼\r\n    areaResponse?: boolean;\r\n    // å¼å¸¸æç¤º\r\n    exception?: {\r\n        date: string,\r\n        message: string\r\n    };\r\n}\r\n\r\nexport interface DialogButton {\r\n    text: string;\r\n    cls?: string;\r\n    iconCls?: string;\r\n    disable?: boolean;\r\n    defaultFocus?: boolean;\r\n    handle?: (e) => any;\r\n    display?: boolean;\r\n    tipsEnable?: boolean;\r\n    tipsText?: string | ((e?: any) => string);\r\n}\r\n\r\nexport const modalConfigDefaults: ModalOptions = {\r\n    backdrop: 'static',\r\n    keyboard: true,\r\n    focus: true,\r\n    show: false,\r\n    ignoreBackdropClick: true,\r\n    class: '',\r\n    animated: true,\r\n    initialState: {},\r\n    width: 400,\r\n    height: 350,\r\n    minHeight: null,\r\n    minWidth: null,\r\n    maxHeight: null,\r\n    maxWidth: null,\r\n    title: 'Title is here.',\r\n    showCloseButton: true,\r\n    showMaxButton: true,\r\n    showButtons: true,\r\n    buttonAlign: 'center',\r\n    draggable: true,\r\n    resizable: true,\r\n    enableScroll: true,\r\n    beforeOpen: () => of(true),\r\n    beforeClose: () => of(true),\r\n    okText: 'ç¡®å®',\r\n    cancelText: 'åæ¶',\r\n    dialogHeaderHeight: 38,\r\n    dialogFooterHeight: 50,\r\n    dialogType: 'default',\r\n    showHeader: true,\r\n    fitContent: false,\r\n    areaResponse: false\r\n};\r\n\r\nexport const CLASS_NAME: any = {\r\n    SCROLLBAR_MEASURER: 'modal-scrollbar-measure',\r\n    BACKDROP: 'modal-backdrop',\r\n    OPEN: 'modal-open',\r\n    FADE: 'fade',\r\n    IN: 'in', // bs3\r\n    SHOW: 'show' // bs4\r\n};\r\n\r\nexport const SELECTOR: any = {\r\n    DIALOG: '.modal-dialog',\r\n    DATA_TOGGLE: '[data-toggle=\"modal\"]',\r\n    DATA_DISMISS: '[data-dismiss=\"modal\"]',\r\n    FIXED_CONTENT: '.navbar-fixed-top, .navbar-fixed-bottom, .is-fixed'\r\n};\r\n\r\nexport const TRANSITION_DURATIONS: any = {\r\n    MODAL: 300,\r\n    BACKDROP: 150\r\n};\r\n\r\nexport const DISMISS_REASONS = {\r\n    BACKRDOP: 'backdrop-click',\r\n    ESC: 'esc'\r\n};\r\n","import { Component, ElementRef, OnInit, Renderer2 } from '@angular/core';\r\nimport { CLASS_NAME } from './modal-options.class';\r\nimport { Utils, isBs3 } from '@farris/ui-modal/utils';\r\n\r\n/** This component will be added as background layout for modals if enabled */\r\n@Component({\r\n    selector: 'bs-modal-backdrop',\r\n    template: ' ',\r\n    host: { class: CLASS_NAME.BACKDROP }\r\n})\r\nexport class ModalBackdropComponent implements OnInit {\r\n    get isAnimated(): boolean {\r\n        return this._isAnimated;\r\n    }\r\n\r\n    set isAnimated(value: boolean) {\r\n        this._isAnimated = value;\r\n        // this.renderer.setElementClass(this.element.nativeElement, `${ClassName.FADE}`, value);\r\n    }\r\n\r\n    get isShown(): boolean {\r\n        return this._isShown;\r\n    }\r\n\r\n    set isShown(value: boolean) {\r\n        this._isShown = value;\r\n        if (value) {\r\n            this.renderer.addClass(this.element.nativeElement, `${CLASS_NAME.IN}`);\r\n        } else {\r\n            this.renderer.removeClass(this.element.nativeElement, `${CLASS_NAME.IN}`);\r\n        }\r\n        if (!isBs3()) {\r\n            if (value) {\r\n                this.renderer.addClass(\r\n                    this.element.nativeElement,\r\n                    `${CLASS_NAME.SHOW}`\r\n                );\r\n            } else {\r\n                this.renderer.removeClass(\r\n                    this.element.nativeElement,\r\n                    `${CLASS_NAME.SHOW}`\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    element: ElementRef;\r\n    renderer: Renderer2;\r\n\r\n    protected _isAnimated: boolean;\r\n    protected _isShown = false;\r\n\r\n    constructor(element: ElementRef, renderer: Renderer2) {\r\n        this.element = element;\r\n        this.renderer = renderer;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        if (this.isAnimated) {\r\n            this.renderer.addClass(this.element.nativeElement, `${CLASS_NAME.FADE}`);\r\n            Utils.reflow(this.element.nativeElement);\r\n        }\r\n        this.isShown = true;\r\n    }\r\n}\r\n","import { Directive, Injector, ElementRef, Input } from '@angular/core';\r\n\r\n@Directive({ selector: '[modal-button]' })\r\nexport class ModalButtonDirective {\r\n    @Input() visable = true;\r\n    constructor(private injector: Injector, private el: ElementRef) { }\r\n\r\n    setDisabled(disable: boolean) {\r\n        this.el.nativeElement.disabled = disable;\r\n    }\r\n\r\n    show() {\r\n        this.visable = true;\r\n    }\r\n\r\n    hide() {\r\n        this.visable = false;\r\n    }\r\n}\r\n","import {\r\n    Component, ElementRef, HostListener, OnDestroy,\r\n    OnInit, Renderer2, ViewChild, Output,\r\n    EventEmitter, TemplateRef, AfterViewInit, Input,\r\n    NgZone,\r\n    ViewChildren,\r\n    QueryList,\r\n    HostBinding\r\n} from '@angular/core';\r\nimport { AngularDraggableDirective } from '@farris/ui-draggable';\r\nimport { DomSanitizer, SafeResourceUrl } from \"@angular/platform-browser\";\r\nimport {\r\n    CLASS_NAME, DISMISS_REASONS,\r\n    ModalOptions, TRANSITION_DURATIONS\r\n} from './modal-options.class';\r\nimport { BsModalService } from './bs-modal.service';\r\nimport { isBs3 } from '@farris/ui-modal/utils';\r\nimport { ModalButtonDirective } from './modal-button.directive';\r\nimport { fromEvent, Subscription } from 'rxjs';\r\nimport { debounceTime, delay } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'modal-container',\r\n    template: `\r\n    <div [attr.id]=\"modalID\"\r\n\r\n        [ngDraggable]=\"config.draggable\"\r\n        [ngResizable]=\"config.resizable\"\r\n        [rzMinWidth]=\"config.minWidth\"\r\n        [rzMaxWidth]=\"config.maxWidth\"\r\n        [rzMinHeight]=\"config.minHeight\"\r\n        [rzMaxHeight]=\"config.maxHeight\"\r\n        rzHandles=\"all\" [handle]=\"config.showHeader ? header:dragEl\"\r\n        (stopped)=\"dropdown($event)\"\r\n        (rzStop)=\"resizeStop($event)\"\r\n        [inBounds]=\"true\" [bounds]=\"boundsElement\" [rzContainment]=\"boundsElement\"\r\n        [class]=\"'modal-dialog' + (config.class ? ' ' + config.class : '')\" role=\"document\"\r\n        [style.width]=\"config.width + 'px'\" [style.height]=\"config.fitContent?'auto':(config.height + 'px')\"\r\n        style=\"position: absolute;top: 50%;left: 50%;\">\r\n        <div class=\"modal-content\" [ngClass]=\"{'modal-content--has-header':config.showHeader}\">\r\n            <div #header class=\"modal-header\" [style.display]=\"config.showHeader ? '': 'none'\">\r\n                <div class=\"modal-title\">\r\n                    <span *ngIf=\"config.iconCls\" [class]=\"config.iconCls\" style=\"margin-right: 8px\"></span>\r\n                    <span class=\"modal-title-label\">{{ config.title }}</span>\r\n                </div>\r\n                <div class=\"actions\">\r\n                    <ul>\r\n                        <li *ngIf=\"config.showMinButton\" class=\"f-btn-icon f-bare\">\r\n                            <span class=\"f-icon modal_minimize\"></span></li>\r\n                        <li *ngIf=\"config.showMaxButton\" (click)=\"changeDialogSize()\" class=\"f-btn-icon f-bare\">\r\n                            <span class=\"f-icon modal_maximize\" [class.modalrevert]=\"isMax\"></span>\r\n                        </li>\r\n                        <li *ngIf=\"config.showCloseButton\" (click)=\"close($event, true)\" class=\"f-btn-icon f-bare\">\r\n                             <span class=\"f-icon modal_close\"></span>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        <div #dragEl class=\"f-utils-absolute-all\" style=\"height:10px;z-index: 1;\" [style.display]=\"config.showHeader ? 'none': ''\"></div>\r\n            <div class=\"modal-body\" [class.f-utils-flex-column]=\"dialogType === 'iframe'\"   [f-area-response]=\"config.areaResponse\">\r\n                <perfect-scrollbar [config]=\"{}\" [disabled]=\"!config.enableScroll||config.fitContent\"  *ngIf=\"!dialogType || dialogType === 'default'\">\r\n                    <ng-content ></ng-content>\r\n                </perfect-scrollbar>\r\n                <iframe *ngIf=\"dialogType === 'iframe'\" class=\"f-utils-fill\" width=\"100%\" frameborder=\"0\" [src]=\"iframeSrc\"></iframe>\r\n            </div>\r\n\r\n            <div [style.textAlign]=\"config.buttonAlign\" class=\"modal-footer\" [ngStyle]=\"buildFooterStyles()\" *ngIf=\"config.showButtons && config.buttons\">\r\n                <ng-container [ngTemplateOutlet]=\"useButtonsTemplate() ? config.buttons : defaultButtonRef\"></ng-container>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <ng-template #defaultButtonRef>\r\n\r\n        <ng-container *ngFor=\"let btn of config.buttons; last as isLast\">\r\n            <button type=\"button\" modal-button  *ngIf=\"btn.display === undefined && btn.tipsEnable === undefined\"\r\n                [class]=\"btn.cls\"\r\n                (click)=\"btn.handle && btn.handle($event) \">\r\n                <span [class]=\"btn.iconCls\" *ngIf=\"btn.iconCls\"></span> {{ btn.text }}\r\n            </button>\r\n\r\n            <button type=\"button\" modal-button  *ngIf=\"btn.display !== undefined || btn.tipsEnable !== undefined\"\r\n                [class]=\"btn.cls\"\r\n                (click)=\"btn.handle && btn.handle($event) \" \r\n                [style.display]=\"(btn.display === true || btn.display === undefined) ? '' : 'none'\"\r\n                [farrisTooltip]=\"btn?.tipsEnable\" [placement]=\"'top'\" [delay]=\"500\" [content]=\"btn?.tipsText\">\r\n                <span [class]=\"btn.iconCls\" *ngIf=\"btn.iconCls\"></span> {{ btn.text }}\r\n            </button>\r\n\r\n        </ng-container>\r\n\r\n    </ng-template>\r\n  `,\r\n    host: {\r\n        class: 'modal farris-modal',\r\n        role: 'dialog',\r\n        tabindex: '-1',\r\n        '[attr.aria-modal]': 'true'\r\n    }\r\n})\r\nexport class ModalContainerComponent implements OnInit, OnDestroy, AfterViewInit {\r\n    config: ModalOptions;\r\n    isShown = false;\r\n    level: number;\r\n    isAnimated: boolean;\r\n    bsModalService: BsModalService;\r\n    dialogType: string;\r\n    iframeSrc: SafeResourceUrl;\r\n    @Input()\r\n    public set iframe(value: string) {\r\n        if (this.sanitizer) {\r\n            this.iframeSrc = this.sanitizer.bypassSecurityTrustResourceUrl(value);\r\n        }\r\n    }\r\n    private isModalHiding = false;\r\n    private originalWidth: number;  // è®°å½åå§çå®½åº¦\r\n    private originalHeight: number; // è®°å½åå§çé«åº¦\r\n\r\n    private prevWidth: number; // è®°å½ä¸æ¬¡çå®½åº¦\r\n    private prevHeight: number; // è®°å½ä¸æ¬¡çé«åº¦\r\n    isMax = false;\r\n\r\n    @ViewChild(AngularDraggableDirective) draggbar: AngularDraggableDirective;\r\n    @ViewChild('header') modalHeader: ElementRef;\r\n    boundsElement: HTMLElement;\r\n\r\n    @Output() closed = new EventEmitter();\r\n    @Output() opened = new EventEmitter();\r\n    @Output() resized = new EventEmitter();\r\n\r\n    @HostBinding('id') modalID = `MODALID_${Date.now().toPrecision()}`;\r\n\r\n    @ViewChildren(ModalButtonDirective) buttons: QueryList<ModalButtonDirective>;\r\n\r\n    dlgHeaderLineHeight: any;\r\n    private _windowResizeToMax = false;\r\n    private windowResize$: Subscription = null;\r\n    constructor(\r\n        options: ModalOptions,\r\n        protected el: ElementRef,\r\n        private _renderer: Renderer2,\r\n        private sanitizer: DomSanitizer\r\n    ) {\r\n        this.config = Object.assign({}, options);\r\n        if (!this.config.buttons) {\r\n            this.config.buttons = [\r\n                {\r\n                    text: 'åæ¶',\r\n                    cls: 'btn btn-light',\r\n                    iconCls: 'k-icon k-i-close',\r\n                    handle: () => {\r\n                        this.close();\r\n                    }\r\n                },\r\n                {\r\n                    text: 'ç¡®å®',\r\n                    cls: 'btn btn-primary',\r\n                    iconCls: 'k-icon k-i-check',\r\n                    handle: () => { alert('å¥½(ï½¡ï½¥âï½¥)ï¾ï¾å¨å!!'); }\r\n                }\r\n            ];\r\n        }\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.boundsElement = this.el.nativeElement;\r\n        if (this.config.fitContent) {\r\n            this._renderer.addClass(this.el.nativeElement, 'f-modal-fitContent');\r\n        }\r\n\r\n        if (this.isAnimated) {\r\n            this._renderer.addClass(this.el.nativeElement, CLASS_NAME.FADE);\r\n        }\r\n        // this.ngZone.runOutsideAngular(() => {\r\n        setTimeout(() => {\r\n            this.isShown = true;\r\n            this._renderer.addClass(\r\n                this.el.nativeElement,\r\n                isBs3() ? CLASS_NAME.IN : CLASS_NAME.SHOW\r\n            );\r\n            this._renderer.setStyle(this.el.nativeElement, 'display', 'block');\r\n            if (this.config.fitContent && this.el.nativeElement.className.indexOf('f-modal-fitContent-scroll') > -1) {\r\n                this.el.nativeElement.scrollTop = 0;\r\n            }\r\n\r\n            if (document && document.body) {\r\n                const modalLen = this.bsModalService.getModalsCount();\r\n                if (modalLen === 1) {\r\n                    this.bsModalService.checkScrollbar();\r\n                    this.bsModalService.setScrollbar();\r\n                }\r\n                if (!document.body.classList.contains(CLASS_NAME.OPEN)) {\r\n                    this._renderer.addClass(document.body, CLASS_NAME.OPEN);\r\n                }\r\n            }\r\n            this.opened.emit({ modal: this });\r\n        }, this.isAnimated ? TRANSITION_DURATIONS.BACKDROP : 0);\r\n        // });\r\n\r\n        if (this.el.nativeElement) {\r\n            this.el.nativeElement.focus();\r\n        }\r\n\r\n        this.dlgHeaderLineHeight = this.getDialogHeaderLineHeight() + 'px';\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        // Called after ngAfterContentInit when the component's view has been initialized. Applies to components only.\r\n        // Add 'implements AfterViewInit' to the class.\r\n        this._renderer.setStyle(this.el.nativeElement, 'display', 'block');\r\n        // å¦æåå®¹éåºå®½åº¦\r\n        if (this.config.fitContent) {\r\n            let initElRect = this.el.nativeElement.getBoundingClientRect();\r\n            let initBodySize = this.getContainerSize();\r\n            if (initElRect.height < initBodySize.height + 30) {\r\n                this._renderer.addClass(this.el.nativeElement, 'f-modal-fitContent-scroll');\r\n            }\r\n        }\r\n\r\n        this.originalHeight = this.config.height;\r\n        this.originalWidth = this.config.width;\r\n\r\n        this.windowResize$ = fromEvent(window, 'resize').pipe(\r\n            debounceTime(50)\r\n        ).subscribe((e: any) => {\r\n            const winWidth =  window.innerWidth -20;\r\n            const winHeight = window.innerHeight - 20;\r\n\r\n            if (this.config.width <= winWidth && this.config.height <= winHeight) {\r\n                if (this._windowResizeToMax) {\r\n                    this.revertDialog();\r\n                    this._windowResizeToMax = false;\r\n                } else {\r\n                    if (this.isMax) {    \r\n                        this.maxDialog(false);\r\n                    }\r\n                }\r\n            } else {\r\n                if (!this.isMax) {\r\n                    this._windowResizeToMax = true;\r\n                    this.maxDialog();\r\n                } else {\r\n                    this.maxDialog(false);\r\n                }\r\n            }\r\n\r\n            this.toCenter();\r\n            this.moveTo(0, 0);\r\n        });\r\n\r\n    }\r\n\r\n    private getDlgElement() {\r\n        return this.el.nativeElement.querySelector('.modal-dialog');\r\n    }\r\n\r\n    private getDialogHeaderLineHeight() {\r\n        if (this.config.showHeader) {\r\n            const modalHeaderStyles = window.getComputedStyle(this.modalHeader.nativeElement);\r\n            const paddingTop = parseInt(modalHeaderStyles.paddingTop.replace('px', ''), 10);\r\n            const paddingBottom = parseInt(modalHeaderStyles.paddingBottom.replace('px', ''), 10);\r\n            return this.config.dialogHeaderHeight - paddingTop - paddingBottom;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    // è·ååå®¹åºåçå°ºå¯¸\r\n    getContainerSize() {\r\n        const bodyTarget = this.el.nativeElement.querySelector('.modal-body');\r\n        const height = bodyTarget.offsetHeight;\r\n        const width = bodyTarget.offsetWidth;\r\n        return { width, height };\r\n    }\r\n\r\n    buildFooterStyles() {\r\n        let styles = {};\r\n\r\n        if (this.config.dialogFooterStyles) {\r\n            styles = Object.assign({}, styles, this.config.dialogFooterStyles);\r\n        }\r\n\r\n        return styles;\r\n    }\r\n\r\n    useButtonsTemplate() {\r\n        return this.config.buttons instanceof TemplateRef;\r\n    }\r\n\r\n    @HostListener('click', ['$event'])\r\n    onClick(event: MouseEvent) {\r\n        const tag = event.target as any;\r\n\r\n        // if (tag.localName === 'label') {\r\n        //     if (tag.className) {\r\n        //         const clsList = tag.className.split(' ');\r\n        //         if (\r\n        //             clsList.indexOf('k-radio-label') > -1 ||\r\n        //             clsList.indexOf('k-checkbox-label') > -1 ||\r\n        //             clsList.indexOf('custom-control-label') > -1\r\n        //         ) {\r\n        //             return;\r\n        //         }\r\n        //     }\r\n        // }\r\n\r\n        // if (tag.localName === 'input' && (tag.type === 'checkbox' || tag.type === 'radio' || tag.type === 'file')) {\r\n        //     return;\r\n        // }\r\n\r\n        if (this.config.ignoreBackdropClick || this.config.backdrop === 'static' || event.target !== this.el.nativeElement ) {\r\n            event.stopPropagation();\r\n            return;\r\n        }\r\n\r\n        this.bsModalService.setDismissReason(DISMISS_REASONS.BACKRDOP);\r\n        this.close();\r\n    }\r\n\r\n    @HostListener('window:keydown.esc', ['$event'])\r\n    onEsc(event: any): void {\r\n        if (!this.isShown) {\r\n            return;\r\n        }\r\n\r\n        if (event.keyCode === 27) {\r\n            event.preventDefault();\r\n        }\r\n\r\n        if (\r\n            this.config.keyboard &&\r\n            this.level === this.bsModalService.getModalsCount()\r\n        ) {\r\n            this.bsModalService.setDismissReason(DISMISS_REASONS.ESC);\r\n            this.close(event);\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.isShown) {\r\n            this.close();\r\n        }\r\n\r\n        if (this.windowResize$) {\r\n            this.windowResize$.unsubscribe();\r\n            this.windowResize$ = null;\r\n        }\r\n    }\r\n\r\n    close(e?: MouseEvent, isCloseButton = false): void {\r\n        if (e && e.stopPropagation) {\r\n            e.stopPropagation();\r\n        }\r\n\r\n        if (this.isModalHiding || !this.isShown) {\r\n            return;\r\n        }\r\n\r\n        this.config.beforeClose(this, { event: e }).subscribe(r => {\r\n            if (!r) {\r\n                return false;\r\n            }\r\n\r\n            this.isModalHiding = true;\r\n            this._renderer.removeClass(\r\n                this.el.nativeElement,\r\n                isBs3() ? CLASS_NAME.IN : CLASS_NAME.SHOW\r\n            );\r\n            setTimeout(() => {\r\n                this.isShown = false;\r\n                if (document &&\r\n                    document.body\r\n                ) {\r\n                    if (this.bsModalService.getModalsCount() === 1) {\r\n                        this._renderer.removeClass(document.body, CLASS_NAME.OPEN);\r\n                    }\r\n                }\r\n                this.bsModalService.hide(this.level);\r\n                this.isModalHiding = false;\r\n                if (this.config.closed) {\r\n                    this.config.closed(isCloseButton, { modalRef: this, event: e });\r\n                }\r\n                this.closed.emit(this.level);\r\n            }, this.isAnimated ? TRANSITION_DURATIONS.MODAL : 0);\r\n            // });\r\n        });\r\n    }\r\n\r\n    toCenter() {\r\n        const marginLeft = Number.parseInt('' + -this.config.width / 2);\r\n        const marginTop = Number.parseInt('' + -this.config.height / 2);\r\n\r\n        const dialogEl = this.el.nativeElement.querySelector('.modal-dialog');\r\n        const contentEl = this.el.nativeElement.querySelector('.modal-body');\r\n\r\n        // this._renderer.setStyle(dialogEl, 'margin-left', marginLeft);\r\n        // this._renderer.setStyle(dialogEl, 'margin-top', marginTop);\r\n\r\n        this._renderer.setStyle(dialogEl, 'left', `${window.innerWidth / 2 + marginLeft}px`);\r\n        this._renderer.setStyle(dialogEl, 'top',  `${window.innerHeight / 2 + marginTop}px`);\r\n\r\n        let contentHeight = this.config.height - 38;\r\n        if (this.config.showButtons) {\r\n            contentHeight = contentHeight - 50;\r\n        }\r\n        if (!this.config.fitContent) {\r\n            this._renderer.setStyle(\r\n                contentEl,\r\n                'height',\r\n                contentHeight + 'px'\r\n            );\r\n        }\r\n        this._renderer.setStyle(contentEl, 'overflow', 'hidden');\r\n        this._renderer.setStyle(dialogEl, 'transform', `translate3d(0px, 0px, 0px)`);\r\n\r\n        setTimeout(() => {\r\n            const container = this.getContainerSize();\r\n            const { width: containerWidth, height: containerHeight } = container;\r\n            this.resized.emit({ width: this.config.width, height: this.config.height,  containerWidth,  containerHeight });\r\n        });\r\n    }\r\n\r\n    moveTo(x: number, y: number) {\r\n        const dialogEl = this.el.nativeElement.querySelector('.modal-dialog');\r\n        this._renderer.setStyle(dialogEl, 'transform', `translate3d(${x}px, ${y}px, 0px)`);\r\n        // this._renderer.setStyle(dialogEl, 'top', '50%');\r\n        // this._renderer.setStyle(dialogEl, 'left', '50%');\r\n\r\n        // const marginLeft = Number.parseInt('' + -this.config.width / 2);\r\n        // const marginTop = Number.parseInt('' + -this.config.height / 2);\r\n        // this._renderer.setStyle(dialogEl, 'left', `${window.innerWidth / 2 + marginLeft}px`);\r\n        // this._renderer.setStyle(dialogEl, 'top',  `${window.innerHeight / 2 + marginTop}px`);\r\n\r\n\r\n        this.draggbar.position = { x, y };\r\n        this.draggbar.resetPosition();\r\n    }\r\n\r\n    maxDialog(rememberPrevSize = true) {\r\n        if (rememberPrevSize) {\r\n            this.prevWidth = this.config.width;\r\n            this.prevHeight = this.config.height;\r\n        }\r\n        // this.config.width = (document.scrollingElement?document.scrollingElement:document.documentElement)['clientWidth'] - 20;\r\n        // this.config.height = (document.scrollingElement?document.scrollingElement:document.documentElement)['clientHeight'] - 20;\r\n\r\n        this.config.width = window.innerWidth - 20;\r\n        this.config.height = window.innerHeight - 20;\r\n\r\n        this.config.draggable = false;\r\n        this.config.resizable = false;\r\n        const dialogEl = this.el.nativeElement.querySelector('.modal-dialog');\r\n        this._renderer.addClass(dialogEl, 'model-dialog-maximize');\r\n        this._renderer.setStyle(dialogEl, 'top', '50%');\r\n        this._renderer.setStyle(dialogEl, 'left', '50%');\r\n        this.isMax = true;\r\n        this.toCenter();\r\n        this.moveTo(0, 0);\r\n    }\r\n\r\n    resize(width: number, height: number) {\r\n        if (width) {\r\n            this.config.width = width;\r\n        }\r\n\r\n        if (height) {\r\n            this.config.height = height;\r\n        }\r\n\r\n        const dialogEl = this.el.nativeElement.querySelector('.modal-dialog');\r\n        this._renderer.removeClass(dialogEl, 'model-dialog-maximize');\r\n        this.toCenter();\r\n        this.draggbar.resetPosition();\r\n    }\r\n\r\n    dropdown(el: any) {\r\n        // const rect = el.getBoundingClientRect();\r\n        // this._renderer.removeStyle(el, 'margin-top');\r\n        // this._renderer.removeStyle(el, 'margin-left');\r\n        // this._renderer.setStyle(el, 'top', `${rect.top}px`);\r\n        // this._renderer.setStyle(el, 'left', `${rect.left}px`);\r\n\r\n        // this._renderer.removeStyle(el, 'transform');\r\n        // this._renderer.removeStyle(el, '-webkit-transform');\r\n        // this._renderer.removeStyle(el, '-ms-transform');\r\n        // this._renderer.removeStyle(el, '-moz-transform');\r\n        // this._renderer.removeStyle(el, '-o-transform');\r\n    }\r\n\r\n    revertDialog() {\r\n        this.isMax = false;\r\n\r\n        const ww = window.innerWidth - 20;\r\n        const wh = window.innerHeight - 20\r\n\r\n        this.config.width = this.prevWidth == ww ? this.originalWidth : this.prevWidth;\r\n        this.config.height = this.prevHeight == wh ? this.originalHeight : this.prevHeight;\r\n       \r\n        if (this.config.width > ww) {\r\n            this.config.width = ww;\r\n        }\r\n\r\n        if (this.config.height > wh) {\r\n            this.config.height = wh;\r\n        }\r\n\r\n\r\n        this.config.draggable = true;\r\n        this.config.resizable = true;\r\n        const dialogEl = this.el.nativeElement.querySelector('.modal-dialog');\r\n        this._renderer.removeClass(dialogEl, 'model-dialog-maximize');\r\n        this.toCenter();\r\n        this.draggbar.resetPosition();\r\n    }\r\n\r\n    changeDialogSize() {\r\n        if (this.isMax) {\r\n            this.revertDialog();\r\n        } else {\r\n            this.maxDialog();\r\n        }\r\n        this._windowResizeToMax = false;\r\n    }\r\n\r\n    resizeStop(opts: any) {\r\n        // console.log('resizeStop');\r\n        this.config.width = opts.size.width;\r\n        this.config.height = opts.size.height;\r\n        const container = this.getContainerSize();\r\n        const { width: containerWidth, height: containerHeight } = container;\r\n        this.resized.emit({ ...opts.size, ...{ containerWidth, containerHeight } });\r\n    }\r\n}\r\n","import {\r\n    ComponentRef, Injectable, TemplateRef,\r\n    EventEmitter, Renderer2, RendererFactory2, NgZone\r\n} from '@angular/core';\r\n\r\n\r\nimport { ModalBackdropComponent } from './modal-backdrop.component';\r\nimport { ModalContainerComponent } from './modal-container.component';\r\nimport {\r\n    CLASS_NAME,\r\n    modalConfigDefaults,\r\n    ModalOptions,\r\n    TRANSITION_DURATIONS\r\n} from './modal-options.class';\r\nimport { BsModalRef } from './bs-modal-ref.service';\r\nimport { Utils } from '@farris/ui-modal/utils';\r\nimport { ComponentLoaderFactory, ComponentLoader } from '@farris/ui-modal/component-loader';\r\n\r\n@Injectable()\r\nexport class BsModalService {\r\n    version = '0.0.6';\r\n    config: ModalOptions = modalConfigDefaults;\r\n\r\n    onShow: EventEmitter<any> = new EventEmitter();\r\n    onShown: EventEmitter<any> = new EventEmitter();\r\n    onHide: EventEmitter<any> = new EventEmitter();\r\n    onHidden: EventEmitter<any> = new EventEmitter();\r\n\r\n    protected isBodyOverflowing = false;\r\n    protected originalBodyPadding = 0;\r\n\r\n    protected scrollbarWidth = 0;\r\n\r\n    protected backdropRef: ComponentRef<ModalBackdropComponent>;\r\n    private _backdropLoader: ComponentLoader<ModalBackdropComponent>;\r\n    private modalsCount = 0;\r\n    private lastDismissReason = '';\r\n\r\n    private loaders: ComponentLoader<ModalContainerComponent>[] = [];\r\n\r\n    private _renderer: Renderer2;\r\n\r\n    private _documentMouseDownHandler = null;\r\n\r\n    constructor(rendererFactory: RendererFactory2, private clf: ComponentLoaderFactory, public ngZone: NgZone) {\r\n\r\n        this._renderer = rendererFactory.createRenderer(null, null);\r\n\r\n        this._backdropLoader = this.clf.createLoader<ModalBackdropComponent>(\r\n            null,\r\n            null,\r\n            this._renderer\r\n        );\r\n    }\r\n\r\n    private clearDocumentEvents() {\r\n        if (this._documentMouseDownHandler) {\r\n            document.body.removeEventListener('mousedown', this._documentMouseDownHandler);\r\n        }\r\n        this._documentMouseDownHandler = null;\r\n    }\r\n\r\n    /** Shows a modal */\r\n    show(content: string | TemplateRef<any> | any, config?: ModalOptions): BsModalRef {\r\n        this.modalsCount++;\r\n        this._createLoaders();\r\n        this.config = Object.assign({}, modalConfigDefaults, config);\r\n\r\n        this.checkDialogSize();\r\n\r\n        this._showBackdrop();\r\n        this.lastDismissReason = null;\r\n\r\n        const modal = this._showModal(content);\r\n        return modal;\r\n    }\r\n\r\n    hide(level: number) {\r\n        if (this.modalsCount === 1) {\r\n            this._hideBackdrop();\r\n            this.resetScrollbar();\r\n        }\r\n        this.modalsCount = this.modalsCount >= 1 ? this.modalsCount - 1 : 0;\r\n        // this.ngZone.runOutsideAngular(() => {\r\n        //     setTimeout(() => {\r\n            // this._hideModal(level);\r\n            // this.removeLoaders(level);\r\n\r\n        //     }, this.config.animated ? TRANSITION_DURATIONS.BACKDROP : 0);\r\n        // });\r\n        this._hideModal(level);\r\n        this.removeLoaders(level);\r\n\r\n        this.clearDocumentEvents();\r\n    }\r\n\r\n    _showBackdrop(): void {\r\n        const isBackdropEnabled =\r\n            this.config.backdrop || this.config.backdrop === 'static';\r\n        const isBackdropInDOM =\r\n            !this.backdropRef || !this.backdropRef.instance.isShown;\r\n\r\n        if (this.modalsCount === 1) {\r\n            this.removeBackdrop();\r\n\r\n            if (isBackdropEnabled && isBackdropInDOM) {\r\n                this._backdropLoader\r\n                    .attach(ModalBackdropComponent)\r\n                    .to('body')\r\n                    .show({ isAnimated: this.config.animated });\r\n                this.backdropRef = this._backdropLoader._componentRef;\r\n            }\r\n        }\r\n    }\r\n\r\n    _hideBackdrop(): void {\r\n        if (!this.backdropRef) {\r\n            return;\r\n        }\r\n        this.backdropRef.instance.isShown = false;\r\n        const duration = this.config.animated ? TRANSITION_DURATIONS.BACKDROP : 0;\r\n        this.ngZone.runOutsideAngular(() => {\r\n            setTimeout(() => this.removeBackdrop(), duration);\r\n        });\r\n    }\r\n\r\n    private updateZindex(_modal) {\r\n        const overlays = Array.from(document.body.querySelectorAll('body>div, body>farris-dialog>.farris-modal,body>.farris-modal')).filter(n => n).map(n => {\r\n            return window.getComputedStyle(n).zIndex;\r\n        }).filter(n => n && n!== 'auto').map(n => {\r\n            return parseInt(n, 10);\r\n        });\r\n        const maxZindex = Math.max(...overlays);\r\n        _modal.dialog.location.nativeElement.style.zIndex = maxZindex + 1;\r\n    }\r\n\r\n    _showModal(content: any): BsModalRef {\r\n        const modalLoader = this.loaders[this.loaders.length - 1];\r\n        const bsModalRef = new BsModalRef();\r\n\r\n        const modalContainerRef = modalLoader\r\n            .provide({ provide: ModalOptions, useValue: this.config })\r\n            .provide({ provide: BsModalRef, useValue: bsModalRef })\r\n            .attach(ModalContainerComponent)\r\n            .to('body')\r\n            .show({ content, isAnimated: this.config.animated,\r\n                initialState: this.config.initialState,\r\n                bsModalService: this\r\n            });\r\n        modalContainerRef.instance.level = this.getModalsCount();\r\n        modalContainerRef.instance.dialogType = this.config.dialogType;\r\n        modalContainerRef.instance.iframe = '';\r\n        if (this.config.dialogType === 'iframe') {\r\n            modalContainerRef.instance.iframe = content;\r\n        }\r\n        bsModalRef.close = (e) => {\r\n            modalContainerRef.instance.close(e);\r\n            this.clearDocumentEvents();\r\n        };\r\n\r\n\r\n        // å¦ææ¯æ¶æ¯ç±»åçï¼åºç°æ»å¨æ¡å°±ä¸ååºå¨ç»äº\r\n        if (!this.config.fitContent) {\r\n            modalContainerRef.instance.toCenter();\r\n            this.ngZone.runOutsideAngular(() => {\r\n                document.body.addEventListener('mousedown', this._documentMouseDownHandler = (e) => {this._onMouseDown(e)});\r\n            });\r\n        }\r\n        bsModalRef.content = modalLoader.getInnerComponent() || null;\r\n\r\n        bsModalRef.dialog = modalContainerRef;\r\n        bsModalRef.buttons = modalContainerRef.instance.buttons;\r\n\r\n        modalContainerRef.instance['modalRef'] = bsModalRef;\r\n\r\n        if (this.config.opened) {\r\n            this.config.opened({ instance: bsModalRef });\r\n        }\r\n\r\n        this.updateZindex(bsModalRef);\r\n\r\n        return bsModalRef;\r\n    }\r\n\r\n    _onMouseDown(e: any) {\r\n        if (e.target.localName === 'modal-container' || e.target.classList.contains('farris-modal')) {\r\n            this._renderer.addClass(e.target, 'animated');\r\n            this._renderer.addClass(e.target, 'shake');\r\n            this.ngZone.runOutsideAngular(() => {\r\n                setTimeout(() => {\r\n                    this._renderer.removeClass(e.target, 'animated');\r\n                    this._renderer.removeClass(e.target, 'shake');\r\n                }, 650);\r\n            });\r\n            return false;\r\n        }\r\n    }\r\n\r\n    _hideModal(level: number): void {\r\n        const modalLoader = this.loaders[level - 1];\r\n        if (modalLoader) {\r\n            modalLoader.hide();\r\n        }\r\n    }\r\n\r\n    getModalsCount(): number {\r\n        return this.modalsCount;\r\n    }\r\n\r\n    getCurrentModalContainer() {\r\n        return this.loaders[this.getModalsCount() - 1];\r\n    }\r\n\r\n    setDismissReason(reason: string) {\r\n        this.lastDismissReason = reason;\r\n    }\r\n\r\n    removeBackdrop(): void {\r\n        this._backdropLoader.hide();\r\n        this.backdropRef = null;\r\n    }\r\n\r\n    /** AFTER PR MERGE MODAL.COMPONENT WILL BE USING THIS CODE */\r\n    /** Scroll bar tricks */\r\n    /** @internal */\r\n    checkScrollbar(): void {\r\n        this.isBodyOverflowing = document.body.clientWidth < window.innerWidth;\r\n        this.scrollbarWidth = this.getScrollbarWidth();\r\n    }\r\n\r\n    setScrollbar(): void {\r\n        if (!document) {\r\n            return;\r\n        }\r\n\r\n        this.originalBodyPadding = parseInt(\r\n            window\r\n                .getComputedStyle(document.body)\r\n                .getPropertyValue('padding-right') || '0',\r\n            10\r\n        );\r\n\r\n        if (this.isBodyOverflowing) {\r\n            document.body.style.paddingRight = `${this.originalBodyPadding +\r\n                this.scrollbarWidth}px`;\r\n        }\r\n    }\r\n\r\n    private resetScrollbar(): void {\r\n        document.body.style.paddingRight = `${this.originalBodyPadding}px`;\r\n    }\r\n\r\n    // thx d.walsh\r\n    private getScrollbarWidth(): number {\r\n        const scrollDiv = this._renderer.createElement('div');\r\n        this._renderer.addClass(scrollDiv, CLASS_NAME.SCROLLBAR_MEASURER);\r\n        this._renderer.appendChild(document.body, scrollDiv);\r\n        const scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\r\n        this._renderer.removeChild(document.body, scrollDiv);\r\n\r\n        return scrollbarWidth;\r\n    }\r\n\r\n    private _createLoaders(): void {\r\n        const loader = this.clf.createLoader<ModalContainerComponent>(\r\n            null,\r\n            null,\r\n            this._renderer\r\n        );\r\n        this.copyEvent(loader.onBeforeShow, this.onShow);\r\n        this.copyEvent(loader.onShown, this.onShown);\r\n        this.copyEvent(loader.onBeforeHide, this.onHide);\r\n        this.copyEvent(loader.onHidden, this.onHidden);\r\n        this.loaders.push(loader);\r\n    }\r\n\r\n    private removeLoaders(level: number): void {\r\n        this.loaders.splice(level - 1, 1);\r\n        this.loaders.forEach(\r\n            (loader: ComponentLoader<ModalContainerComponent>, i: number) => {\r\n                loader.instance.level = i + 1;\r\n            }\r\n        );\r\n    }\r\n\r\n    private copyEvent(from: EventEmitter<any>, to: EventEmitter<any>) {\r\n        from.subscribe(() => {\r\n            to.emit(this.lastDismissReason);\r\n        });\r\n    }\r\n\r\n    private checkDialogSize() {\r\n        const newSize = Utils.checkDialogSize(this.config.width, this.config.height);\r\n        if (this.config.width !== newSize.width) {\r\n            this.config.width = newSize.width - 20;\r\n        }\r\n\r\n        if (this.config.height !== newSize.height) {\r\n            this.config.height = newSize.height - 20;\r\n        }\r\n    }\r\n}\r\n","export class ModalBackdropOptions {\r\n  animate = true;\r\n\r\n  constructor(options: ModalBackdropOptions) {\r\n    Object.assign(this, options);\r\n  }\r\n}\r\n","import { ChangeDetectorRef, Optional } from '@angular/core';\r\n/* tslint:disable:max-file-line-count */\r\n// todo: should we support enforce focus in?\r\n// todo: in original bs there are was a way to prevent modal from showing\r\n// todo: original modal had resize events\r\n\r\nimport {\r\n    ComponentRef, Directive, ElementRef, EventEmitter, HostListener, Input,\r\n    OnDestroy, OnInit, Output, Renderer2, ViewContainerRef, NgZone\r\n} from '@angular/core';\r\n\r\nimport { document, window, isBs3, Utils } from '@farris/ui-modal/utils';\r\n\r\nimport { ModalBackdropComponent } from './modal-backdrop.component';\r\nimport { CLASS_NAME, DISMISS_REASONS, modalConfigDefaults, ModalOptions } from './modal-options.class';\r\nimport { ComponentLoader, ComponentLoaderFactory } from '@farris/ui-modal/component-loader';\r\n\r\nconst TRANSITION_DURATION = 300;\r\nconst BACKDROP_TRANSITION_DURATION = 150;\r\n\r\n/** Mark any code with directive to show it's content in modal */\r\n@Directive({\r\n    selector: '[bsModal]',\r\n    exportAs: 'bs-modal'\r\n})\r\nexport class ModalDirective implements OnDestroy, OnInit {\r\n    /** allows to set modal configuration via element property */\r\n    @Input()\r\n    set config(conf: ModalOptions) {\r\n        this._config = this.getConfig(conf);\r\n    }\r\n\r\n    get config(): ModalOptions {\r\n        return this._config;\r\n    }\r\n\r\n    /** This event fires immediately when the `show` instance method is called. */\r\n    @Output() onShow: EventEmitter<ModalDirective> = new EventEmitter<ModalDirective>();\r\n    /** This event is fired when the modal has been made visible to the user\r\n     * (will wait for CSS transitions to complete)\r\n     */\r\n    @Output()\r\n    onShown: EventEmitter<ModalDirective> = new EventEmitter<ModalDirective>();\r\n    /** This event is fired immediately when\r\n     * the hide instance method has been called.\r\n     */\r\n    @Output() onHide: EventEmitter<ModalDirective> = new EventEmitter<ModalDirective>();\r\n    /** This event is fired when the modal has finished being\r\n     * hidden from the user (will wait for CSS transitions to complete).\r\n     */\r\n    @Output() onHidden: EventEmitter<ModalDirective> = new EventEmitter<ModalDirective>();\r\n\r\n    /** This field contains last dismiss reason.\r\n     * Possible values: `backdrop-click`, `esc` and `null`\r\n     * (if modal was closed by direct call of `.hide()`).\r\n     */\r\n    dismissReason: string;\r\n\r\n    get isShown(): boolean {\r\n        return this._isShown;\r\n    }\r\n\r\n    protected _config: ModalOptions;\r\n    protected _isShown = false;\r\n\r\n    protected isBodyOverflowing = false;\r\n    protected originalBodyPadding = 0;\r\n    protected scrollbarWidth = 0;\r\n\r\n    protected timerHideModal: any = 0;\r\n    protected timerRmBackDrop: any = 0;\r\n\r\n    // reference to backdrop component\r\n    backdrop: ComponentRef<ModalBackdropComponent>;\r\n    private _backdrop: ComponentLoader<ModalBackdropComponent>;\r\n\r\n    private isNested = false;\r\n\r\n    constructor(\r\n        private _element: ElementRef,\r\n        _viewContainerRef: ViewContainerRef,\r\n        private _renderer: Renderer2,\r\n        clf: ComponentLoaderFactory,\r\n        private ngZone: NgZone,\r\n        @Optional() public cd: ChangeDetectorRef) {\r\n        this._backdrop = clf.createLoader<ModalBackdropComponent>(\r\n            _element,\r\n            _viewContainerRef,\r\n            _renderer\r\n        );\r\n    }\r\n\r\n    @HostListener('click', ['$event'])\r\n    onClick(event: MouseEvent) {\r\n        const tag = event.target as any;\r\n\r\n        // if (tag.localName === 'label') {\r\n        //     if (tag.className) {\r\n        //         const clsList = tag.className.split(' ');\r\n        //         if (\r\n        //             clsList.indexOf('k-radio-label') > -1 ||\r\n        //             clsList.indexOf('k-checkbox-label') > -1 ||\r\n        //             clsList.indexOf('custom-control-label') > -1\r\n        //         ) {\r\n        //             return;\r\n        //         }\r\n        //     }\r\n        // }\r\n\r\n        // if (tag.localName === 'input' && (tag.type === 'checkbox' || tag.type === 'radio' || tag.type === 'file')) {\r\n        //     return;\r\n        // }\r\n\r\n        if (\r\n            this.config.ignoreBackdropClick ||\r\n            this.config.backdrop === 'static' ||\r\n            event.target !== this._element.nativeElement\r\n        ) {\r\n            event.stopPropagation();\r\n            return;\r\n        }\r\n        this.dismissReason = DISMISS_REASONS.BACKRDOP;\r\n        this.hide(event);\r\n    }\r\n\r\n    // todo: consider preventing default and stopping propagation\r\n    @HostListener('keydown.esc', ['$event'])\r\n    onEsc(event: any): void {\r\n        if (!this._isShown) {\r\n            return;\r\n        }\r\n\r\n        if (event.keyCode === 27) {\r\n            event.preventDefault();\r\n        }\r\n\r\n        if (this.config.keyboard) {\r\n            this.dismissReason = DISMISS_REASONS.ESC;\r\n            this.hide();\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): any {\r\n        this.config = void 0;\r\n        if (this._isShown) {\r\n            this._isShown = false;\r\n            this.hideModal();\r\n            this._backdrop.dispose();\r\n        }\r\n    }\r\n\r\n    ngOnInit(): any {\r\n        this._config = this._config || this.getConfig();\r\n        // this.ngZone.runOutsideAngular(() => {\r\n        setTimeout(() => {\r\n            if (this._config.show) {\r\n                this.show();\r\n            }\r\n        }, 0);\r\n        // });\r\n    }\r\n\r\n    /* Public methods */\r\n\r\n    /** Allows to manually toggle modal visibility */\r\n    toggle(): void {\r\n        return this._isShown ? this.hide() : this.show();\r\n    }\r\n\r\n    /** Allows to manually open modal */\r\n    show(): void {\r\n        this.dismissReason = null;\r\n        this.onShow.emit(this);\r\n        if (this._isShown) {\r\n            return;\r\n        }\r\n        clearTimeout(this.timerHideModal);\r\n        clearTimeout(this.timerRmBackDrop);\r\n\r\n        this._isShown = true;\r\n\r\n        this.checkScrollbar();\r\n        this.setScrollbar();\r\n\r\n        if (document && document.body) {\r\n            if (document.body.classList.contains(CLASS_NAME.OPEN)) {\r\n                this.isNested = true;\r\n            } else {\r\n                this._renderer.addClass(document.body, CLASS_NAME.OPEN);\r\n            }\r\n        }\r\n\r\n        this.showBackdrop(() => {\r\n            this.showElement();\r\n        });\r\n    }\r\n\r\n    /** Allows to manually close modal */\r\n    hide(event?: Event): void {\r\n        if (event) {\r\n            event.preventDefault();\r\n        }\r\n\r\n        this.onHide.emit(this);\r\n\r\n        // todo: add an option to prevent hiding\r\n        if (!this._isShown) {\r\n            return;\r\n        }\r\n\r\n        clearTimeout(this.timerHideModal);\r\n        clearTimeout(this.timerRmBackDrop);\r\n\r\n        this._isShown = false;\r\n        this._renderer.removeClass(this._element.nativeElement, CLASS_NAME.IN);\r\n        this._renderer.removeClass(this._element.nativeElement, CLASS_NAME.SHOW);\r\n        // if (!isBs3()) {\r\n        // }\r\n        // this._addClassIn = false;\r\n\r\n        if (this._config.animated) {\r\n            this.timerHideModal = setTimeout(\r\n                () => this.hideModal(),\r\n                TRANSITION_DURATION\r\n            );\r\n        } else {\r\n            this.hideModal();\r\n        }\r\n    }\r\n\r\n    /** Private methods @internal */\r\n    protected getConfig(config?: ModalOptions): ModalOptions {\r\n        return Object.assign({}, modalConfigDefaults, config);\r\n    }\r\n\r\n    /**\r\n     *  Show dialog\r\n     *  @internal\r\n     */\r\n    protected showElement(): void {\r\n        // todo: replace this with component loader usage\r\n        if (\r\n            !this._element.nativeElement.parentNode ||\r\n            this._element.nativeElement.parentNode.nodeType !== Node.ELEMENT_NODE\r\n        ) {\r\n            // don't move modals dom position\r\n            if (document && document.body) {\r\n                document.body.appendChild(this._element.nativeElement);\r\n            }\r\n        }\r\n\r\n        this._renderer.setAttribute(\r\n            this._element.nativeElement,\r\n            'aria-hidden',\r\n            'false'\r\n        );\r\n        this._renderer.setAttribute(\r\n            this._element.nativeElement,\r\n            'aria-modal',\r\n            'true'\r\n        );\r\n        this._renderer.setStyle(\r\n            this._element.nativeElement,\r\n            'display',\r\n            'block'\r\n        );\r\n        this._renderer.setProperty(\r\n            this._element.nativeElement,\r\n            'scrollTop',\r\n            0\r\n        );\r\n\r\n        if (this._config.animated) {\r\n            Utils.reflow(this._element.nativeElement);\r\n        }\r\n\r\n        // this._addClassIn = true;\r\n        this._renderer.addClass(this._element.nativeElement, CLASS_NAME.IN);\r\n        this._renderer.addClass(this._element.nativeElement, CLASS_NAME.SHOW);\r\n        // if (!isBs3()) {\r\n        // }\r\n\r\n        const transitionComplete = () => {\r\n            if (this._config.focus) {\r\n                this._element.nativeElement.focus();\r\n            }\r\n            this.onShown.emit(this);\r\n        };\r\n\r\n        if (this._config.animated) {\r\n            // this.ngZone.runOutsideAngular(() => {\r\n                setTimeout(transitionComplete, TRANSITION_DURATION);\r\n            // });\r\n        } else {\r\n            transitionComplete();\r\n        }\r\n    }\r\n\r\n    /** @internal */\r\n    protected hideModal(): void {\r\n        this._renderer.setAttribute(\r\n            this._element.nativeElement,\r\n            'aria-hidden',\r\n            'true'\r\n        );\r\n        this._renderer.setStyle(\r\n            this._element.nativeElement,\r\n            'display',\r\n            'none'\r\n        );\r\n        this.showBackdrop(() => {\r\n            if (!this.isNested) {\r\n                if (document && document.body) {\r\n                    this._renderer.removeClass(document.body, CLASS_NAME.OPEN);\r\n                }\r\n                this.resetScrollbar();\r\n            }\r\n            this.resetAdjustments();\r\n            this.focusOtherModal();\r\n            this.onHidden.emit(this);\r\n        });\r\n    }\r\n\r\n    // todo: original show was calling a callback when done, but we can use\r\n    // promise\r\n    /** @internal */\r\n    protected showBackdrop(callback?: Function): void {\r\n        if (\r\n            this._isShown &&\r\n            this.config.backdrop &&\r\n            (!this.backdrop || !this.backdrop.instance.isShown)\r\n        ) {\r\n            this.removeBackdrop();\r\n            this._backdrop\r\n                .attach(ModalBackdropComponent)\r\n                .to('body')\r\n                .show({ isAnimated: this._config.animated });\r\n            this.backdrop = this._backdrop._componentRef;\r\n\r\n            if (!callback) {\r\n                return;\r\n            }\r\n\r\n            if (!this._config.animated) {\r\n                callback();\r\n\r\n                return;\r\n            }\r\n            // this.ngZone.runOutsideAngular(() => {\r\n                setTimeout(callback, BACKDROP_TRANSITION_DURATION);\r\n            // })\r\n        } else if (!this._isShown && this.backdrop) {\r\n            this.backdrop.instance.isShown = false;\r\n\r\n            const callbackRemove = () => {\r\n                this.removeBackdrop();\r\n                if (callback) {\r\n                    callback();\r\n                }\r\n            };\r\n\r\n            if (this.backdrop.instance.isAnimated) {\r\n                // this.ngZone.runOutsideAngular(() => {\r\n                    this.timerRmBackDrop = setTimeout(\r\n                        callbackRemove,\r\n                        BACKDROP_TRANSITION_DURATION\r\n                    );\r\n                // });\r\n            } else {\r\n                callbackRemove();\r\n            }\r\n        } else if (callback) {\r\n            callback();\r\n        }\r\n    }\r\n\r\n    /** @internal */\r\n    protected removeBackdrop(): void {\r\n        this._backdrop.hide();\r\n    }\r\n\r\n    /** Events tricks */\r\n\r\n    // no need for it\r\n    // protected setEscapeEvent():void {\r\n    //   if (this._isShown && this._config.keyboard) {\r\n    //     $(this._element).on(Event.KEYDOWN_DISMISS, (event) => {\r\n    //       if (event.which === 27) {\r\n    //         this.hide()\r\n    //       }\r\n    //     })\r\n    //\r\n    //   } else if (!this._isShown) {\r\n    //     $(this._element).off(Event.KEYDOWN_DISMISS)\r\n    //   }\r\n    // }\r\n\r\n    // protected setResizeEvent():void {\r\n    // console.log(this.renderer.listenGlobal('', Event.RESIZE));\r\n    // if (this._isShown) {\r\n    //   $(window).on(Event.RESIZE, $.proxy(this._handleUpdate, this))\r\n    // } else {\r\n    //   $(window).off(Event.RESIZE)\r\n    // }\r\n    // }\r\n\r\n    protected focusOtherModal() {\r\n        if (this._element.nativeElement.parentElement == null) return;\r\n        const otherOpenedModals = this._element.nativeElement.parentElement.querySelectorAll('.in[bsModal]');\r\n        if (!otherOpenedModals.length) {\r\n            return;\r\n        }\r\n        otherOpenedModals[otherOpenedModals.length - 1].focus();\r\n    }\r\n\r\n    /** @internal */\r\n    protected resetAdjustments(): void {\r\n        this._renderer.setStyle(\r\n            this._element.nativeElement,\r\n            'paddingLeft',\r\n            ''\r\n        );\r\n        this._renderer.setStyle(\r\n            this._element.nativeElement,\r\n            'paddingRight',\r\n            ''\r\n        );\r\n    }\r\n\r\n    /** Scroll bar tricks */\r\n    /** @internal */\r\n    protected checkScrollbar(): void {\r\n        this.isBodyOverflowing = document.body.clientWidth < window.innerWidth;\r\n        this.scrollbarWidth = this.getScrollbarWidth();\r\n    }\r\n\r\n    protected setScrollbar(): void {\r\n        if (!document) {\r\n            return;\r\n        }\r\n\r\n        this.originalBodyPadding = parseInt(\r\n            window\r\n                .getComputedStyle(document.body)\r\n                .getPropertyValue('padding-right') || 0,\r\n            10\r\n        );\r\n\r\n        if (this.isBodyOverflowing) {\r\n            document.body.style.paddingRight = `${this.originalBodyPadding +\r\n                this.scrollbarWidth}px`;\r\n        }\r\n    }\r\n\r\n    protected resetScrollbar(): void {\r\n        document.body.style.paddingRight = this.originalBodyPadding + 'px';\r\n    }\r\n\r\n    // thx d.walsh\r\n    protected getScrollbarWidth(): number {\r\n        const scrollDiv = this._renderer.createElement('div');\r\n        this._renderer.addClass(scrollDiv, CLASS_NAME.SCROLLBAR_MEASURER);\r\n        this._renderer.appendChild(document.body, scrollDiv);\r\n        const scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\r\n        this._renderer.removeChild(document.body, scrollDiv);\r\n\r\n        return scrollbarWidth;\r\n    }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { PerfectScrollbarModule } from '@farris/ui-perfect-scrollbar';\r\nimport { AngularDraggableModule } from '@farris/ui-draggable';\r\n\r\nimport { ModalBackdropComponent } from './modal-backdrop.component';\r\nimport { ModalDirective } from './modal.directive';\r\nimport { ModalContainerComponent } from './modal-container.component';\r\nimport { BsModalService } from './bs-modal.service';\r\nimport { PositioningService } from '@farris/ui-modal/positioning';\r\nimport { ComponentLoaderFactory } from '@farris/ui-modal/component-loader';\r\nimport { ModalButtonDirective } from './modal-button.directive';\r\nimport{FAreaResponseModule} from '@farris/ui-area-response';\r\nimport { FarrisTooltipModule } from '@farris/ui-tooltip';\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        PerfectScrollbarModule,\r\n        AngularDraggableModule,\r\n        FAreaResponseModule,\r\n        FarrisTooltipModule\r\n    ],\r\n    declarations: [\r\n        ModalDirective,\r\n        ModalBackdropComponent,\r\n        ModalContainerComponent,\r\n        ModalButtonDirective\r\n    ],\r\n    exports: [\r\n        ModalBackdropComponent, ModalDirective\r\n    ],\r\n    entryComponents: [ModalBackdropComponent, ModalContainerComponent]\r\n})\r\nexport class ModalModule {\r\n    static forRoot(): ModuleWithProviders {\r\n        return {\r\n            ngModule: ModalModule,\r\n            providers: [\r\n                ComponentLoaderFactory,\r\n                BsModalService,\r\n                PositioningService\r\n            ]\r\n        };\r\n    }\r\n}\r\n"]}