/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*
 * @Author: 疯狂秀才(Lucas Huang)
 * @Date: 2018-12-04 10:43:42
 * @LastEditors: 疯狂秀才(Lucas Huang)
 * @LastEditTime: 2019-09-26 13:33:30
 * @Company: Inspur
 * @Version: v0.0.1
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { FarrisCommonModule } from '@farris/ui-common';
import { InputGroupModule } from '@farris/ui-input-group';
import { LayoutModule } from '@farris/ui-layout';
import { LocaleModule } from '@farris/ui-locale';
import { FarrisDialogModule } from '@farris/ui-dialog';
import { MessagerModule } from '@farris/ui-messager';
import { DataTableModule, DataTableComponent } from '@farris/ui-datatable';
import { TreeTableModule, TreeTableComponent } from '@farris/ui-treetable';
import { LoadingModule } from '@farris/ui-loading';
import { LookupGridComponent } from './lookup-grid.component';
import { LookupComponent } from './lookup.component';
import { LookupLeftComponent } from './lookup-left.component';
import { LookupTabsComponent } from './lookup-tabs.component';
import { LookupTipDirective } from './lookup-tip.directive';
import { NotifyModule } from '@farris/ui-notify';
import { FarrisContextMenuModule } from '@farris/ui-context-menu';
import { LookupQuickSelectPanelComponent } from './quick-select/quick-select-panel.component';
import { LookupQuickSelectDirective } from './quick-select/lookup-quick-select.directive';
import { LookupAdvancedLayoutComponent } from './advanced-layout/lookup-advanced-layout.component';
export class LookupModule {
}
LookupModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule,
                    FormsModule,
                    FarrisCommonModule.forRoot(),
                    FarrisDialogModule.forRoot(),
                    MessagerModule.forRoot(),
                    NotifyModule.forRoot(),
                    LoadingModule.forRoot({ delay: 1000 }),
                    InputGroupModule,
                    LayoutModule,
                    DataTableModule,
                    TreeTableModule,
                    FarrisContextMenuModule,
                    LocaleModule.forRoot()
                ],
                exports: [
                    LookupGridComponent, LookupComponent,
                    LookupAdvancedLayoutComponent
                ],
                declarations: [
                    LookupGridComponent,
                    LookupComponent,
                    LookupLeftComponent,
                    LookupTabsComponent,
                    LookupTipDirective,
                    LookupQuickSelectPanelComponent,
                    LookupQuickSelectDirective,
                    LookupAdvancedLayoutComponent
                ],
                providers: [],
                entryComponents: [DataTableComponent, TreeTableComponent, LookupLeftComponent, LookupTabsComponent, LookupQuickSelectPanelComponent]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9va3VwLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvdWktbG9va3VwLyIsInNvdXJjZXMiOlsibGliL2xvb2t1cC5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBUUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRTdDLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQzFELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNqRCxPQUFPLEVBQUUsWUFBWSxFQUFDLE1BQU0sbUJBQW1CLENBQUM7QUFDaEQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDdkQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxlQUFlLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUMzRSxPQUFPLEVBQUUsZUFBZSxFQUFFLGtCQUFrQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDM0UsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBRW5ELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQzlELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNyRCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUM5RCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUM5RCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUM1RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDakQsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDbEUsT0FBTyxFQUFFLCtCQUErQixFQUFFLE1BQU0sNkNBQTZDLENBQUM7QUFDOUYsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0sOENBQThDLENBQUM7QUFDMUYsT0FBTyxFQUFFLDZCQUE2QixFQUFFLE1BQU0sb0RBQW9ELENBQUM7QUFrQ25HLE1BQU0sT0FBTyxZQUFZOzs7WUFqQ3hCLFFBQVEsU0FBQztnQkFDTixPQUFPLEVBQUU7b0JBQ0wsWUFBWTtvQkFDWixXQUFXO29CQUNYLGtCQUFrQixDQUFDLE9BQU8sRUFBRTtvQkFDNUIsa0JBQWtCLENBQUMsT0FBTyxFQUFFO29CQUM1QixjQUFjLENBQUMsT0FBTyxFQUFFO29CQUN4QixZQUFZLENBQUMsT0FBTyxFQUFFO29CQUN0QixhQUFhLENBQUMsT0FBTyxDQUFDLEVBQUMsS0FBSyxFQUFFLElBQUksRUFBQyxDQUFDO29CQUNwQyxnQkFBZ0I7b0JBQ2hCLFlBQVk7b0JBQ1osZUFBZTtvQkFDZixlQUFlO29CQUNmLHVCQUF1QjtvQkFDdkIsWUFBWSxDQUFDLE9BQU8sRUFBRTtpQkFDekI7Z0JBQ0QsT0FBTyxFQUFFO29CQUNMLG1CQUFtQixFQUFFLGVBQWU7b0JBQ3BDLDZCQUE2QjtpQkFDaEM7Z0JBQ0QsWUFBWSxFQUFFO29CQUNWLG1CQUFtQjtvQkFDbkIsZUFBZTtvQkFDZixtQkFBbUI7b0JBQ25CLG1CQUFtQjtvQkFDbkIsa0JBQWtCO29CQUNsQiwrQkFBK0I7b0JBQy9CLDBCQUEwQjtvQkFDMUIsNkJBQTZCO2lCQUNoQztnQkFDRCxTQUFTLEVBQUUsRUFBRTtnQkFDYixlQUFlLEVBQUUsQ0FBQyxrQkFBa0IsRUFBRSxrQkFBa0IsRUFBRSxtQkFBbUIsRUFBRSxtQkFBbUIsRUFBRSwrQkFBK0IsQ0FBQzthQUN2SSIsInNvdXJjZXNDb250ZW50IjpbIi8qXHJcbiAqIEBBdXRob3I6IOeWr+eLguengOaJjShMdWNhcyBIdWFuZylcclxuICogQERhdGU6IDIwMTgtMTItMDQgMTA6NDM6NDJcclxuICogQExhc3RFZGl0b3JzOiDnlq/ni4Lnp4DmiY0oTHVjYXMgSHVhbmcpXHJcbiAqIEBMYXN0RWRpdFRpbWU6IDIwMTktMDktMjYgMTM6MzM6MzBcclxuICogQENvbXBhbnk6IEluc3B1clxyXG4gKiBAVmVyc2lvbjogdjAuMC4xXHJcbiAqL1xyXG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xyXG5pbXBvcnQgeyBGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcclxuXHJcbmltcG9ydCB7IEZhcnJpc0NvbW1vbk1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktY29tbW9uJztcclxuaW1wb3J0IHsgSW5wdXRHcm91cE1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktaW5wdXQtZ3JvdXAnO1xyXG5pbXBvcnQgeyBMYXlvdXRNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWxheW91dCc7XHJcbmltcG9ydCB7IExvY2FsZU1vZHVsZX0gZnJvbSAnQGZhcnJpcy91aS1sb2NhbGUnO1xyXG5pbXBvcnQgeyBGYXJyaXNEaWFsb2dNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWRpYWxvZyc7XHJcbmltcG9ydCB7IE1lc3NhZ2VyTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1tZXNzYWdlcic7XHJcbmltcG9ydCB7IERhdGFUYWJsZU1vZHVsZSwgRGF0YVRhYmxlQ29tcG9uZW50IH0gZnJvbSAnQGZhcnJpcy91aS1kYXRhdGFibGUnO1xyXG5pbXBvcnQgeyBUcmVlVGFibGVNb2R1bGUsIFRyZWVUYWJsZUNvbXBvbmVudCB9IGZyb20gJ0BmYXJyaXMvdWktdHJlZXRhYmxlJztcclxuaW1wb3J0IHsgTG9hZGluZ01vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktbG9hZGluZyc7XHJcblxyXG5pbXBvcnQgeyBMb29rdXBHcmlkQ29tcG9uZW50IH0gZnJvbSAnLi9sb29rdXAtZ3JpZC5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBMb29rdXBDb21wb25lbnQgfSBmcm9tICcuL2xvb2t1cC5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBMb29rdXBMZWZ0Q29tcG9uZW50IH0gZnJvbSAnLi9sb29rdXAtbGVmdC5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBMb29rdXBUYWJzQ29tcG9uZW50IH0gZnJvbSAnLi9sb29rdXAtdGFicy5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBMb29rdXBUaXBEaXJlY3RpdmUgfSBmcm9tICcuL2xvb2t1cC10aXAuZGlyZWN0aXZlJztcclxuaW1wb3J0IHsgTm90aWZ5TW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1ub3RpZnknO1xyXG5pbXBvcnQgeyBGYXJyaXNDb250ZXh0TWVudU1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktY29udGV4dC1tZW51JztcclxuaW1wb3J0IHsgTG9va3VwUXVpY2tTZWxlY3RQYW5lbENvbXBvbmVudCB9IGZyb20gJy4vcXVpY2stc2VsZWN0L3F1aWNrLXNlbGVjdC1wYW5lbC5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBMb29rdXBRdWlja1NlbGVjdERpcmVjdGl2ZSB9IGZyb20gJy4vcXVpY2stc2VsZWN0L2xvb2t1cC1xdWljay1zZWxlY3QuZGlyZWN0aXZlJztcclxuaW1wb3J0IHsgTG9va3VwQWR2YW5jZWRMYXlvdXRDb21wb25lbnQgfSBmcm9tICcuL2FkdmFuY2VkLWxheW91dC9sb29rdXAtYWR2YW5jZWQtbGF5b3V0LmNvbXBvbmVudCc7XHJcbkBOZ01vZHVsZSh7XHJcbiAgICBpbXBvcnRzOiBbXHJcbiAgICAgICAgQ29tbW9uTW9kdWxlLFxyXG4gICAgICAgIEZvcm1zTW9kdWxlLFxyXG4gICAgICAgIEZhcnJpc0NvbW1vbk1vZHVsZS5mb3JSb290KCksXHJcbiAgICAgICAgRmFycmlzRGlhbG9nTW9kdWxlLmZvclJvb3QoKSxcclxuICAgICAgICBNZXNzYWdlck1vZHVsZS5mb3JSb290KCksXHJcbiAgICAgICAgTm90aWZ5TW9kdWxlLmZvclJvb3QoKSxcclxuICAgICAgICBMb2FkaW5nTW9kdWxlLmZvclJvb3Qoe2RlbGF5OiAxMDAwfSksXHJcbiAgICAgICAgSW5wdXRHcm91cE1vZHVsZSxcclxuICAgICAgICBMYXlvdXRNb2R1bGUsXHJcbiAgICAgICAgRGF0YVRhYmxlTW9kdWxlLFxyXG4gICAgICAgIFRyZWVUYWJsZU1vZHVsZSxcclxuICAgICAgICBGYXJyaXNDb250ZXh0TWVudU1vZHVsZSxcclxuICAgICAgICBMb2NhbGVNb2R1bGUuZm9yUm9vdCgpXHJcbiAgICBdLFxyXG4gICAgZXhwb3J0czogW1xyXG4gICAgICAgIExvb2t1cEdyaWRDb21wb25lbnQsIExvb2t1cENvbXBvbmVudCxcclxuICAgICAgICBMb29rdXBBZHZhbmNlZExheW91dENvbXBvbmVudFxyXG4gICAgXSxcclxuICAgIGRlY2xhcmF0aW9uczogW1xyXG4gICAgICAgIExvb2t1cEdyaWRDb21wb25lbnQsXHJcbiAgICAgICAgTG9va3VwQ29tcG9uZW50LFxyXG4gICAgICAgIExvb2t1cExlZnRDb21wb25lbnQsXHJcbiAgICAgICAgTG9va3VwVGFic0NvbXBvbmVudCxcclxuICAgICAgICBMb29rdXBUaXBEaXJlY3RpdmUsXHJcbiAgICAgICAgTG9va3VwUXVpY2tTZWxlY3RQYW5lbENvbXBvbmVudCxcclxuICAgICAgICBMb29rdXBRdWlja1NlbGVjdERpcmVjdGl2ZSxcclxuICAgICAgICBMb29rdXBBZHZhbmNlZExheW91dENvbXBvbmVudFxyXG4gICAgXSxcclxuICAgIHByb3ZpZGVyczogW10sXHJcbiAgICBlbnRyeUNvbXBvbmVudHM6IFtEYXRhVGFibGVDb21wb25lbnQsIFRyZWVUYWJsZUNvbXBvbmVudCwgTG9va3VwTGVmdENvbXBvbmVudCwgTG9va3VwVGFic0NvbXBvbmVudCwgTG9va3VwUXVpY2tTZWxlY3RQYW5lbENvbXBvbmVudF1cclxufSlcclxuZXhwb3J0IGNsYXNzIExvb2t1cE1vZHVsZSB7fVxyXG4iXX0=