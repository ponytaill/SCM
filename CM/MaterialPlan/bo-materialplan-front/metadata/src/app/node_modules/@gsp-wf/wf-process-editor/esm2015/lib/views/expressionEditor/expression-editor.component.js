/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Output, Input, EventEmitter, ViewChild, TemplateRef } from '@angular/core';
import { ExpressionService, ExpressioneditorComponent, ComputeRuleEditorComponent } from '@gsp-svc/expression';
import { ProcessDesignerUIState } from '../../app/process-designer.uistate';
export class ExpressionEditorComponent {
    /**
     * @param {?} expr
     * @param {?} designerState
     */
    constructor(expr, designerState) {
        this.expr = expr;
        this.designerState = designerState;
        this.closeModal = new EventEmitter();
        this.submitModal = new EventEmitter();
        this.editorParams = {};
        this.contextEntities = [];
        this.schema = {};
        this.injectName = '';
        this.modalConfig = {
            title: '条件编辑',
            width: 1140,
            height: 520,
            showButtons: true
        };
        if (this.designerState.schemas[0]) {
            this.schema = this.designerState.schemas[0];
            if (this.designerState.schemas[0].entityTypes && this.designerState.schemas[0].entityTypes.length > 0) {
                this.injectName = this.designerState.schemas[0].entityTypes[0].name;
            }
        }
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.contextEntities = new Array();
        if (this.designerState.procInstContext.length > 0) {
            for (const variable of this.designerState.procInstContext) {
                this.contextEntities = this.contextEntities.concat([variable]);
            }
        }
        if (this.designerState.formalParameterContext.length > 0) {
            for (const variable of this.designerState.formalParameterContext) {
                if (!this.contextEntities.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                c => c.key === variable.key))) {
                    this.contextEntities = this.contextEntities.concat([variable]);
                }
            }
        }
        if (this.designerState.participantContext.length > 0) {
            for (const variable of this.designerState.participantContext) {
                if (!this.contextEntities.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                c => c.key === variable.key))) {
                    this.contextEntities = this.contextEntities.concat([variable]);
                }
            }
        }
        if (this.designerState.activityComponentContext.length > 0) {
            for (const variable of this.designerState.activityComponentContext) {
                if (!this.contextEntities.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                c => c.key === variable.key))) {
                    this.contextEntities = this.contextEntities.concat([variable]);
                }
            }
        }
        if (this.designerState.processVariableContext.length > 0) {
            for (const variable of this.designerState.processVariableContext) {
                if (!this.contextEntities.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                c => c.key === variable.key))) {
                    this.contextEntities = this.contextEntities.concat([variable]);
                }
            }
        }
    }
    /**
     * @return {?}
     */
    clickOK() {
        /** @type {?} */
        const result = this.compute.getExpr();
        this.value = this.convertToValue(result.text);
        /** @type {?} */
        const object = { value: this.value, parameters: null };
        this.submitModal.emit(object);
    }
    /**
     * 切换表达式类型（简易表达式<--->高级表达式）
     * @return {?}
     */
    changeType() {
        this.compute.changeType();
    }
    /**
     * @return {?}
     */
    clickCancel() {
        this.closeModal.emit();
    }
    /**
     * @private
     * @param {?} val
     * @return {?}
     */
    convertToValue(val) {
        if (val) {
            if (val.substring(9, val.length - 2)) {
                return val;
            }
            else {
                return '';
            }
        }
        else {
            return '';
        }
    }
}
ExpressionEditorComponent.decorators = [
    { type: Component, args: [{
                selector: 'app-expression-editor',
                template: "<app-compute-rule-editor #compute\r\n  [text]=\"value\"\r\n  [advancedContexts]=\"contextEntities\"\r\n  [injectName]=\"injectName\"\r\n  [injectSchemaName]=\"'Schema'\"\r\n  [injectNameInSchema]=\"injectName\"\r\n  [schema]=\"schema\"\r\n  [schemaName]=\"'Schema'\"   >\r\n</app-compute-rule-editor>\r\n\r\n<ng-template #iconSelectFooter>\r\n  <div class=\"btns\">\r\n    <button type=\"button\" class=\"btn btn-primary btn-sm mr-2\" (click)=\"clickOK()\">\u786E\u5B9A</button>\r\n    <button type=\"button\" class=\"btn btn-secondary btn-sm mr-2\" (click)=\"changeType()\">\u5207\u6362\u7C7B\u578B</button>\r\n    <button type=\"button\" class=\"btn btn-secondary btn-sm\" (click)=\"clickCancel()\">\u53D6\u6D88</button>\r\n  </div>\r\n</ng-template>\r\n",
                styles: [""]
            }] }
];
/** @nocollapse */
ExpressionEditorComponent.ctorParameters = () => [
    { type: ExpressionService },
    { type: ProcessDesignerUIState }
];
ExpressionEditorComponent.propDecorators = {
    closeModal: [{ type: Output }],
    submitModal: [{ type: Output }],
    value: [{ type: Input }],
    modalFooter: [{ type: ViewChild, args: ['iconSelectFooter',] }],
    editorParams: [{ type: Input }],
    editor: [{ type: ViewChild, args: [ExpressioneditorComponent,] }],
    compute: [{ type: ViewChild, args: ['compute',] }]
};
if (false) {
    /** @type {?} */
    ExpressionEditorComponent.prototype.closeModal;
    /** @type {?} */
    ExpressionEditorComponent.prototype.submitModal;
    /** @type {?} */
    ExpressionEditorComponent.prototype.value;
    /** @type {?} */
    ExpressionEditorComponent.prototype.modalFooter;
    /** @type {?} */
    ExpressionEditorComponent.prototype.editorParams;
    /** @type {?} */
    ExpressionEditorComponent.prototype.editor;
    /** @type {?} */
    ExpressionEditorComponent.prototype.compute;
    /** @type {?} */
    ExpressionEditorComponent.prototype.contextEntities;
    /** @type {?} */
    ExpressionEditorComponent.prototype.schema;
    /** @type {?} */
    ExpressionEditorComponent.prototype.injectName;
    /** @type {?} */
    ExpressionEditorComponent.prototype.modalConfig;
    /**
     * @type {?}
     * @private
     */
    ExpressionEditorComponent.prototype.expr;
    /** @type {?} */
    ExpressionEditorComponent.prototype.designerState;
}
export class ExpressionEditorConverter {
    constructor() { }
    /**
     * @param {?} data
     * @return {?}
     */
    convertTo(data) {
        if (data) {
            return data;
        }
        else {
            return '（未设置）';
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhwcmVzc2lvbi1lZGl0b3IuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzcC13Zi93Zi1wcm9jZXNzLWVkaXRvci8iLCJzb3VyY2VzIjpbImxpYi92aWV3cy9leHByZXNzaW9uRWRpdG9yL2V4cHJlc3Npb24tZWRpdG9yLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxNQUFNLEVBQUUsS0FBSyxFQUFFLFlBQVksRUFBRSxTQUFTLEVBQUUsV0FBVyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3ZHLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSx5QkFBeUIsRUFBRSwwQkFBMEIsRUFBZ0IsTUFBTSxxQkFBcUIsQ0FBQztBQUM3SCxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQVE1RSxNQUFNLE9BQU8seUJBQXlCOzs7OztJQXdCcEMsWUFDVSxJQUF1QixFQUN4QixhQUFxQztRQURwQyxTQUFJLEdBQUosSUFBSSxDQUFtQjtRQUN4QixrQkFBYSxHQUFiLGFBQWEsQ0FBd0I7UUF6QnBDLGVBQVUsR0FBRyxJQUFJLFlBQVksRUFBTyxDQUFDO1FBQ3JDLGdCQUFXLEdBQUcsSUFBSSxZQUFZLEVBQU8sQ0FBQztRQU12QyxpQkFBWSxHQUFRLEVBQUUsQ0FBQztRQUtoQyxvQkFBZSxHQUFHLEVBQUUsQ0FBQztRQUVyQixXQUFNLEdBQVEsRUFBRSxDQUFDO1FBQ2pCLGVBQVUsR0FBRyxFQUFFLENBQUM7UUFDaEIsZ0JBQVcsR0FBRztZQUNaLEtBQUssRUFBRSxNQUFNO1lBQ2IsS0FBSyxFQUFFLElBQUk7WUFDWCxNQUFNLEVBQUUsR0FBRztZQUNYLFdBQVcsRUFBRSxJQUFJO1NBQ2xCLENBQUM7UUFNQSxJQUFJLElBQUksQ0FBQyxhQUFhLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxFQUFFO1lBQ2pDLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLGFBQWEs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RUwsU0FBUyxTQUFDLHlCQUF5QjtzQkFDbkMsU0FBUyxTQUFDLFNBQVM7Ozs7SUFWcEIsK0NBQStDOztJQUMvQyxnREFBZ0Q7O0lBRWhELDBDQUF1Qjs7SUFFdkIsZ0RBQTZEOztJQUU3RCxpREFBZ0M7O0lBRWhDLDJDQUF3RTs7SUFDeEUsNENBQTBEOztJQUUxRCxvREFBcUI7O0lBRXJCLDJDQUFpQjs7SUFDakIsK0NBQWdCOztJQUNoQixnREFLRTs7Ozs7SUFHQSx5Q0FBK0I7O0lBQy9CLGtEQUE0Qzs7QUE2RWhELE1BQU0sT0FBTyx5QkFBeUI7SUFDcEMsZ0JBQWdCLENBQUM7Ozs7O0lBRWpCLFNBQVMsQ0FBQyxJQUFTO1FBQ2pCLElBQUksSUFBSSxFQUFFO1lBQ1IsT0FBTyxJQUFJLENBQUM7U0FDYjthQUFNO1lBQ0wsT0FBTyxPQUFPLENBQUM7U0FDaEI7SUFDSCxDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgT3V0cHV0LCBJbnB1dCwgRXZlbnRFbWl0dGVyLCBWaWV3Q2hpbGQsIFRlbXBsYXRlUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEV4cHJlc3Npb25TZXJ2aWNlLCBFeHByZXNzaW9uZWRpdG9yQ29tcG9uZW50LCBDb21wdXRlUnVsZUVkaXRvckNvbXBvbmVudCwgRXhwckVkaXRNb2RlIH0gZnJvbSAnQGdzcC1zdmMvZXhwcmVzc2lvbic7XHJcbmltcG9ydCB7IFByb2Nlc3NEZXNpZ25lclVJU3RhdGUgfSBmcm9tICcuLi8uLi9hcHAvcHJvY2Vzcy1kZXNpZ25lci51aXN0YXRlJztcclxuaW1wb3J0IHsgVHlwZUNvbnZlcnRlciB9IGZyb20gJ0BmYXJyaXMvdWktcHJvcGVydHktcGFuZWwnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhcHAtZXhwcmVzc2lvbi1lZGl0b3InLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9leHByZXNzaW9uLWVkaXRvci5jb21wb25lbnQuaHRtbCcsXHJcbiAgc3R5bGVVcmxzOiBbJy4vZXhwcmVzc2lvbi1lZGl0b3IuY29tcG9uZW50LmNzcyddLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgRXhwcmVzc2lvbkVkaXRvckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcbiAgQE91dHB1dCgpIGNsb3NlTW9kYWwgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcclxuICBAT3V0cHV0KCkgc3VibWl0TW9kYWwgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcclxuXHJcbiAgQElucHV0KCkgdmFsdWU6IHN0cmluZztcclxuXHJcbiAgQFZpZXdDaGlsZCgnaWNvblNlbGVjdEZvb3RlcicpIG1vZGFsRm9vdGVyOiBUZW1wbGF0ZVJlZjxhbnk+O1xyXG5cclxuICBASW5wdXQoKSBlZGl0b3JQYXJhbXM6IGFueSA9IHt9O1xyXG5cclxuICBAVmlld0NoaWxkKEV4cHJlc3Npb25lZGl0b3JDb21wb25lbnQpIGVkaXRvcjogRXhwcmVzc2lvbmVkaXRvckNvbXBvbmVudDtcclxuICBAVmlld0NoaWxkKCdjb21wdXRlJykgY29tcHV0ZTogQ29tcHV0ZVJ1bGVFZGl0b3JDb21wb25lbnQ7XHJcblxyXG4gIGNvbnRleHRFbnRpdGllcyA9IFtdO1xyXG5cclxuICBzY2hlbWE6IGFueSA9IHt9O1xyXG4gIGluamVjdE5hbWUgPSAnJztcclxuICBtb2RhbENvbmZpZyA9IHtcclxuICAgIHRpdGxlOiAn5p2h5Lu257yW6L6RJyxcclxuICAgIHdpZHRoOiAxMTQwLFxyXG4gICAgaGVpZ2h0OiA1MjAsXHJcbiAgICBzaG93QnV0dG9uczogdHJ1ZVxyXG4gIH07XHJcblxyXG4gIGNvbnN0cnVjdG9yKFxyXG4gICAgcHJpdmF0ZSBleHByOiBFeHByZXNzaW9uU2VydmljZSxcclxuICAgIHB1YmxpYyBkZXNpZ25lclN0YXRlOiBQcm9jZXNzRGVzaWduZXJVSVN0YXRlXHJcbiAgKSB7XHJcbiAgICBpZiAodGhpcy5kZXNpZ25lclN0YXRlLnNjaGVtYXNbMF0pIHtcclxuICAgICAgdGhpcy5zY2hlbWEgPSB0aGlzLmRlc2lnbmVyU3RhdGUuc2NoZW1hc1swXTtcclxuICAgICAgaWYgKHRoaXMuZGVzaWduZXJTdGF0ZS5zY2hlbWFzWzBdLmVudGl0eVR5cGVzICYmIHRoaXMuZGVzaWduZXJTdGF0ZS5zY2hlbWFzWzBdLmVudGl0eVR5cGVzLmxlbmd0aCA+IDApIHtcclxuICAgICAgICB0aGlzLmluamVjdE5hbWUgPSB0aGlzLmRlc2lnbmVyU3RhdGUuc2NoZW1hc1swXS5lbnRpdHlUeXBlc1swXS5uYW1lO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIHRoaXMuY29udGV4dEVudGl0aWVzID0gbmV3IEFycmF5KCk7XHJcbiAgICBpZiAodGhpcy5kZXNpZ25lclN0YXRlLnByb2NJbnN0Q29udGV4dC5sZW5ndGggPiAwKSB7XHJcbiAgICAgIGZvciAoY29uc3QgdmFyaWFibGUgb2YgdGhpcy5kZXNpZ25lclN0YXRlLnByb2NJbnN0Q29udGV4dCkge1xyXG4gICAgICAgIHRoaXMuY29udGV4dEVudGl0aWVzID0gdGhpcy5jb250ZXh0RW50aXRpZXMuY29uY2F0KFt2YXJpYWJsZV0pO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICBpZiAodGhpcy5kZXNpZ25lclN0YXRlLmZvcm1hbFBhcmFtZXRlckNvbnRleHQubGVuZ3RoID4gMCkge1xyXG4gICAgICBmb3IgKGNvbnN0IHZhcmlhYmxlIG9mIHRoaXMuZGVzaWduZXJTdGF0ZS5mb3JtYWxQYXJhbWV0ZXJDb250ZXh0KSB7XHJcbiAgICAgICAgaWYgKCF0aGlzLmNvbnRleHRFbnRpdGllcy5zb21lKGMgPT4gYy5rZXkgPT09IHZhcmlhYmxlLmtleSkpIHtcclxuICAgICAgICAgIHRoaXMuY29udGV4dEVudGl0aWVzID0gdGhpcy5jb250ZXh0RW50aXRpZXMuY29uY2F0KFt2YXJpYWJsZV0pO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgaWYgKHRoaXMuZGVzaWduZXJTdGF0ZS5wYXJ0aWNpcGFudENvbnRleHQubGVuZ3RoID4gMCkge1xyXG4gICAgICBmb3IgKGNvbnN0IHZhcmlhYmxlIG9mIHRoaXMuZGVzaWduZXJTdGF0ZS5wYXJ0aWNpcGFudENvbnRleHQpIHtcclxuICAgICAgICBpZiAoIXRoaXMuY29udGV4dEVudGl0aWVzLnNvbWUoYyA9PiBjLmtleSA9PT0gdmFyaWFibGUua2V5KSkge1xyXG4gICAgICAgICAgdGhpcy5jb250ZXh0RW50aXRpZXMgPSB0aGlzLmNvbnRleHRFbnRpdGllcy5jb25jYXQoW3ZhcmlhYmxlXSk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICBpZiAodGhpcy5kZXNpZ25lclN0YXRlLmFjdGl2aXR5Q29tcG9uZW50Q29udGV4dC5sZW5ndGggPiAwKSB7XHJcbiAgICAgIGZvciAoY29uc3QgdmFyaWFibGUgb2YgdGhpcy5kZXNpZ25lclN0YXRlLmFjdGl2aXR5Q29tcG9uZW50Q29udGV4dCkge1xyXG4gICAgICAgIGlmICghdGhpcy5jb250ZXh0RW50aXRpZXMuc29tZShjID0+IGMua2V5ID09PSB2YXJpYWJsZS5rZXkpKSB7XHJcbiAgICAgICAgICB0aGlzLmNvbnRleHRFbnRpdGllcyA9IHRoaXMuY29udGV4dEVudGl0aWVzLmNvbmNhdChbdmFyaWFibGVdKTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIGlmICh0aGlzLmRlc2lnbmVyU3RhdGUucHJvY2Vzc1ZhcmlhYmxlQ29udGV4dC5sZW5ndGggPiAwKSB7XHJcbiAgICAgIGZvciAoY29uc3QgdmFyaWFibGUgb2YgdGhpcy5kZXNpZ25lclN0YXRlLnByb2Nlc3NWYXJpYWJsZUNvbnRleHQpIHtcclxuICAgICAgICBpZiAoIXRoaXMuY29udGV4dEVudGl0aWVzLnNvbWUoYyA9PiBjLmtleSA9PT0gdmFyaWFibGUua2V5KSkge1xyXG4gICAgICAgICAgdGhpcy5jb250ZXh0RW50aXRpZXMgPSB0aGlzLmNvbnRleHRFbnRpdGllcy5jb25jYXQoW3ZhcmlhYmxlXSk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBjbGlja09LKCkge1xyXG4gICAgY29uc3QgcmVzdWx0ID0gdGhpcy5jb21wdXRlLmdldEV4cHIoKTtcclxuICAgIHRoaXMudmFsdWUgPSB0aGlzLmNvbnZlcnRUb1ZhbHVlKHJlc3VsdC50ZXh0KTtcclxuICAgIGNvbnN0IG9iamVjdCA9IHsgdmFsdWU6IHRoaXMudmFsdWUsIHBhcmFtZXRlcnM6IG51bGwgfTtcclxuICAgIHRoaXMuc3VibWl0TW9kYWwuZW1pdChvYmplY3QpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog5YiH5o2i6KGo6L6+5byP57G75Z6L77yI566A5piT6KGo6L6+5byPPC0tLT7pq5jnuqfooajovr7lvI/vvIlcclxuICAgKi9cclxuICBjaGFuZ2VUeXBlKCkge1xyXG4gICAgdGhpcy5jb21wdXRlLmNoYW5nZVR5cGUoKTtcclxuICB9XHJcblxyXG4gIGNsaWNrQ2FuY2VsKCkge1xyXG4gICAgdGhpcy5jbG9zZU1vZGFsLmVtaXQoKTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgY29udmVydFRvVmFsdWUodmFsOiBzdHJpbmcpOiBzdHJpbmcge1xyXG4gICAgaWYgKHZhbCkge1xyXG4gICAgICBpZiAodmFsLnN1YnN0cmluZyg5LCB2YWwubGVuZ3RoIC0gMikpIHtcclxuICAgICAgICByZXR1cm4gdmFsO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHJldHVybiAnJztcclxuICAgICAgfVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcmV0dXJuICcnO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5leHBvcnQgY2xhc3MgRXhwcmVzc2lvbkVkaXRvckNvbnZlcnRlciBpbXBsZW1lbnRzIFR5cGVDb252ZXJ0ZXIge1xyXG4gIGNvbnN0cnVjdG9yKCkgeyB9XHJcblxyXG4gIGNvbnZlcnRUbyhkYXRhOiBhbnkpOiBzdHJpbmcge1xyXG4gICAgaWYgKGRhdGEpIHtcclxuICAgICAgcmV0dXJuIGRhdGE7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICByZXR1cm4gJ++8iOacquiuvue9ru+8iSc7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdfQ==