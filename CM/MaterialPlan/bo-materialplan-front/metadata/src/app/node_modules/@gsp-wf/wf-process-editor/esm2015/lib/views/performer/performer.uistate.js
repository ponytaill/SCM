/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
export class PerformerUIState {
    constructor() {
        this.performersList = [];
        this.typeCollection = [
            { text: '用户', value: 'wf.UserParticipant' },
            { text: '岗位', value: 'wf.PositionParticipant' },
            { text: '构件参与者', value: 'wf.ComponentParticipant' },
            { text: '汇报关系', value: 'wf.ReportingLineParticipant' },
            { text: '矩阵', value: 'wf.MatrixParticipant' }
        ];
        this.performerInfo = { performers: [], components: [], reportingLines: [], matrixParticipants: [], options: null };
    }
}
PerformerUIState.decorators = [
    { type: Injectable }
];
if (false) {
    /** @type {?} */
    PerformerUIState.prototype.performersList;
    /** @type {?} */
    PerformerUIState.prototype.curPerformer;
    /** @type {?} */
    PerformerUIState.prototype.typeCollection;
    /** @type {?} */
    PerformerUIState.prototype.performerInfo;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGVyZm9ybWVyLnVpc3RhdGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NwLXdmL3dmLXByb2Nlc3MtZWRpdG9yLyIsInNvdXJjZXMiOlsibGliL3ZpZXdzL3BlcmZvcm1lci9wZXJmb3JtZXIudWlzdGF0ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQVEzQyxNQUFNLE9BQU8sZ0JBQWdCO0lBRDdCO1FBRUksbUJBQWMsR0FBMkIsRUFBRSxDQUFDO1FBRTVDLG1CQUFjLEdBQUc7WUFDYixFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLG9CQUFvQixFQUFFO1lBQzNDLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsd0JBQXdCLEVBQUU7WUFDL0MsRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBRSx5QkFBeUIsRUFBRTtZQUNuRCxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLDZCQUE2QixFQUFDO1lBQ3JELEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsc0JBQXNCLEVBQUM7U0FDL0MsQ0FBQztRQUVGLGtCQUFhLEdBQWtCLEVBQUUsVUFBVSxFQUFFLEVBQUUsRUFBRSxVQUFVLEVBQUUsRUFBRSxFQUFFLGNBQWMsRUFBRSxFQUFFLEVBQUUsa0JBQWtCLEVBQUUsRUFBRSxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsQ0FBQztJQUNqSSxDQUFDOzs7WUFiQSxVQUFVOzs7O0lBRVAsMENBQTRDOztJQUM1Qyx3Q0FBa0I7O0lBQ2xCLDBDQU1FOztJQUVGLHlDQUE2SCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgUGVyZm9ybWVyRW50aXR5IH0gZnJvbSAnLi9lbnRpdGllcy9wZXJmb3JtZXIuZW50aXR5JztcclxuaW1wb3J0IHsgQml6Q29tcG9uZW50RW50aXR5IH0gZnJvbSAnLi4vLi4vZG9tYWluL2VudGl0aWVzL2Jpei1jb21wb25lbnQuZW50aXR5JztcclxuaW1wb3J0IHsgUmVwb3J0aW5nTGluZURhdGFFbnRpdHkgfSBmcm9tICcuL3ZpZXdzL3JlcG9ydGluZy1saW5lL3JlcG9ydGluZy1saW5lLWRhdGEuZW50aXR5JztcclxuaW1wb3J0IHsgUGVyZm9ybWVySW5mbyB9IGZyb20gJy4vZW50aXRpZXMvcGVyZm9ybWVyLWluZm8uZW50aXR5JztcclxuaW1wb3J0IHsgUGVyZm9ybWVyRGVzY3JpcHRpb24gfSBmcm9tICcuL2VudGl0aWVzL3BlcmZvcm1lci1kZXNjcmlwdGlvbic7XHJcblxyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBQZXJmb3JtZXJVSVN0YXRlIHtcclxuICAgIHBlcmZvcm1lcnNMaXN0OiBQZXJmb3JtZXJEZXNjcmlwdGlvbltdID0gW107XHJcbiAgICBjdXJQZXJmb3JtZXI6IGFueTtcclxuICAgIHR5cGVDb2xsZWN0aW9uID0gW1xyXG4gICAgICAgIHsgdGV4dDogJ+eUqOaItycsIHZhbHVlOiAnd2YuVXNlclBhcnRpY2lwYW50JyB9LFxyXG4gICAgICAgIHsgdGV4dDogJ+Wyl+S9jScsIHZhbHVlOiAnd2YuUG9zaXRpb25QYXJ0aWNpcGFudCcgfSxcclxuICAgICAgICB7IHRleHQ6ICfmnoTku7blj4LkuI7ogIUnLCB2YWx1ZTogJ3dmLkNvbXBvbmVudFBhcnRpY2lwYW50JyB9LFxyXG4gICAgICAgIHsgdGV4dDogJ+axh+aKpeWFs+ezuycsIHZhbHVlOiAnd2YuUmVwb3J0aW5nTGluZVBhcnRpY2lwYW50J30sXHJcbiAgICAgICAgeyB0ZXh0OiAn55+p6Zi1JywgdmFsdWU6ICd3Zi5NYXRyaXhQYXJ0aWNpcGFudCd9XHJcbiAgICBdO1xyXG5cclxuICAgIHBlcmZvcm1lckluZm86IFBlcmZvcm1lckluZm8gPSB7IHBlcmZvcm1lcnM6IFtdLCBjb21wb25lbnRzOiBbXSwgcmVwb3J0aW5nTGluZXM6IFtdLCBtYXRyaXhQYXJ0aWNpcGFudHM6IFtdLCBvcHRpb25zOiBudWxsIH07XHJcbn1cclxuIl19