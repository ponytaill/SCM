/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, HostBinding, Output, EventEmitter, Input, ViewChild, TemplateRef } from '@angular/core';
import { FormBuilder } from '@angular/forms';
import { SignRuleEntity } from './entites/sign-rule.entity';
import { DialogComponent } from '@farris/ui-dialog';
import { ExprEditMode, ExpressionService } from '@gsp-svc/expression';
import { MessagerService } from '@farris/ui-messager';
import { ProcessDesignerUIState } from '../../app/process-designer.uistate';
import { DatagridComponent } from '@farris/ui-datagrid';
import { ProcessDeUtil } from '../../domain/process-de-util';
import { EditorTypes } from '@farris/ui-datagrid-editors';
import { of } from 'rxjs';
export class SignRuleComponent {
    /**
     * @param {?} formBuilder
     * @param {?} message
     * @param {?} exprService
     * @param {?} designerUIState
     */
    constructor(formBuilder, message, exprService, designerUIState) {
        this.formBuilder = formBuilder;
        this.message = message;
        this.exprService = exprService;
        this.designerUIState = designerUIState;
        this.cls = 'farris-main-area flex-column';
        this.closeModal = new EventEmitter();
        this.submitModal = new EventEmitter();
        this.editorParams = {};
        this.modalConfig = {
            title: '会签规则',
            width: 800,
            height: 520,
            showButtons: true
        };
        this.data = [];
        this.calculationMethods = [
            { text: '按数量', value: 'byNumber' },
            { text: '按比例(%)', value: 'byProportion' },
            { text: '自定义条件', value: 'null' },
        ];
        this.counterSignVariables = [];
        /**
         * **** 审批项帮助参数 ********************************************************
         */
        this.approvalCols = [{ title: '编号', field: 'value', width: 80 },
            { title: '名称', field: 'text', width: 90 }];
        this.approvalItems = [];
        /**
         * ********************************
         */
        this.columns = [
            { field: 'conclusionName', width: 25, title: '结论名称' },
            { field: 'conclusionValue', width: 25, title: '结论值' },
            { field: 'calculateType', width: 40, title: '计算方式',
                formatter: { type: 'enum', options: { valueField: 'value', textField: 'text', data: this.calculationMethods } },
                editor: { type: EditorTypes.COMBOLIST, options: { valueField: 'value', textField: 'text', data: this.calculationMethods, idField: 'value', panelHeight: 'auto' } }
            },
            { field: 'conditionValue', width: 25, title: '条件值',
                editor: { type: EditorTypes.NUMBERBOX, options: {} },
                formatter: { type: 'number', options: { precision: 0, min: 0 } }
            },
            { field: 'waitAllVotes', width: 35, title: '等待全员办结',
                editor: { type: EditorTypes.SWITCH, options: {} },
                formatter: { type: 'boolean', options: { trueText: '是', falseText: '否' } }
            },
            { field: 'completionCondition', width: 50, title: '自定义条件',
                editor: {
                    type: 'input-group',
                    options: {
                        groupText: '<i class="f-icon f-icon-lookup"></i>',
                        editable: false,
                        clickHandle: (/**
                         * @param {?} e
                         * @return {?}
                         */
                        (e) => {
                            e.formControl.setValue(e.instance.value ? e.instance.value : '');
                            this.editConditon(e);
                        }),
                        clear: (/**
                         * @param {?} e
                         * @return {?}
                         */
                        (e) => {
                            console.log('clear', e);
                        })
                    }
                }
            }
        ];
        /**
         * 结束编辑前事件
         */
        this.afterEdit = (/**
         * @param {?} rowIndex
         * @param {?} rowData
         * @param {?=} column
         * @return {?}
         */
        (rowIndex, rowData, column) => {
            this.preValue = JSON.parse(JSON.stringify(rowData));
            return of(true);
        });
    }
    /**
     * @param {?} rules
     * @return {?}
     */
    set value(rules) {
        if (rules && rules.length > 0) {
            for (const rule of rules) {
                /** @type {?} */
                const val = new SignRuleEntity();
                val.id = ProcessDeUtil.GenerateElementId();
                val.conclusionValue = rule.ConclusionValue;
                val.conclusionName = rule.ConclusionName;
                val.calculateType = rule.CalculateType ? rule.CalculateType : 'null';
                val.conditionValue = rule.ConditionValue ? rule.ConditionValue : 0;
                val.waitAllVotes = rule.WaitAllVotes ? rule.WaitAllVotes : false;
                val.completionCondition = rule.CompletionCondition ? rule.CompletionCondition._value : null;
                this.data.push(val);
            }
        }
        else { // 如果模型上没有会签规则，自动带入所有的审批选项
            this.deleteRow();
        }
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.counterSignVariables = this.designerUIState.counterSignVariables || [];
        this.approvalItems = this.designerUIState.approvalItems || [];
    }
    // 重置动作
    /**
     * @return {?}
     */
    deleteRow() {
        this.data = [];
        /** @type {?} */
        const ruleItems = this.designerUIState.approvalItems || [];
        if (ruleItems && ruleItems.length > 0) {
            for (const ruleItem of ruleItems) {
                /** @type {?} */
                const val = new SignRuleEntity();
                if (ruleItem.value === 'Pass') {
                    val.id = ProcessDeUtil.GenerateElementId();
                    val.conclusionValue = ruleItem.value;
                    val.conclusionName = ruleItem.text;
                    val.calculateType = 'byProportion';
                    val.conditionValue = '100';
                    val.waitAllVotes = true;
                }
                else if (ruleItem.value === 'Back') {
                    val.id = ProcessDeUtil.GenerateElementId();
                    val.conclusionValue = ruleItem.value;
                    val.conclusionName = ruleItem.text;
                    val.calculateType = 'byNumber';
                    val.conditionValue = '1';
                    val.waitAllVotes = true;
                }
                else {
                    val.id = ProcessDeUtil.GenerateElementId();
                    val.conclusionValue = ruleItem.value;
                    val.conclusionName = ruleItem.text;
                    val.calculateType = 'null';
                    val.conditionValue = '0';
                    val.waitAllVotes = true;
                }
                this.data.push(val);
            }
        }
    }
    /**
     * @return {?}
     */
    clickOK() {
        this.grid.endCellEdit();
        if (this.data.length === 0) {
            this.message.warning('完成策略为会签时，会签规则不允许为空，请了解！');
        }
        else {
            /** @type {?} */
            const object = { value: this.data, parameters: null };
            this.submitModal.emit(object);
        }
    }
    /**
     * @return {?}
     */
    clickCancel() {
        this.closeModal.emit();
    }
    /**
     * @param {?} e
     * @return {?}
     */
    editConditon(e) {
        if (this.counterSignVariables && this.counterSignVariables.length > 0) {
            for (const variable of this.counterSignVariables) {
                this.exprService.addContext(variable);
            }
        }
        this.exprService.setEditPattern(ExprEditMode.Advanced); // 表达式展现模式：默认高级版（会签规则需要上下文变量）
        this.exprService.addExpressionText(e.instance.value);
        this.exprService.buildExpression().then((/**
         * @param {?} cond
         * @return {?}
         */
        (cond) => {
            e.formControl.setValue(cond);
            e.instance.cd.detectChanges();
        }));
    }
    /**
     * 选中审批项
     * @return {?}
     */
    approvalSelect() {
        /** @type {?} */
        const selections = this.apvlItemsGrid.checkeds;
        if (selections && selections.length > 0) {
            for (const selection of selections) {
                /** @type {?} */
                const signRule = new SignRuleEntity();
                signRule.id = ProcessDeUtil.GenerateElementId();
                signRule.conclusionValue = selection.data.value;
                signRule.conclusionName = selection.data.text;
                this.data.push(signRule);
            }
            this.grid.loadData(this.data);
            this.apvlItemDialog.close();
        }
        else {
            this.message.info('请首先选中一条审批项！');
        }
    }
    /**
     * @param {?} e
     * @return {?}
     */
    endEdit(e) {
        this.curValue = e.rowData;
        // 自定义会签规则和预置会签规则互斥
        if (this.preValue.completionCondition !== this.curValue.completionCondition) {
            this.data[e.rowIndex].calculateType = 'null',
                this.data[e.rowIndex].conditionValue = '0';
            this.data[e.rowIndex].waitAllVotes = false;
        }
        else if (this.preValue.calculateType !== this.curValue.calculateType ||
            this.preValue.conditionValue !== this.curValue.conditionValue ||
            this.preValue.waitAllVotes !== this.curValue.waitAllVotes) {
            this.data[e.rowIndex].completionCondition = null;
        }
        if (e.column.field === 'conditionValue' && this.data[e.rowIndex].calculateType === 'byProportion'
            && Number.parseInt(e.value) > 100) {
            this.message.info('条件值最大值是100');
            this.data[e.rowIndex].conditionValue = '100';
        }
        else if (e.column.field === 'conditionValue' && Number.parseInt(e.value) < 0) {
            this.message.info('条件值最小值是0');
            this.data[e.rowIndex].conditionValue = '0';
        }
        else if ((e.column.field === 'calculateType' || e.column.field === 'conditionValue') && (this.data[e.rowIndex].calculateType === 'oneVote' ||
            this.data[e.rowIndex].calculateType === 'fullVote') && Number.parseInt(this.data[e.rowIndex].conditionValue) !== 0) {
            this.message.info('结论执行方式为全票或一票时不需要条件值');
            this.data[e.rowIndex].conditionValue = '0';
        }
        else if (e.column.field === 'calculateType' && this.data[e.rowIndex].calculateType === 'byProportion' &&
            Number.parseInt(this.data[e.rowIndex].conditionValue) > 100) {
            this.message.info('条件值最大值是100');
            this.data[e.rowIndex].conditionValue = '100';
        }
    }
}
SignRuleComponent.decorators = [
    { type: Component, args: [{
                selector: 'app-sign-rule',
                template: "<div class=\"f-page\">\r\n  <div class=\"f-page-header\">\r\n    <nav class=\"f-page-header-base\">\r\n      <div class=\"f-title\">\r\n        <span class=\"f-title-icon f-text-orna-bill\">\r\n          <i class=\"f-icon f-icon-page-title-administer\"></i>\r\n        </span>\r\n        <h4 class=\"f-title-text\">\u89C4\u5219\u5217\u8868</h4>\r\n      </div>\r\n      <div class=\"btn-toolbar btn-group-lg\">\r\n      </div>\r\n    </nav>\r\n  </div>\r\n  <div class=\"f-page-main f-utils-fill-flex-column h-100\">\r\n    <div class=\"f-utils-fill-flex-column farris-overflow-y-auto h-100\">\r\n      <farris-datagrid #grid [data]=\"data\" [columns]=\"columns\" [idField]=\"'id'\" [fit]=\"true\"\r\n        [fitColumns]=\"true\" [editable]=\"true\" [editMode]=\"'cell'\" [pagination]=\"false\" [showCheckbox]=\"false\"\r\n        [multiSelect]=\"false\" [afterEdit]='afterEdit' (endEdit)=\"endEdit($event)\">\r\n      </farris-datagrid>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #iconSelectFooter>\r\n  <button type=\"button\" class=\"btn btn-primary btn-sm px-3 mx-2\" (click)=\"clickOK()\">\u786E\u5B9A</button>\r\n  <button type=\"button\" class=\"btn btn-secondary btn-sm px-3 mx-2\" (click)=\"deleteRow()\">\u91CD\u7F6E</button>\r\n  <button type=\"button\" class=\"btn btn-secondary btn-sm px-3 mx-2\" (click)=\"clickCancel()\">\u53D6\u6D88</button>\r\n</ng-template>\r\n\r\n<farris-dialog #approvalItemDialog [buttons]=\"buttonRef\" [width]=\"700\" [height]=\"520\" [title]=\"'\u5BA1\u6279\u9009\u9879'\">\r\n  <div class=\"f-utils-fill-flex-column farris-overflow-y-auto h-100 m-2\">\r\n      <farris-datagrid #approvalTable [columns]=\"approvalCols\" [data]=\"approvalItems\" [idField]=\"'value'\"\r\n        [fit]=\"true\" [fitColumns]=\"true\" [pagination]='false' [multiSelect]=\"true\"\r\n        [showCheckbox]=\"true\" [multiSelect]=\"true\" [checkOnSelect]=\"true\" [selectOnCheck]=\"true\">\r\n      </farris-datagrid>\r\n  </div>\r\n</farris-dialog>\r\n<ng-template #buttonRef>\r\n  <button class=\"btn btn-sm btn-primary px-3 mx-2\" (click)=\"approvalSelect()\">\u786E\u5B9A</button>\r\n  <button class=\"btn btn-secondary btn-sm px-3 mx-2\" (click)=\"approvalItemDialog.close()\">\u53D6\u6D88</button>\r\n</ng-template>\r\n",
                styles: [""]
            }] }
];
/** @nocollapse */
SignRuleComponent.ctorParameters = () => [
    { type: FormBuilder },
    { type: MessagerService },
    { type: ExpressionService },
    { type: ProcessDesignerUIState }
];
SignRuleComponent.propDecorators = {
    cls: [{ type: HostBinding, args: ['class',] }],
    closeModal: [{ type: Output }],
    submitModal: [{ type: Output }],
    value: [{ type: Input }],
    editorParams: [{ type: Input }],
    modalFooter: [{ type: ViewChild, args: ['iconSelectFooter',] }],
    apvlItemsGrid: [{ type: ViewChild, args: ['approvalTable',] }],
    apvlItemDialog: [{ type: ViewChild, args: ['approvalItemDialog',] }],
    grid: [{ type: ViewChild, args: ['grid',] }]
};
if (false) {
    /** @type {?} */
    SignRuleComponent.prototype.cls;
    /** @type {?} */
    SignRuleComponent.prototype.closeModal;
    /** @type {?} */
    SignRuleComponent.prototype.submitModal;
    /** @type {?} */
    SignRuleComponent.prototype.editorParams;
    /** @type {?} */
    SignRuleComponent.prototype.modalFooter;
    /** @type {?} */
    SignRuleComponent.prototype.apvlItemsGrid;
    /** @type {?} */
    SignRuleComponent.prototype.apvlItemDialog;
    /** @type {?} */
    SignRuleComponent.prototype.grid;
    /** @type {?} */
    SignRuleComponent.prototype.modalConfig;
    /** @type {?} */
    SignRuleComponent.prototype.data;
    /** @type {?} */
    SignRuleComponent.prototype.calculationMethods;
    /** @type {?} */
    SignRuleComponent.prototype.counterSignVariables;
    /**
     * **** 审批项帮助参数 ********************************************************
     * @type {?}
     */
    SignRuleComponent.prototype.approvalCols;
    /** @type {?} */
    SignRuleComponent.prototype.approvalItems;
    /**
     * ********************************
     * @type {?}
     */
    SignRuleComponent.prototype.columns;
    /** @type {?} */
    SignRuleComponent.prototype.preValue;
    /** @type {?} */
    SignRuleComponent.prototype.curValue;
    /**
     * 结束编辑前事件
     * @type {?}
     */
    SignRuleComponent.prototype.afterEdit;
    /**
     * @type {?}
     * @private
     */
    SignRuleComponent.prototype.formBuilder;
    /**
     * @type {?}
     * @private
     */
    SignRuleComponent.prototype.message;
    /**
     * @type {?}
     * @private
     */
    SignRuleComponent.prototype.exprService;
    /**
     * @type {?}
     * @private
     */
    SignRuleComponent.prototype.designerUIState;
}
export class SignRuleConverter {
    constructor() { }
    /**
     * @param {?} data
     * @return {?}
     */
    convertTo(data) {
        if (data && data.length > 0) {
            return '（已设置）';
        }
        else {
            return '（未设置）';
        }
    }
}
//# sourceMappingURL=data:application/json;base64,