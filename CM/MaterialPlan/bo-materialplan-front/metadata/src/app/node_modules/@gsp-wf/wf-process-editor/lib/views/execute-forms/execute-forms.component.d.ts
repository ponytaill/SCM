import { OnInit, EventEmitter, TemplateRef, ElementRef, ComponentFactoryResolver, Injector, AfterViewInit } from '@angular/core';
import { TypeConverter } from '@farris/ui-property-panel';
import { FormBuilder } from '@angular/forms';
import { ExecuteFormsUIState } from './execute-forms.uistate';
import { ExecuteFormsViewModel } from './execute-forms.viewmodel';
import { ExecuteFormModel } from './entities/execute-form.entity';
import { BsModalService } from '@farris/ui-modal';
import { FormConfigContainerComponent } from './form-config-container/form-config-container.component';
export declare class ExecuteFormsComponent implements OnInit, AfterViewInit {
    private formBuilder;
    uistate: ExecuteFormsUIState;
    viewmodel: ExecuteFormsViewModel;
    private resolver;
    private injector;
    private modalService;
    modalConfig: {
        title: string;
        width: number;
        height: number;
        showButtons: boolean;
    };
    cls: string;
    style: string;
    closeModal: EventEmitter<any>;
    submitModal: EventEmitter<any>;
    value: ExecuteFormModel;
    editorParams: any;
    modalFooter: TemplateRef<any>;
    configContainer: FormConfigContainerComponent;
    configSection: ElementRef<any>;
    form: ExecuteFormModel;
    tab: 'web' | 'mobile';
    groupIcon: string;
    cols: any[];
    location: 'userActivity' | 'process' | 'startActivity';
    showMethodTab: boolean;
    constructor(formBuilder: FormBuilder, uistate: ExecuteFormsUIState, viewmodel: ExecuteFormsViewModel, resolver: ComponentFactoryResolver, injector: Injector, modalService: BsModalService);
    ngAfterViewInit(): void;
    ngOnInit(): void;
    clickOK(): void;
    clickCancel(): void;
    private getForm;
    /**
     * 参数设置
     */
    parametersSet(): void;
    /**
     * 选择表单定义
     */
    selectExecuteForm(): void;
    clear(): void;
}
export declare class ExecuteFormsConverter implements TypeConverter {
    constructor();
    convertTo(data: any): string;
}
