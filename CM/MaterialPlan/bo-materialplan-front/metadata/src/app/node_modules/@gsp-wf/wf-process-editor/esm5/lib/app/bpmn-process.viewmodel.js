/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { ProcessDesignerUIState } from './process-designer.uistate';
import { ResourceKeys } from '../model/resourceKeys';
import { EntryFormEditorComponent, FlowFormConverter } from '../views/entryForm/entry-form-editor.component';
import { ActivityComponentComponent, ActivityComponentConverter } from '../views/activity-component/activity-component.component';
import { ExecuteFormsComponent, ExecuteFormsConverter } from '../views/execute-forms/execute-forms.component';
import { TitleExpressionComponent, TitleExpressionConverter } from '../views/title-expression/title-expression.component';
import { CustomizeActionComponent, CustomizeActionConverter } from '../views/customize-action/customize-action.component';
import { ProcessVariablesComponent, ProcessVariablesConverter } from '../views/process-variables/process-variables.component';
import { TimeLimitControlComponent, TimeLimitControlConverter } from '../views/time-limit-control/time-limit-control.component';
import { MessageNoticeComponent, MessageNoticeConverter } from '../views/message-notice/message-notice.component';
import { ExtendPropertyComponent, ExtendPropertyConverter } from '../views/extend-property/extend-property.component';
var BpmnProcessViewModel = /** @class */ (function () {
    function BpmnProcessViewModel(uiState) {
        this.uiState = uiState;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    BpmnProcessViewModel.prototype.setProcessProperty = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        // if (obj.propertyData.EntryForm) {
        //     obj.propertyData.EntryForm = this.uiState.flowFormInfo.flowForm;
        // }
        this.uiState.propertyData = obj.propertyData;
        this.uiState.ProcessVariables = this.uiState.propertyData[ResourceKeys.processVariables];
        this.uiState.propertyConfig = this.setProcessConfig(obj.propertyConfig);
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    BpmnProcessViewModel.prototype.setProcessConfig = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        var _this = this;
        /** @type {?} */
        var propertyConfig = [];
        if (obj) {
            obj.forEach((/**
             * @param {?} element
             * @return {?}
             */
            function (element) {
                _this.setProcessEntity(element.properties);
                propertyConfig.push(element);
            }));
        }
        return propertyConfig;
    };
    /**
     * @private
     * @param {?} obj
     * @return {?}
     */
    BpmnProcessViewModel.prototype.setProcessEntity = /**
     * @private
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        var _this = this;
        if (obj.length > 0) {
            obj.forEach((/**
             * @param {?} item
             * @return {?}
             */
            function (item) {
                switch (item.propertyID) {
                    case ResourceKeys.EntryForm: // 流程分类
                        item.editor = EntryFormEditorComponent;
                        item.converter = new FlowFormConverter();
                        // item.editorParams = {
                        //     flowForms: [this.uiState.flowFormInfo.flowForm]
                        // };
                        break;
                    case ResourceKeys.wf_Component:
                        item.editor = ActivityComponentComponent;
                        item.converter = new ActivityComponentConverter();
                        item.editorParams = {
                            location: 'process'
                        };
                        break;
                    case ResourceKeys.wf_ExecuteForms_PC:
                        item.editor = ExecuteFormsComponent;
                        item.converter = new ExecuteFormsConverter();
                        item.editorParams = {
                            location: 'process',
                            tab: 'web'
                        };
                        break;
                    case ResourceKeys.wf_ExecuteForms_Mobile:
                        item.editor = ExecuteFormsComponent;
                        item.converter = new ExecuteFormsConverter();
                        item.editorParams = {
                            location: 'process',
                            tab: 'mobile'
                        };
                        break;
                    case ResourceKeys.wf_TitleExpression:
                        item.editor = TitleExpressionComponent;
                        item.converter = new TitleExpressionConverter();
                        break;
                    case ResourceKeys.allowPreAssign:
                        item.iterator = _this.uiState.boolIterator;
                        break;
                    case ResourceKeys.startMode:
                        item.iterator = _this.uiState.startModeIterator;
                        break;
                    case ResourceKeys.DisplayTerminal:
                        item.iterator = _this.uiState.displayTerminal;
                        break;
                    case ResourceKeys.wf_CustomizeAction:
                        item.editor = CustomizeActionComponent;
                        item.converter = new CustomizeActionConverter();
                        break;
                    case ResourceKeys.processVariables:
                        item.editor = ProcessVariablesComponent;
                        item.converter = new ProcessVariablesConverter();
                        break;
                    case ResourceKeys.timeLimitControl:
                        item.editor = TimeLimitControlComponent;
                        item.converter = new TimeLimitControlConverter();
                        item.editorParams = {
                            location: 'process'
                        };
                        break;
                    case ResourceKeys.messageNotice:
                        item.editor = MessageNoticeComponent;
                        item.converter = new MessageNoticeConverter();
                        item.editorParams = {
                            location: 'process'
                        };
                        break;
                    default:
                        item.editor = ExtendPropertyComponent;
                        item.converter = new ExtendPropertyConverter();
                        break;
                }
            }));
        }
    };
    BpmnProcessViewModel.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    BpmnProcessViewModel.ctorParameters = function () { return [
        { type: ProcessDesignerUIState }
    ]; };
    return BpmnProcessViewModel;
}());
export { BpmnProcessViewModel };
if (false) {
    /**
     * @type {?}
     * @private
     */
    BpmnProcessViewModel.prototype.uiState;
}
//# sourceMappingURL=data:application/json;base64,