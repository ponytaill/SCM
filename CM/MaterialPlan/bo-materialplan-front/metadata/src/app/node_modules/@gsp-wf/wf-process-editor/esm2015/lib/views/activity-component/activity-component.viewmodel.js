/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { ActivityComponentUIState } from './activity-component.uistate';
import { ActivityComponentRepository } from './activity-component.repository';
import { MessagerService } from '@farris/ui-messager';
export class ActivityComponentViewModel {
    /**
     * @param {?} uistate
     * @param {?} repository
     * @param {?} messager
     */
    constructor(uistate, repository, messager) {
        this.uistate = uistate;
        this.repository = repository;
        this.messager = messager;
    }
    /**
     * @return {?}
     */
    deleteRow() {
        if (this.uistate.curComponent) {
            if (this.uistate.curComponent.executionTime === 'LOADDATA') {
                this.messager.info('取数构件不允许删除，请了解！');
            }
            else {
                this.repository.removeComponent(this.uistate.curComponent.id);
            }
        }
        else {
            return;
        }
    }
    /**
     * @param {?} cpt
     * @return {?}
     */
    componentSelect(cpt) {
        if (cpt) {
            this.repository.addComponent(cpt);
        }
    }
    /**
     * @param {?} flowFormId
     * @param {?} bizActId
     * @return {?}
     */
    loadComponents(flowFormId, bizActId) {
        this.repository.loadComponents(flowFormId, bizActId);
    }
}
ActivityComponentViewModel.decorators = [
    { type: Injectable }
];
/** @nocollapse */
ActivityComponentViewModel.ctorParameters = () => [
    { type: ActivityComponentUIState },
    { type: ActivityComponentRepository },
    { type: MessagerService }
];
if (false) {
    /**
     * @type {?}
     * @private
     */
    ActivityComponentViewModel.prototype.uistate;
    /**
     * @type {?}
     * @private
     */
    ActivityComponentViewModel.prototype.repository;
    /**
     * @type {?}
     * @private
     */
    ActivityComponentViewModel.prototype.messager;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWN0aXZpdHktY29tcG9uZW50LnZpZXdtb2RlbC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc3Atd2Yvd2YtcHJvY2Vzcy1lZGl0b3IvIiwic291cmNlcyI6WyJsaWIvdmlld3MvYWN0aXZpdHktY29tcG9uZW50L2FjdGl2aXR5LWNvbXBvbmVudC52aWV3bW9kZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDeEUsT0FBTyxFQUFFLDJCQUEyQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFHOUUsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBSXRELE1BQU0sT0FBTywwQkFBMEI7Ozs7OztJQUNuQyxZQUNZLE9BQWlDLEVBQ2pDLFVBQXVDLEVBQ3ZDLFFBQXlCO1FBRnpCLFlBQU8sR0FBUCxPQUFPLENBQTBCO1FBQ2pDLGVBQVUsR0FBVixVQUFVLENBQTZCO1FBQ3ZDLGFBQVEsR0FBUixRQUFRLENBQWlCO0lBQ2pDLENBQUM7Ozs7SUFFTCxTQUFTO1FBQ0wsSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLFlBQVksRUFBRTtZQUMzQixJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLGFBQWEsS0FBSyxVQUFVLEVBQUU7Z0JBQ3hELElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLENBQUM7YUFDeEM7aUJBQU07Z0JBQ0gsSUFBSSxDQUFDLFVBQVUsQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsRUFBRSxDQUFDLENBQUM7YUFDakU7U0FDSjthQUFNO1lBQ0gsT0FBTztTQUNWO0lBQ0wsQ0FBQzs7Ozs7SUFDRCxlQUFlLENBQUMsR0FBaUI7UUFDN0IsSUFBSSxHQUFHLEVBQUU7WUFDTCxJQUFJLENBQUMsVUFBVSxDQUFDLFlBQVksQ0FBQyxHQUFHLENBQUMsQ0FBQztTQUNyQztJQUNMLENBQUM7Ozs7OztJQUVELGNBQWMsQ0FBQyxVQUFrQixFQUFFLFFBQWdCO1FBQy9DLElBQUksQ0FBQyxVQUFVLENBQUMsY0FBYyxDQUFDLFVBQVUsRUFBRSxRQUFRLENBQUMsQ0FBQztJQUN6RCxDQUFDOzs7WUE1QkosVUFBVTs7OztZQU5GLHdCQUF3QjtZQUN4QiwyQkFBMkI7WUFHM0IsZUFBZTs7Ozs7OztJQU1oQiw2Q0FBeUM7Ozs7O0lBQ3pDLGdEQUErQzs7Ozs7SUFDL0MsOENBQWlDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBBY3Rpdml0eUNvbXBvbmVudFVJU3RhdGUgfSBmcm9tICcuL2FjdGl2aXR5LWNvbXBvbmVudC51aXN0YXRlJztcclxuaW1wb3J0IHsgQWN0aXZpdHlDb21wb25lbnRSZXBvc2l0b3J5IH0gZnJvbSAnLi9hY3Rpdml0eS1jb21wb25lbnQucmVwb3NpdG9yeSc7XHJcbmltcG9ydCB7IEJpekNvbXBvbmVudEVudGl0eSB9IGZyb20gJy4uLy4uL2RvbWFpbi9lbnRpdGllcy9iaXotY29tcG9uZW50LmVudGl0eSc7XHJcbmltcG9ydCB7IEdzcENvbXBvbmVudCB9IGZyb20gJ0Bnc3AtY21wL2NvbW1vbi1jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBNZXNzYWdlclNlcnZpY2UgfSBmcm9tICdAZmFycmlzL3VpLW1lc3NhZ2VyJztcclxuXHJcbkBJbmplY3RhYmxlKClcclxuXHJcbmV4cG9ydCBjbGFzcyBBY3Rpdml0eUNvbXBvbmVudFZpZXdNb2RlbCB7XHJcbiAgICBjb25zdHJ1Y3RvcihcclxuICAgICAgICBwcml2YXRlIHVpc3RhdGU6IEFjdGl2aXR5Q29tcG9uZW50VUlTdGF0ZSxcclxuICAgICAgICBwcml2YXRlIHJlcG9zaXRvcnk6IEFjdGl2aXR5Q29tcG9uZW50UmVwb3NpdG9yeSxcclxuICAgICAgICBwcml2YXRlIG1lc3NhZ2VyOiBNZXNzYWdlclNlcnZpY2VcclxuICAgICkgeyB9XHJcblxyXG4gICAgZGVsZXRlUm93KCkge1xyXG4gICAgICAgIGlmICh0aGlzLnVpc3RhdGUuY3VyQ29tcG9uZW50KSB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLnVpc3RhdGUuY3VyQ29tcG9uZW50LmV4ZWN1dGlvblRpbWUgPT09ICdMT0FEREFUQScpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMubWVzc2FnZXIuaW5mbygn5Y+W5pWw5p6E5Lu25LiN5YWB6K645Yig6Zmk77yM6K+35LqG6Kej77yBJyk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnJlcG9zaXRvcnkucmVtb3ZlQ29tcG9uZW50KHRoaXMudWlzdGF0ZS5jdXJDb21wb25lbnQuaWQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGNvbXBvbmVudFNlbGVjdChjcHQ6IEdzcENvbXBvbmVudCkge1xyXG4gICAgICAgIGlmIChjcHQpIHtcclxuICAgICAgICAgICAgdGhpcy5yZXBvc2l0b3J5LmFkZENvbXBvbmVudChjcHQpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBsb2FkQ29tcG9uZW50cyhmbG93Rm9ybUlkOiBzdHJpbmcsIGJpekFjdElkOiBzdHJpbmcpIHtcclxuICAgICAgICB0aGlzLnJlcG9zaXRvcnkubG9hZENvbXBvbmVudHMoZmxvd0Zvcm1JZCwgYml6QWN0SWQpO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==