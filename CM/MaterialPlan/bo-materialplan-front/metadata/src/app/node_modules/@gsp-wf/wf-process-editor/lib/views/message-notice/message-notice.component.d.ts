import { OnInit, EventEmitter, TemplateRef, ComponentFactoryResolver, Injector } from '@angular/core';
import { TypeConverter } from '@farris/ui-property-panel';
import { MessageNotice } from './message-notice';
import { BsModalService } from '@farris/ui-modal';
import { MessagerService } from '@farris/ui-messager';
import { DatagridComponent } from '@farris/ui-datagrid';
import { ProcessDesignerUIState } from '../../app/process-designer.uistate';
export declare class MessageNoticeComponent implements OnInit {
    private resolver;
    private injector;
    private modalService;
    private message;
    private uistate;
    cls: string;
    closeModal: EventEmitter<any>;
    submitModal: EventEmitter<any>;
    value: any[];
    editorParams: any;
    modalFooter: TemplateRef<any>;
    grid: DatagridComponent;
    modalConfig: {
        title: string;
        width: number;
        height: number;
        showButtons: boolean;
    };
    messageNotices: Array<MessageNotice>;
    columns: any[];
    location: 'activity' | 'process' | 'messageActivity';
    constructor(resolver: ComponentFactoryResolver, injector: Injector, modalService: BsModalService, message: MessagerService, uistate: ProcessDesignerUIState);
    ngOnInit(): void;
    add(): void;
    edit(): void;
    delete(): void;
    clickOK(): void;
    clickCancel(): void;
}
export declare class MessageNoticeConverter implements TypeConverter {
    constructor();
    convertTo(data: any[]): string;
}
