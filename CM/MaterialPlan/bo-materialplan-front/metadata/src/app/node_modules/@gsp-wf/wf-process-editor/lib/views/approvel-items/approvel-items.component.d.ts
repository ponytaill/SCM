import { OnInit, EventEmitter, TemplateRef } from '@angular/core';
import { TypeConverter } from '@farris/ui-property-panel';
import { FormBuilder } from '@angular/forms';
import { DialogComponent } from '@farris/ui-dialog';
import { ApprovalItemEntity } from './entities/approval-item.entity';
import { HttpService } from '@ecp-caf/caf-common';
import { MessagerService } from '@farris/ui-messager';
import { ProcessDesignerUIState } from '../../app/process-designer.uistate';
import { DatagridComponent } from '@farris/ui-datagrid';
import { ProcessDeUtil } from '../../domain/process-de-util';
export declare class ApprovelItemsComponent implements OnInit {
    private formBuilder;
    private message;
    private util;
    private http;
    private uiState;
    cls: string;
    closeModal: EventEmitter<any>;
    submitModal: EventEmitter<any>;
    value: any[];
    modalFooter: TemplateRef<any>;
    actionsTable: DatagridComponent;
    actionsDialog: DialogComponent;
    grid: DatagridComponent;
    modalConfig: {
        title: string;
        width: number;
        height: number;
        showButtons: boolean;
    };
    workFlowActions: any[];
    columns: ({
        field: string;
        width: number;
        title: string;
        formatter?: undefined;
        editor?: undefined;
        validators?: undefined;
    } | {
        field: string;
        width: number;
        title: string;
        formatter: {
            type: string;
            options: {
                valueField: string;
                textField: string;
                data: any[];
                trueText?: undefined;
                falseText?: undefined;
            };
        };
        editor: {
            type: string;
            options: {
                valueField: string;
                textField: string;
                data: any[];
                idField: string;
                panelHeight: string;
            };
        };
        validators: {
            type: string;
            messager: string;
        }[];
    } | {
        field: string;
        width: number;
        title: string;
        editor: {
            type: string;
            options: {
                valueField?: undefined;
                textField?: undefined;
                data?: undefined;
                idField?: undefined;
                panelHeight?: undefined;
            };
        };
        formatter: {
            type: string;
            options: {
                trueText: string;
                falseText: string;
                valueField?: undefined;
                textField?: undefined;
                data?: undefined;
            };
        };
        validators: {
            type: string;
            messager: string;
        }[];
    })[];
    data: ApprovalItemEntity[];
    actions: any[];
    actionsCols: {
        title: string;
        field: string;
        width: number;
    }[];
    constructor(formBuilder: FormBuilder, message: MessagerService, util: ProcessDeUtil, http: HttpService, uiState: ProcessDesignerUIState);
    ngOnInit(): void;
    clickOK(): void;
    clickCancel(): void;
    private validator;
    selectChanged(data: any): void;
    deleteRow(): void;
    private getActionsList;
    actionsSelect(): void;
    private actionValidate;
}
export declare class ApprovelItemsConverter implements TypeConverter {
    constructor();
    convertTo(data: any[]): string;
}
