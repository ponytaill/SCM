/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, HostBinding, Output, EventEmitter, Input, ViewChild, TemplateRef, Injector } from '@angular/core';
import { DatagridComponent } from '@farris/ui-datagrid';
import { MessagerService } from '@farris/ui-messager';
import { ProcessDeUtil } from '../../domain/process-de-util';
import { EventDefinition } from './event-definition.entity';
import { EditorTypes } from '@farris/ui-datagrid-editors';
export class EventDefinitionComponent {
    /**
     * @param {?} message
     * @param {?} util
     * @param {?} injector
     */
    constructor(message, util, injector) {
        this.message = message;
        this.util = util;
        this.injector = injector;
        this.cls = 'farris-main-area flex-column';
        this.closeModal = new EventEmitter();
        this.submitModal = new EventEmitter();
        this.modalConfig = {
            title: '信号定义',
            width: 560,
            height: 420,
            showButtons: true
        };
        this.triggerActionCollection = [
            { text: '正向', value: 'Pass' },
            { text: '反向', value: 'Back' },
            { text: '终止', value: 'Abort' }
        ];
        this.columns = new Array();
        this.data = new Array();
    }
    /**
     * @param {?} items
     * @return {?}
     */
    set value(items) {
        if (items && items.length > 0) {
            for (const item of items) {
                /** @type {?} */
                const event = new EventDefinition();
                event.Id = item.Id;
                event.name = item.name;
                event.triggerAction = item.triggerAction;
                event.Async = item.Async;
                event.SignalRef = item.SignalRef;
                this.data.push(event);
            }
        }
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.columns = [{
                field: 'SignalRef', width: 100, title: '信号编号',
                editor: { type: EditorTypes.TEXTBOX, options: {} },
                validators: [
                    { type: 'required', messager: '必填' }
                ]
            },
            {
                field: 'name', width: 100, title: '信号名称',
                editor: { type: EditorTypes.TEXTBOX, options: {} },
                validators: [
                    { type: 'required', messager: '必填' }
                ]
            },
            {
                field: 'triggerAction', width: 100, title: '流转方向',
                formatter: {
                    type: 'enum',
                    options: { valueField: 'value', textField: 'text', data: this.triggerActionCollection }
                },
                editor: {
                    type: EditorTypes.COMBOLIST,
                    options: { valueField: 'value', textField: 'text', data: this.triggerActionCollection, idField: 'value', panelHeight: 'auto', showClear: false }
                },
                validators: [
                    { type: 'required', messager: '必填' }
                ]
            }];
    }
    /**
     * @return {?}
     */
    add() {
        /** @type {?} */
        const event = new EventDefinition();
        event.Id = ProcessDeUtil.GenerateElementId();
        this.data.push(event);
        this.grid.loadData(this.data);
    }
    /**
     * @return {?}
     */
    delete() {
        this.grid.endCellEdit();
        if (this.grid.selectedRow && this.grid.selectedRow.data) {
            /** @type {?} */
            const i = this.data.findIndex((/**
             * @param {?} d
             * @return {?}
             */
            d => d.Id === this.grid.selectedRow.data.Id));
            this.data.splice(i, 1);
            this.grid.loadData(this.data);
        }
        else {
            this.message.info('尚未选中一条触发事件！');
        }
    }
    /**
     * @return {?}
     */
    clickOK() {
        this.grid.endCellEdit();
        if (this.validator()) {
            /** @type {?} */
            const object = { value: this.data, parameters: null };
            this.submitModal.emit(object);
        }
    }
    /**
     * @return {?}
     */
    clickCancel() {
        this.closeModal.emit();
    }
    /**
     * @private
     * @return {?}
     */
    validator() {
        if (this.data.length === 0) {
            this.message.info('至少需要一个信号定义，请了解！');
            return false;
        }
        else {
            for (const d of this.data) {
                if (!d.SignalRef) {
                    this.message.info('信号编号不允许为空！');
                    return false;
                }
                else if (!d.name) {
                    this.message.info('信号名称不允许为空！');
                    return false;
                }
            }
            if (this.data.length > 1) {
                for (let i = 0; i < this.data.length; i++) {
                    /** @type {?} */
                    const code1 = this.data[i].SignalRef;
                    for (let j = i + 1; j < this.data.length; j++) {
                        /** @type {?} */
                        const code2 = this.data[j].SignalRef;
                        if (code1 === code2) {
                            this.message.warning(`信号编号不允许重复！`);
                            return false;
                        }
                    }
                }
            }
        }
        return true;
    }
}
EventDefinitionComponent.decorators = [
    { type: Component, args: [{
                selector: 'lib-event-definition',
                template: "<div class=\"f-page\">\r\n  <div class=\"f-page-header\">\r\n    <nav class=\"f-page-header-base\">\r\n      <div class=\"f-title\">\r\n        <span class=\"f-title-icon f-text-orna-bill\">\r\n          <i class=\"f-icon f-icon-page-title-administer\"></i>\r\n        </span>\r\n        <h4 class=\"f-title-text\">\u5217\u8868</h4>\r\n      </div>\r\n      <div class=\"btn-toolbar btn-group-lg\">\r\n        <button class=\"btn btn-primary mr-2\" (click)=\"add()\">\u65B0\u589E</button>\r\n        <button class=\"btn btn-secondary\" (click)=\"delete()\">\u5220\u9664</button>\r\n      </div>\r\n    </nav>\r\n  </div>\r\n  <div class=\"f-page-main f-utils-fill-flex-column h-100\">\r\n    <div class=\"f-utils-fill-flex-column farris-overflow-y-auto h-100\">\r\n      <farris-datagrid #grid [data]=\"data\" [columns]=\"columns\" [idField]=\"'Id'\" [fit]=\"true\" [fitColumns]=\"true\"\r\n        [editable]=\"true\" [editMode]=\"'cell'\" [pagination]=\"false\" [showCheckbox]=\"false\" [multiSelect]=\"false\">\r\n      </farris-datagrid>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #iconSelectFooter>\r\n  <button type=\"button\" class=\"btn btn-primary btn-sm px-3 mx-2\" (click)=\"clickOK()\">\u786E\u5B9A</button>\r\n  <button type=\"button\" class=\"btn btn-secondary btn-sm px-3 mx-2\" (click)=\"clickCancel()\">\u53D6\u6D88</button>\r\n</ng-template>\r\n",
                styles: [""]
            }] }
];
/** @nocollapse */
EventDefinitionComponent.ctorParameters = () => [
    { type: MessagerService },
    { type: ProcessDeUtil },
    { type: Injector }
];
EventDefinitionComponent.propDecorators = {
    cls: [{ type: HostBinding, args: ['class',] }],
    closeModal: [{ type: Output }],
    submitModal: [{ type: Output }],
    value: [{ type: Input }],
    modalFooter: [{ type: ViewChild, args: ['iconSelectFooter',] }],
    grid: [{ type: ViewChild, args: ['grid',] }]
};
if (false) {
    /** @type {?} */
    EventDefinitionComponent.prototype.cls;
    /** @type {?} */
    EventDefinitionComponent.prototype.closeModal;
    /** @type {?} */
    EventDefinitionComponent.prototype.submitModal;
    /** @type {?} */
    EventDefinitionComponent.prototype.modalFooter;
    /** @type {?} */
    EventDefinitionComponent.prototype.grid;
    /** @type {?} */
    EventDefinitionComponent.prototype.modalConfig;
    /** @type {?} */
    EventDefinitionComponent.prototype.triggerActionCollection;
    /** @type {?} */
    EventDefinitionComponent.prototype.columns;
    /** @type {?} */
    EventDefinitionComponent.prototype.data;
    /**
     * @type {?}
     * @private
     */
    EventDefinitionComponent.prototype.message;
    /**
     * @type {?}
     * @private
     */
    EventDefinitionComponent.prototype.util;
    /**
     * @type {?}
     * @private
     */
    EventDefinitionComponent.prototype.injector;
}
export class EventDefinitionConverter {
    constructor() { }
    /**
     * @param {?} data
     * @return {?}
     */
    convertTo(data) {
        if (data && data.length > 0) {
            return '（已设置）';
        }
        else {
            return '（未设置）';
        }
    }
}
//# sourceMappingURL=data:application/json;base64,