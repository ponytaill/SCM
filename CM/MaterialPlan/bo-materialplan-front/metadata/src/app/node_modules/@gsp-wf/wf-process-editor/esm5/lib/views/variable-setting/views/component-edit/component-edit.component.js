/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, ComponentFactoryResolver, Injector, Input, ViewChild, ElementRef, HostBinding, NgZone, TemplateRef, EventEmitter, Output } from '@angular/core';
import { FormBuilder } from '@angular/forms';
import { ProcessDesignerUIState } from '../../../../app/process-designer.uistate';
import { ExpressionService, InjectedType } from '@gsp-svc/expression';
import { SessionService } from '@ecp-caf/caf-common';
import { BsModalService } from '@farris/ui-modal';
import { CommonComponentUiRTService } from '@gsp-cmp/ccmp-ui';
import { SelectMetadataRTComponent } from '@gsp-lcm/metadatart-selector';
import { DatagridComponent } from '@farris/ui-datagrid';
import { of } from 'rxjs';
import { EditorTypes } from '@farris/ui-datagrid-editors';
import { LookupGridComponent, ServerSideToken } from '@farris/ui-lookup';
import { ParameterFetchValueMode } from '@gsp-cmp/wscmp-models';
import { ComponentEditLookUpService } from './component-edit-lookup.service';
import { ComponentEditService } from './component-edit.service';
import { ComponentEntity } from './component.entity';
import { ProcessDeUtil } from '../../../../domain/process-de-util';
import { MessagerService } from '@farris/ui-messager';
var ComponentEditComponent = /** @class */ (function () {
    function ComponentEditComponent(formBuilder, designerState, expr, resolver, injector, sessionSrc, modalService, componentService, ngZone, service, util, message) {
        var _this = this;
        this.formBuilder = formBuilder;
        this.designerState = designerState;
        this.expr = expr;
        this.resolver = resolver;
        this.injector = injector;
        this.sessionSrc = sessionSrc;
        this.modalService = modalService;
        this.componentService = componentService;
        this.ngZone = ngZone;
        this.service = service;
        this.util = util;
        this.message = message;
        this.cls = 'farris-main-area flex-column';
        this.closeEmitter = new EventEmitter();
        this.submitEmitter = new EventEmitter();
        this.showClearButton = false;
        this._component = new ComponentEntity();
        this.columns = [
            { field: 'Name', width: 100, title: '参数名' },
            {
                field: 'Value', width: 100, title: '参数值',
                editor: {
                    type: 'input-group',
                    options: {
                        groupText: '<i class="f-icon f-icon-lookup"></i>',
                        editable: false,
                        clickHandle: (/**
                         * @param {?} e
                         * @return {?}
                         */
                        function (e) {
                            e.formControl.setValue(e.instance.value ? e.instance.value : '');
                            _this.showExprHelp(e);
                        }),
                        clear: (/**
                         * @param {?} e
                         * @return {?}
                         */
                        function (e) {
                            console.log('clear', e);
                        })
                    }
                }
            }
        ];
        this.helpFields = {
            idField: '',
            valueField: '',
            textField: ''
        };
        this.dataUri = '/api/runtime/wf/v1.0/dtProcDefs/getHelpData';
        this.helpCols = [];
        this.displayType = 'List';
        this.title = '';
        this.beforeEdit = (/**
         * @param {?} param
         * @return {?}
         */
        function (param) {
            /** @type {?} */
            var rowData = (/** @type {?} */ (param.rowData));
            switch (rowData.fetchValueMode) {
                case ParameterFetchValueMode.express:
                    param.column.editor = {
                        type: 'input-group',
                        options: {
                            groupText: '<i class="f-icon f-icon-lookup"></i>',
                            editable: false,
                            clickHandle: (/**
                             * @param {?} e
                             * @return {?}
                             */
                            function (e) {
                                e.formControl.setValue(e.instance.value ? e.instance.value : '');
                                _this.showExprHelp(e);
                            }),
                            clear: (/**
                             * @param {?} e
                             * @return {?}
                             */
                            function (e) {
                                console.log('clear', e);
                            })
                        }
                    };
                    break;
                case ParameterFetchValueMode.none:
                    param.column.editor = {
                        type: 'input-group',
                        options: {
                            groupText: '<i class="f-icon f-icon-lookup"></i>',
                            editable: false,
                            clickHandle: (/**
                             * @param {?} e
                             * @return {?}
                             */
                            function (e) {
                                e.formControl.setValue(e.instance.value ? e.instance.value : '');
                                _this.showExprHelp(e);
                            }),
                            clear: (/**
                             * @param {?} e
                             * @return {?}
                             */
                            function (e) {
                                console.log('clear', e);
                            })
                        }
                    };
                    break;
                case ParameterFetchValueMode.const:
                    param.column.editor = { type: EditorTypes.TEXTBOX, options: {} };
                    break;
                case ParameterFetchValueMode.enum:
                    param.column.editor = { type: EditorTypes.TEXTBOX, options: {} };
                    break;
                case ParameterFetchValueMode.help:
                    param.column.editor = {
                        type: 'input-group',
                        options: {
                            groupText: '<i class="f-icon f-icon-lookup"></i>',
                            editable: false,
                            clickHandle: (/**
                             * @param {?} e
                             * @return {?}
                             */
                            function (e) {
                                _this.cell = e;
                                _this.helpId = ((/** @type {?} */ (rowData.fetchValueSetting))).helpId;
                                _this.su = ((/** @type {?} */ (rowData.fetchValueSetting))).serviceUnit;
                                _this.getHelpInfo().subscribe((/**
                                 * @param {?} re
                                 * @return {?}
                                 */
                                function (re) {
                                    console.log(re);
                                    /** @type {?} */
                                    var meta = re;
                                    /** @type {?} */
                                    var help = (/** @type {?} */ (JSON.parse(meta.content)));
                                    _this.helpCols = help.dataSource.columns;
                                    _this.displayType = help.displayType;
                                    _this.helpFields = {
                                        idField: help.idField,
                                        valueField: help.valueField,
                                        textField: help.textField
                                    };
                                    _this.lookup.onClear();
                                    _this.lookup.showDialog();
                                }), (/**
                                 * @param {?} err
                                 * @return {?}
                                 */
                                function (err) {
                                    _this.message.error('帮助元数据不存在，请联系系统管理员查看原因！');
                                }));
                            }),
                            clear: (/**
                             * @param {?} e
                             * @return {?}
                             */
                            function (e) {
                                console.log('clear', e);
                            })
                        }
                    };
                    break;
            }
            return of(true);
        });
        this.afterEdit = (/**
         * @param {?} rowIndex
         * @param {?} rowData
         * @param {?=} column
         * @return {?}
         */
        function (rowIndex, rowData, column) {
            return of(true);
        });
        this.dictPicking = (/**
         * @return {?}
         */
        function () {
            return of({
                showDialog: true, data: {
                    helpId: _this.helpId
                }
            });
        });
        this.dictPicked = (/**
         * @param {?} rowData
         * @return {?}
         */
        function (rowData) {
            if (_this.cell) {
                console.log(rowData);
                _this.cell.formControl.setValue(_this.util.getValue(rowData, _this.helpFields.valueField));
                _this.cell.instance.cd.detectChanges();
                return of(true);
            }
        });
    }
    Object.defineProperty(ComponentEditComponent.prototype, "component", {
        get: /**
         * @return {?}
         */
        function () {
            return this._component;
        },
        set: /**
         * @param {?} cmp
         * @return {?}
         */
        function (cmp) {
            var _this = this;
            if (cmp && cmp.MethodCode) {
                this.service.getHelpMetaData(cmp.MetadataId, '').subscribe((/**
                 * @param {?} re
                 * @return {?}
                 */
                function (re) {
                    /** @type {?} */
                    var c = JSON.parse(re.content);
                    /** @type {?} */
                    var operation = c.operations.find((/**
                     * @param {?} o
                     * @return {?}
                     */
                    function (o) { return o.code === cmp.MethodCode; }));
                    if (operation) {
                        cmp.ActualParameters = cmp.ActualParameters.map((/**
                         * @param {?} a
                         * @return {?}
                         */
                        function (a) {
                            /** @type {?} */
                            var p = operation.parameters.find((/**
                             * @param {?} i
                             * @return {?}
                             */
                            function (i) { return i.code === a.Name; }));
                            if (p) {
                                return tslib_1.__assign({}, a, { fetchValueMode: p.fetchValueMode, fetchValueSetting: p.fetchValueSetting });
                            }
                            else {
                                throw new Error('当前构件方法参数不一致，请更新！');
                            }
                        }));
                        _this._component = cmp;
                    }
                    else {
                        throw new Error('当前构件已不存在此方法，请更新！');
                    }
                }));
            }
            else {
                this._component = new ComponentEntity();
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    ComponentEditComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @return {?}
     */
    ComponentEditComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.ngZone.runOutsideAngular((/**
         * @return {?}
         */
        function () {
            _this.inputGroup.nativeElement.addEventListener('mouseenter', _this.onMouseEnter.bind(_this));
            _this.inputGroup.nativeElement.addEventListener('mouseleave', _this.onMouseLeave.bind(_this));
        }));
    };
    /**
     * @param {?} event
     * @return {?}
     */
    ComponentEditComponent.prototype.onMouseEnter = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.showClearButton = true;
        if (this.showClearButton) {
            this.toggleClearIcon(event, true);
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    ComponentEditComponent.prototype.onMouseLeave = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.showClearButton = false;
        this.toggleClearIcon(event, false);
    };
    /**
     * @private
     * @param {?} event
     * @param {?=} isShow
     * @return {?}
     */
    ComponentEditComponent.prototype.toggleClearIcon = /**
     * @private
     * @param {?} event
     * @param {?=} isShow
     * @return {?}
     */
    function (event, isShow) {
        if (isShow === void 0) { isShow = false; }
        /** @type {?} */
        var str = isShow ? '' : 'none';
        /** @type {?} */
        var clearIcon = event.target.querySelector('.input-group-clear');
        if (clearIcon) {
            clearIcon.style.display = str;
        }
    };
    /**
     * @return {?}
     */
    ComponentEditComponent.prototype.clickOK = /**
     * @return {?}
     */
    function () {
        this.grid.endCellEdit();
        if (this.validator()) {
            this.submitEmitter.emit(this.component);
        }
        else {
            this.message.info('尚未选择构件方法!');
        }
    };
    /**
     * @return {?}
     */
    ComponentEditComponent.prototype.clickCancel = /**
     * @return {?}
     */
    function () {
        this.closeEmitter.emit();
    };
    /**
     * @private
     * @return {?}
     */
    ComponentEditComponent.prototype.validator = /**
     * @private
     * @return {?}
     */
    function () {
        if (!this.component.MethodCode || !this.component.MetadataId) {
            return false;
        }
        return true;
    };
    /**
     * @return {?}
     */
    ComponentEditComponent.prototype.clear = /**
     * @return {?}
     */
    function () {
        this.component = new ComponentEntity();
    };
    /**
     * @return {?}
     */
    ComponentEditComponent.prototype.selectComponent = /**
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var compFactory = this.resolver.resolveComponentFactory(SelectMetadataRTComponent);
        /** @type {?} */
        var compRef = compFactory.create(this.injector);
        compRef.instance.typeList = 'WebServiceComponent'; // 目前只能根据元数据类型过滤，后续添加标签过滤
        compRef.instance.selectedMetadata.subscribe((/**
         * @param {?} $event
         * @return {?}
         */
        function ($event) {
            try {
                /** @type {?} */
                var meta = $event.metadata;
                _this.openComponentSelectorNew(meta.id, _this.sessionSrc.getUserSessionId());
            }
            catch (_a) {
                console.log('$event', $event);
                throw new Error('获取解析构件出错' + $event);
            }
        }));
        /** @type {?} */
        var modalConfig = {
            title: '构件选择',
            width: 980,
            height: 548,
            showButtons: false
        };
        /** @type {?} */
        var dialog = this.modalService.show(compRef, modalConfig);
        compRef.instance.closeModalEmitter.subscribe((/**
         * @param {?} $event
         * @return {?}
         */
        function ($event) { return dialog.close(); }));
    };
    /**
     * @private
     * @param {?} metadataId
     * @param {?} sessionId
     * @return {?}
     */
    ComponentEditComponent.prototype.openComponentSelectorNew = /**
     * @private
     * @param {?} metadataId
     * @param {?} sessionId
     * @return {?}
     */
    function (metadataId, sessionId) {
        var _this = this;
        this.componentService.openSelector(metadataId, sessionId).subscribe((/**
         * @param {?} selectorResult
         * @return {?}
         */
        function (selectorResult) {
            selectorResult.confirmEvent.subscribe((/**
             * @param {?} result
             * @return {?}
             */
            function (result) {
                if (result) {
                    _this.component.Name = result.name;
                    _this.component.MetadataId = result.id;
                    _this.component.MethodCode = result.operations[0].code;
                    // this.component.methodName = result.operations[0].name;
                    _this.component.ActualParameters = [];
                    if (result.operations[0].parameters && result.operations[0].parameters.length > 0) {
                        _this.component.ActualParameters = result.operations[0].parameters
                            .map((/**
                         * @param {?} p
                         * @return {?}
                         */
                        function (p) { return ({
                            Name: p.code, Value: '', Tag: p.fetchValueMode.indexOf('express,none') > -1 ? 'expression' : 'constant',
                            fetchValueMode: p.fetchValueMode,
                            fetchValueSetting: p.fetchValueSetting
                        }); }));
                    }
                }
            }));
        }));
    };
    /**
     * @param {?} e
     * @return {?}
     */
    ComponentEditComponent.prototype.showExprHelp = /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
        var e_1, _a, e_2, _b, e_3, _c, e_4, _d, e_5, _e, e_6, _f;
        if (this.designerState.schemas.length > 0) {
            try {
                for (var _g = tslib_1.__values(this.designerState.schemas), _h = _g.next(); !_h.done; _h = _g.next()) {
                    var schema = _h.value;
                    this.expr.addSchema('Schema', schema);
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_h && !_h.done && (_a = _g.return)) _a.call(_g);
                }
                finally { if (e_1) throw e_1.error; }
            }
            if (this.designerState.schemas[0].entityTypes && this.designerState.schemas[0].entityTypes.length > 0) {
                /** @type {?} */
                var entityType = this.designerState.schemas[0].entityTypes[0];
                this.expr.addInjectedEntity(entityType.name, 'Schema', entityType.name, InjectedType.EntityType);
            }
        }
        /** @type {?} */
        var context = new Array();
        if (this.designerState.procInstContext.length > 0) {
            try {
                for (var _j = tslib_1.__values(this.designerState.procInstContext), _k = _j.next(); !_k.done; _k = _j.next()) {
                    var variable = _k.value;
                    context.push(variable);
                    // this.expr.addContext(variable);
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (_k && !_k.done && (_b = _j.return)) _b.call(_j);
                }
                finally { if (e_2) throw e_2.error; }
            }
        }
        if (this.designerState.formalParameterContext.length > 0) {
            var _loop_1 = function (variable) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) { return c.key === variable.key; }))) {
                    context.push(variable);
                }
            };
            try {
                for (var _l = tslib_1.__values(this.designerState.formalParameterContext), _m = _l.next(); !_m.done; _m = _l.next()) {
                    var variable = _m.value;
                    _loop_1(variable);
                }
            }
            catch (e_3_1) { e_3 = { error: e_3_1 }; }
            finally {
                try {
                    if (_m && !_m.done && (_c = _l.return)) _c.call(_l);
                }
                finally { if (e_3) throw e_3.error; }
            }
        }
        if (this.designerState.participantContext.length > 0) {
            var _loop_2 = function (variable) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) { return c.key === variable.key; }))) {
                    context.push(variable);
                }
            };
            try {
                for (var _o = tslib_1.__values(this.designerState.participantContext), _p = _o.next(); !_p.done; _p = _o.next()) {
                    var variable = _p.value;
                    _loop_2(variable);
                }
            }
            catch (e_4_1) { e_4 = { error: e_4_1 }; }
            finally {
                try {
                    if (_p && !_p.done && (_d = _o.return)) _d.call(_o);
                }
                finally { if (e_4) throw e_4.error; }
            }
        }
        if (this.designerState.processVariableContext.length > 0) {
            var _loop_3 = function (variable) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) { return c.key === variable.key; }))) {
                    context.push(variable);
                }
            };
            try {
                for (var _q = tslib_1.__values(this.designerState.processVariableContext), _r = _q.next(); !_r.done; _r = _q.next()) {
                    var variable = _r.value;
                    _loop_3(variable);
                }
            }
            catch (e_5_1) { e_5 = { error: e_5_1 }; }
            finally {
                try {
                    if (_r && !_r.done && (_e = _q.return)) _e.call(_q);
                }
                finally { if (e_5) throw e_5.error; }
            }
        }
        if (context.length > 0) {
            try {
                for (var context_1 = tslib_1.__values(context), context_1_1 = context_1.next(); !context_1_1.done; context_1_1 = context_1.next()) {
                    var v = context_1_1.value;
                    this.expr.addContext(v);
                }
            }
            catch (e_6_1) { e_6 = { error: e_6_1 }; }
            finally {
                try {
                    if (context_1_1 && !context_1_1.done && (_f = context_1.return)) _f.call(context_1);
                }
                finally { if (e_6) throw e_6.error; }
            }
        }
        this.expr.addExpressionText(e.instance.value);
        this.expr.buildExpression().then((/**
         * @param {?} d
         * @return {?}
         */
        function (d) {
            e.formControl.setValue(d);
            e.instance.cd.detectChanges();
        }));
    };
    /**
     * @private
     * @return {?}
     */
    ComponentEditComponent.prototype.getHelpInfo = /**
     * @private
     * @return {?}
     */
    function () {
        return this.service.getHelpMetaData(this.helpId, this.su);
    };
    ComponentEditComponent.decorators = [
        { type: Component, args: [{
                    selector: 'lib-component-edit',
                    template: "<div class=\"f-utils-fill-flex-column farris-overflow-y-auto h-100 m-2\" style=\"background:#FFF;\">\r\n  <form class=\"farris-form farris-card-content-bg farris-card-section mx-2\">\r\n    <div class=\"d-flex flex-wrap flex-column mb-2 pr-4\">\r\n      <div class=\"farris-form-controls-inline farris-form-auto mb-2\">\r\n        <div class=\"farris-group-wrap mx-3\">\r\n          <div class=\"form-group\">\r\n            <label class=\"col-form-label\">\r\n              <span class=\"farris-label-info text-danger\">*</span>\r\n              <span class=\"farris-label-text\">\u6784\u4EF6\u540D\u79F0</span>\r\n            </label>\r\n            <div class=\"farris-input-wrap ml-2\">\r\n              <input type=\"text\" class=\"k-textbox form-control\" name=\"name\" [(ngModel)]=\"component.Name\" />\r\n              <div class=\"farris-feedback valid-feedback\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"farris-form-controls-inline farris-form-auto\">\r\n        <div class=\"farris-group-wrap mx-3\">\r\n          <div class=\"form-group\">\r\n            <label class=\"col-form-label\">\r\n              <span class=\"farris-label-info text-danger\">*</span>\r\n              <span class=\"farris-label-text\">\u6784\u4EF6\u9009\u62E9</span>\r\n            </label>\r\n            <div class=\"farris-input-wrap ml-2\">\r\n              <div #inputGroup class=\"input-group\">\r\n                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"component.MethodCode\" name=\"methodCode\"\r\n                  [readOnly]=\"true\" />\r\n                <div class=\"input-group-append\">\r\n                  <span [style.display]=\"showClearButton ? '' : 'none'\" class=\"input-group-text input-group-clear\"\r\n                    (click)=\"clear()\">\r\n                    <i class=\"f-icon modal_close\"></i>\r\n                  </span>\r\n                  <span class=\"input-group-text\" (click)=\"selectComponent()\" style=\"background: #FFF;\">\r\n                    <i class=\"f-icon f-icon-lookup\"></i>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              <div class=\"farris-feedback valid-feedback\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </form>\r\n  <farris-tabs class=\"f-utils-fill\" #params [value]=\"'params'\" [contentFill]=\"true\">\r\n    <farris-tab title=\"\u53C2\u6570\u5217\u8868\" [id]=\"'params'\">\r\n      <ng-template #content>\r\n        <div class=\"f-utils-fill-flex-column h-100\">\r\n          <farris-datagrid #grid [data]=\"component.ActualParameters\" [columns]=\"columns\" [idField]=\"'Name'\" [fit]=\"true\"\r\n            [fitColumns]=\"true\" [editable]=\"true\" [editMode]=\"'cell'\" [pagination]=\"false\" [showCheckbox]=\"false\" [striped]=\"true\"\r\n            [multiSelect]=\"false\" [afterEdit]=\"afterEdit\" [beforeEdit]=\"beforeEdit\"></farris-datagrid>\r\n        </div>\r\n      </ng-template>\r\n    </farris-tab>\r\n  </farris-tabs>\r\n</div>\r\n\r\n<farris-lookup-grid style=\"display: none;\" #lookup [(ngModel)]=\"value\" [editable]=\"false\" [columns]=\"helpCols\"\r\n  [singleSelect]=\"true\" [title]=\"title\" [displayType]=\"displayType\" [uri]=\"dataUri\"\r\n  [idField]=\"helpFields.idField\" [pagination]=\"true\" [valueField]=\"helpFields.valueField\"\r\n  [textField]=\"helpFields.textField\" [dictPicking]=\"dictPicking\" [dictPicked]=\"dictPicked\">\r\n</farris-lookup-grid>\r\n\r\n<ng-template #footer>\r\n  <button type=\"button\" class=\"btn btn-primary btn-sm mx-2\" (click)=\"clickOK()\">\u786E\u5B9A</button>\r\n  <button type=\"button\" class=\"btn btn-secondary btn-sm\" (click)=\"clickCancel()\">\u53D6\u6D88</button>\r\n</ng-template>",
                    providers: [
                        ComponentEditService,
                        { provide: ServerSideToken, useClass: ComponentEditLookUpService }
                    ],
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    ComponentEditComponent.ctorParameters = function () { return [
        { type: FormBuilder },
        { type: ProcessDesignerUIState },
        { type: ExpressionService },
        { type: ComponentFactoryResolver },
        { type: Injector },
        { type: SessionService },
        { type: BsModalService },
        { type: CommonComponentUiRTService },
        { type: NgZone },
        { type: ComponentEditService },
        { type: ProcessDeUtil },
        { type: MessagerService }
    ]; };
    ComponentEditComponent.propDecorators = {
        cls: [{ type: HostBinding, args: ['class',] }],
        grid: [{ type: ViewChild, args: [DatagridComponent,] }],
        lookup: [{ type: ViewChild, args: [LookupGridComponent,] }],
        footer: [{ type: ViewChild, args: ['footer',] }],
        closeEmitter: [{ type: Output }],
        submitEmitter: [{ type: Output }],
        inputGroup: [{ type: ViewChild, args: ['inputGroup',] }],
        component: [{ type: Input }]
    };
    return ComponentEditComponent;
}());
export { ComponentEditComponent };
if (false) {
    /** @type {?} */
    ComponentEditComponent.prototype.cls;
    /** @type {?} */
    ComponentEditComponent.prototype.grid;
    /** @type {?} */
    ComponentEditComponent.prototype.lookup;
    /** @type {?} */
    ComponentEditComponent.prototype.footer;
    /** @type {?} */
    ComponentEditComponent.prototype.closeEmitter;
    /** @type {?} */
    ComponentEditComponent.prototype.submitEmitter;
    /** @type {?} */
    ComponentEditComponent.prototype.inputGroup;
    /** @type {?} */
    ComponentEditComponent.prototype.showClearButton;
    /**
     * @type {?}
     * @private
     */
    ComponentEditComponent.prototype._component;
    /** @type {?} */
    ComponentEditComponent.prototype.curParameter;
    /** @type {?} */
    ComponentEditComponent.prototype.columns;
    /** @type {?} */
    ComponentEditComponent.prototype.helpFields;
    /** @type {?} */
    ComponentEditComponent.prototype.dataUri;
    /** @type {?} */
    ComponentEditComponent.prototype.helpId;
    /** @type {?} */
    ComponentEditComponent.prototype.su;
    /** @type {?} */
    ComponentEditComponent.prototype.helpCols;
    /** @type {?} */
    ComponentEditComponent.prototype.displayType;
    /** @type {?} */
    ComponentEditComponent.prototype.title;
    /** @type {?} */
    ComponentEditComponent.prototype.value;
    /** @type {?} */
    ComponentEditComponent.prototype.cell;
    /** @type {?} */
    ComponentEditComponent.prototype.beforeEdit;
    /** @type {?} */
    ComponentEditComponent.prototype.afterEdit;
    /** @type {?} */
    ComponentEditComponent.prototype.dictPicking;
    /** @type {?} */
    ComponentEditComponent.prototype.dictPicked;
    /**
     * @type {?}
     * @private
     */
    ComponentEditComponent.prototype.formBuilder;
    /**
     * @type {?}
     * @private
     */
    ComponentEditComponent.prototype.designerState;
    /**
     * @type {?}
     * @private
     */
    ComponentEditComponent.prototype.expr;
    /**
     * @type {?}
     * @private
     */
    ComponentEditComponent.prototype.resolver;
    /**
     * @type {?}
     * @private
     */
    ComponentEditComponent.prototype.injector;
    /**
     * @type {?}
     * @private
     */
    ComponentEditComponent.prototype.sessionSrc;
    /**
     * @type {?}
     * @private
     */
    ComponentEditComponent.prototype.modalService;
    /**
     * @type {?}
     * @private
     */
    ComponentEditComponent.prototype.componentService;
    /**
     * @type {?}
     * @private
     */
    ComponentEditComponent.prototype.ngZone;
    /**
     * @type {?}
     * @private
     */
    ComponentEditComponent.prototype.service;
    /**
     * @type {?}
     * @private
     */
    ComponentEditComponent.prototype.util;
    /**
     * @type {?}
     * @private
     */
    ComponentEditComponent.prototype.message;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcG9uZW50LWVkaXQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzcC13Zi93Zi1wcm9jZXNzLWVkaXRvci8iLCJzb3VyY2VzIjpbImxpYi92aWV3cy92YXJpYWJsZS1zZXR0aW5nL3ZpZXdzL2NvbXBvbmVudC1lZGl0L2NvbXBvbmVudC1lZGl0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsd0JBQXdCLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLFdBQVcsRUFBaUIsTUFBTSxFQUFFLFdBQVcsRUFBRSxZQUFZLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNMLE9BQU8sRUFBYSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUN4RCxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSwwQ0FBMEMsQ0FBQztBQUNsRixPQUFPLEVBQUUsaUJBQWlCLEVBQUUsWUFBWSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDdEUsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUNsRCxPQUFPLEVBQUUsMEJBQTBCLEVBQWtCLE1BQU0sa0JBQWtCLENBQUM7QUFDOUUsT0FBTyxFQUFFLHlCQUF5QixFQUFnQyxNQUFNLDhCQUE4QixDQUFDO0FBRXZHLE9BQU8sRUFBYyxpQkFBaUIsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3BFLE9BQU8sRUFBRSxFQUFFLEVBQXdCLE1BQU0sTUFBTSxDQUFDO0FBRWhELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUMxRCxPQUFPLEVBQUUsbUJBQW1CLEVBQW9CLGVBQWUsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQzNGLE9BQU8sRUFBdUIsdUJBQXVCLEVBQXlCLE1BQU0s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O0lBQ0QsNENBT0M7Ozs7O0lBaFJDLDZDQUFnQzs7Ozs7SUFDaEMsK0NBQTZDOzs7OztJQUM3QyxzQ0FBK0I7Ozs7O0lBQy9CLDBDQUEwQzs7Ozs7SUFDMUMsMENBQTBCOzs7OztJQUMxQiw0Q0FBa0M7Ozs7O0lBQ2xDLDhDQUFvQzs7Ozs7SUFDcEMsa0RBQW9EOzs7OztJQUNwRCx3Q0FBc0I7Ozs7O0lBQ3RCLHlDQUFxQzs7Ozs7SUFDckMsc0NBQTJCOzs7OztJQUMzQix5Q0FBZ0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgQ29tcG9uZW50RmFjdG9yeVJlc29sdmVyLCBJbmplY3RvciwgSW5wdXQsIFZpZXdDaGlsZCwgRWxlbWVudFJlZiwgSG9zdEJpbmRpbmcsIEFmdGVyVmlld0luaXQsIE5nWm9uZSwgVGVtcGxhdGVSZWYsIEV2ZW50RW1pdHRlciwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEZvcm1Hcm91cCwgRm9ybUJ1aWxkZXIgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XHJcbmltcG9ydCB7IFByb2Nlc3NEZXNpZ25lclVJU3RhdGUgfSBmcm9tICcuLi8uLi8uLi8uLi9hcHAvcHJvY2Vzcy1kZXNpZ25lci51aXN0YXRlJztcclxuaW1wb3J0IHsgRXhwcmVzc2lvblNlcnZpY2UsIEluamVjdGVkVHlwZSB9IGZyb20gJ0Bnc3Atc3ZjL2V4cHJlc3Npb24nO1xyXG5pbXBvcnQgeyBTZXNzaW9uU2VydmljZSB9IGZyb20gJ0BlY3AtY2FmL2NhZi1jb21tb24nO1xyXG5pbXBvcnQgeyBCc01vZGFsU2VydmljZSB9IGZyb20gJ0BmYXJyaXMvdWktbW9kYWwnO1xyXG5pbXBvcnQgeyBDb21tb25Db21wb25lbnRVaVJUU2VydmljZSwgU2VsZWN0b3JSZXN1bHQgfSBmcm9tICdAZ3NwLWNtcC9jY21wLXVpJztcclxuaW1wb3J0IHsgU2VsZWN0TWV0YWRhdGFSVENvbXBvbmVudCwgTWV0YWRhdGE0UmVmRHRvLCBNZXRhZGF0YUR0byB9IGZyb20gJ0Bnc3AtbGNtL21ldGFkYXRhcnQtc2VsZWN0b3InO1xyXG5pbXBvcnQgeyBHc3BDb21wb25lbnQgfSBmcm9tICdAZ3NwLWNtcC9jb21tb24tY29tcG9uZW50JztcclxuaW1wb3J0IHsgRGF0YUNvbHVtbiwgRGF0YWdyaWRDb21wb25lbnQgfSBmcm9tICdAZmFycmlzL3VpLWRhdGFncmlkJztcclxuaW1wb3J0IHsgb2YsIGZvcmtKb2luLCBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XHJcbmltcG9ydCB7IFJvd0VkaXRQYXJhbSB9IGZyb20gJ0BmYXJyaXMvdWktZGF0YWdyaWQvbGliL3R5cGVzJztcclxuaW1wb3J0IHsgRWRpdG9yVHlwZXMgfSBmcm9tICdAZmFycmlzL3VpLWRhdGFncmlkLWVkaXRvcnMnO1xyXG5pbXBvcnQgeyBMb29rdXBHcmlkQ29tcG9uZW50LCBMb29rdXBHcmlkUmVzdWx0LCBTZXJ2ZXJTaWRlVG9rZW4gfSBmcm9tICdAZmFycmlzL3VpLWxvb2t1cCc7XHJcbmltcG9ydCB7IFdlYlNlcnZpY2VQYXJhbWV0ZXIsIFBhcmFtZXRlckZldGNoVmFsdWVNb2RlLCBIZWxwRmV0Y2hWYWx1ZVNldHRpbmcgfSBmcm9tICdAZ3NwLWNtcC93c2NtcC1tb2RlbHMnO1xyXG5pbXBvcnQgeyBDb21wb25lbnRFZGl0TG9va1VwU2VydmljZSB9IGZyb20gJy4vY29tcG9uZW50LWVkaXQtbG9va3VwLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBDb21wb25lbnRFZGl0U2VydmljZSB9IGZyb20gJy4vY29tcG9uZW50LWVkaXQuc2VydmljZSc7XHJcbmltcG9ydCB7IENvbXBvbmVudEVudGl0eSwgQWN0dWFsUGFyYW1ldGVyIH0gZnJvbSAnLi9jb21wb25lbnQuZW50aXR5JztcclxuaW1wb3J0IHsgUHJvY2Vzc0RlVXRpbCB9IGZyb20gJy4uLy4uLy4uLy4uL2RvbWFpbi9wcm9jZXNzLWRlLXV0aWwnO1xyXG5pbXBvcnQgeyBNZXNzYWdlclNlcnZpY2UgfSBmcm9tICdAZmFycmlzL3VpLW1lc3NhZ2VyJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnbGliLWNvbXBvbmVudC1lZGl0JyxcclxuICB0ZW1wbGF0ZVVybDogJy4vY29tcG9uZW50LWVkaXQuY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL2NvbXBvbmVudC1lZGl0LmNvbXBvbmVudC5zY3NzJ10sXHJcbiAgcHJvdmlkZXJzOiBbXHJcbiAgICBDb21wb25lbnRFZGl0U2VydmljZSxcclxuICAgIHsgcHJvdmlkZTogU2VydmVyU2lkZVRva2VuLCB1c2VDbGFzczogQ29tcG9uZW50RWRpdExvb2tVcFNlcnZpY2UgfVxyXG4gIF1cclxufSlcclxuZXhwb3J0IGNsYXNzIENvbXBvbmVudEVkaXRDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIEFmdGVyVmlld0luaXQge1xyXG4gIEBIb3N0QmluZGluZygnY2xhc3MnKVxyXG4gIGNscyA9ICdmYXJyaXMtbWFpbi1hcmVhIGZsZXgtY29sdW1uJztcclxuXHJcbiAgQFZpZXdDaGlsZChEYXRhZ3JpZENvbXBvbmVudCkgZ3JpZDogRGF0YWdyaWRDb21wb25lbnQ7XHJcbiAgQFZpZXdDaGlsZChMb29rdXBHcmlkQ29tcG9uZW50KSBsb29rdXA6IExvb2t1cEdyaWRDb21wb25lbnQ7XHJcblxyXG4gIEBWaWV3Q2hpbGQoJ2Zvb3RlcicpIGZvb3RlcjogVGVtcGxhdGVSZWY8YW55PjtcclxuXHJcbiAgQE91dHB1dCgpIGNsb3NlRW1pdHRlciA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xyXG4gIEBPdXRwdXQoKSBzdWJtaXRFbWl0dGVyID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XHJcblxyXG4gIEBWaWV3Q2hpbGQoJ2lucHV0R3JvdXAnKSBpbnB1dEdyb3VwOiBFbGVtZW50UmVmO1xyXG4gIHNob3dDbGVhckJ1dHRvbiA9IGZhbHNlO1xyXG5cclxuICBwcml2YXRlIF9jb21wb25lbnQ6IGFueSA9IG5ldyBDb21wb25lbnRFbnRpdHkoKTtcclxuICBASW5wdXQoKVxyXG4gIHNldCBjb21wb25lbnQoY21wOiBDb21wb25lbnRFbnRpdHkpIHtcclxuICAgIGlmIChjbXAgJiYgY21wLk1ldGhvZENvZGUpIHtcclxuICAgICAgdGhpcy5zZXJ2aWNlLmdldEhlbHBNZXRhRGF0YShjbXAuTWV0YWRhdGFJZCwgJycpLnN1YnNjcmliZShyZSA9PiB7XHJcbiAgICAgICAgY29uc3QgYyA9IEpTT04ucGFyc2UocmUuY29udGVudCk7XHJcbiAgICAgICAgY29uc3Qgb3BlcmF0aW9uID0gYy5vcGVyYXRpb25zLmZpbmQobyA9PiBvLmNvZGUgPT09IGNtcC5NZXRob2RDb2RlKTtcclxuICAgICAgICBpZiAob3BlcmF0aW9uKSB7XHJcbiAgICAgICAgICBjbXAuQWN0dWFsUGFyYW1ldGVycyA9IGNtcC5BY3R1YWxQYXJhbWV0ZXJzLm1hcChhID0+IHtcclxuICAgICAgICAgICAgY29uc3QgcCA9IG9wZXJhdGlvbi5wYXJhbWV0ZXJzLmZpbmQoaSA9PiBpLmNvZGUgPT09IGEuTmFtZSk7XHJcbiAgICAgICAgICAgIGlmIChwKSB7XHJcbiAgICAgICAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgICAgIC4uLmEsXHJcbiAgICAgICAgICAgICAgICBmZXRjaFZhbHVlTW9kZTogcC5mZXRjaFZhbHVlTW9kZSxcclxuICAgICAgICAgICAgICAgIGZldGNoVmFsdWVTZXR0aW5nOiBwLmZldGNoVmFsdWVTZXR0aW5nXHJcbiAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ+W9k+WJjeaehOS7tuaWueazleWPguaVsOS4jeS4gOiHtO+8jOivt+abtOaWsO+8gScpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICAgIHRoaXMuX2NvbXBvbmVudCA9IGNtcDtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCflvZPliY3mnoTku7blt7LkuI3lrZjlnKjmraTmlrnms5XvvIzor7fmm7TmlrDvvIEnKTtcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5fY29tcG9uZW50ID0gbmV3IENvbXBvbmVudEVudGl0eSgpO1xyXG4gICAgfVxyXG4gIH1cclxuICBnZXQgY29tcG9uZW50KCkge1xyXG4gICAgcmV0dXJuIHRoaXMuX2NvbXBvbmVudDtcclxuICB9XHJcblxyXG4gIGN1clBhcmFtZXRlcjogQWN0dWFsUGFyYW1ldGVyO1xyXG4gIGNvbHVtbnMgPSBbXHJcbiAgICB7IGZpZWxkOiAnTmFtZScsIHdpZHRoOiAxMDAsIHRpdGxlOiAn5Y+C5pWw5ZCNJyB9LFxyXG4gICAge1xyXG4gICAgICBmaWVsZDogJ1ZhbHVlJywgd2lkdGg6IDEwMCwgdGl0bGU6ICflj4LmlbDlgLwnLFxyXG4gICAgICBlZGl0b3I6IHtcclxuICAgICAgICB0eXBlOiAnaW5wdXQtZ3JvdXAnLFxyXG4gICAgICAgIG9wdGlvbnM6IHtcclxuICAgICAgICAgIGdyb3VwVGV4dDogJzxpIGNsYXNzPVwiZi1pY29uIGYtaWNvbi1sb29rdXBcIj48L2k+JyxcclxuICAgICAgICAgIGVkaXRhYmxlOiBmYWxzZSxcclxuICAgICAgICAgIGNsaWNrSGFuZGxlOiAoZSkgPT4ge1xyXG4gICAgICAgICAgICBlLmZvcm1Db250cm9sLnNldFZhbHVlKGUuaW5zdGFuY2UudmFsdWUgPyBlLmluc3RhbmNlLnZhbHVlIDogJycpO1xyXG4gICAgICAgICAgICB0aGlzLnNob3dFeHBySGVscChlKTtcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgICBjbGVhcjogKGUpID0+IHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coJ2NsZWFyJywgZSk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgXTtcclxuXHJcbiAgaGVscEZpZWxkczogeyBpZEZpZWxkOiBzdHJpbmcsIHZhbHVlRmllbGQ6IHN0cmluZzsgdGV4dEZpZWxkOiBzdHJpbmcgfSA9IHtcclxuICAgIGlkRmllbGQ6ICcnLFxyXG4gICAgdmFsdWVGaWVsZDogJycsXHJcbiAgICB0ZXh0RmllbGQ6ICcnXHJcbiAgfTtcclxuICBkYXRhVXJpID0gJy9hcGkvcnVudGltZS93Zi92MS4wL2R0UHJvY0RlZnMvZ2V0SGVscERhdGEnO1xyXG4gIGhlbHBJZDtcclxuICBzdTogc3RyaW5nO1xyXG4gIGhlbHBDb2xzID0gW107XHJcbiAgZGlzcGxheVR5cGUgPSAnTGlzdCc7XHJcbiAgdGl0bGUgPSAnJztcclxuICB2YWx1ZTogYW55O1xyXG5cclxuICBjZWxsOiBhbnk7XHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICBwcml2YXRlIGZvcm1CdWlsZGVyOiBGb3JtQnVpbGRlcixcclxuICAgIHByaXZhdGUgZGVzaWduZXJTdGF0ZTogUHJvY2Vzc0Rlc2lnbmVyVUlTdGF0ZSxcclxuICAgIHByaXZhdGUgZXhwcjogRXhwcmVzc2lvblNlcnZpY2UsXHJcbiAgICBwcml2YXRlIHJlc29sdmVyOiBDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIsXHJcbiAgICBwcml2YXRlIGluamVjdG9yOiBJbmplY3RvcixcclxuICAgIHByaXZhdGUgc2Vzc2lvblNyYzogU2Vzc2lvblNlcnZpY2UsXHJcbiAgICBwcml2YXRlIG1vZGFsU2VydmljZTogQnNNb2RhbFNlcnZpY2UsXHJcbiAgICBwcml2YXRlIGNvbXBvbmVudFNlcnZpY2U6IENvbW1vbkNvbXBvbmVudFVpUlRTZXJ2aWNlLFxyXG4gICAgcHJpdmF0ZSBuZ1pvbmU6IE5nWm9uZSxcclxuICAgIHByaXZhdGUgc2VydmljZTogQ29tcG9uZW50RWRpdFNlcnZpY2UsXHJcbiAgICBwcml2YXRlIHV0aWw6IFByb2Nlc3NEZVV0aWwsXHJcbiAgICBwcml2YXRlIG1lc3NhZ2U6IE1lc3NhZ2VyU2VydmljZVxyXG4gICkgeyB9XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gIH1cclxuICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZCB7XHJcbiAgICB0aGlzLm5nWm9uZS5ydW5PdXRzaWRlQW5ndWxhcigoKSA9PiB7XHJcbiAgICAgIHRoaXMuaW5wdXRHcm91cC5uYXRpdmVFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXHJcbiAgICAgICAgJ21vdXNlZW50ZXInLFxyXG4gICAgICAgIHRoaXMub25Nb3VzZUVudGVyLmJpbmQodGhpcylcclxuICAgICAgKTtcclxuICAgICAgdGhpcy5pbnB1dEdyb3VwLm5hdGl2ZUVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcclxuICAgICAgICAnbW91c2VsZWF2ZScsXHJcbiAgICAgICAgdGhpcy5vbk1vdXNlTGVhdmUuYmluZCh0aGlzKVxyXG4gICAgICApO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBvbk1vdXNlRW50ZXIoZXZlbnQpIHtcclxuICAgIHRoaXMuc2hvd0NsZWFyQnV0dG9uID0gdHJ1ZTtcclxuICAgIGlmICh0aGlzLnNob3dDbGVhckJ1dHRvbikge1xyXG4gICAgICB0aGlzLnRvZ2dsZUNsZWFySWNvbihldmVudCwgdHJ1ZSk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIG9uTW91c2VMZWF2ZShldmVudCkge1xyXG4gICAgdGhpcy5zaG93Q2xlYXJCdXR0b24gPSBmYWxzZTtcclxuICAgIHRoaXMudG9nZ2xlQ2xlYXJJY29uKGV2ZW50LCBmYWxzZSk7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIHRvZ2dsZUNsZWFySWNvbihldmVudDogYW55LCBpc1Nob3cgPSBmYWxzZSkge1xyXG4gICAgY29uc3Qgc3RyID0gaXNTaG93ID8gJycgOiAnbm9uZSc7XHJcbiAgICBjb25zdCBjbGVhckljb24gPSBldmVudC50YXJnZXQucXVlcnlTZWxlY3RvcignLmlucHV0LWdyb3VwLWNsZWFyJyk7XHJcbiAgICBpZiAoY2xlYXJJY29uKSB7XHJcbiAgICAgIGNsZWFySWNvbi5zdHlsZS5kaXNwbGF5ID0gc3RyO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcblxyXG4gIGNsaWNrT0soKSB7XHJcbiAgICB0aGlzLmdyaWQuZW5kQ2VsbEVkaXQoKTtcclxuICAgIGlmICh0aGlzLnZhbGlkYXRvcigpKSB7XHJcbiAgICAgIHRoaXMuc3VibWl0RW1pdHRlci5lbWl0KHRoaXMuY29tcG9uZW50KTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMubWVzc2FnZS5pbmZvKCflsJrmnKrpgInmi6nmnoTku7bmlrnms5UhJyk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBjbGlja0NhbmNlbCgpIHtcclxuICAgIHRoaXMuY2xvc2VFbWl0dGVyLmVtaXQoKTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgdmFsaWRhdG9yKCkge1xyXG4gICAgaWYgKCF0aGlzLmNvbXBvbmVudC5NZXRob2RDb2RlIHx8ICF0aGlzLmNvbXBvbmVudC5NZXRhZGF0YUlkKSB7XHJcbiAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxuICAgIHJldHVybiB0cnVlO1xyXG4gIH1cclxuICBiZWZvcmVFZGl0ID0gKHBhcmFtOiBSb3dFZGl0UGFyYW0pID0+IHtcclxuICAgIGNvbnN0IHJvd0RhdGEgPSBwYXJhbS5yb3dEYXRhIGFzIGFueTtcclxuICAgIHN3aXRjaCAocm93RGF0YS5mZXRjaFZhbHVlTW9kZSkge1xyXG4gICAgICBjYXNlIFBhcmFtZXRlckZldGNoVmFsdWVNb2RlLmV4cHJlc3M6XHJcbiAgICAgICAgcGFyYW0uY29sdW1uLmVkaXRvciA9IHtcclxuICAgICAgICAgIHR5cGU6ICdpbnB1dC1ncm91cCcsXHJcbiAgICAgICAgICBvcHRpb25zOiB7XHJcbiAgICAgICAgICAgIGdyb3VwVGV4dDogJzxpIGNsYXNzPVwiZi1pY29uIGYtaWNvbi1sb29rdXBcIj48L2k+JyxcclxuICAgICAgICAgICAgZWRpdGFibGU6IGZhbHNlLFxyXG4gICAgICAgICAgICBjbGlja0hhbmRsZTogKGUpID0+IHtcclxuICAgICAgICAgICAgICBlLmZvcm1Db250cm9sLnNldFZhbHVlKGUuaW5zdGFuY2UudmFsdWUgPyBlLmluc3RhbmNlLnZhbHVlIDogJycpO1xyXG4gICAgICAgICAgICAgIHRoaXMuc2hvd0V4cHJIZWxwKGUpO1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBjbGVhcjogKGUpID0+IHtcclxuICAgICAgICAgICAgICBjb25zb2xlLmxvZygnY2xlYXInLCBlKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICAgIGNhc2UgUGFyYW1ldGVyRmV0Y2hWYWx1ZU1vZGUubm9uZTpcclxuICAgICAgICBwYXJhbS5jb2x1bW4uZWRpdG9yID0ge1xyXG4gICAgICAgICAgdHlwZTogJ2lucHV0LWdyb3VwJyxcclxuICAgICAgICAgIG9wdGlvbnM6IHtcclxuICAgICAgICAgICAgZ3JvdXBUZXh0OiAnPGkgY2xhc3M9XCJmLWljb24gZi1pY29uLWxvb2t1cFwiPjwvaT4nLFxyXG4gICAgICAgICAgICBlZGl0YWJsZTogZmFsc2UsXHJcbiAgICAgICAgICAgIGNsaWNrSGFuZGxlOiAoZSkgPT4ge1xyXG4gICAgICAgICAgICAgIGUuZm9ybUNvbnRyb2wuc2V0VmFsdWUoZS5pbnN0YW5jZS52YWx1ZSA/IGUuaW5zdGFuY2UudmFsdWUgOiAnJyk7XHJcbiAgICAgICAgICAgICAgdGhpcy5zaG93RXhwckhlbHAoZSk7XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGNsZWFyOiAoZSkgPT4ge1xyXG4gICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdjbGVhcicsIGUpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfTtcclxuICAgICAgICBicmVhaztcclxuICAgICAgY2FzZSBQYXJhbWV0ZXJGZXRjaFZhbHVlTW9kZS5jb25zdDpcclxuICAgICAgICBwYXJhbS5jb2x1bW4uZWRpdG9yID0geyB0eXBlOiBFZGl0b3JUeXBlcy5URVhUQk9YLCBvcHRpb25zOiB7fSB9O1xyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgICBjYXNlIFBhcmFtZXRlckZldGNoVmFsdWVNb2RlLmVudW06XHJcbiAgICAgICAgcGFyYW0uY29sdW1uLmVkaXRvciA9IHsgdHlwZTogRWRpdG9yVHlwZXMuVEVYVEJPWCwgb3B0aW9uczoge30gfTtcclxuICAgICAgICBicmVhaztcclxuICAgICAgY2FzZSBQYXJhbWV0ZXJGZXRjaFZhbHVlTW9kZS5oZWxwOlxyXG4gICAgICAgIHBhcmFtLmNvbHVtbi5lZGl0b3IgPSB7XHJcbiAgICAgICAgICB0eXBlOiAnaW5wdXQtZ3JvdXAnLFxyXG4gICAgICAgICAgb3B0aW9uczoge1xyXG4gICAgICAgICAgICBncm91cFRleHQ6ICc8aSBjbGFzcz1cImYtaWNvbiBmLWljb24tbG9va3VwXCI+PC9pPicsXHJcbiAgICAgICAgICAgIGVkaXRhYmxlOiBmYWxzZSxcclxuICAgICAgICAgICAgY2xpY2tIYW5kbGU6IChlKSA9PiB7XHJcbiAgICAgICAgICAgICAgdGhpcy5jZWxsID0gZTtcclxuICAgICAgICAgICAgICB0aGlzLmhlbHBJZCA9IChyb3dEYXRhLmZldGNoVmFsdWVTZXR0aW5nIGFzIEhlbHBGZXRjaFZhbHVlU2V0dGluZykuaGVscElkO1xyXG4gICAgICAgICAgICAgIHRoaXMuc3UgPSAocm93RGF0YS5mZXRjaFZhbHVlU2V0dGluZyBhcyBIZWxwRmV0Y2hWYWx1ZVNldHRpbmcpLnNlcnZpY2VVbml0O1xyXG4gICAgICAgICAgICAgIHRoaXMuZ2V0SGVscEluZm8oKS5zdWJzY3JpYmUocmUgPT4ge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmUpO1xyXG4gICAgICAgICAgICAgICAgY29uc3QgbWV0YSA9IHJlO1xyXG4gICAgICAgICAgICAgICAgY29uc3QgaGVscCA9IEpTT04ucGFyc2UobWV0YS5jb250ZW50KSBhcyBhbnk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmhlbHBDb2xzID0gaGVscC5kYXRhU291cmNlLmNvbHVtbnM7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmRpc3BsYXlUeXBlID0gaGVscC5kaXNwbGF5VHlwZTtcclxuICAgICAgICAgICAgICAgIHRoaXMuaGVscEZpZWxkcyA9IHtcclxuICAgICAgICAgICAgICAgICAgaWRGaWVsZDogaGVscC5pZEZpZWxkLFxyXG4gICAgICAgICAgICAgICAgICB2YWx1ZUZpZWxkOiBoZWxwLnZhbHVlRmllbGQsXHJcbiAgICAgICAgICAgICAgICAgIHRleHRGaWVsZDogaGVscC50ZXh0RmllbGRcclxuICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgICB0aGlzLmxvb2t1cC5vbkNsZWFyKCk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmxvb2t1cC5zaG93RGlhbG9nKCk7XHJcbiAgICAgICAgICAgICAgfSwgZXJyID0+IHtcclxuICAgICAgICAgICAgICAgICAgdGhpcy5tZXNzYWdlLmVycm9yKCfluK7liqnlhYPmlbDmja7kuI3lrZjlnKjvvIzor7fogZTns7vns7vnu5/nrqHnkIblkZjmn6XnnIvljp/lm6DvvIEnKTtcclxuICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgY2xlYXI6IChlKSA9PiB7XHJcbiAgICAgICAgICAgICAgY29uc29sZS5sb2coJ2NsZWFyJywgZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH1cclxuICAgICAgICB9O1xyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIG9mKHRydWUpO1xyXG4gIH1cclxuICBhZnRlckVkaXQgPSAocm93SW5kZXg6IG51bWJlciwgcm93RGF0YTogYW55LCBjb2x1bW4/OiBEYXRhQ29sdW1uKSA9PiB7XHJcbiAgICByZXR1cm4gb2YodHJ1ZSk7XHJcbiAgfVxyXG5cclxuICBjbGVhcigpIHtcclxuICAgIHRoaXMuY29tcG9uZW50ID0gbmV3IENvbXBvbmVudEVudGl0eSgpO1xyXG4gIH1cclxuICBzZWxlY3RDb21wb25lbnQoKSB7XHJcbiAgICBjb25zdCBjb21wRmFjdG9yeSA9IHRoaXMucmVzb2x2ZXIucmVzb2x2ZUNvbXBvbmVudEZhY3RvcnkoU2VsZWN0TWV0YWRhdGFSVENvbXBvbmVudCk7XHJcbiAgICBjb25zdCBjb21wUmVmID0gY29tcEZhY3RvcnkuY3JlYXRlKHRoaXMuaW5qZWN0b3IpO1xyXG4gICAgY29tcFJlZi5pbnN0YW5jZS50eXBlTGlzdCA9ICdXZWJTZXJ2aWNlQ29tcG9uZW50JzsgLy8g55uu5YmN5Y+q6IO95qC55o2u5YWD5pWw5o2u57G75Z6L6L+H5ruk77yM5ZCO57ut5re75Yqg5qCH562+6L+H5rukXHJcbiAgICBjb21wUmVmLmluc3RhbmNlLnNlbGVjdGVkTWV0YWRhdGEuc3Vic2NyaWJlKCgkZXZlbnQ6IE1ldGFkYXRhNFJlZkR0bykgPT4ge1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IG1ldGE6IE1ldGFkYXRhRHRvID0gJGV2ZW50Lm1ldGFkYXRhO1xyXG4gICAgICAgIHRoaXMub3BlbkNvbXBvbmVudFNlbGVjdG9yTmV3KG1ldGEuaWQsIHRoaXMuc2Vzc2lvblNyYy5nZXRVc2VyU2Vzc2lvbklkKCkpO1xyXG4gICAgICB9IGNhdGNoIHtcclxuICAgICAgICBjb25zb2xlLmxvZygnJGV2ZW50JywgJGV2ZW50KTtcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ+iOt+WPluino+aekOaehOS7tuWHuumUmScgKyAkZXZlbnQpO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuXHJcbiAgICBjb25zdCBtb2RhbENvbmZpZyA9IHtcclxuICAgICAgdGl0bGU6ICfmnoTku7bpgInmi6knLFxyXG4gICAgICB3aWR0aDogOTgwLFxyXG4gICAgICBoZWlnaHQ6IDU0OCxcclxuICAgICAgc2hvd0J1dHRvbnM6IGZhbHNlXHJcbiAgICB9O1xyXG4gICAgY29uc3QgZGlhbG9nID0gdGhpcy5tb2RhbFNlcnZpY2Uuc2hvdyhjb21wUmVmLCBtb2RhbENvbmZpZyk7XHJcbiAgICBjb21wUmVmLmluc3RhbmNlLmNsb3NlTW9kYWxFbWl0dGVyLnN1YnNjcmliZSgkZXZlbnQgPT4gZGlhbG9nLmNsb3NlKCkpO1xyXG4gIH1cclxuICBwcml2YXRlIG9wZW5Db21wb25lbnRTZWxlY3Rvck5ldyhtZXRhZGF0YUlkOiBzdHJpbmcsIHNlc3Npb25JZDogc3RyaW5nKSB7XHJcbiAgICB0aGlzLmNvbXBvbmVudFNlcnZpY2Uub3BlblNlbGVjdG9yKG1ldGFkYXRhSWQsIHNlc3Npb25JZCkuc3Vic2NyaWJlKFxyXG4gICAgICAoc2VsZWN0b3JSZXN1bHQ6IFNlbGVjdG9yUmVzdWx0KSA9PiB7XHJcbiAgICAgICAgc2VsZWN0b3JSZXN1bHQuY29uZmlybUV2ZW50LnN1YnNjcmliZShcclxuICAgICAgICAgIChyZXN1bHQ6IEdzcENvbXBvbmVudCkgPT4ge1xyXG4gICAgICAgICAgICBpZiAocmVzdWx0KSB7XHJcbiAgICAgICAgICAgICAgdGhpcy5jb21wb25lbnQuTmFtZSA9IHJlc3VsdC5uYW1lO1xyXG4gICAgICAgICAgICAgIHRoaXMuY29tcG9uZW50Lk1ldGFkYXRhSWQgPSByZXN1bHQuaWQ7XHJcbiAgICAgICAgICAgICAgdGhpcy5jb21wb25lbnQuTWV0aG9kQ29kZSA9IHJlc3VsdC5vcGVyYXRpb25zWzBdLmNvZGU7XHJcbiAgICAgICAgICAgICAgLy8gdGhpcy5jb21wb25lbnQubWV0aG9kTmFtZSA9IHJlc3VsdC5vcGVyYXRpb25zWzBdLm5hbWU7XHJcbiAgICAgICAgICAgICAgdGhpcy5jb21wb25lbnQuQWN0dWFsUGFyYW1ldGVycyA9IFtdO1xyXG5cclxuICAgICAgICAgICAgICBpZiAocmVzdWx0Lm9wZXJhdGlvbnNbMF0ucGFyYW1ldGVycyAmJiByZXN1bHQub3BlcmF0aW9uc1swXS5wYXJhbWV0ZXJzLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuY29tcG9uZW50LkFjdHVhbFBhcmFtZXRlcnMgPSByZXN1bHQub3BlcmF0aW9uc1swXS5wYXJhbWV0ZXJzXHJcbiAgICAgICAgICAgICAgICAgIC5tYXAoKHA6IFdlYlNlcnZpY2VQYXJhbWV0ZXIpID0+IChcclxuICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICBOYW1lOiBwLmNvZGUsIFZhbHVlOiAnJywgVGFnOiBwLmZldGNoVmFsdWVNb2RlLmluZGV4T2YoJ2V4cHJlc3Msbm9uZScpID4gLTEgPyAnZXhwcmVzc2lvbicgOiAnY29uc3RhbnQnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgZmV0Y2hWYWx1ZU1vZGU6IHAuZmV0Y2hWYWx1ZU1vZGUsXHJcbiAgICAgICAgICAgICAgICAgICAgICBmZXRjaFZhbHVlU2V0dGluZzogcC5mZXRjaFZhbHVlU2V0dGluZ1xyXG4gICAgICAgICAgICAgICAgICAgIH0pKTtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH0pO1xyXG4gICAgICB9KTtcclxuICB9XHJcbiAgc2hvd0V4cHJIZWxwKGU6IGFueSkge1xyXG4gICAgaWYgKHRoaXMuZGVzaWduZXJTdGF0ZS5zY2hlbWFzLmxlbmd0aCA+IDApIHtcclxuICAgICAgZm9yIChjb25zdCBzY2hlbWEgb2YgdGhpcy5kZXNpZ25lclN0YXRlLnNjaGVtYXMpIHtcclxuICAgICAgICB0aGlzLmV4cHIuYWRkU2NoZW1hKCdTY2hlbWEnLCBzY2hlbWEpO1xyXG4gICAgICB9XHJcbiAgICAgIGlmICh0aGlzLmRlc2lnbmVyU3RhdGUuc2NoZW1hc1swXS5lbnRpdHlUeXBlcyAmJiB0aGlzLmRlc2lnbmVyU3RhdGUuc2NoZW1hc1swXS5lbnRpdHlUeXBlcy5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgY29uc3QgZW50aXR5VHlwZSA9IHRoaXMuZGVzaWduZXJTdGF0ZS5zY2hlbWFzWzBdLmVudGl0eVR5cGVzWzBdO1xyXG4gICAgICAgIHRoaXMuZXhwci5hZGRJbmplY3RlZEVudGl0eShlbnRpdHlUeXBlLm5hbWUsICdTY2hlbWEnLFxyXG4gICAgICAgICAgZW50aXR5VHlwZS5uYW1lLCBJbmplY3RlZFR5cGUuRW50aXR5VHlwZSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIGNvbnN0IGNvbnRleHQgPSBuZXcgQXJyYXkoKTtcclxuICAgIGlmICh0aGlzLmRlc2lnbmVyU3RhdGUucHJvY0luc3RDb250ZXh0Lmxlbmd0aCA+IDApIHtcclxuICAgICAgZm9yIChjb25zdCB2YXJpYWJsZSBvZiB0aGlzLmRlc2lnbmVyU3RhdGUucHJvY0luc3RDb250ZXh0KSB7XHJcbiAgICAgICAgY29udGV4dC5wdXNoKHZhcmlhYmxlKTtcclxuICAgICAgICAvLyB0aGlzLmV4cHIuYWRkQ29udGV4dCh2YXJpYWJsZSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIGlmICh0aGlzLmRlc2lnbmVyU3RhdGUuZm9ybWFsUGFyYW1ldGVyQ29udGV4dC5sZW5ndGggPiAwKSB7XHJcbiAgICAgIGZvciAoY29uc3QgdmFyaWFibGUgb2YgdGhpcy5kZXNpZ25lclN0YXRlLmZvcm1hbFBhcmFtZXRlckNvbnRleHQpIHtcclxuICAgICAgICBpZiAoIWNvbnRleHQuc29tZShjID0+IGMua2V5ID09PSB2YXJpYWJsZS5rZXkpKSB7XHJcbiAgICAgICAgICBjb250ZXh0LnB1c2godmFyaWFibGUpO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvLyB0aGlzLmV4cHIuYWRkQ29udGV4dCh2YXJpYWJsZSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIGlmICh0aGlzLmRlc2lnbmVyU3RhdGUucGFydGljaXBhbnRDb250ZXh0Lmxlbmd0aCA+IDApIHtcclxuICAgICAgZm9yIChjb25zdCB2YXJpYWJsZSBvZiB0aGlzLmRlc2lnbmVyU3RhdGUucGFydGljaXBhbnRDb250ZXh0KSB7XHJcbiAgICAgICAgaWYgKCFjb250ZXh0LnNvbWUoYyA9PiBjLmtleSA9PT0gdmFyaWFibGUua2V5KSkge1xyXG4gICAgICAgICAgY29udGV4dC5wdXNoKHZhcmlhYmxlKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8gdGhpcy5leHByLmFkZENvbnRleHQodmFyaWFibGUpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICBpZiAodGhpcy5kZXNpZ25lclN0YXRlLnByb2Nlc3NWYXJpYWJsZUNvbnRleHQubGVuZ3RoID4gMCkge1xyXG4gICAgICBmb3IgKGNvbnN0IHZhcmlhYmxlIG9mIHRoaXMuZGVzaWduZXJTdGF0ZS5wcm9jZXNzVmFyaWFibGVDb250ZXh0KSB7XHJcbiAgICAgICAgaWYgKCFjb250ZXh0LnNvbWUoYyA9PiBjLmtleSA9PT0gdmFyaWFibGUua2V5KSkge1xyXG4gICAgICAgICAgY29udGV4dC5wdXNoKHZhcmlhYmxlKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8gdGhpcy5leHByLmFkZENvbnRleHQodmFyaWFibGUpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICBpZiAoY29udGV4dC5sZW5ndGggPiAwKSB7XHJcbiAgICAgIGZvciAoY29uc3QgdiBvZiBjb250ZXh0KSB7XHJcbiAgICAgICAgdGhpcy5leHByLmFkZENvbnRleHQodik7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIHRoaXMuZXhwci5hZGRFeHByZXNzaW9uVGV4dChlLmluc3RhbmNlLnZhbHVlKTtcclxuICAgIHRoaXMuZXhwci5idWlsZEV4cHJlc3Npb24oKS50aGVuKChkOiBzdHJpbmcpID0+IHtcclxuICAgICAgICBlLmZvcm1Db250cm9sLnNldFZhbHVlKGQpO1xyXG4gICAgICAgIGUuaW5zdGFuY2UuY2QuZGV0ZWN0Q2hhbmdlcygpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIGdldEhlbHBJbmZvKCk6IE9ic2VydmFibGU8YW55PiB7XHJcbiAgICByZXR1cm4gdGhpcy5zZXJ2aWNlLmdldEhlbHBNZXRhRGF0YSh0aGlzLmhlbHBJZCwgdGhpcy5zdSk7XHJcbiAgfVxyXG5cclxuICBkaWN0UGlja2luZyA9ICgpID0+IHtcclxuICAgIHJldHVybiBvZih7XHJcbiAgICAgIHNob3dEaWFsb2c6IHRydWUsIGRhdGE6IHtcclxuICAgICAgICBoZWxwSWQ6IHRoaXMuaGVscElkXHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH1cclxuICBkaWN0UGlja2VkID0gKHJvd0RhdGEpID0+IHtcclxuICAgIGlmICh0aGlzLmNlbGwpIHtcclxuICAgICAgY29uc29sZS5sb2cocm93RGF0YSk7XHJcbiAgICAgIHRoaXMuY2VsbC5mb3JtQ29udHJvbC5zZXRWYWx1ZSh0aGlzLnV0aWwuZ2V0VmFsdWUocm93RGF0YSwgdGhpcy5oZWxwRmllbGRzLnZhbHVlRmllbGQpKTtcclxuICAgICAgdGhpcy5jZWxsLmluc3RhbmNlLmNkLmRldGVjdENoYW5nZXMoKTtcclxuICAgICAgcmV0dXJuIG9mKHRydWUpO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iXX0=