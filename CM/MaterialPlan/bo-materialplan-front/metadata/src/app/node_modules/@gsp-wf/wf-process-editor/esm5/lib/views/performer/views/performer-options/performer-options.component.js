/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, HostBinding, Input, NgZone, ViewChild, ElementRef } from '@angular/core';
import { PerformerOptions } from '../../entities/performer-options';
import { ProcessDesignerUIState } from '../../../../app/process-designer.uistate';
import { ExpressionService, InjectedType } from '@gsp-svc/expression';
import { MessagerService } from '@farris/ui-messager';
var PerformerOptionsComponent = /** @class */ (function () {
    function PerformerOptionsComponent(ngZone, designerState, expr, message) {
        this.ngZone = ngZone;
        this.designerState = designerState;
        this.expr = expr;
        this.message = message;
        this.cls = 'farris-main-area flex-column';
        this.showClearButton = false;
        this.historicFirst = false;
        this.excludeProcInstCreator = false;
        this.excludePreActExecutors = false;
        this.excludeAllPassExecutors = false;
        this.autoProcInstCreator = false;
        this.autoPreActExecutors = false;
        this.autoAllPassExecutors = false;
        this.noPerformerStrategyList = [
            { text: '向下流转', value: 'leave' },
            { text: '异常提示', value: 'throwException' }
        ];
        this.exclusionPerformersOptions = [
            { value: 'procInstCreator', name: '流程发起人' },
            { value: 'preActExecutors', name: '上一节点办理人' },
            { value: 'allPassExecutors', name: '所有已办理人员' }
        ];
        this.noPerformerStrategy = this.noPerformerStrategyList[0].value;
    }
    Object.defineProperty(PerformerOptionsComponent.prototype, "options", {
        set: /**
         * @param {?} options
         * @return {?}
         */
        function (options) {
            if (options) {
                this.exclusionPerformers = options.ExclusionPerformers;
                this.noPerformerStrategy = options.NoPerformerStrategy;
                this.historicFirst = options.HistoricFirst;
                this.automaticPerformers = options.automaticPerformers;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PerformerOptionsComponent.prototype, "exclusionPerformers", {
        set: /**
         * @param {?} e
         * @return {?}
         */
        function (e) {
            if (e) {
                if (typeof e === 'string') {
                    this.excludeProcInstCreator = e.indexOf('procInstCreator') > -1;
                    this.excludePreActExecutors = e.indexOf('preActExecutors') > -1;
                }
                else {
                    this.excludeProcInstCreator = e.findIndex((/**
                     * @param {?} i
                     * @return {?}
                     */
                    function (i) { return i === 'procInstCreator'; })) > -1;
                    this.excludePreActExecutors = e.findIndex((/**
                     * @param {?} i
                     * @return {?}
                     */
                    function (i) { return i === 'preActExecutors'; })) > -1;
                    this.excludeAllPassExecutors = e.findIndex((/**
                     * @param {?} i
                     * @return {?}
                     */
                    function (i) { return i === 'allPassExecutors'; })) > -1;
                    this.excludeExprPerformer = e.find((/**
                     * @param {?} i
                     * @return {?}
                     */
                    function (i) { return i.indexOf('expr') > -1; }));
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PerformerOptionsComponent.prototype, "automaticPerformers", {
        set: /**
         * @param {?} e
         * @return {?}
         */
        function (e) {
            if (e && e.length > 0) {
                this.autoProcInstCreator = e.findIndex((/**
                 * @param {?} i
                 * @return {?}
                 */
                function (i) { return i === 'procInstCreator'; })) > -1;
                this.autoPreActExecutors = e.findIndex((/**
                 * @param {?} i
                 * @return {?}
                 */
                function (i) { return i === 'preActExecutors'; })) > -1;
                this.autoAllPassExecutors = e.findIndex((/**
                 * @param {?} i
                 * @return {?}
                 */
                function (i) { return i === 'allPassExecutors'; })) > -1;
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    PerformerOptionsComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @return {?}
     */
    PerformerOptionsComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.ngZone.runOutsideAngular((/**
         * @return {?}
         */
        function () {
            _this.inputGroup.nativeElement.addEventListener('mouseenter', _this.onMouseEnter.bind(_this));
            _this.inputGroup.nativeElement.addEventListener('mouseleave', _this.onMouseLeave.bind(_this));
        }));
    };
    /**
     * @param {?} event
     * @return {?}
     */
    PerformerOptionsComponent.prototype.onMouseEnter = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.showClearButton = true;
        if (this.showClearButton) {
            this.toggleClearIcon(event, true);
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    PerformerOptionsComponent.prototype.onMouseLeave = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.showClearButton = false;
        this.toggleClearIcon(event, false);
    };
    /**
     * @private
     * @param {?} event
     * @param {?=} isShow
     * @return {?}
     */
    PerformerOptionsComponent.prototype.toggleClearIcon = /**
     * @private
     * @param {?} event
     * @param {?=} isShow
     * @return {?}
     */
    function (event, isShow) {
        if (isShow === void 0) { isShow = false; }
        /** @type {?} */
        var str = isShow ? '' : 'none';
        /** @type {?} */
        var clearIcon = event.target.querySelector('.input-group-clear');
        if (clearIcon) {
            clearIcon.style.display = str;
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    PerformerOptionsComponent.prototype.excludeProcInstCreatorClick = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        // this.excludeProcInstCreator = !this.excludeProcInstCreator;
        if (this.excludeProcInstCreator && this.autoProcInstCreator) {
            this.autoProcInstCreator = false;
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    PerformerOptionsComponent.prototype.excludePreActExecutorsClick = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        var _this = this;
        // this.excludePreActExecutors = !this.excludePreActExecutors;
        if (this.autoAllPassExecutors === true && this.excludePreActExecutors === true) {
            this.message.info('所有已办理人员已设置自动审批，上个节点已办理人员默认不允许排除！', (/**
             * @return {?}
             */
            function () {
                _this.excludePreActExecutors = false;
            }));
            return;
        }
        if (this.excludePreActExecutors && this.autoPreActExecutors) {
            this.autoPreActExecutors = false;
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    PerformerOptionsComponent.prototype.excludeAllPassExecutorsClick = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        // this.excludeAllPassExecutors = !this.excludeAllPassExecutors;
        if (this.excludeAllPassExecutors) {
            if (this.autoPreActExecutors) {
                this.autoPreActExecutors = false;
            }
            if (this.autoAllPassExecutors) {
                this.autoAllPassExecutors = false;
            }
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    PerformerOptionsComponent.prototype.autoProcInstCreatorClick = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        var _this = this;
        // if (this.designerState.propertyData.CompleteStrategy !== this.designerState.completeIterator[0].key
        //   && this.autoProcInstCreator === true ) {
        //   this.message.info('【完成策略】为【会签】时，不允许设置自动审批，请了解！', () => {
        //     this.autoProcInstCreator = false;
        //   });
        //   return;
        // }
        if (this.designerState.propertyData.AssignStrategy === this.designerState.assignIterator[2].key
            && this.autoProcInstCreator === true) {
            this.message.info('【分配策略】为【领用】时，不允许设置自动审批，请了解！', (/**
             * @return {?}
             */
            function () {
                _this.autoProcInstCreator = false;
            }));
            return;
        }
        // this.autoProcInstCreator = !this.autoProcInstCreator;
        if (this.autoProcInstCreator && this.excludeProcInstCreator) {
            this.excludeProcInstCreator = false;
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    PerformerOptionsComponent.prototype.autoPreActExecutorsClick = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        var _this = this;
        // if (this.designerState.propertyData.CompleteStrategy !== this.designerState.completeIterator[0].key
        //   && this.autoPreActExecutors === true) {
        //   this.message.info('【完成策略】为【会签】时，不允许设置自动审批，请了解！', () => {
        //     this.autoPreActExecutors = false;
        //   });
        //   return;
        // }
        if (this.designerState.propertyData.AssignStrategy === this.designerState.assignIterator[2].key
            && this.autoPreActExecutors === true) {
            this.message.info('【分配策略】为【领用】时，不允许设置自动审批，请了解！', (/**
             * @return {?}
             */
            function () {
                _this.autoPreActExecutors = false;
            }));
            return;
        }
        if (this.excludeAllPassExecutors === true && this.autoPreActExecutors === true) {
            this.message.info('所有已办理人员已设置不允许审批，所以上个节点已办理人员默认不允许自动审批！', (/**
             * @return {?}
             */
            function () {
                _this.autoPreActExecutors = false;
            }));
            return;
        }
        // this.autoPreActExecutors = !this.autoPreActExecutors;
        if (this.autoPreActExecutors && this.excludePreActExecutors) {
            this.excludePreActExecutors = false;
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    PerformerOptionsComponent.prototype.autoAllPassExecutorsClick = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        var _this = this;
        // if (this.designerState.propertyData.CompleteStrategy !== this.designerState.completeIterator[0].key
        //   && this.autoAllPassExecutors === true) {
        //   this.message.info('【完成策略】为【会签】时，不允许设置自动审批，请了解！', () => {
        //     this.autoAllPassExecutors = false;
        //   });
        //   return;
        // }
        if (this.designerState.propertyData.AssignStrategy === this.designerState.assignIterator[2].key
            && this.autoAllPassExecutors === true) {
            this.message.info('【分配策略】为【领用】时，不允许设置自动审批，请了解！', (/**
             * @return {?}
             */
            function () {
                _this.autoAllPassExecutors = false;
            }));
            return;
        }
        // this.autoAllPassExecutors = !this.autoAllPassExecutors;
        if (this.autoAllPassExecutors) {
            if (this.excludeAllPassExecutors) {
                this.excludeAllPassExecutors = false;
            }
            if (this.excludePreActExecutors) {
                this.excludePreActExecutors = false;
            }
        }
    };
    /**
     * @return {?}
     */
    PerformerOptionsComponent.prototype.getPerformerOptions = /**
     * @return {?}
     */
    function () {
        return {
            ExclusionPerformers: this.getExclusionPerformers(),
            NoPerformerStrategy: this.noPerformerStrategy,
            HistoricFirst: this.historicFirst,
            automaticPerformers: this.getAutoPerformers()
        };
    };
    /**
     * @private
     * @return {?}
     */
    PerformerOptionsComponent.prototype.getExclusionPerformers = /**
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var exclusionPerf = [];
        if (this.excludeProcInstCreator) {
            exclusionPerf.push('procInstCreator');
        }
        if (this.excludePreActExecutors) {
            exclusionPerf.push('preActExecutors');
        }
        if (this.excludeAllPassExecutors) {
            exclusionPerf.push('allPassExecutors');
        }
        if (this.excludeExprPerformer) {
            exclusionPerf.push(this.excludeExprPerformer);
        }
        return exclusionPerf;
    };
    /**
     * @private
     * @return {?}
     */
    PerformerOptionsComponent.prototype.getAutoPerformers = /**
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var autoPerf = new Array();
        if (this.autoProcInstCreator) {
            autoPerf.push('procInstCreator');
        }
        if (this.autoPreActExecutors) {
            autoPerf.push('preActExecutors');
        }
        if (this.autoAllPassExecutors) {
            autoPerf.push('allPassExecutors');
        }
        return autoPerf;
    };
    /**
     * @return {?}
     */
    PerformerOptionsComponent.prototype.openExprEditor = /**
     * @return {?}
     */
    function () {
        var _this = this;
        var e_1, _a, e_2, _b, e_3, _c, e_4, _d, e_5, _e, e_6, _f;
        if (this.designerState.schemas.length > 0) {
            try {
                for (var _g = tslib_1.__values(this.designerState.schemas), _h = _g.next(); !_h.done; _h = _g.next()) {
                    var schema = _h.value;
                    this.expr.addSchema('Schema', schema);
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_h && !_h.done && (_a = _g.return)) _a.call(_g);
                }
                finally { if (e_1) throw e_1.error; }
            }
            if (this.designerState.schemas[0].entityTypes && this.designerState.schemas[0].entityTypes.length > 0) {
                /** @type {?} */
                var entityType = this.designerState.schemas[0].entityTypes[0];
                this.expr.addInjectedEntity(entityType.name, 'Schema', entityType.name, InjectedType.EntityType);
            }
        }
        /** @type {?} */
        var context = new Array();
        if (this.designerState.procInstContext.length > 0) {
            try {
                for (var _j = tslib_1.__values(this.designerState.procInstContext), _k = _j.next(); !_k.done; _k = _j.next()) {
                    var variable = _k.value;
                    context.push(variable);
                    // this.expr.addContext(variable);
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (_k && !_k.done && (_b = _j.return)) _b.call(_j);
                }
                finally { if (e_2) throw e_2.error; }
            }
        }
        if (this.designerState.formalParameterContext.length > 0) {
            var _loop_1 = function (variable) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) { return c.key === variable.key; }))) {
                    context.push(variable);
                }
            };
            try {
                for (var _l = tslib_1.__values(this.designerState.formalParameterContext), _m = _l.next(); !_m.done; _m = _l.next()) {
                    var variable = _m.value;
                    _loop_1(variable);
                }
            }
            catch (e_3_1) { e_3 = { error: e_3_1 }; }
            finally {
                try {
                    if (_m && !_m.done && (_c = _l.return)) _c.call(_l);
                }
                finally { if (e_3) throw e_3.error; }
            }
        }
        if (this.designerState.participantContext.length > 0) {
            var _loop_2 = function (variable) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) { return c.key === variable.key; }))) {
                    context.push(variable);
                }
            };
            try {
                for (var _o = tslib_1.__values(this.designerState.participantContext), _p = _o.next(); !_p.done; _p = _o.next()) {
                    var variable = _p.value;
                    _loop_2(variable);
                }
            }
            catch (e_4_1) { e_4 = { error: e_4_1 }; }
            finally {
                try {
                    if (_p && !_p.done && (_d = _o.return)) _d.call(_o);
                }
                finally { if (e_4) throw e_4.error; }
            }
        }
        if (this.designerState.processVariableContext.length > 0) {
            var _loop_3 = function (variable) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) { return c.key === variable.key; }))) {
                    context.push(variable);
                }
            };
            try {
                for (var _q = tslib_1.__values(this.designerState.processVariableContext), _r = _q.next(); !_r.done; _r = _q.next()) {
                    var variable = _r.value;
                    _loop_3(variable);
                }
            }
            catch (e_5_1) { e_5 = { error: e_5_1 }; }
            finally {
                try {
                    if (_r && !_r.done && (_e = _q.return)) _e.call(_q);
                }
                finally { if (e_5) throw e_5.error; }
            }
        }
        if (context.length > 0) {
            try {
                for (var context_1 = tslib_1.__values(context), context_1_1 = context_1.next(); !context_1_1.done; context_1_1 = context_1.next()) {
                    var v = context_1_1.value;
                    this.expr.addContext(v);
                }
            }
            catch (e_6_1) { e_6 = { error: e_6_1 }; }
            finally {
                try {
                    if (context_1_1 && !context_1_1.done && (_f = context_1.return)) _f.call(context_1);
                }
                finally { if (e_6) throw e_6.error; }
            }
        }
        // if (this.excludeExprPerformer) {
        this.expr.addExpressionText(this.excludeExprPerformer);
        // }
        this.expr.buildExpression().then((/**
         * @param {?} d
         * @return {?}
         */
        function (d) {
            _this.excludeExprPerformer = d;
        }));
    };
    /**
     * @return {?}
     */
    PerformerOptionsComponent.prototype.clear = /**
     * @return {?}
     */
    function () {
        this.excludeExprPerformer = '';
    };
    PerformerOptionsComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-performer-options',
                    template: "<div class=\"f-page\">\r\n  <div class=\"f-utils-fill-flex-column farris-split-section m-2 h-100\">\r\n    <section class=\"f-utils-fill-flex-column h-100\">\r\n      <div class=\"f-section-header pt-2 mx-2\">\r\n        <div class=\"f-title\">\r\n          <h4 class=\"f-title-text\">\u53C2\u4E0E\u8005\u9AD8\u7EA7\u9009\u9879</h4>\r\n        </div>\r\n      </div>\r\n      <div class=\"f-utils-fill-flex-column h-100\">\r\n        <perfect-scrollbar [config]=\"{}\">\r\n          <form class=\"h-100\">\r\n            <div class=\"f-utils-fill-flex-column h-100 pb-4\">\r\n              <div class=\"farris-form form-inline farris-form-inline\">\r\n                <div class=\"col-12 farris-group-auto\">\r\n                  <div class=\"farris-group-wrap pl-3\">\r\n                    <div class=\"form-group farris-form-group\">\r\n                      <div class=\"farris-input-wrap\">\r\n                        <div class=\"custom-control custom-checkbox\">\r\n                          <input class=\"custom-control-input\" name=\"historicFirst\" type=\"checkbox\" id=\"historicFirst\"\r\n                            [(ngModel)]=\"historicFirst\" />\r\n                          <label class=\"custom-control-label\" for=\"historicFirst\">\u518D\u6B21\u8FDB\u5165\u8282\u70B9\u65F6\uFF0C\u529E\u7406\u4EBA\u662F\u8282\u70B9\u7684\u5DF2\u529E\u4EBA\u5458</label>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-9 farris-group-auto mt-2 pr-4\">\r\n                  <div class=\"farris-group-wrap f-form-lable-auto pl-3\">\r\n                    <div class=\"form-group farris-form-group\">\r\n                      <label class=\"col-form-label\">\r\n                        <span class=\"farris-label-text\">\u529E\u7406\u4EBA\u4E3A\u7A7A\u7B56\u7565\uFF1A</span>\r\n                      </label>\r\n                      <div class=\"farris-input-wrap\">\r\n                        <farris-combo-list [(ngModel)]=\"noPerformerStrategy\" name=\"noPerformerStrategy\" [idField]=\"'value'\"\r\n                          [textField]=\"'text'\" [valueField]=\"'value'\" [data]=\"noPerformerStrategyList\" [panelHeight]=\"60\">\r\n                        </farris-combo-list>\r\n                        <div class=\"farris-feedback valid-feedback\"></div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"mx-2 mt-3\">\r\n                  <div class=\"title-content\">\r\n                    <h4 class=\"title-text\">\u6392\u9664\u529E\u7406\u4EBA\u9009\u9879</h4><span class=\"title-line\"></span>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-12 farris-group-auto mt-2\">\r\n                  <div class=\"farris-group-wrap pl-3\">\r\n                    <div class=\"form-group farris-form-group\">\r\n                      <div class=\"farris-input-wrap\">\r\n                        <div class=\"custom-control custom-checkbox\">\r\n                          <input class=\"custom-control-input\" name=\"excludeProcInstCreator\" type=\"checkbox\" id=\"excludeProcInstCreator\"\r\n                            [(ngModel)]=\"excludeProcInstCreator\" (change)=\"excludeProcInstCreatorClick($event)\" />\r\n                          <label class=\"custom-control-label\" for=\"excludeProcInstCreator\">\u6D41\u7A0B\u53D1\u8D77\u4EBA\u9ED8\u8BA4\u4E0D\u53C2\u4E0E\u5BA1\u6279</label>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-12 farris-group-auto mt-2\">\r\n                  <div class=\"farris-group-wrap pl-3\">\r\n                    <div class=\"form-group farris-form-group\">\r\n                      <div class=\"farris-input-wrap\">\r\n                        <div class=\"custom-control custom-checkbox\">\r\n                          <input class=\"custom-control-input\" name=\"excludePreActExecutors\" type=\"checkbox\" id=\"excludePreActExecutors\"\r\n                            [(ngModel)]=\"excludePreActExecutors\" (change)=\"excludePreActExecutorsClick($event)\"/>\r\n                          <label class=\"custom-control-label\" for=\"excludePreActExecutors\">\u4E0A\u4E2A\u8282\u70B9\u5DF2\u529E\u7406\u4EBA\u5458\u9ED8\u8BA4\u4E0D\u53C2\u4E0E\u5BA1\u6279</label>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-12 farris-group-auto mt-2\">\r\n                  <div class=\"farris-group-wrap pl-3\">\r\n                    <div class=\"form-group farris-form-group\">\r\n                      <div class=\"farris-input-wrap\">\r\n                        <div class=\"custom-control custom-checkbox\">\r\n                          <input class=\"custom-control-input\" name=\"excludeAllPassExecutors\" type=\"checkbox\" id=\"excludeAllPassExecutors\"\r\n                            [(ngModel)]=\"excludeAllPassExecutors\" (change)=\"excludeAllPassExecutorsClick($event)\"/>\r\n                          <label class=\"custom-control-label\" for=\"excludeAllPassExecutors\">\u6240\u6709\u5DF2\u529E\u7406\u4EBA\u5458\u9ED8\u8BA4\u4E0D\u53C2\u4E0E\u5BA1\u6279</label>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-11 farris-group-auto pr-4\">\r\n                  <div class=\"farris-group-wrap f-form-lable-auto pl-3\">\r\n                    <div class=\"form-group farris-form-group\">\r\n                      <label class=\"col-form-label\">\r\n                        <span class=\"farris-label-text\">\u6D41\u7A0B\u53D8\u91CF\uFF1A</span>\r\n                      </label>\r\n                      <div class=\"farris-input-wrap\">\r\n                        <div #inputGroup class=\"input-group\">\r\n                          <input type=\"text\" class=\"form-control\" [(ngModel)]=\"excludeExprPerformer\" name=\"excludeExprPerformer\"\r\n                            [readOnly]=\"true\" />\r\n                          <div class=\"input-group-append\">\r\n                            <span [style.display]=\"showClearButton ? '' : 'none'\" class=\"input-group-text input-group-clear\"\r\n                              (click)=\"clear()\">\r\n                              <i class=\"f-icon modal_close\"></i>\r\n                            </span>\r\n                            <span class=\"input-group-text\" (click)=\"openExprEditor()\" style=\"background: #FFF;\">\r\n                              <i class=\"f-icon f-icon-lookup\"></i>\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"farris-feedback valid-feedback\"></div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"mx-2 mt-3\">\r\n                  <div class=\"title-content\">\r\n                    <h4 class=\"title-text\">\u81EA\u52A8\u5BA1\u6279\u9009\u9879</h4><span class=\"title-line\"></span>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-12 farris-group-auto mt-2\">\r\n                  <div class=\"farris-group-wrap pl-3\">\r\n                    <div class=\"form-group farris-form-group\">\r\n                      <div class=\"farris-input-wrap\">\r\n                        <div class=\"custom-control custom-checkbox\">\r\n                          <input class=\"custom-control-input\" name=\"autoProcInstCreator\" type=\"checkbox\" id=\"autoProcInstCreator\"\r\n                            [(ngModel)]=\"autoProcInstCreator\" (change)=\"autoProcInstCreatorClick($event)\" />\r\n                          <label class=\"custom-control-label\" for=\"autoProcInstCreator\">\u6D41\u7A0B\u53D1\u8D77\u4EBA\u9ED8\u8BA4\u81EA\u52A8\u5BA1\u6279\u901A\u8FC7</label>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div><div class=\"col-12 farris-group-auto mt-2\">\r\n                  <div class=\"farris-group-wrap pl-3\">\r\n                    <div class=\"form-group farris-form-group\">\r\n                      <div class=\"farris-input-wrap\">\r\n                        <div class=\"custom-control custom-checkbox\">\r\n                          <input class=\"custom-control-input\" name=\"autoPreActExecutors\" type=\"checkbox\" id=\"autoPreActExecutors\"\r\n                            [(ngModel)]=\"autoPreActExecutors\" (change)=\"autoPreActExecutorsClick($event)\" />\r\n                          <label class=\"custom-control-label\" for=\"autoPreActExecutors\">\u4E0A\u4E00\u8282\u70B9\u529E\u7406\u4EBA\u5458\u9ED8\u8BA4\u81EA\u52A8\u5BA1\u6279\u901A\u8FC7</label>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div><div class=\"col-12 farris-group-auto mt-2\">\r\n                  <div class=\"farris-group-wrap pl-3\">\r\n                    <div class=\"form-group farris-form-group\">\r\n                      <div class=\"farris-input-wrap\">\r\n                        <div class=\"custom-control custom-checkbox\">\r\n                          <input class=\"custom-control-input\" name=\"autoAllPassExecutors\" type=\"checkbox\" id=\"autoAllPassExecutors\"\r\n                            [(ngModel)]=\"autoAllPassExecutors\" (change)=\"autoAllPassExecutorsClick($event)\" />\r\n                          <label class=\"custom-control-label\" for=\"autoAllPassExecutors\">\u6240\u6709\u5DF2\u529E\u7406\u4EBA\u5458\u9ED8\u8BA4\u81EA\u52A8\u5BA1\u6279\u901A\u8FC7</label>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </perfect-scrollbar>\r\n        \r\n      </div>\r\n    </section>\r\n  </div>\r\n</div>",
                    styles: [".item-header{padding:1rem}.item{padding:.5rem 5rem}.title-content{color:#000;display:inline-flex;align-items:center;line-height:1.375rem;position:relative;overflow:hidden;padding:0 0 0 1rem;min-width:450px}.title-content ::before{content:'';width:.25rem;height:1.125rem;background:#59a1ff;border-radius:1px;position:absolute;top:50%;left:0;margin-top:-.5625rem}.title-text{font-size:1rem;line-height:1.375rem;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;margin-bottom:0;margin-right:10px}.title-line{flex-grow:1;border-bottom:1px dashed rgba(0,0,0,.1)}"]
                }] }
    ];
    /** @nocollapse */
    PerformerOptionsComponent.ctorParameters = function () { return [
        { type: NgZone },
        { type: ProcessDesignerUIState },
        { type: ExpressionService },
        { type: MessagerService }
    ]; };
    PerformerOptionsComponent.propDecorators = {
        cls: [{ type: HostBinding, args: ['class',] }],
        options: [{ type: Input }],
        exclusionPerformers: [{ type: Input }],
        inputGroup: [{ type: ViewChild, args: ['inputGroup',] }]
    };
    return PerformerOptionsComponent;
}());
export { PerformerOptionsComponent };
if (false) {
    /** @type {?} */
    PerformerOptionsComponent.prototype.cls;
    /** @type {?} */
    PerformerOptionsComponent.prototype.inputGroup;
    /** @type {?} */
    PerformerOptionsComponent.prototype.showClearButton;
    /** @type {?} */
    PerformerOptionsComponent.prototype.historicFirst;
    /** @type {?} */
    PerformerOptionsComponent.prototype.excludeExprPerformer;
    /** @type {?} */
    PerformerOptionsComponent.prototype.excludeProcInstCreator;
    /** @type {?} */
    PerformerOptionsComponent.prototype.excludePreActExecutors;
    /** @type {?} */
    PerformerOptionsComponent.prototype.excludeAllPassExecutors;
    /** @type {?} */
    PerformerOptionsComponent.prototype.autoProcInstCreator;
    /** @type {?} */
    PerformerOptionsComponent.prototype.autoPreActExecutors;
    /** @type {?} */
    PerformerOptionsComponent.prototype.autoAllPassExecutors;
    /** @type {?} */
    PerformerOptionsComponent.prototype.noPerformerStrategyList;
    /** @type {?} */
    PerformerOptionsComponent.prototype.exclusionPerformersOptions;
    /** @type {?} */
    PerformerOptionsComponent.prototype.noPerformerStrategy;
    /**
     * @type {?}
     * @private
     */
    PerformerOptionsComponent.prototype.ngZone;
    /**
     * @type {?}
     * @private
     */
    PerformerOptionsComponent.prototype.designerState;
    /**
     * @type {?}
     * @private
     */
    PerformerOptionsComponent.prototype.expr;
    /**
     * @type {?}
     * @private
     */
    PerformerOptionsComponent.prototype.message;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGVyZm9ybWVyLW9wdGlvbnMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzcC13Zi93Zi1wcm9jZXNzLWVkaXRvci8iLCJzb3VyY2VzIjpbImxpYi92aWV3cy9wZXJmb3JtZXIvdmlld3MvcGVyZm9ybWVyLW9wdGlvbnMvcGVyZm9ybWVyLW9wdGlvbnMuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxXQUFXLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBaUIsU0FBUyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNwSCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUNwRSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSwwQ0FBMEMsQ0FBQztBQUNsRixPQUFPLEVBQUUsaUJBQWlCLEVBQUUsWUFBWSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDdEUsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBRXREO0lBd0VFLG1DQUNVLE1BQWMsRUFDZCxhQUFxQyxFQUNyQyxJQUF1QixFQUN2QixPQUF3QjtRQUh4QixXQUFNLEdBQU4sTUFBTSxDQUFRO1FBQ2Qsa0JBQWEsR0FBYixhQUFhLENBQXdCO1FBQ3JDLFNBQUksR0FBSixJQUFJLENBQW1CO1FBQ3ZCLFlBQU8sR0FBUCxPQUFPLENBQWlCO1FBckVsQyxRQUFHLEdBQUcsOEJBQThCLENBQUM7UUFzQ3JDLG9CQUFlLEdBQUcsS0FBSyxDQUFDO1FBRXhCLGtCQUFhLEdBQUcsS0FBSyxDQUFDO1FBS3RCLDJCQUFzQixHQUFHLEtBQUssQ0FBQztRQUMvQiwyQkFBc0IsR0FBRyxLQUFLLENBQUM7UUFDL0IsNEJBQXVCLEdBQUcsS0FBSyxDQUFDO1FBRWhDLHdCQUFtQixHQUFHLEtBQUssQ0FBQztRQUM1Qix3QkFBbUIsR0FBRyxLQUFLLENBQUM7UUFDNUIseUJBQW9CLEdB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QyxNQUFNO2dCQUU3QyxzQkFBc0I7Z0JBQ3RCLGlCQUFpQjtnQkFDakIsZUFBZTs7O3NCQVFyQixXQUFXLFNBQUMsT0FBTzswQkFHbkIsS0FBSztzQ0FVTCxLQUFLOzZCQXlCTCxTQUFTLFNBQUMsWUFBWTs7SUFvUnpCLGdDQUFDO0NBQUEsQUFoVUQsSUFnVUM7U0EzVFkseUJBQXlCOzs7SUFDcEMsd0NBQ3FDOztJQXFDckMsK0NBQWdEOztJQUNoRCxvREFBd0I7O0lBRXhCLGtEQUFzQjs7SUFFdEIseURBQTZCOztJQUc3QiwyREFBK0I7O0lBQy9CLDJEQUErQjs7SUFDL0IsNERBQWdDOztJQUVoQyx3REFBNEI7O0lBQzVCLHdEQUE0Qjs7SUFDNUIseURBQTZCOztJQUU3Qiw0REFFNkM7O0lBRTdDLCtEQUlFOztJQUVGLHdEQUFvRTs7Ozs7SUFHbEUsMkNBQXNCOzs7OztJQUN0QixrREFBNkM7Ozs7O0lBQzdDLHlDQUErQjs7Ozs7SUFDL0IsNENBQWdDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIEhvc3RCaW5kaW5nLCBJbnB1dCwgTmdab25lLCBBZnRlclZpZXdJbml0LCBWaWV3Q2hpbGQsIEVsZW1lbnRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgUGVyZm9ybWVyT3B0aW9ucyB9IGZyb20gJy4uLy4uL2VudGl0aWVzL3BlcmZvcm1lci1vcHRpb25zJztcclxuaW1wb3J0IHsgUHJvY2Vzc0Rlc2lnbmVyVUlTdGF0ZSB9IGZyb20gJy4uLy4uLy4uLy4uL2FwcC9wcm9jZXNzLWRlc2lnbmVyLnVpc3RhdGUnO1xyXG5pbXBvcnQgeyBFeHByZXNzaW9uU2VydmljZSwgSW5qZWN0ZWRUeXBlIH0gZnJvbSAnQGdzcC1zdmMvZXhwcmVzc2lvbic7XHJcbmltcG9ydCB7IE1lc3NhZ2VyU2VydmljZSB9IGZyb20gJ0BmYXJyaXMvdWktbWVzc2FnZXInO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhcHAtcGVyZm9ybWVyLW9wdGlvbnMnLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9wZXJmb3JtZXItb3B0aW9ucy5jb21wb25lbnQuaHRtbCcsXHJcbiAgc3R5bGVVcmxzOiBbJy4vcGVyZm9ybWVyLW9wdGlvbnMuY29tcG9uZW50LnNjc3MnXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgUGVyZm9ybWVyT3B0aW9uc0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgQWZ0ZXJWaWV3SW5pdCB7XHJcbiAgQEhvc3RCaW5kaW5nKCdjbGFzcycpXHJcbiAgY2xzID0gJ2ZhcnJpcy1tYWluLWFyZWEgZmxleC1jb2x1bW4nO1xyXG5cclxuICBASW5wdXQoKVxyXG4gIHNldCBvcHRpb25zKG9wdGlvbnM6IFBlcmZvcm1lck9wdGlvbnMpIHtcclxuICAgIGlmIChvcHRpb25zKSB7XHJcbiAgICAgIHRoaXMuZXhjbHVzaW9uUGVyZm9ybWVycyA9IG9wdGlvbnMuRXhjbHVzaW9uUGVyZm9ybWVycztcclxuICAgICAgdGhpcy5ub1BlcmZvcm1lclN0cmF0ZWd5ID0gb3B0aW9ucy5Ob1BlcmZvcm1lclN0cmF0ZWd5O1xyXG4gICAgICB0aGlzLmhpc3RvcmljRmlyc3QgPSBvcHRpb25zLkhpc3RvcmljRmlyc3Q7XHJcbiAgICAgIHRoaXMuYXV0b21hdGljUGVyZm9ybWVycyA9IG9wdGlvbnMuYXV0b21hdGljUGVyZm9ybWVycztcclxuICAgIH1cclxuICB9XHJcblxyXG4gIEBJbnB1dCgpXHJcbiAgc2V0IGV4Y2x1c2lvblBlcmZvcm1lcnMoZTogc3RyaW5nIHwgQXJyYXk8c3RyaW5nPikge1xyXG4gICAgaWYgKGUpIHtcclxuICAgICAgaWYgKHR5cGVvZiBlID09PSAnc3RyaW5nJykge1xyXG4gICAgICAgIHRoaXMuZXhjbHVkZVByb2NJbnN0Q3JlYXRvciA9IGUuaW5kZXhPZigncHJvY0luc3RDcmVhdG9yJykgPiAtMTtcclxuICAgICAgICB0aGlzLmV4Y2x1ZGVQcmVBY3RFeGVjdXRvcnMgPSBlLmluZGV4T2YoJ3ByZUFjdEV4ZWN1dG9ycycpID4gLTE7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgdGhpcy5leGNsdWRlUHJvY0luc3RDcmVhdG9yID0gZS5maW5kSW5kZXgoaSA9PiBpID09PSAncHJvY0luc3RDcmVhdG9yJykgPiAtMTtcclxuICAgICAgICB0aGlzLmV4Y2x1ZGVQcmVBY3RFeGVjdXRvcnMgPSBlLmZpbmRJbmRleChpID0+IGkgPT09ICdwcmVBY3RFeGVjdXRvcnMnKSA+IC0xO1xyXG4gICAgICAgIHRoaXMuZXhjbHVkZUFsbFBhc3NFeGVjdXRvcnMgPSBlLmZpbmRJbmRleChpID0+IGkgPT09ICdhbGxQYXNzRXhlY3V0b3JzJykgPiAtMTtcclxuXHJcbiAgICAgICAgdGhpcy5leGNsdWRlRXhwclBlcmZvcm1lciA9IGUuZmluZChpID0+IGkuaW5kZXhPZignZXhwcicpID4gLTEpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBzZXQgYXV0b21hdGljUGVyZm9ybWVycyhlOiBBcnJheTxzdHJpbmc+KSB7XHJcbiAgICBpZiAoZSAmJiBlLmxlbmd0aCA+IDApIHtcclxuICAgICAgdGhpcy5hdXRvUHJvY0luc3RDcmVhdG9yID0gZS5maW5kSW5kZXgoaSA9PiBpID09PSAncHJvY0luc3RDcmVhdG9yJykgPiAtMTtcclxuICAgICAgdGhpcy5hdXRvUHJlQWN0RXhlY3V0b3JzID0gZS5maW5kSW5kZXgoaSA9PiBpID09PSAncHJlQWN0RXhlY3V0b3JzJykgPiAtMTtcclxuICAgICAgdGhpcy5hdXRvQWxsUGFzc0V4ZWN1dG9ycyA9IGUuZmluZEluZGV4KGkgPT4gaSA9PT0gJ2FsbFBhc3NFeGVjdXRvcnMnKSA+IC0xO1xyXG4gICAgfVxyXG5cclxuICB9XHJcblxyXG4gIEBWaWV3Q2hpbGQoJ2lucHV0R3JvdXAnKSBpbnB1dEdyb3VwOiBFbGVtZW50UmVmO1xyXG4gIHNob3dDbGVhckJ1dHRvbiA9IGZhbHNlO1xyXG5cclxuICBoaXN0b3JpY0ZpcnN0ID0gZmFsc2U7XHJcblxyXG4gIGV4Y2x1ZGVFeHByUGVyZm9ybWVyOiBzdHJpbmc7XHJcblxyXG5cclxuICBleGNsdWRlUHJvY0luc3RDcmVhdG9yID0gZmFsc2U7XHJcbiAgZXhjbHVkZVByZUFjdEV4ZWN1dG9ycyA9IGZhbHNlO1xyXG4gIGV4Y2x1ZGVBbGxQYXNzRXhlY3V0b3JzID0gZmFsc2U7XHJcblxyXG4gIGF1dG9Qcm9jSW5zdENyZWF0b3IgPSBmYWxzZTtcclxuICBhdXRvUHJlQWN0RXhlY3V0b3JzID0gZmFsc2U7XHJcbiAgYXV0b0FsbFBhc3NFeGVjdXRvcnMgPSBmYWxzZTtcclxuXHJcbiAgbm9QZXJmb3JtZXJTdHJhdGVneUxpc3QgPSBbXHJcbiAgICB7IHRleHQ6ICflkJHkuIvmtYHovawnLCB2YWx1ZTogJ2xlYXZlJyB9LFxyXG4gICAgeyB0ZXh0OiAn5byC5bi45o+Q56S6JywgdmFsdWU6ICd0aHJvd0V4Y2VwdGlvbicgfV07XHJcblxyXG4gIGV4Y2x1c2lvblBlcmZvcm1lcnNPcHRpb25zID0gW1xyXG4gICAgeyB2YWx1ZTogJ3Byb2NJbnN0Q3JlYXRvcicsIG5hbWU6ICfmtYHnqIvlj5HotbfkuronIH0sXHJcbiAgICB7IHZhbHVlOiAncHJlQWN0RXhlY3V0b3JzJywgbmFtZTogJ+S4iuS4gOiKgueCueWKnueQhuS6uicgfSxcclxuICAgIHsgdmFsdWU6ICdhbGxQYXNzRXhlY3V0b3JzJywgbmFtZTogJ+aJgOacieW3suWKnueQhuS6uuWRmCcgfVxyXG4gIF07XHJcblxyXG4gIG5vUGVyZm9ybWVyU3RyYXRlZ3k6IHN0cmluZyA9IHRoaXMubm9QZXJmb3JtZXJTdHJhdGVneUxpc3RbMF0udmFsdWU7XHJcblxyXG4gIGNvbnN0cnVjdG9yKFxyXG4gICAgcHJpdmF0ZSBuZ1pvbmU6IE5nWm9uZSxcclxuICAgIHByaXZhdGUgZGVzaWduZXJTdGF0ZTogUHJvY2Vzc0Rlc2lnbmVyVUlTdGF0ZSxcclxuICAgIHByaXZhdGUgZXhwcjogRXhwcmVzc2lvblNlcnZpY2UsXHJcbiAgICBwcml2YXRlIG1lc3NhZ2U6IE1lc3NhZ2VyU2VydmljZVxyXG4gICkgeyB9XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gIH1cclxuXHJcbiAgbmdBZnRlclZpZXdJbml0KCk6IHZvaWQge1xyXG4gICAgdGhpcy5uZ1pvbmUucnVuT3V0c2lkZUFuZ3VsYXIoKCkgPT4ge1xyXG4gICAgICB0aGlzLmlucHV0R3JvdXAubmF0aXZlRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFxyXG4gICAgICAgICdtb3VzZWVudGVyJyxcclxuICAgICAgICB0aGlzLm9uTW91c2VFbnRlci5iaW5kKHRoaXMpXHJcbiAgICAgICk7XHJcbiAgICAgIHRoaXMuaW5wdXRHcm91cC5uYXRpdmVFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXHJcbiAgICAgICAgJ21vdXNlbGVhdmUnLFxyXG4gICAgICAgIHRoaXMub25Nb3VzZUxlYXZlLmJpbmQodGhpcylcclxuICAgICAgKTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgb25Nb3VzZUVudGVyKGV2ZW50KSB7XHJcbiAgICB0aGlzLnNob3dDbGVhckJ1dHRvbiA9IHRydWU7XHJcbiAgICBpZiAodGhpcy5zaG93Q2xlYXJCdXR0b24pIHtcclxuICAgICAgdGhpcy50b2dnbGVDbGVhckljb24oZXZlbnQsIHRydWUpO1xyXG4gICAgfVxyXG4gIH1cclxuICBvbk1vdXNlTGVhdmUoZXZlbnQpIHtcclxuICAgIHRoaXMuc2hvd0NsZWFyQnV0dG9uID0gZmFsc2U7XHJcbiAgICB0aGlzLnRvZ2dsZUNsZWFySWNvbihldmVudCwgZmFsc2UpO1xyXG4gIH1cclxuICBwcml2YXRlIHRvZ2dsZUNsZWFySWNvbihldmVudDogYW55LCBpc1Nob3cgPSBmYWxzZSkge1xyXG4gICAgY29uc3Qgc3RyID0gaXNTaG93ID8gJycgOiAnbm9uZSc7XHJcbiAgICBjb25zdCBjbGVhckljb24gPSBldmVudC50YXJnZXQucXVlcnlTZWxlY3RvcignLmlucHV0LWdyb3VwLWNsZWFyJyk7XHJcbiAgICBpZiAoY2xlYXJJY29uKSB7XHJcbiAgICAgIGNsZWFySWNvbi5zdHlsZS5kaXNwbGF5ID0gc3RyO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZXhjbHVkZVByb2NJbnN0Q3JlYXRvckNsaWNrKGV2ZW50OiBhbnkpIHtcclxuICAgIC8vIHRoaXMuZXhjbHVkZVByb2NJbnN0Q3JlYXRvciA9ICF0aGlzLmV4Y2x1ZGVQcm9jSW5zdENyZWF0b3I7XHJcbiAgICBpZiAodGhpcy5leGNsdWRlUHJvY0luc3RDcmVhdG9yICYmIHRoaXMuYXV0b1Byb2NJbnN0Q3JlYXRvcikge1xyXG4gICAgICB0aGlzLmF1dG9Qcm9jSW5zdENyZWF0b3IgPSBmYWxzZTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGV4Y2x1ZGVQcmVBY3RFeGVjdXRvcnNDbGljayhldmVudDogYW55KSB7XHJcbiAgICAvLyB0aGlzLmV4Y2x1ZGVQcmVBY3RFeGVjdXRvcnMgPSAhdGhpcy5leGNsdWRlUHJlQWN0RXhlY3V0b3JzO1xyXG4gICAgaWYgKHRoaXMuYXV0b0FsbFBhc3NFeGVjdXRvcnMgPT09IHRydWUgJiYgdGhpcy5leGNsdWRlUHJlQWN0RXhlY3V0b3JzID09PSB0cnVlKSB7XHJcbiAgICAgIHRoaXMubWVzc2FnZS5pbmZvKCfmiYDmnInlt7Llip7nkIbkurrlkZjlt7Lorr7nva7oh6rliqjlrqHmibnvvIzkuIrkuKroioLngrnlt7Llip7nkIbkurrlkZjpu5jorqTkuI3lhYHorrjmjpLpmaTvvIEnLCAoKSA9PiB7XHJcbiAgICAgICAgdGhpcy5leGNsdWRlUHJlQWN0RXhlY3V0b3JzID0gZmFsc2U7XHJcbiAgICAgIH0pO1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBpZiAodGhpcy5leGNsdWRlUHJlQWN0RXhlY3V0b3JzICYmIHRoaXMuYXV0b1ByZUFjdEV4ZWN1dG9ycykge1xyXG4gICAgICB0aGlzLmF1dG9QcmVBY3RFeGVjdXRvcnMgPSBmYWxzZTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGV4Y2x1ZGVBbGxQYXNzRXhlY3V0b3JzQ2xpY2soZXZlbnQ6IGFueSkge1xyXG4gICAgLy8gdGhpcy5leGNsdWRlQWxsUGFzc0V4ZWN1dG9ycyA9ICF0aGlzLmV4Y2x1ZGVBbGxQYXNzRXhlY3V0b3JzO1xyXG4gICAgaWYgKHRoaXMuZXhjbHVkZUFsbFBhc3NFeGVjdXRvcnMpIHtcclxuICAgICAgaWYgKHRoaXMuYXV0b1ByZUFjdEV4ZWN1dG9ycykge1xyXG4gICAgICAgIHRoaXMuYXV0b1ByZUFjdEV4ZWN1dG9ycyA9IGZhbHNlO1xyXG4gICAgICB9XHJcbiAgICAgIGlmICh0aGlzLmF1dG9BbGxQYXNzRXhlY3V0b3JzKSB7XHJcbiAgICAgICAgdGhpcy5hdXRvQWxsUGFzc0V4ZWN1dG9ycyA9IGZhbHNlO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gIH1cclxuXHJcbiAgYXV0b1Byb2NJbnN0Q3JlYXRvckNsaWNrKGV2ZW50OiBhbnkpIHtcclxuICAgIC8vIGlmICh0aGlzLmRlc2lnbmVyU3RhdGUucHJvcGVydHlEYXRhLkNvbXBsZXRlU3RyYXRlZ3kgIT09IHRoaXMuZGVzaWduZXJTdGF0ZS5jb21wbGV0ZUl0ZXJhdG9yWzBdLmtleVxyXG4gICAgLy8gICAmJiB0aGlzLmF1dG9Qcm9jSW5zdENyZWF0b3IgPT09IHRydWUgKSB7XHJcbiAgICAvLyAgIHRoaXMubWVzc2FnZS5pbmZvKCfjgJDlrozmiJDnrZbnlaXjgJHkuLrjgJDkvJrnrb7jgJHml7bvvIzkuI3lhYHorrjorr7nva7oh6rliqjlrqHmibnvvIzor7fkuobop6PvvIEnLCAoKSA9PiB7XHJcbiAgICAvLyAgICAgdGhpcy5hdXRvUHJvY0luc3RDcmVhdG9yID0gZmFsc2U7XHJcbiAgICAvLyAgIH0pO1xyXG4gICAgLy8gICByZXR1cm47XHJcbiAgICAvLyB9XHJcbiAgICBpZiAodGhpcy5kZXNpZ25lclN0YXRlLnByb3BlcnR5RGF0YS5Bc3NpZ25TdHJhdGVneSA9PT0gdGhpcy5kZXNpZ25lclN0YXRlLmFzc2lnbkl0ZXJhdG9yWzJdLmtleVxyXG4gICAgICAmJiB0aGlzLmF1dG9Qcm9jSW5zdENyZWF0b3IgPT09IHRydWUgKSB7XHJcbiAgICAgIHRoaXMubWVzc2FnZS5pbmZvKCfjgJDliIbphY3nrZbnlaXjgJHkuLrjgJDpoobnlKjjgJHml7bvvIzkuI3lhYHorrjorr7nva7oh6rliqjlrqHmibnvvIzor7fkuobop6PvvIEnLCAoKSA9PiB7XHJcbiAgICAgICAgdGhpcy5hdXRvUHJvY0luc3RDcmVhdG9yID0gZmFsc2U7XHJcbiAgICAgIH0pO1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICAvLyB0aGlzLmF1dG9Qcm9jSW5zdENyZWF0b3IgPSAhdGhpcy5hdXRvUHJvY0luc3RDcmVhdG9yO1xyXG4gICAgaWYgKHRoaXMuYXV0b1Byb2NJbnN0Q3JlYXRvciAmJiB0aGlzLmV4Y2x1ZGVQcm9jSW5zdENyZWF0b3IpIHtcclxuICAgICAgdGhpcy5leGNsdWRlUHJvY0luc3RDcmVhdG9yID0gZmFsc2U7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBhdXRvUHJlQWN0RXhlY3V0b3JzQ2xpY2soZXZlbnQ6IGFueSkge1xyXG4gICAgLy8gaWYgKHRoaXMuZGVzaWduZXJTdGF0ZS5wcm9wZXJ0eURhdGEuQ29tcGxldGVTdHJhdGVneSAhPT0gdGhpcy5kZXNpZ25lclN0YXRlLmNvbXBsZXRlSXRlcmF0b3JbMF0ua2V5XHJcbiAgICAvLyAgICYmIHRoaXMuYXV0b1ByZUFjdEV4ZWN1dG9ycyA9PT0gdHJ1ZSkge1xyXG4gICAgLy8gICB0aGlzLm1lc3NhZ2UuaW5mbygn44CQ5a6M5oiQ562W55Wl44CR5Li644CQ5Lya562+44CR5pe277yM5LiN5YWB6K646K6+572u6Ieq5Yqo5a6h5om577yM6K+35LqG6Kej77yBJywgKCkgPT4ge1xyXG4gICAgLy8gICAgIHRoaXMuYXV0b1ByZUFjdEV4ZWN1dG9ycyA9IGZhbHNlO1xyXG4gICAgLy8gICB9KTtcclxuICAgIC8vICAgcmV0dXJuO1xyXG4gICAgLy8gfVxyXG4gICAgaWYgKHRoaXMuZGVzaWduZXJTdGF0ZS5wcm9wZXJ0eURhdGEuQXNzaWduU3RyYXRlZ3kgPT09IHRoaXMuZGVzaWduZXJTdGF0ZS5hc3NpZ25JdGVyYXRvclsyXS5rZXlcclxuICAgICAgJiYgdGhpcy5hdXRvUHJlQWN0RXhlY3V0b3JzID09PSB0cnVlKSB7XHJcbiAgICAgIHRoaXMubWVzc2FnZS5pbmZvKCfjgJDliIbphY3nrZbnlaXjgJHkuLrjgJDpoobnlKjjgJHml7bvvIzkuI3lhYHorrjorr7nva7oh6rliqjlrqHmibnvvIzor7fkuobop6PvvIEnLCAoKSA9PiB7XHJcbiAgICAgICAgdGhpcy5hdXRvUHJlQWN0RXhlY3V0b3JzID0gZmFsc2U7XHJcbiAgICAgIH0pO1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBpZiAodGhpcy5leGNsdWRlQWxsUGFzc0V4ZWN1dG9ycyA9PT0gdHJ1ZSAmJiB0aGlzLmF1dG9QcmVBY3RFeGVjdXRvcnMgPT09IHRydWUpIHtcclxuICAgICAgdGhpcy5tZXNzYWdlLmluZm8oJ+aJgOacieW3suWKnueQhuS6uuWRmOW3suiuvue9ruS4jeWFgeiuuOWuoeaJue+8jOaJgOS7peS4iuS4quiKgueCueW3suWKnueQhuS6uuWRmOm7mOiupOS4jeWFgeiuuOiHquWKqOWuoeaJue+8gScsICgpID0+IHtcclxuICAgICAgICB0aGlzLmF1dG9QcmVBY3RFeGVjdXRvcnMgPSBmYWxzZTtcclxuICAgICAgfSk7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIC8vIHRoaXMuYXV0b1ByZUFjdEV4ZWN1dG9ycyA9ICF0aGlzLmF1dG9QcmVBY3RFeGVjdXRvcnM7XHJcbiAgICBpZiAodGhpcy5hdXRvUHJlQWN0RXhlY3V0b3JzICYmIHRoaXMuZXhjbHVkZVByZUFjdEV4ZWN1dG9ycykge1xyXG4gICAgICB0aGlzLmV4Y2x1ZGVQcmVBY3RFeGVjdXRvcnMgPSBmYWxzZTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGF1dG9BbGxQYXNzRXhlY3V0b3JzQ2xpY2soZXZlbnQ6IGFueSkge1xyXG4gICAgLy8gaWYgKHRoaXMuZGVzaWduZXJTdGF0ZS5wcm9wZXJ0eURhdGEuQ29tcGxldGVTdHJhdGVneSAhPT0gdGhpcy5kZXNpZ25lclN0YXRlLmNvbXBsZXRlSXRlcmF0b3JbMF0ua2V5XHJcbiAgICAvLyAgICYmIHRoaXMuYXV0b0FsbFBhc3NFeGVjdXRvcnMgPT09IHRydWUpIHtcclxuICAgIC8vICAgdGhpcy5tZXNzYWdlLmluZm8oJ+OAkOWujOaIkOetlueVpeOAkeS4uuOAkOS8muetvuOAkeaXtu+8jOS4jeWFgeiuuOiuvue9ruiHquWKqOWuoeaJue+8jOivt+S6huino++8gScsICgpID0+IHtcclxuICAgIC8vICAgICB0aGlzLmF1dG9BbGxQYXNzRXhlY3V0b3JzID0gZmFsc2U7XHJcbiAgICAvLyAgIH0pO1xyXG4gICAgLy8gICByZXR1cm47XHJcbiAgICAvLyB9XHJcbiAgICBpZiAodGhpcy5kZXNpZ25lclN0YXRlLnByb3BlcnR5RGF0YS5Bc3NpZ25TdHJhdGVneSA9PT0gdGhpcy5kZXNpZ25lclN0YXRlLmFzc2lnbkl0ZXJhdG9yWzJdLmtleVxyXG4gICAgICAmJiB0aGlzLmF1dG9BbGxQYXNzRXhlY3V0b3JzID09PSB0cnVlKSB7XHJcbiAgICAgIHRoaXMubWVzc2FnZS5pbmZvKCfjgJDliIbphY3nrZbnlaXjgJHkuLrjgJDpoobnlKjjgJHml7bvvIzkuI3lhYHorrjorr7nva7oh6rliqjlrqHmibnvvIzor7fkuobop6PvvIEnLCAoKSA9PiB7XHJcbiAgICAgICAgdGhpcy5hdXRvQWxsUGFzc0V4ZWN1dG9ycyA9IGZhbHNlO1xyXG4gICAgICB9KTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgLy8gdGhpcy5hdXRvQWxsUGFzc0V4ZWN1dG9ycyA9ICF0aGlzLmF1dG9BbGxQYXNzRXhlY3V0b3JzO1xyXG4gICAgaWYgKHRoaXMuYXV0b0FsbFBhc3NFeGVjdXRvcnMpIHtcclxuICAgICAgaWYgKHRoaXMuZXhjbHVkZUFsbFBhc3NFeGVjdXRvcnMpIHtcclxuICAgICAgICB0aGlzLmV4Y2x1ZGVBbGxQYXNzRXhlY3V0b3JzID0gZmFsc2U7XHJcbiAgICAgIH1cclxuICAgICAgaWYgKHRoaXMuZXhjbHVkZVByZUFjdEV4ZWN1dG9ycykge1xyXG4gICAgICAgIHRoaXMuZXhjbHVkZVByZUFjdEV4ZWN1dG9ycyA9IGZhbHNlO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBnZXRQZXJmb3JtZXJPcHRpb25zKCk6IFBlcmZvcm1lck9wdGlvbnMge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgRXhjbHVzaW9uUGVyZm9ybWVyczogdGhpcy5nZXRFeGNsdXNpb25QZXJmb3JtZXJzKCksXHJcbiAgICAgIE5vUGVyZm9ybWVyU3RyYXRlZ3k6IHRoaXMubm9QZXJmb3JtZXJTdHJhdGVneSxcclxuICAgICAgSGlzdG9yaWNGaXJzdDogdGhpcy5oaXN0b3JpY0ZpcnN0LFxyXG4gICAgICBhdXRvbWF0aWNQZXJmb3JtZXJzOiB0aGlzLmdldEF1dG9QZXJmb3JtZXJzKClcclxuICAgIH07XHJcbiAgfVxyXG4gIHByaXZhdGUgZ2V0RXhjbHVzaW9uUGVyZm9ybWVycygpOiBzdHJpbmdbXSB7XHJcbiAgICBjb25zdCBleGNsdXNpb25QZXJmOiBBcnJheTxzdHJpbmc+ID0gW107XHJcbiAgICBpZiAodGhpcy5leGNsdWRlUHJvY0luc3RDcmVhdG9yKSB7XHJcbiAgICAgIGV4Y2x1c2lvblBlcmYucHVzaCgncHJvY0luc3RDcmVhdG9yJyk7XHJcbiAgICB9XHJcbiAgICBpZiAodGhpcy5leGNsdWRlUHJlQWN0RXhlY3V0b3JzKSB7XHJcbiAgICAgIGV4Y2x1c2lvblBlcmYucHVzaCgncHJlQWN0RXhlY3V0b3JzJyk7XHJcbiAgICB9XHJcbiAgICBpZiAodGhpcy5leGNsdWRlQWxsUGFzc0V4ZWN1dG9ycykge1xyXG4gICAgICBleGNsdXNpb25QZXJmLnB1c2goJ2FsbFBhc3NFeGVjdXRvcnMnKTtcclxuICAgIH1cclxuICAgIGlmICh0aGlzLmV4Y2x1ZGVFeHByUGVyZm9ybWVyKSB7XHJcbiAgICAgIGV4Y2x1c2lvblBlcmYucHVzaCh0aGlzLmV4Y2x1ZGVFeHByUGVyZm9ybWVyKTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gZXhjbHVzaW9uUGVyZjtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgZ2V0QXV0b1BlcmZvcm1lcnMoKTogQXJyYXk8c3RyaW5nPiB7XHJcbiAgICBjb25zdCBhdXRvUGVyZjogQXJyYXk8c3RyaW5nPiA9IG5ldyBBcnJheSgpO1xyXG4gICAgaWYgKHRoaXMuYXV0b1Byb2NJbnN0Q3JlYXRvcikge1xyXG4gICAgICBhdXRvUGVyZi5wdXNoKCdwcm9jSW5zdENyZWF0b3InKTtcclxuICAgIH1cclxuICAgIGlmICh0aGlzLmF1dG9QcmVBY3RFeGVjdXRvcnMpIHtcclxuICAgICAgYXV0b1BlcmYucHVzaCgncHJlQWN0RXhlY3V0b3JzJyk7XHJcbiAgICB9XHJcbiAgICBpZiAodGhpcy5hdXRvQWxsUGFzc0V4ZWN1dG9ycykge1xyXG4gICAgICBhdXRvUGVyZi5wdXNoKCdhbGxQYXNzRXhlY3V0b3JzJyk7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIGF1dG9QZXJmO1xyXG4gIH1cclxuXHJcbiAgb3BlbkV4cHJFZGl0b3IoKSB7XHJcbiAgICBpZiAodGhpcy5kZXNpZ25lclN0YXRlLnNjaGVtYXMubGVuZ3RoID4gMCkge1xyXG4gICAgICBmb3IgKGNvbnN0IHNjaGVtYSBvZiB0aGlzLmRlc2lnbmVyU3RhdGUuc2NoZW1hcykge1xyXG4gICAgICAgIHRoaXMuZXhwci5hZGRTY2hlbWEoJ1NjaGVtYScsIHNjaGVtYSk7XHJcbiAgICAgIH1cclxuICAgICAgaWYgKHRoaXMuZGVzaWduZXJTdGF0ZS5zY2hlbWFzWzBdLmVudGl0eVR5cGVzICYmIHRoaXMuZGVzaWduZXJTdGF0ZS5zY2hlbWFzWzBdLmVudGl0eVR5cGVzLmxlbmd0aCA+IDApIHtcclxuICAgICAgICBjb25zdCBlbnRpdHlUeXBlID0gdGhpcy5kZXNpZ25lclN0YXRlLnNjaGVtYXNbMF0uZW50aXR5VHlwZXNbMF07XHJcbiAgICAgICAgdGhpcy5leHByLmFkZEluamVjdGVkRW50aXR5KGVudGl0eVR5cGUubmFtZSwgJ1NjaGVtYScsXHJcbiAgICAgICAgICBlbnRpdHlUeXBlLm5hbWUsIEluamVjdGVkVHlwZS5FbnRpdHlUeXBlKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgY29uc3QgY29udGV4dCA9IG5ldyBBcnJheSgpO1xyXG4gICAgaWYgKHRoaXMuZGVzaWduZXJTdGF0ZS5wcm9jSW5zdENvbnRleHQubGVuZ3RoID4gMCkge1xyXG4gICAgICBmb3IgKGNvbnN0IHZhcmlhYmxlIG9mIHRoaXMuZGVzaWduZXJTdGF0ZS5wcm9jSW5zdENvbnRleHQpIHtcclxuICAgICAgICBjb250ZXh0LnB1c2godmFyaWFibGUpO1xyXG4gICAgICAgIC8vIHRoaXMuZXhwci5hZGRDb250ZXh0KHZhcmlhYmxlKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgaWYgKHRoaXMuZGVzaWduZXJTdGF0ZS5mb3JtYWxQYXJhbWV0ZXJDb250ZXh0Lmxlbmd0aCA+IDApIHtcclxuICAgICAgZm9yIChjb25zdCB2YXJpYWJsZSBvZiB0aGlzLmRlc2lnbmVyU3RhdGUuZm9ybWFsUGFyYW1ldGVyQ29udGV4dCkge1xyXG4gICAgICAgIGlmICghY29udGV4dC5zb21lKGMgPT4gYy5rZXkgPT09IHZhcmlhYmxlLmtleSkpIHtcclxuICAgICAgICAgIGNvbnRleHQucHVzaCh2YXJpYWJsZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIHRoaXMuZXhwci5hZGRDb250ZXh0KHZhcmlhYmxlKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgaWYgKHRoaXMuZGVzaWduZXJTdGF0ZS5wYXJ0aWNpcGFudENvbnRleHQubGVuZ3RoID4gMCkge1xyXG4gICAgICBmb3IgKGNvbnN0IHZhcmlhYmxlIG9mIHRoaXMuZGVzaWduZXJTdGF0ZS5wYXJ0aWNpcGFudENvbnRleHQpIHtcclxuICAgICAgICBpZiAoIWNvbnRleHQuc29tZShjID0+IGMua2V5ID09PSB2YXJpYWJsZS5rZXkpKSB7XHJcbiAgICAgICAgICBjb250ZXh0LnB1c2godmFyaWFibGUpO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvLyB0aGlzLmV4cHIuYWRkQ29udGV4dCh2YXJpYWJsZSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIGlmICh0aGlzLmRlc2lnbmVyU3RhdGUucHJvY2Vzc1ZhcmlhYmxlQ29udGV4dC5sZW5ndGggPiAwKSB7XHJcbiAgICAgIGZvciAoY29uc3QgdmFyaWFibGUgb2YgdGhpcy5kZXNpZ25lclN0YXRlLnByb2Nlc3NWYXJpYWJsZUNvbnRleHQpIHtcclxuICAgICAgICBpZiAoIWNvbnRleHQuc29tZShjID0+IGMua2V5ID09PSB2YXJpYWJsZS5rZXkpKSB7XHJcbiAgICAgICAgICBjb250ZXh0LnB1c2godmFyaWFibGUpO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvLyB0aGlzLmV4cHIuYWRkQ29udGV4dCh2YXJpYWJsZSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIGlmIChjb250ZXh0Lmxlbmd0aCA+IDApIHtcclxuICAgICAgZm9yIChjb25zdCB2IG9mIGNvbnRleHQpIHtcclxuICAgICAgICB0aGlzLmV4cHIuYWRkQ29udGV4dCh2KTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgLy8gaWYgKHRoaXMuZXhjbHVkZUV4cHJQZXJmb3JtZXIpIHtcclxuICAgIHRoaXMuZXhwci5hZGRFeHByZXNzaW9uVGV4dCh0aGlzLmV4Y2x1ZGVFeHByUGVyZm9ybWVyKTtcclxuICAgIC8vIH1cclxuICAgIHRoaXMuZXhwci5idWlsZEV4cHJlc3Npb24oKS50aGVuKChkOiBzdHJpbmcpID0+IHtcclxuICAgICAgdGhpcy5leGNsdWRlRXhwclBlcmZvcm1lciA9IGQ7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIGNsZWFyKCkge1xyXG4gICAgdGhpcy5leGNsdWRlRXhwclBlcmZvcm1lciA9ICcnO1xyXG4gIH1cclxuXHJcbn1cclxuIl19