/**
 * @fileoverview added by tsickle
 * Generated from: lib/query-solution.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, ViewEncapsulation, HostBinding, ComponentFactoryResolver, Injector, Input, Output, EventEmitter, ViewChild, InjectFlags, ElementRef, ChangeDetectorRef } from '@angular/core';
import { SaveAsDialogComponent } from './saveasdialog/saveasdialog.component';
import { SolutionManangerComponent } from './solutionmanager/solutionmanager.component';
import { Observable } from 'rxjs/Observable';
import { ConvertorService, QueryConditionComponent, QuerySolutionVo } from '@farris/component-querycondition';
import { NotifyService } from '@farris/ui-notify';
import { BsModalService } from '@farris/ui-modal';
import { HttpService } from './service/httpservice';
import { FieldConfigService } from './service/fieldconfig.service';
import { QuerySolutionVoConvertor, SolutionService } from '@farris/component-querycondition';
import { QUERYSOLUTION_HANDLER_TOKEN } from './interface/IQuerySolutionHandler';
import { LocaleService } from '@farris/ui-locale';
import { cloneDeep } from 'lodash-es';
import { SolutionCacheService } from './service/solution.cache.service';
import { EventManager } from '@angular/platform-browser';
import { IdService } from '@farris/ui-common';
var QuerySolutionComponent = /** @class */ (function () {
    function QuerySolutionComponent(notify, resolver, injector, modalService, convertService, solutionService, httpService, fieldConfigService, localeService) {
        var _this = this;
        this.notify = notify;
        this.resolver = resolver;
        this.injector = injector;
        this.modalService = modalService;
        this.convertService = convertService;
        this.solutionService = solutionService;
        this.httpService = httpService;
        this.fieldConfigService = fieldConfigService;
        this.localeService = localeService;
        this._fieldConfigs = [];
        this._presetFieldConfigs = [];
        this._resetFieldConfigs = [];
        /**
         * 此值由设计器传入
         * 组件在设计时无法点击被禁用，true
         * 组件在运行时可以点击使用，false
         */
        this.isDisabled = false;
        /**
         * 查询条件列表
         */
        this.queryEmitter = new EventEmitter();
        /**
         * 查询方案cls
         */
        this.cls = 'query-solution';
        /**
         * 查询方案数据源
         */
        this.querySolutionVos = new Array();
        /**
         * 当前所选的方案，有可能不是方案
         */
        this.selectedSolution = new QuerySolutionVo();
        /**
         * 是否折叠
         */
        this.isFold = false;
        /**
         * label和控件是否排成一行，默认是；false时排成上下两行
         */
        this.isControlInline = true;
        /**
         * 是否需要完整显示超过6个字符的标签，默认false
         */
        this.showCompleteLabel = false;
        /**
         * 是否启用加载后查询
         */
        this.enableInitQuery = false;
        /**
         * 选择的控件展示列表
         */
        this.selectedFieldConditions = new Array();
        //方案是否赋默认值
        this.isSetDefaultValue = false;
        //方案是否已赋默认值
        this.doneSetDefaultValue = false;
        //是否已完成自动查询，默认值为true，当enableInitQuery输入值为true时，首次执行ngOnchanges()时将其设为false
        this.doneInitQuery = true;
        /**
         * 条件概要
         */
        this.summaryConditions = [];
        /**
         * 是否启用记录历史方式
         * 上次查询——不能删除、可以另存、不存在变更
         * 方案列表只有上次查询时，上次查询、系统默认都存在
         * 方案列表多个时，有上次查询，上次查询选中
         * 方案列表没有上次查询时，但是LocalStorage有,构造一个上次查询
         *
         */
        this.enableHistory = false;
        this.historyRefer = {
            schemeKey: '',
            // 历史记录scheme
            foundSchme: null,
            // 历史方案保存
            schemeKeyLS: '',
            //LocalStorage 历史记录标记
            initCondition: false //LocalStorage是否按照执行完查询
        };
        this.newSaveAsSolutionVo = (/**
         * @return {?}
         */
        function () {
            //当前选中的方案，再修改筛选条件后，其原来的筛选条件并没有变化，仅仅this.selectedFieldConditions有变化
            /** @type {?} */
            var solution = cloneDeep(_this.selectedSolution);
            //新增的方案要清空查询方案编号
            solution.code = '';
            //是否系统属性必须设置为False
            solution.isSystem = false;
            //解决方案所属表单
            solution.belongId = _this.formId;
            //新增方案Id需要Guid
            solution.id = _this.solutionService.getGuid();
            //新增方案isDefault需要设置为false
            solution.isDefault = false;
            //新增方案的筛选条件，是当前选中的筛选条件
            solution.queryConditions = _this.selectedFieldConditions;
            //设置类型要清空
            solution.type = "";
            solution.isChanged = false;
            return solution;
        });
        this.handleKeyDown = (/**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            if (event.key == 'Enter')
                _this.query();
        });
        this._idSer = new IdService();
        this.solutionHandler = this.injector.get(QUERYSOLUTION_HANDLER_TOKEN, null, InjectFlags.Optional);
        this._self = this.injector.get(ElementRef);
        this.cdf = this.injector.get(ChangeDetectorRef);
        this.eventManager = this.injector.get(EventManager);
    }
    Object.defineProperty(QuerySolutionComponent.prototype, "fieldConfigs", {
        get: /**
         * @return {?}
         */
        function () {
            return this._fieldConfigs;
        },
        /**
         * 字段配置数据源，用于选择字段配置
         */
        set: /**
         * 字段配置数据源，用于选择字段配置
         * @param {?} fieldConfigJson
         * @return {?}
         */
        function (fieldConfigJson) {
            this._fieldConfigs = this.solutionService.convertToQueryConditions(fieldConfigJson);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuerySolutionComponent.prototype, "resetFieldConfigs", {
        get: /**
         * @return {?}
         */
        function () {
            return this._resetFieldConfigs;
        },
        set: /**
         * @param {?} resetFieldConfigJson
         * @return {?}
         */
        function (resetFieldConfigJson) {
            var _this = this;
            if (!resetFieldConfigJson || resetFieldConfigJson.length == 0) {
                return;
            }
            // 规范数据
            /** @type {?} */
            var formatResetConfigJson = resetFieldConfigJson.map((/**
             * @param {?} tConfigItem
             * @return {?}
             */
            function (tConfigItem) {
                /** @type {?} */
                var findItem = _this.presetFieldConfigs.find((/**
                 * @param {?} presetItem
                 * @return {?}
                 */
                function (presetItem) { return presetItem['fieldCode'] == tConfigItem['labelCode']; }));
                if (findItem) {
                    tConfigItem['control']['controltype'] = findItem.control.getControlType();
                    return tConfigItem;
                }
            }));
            this._resetFieldConfigs = this.solutionService.convertToSimpleQueryConditions(formatResetConfigJson);
            // 更新已有配置
            this.solutionService.updateControl(this._presetFieldConfigs, this._resetFieldConfigs);
            // 更新已有的方案
            this.sysQuerySolutionVo && this.solutionService.updateControl(this.sysQuerySolutionVo.queryConditions, this._resetFieldConfigs);
            // 更新历史记录
            this.historyRefer['foundSchme'] && this.solutionService.updateControl(this.historyRefer['foundSchme'].queryConditions, this._resetFieldConfigs);
            // 更新已选
            this.selectedSolution && this.solutionService.updateControl(this.selectedSolution.queryConditions, this._resetFieldConfigs);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuerySolutionComponent.prototype, "presetFieldConfigs", {
        get: /**
         * @return {?}
         */
        function () {
            return this._presetFieldConfigs;
        },
        /**
         * 预置查询字段
         */
        set: /**
         * 预置查询字段
         * @param {?} presetFieldConfigJson
         * @return {?}
         */
        function (presetFieldConfigJson) {
            this._presetFieldConfigs = this.solutionService.convertToQueryConditions(presetFieldConfigJson);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    QuerySolutionComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this._self.nativeElement.removeEventListener("keydown", this.handleKeyDown);
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    QuerySolutionComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        if (changes['defaultConfigs']) {
            this.isSetDefaultValue = true;
            if (changes['defaultConfigs'].currentValue && !changes['defaultConfigs'].firstChange) { //设计时不会给defaultConfigs赋值
                this.setQueryConditionValues(changes['defaultConfigs'].currentValue, this.selectedSolution);
                this.initAutoQuery(this.selectedSolution);
            }
        }
        if (changes['enableInitQuery'] && changes['enableInitQuery'].firstChange && changes['enableInitQuery'].currentValue) {
            this.doneInitQuery = false;
        }
    };
    /**
     * 组件初始化
     */
    /**
     * 组件初始化
     * @return {?}
     */
    QuerySolutionComponent.prototype.ngOnInit = /**
     * 组件初始化
     * @return {?}
     */
    function () {
        //只在运行时 获取sessionId，查询已存储方案
        this.initSysQuerySolution();
        if (!this.isDisabled) {
            this.sessionId = this.solutionHandler.getUserSessionId();
            // 缓存历史方案
            this.initAutoQueryByLS();
            // 加载方案列表
            this.loadQuerySolutions();
            //注册键盘监听事件
            this.listenKeyBoard();
        }
        else {
            //设计时只加载系统预置方案
            this.loadSysQuerySolution();
        }
    };
    /**
     * @return {?}
     */
    QuerySolutionComponent.prototype.initSysQuerySolution = /**
     * @return {?}
     */
    function () {
        if (this.presetQuerySolutionName && this.presetQuerySolutionName != '') {
            this.sysQuerySolutionVo = new QuerySolutionVo();
            this.sysQuerySolutionVo.id = this.solutionService.getGuid();
            this.sysQuerySolutionVo.code = (this.presetQuerySolutionName != this.localeService.getValue("querySolution.container.sysPresetName")) ? this.presetQuerySolutionName : this.localeService.getValue("querySolution.container.defaultName");
            this.sysQuerySolutionVo.queryConditions = cloneDeep(this.presetFieldConfigs);
            this.sysQuerySolutionVo.belongId = this.formId;
            this.sysQuerySolutionVo.isSystem = true;
            // this.querySolutionVos.push(this.sysQuerySolutionVo);
        }
    };
    /**
     * 加载系统预置方案
    */
    /**
     * 加载系统预置方案
     * @return {?}
     */
    QuerySolutionComponent.prototype.loadSysQuerySolution = /**
     * 加载系统预置方案
     * @return {?}
     */
    function () {
        this.querySolutionVos.push(this.sysQuerySolutionVo);
        this.selectedSolution = cloneDeep(this.sysQuerySolutionVo);
        this.loadQueryConditions();
    };
    /**
     * 规范方案条件
     */
    /**
     * 规范方案条件
     * @private
     * @param {?} tConvertor
     * @param {?} element
     * @param {?=} fromJobject
     * @return {?}
     */
    QuerySolutionComponent.prototype.formatQuerySolutionVO = /**
     * 规范方案条件
     * @private
     * @param {?} tConvertor
     * @param {?} element
     * @param {?=} fromJobject
     * @return {?}
     */
    function (tConvertor, element, fromJobject) {
        var _this = this;
        if (fromJobject === void 0) { fromJobject = false; }
        /** @type {?} */
        var querysolutionVO;
        /** @type {?} */
        var sourceData;
        /** @type {?} */
        var _fieldCodeArr = [];
        /** @type {?} */
        var _tQueryConditions;
        if (fromJobject) {
            querysolutionVO = tConvertor.initFromJobject(element);
        }
        else {
            querysolutionVO = element;
        }
        this.fieldConfigs.forEach((/**
         * @param {?} _item
         * @return {?}
         */
        function (_item) { _fieldCodeArr.push(_item.fieldCode); }));
        if (querysolutionVO && querysolutionVO.queryConditions && querysolutionVO.queryConditions.length > 0) {
            //若表单上删除了某个字段，但已保存的自定义方案中包含该字段时，在加载方案过程中将该字段剔除
            _tQueryConditions = querysolutionVO.queryConditions.filter((/**
             * @param {?} element
             * @return {?}
             */
            function (element) {
                return _fieldCodeArr.indexOf(element.fieldCode) > -1;
            }));
            querysolutionVO.queryConditions = _tQueryConditions;
            //对自定义方案的国际化信息、帮助控件的帮助前及帮助后事件进行动态赋值
            querysolutionVO.queryConditions.forEach((/**
             * @param {?} element
             * @return {?}
             */
            function (element) {
                sourceData = _this.fieldConfigs.find((/**
                 * @param {?} _item
                 * @return {?}
                 */
                function (_item) { return _item.fieldCode == element.fieldCode; }));
                element.fieldName = sourceData.fieldName;
                element.placeHolder = sourceData.placeHolder;
                element.beginPlaceHolder = sourceData.hasOwnProperty('beginPlaceHolder') ? sourceData['beginPlaceHolder'] : '';
                element.endPlaceHolder = sourceData.hasOwnProperty('endPlaceHolder') ? sourceData['endPlaceHolder'] : '';
                if (sourceData.control.preEventCmd) {
                    ((/** @type {?} */ (element.control))).preEventCmd = sourceData.control.preEventCmd;
                }
                if (sourceData.control.postEventCmd) {
                    ((/** @type {?} */ (element.control))).postEventCmd = sourceData.control.postEventCmd;
                }
                if (sourceData.control.clear) {
                    ((/** @type {?} */ (element.control))).clear = sourceData.control.clear;
                }
                if (sourceData.control.click) {
                    ((/** @type {?} */ (element.control))).click = sourceData.control.click;
                }
                if (sourceData.control.enumValues && sourceData.control.enumValues.length > 0) {
                    ((/** @type {?} */ (element.control))).enumValues = sourceData.control.enumValues;
                    ((/** @type {?} */ (element.control))).enumValues = sourceData.control.enumValues;
                }
                if (sourceData.control.data && sourceData.control.data.length > 0) {
                    ((/** @type {?} */ (element.control))).data = sourceData.control.data;
                }
            }));
        }
        return querysolutionVO;
    };
    /**
     * 加载查询方案数据
     */
    /**
     * 加载查询方案数据
     * @return {?}
     */
    QuerySolutionComponent.prototype.loadQuerySolutions = /**
     * 加载查询方案数据
     * @return {?}
     */
    function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var self;
            var _this = this;
            return tslib_1.__generator(this, function (_a) {
                self = this;
                this.httpService.query(this.formId, this.sessionId).subscribe((/**
                 * @param {?} items
                 * @return {?}
                 */
                function (items) {
                    /** @type {?} */
                    var convertor = new QuerySolutionVoConvertor();
                    /** @type {?} */
                    var querysolutionVO;
                    if (items && items.length > 0) {
                        items.forEach((/**
                         * @param {?} element
                         * @return {?}
                         */
                        function (element) {
                            querysolutionVO = _this.formatQuerySolutionVO(convertor, element, true);
                            if (_this.enableHistory && querysolutionVO['type'] == 'pre') {
                                // 如果返回列表内存在历史记录                        
                                querysolutionVO.code = _this.localeService.getValue("querySolution.container.histroyName");
                                _this.historyRefer['schemeKey'] = querysolutionVO.id;
                                _this.historyRefer['foundSchme'] = cloneDeep(querysolutionVO);
                                _this.historyRefer['initCondition'] = true;
                                //  this.defaultQuerySolution = cloneDeep(querysolutionVO);
                            }
                            else if (querysolutionVO['type'] != 'pre') {
                                _this.querySolutionVos.push(querysolutionVO);
                                if (querysolutionVO.isDefault) { //如果有默认方案，则设置全局默认方案
                                    _this.defaultQuerySolution = cloneDeep(querysolutionVO);
                                }
                            }
                        }));
                        self.setSolutionCache(_this.querySolutionVos);
                    }
                    if (_this.enableHistory && !_this.historyRefer['initCondition']) {
                        //如果还没有设置条件
                        _this.formatInitQuerySolution();
                    }
                    if (_this.enableHistory && _this.historyRefer['initCondition']) {
                        _this.selectedSolution = cloneDeep(_this.historyRefer['foundSchme']);
                        //只有缓存记录
                        _this.querySolutionVos.splice(0, 0, _this.historyRefer['foundSchme']);
                        if (_this.querySolutionVos.length == 1) {
                            // 只有上次查询时
                            _this.querySolutionVos.push(_this.sysQuerySolutionVo);
                        }
                        self.setSolutionCache(_this.querySolutionVos);
                        _this.loadQueryConditions();
                        // if(this.historyRefer['schemeKey'] !== ''){
                        //     //更新一次缓存
                        //     this.changeQueryHistroy(false);
                        // }                
                    }
                    else if (_this.defaultQuerySolution || _this.querySolutionVos.length) {
                        //如果已查到有默认方案，或已有存储的方案
                        //不再加载系统配置的方案，首先加载默认方案，没有默认则加载第一个方案
                        if (_this.defaultQuerySolution && _this.defaultQuerySolution.id != '') {
                            _this.selectedSolution = cloneDeep(_this.defaultQuerySolution);
                        }
                        else {
                            _this.selectedSolution = cloneDeep(_this.querySolutionVos[0]);
                        }
                        _this.loadQueryConditions();
                    }
                    else {
                        //如果没有任何已存储的方案，则加载系统配置方案
                        _this.loadSysQuerySolution();
                    }
                    if (_this.isSetDefaultValue && !_this.historyRefer['initCondition']) {
                        _this.setQueryConditionValues(_this.defaultConfigs, _this.selectedSolution);
                    }
                    _this.initAutoQuery(_this.selectedSolution);
                }));
                return [2 /*return*/];
            });
        });
    };
    /**
     * @param {?} querySolutionVos
     * @return {?}
     */
    QuerySolutionComponent.prototype.setSolutionCache = /**
     * @param {?} querySolutionVos
     * @return {?}
     */
    function (querySolutionVos) {
        if (!this.isDisabled && gspframeworkService && querySolutionVos && querySolutionVos.length) {
            // 获取当前功能菜单信息, 并以功能菜单ID为缓存key
            /** @type {?} */
            var option = gspframeworkService.rtf.session.getCommonVariable();
            SolutionCacheService.setSolutionCache(option.tabId, querySolutionVos);
            SolutionCacheService.solutionListChanged.next(true);
        }
    };
    /**
     * @param {?} value
     * @return {?}
     */
    QuerySolutionComponent.prototype.setCurrentSolutionCache = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        if (!this.isDisabled && gspframeworkService && value) {
            // 获取当前功能菜单信息, 并以功能菜单ID为缓存key
            /** @type {?} */
            var option = gspframeworkService.rtf.session.getCommonVariable();
            if (option && option.tabId) {
                SolutionCacheService.setCurrentSolution(option.tabId, value);
            }
        }
    };
    /**
     * @return {?}
     */
    QuerySolutionComponent.prototype.loadQueryConditions = /**
     * @return {?}
     */
    function () {
        //加载筛选条件
        this.selectedFieldConditions = new Array();
        if (this.selectedSolution && this.selectedSolution.queryConditions && this.selectedSolution.queryConditions.length > 0) {
            // this.selectedFieldConditions = this.selectedSolution.queryConditions as Array<QueryCondition>;
            this.selectedFieldConditions = this.selectedSolution.queryConditions;
        }
        // 如果方案的变更是在収折时
        this.whenFoldSetSummaryConditions();
        this.showSaveButton = this.selectedSolution.isSystem ? false : true;
        !this.isDisabled && this.solutionHandler.setCurrentQueryConditions(cloneDeep(this.selectedFieldConditions));
        this.setCurrentSolutionCache(this.selectedSolution);
    };
    /**
     * @return {?}
     */
    QuerySolutionComponent.prototype.saveAs = /**
     * @return {?}
     */
    function () {
        this.openSaveAsDialog(this.localeService.getValue("querySolution.saveAsDialog.title"));
    };
    /**
     * 获取默认标签
     * @param solution
     */
    /**
     * 获取默认标签
     * @param {?} solution
     * @return {?}
     */
    QuerySolutionComponent.prototype.getDefaultLabel = /**
     * 获取默认标签
     * @param {?} solution
     * @return {?}
     */
    function (solution) {
        if (!(this.defaultQuerySolution)) {
            return { 'visibility': 'hidden' };
        }
        else {
            if (solution.id == this.defaultQuerySolution.id) {
                // //不处理了
            }
            else {
                return { 'visibility': 'hidden' };
            }
        }
    };
    /**
     * 方案选择事件
     * @param solution 当前选中的方案
     */
    /**
     * 方案选择事件
     * @param {?} solution 当前选中的方案
     * @return {?}
     */
    QuerySolutionComponent.prototype.select = /**
     * 方案选择事件
     * @param {?} solution 当前选中的方案
     * @return {?}
     */
    function (solution) {
        this.selectedSolution = Object.assign(new QuerySolutionVo(), solution);
        if (solution.queryConditions && solution.queryConditions.length > 0) {
            this.selectedFieldConditions = this.selectedSolution.queryConditions;
        }
        else {
            this.selectedFieldConditions = new Array();
        }
        this.showSaveButton = this.selectedSolution.isSystem ? false : true;
        !this.isDisabled && this.solutionHandler.setCurrentQueryConditions(cloneDeep(this.selectedFieldConditions));
        this.setCurrentSolutionCache(this.selectedSolution);
        // 如果方案的变更是在収折时
        this.whenFoldSetSummaryConditions();
    };
    /**
     * @param {?} solution
     * @return {?}
     */
    QuerySolutionComponent.prototype.selectAndQuery = /**
     * @param {?} solution
     * @return {?}
     */
    function (solution) {
        if (this.defaultConfigs && this.defaultConfigs.isCurrent || (solution.isSystem && solution.type !== 'pre')) {
            this.setQueryConditionValues(this.defaultConfigs, solution); //已包含select操作
        }
        else {
            if (this.enableHistory && solution.type == 'pre') {
                /** @type {?} */
                var conditions = cloneDeep(this.historyRefer['foundSchme']['queryConditions']);
                if (conditions.length > 0) {
                    solution.queryConditions = conditions;
                }
            }
            this.select(solution);
        }
        this.query();
    };
    /**
     * 打开字段配置窗口
     */
    /**
     * 打开字段配置窗口
     * @return {?}
     */
    QuerySolutionComponent.prototype.openFieldConfigDialog = /**
     * 打开字段配置窗口
     * @return {?}
     */
    function () {
        this.farrisQueryCondition.openFieldConfigDialog();
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    QuerySolutionComponent.prototype.fieldConditionsChangeHander = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        /** @type {?} */
        var data = $event;
        // this.selectedSolution.queryConditions = data;此时不改变当前选中的方案，等到保存时，直接调用this.selectedFieldConditions来保存。
        this.selectedFieldConditions = data;
        if (!this.isDisabled) {
            this.solutionHandler.setCurrentQueryConditions(cloneDeep(this.selectedFieldConditions));
            this.solutionHandler.setFilterConditions(this.selectedFieldConditions);
            this.setCurrentSolutionCache(this.selectedSolution);
        }
        this.markAsChanged(true, this.selectedSolution.id);
    };
    /**
     * 保存方案
     */
    /**
     * 保存方案
     * @return {?}
     */
    QuerySolutionComponent.prototype.save = /**
     * 保存方案
     * @return {?}
     */
    function () {
        var _this = this;
        if (!this.formId) {
            this.solutionService.showInfo(this.localeService.getValue("querySolution.container.pleaseInput"), 'error', '', 1500);
            return;
        }
        //id为空则表示没有预置方案，则此时保存方案相当于新增一个方案
        if (!this.selectedSolution.id) {
            this.openSaveAsDialog(this.localeService.getValue("querySolution.container.save"));
        }
        //直接保存
        else {
            this.selectedSolution.queryConditions = this.selectedFieldConditions;
            this.httpService.update(this.selectedSolution, this.sessionId).subscribe((/**
             * @return {?}
             */
            function () {
                /** @type {?} */
                var tempIndex = _this.querySolutionVos.findIndex((/**
                 * @param {?} x
                 * @return {?}
                 */
                function (x) { return x.id == _this.selectedSolution.id; }));
                // this.selectedFieldConditions = this.selectedSolution.queryConditions;
                _this.querySolutionVos.splice(tempIndex, 1, _this.selectedSolution);
                _this.markAsChanged(false, _this.selectedSolution.id);
                _this.solutionService.showInfo(_this.localeService.getValue("querySolution.container.saveSuccess"), 'success', '', 1500);
            }), (/**
             * @param {?} error
             * @return {?}
             */
            function (error) {
                _this.solutionService.showInfo(_this.localeService.getValue("querySolution.container.saveFail"), 'error', '', 1500);
                throw error;
            }));
        }
    };
    /**
     * 打开另存为对话框，点击保存按钮时也走该逻辑
     * @param title
     */
    /**
     * 打开另存为对话框，点击保存按钮时也走该逻辑
     * @param {?} title
     * @return {?}
     */
    QuerySolutionComponent.prototype.openSaveAsDialog = /**
     * 打开另存为对话框，点击保存按钮时也走该逻辑
     * @param {?} title
     * @return {?}
     */
    function (title) {
        if (!this.formId) {
            this.solutionService.showInfo(this.localeService.getValue("querySolution.container.pleaseInput"), 'error', '', 1500);
            return;
        }
        this.saveAsDialog.title = title;
        this.saveAsDialog.querySolution = this.newSaveAsSolutionVo();
        this.saveAsDialog.show();
    };
    /**
     * 另存为确定事件处理
     * @param solution 新增的查询方案
     */
    /**
     * 另存为确定事件处理
     * @param {?} _event
     * @return {?}
     */
    QuerySolutionComponent.prototype.saveAsConfrimHandler = /**
     * 另存为确定事件处理
     * @param {?} _event
     * @return {?}
     */
    function (_event) {
        var _this = this;
        /** @type {?} */
        var solution = _event['querySolution'];
        if (solution.queryConditions && solution.queryConditions.length) {
            solution.queryConditions.forEach((/**
             * @param {?} element
             * @return {?}
             */
            function (element) {
                if (!!element.readonly) {
                    element.readonly = false;
                }
            }));
        }
        this.httpService.create(solution, this.sessionId).subscribe((/**
         * @return {?}
         */
        function () {
            //重新设置全局的默认方案
            if (solution.isDefault) { //被设置为默认方案
                _this.defaultQuerySolution = solution;
                _this.querySolutionVos = _this.querySolutionVos.map((/**
                 * @param {?} vo
                 * @return {?}
                 */
                function (vo) {
                    vo.isDefault = false;
                    return vo;
                }));
            }
            //用户保存自己的筛选方案后，不再显示系统默认的方案
            if (_this.querySolutionVos.length === 1 && _this.querySolutionVos[0].isSystem) {
                //用户没有配置自己的筛选方案时，或者用户只配置了一个筛选方案时，此数组都有一个方案；若此方案是系统默认方案，则应在另存为时删掉
                _this.querySolutionVos = new Array();
            }
            else if (_this.querySolutionVos.length === 2 && _this.enableHistory) {
                /** @type {?} */
                var filterSolutionVos = new Array();
                filterSolutionVos = _this.querySolutionVos.filter((/**
                 * @param {?} item
                 * @return {?}
                 */
                function (item) {
                    if (item.type == 'pre') {
                        return true;
                    }
                    return !item.isSystem;
                }));
                _this.querySolutionVos = filterSolutionVos;
            }
            _this.querySolutionVos.push(solution);
            _this.selectedSolution = solution;
            _this.showSaveButton = _this.selectedSolution.isSystem ? false : true;
            _this.selectedFieldConditions = _this.selectedSolution.queryConditions;
            _this.solutionService.showInfo(_this.localeService.getValue("querySolution.container.saveSuccess"), 'success', '', 1500);
        }), (/**
         * @param {?} error
         * @return {?}
         */
        function (error) {
            _this.solutionService.showInfo(_this.localeService.getValue("querySolution.container.saveFail"), 'error', '', 1500);
            throw error;
        }));
    };
    /**
     * 打开管理界面
     */
    /**
     * 打开管理界面
     * @return {?}
     */
    QuerySolutionComponent.prototype.openManangerDialog = /**
     * 打开管理界面
     * @return {?}
     */
    function () {
        this.manageDialog.show(cloneDeep(this.querySolutionVos));
    };
    /**
     * 管理界面确定处理
     * @param _event
     * @param dialog
     */
    /**
     * 管理界面确定处理
     * @param {?} _event
     * @return {?}
     */
    QuerySolutionComponent.prototype.managerConfirmHandler = /**
     * 管理界面确定处理
     * @param {?} _event
     * @return {?}
     */
    function (_event) {
        var _this = this;
        /** @type {?} */
        var obj = _event;
        if (obj['validator'] == true) {
            //点击checkbox时，newDefaultQuerySolution被赋值； 全局默认方案被删除时，newDefaultQuerySolution变为null
            /** @type {?} */
            var defaultId_1 = obj['newDefaultQuerySolution'] ? obj['newDefaultQuerySolution'].id : '';
            /** @type {?} */
            var belongId = this.formId;
            //若没有删除任何方案，deletedQuerySolutionVos会是一个空数组
            /** @type {?} */
            var deletedIds_1 = obj['deletedQuerySolutionIds'];
            this.httpService.batchUpdate({ defaultId: defaultId_1, belongId: belongId, deletedIds: deletedIds_1 }, this.sessionId).subscribe((/**
             * @return {?}
             */
            function () {
                //把删除后的vo赋值给 this.querySolutionVos；如果没删除方案， this.querySolutionVos跟obj['splicedQuerySolutionVos']同值
                //默认方案的变化也记录在updatedQuerySolutionVos中
                _this.querySolutionVos = obj['updatedQuerySolutionVos'];
                if (!obj['currentDefaultQuerySolutionId']) { //如果传过来的当前默认方案id是空，代表所有默认方案都取消了
                    _this.defaultQuerySolution = null;
                }
                //如果有默认方案先显示默认方案，如果没有默认方案则直接显示当前查询方案的第一个；如果没有任何查询方案则直接清空查询方案，则显示系统预置的默认方案
                if (defaultId_1) {
                    //已设置默认方案
                    _this.select(obj['newDefaultQuerySolution']);
                    _this.defaultQuerySolution = obj['newDefaultQuerySolution'];
                }
                else {
                    //未更改默认方案，判断当前选择的查询方案是否已被删除
                    if (deletedIds_1.includes(_this.selectedSolution.id)) { //如果被删除
                        if (_this.querySolutionVos.length > 0) {
                            if (_this.enableHistory && _this.querySolutionVos.length == 1 && _this.querySolutionVos[0].type == 'pre') {
                                _this.select(_this.sysQuerySolutionVo);
                                _this.querySolutionVos.push(_this.sysQuerySolutionVo);
                            }
                            else {
                                _this.select(_this.querySolutionVos[0]);
                            }
                        }
                        else {
                            _this.select(_this.sysQuerySolutionVo);
                            _this.querySolutionVos.push(_this.sysQuerySolutionVo);
                        }
                    }
                    else {
                        //什么也没发生
                        //把所有的默认都取消了
                    }
                }
                _this.solutionService.showInfo(_this.localeService.getValue("querySolution.container.saveSuccess"), 'success', '', 1500);
            }), (/**
             * @param {?} error
             * @return {?}
             */
            function (error) {
                _this.solutionService.showInfo(_this.localeService.getValue("querySolution.container.saveFail"), 'error', '', 1500);
                return Observable.throw(error);
            }));
        }
        else {
            //校验失败
        }
    };
    /**
     * 执行筛选
     */
    /**
     * 执行筛选
     * @return {?}
     */
    QuerySolutionComponent.prototype.query = /**
     * 执行筛选
     * @return {?}
     */
    function () {
        if (!this.isDisabled) {
            /** @type {?} */
            var errorArr = this.solutionService.isValid(this.selectedFieldConditions);
            if (errorArr && errorArr.length) {
                /** @type {?} */
                var errorFields = errorArr.map((/**
                 * @param {?} error
                 * @return {?}
                 */
                function (error) { return error.field; }));
                this.solutionService.showInfo(this.localeService.getValue("querySolution.container.require").replace('{fields}', errorFields.join(', ')), 'warning', '', 2500);
            }
            else {
                /** @type {?} */
                var queryConditions = cloneDeep(this.selectedFieldConditions);
                this.solutionHandler.setFilterConditions(queryConditions);
                this.queryEmitter.emit(queryConditions);
                // 更新历史记录
                this.changeQueryHistroy();
            }
        }
    };
    /**
     * 清空->条件全部重置为空
     */
    /**
     * 清空->条件全部重置为空
     * @return {?}
     */
    QuerySolutionComponent.prototype.clear = /**
     * 清空->条件全部重置为空
     * @return {?}
     */
    function () {
        // this.isFold = !this.isFold;
        /** @type {?} */
        var isNotEmpty = this.selectedFieldConditions.some((/**
         * @param {?} condition
         * @return {?}
         */
        function (condition) { return condition.value.isEmpty() == false; }));
        if (isNotEmpty) {
            /** @type {?} */
            var newList = cloneDeep(this.farrisQueryCondition.resetSelectedConditionValues(true));
            this.selectedFieldConditions = newList;
            this.selectedSolution.queryConditions = newList;
            this.solutionHandler.setCurrentQueryConditions(cloneDeep(newList));
            this.solutionHandler.setFilterConditions(newList);
            this.markAsChanged(true, this.selectedSolution.id);
            this.query();
        }
    };
    /**
     * 折叠按钮的清空
     */
    /**
     * 折叠按钮的清空
     * @return {?}
     */
    QuerySolutionComponent.prototype.foldClearHandler = /**
     * 折叠按钮的清空
     * @return {?}
     */
    function () {
        if (this.isFold) {
            // 如果点击的时候是収折的
            this.isFold = false;
            if (this.summaryConditions.length > 0) {
                this.summaryConditions = [];
                this.clear();
            }
        }
        else {
            // 如果点击的时候是展开的
            this.clear();
        }
    };
    /**
     * 箭头点击事件
     */
    /**
     * 箭头点击事件
     * @return {?}
     */
    QuerySolutionComponent.prototype.arrowClick = /**
     * 箭头点击事件
     * @return {?}
     */
    function () {
        this.isFold = !this.isFold;
        this.whenFoldSetSummaryConditions();
        if (!this.isFold) {
            this.summaryConditions = [];
        }
    };
    /**
     * @private
     * @return {?}
     */
    QuerySolutionComponent.prototype.whenFoldSetSummaryConditions = /**
     * @private
     * @return {?}
     */
    function () {
        if (this.isFold) {
            // 如果収折
            /** @type {?} */
            var isNotEmpty = this.selectedFieldConditions.some((/**
             * @param {?} condition
             * @return {?}
             */
            function (condition) { return condition.value.isEmpty() == false; }));
            if (isNotEmpty) {
                this.summaryConditions = this.selectedFieldConditions.filter((/**
                 * @param {?} condition
                 * @return {?}
                 */
                function (condition) { return condition.value.isEmpty() == false; }));
            }
            else {
                this.summaryConditions = [];
            }
        }
    };
    /**
     * 为系统预置方案或者自定义查询方案设置筛选条件默认值
     * @param configs 默认值设置
     * @param selectedSolution 当前选择的筛选方案
     */
    /**
     * 为系统预置方案或者自定义查询方案设置筛选条件默认值
     * @param {?} configs 默认值设置
     * @param {?} selectedSolution 当前选择的筛选方案
     * @return {?}
     */
    QuerySolutionComponent.prototype.setQueryConditionValues = /**
     * 为系统预置方案或者自定义查询方案设置筛选条件默认值
     * @param {?} configs 默认值设置
     * @param {?} selectedSolution 当前选择的筛选方案
     * @return {?}
     */
    function (configs, selectedSolution) {
        /** @type {?} */
        var targetSolution;
        /** @type {?} */
        var targetSolutionWithValues;
        if (configs && configs.fieldConfigs && configs.fieldConfigs.length) {
            if (selectedSolution.hasOwnProperty('type') && selectedSolution['type'] == 'pre') {
                //如果是历史记录
                targetSolution = null;
                this.select(selectedSolution);
            }
            else {
                targetSolution = configs.isCurrent ? selectedSolution : (selectedSolution.isSystem ? selectedSolution : null);
            }
            if (targetSolution && targetSolution.queryConditions && targetSolution.queryConditions.length) {
                targetSolutionWithValues = cloneDeep(this.solutionService.setValues(targetSolution, configs.fieldConfigs, !!configs.readonly));
                this.doneSetDefaultValue = true;
                this.select(targetSolutionWithValues);
            }
            else {
                //不为自定义方案设置默认值时，标记下要为其赋默认值的意图，但未成功
                this.doneSetDefaultValue = true;
                //如果没有设置默认值，就把当前选中方案的条件的值传出
                this.solutionHandler.setCurrentQueryConditions(this.selectedSolution.queryConditions);
            }
        }
    };
    /**
     * 加载筛选方案后自动查询
     * @param currentSolution 当前筛选方案
     */
    /**
     * 加载筛选方案后自动查询
     * @param {?} currentSolution 当前筛选方案
     * @return {?}
     */
    QuerySolutionComponent.prototype.initAutoQuery = /**
     * 加载筛选方案后自动查询
     * @param {?} currentSolution 当前筛选方案
     * @return {?}
     */
    function (currentSolution) {
        if (this.enableInitQuery && this.doneInitQuery && this.enableHistory) {
            // 已通过历史记录进行过查询
            return;
        }
        /** @type {?} */
        var enableQuery = true;
        if (currentSolution && currentSolution.queryConditions && currentSolution.queryConditions.length) {
            if (this.isSetDefaultValue && !this.doneSetDefaultValue) {
                enableQuery = false;
            }
        }
        else {
            enableQuery = false;
        }
        if (enableQuery && this.enableInitQuery) {
            // this.solutionHandler.setFilterConditions(this.selectedSolution.queryConditions); 执行query方法时，已经执行setFilterConditions
            //if(this._self.nativeElement.querySelector('.farris-panel .btn-group .btn-primary')){
            this.query();
            this.doneInitQuery = true;
            //}
        }
    };
    /**
     * 当前查询方案的筛选条件发生变化时，标记方案处于编辑状态
     * @param isChanged 方案是否处于编辑状态
     * @param solutionId 需要标记是否处于编辑状态的方案的id
     */
    /**
     * 当前查询方案的筛选条件发生变化时，标记方案处于编辑状态
     * @param {?} isChanged 方案是否处于编辑状态
     * @param {?} solutionId 需要标记是否处于编辑状态的方案的id
     * @return {?}
     */
    QuerySolutionComponent.prototype.markAsChanged = /**
     * 当前查询方案的筛选条件发生变化时，标记方案处于编辑状态
     * @param {?} isChanged 方案是否处于编辑状态
     * @param {?} solutionId 需要标记是否处于编辑状态的方案的id
     * @return {?}
     */
    function (isChanged, solutionId) {
        this.querySolutionVos.forEach((/**
         * @param {?} solution
         * @return {?}
         */
        function (solution) {
            if (solution.id == solutionId)
                solution.isChanged = isChanged;
        }));
        this.selectedSolution.isChanged = isChanged;
        this.cdf.detectChanges();
    };
    /**
     * 处理筛选按钮和清空按钮的响应式位置变更
     * @param $event farris-querycondition组件内部是否显示按钮
     */
    // showButtonHandle($event: any) {
    //     if(!this.isDisabled){
    //         let data = $event;
    //         this.queryButtonOnRight = !data;
    //         if(this.enableInitQuery && !this.doneInitQuery) {
    //             this.initAutoQuery(this.selectedSolution);
    //         }
    //     }
    // }
    /**
     * 键盘监听函数，当按下回车键时相当于按下筛选按钮
     */
    /**
         * 处理筛选按钮和清空按钮的响应式位置变更
         * @param $event farris-querycondition组件内部是否显示按钮
         */
    // showButtonHandle($event: any) {
    //     if(!this.isDisabled){
    //         let data = $event;
    //         this.queryButtonOnRight = !data;
    //         if(this.enableInitQuery && !this.doneInitQuery) {
    //             this.initAutoQuery(this.selectedSolution);
    //         }
    //     }
    // }
    /**
     * 键盘监听函数，当按下回车键时相当于按下筛选按钮
     * @private
     * @return {?}
     */
    QuerySolutionComponent.prototype.listenKeyBoard = /**
         * 处理筛选按钮和清空按钮的响应式位置变更
         * @param $event farris-querycondition组件内部是否显示按钮
         */
    // showButtonHandle($event: any) {
    //     if(!this.isDisabled){
    //         let data = $event;
    //         this.queryButtonOnRight = !data;
    //         if(this.enableInitQuery && !this.doneInitQuery) {
    //             this.initAutoQuery(this.selectedSolution);
    //         }
    //     }
    // }
    /**
     * 键盘监听函数，当按下回车键时相当于按下筛选按钮
     * @private
     * @return {?}
     */
    function () {
        this._self.nativeElement.addEventListener("keydown", this.handleKeyDown);
    };
    /**
     * 自动初始化查询
     * 启用历史记录，并且启用了初始化查询，如果有条件，就进行查询
     */
    /**
     * 自动初始化查询
     * 启用历史记录，并且启用了初始化查询，如果有条件，就进行查询
     * @private
     * @return {?}
     */
    QuerySolutionComponent.prototype.initAutoQueryByLS = /**
     * 自动初始化查询
     * 启用历史记录，并且启用了初始化查询，如果有条件，就进行查询
     * @private
     * @return {?}
     */
    function () {
        // 启用历史
        if (this.enableHistory && !this.isDisabled) {
            // key
            this.setLSKey();
            // 初始化对象
            this.initQuerySolution();
            // 如果设置了初始查询
            if (this.enableInitQuery) {
                this.formatInitQuerySolution();
                if (this.historyRefer['foundSchme']['queryConditions'].length > 0) {
                    /** @type {?} */
                    var queryConditions = cloneDeep(this.historyRefer['foundSchme']['queryConditions']);
                    this.selectedFieldConditions = queryConditions;
                    // 设置查询条件
                    this.solutionHandler.setFilterConditions(queryConditions);
                    // 抛出查询事件
                    this.queryEmitter.emit(queryConditions);
                    // 标记
                    this.doneInitQuery = true;
                }
            }
        }
    };
    /**
     * 初始化
     */
    /**
     * 初始化
     * @private
     * @return {?}
     */
    QuerySolutionComponent.prototype.initQuerySolution = /**
     * 初始化
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var querysolutionVO = new QuerySolutionVo();
        querysolutionVO.id = this.solutionService.getGuid();
        querysolutionVO.code = this.localeService.getValue("querySolution.container.histroyName");
        querysolutionVO.queryConditions = [];
        querysolutionVO.belongId = this.formId;
        querysolutionVO.isSystem = true;
        querysolutionVO.type = 'pre';
        this.historyRefer['foundSchme'] = querysolutionVO;
    };
    /**
     * 初始化来自LS的条件
     */
    /**
     * 初始化来自LS的条件
     * @private
     * @return {?}
     */
    QuerySolutionComponent.prototype.formatInitQuerySolution = /**
     * 初始化来自LS的条件
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var histroyCondition = this.httpService.getLS(this.historyRefer.schemeKeyLS);
        if (histroyCondition.length > 0) {
            /** @type {?} */
            var convertor = new QuerySolutionVoConvertor();
            this.historyRefer['foundSchme']['queryConditions'] = histroyCondition;
            // 规范化条件
            this.historyRefer['foundSchme'] = this.formatQuerySolutionVO(convertor, this.historyRefer['foundSchme']);
            // 更新配置
            this.solutionService.updateControl(this.historyRefer['foundSchme'], this.resetFieldConfigs);
            this.historyRefer.initCondition = true;
        }
    };
    /**
     * 保存之后更新历史
     */
    /**
     * 保存之后更新历史
     * @private
     * @param {?=} updateAll
     * @return {?}
     */
    QuerySolutionComponent.prototype.changeQueryHistroy = /**
     * 保存之后更新历史
     * @private
     * @param {?=} updateAll
     * @return {?}
     */
    function (updateAll) {
        if (updateAll === void 0) { updateAll = true; }
        if (!this.enableHistory) {
            return;
        }
        if (this.selectedSolution['type'] == 'pre') {
            this.selectedSolution['isChanged'] = false;
        }
        else {
            /** @type {?} */
            var preIndex = this.querySolutionVos.findIndex((/**
             * @param {?} qsolutionVO
             * @return {?}
             */
            function (qsolutionVO) {
                return qsolutionVO['type'] == 'pre';
            }));
            // 执行查询之后，上次查询的修改就不认为是变更了
            if (preIndex > -1) {
                this.querySolutionVos[preIndex]['isChanged'] = false;
            }
        }
        /** @type {?} */
        var queryConditions = cloneDeep(this.selectedFieldConditions);
        this.historyRefer['foundSchme'].queryConditions = queryConditions;
        // 更新缓存
        this.httpService.setLS(this.historyRefer.schemeKeyLS, this.historyRefer['foundSchme'].queryConditions);
        if (updateAll) {
            // 发起请求保存历史记录
            this.httpService.saveHistroy(this.historyRefer['foundSchme'], this.sessionId).subscribe((/**
             * @return {?}
             */
            function () {
            }));
        }
    };
    /**
     * 处理iframe嵌套
     */
    /**
     * 处理iframe嵌套
     * @private
     * @return {?}
     */
    QuerySolutionComponent.prototype.getTopWindow = /**
     * 处理iframe嵌套
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var curWin = window.self;
        try {
            while (curWin.location.origin === curWin.parent.location.origin) {
                if (curWin !== curWin.parent && !((/** @type {?} */ (curWin))).isRTFTopWin) {
                    curWin = curWin.parent;
                }
                else {
                    break;
                }
            }
        }
        catch (e) { }
        return curWin;
    };
    /**
     * 设置key
     */
    /**
     * 设置key
     * @private
     * @return {?}
     */
    QuerySolutionComponent.prototype.setLSKey = /**
     * 设置key
     * @private
     * @return {?}
     */
    function () {
        // 获取window
        /** @type {?} */
        var curWindow = this.getTopWindow();
        /** @type {?} */
        var userCode = '';
        if (curWindow['gspframeworkService'] && curWindow['gspframeworkService'].hasOwnProperty('common')) {
            userCode = curWindow['gspframeworkService']['common'].userInfos.get().code;
        }
        this.historyRefer.schemeKeyLS = userCode ? 'Scheme' + this._idSer.encrypt(userCode + this.formId) : '';
    };
    QuerySolutionComponent.decorators = [
        { type: Component, args: [{
                    selector: 'farris-querysolution',
                    template: "<div #querysolution class=\"farris-panel position-relative\" tabindex=\"1\" style=\"outline: none;\">\r\n    <div class=\"solution-header\">\r\n        <div class=\"btn-group mr-3\" fDropdown>\r\n            <div class=\"solution-header-title\" fDropdownToggle>               \r\n                <span style=\"max-width: 288px;overflow: hidden;text-overflow: ellipsis;white-space: nowrap\"\r\n                    title=\"{{selectedSolution.code}}\">{{selectedSolution.code}}</span>\r\n                <b class=\"header-title--change\" *ngIf=\"selectedSolution.isChanged\">*</b>\r\n                <span class=\"f-icon f-accordion-expand\"></span>\r\n            </div>\r\n            <div class=\"dropdown-menu solution-header-title-menu\" fDropdownMenu>\r\n                <div class=\"solution-header-title-menu-inner\">\r\n                    <div class=\"solution-header-title-menu-arrow\"></div>\r\n                    <li class=\"dropdown-item solution-header-dropdown-item\"\r\n                        [ngClass]=\"{'solution-header-dropdown-item-active': solution.id === selectedSolution.id }\"\r\n                        (click)=\"selectAndQuery(solution)\" *ngFor=\"let solution of querySolutionVos\">\r\n                        <b *ngIf=\"solution.isChanged\"  class=\"menu-item--change\" >*</b>\r\n                        <span class=\"solution-header-dropdown-item-title\" [title]=\"solution.code\">{{solution.code}}</span>\r\n                        <span class=\"solution-header-dropdown-item-tip\"\r\n                            [ngStyle]=\"getDefaultLabel(solution)\">{{'querySolution.container.default' | locale}}</span>\r\n                    </li>\r\n                    <li class=\"solution-header-dropdown-item-btns\">\r\n                        <span class=\"dropdown-item-btn\" *ngIf=\"showSaveButton\"\r\n                            (click)=\"save()\">{{'queryCondition.container.save' | locale}}</span>\r\n                        <span class=\"dropdown-item-btn\"\r\n                            (click)=\"saveAs()\">{{'queryCondition.container.saveAs' | locale}}</span>\r\n                        <span class=\"dropdown-item-btn\"\r\n                            (click)=\"openManangerDialog()\">{{'querySolution.container.manage' | locale}}</span>\r\n                    </li>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"summary-condition\" *ngIf=\"isFold&&summaryConditions.length>0\">\r\n            <lib-summary-list [conditions]=\"summaryConditions\"></lib-summary-list>\r\n        </div>\r\n        <div class=\"solution-action\">\r\n            <div class=\"btn-group\" *ngIf=\"!isFold\">\r\n                <button *ngIf=\"isFold==false\" (click)=\"query()\" type=\"button\"\r\n                    class=\"btn btn-primary \">{{'queryCondition.container.query' | locale}}</button>\r\n            </div>\r\n            <div class=\"icon-group\">\r\n                <!--\u6E05\u7A7A\u6309\u94AE-->\r\n                <span *ngIf=\"!isFold||summaryConditions.length>0\" class=\"icon-group-remove\" (click)=\"foldClearHandler()\"\r\n                    title=\"{{'querySolution.container.clear' | locale}}\">\r\n                    <span class=\"f-icon f-icon-remove\"></span>\r\n                </span>                \r\n                <ng-container *ngIf=\"!isFold\">\r\n                    <span class=\"divide\"></span>\r\n                    <!--\u914D\u7F6E\u6309\u94AE-->\r\n                    <span class=\"icon-group-setup\" (click)=\"openFieldConfigDialog()\"\r\n                        title=\"{{'queryCondition.container.config' | locale}}\">\r\n                        <span class=\"f-icon f-icon-home-setup\"></span>\r\n                    </span>\r\n                    <!--\u5C55\u5F00\u6536\u8D77-->\r\n                    <span class=\"icon-group-packup\" (click)=\"arrowClick()\"\r\n                        title=\"{{'querySolution.container.arrowUp' | locale}}\">\r\n                        <span class=\"f-icon f-icon-packup\"></span>\r\n                    </span>\r\n                </ng-container>\r\n                <!--\u5C55\u5F00\u6536\u8D77-->\r\n                <span *ngIf=\"isFold\" class=\"icon-group-packup\" (click)=\"arrowClick()\"\r\n                    title=\"{{'querySolution.container.arrowDown' | locale}}\">\r\n                    <span class=\"f-icon f-icon-packup\" style=\"transform: rotate(180deg);\"></span>\r\n                </span>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div>\r\n        <farris-querycondition [ngClass]=\"{'d-none':isFold}\" #farrisQueryCondition\r\n            [(selectedFieldConditions)]=\"selectedFieldConditions\" [fieldConfigs]=\"fieldConfigs\"\r\n            (fieldConditionsChange)=\"fieldConditionsChangeHander($event)\" [isControlInline]=\"isControlInline\"\r\n            [showCompleteLabel]=\"showCompleteLabel\" [isDisabled]=\"isDisabled\" [resetFieldConfigs]=\"resetFieldConfigs\">\r\n        </farris-querycondition>\r\n    </div>\r\n\r\n    <app-solutionmanager #manageDialog (confirmEmitter)=\"managerConfirmHandler($event)\"></app-solutionmanager>\r\n    <app-saveasdialog #saveAsDialog (confirmEmitter)=\"saveAsConfrimHandler($event)\"></app-saveasdialog>\r\n    <div *ngIf=\"isDisabled\" style=\"position:absolute;top:0;bottom:0;left:0;right:0;z-index: 99;\"></div>\r\n</div>",
                    encapsulation: ViewEncapsulation.None,
                    providers: [HttpService, ConvertorService, FieldConfigService],
                    styles: [".solution-action{float:right}.solution-action span{vertical-align:middle;margin:0 3px}.solution-action .divide{font-size:12px;padding:3px 0}.solution-header{height:30px;margin-bottom:5px;-webkit-box-pack:start;justify-content:flex-start}.solution-action .f-icon{cursor:pointer}.solution-action .icon-group{display:inline-block}.solution-header-title-text{overflow:initial!important}"]
                }] }
    ];
    /** @nocollapse */
    QuerySolutionComponent.ctorParameters = function () { return [
        { type: NotifyService },
        { type: ComponentFactoryResolver },
        { type: Injector },
        { type: BsModalService },
        { type: ConvertorService },
        { type: SolutionService },
        { type: HttpService },
        { type: FieldConfigService },
        { type: LocaleService }
    ]; };
    QuerySolutionComponent.propDecorators = {
        defaultConfigs: [{ type: Input }],
        fieldConfigs: [{ type: Input }],
        presetQuerySolutionName: [{ type: Input }],
        resetFieldConfigs: [{ type: Input }],
        presetFieldConfigs: [{ type: Input }],
        isDisabled: [{ type: Input }],
        formId: [{ type: Input }],
        queryEmitter: [{ type: Output }],
        cls: [{ type: HostBinding, args: ['class',] }],
        isFold: [{ type: Input }],
        isControlInline: [{ type: Input }],
        showCompleteLabel: [{ type: Input }],
        enableInitQuery: [{ type: Input }],
        enableHistory: [{ type: Input }],
        farrisQueryCondition: [{ type: ViewChild, args: ['farrisQueryCondition',] }],
        manageDialog: [{ type: ViewChild, args: ['manageDialog',] }],
        saveAsDialog: [{ type: ViewChild, args: ['saveAsDialog',] }]
    };
    return QuerySolutionComponent;
}());
export { QuerySolutionComponent };
if (false) {
    /** @type {?} */
    QuerySolutionComponent.prototype._fieldConfigs;
    /** @type {?} */
    QuerySolutionComponent.prototype._presetFieldConfigs;
    /** @type {?} */
    QuerySolutionComponent.prototype._resetFieldConfigs;
    /** @type {?} */
    QuerySolutionComponent.prototype.defaultConfigs;
    /**
     * 系统预置查询方案名称
     * @type {?}
     */
    QuerySolutionComponent.prototype.presetQuerySolutionName;
    /**
     * 此值由设计器传入
     * 组件在设计时无法点击被禁用，true
     * 组件在运行时可以点击使用，false
     * @type {?}
     */
    QuerySolutionComponent.prototype.isDisabled;
    /**
     * 表单ID，必选字段，表示查询方案所属的表单
     * @type {?}
     */
    QuerySolutionComponent.prototype.formId;
    /**
     * sessionId
     * @type {?}
     */
    QuerySolutionComponent.prototype.sessionId;
    /**
     * 查询条件列表
     * @type {?}
     */
    QuerySolutionComponent.prototype.queryEmitter;
    /**
     * 查询方案cls
     * @type {?}
     */
    QuerySolutionComponent.prototype.cls;
    /**
     * 查询方案数据源
     * @type {?}
     */
    QuerySolutionComponent.prototype.querySolutionVos;
    /**
     * 当前所选的方案，有可能不是方案
     * @type {?}
     */
    QuerySolutionComponent.prototype.selectedSolution;
    /**
     * 是否折叠
     * @type {?}
     */
    QuerySolutionComponent.prototype.isFold;
    /**
     * label和控件是否排成一行，默认是；false时排成上下两行
     * @type {?}
     */
    QuerySolutionComponent.prototype.isControlInline;
    /**
     * 是否需要完整显示超过6个字符的标签，默认false
     * @type {?}
     */
    QuerySolutionComponent.prototype.showCompleteLabel;
    /**
     * 是否启用加载后查询
     * @type {?}
     */
    QuerySolutionComponent.prototype.enableInitQuery;
    /**
     * 默认方案
     * @type {?}
     */
    QuerySolutionComponent.prototype.defaultQuerySolution;
    /**
     * 选择的控件展示列表
     * @type {?}
     */
    QuerySolutionComponent.prototype.selectedFieldConditions;
    /** @type {?} */
    QuerySolutionComponent.prototype.sysQuerySolutionVo;
    /** @type {?} */
    QuerySolutionComponent.prototype.showSaveButton;
    /** @type {?} */
    QuerySolutionComponent.prototype.isSetDefaultValue;
    /** @type {?} */
    QuerySolutionComponent.prototype.doneSetDefaultValue;
    /** @type {?} */
    QuerySolutionComponent.prototype.doneInitQuery;
    /**
     * 组件服务接口
     * @type {?}
     */
    QuerySolutionComponent.prototype.solutionHandler;
    /** @type {?} */
    QuerySolutionComponent.prototype.cdf;
    /**
     * 条件概要
     * @type {?}
     */
    QuerySolutionComponent.prototype.summaryConditions;
    /** @type {?} */
    QuerySolutionComponent.prototype.eventManager;
    /**
     * 是否启用记录历史方式
     * 上次查询——不能删除、可以另存、不存在变更
     * 方案列表只有上次查询时，上次查询、系统默认都存在
     * 方案列表多个时，有上次查询，上次查询选中
     * 方案列表没有上次查询时，但是LocalStorage有,构造一个上次查询
     *
     * @type {?}
     */
    QuerySolutionComponent.prototype.enableHistory;
    /**
     * @type {?}
     * @private
     */
    QuerySolutionComponent.prototype.historyRefer;
    /** @type {?} */
    QuerySolutionComponent.prototype.farrisQueryCondition;
    /** @type {?} */
    QuerySolutionComponent.prototype.manageDialog;
    /** @type {?} */
    QuerySolutionComponent.prototype.saveAsDialog;
    /** @type {?} */
    QuerySolutionComponent.prototype._self;
    /**
     * @type {?}
     * @private
     */
    QuerySolutionComponent.prototype._idSer;
    /** @type {?} */
    QuerySolutionComponent.prototype.newSaveAsSolutionVo;
    /** @type {?} */
    QuerySolutionComponent.prototype.handleKeyDown;
    /**
     * @type {?}
     * @private
     */
    QuerySolutionComponent.prototype.notify;
    /**
     * @type {?}
     * @private
     */
    QuerySolutionComponent.prototype.resolver;
    /**
     * @type {?}
     * @private
     */
    QuerySolutionComponent.prototype.injector;
    /**
     * @type {?}
     * @private
     */
    QuerySolutionComponent.prototype.modalService;
    /**
     * @type {?}
     * @private
     */
    QuerySolutionComponent.prototype.convertService;
    /**
     * @type {?}
     * @private
     */
    QuerySolutionComponent.prototype.solutionService;
    /**
     * @type {?}
     * @private
     */
    QuerySolutionComponent.prototype.httpService;
    /**
     * @type {?}
     * @private
     */
    QuerySolutionComponent.prototype.fieldConfigService;
    /**
     * @type {?}
     * @private
     */
    QuerySolutionComponent.prototype.localeService;
}
//# sourceMappingURL=data:application/json;base64,