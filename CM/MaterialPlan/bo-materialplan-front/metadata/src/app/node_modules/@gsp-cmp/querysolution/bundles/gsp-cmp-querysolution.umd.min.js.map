{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://@gsp-cmp/querysolution/lib/service/httpservice.ts","ng://@gsp-cmp/querysolution/lib/service/fieldconfig.service.ts","ng://@gsp-cmp/querysolution/lib/interface/IQuerySolutionHandler.ts","ng://@gsp-cmp/querysolution/lib/service/solution.cache.service.ts","ng://@gsp-cmp/querysolution/lib/query-solution.component.ts","ng://@gsp-cmp/querysolution/lib/service/edit.service.ts","ng://@gsp-cmp/querysolution/lib/solutionmanager/solutionmanager.component.ts","ng://@gsp-cmp/querysolution/lib/saveasdialog/saveasdialog.component.ts","ng://@gsp-cmp/querysolution/lib/summary-condition/summary-condition.component.ts","ng://@gsp-cmp/querysolution/lib/summary-list/summary-list.component.ts","ng://@gsp-cmp/querysolution/lib/query-solution.module.ts"],"names":["__generator","thisArg","body","f","y","t","g","_","label","sent","trys","ops","next","verb","throw","return","Symbol","iterator","this","n","v","step","op","TypeError","call","done","value","pop","length","push","e","HttpService","prototype","create","querySolution","sessionId","options","headers","HttpHeaders","Content-Type","sessionid","QuerySolutionVoConvertor","convertJObject","http","post","url","query","formId","belongId","get","update","put","batchUpdate","supportLS","window","hasOwnProperty","setLS","key","conditionsStr","convertor","JSON","stringify","formatConvertJObject","localStorage","setItem","getLS","result","Array","getItem","undefined","parse","formatFromJobject","saveHistroy","histroyUrl","Injectable","HttpClient","FieldConfigService","QUERYSOLUTION_HANDLER_TOKEN","InjectionToken","SolutionCacheService","clearSolutionCache","solutionListCache","removeSolutionCache","setSolutionCache","getSolutionCache","getSolutionAllCache","setCurrentSolution","currentSolution","getCurrentSolution","removeCurrentSolution","clearCurrentSolution","solutionListChanged","Subject","Object","defineProperty","QuerySolutionComponent","_fieldConfigs","fieldConfigJson","solutionService","convertToQueryConditions","_resetFieldConfigs","resetFieldConfigJson","_this","formatResetConfigJson","map","tConfigItem","findItem","presetFieldConfigs","find","presetItem","control","getControlType","convertToSimpleQueryConditions","updateControl","_presetFieldConfigs","sysQuerySolutionVo","queryConditions","historyRefer","selectedSolution","presetFieldConfigJson","ngOnDestroy","_self","nativeElement","removeEventListener","handleKeyDown","ngOnChanges","changes","isSetDefaultValue","currentValue","firstChange","setQueryConditionValues","initAutoQuery","doneInitQuery","ngOnInit","initSysQuerySolution","isDisabled","loadSysQuerySolution","solutionHandler","getUserSessionId","initAutoQueryByLS","loadQuerySolutions","listenKeyBoard","presetQuerySolutionName","QuerySolutionVo","id","getGuid","code","localeService","getValue","cloneDeep","isSystem","querySolutionVos","loadQueryConditions","formatQuerySolutionVO","tConvertor","element","fromJobject","querysolutionVO","sourceData","_tQueryConditions","_fieldCodeArr","initFromJobject","fieldConfigs","forEach","_item","fieldCode","filter","indexOf","fieldName","placeHolder","beginPlaceHolder","endPlaceHolder","preEventCmd","postEventCmd","clear","click","enumValues","data","__awaiter","_arguments","P","generator","Promise","resolve","reject","fulfilled","rejected","then","apply","self","httpService","subscribe","items","enableHistory","isDefault","defaultQuerySolution","formatInitQuerySolution","splice","defaultConfigs","gspframeworkService","option","rtf","session","getCommonVariable","tabId","setCurrentSolutionCache","selectedFieldConditions","whenFoldSetSummaryConditions","showSaveButton","setCurrentQueryConditions","saveAs","openSaveAsDialog","getDefaultLabel","solution","visibility","select","assign","selectAndQuery","isCurrent","type","conditions","openFieldConfigDialog","farrisQueryCondition","fieldConditionsChangeHander","$event","setFilterConditions","markAsChanged","save","tempIndex","findIndex","x","showInfo","error","title","saveAsDialog","newSaveAsSolutionVo","show","saveAsConfrimHandler","_event","readonly","vo","filterSolutionVos","item","openManangerDialog","manageDialog","managerConfirmHandler","obj","defaultId_1","deletedIds_1","defaultId","deletedIds","includes","Observable","errorArr","isValid","errorFields","field","replace","join","queryEmitter","emit","changeQueryHistroy","some","condition","isEmpty","newList","resetSelectedConditionValues","foldClearHandler","isFold","summaryConditions","arrowClick","isNotEmpty","configs","targetSolution","targetSolutionWithValues","setValues","doneSetDefaultValue","enableInitQuery","enableQuery","isChanged","solutionId","cdf","detectChanges","addEventListener","setLSKey","initQuerySolution","histroyCondition","schemeKeyLS","resetFieldConfigs","initCondition","updateAll","preIndex","qsolutionVO","getTopWindow","curWin","location","origin","parent","isRTFTopWin","curWindow","userCode","userInfos","_idSer","encrypt","Component","args","selector","template","encapsulation","ViewEncapsulation","None","providers","ConvertorService","NotifyService","ComponentFactoryResolver","Injector","BsModalService","SolutionService","LocaleService","Input","Output","HostBinding","ViewChild","notify","resolver","injector","modalService","convertService","fieldConfigService","EventEmitter","cls","isControlInline","showCompleteLabel","schemeKey","foundSchme","event","IdService","InjectFlags","Optional","ElementRef","ChangeDetectorRef","eventManager","EventManager","EditService","index","isNew","createdItems","idx","itemIndex","updatedItems","assignValues","target","source","SolutionManangerComponent","columns","width","formatter","getSolutionProperty","bind","halign","align","checkCell","optCell","querySolutions","listData","findSolutionsWithoutSys","checkedSolution","deletedQuerySolutionIds","dialog","qs","delelteSolution","dataItem","i","setDefault","checked","list","refresh","cancel","close","confirm","confirmEmitter","FormBuilder","formBuilder","editService","cancelEmitter","SaveAsDialogComponent","checkStatus","SummaryConditionComponent","_condition","qCondition","formatCondition","_conditionType","textValueObj","textOriginalValue","getOriginalValue","ControlType","Text","trim","SingleNumber","numberOptions","precision","NumberRange","_isRange","_spliter","SingleDate","returnFormat","format","DateRange","SingleYear","SingleMonth","MonthRange","SingleDateTime","showTime","DateTimeRange","BoolCheck","checkValue","DropDownList","Radio","InputGroup","SmartHelp","textValue","text","formatValue","formatLang","currentLanguage","getFormatNumberValue","toString","useThousands","firstLetter","currencyToUpperCase","substring","Number","config","test","thousand","decimal","expression","prefix","currencySymbol","numberHelper","formatMoney","toDecimal","toPercent","console","warn","filledSymbol","slice","toFixed","word","toUpperCase","dateToUpperCase","newFormat","getFormatEnumValue","dataSource","curVals_1","split","nameResult","k","findObj","this_1","valueField","textField","getFormatCheckBoxValue","dateformat","getDateFromFormatedString","dtHelper","formatTo","dateString","year","month","day","hour","minite","second","m","a","b","c","d","parseInt","substr","Date","function","date","fmt","o","M+","getMonth","d+","getDate","h+","getHours","m+","getMinutes","s+","getSeconds","q+","Math","floor","S","getMilliseconds","RegExp","$1","getFullYear","str","dateValues","dataStr_1","val","numberValues","resultStr_1","DateTimeHelperService","NumberHelperService","SummaryListComponent","ro","unobserve","wrapperEl","observerElement","ngZone","runOutsideAngular","ResizeObserver","entries","observer","tempWidth","contentRect","abs","widthFlag","changeTipsState","observe","tEnableTips","enableTips","clientWidth","scrollWidth","cd","markForCheck","NgZone","read","QuerySolutionModule","NgModule","imports","CommonModule","FormsModule","FarrisDialogModule","LookupModule","MultiSelectModule","FieldGroupModule","InputGroupModule","FDropdownDirectiveTypeModule","NotifyModule","forRoot","LoadingModule","QueryConditionModule","HttpClientModule","LocaleModule","DatagridModule","NumberHelperModule","DateHelperModule","FarrisTooltipModule","declarations","entryComponents","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { QuerySolutionVo, QuerySolutionVoConvertor, QueryCondition } from '@farris/component-querycondition';\r\n\r\n@Injectable()\r\nexport class HttpService {\r\n\r\n    constructor(private http: HttpClient) { }\r\n    private histroyUrl: string = \"/api/runtime/sys/v1.0/querysolution/previousQuery\";\r\n    url: string = '/api/runtime/sys/v1.0/querysolution';\r\n    /**\r\n     * æ°å¢æ¥è¯¢æ¹æ¡\r\n     * @param querySolution æ¥è¯¢æ¹æ¡å®ä½\r\n     */\r\n    create(querySolution: QuerySolutionVo, sessionId: string): Observable<any> {\r\n        let headers = new HttpHeaders({\r\n            'Content-Type': 'application/json',\r\n            'sessionid': sessionId\r\n        });\r\n        const options = {\r\n            headers: headers,\r\n            sessionid: sessionId\r\n        };\r\n        let convertor = new QuerySolutionVoConvertor();\r\n        let body = convertor.convertJObject(querySolution);\r\n        return this.http.post(this.url, body, options);\r\n    }\r\n\r\n    /**\r\n     * æ ¹æ®è¡¨åIDæ¥è¯¢å½åè¡¨åå½åç»å½ç¨æ·çæ¥è¯¢æ¹æ¡åè¡¨\r\n     * @param formId è¡¨åID\r\n     */\r\n    query(formId: string, sessionId: string): Observable<any> {\r\n        let headers = new HttpHeaders({\r\n            'Content-Type': 'application/json',\r\n            'sessionid': sessionId\r\n        });\r\n        const options = {\r\n            headers: headers,\r\n        };\r\n        let belongId = formId;\r\n        // let url = `http://localhost:5100/api/dev/main/v1.0/querysolution/bybelongid/${belongId}`;\r\n        let url = `${this.url}/belongId/${belongId}`;\r\n        return this.http.get(url, options);\r\n    }\r\n\r\n    /**\r\n     * æ´æ°\r\n     * @param querySolution æ¥è¯¢æ¹æ¡å®ä½\r\n     */\r\n    update(querySolution: QuerySolutionVo, sessionId: string) {\r\n        let headers = new HttpHeaders({\r\n            'Content-Type': 'application/json',\r\n            'sessionid': sessionId\r\n        });\r\n        const options = {\r\n            headers: headers\r\n        };\r\n        let convertor = new QuerySolutionVoConvertor();\r\n        let body = convertor.convertJObject(querySolution);\r\n        return this.http.put(this.url, body, options);\r\n    }\r\n\r\n    /**\r\n     * å é¤\r\n     * @unused\r\n     * @param idArray å é¤çè§£å³æ¹æ¡IDåè¡¨\r\n     */\r\n    // delete(idArray: Array<string>, sessionId: string) {\r\n    //     if (!idArray || idArray.length <= 0) {\r\n    //         return;\r\n    //     }\r\n    //     let headers = new HttpHeaders({\r\n    //         'Content-Type': 'application/json',\r\n    //         'sessionid': sessionId\r\n    //     });\r\n    //     const options = {\r\n    //         headers: headers,\r\n    //         sessionid: sessionId\r\n    //     };\r\n    //     let ids = '';\r\n    //     idArray.forEach(id => {\r\n    //         ids = ids + \"#\" + id;\r\n    //     });\r\n    //     let url = `/api/dev/main/v1.0/querysolution/${encodeURIComponent(ids)}`;\r\n    //     return this.http.delete(url, options);\r\n    // }\r\n\r\n    /**\r\n     * æ¹éæ´æ°\r\n     * @param object : '{defaultId, belongId, deletedIds}'\r\n     */\r\n    batchUpdate(body: any, sessionId: string): Observable<any> {\r\n        let headers = new HttpHeaders({\r\n            'Content-Type': 'application/json',\r\n            'sessionid': sessionId\r\n        });\r\n        const options = {\r\n            headers: headers,\r\n            sessionid: sessionId\r\n        };\r\n        let url = `${this.url}/batch`;\r\n        return this.http.put(url, body, options);\r\n    }\r\n\r\n    /**\r\n     * è·åé»è®¤æ¥è¯¢æ¹æ¡ID\r\n     * @unused\r\n     * @param formId\r\n     */\r\n    // getDefaultQuerySolution(formId: string, sessionId: string): Observable<any> {\r\n    //     let headers = new HttpHeaders({\r\n    //         'Content-Type': 'text/plain',\r\n    //         'sessionid': sessionId\r\n    //     });\r\n    //     let belongId = formId;\r\n    //     // let url = `http://localhost:5100/api/dev/main/v1.0/querysolution/defaultSolution/bybelongid/${belongId}`;\r\n    //     let url = `/api/dev/main/v1.0/querysolution/defaultSolution/bybelongid/${belongId}`;\r\n    //     return this.http.get(url, { headers: headers, responseType: 'text' });\r\n    // }\r\n    /**\r\n        * æ¯å¦æ¯æ\r\n        */\r\n    supportLS() {\r\n        if (window.hasOwnProperty(\"localStorage\")) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * è®¾ç½®ä¿å­æ¶åï¼å±æ§ä»å°ååæå¤§å\r\n     * @param key \r\n     * @param value \r\n     */\r\n    setLS(key, value: any) {\r\n        let conditionsStr='[]';\r\n        if (value) {\r\n            if( typeof value == 'string'){\r\n                conditionsStr=value;\r\n            }else{\r\n                const convertor = new QuerySolutionVoConvertor();\r\n                conditionsStr=JSON.stringify(convertor.formatConvertJObject(value));\r\n            }\r\n           \r\n        }\r\n        if (key&&this.supportLS) {\r\n                localStorage.setItem(key, conditionsStr);\r\n        } \r\n    }\r\n    /**\r\n     * è·åæ¶ï¼å±æ§ä»å¤§ååæå°å\r\n     * @param key \r\n     */\r\n    getLS(key): Array<QueryCondition> {\r\n        let result = new Array<QueryCondition>();\r\n        if (key&&this.supportLS) {\r\n            var v = localStorage.getItem(key);\r\n            if (v != undefined || v !== null) {\r\n                result = JSON.parse(v);\r\n            }\r\n        }\r\n        if(result.length>0){\r\n            const convertor = new QuerySolutionVoConvertor();\r\n            return convertor.formatFromJobject(result);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * æ´æ°\r\n     * @param querySolution æ¥è¯¢æ¹æ¡å®ä½\r\n     */\r\n    saveHistroy(querySolution: QuerySolutionVo, sessionId: string) {\r\n        let headers = new HttpHeaders({\r\n            \"Content-Type\": \"application/json\",\r\n            sessionid: sessionId\r\n        });\r\n        const options = {\r\n            headers: headers\r\n        };\r\n        let convertor = new QuerySolutionVoConvertor();\r\n        let body = convertor.convertJObject(querySolution);\r\n        return this.http.put(this.histroyUrl, body, options);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n@Injectable()\r\nexport class FieldConfigService {\r\n}\r\n\r\n","import { QueryCondition } from \"@farris/component-querycondition\";\r\nimport { InjectionToken } from '@angular/core';\r\n\r\nexport interface IQuerySolutionHandler{\r\n    getUserSessionId(): string;\r\n    setFilterConditions(params: Array<QueryCondition>): void;\r\n    setCurrentQueryConditions(conditions: QueryCondition[]): void;\r\n}\r\n\r\nexport const QUERYSOLUTION_HANDLER_TOKEN = new InjectionToken<IQuerySolutionHandler>('gsp-cmp/I_QUERYSOLUTION_HANDLER');","import { Subject } from 'rxjs';\r\n\r\nexport class SolutionCacheService {\r\n  public static solutionListChanged = new Subject();\r\n\r\n  private static solutionListCache = {};\r\n\r\n  private static currentSolution = {};\r\n\r\n  static clearSolutionCache() {\r\n    SolutionCacheService.solutionListCache = {};\r\n  }\r\n\r\n  static removeSolutionCache(key: string) {\r\n    delete SolutionCacheService.solutionListCache[key];\r\n  }\r\n\r\n  static setSolutionCache(key: string, value: any) {\r\n    SolutionCacheService.solutionListCache[key] = value;\r\n  }\r\n\r\n  static getSolutionCache(key: string) {\r\n    return SolutionCacheService.solutionListCache[key];\r\n  }\r\n\r\n  static getSolutionAllCache() {\r\n    return SolutionCacheService.solutionListCache;\r\n  }\r\n\r\n  static setCurrentSolution(key: string, value: any) {\r\n    SolutionCacheService.currentSolution[key] = value;\r\n  }\r\n\r\n  static getCurrentSolution(key: string) {\r\n    return SolutionCacheService.currentSolution[key];\r\n  }\r\n\r\n  static removeCurrentSolution(key: string) {\r\n    delete SolutionCacheService.currentSolution[key];\r\n  }\r\n\r\n  static clearCurrentSolution() {\r\n    SolutionCacheService.currentSolution = {};\r\n  }\r\n}\r\n","import {\r\n    Component, OnInit, ViewEncapsulation, HostBinding, ComponentFactory, ComponentFactoryResolver,\r\n    Injector, Input, Output, EventEmitter, ViewChild, InjectFlags, ElementRef, OnChanges, SimpleChanges, ChangeDetectorRef, OnDestroy, Optional\r\n} from '@angular/core';\r\nimport { SaveAsDialogComponent } from './saveasdialog/saveasdialog.component';\r\nimport { SolutionManangerComponent } from './solutionmanager/solutionmanager.component';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport {\r\n    FieldConfig, ConvertorService, QueryCondition, QueryConditionComponent, QuerySolutionVo,\r\n    SmartHelpContol, DropDownListControl, CheckBoxControl, RadioControl, InputGroupControl\r\n} from '@farris/component-querycondition';\r\nimport { NotifyService } from '@farris/ui-notify';\r\nimport { BsModalService, BsModalRef } from '@farris/ui-modal';\r\nimport { HttpService } from './service/httpservice';\r\nimport { FieldConfigService } from './service/fieldconfig.service';\r\nimport { QuerySolutionVoConvertor, SolutionService } from '@farris/component-querycondition';\r\nimport { IQuerySolutionHandler, QUERYSOLUTION_HANDLER_TOKEN } from './interface/IQuerySolutionHandler';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { cloneDeep } from 'lodash-es';\r\nimport { SolutionCacheService } from './service/solution.cache.service';\r\nimport { DefaultConfigs } from './interface/DefaultConfigs';\r\nimport { EventManager } from '@angular/platform-browser';\r\nimport { IdService } from '@farris/ui-common';\r\n\r\ndeclare var gspframeworkService: any;\r\n\r\n@Component({\r\n    selector: 'farris-querysolution',\r\n    templateUrl: './query-solution.component.html',\r\n    styleUrls: ['./query-solution.component.css'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    providers: [HttpService, ConvertorService, FieldConfigService]\r\n})\r\nexport class QuerySolutionComponent implements OnInit, OnChanges, OnDestroy {\r\n\r\n    _fieldConfigs: Array<QueryCondition> = [];\r\n    _presetFieldConfigs: Array<QueryCondition> = [];\r\n    _resetFieldConfigs:Array<any>=[];\r\n    @Input()\r\n    defaultConfigs: DefaultConfigs;\r\n    /**\r\n     * å­æ®µéç½®æ°æ®æºï¼ç¨äºéæ©å­æ®µéç½®\r\n     */\r\n    @Input()\r\n    set fieldConfigs(fieldConfigJson: Array<any>) {\r\n        this._fieldConfigs = this.solutionService.convertToQueryConditions(fieldConfigJson);\r\n    }\r\n    get fieldConfigs() {\r\n        return this._fieldConfigs;\r\n    }\r\n\r\n    /**\r\n     * ç³»ç»é¢ç½®æ¥è¯¢æ¹æ¡åç§°\r\n     */\r\n    @Input() presetQuerySolutionName: string;\r\n    @Input() \r\n    set resetFieldConfigs(resetFieldConfigJson:Array<any>){\r\n        if(!resetFieldConfigJson||resetFieldConfigJson.length==0){\r\n            return;\r\n        }\r\n        // è§èæ°æ®\r\n        let formatResetConfigJson=resetFieldConfigJson.map(tConfigItem=>{\r\n            let findItem= this.presetFieldConfigs.find(presetItem=>presetItem['fieldCode']==tConfigItem['labelCode']);\r\n            if(findItem){\r\n                tConfigItem['control']['controltype']=findItem.control.getControlType();\r\n                return tConfigItem;\r\n            }\r\n        })\r\n        this._resetFieldConfigs=this.solutionService.convertToSimpleQueryConditions(formatResetConfigJson);\r\n        // æ´æ°å·²æéç½®\r\n        this.solutionService.updateControl(this._presetFieldConfigs,this._resetFieldConfigs);\r\n        // æ´æ°å·²æçæ¹æ¡\r\n        this.sysQuerySolutionVo&&this.solutionService.updateControl(this.sysQuerySolutionVo.queryConditions,this._resetFieldConfigs);\r\n        // æ´æ°åå²è®°å½\r\n        this.historyRefer['foundSchme']&&this.solutionService.updateControl(this.historyRefer['foundSchme'].queryConditions,this._resetFieldConfigs);\r\n        // æ´æ°å·²é\r\n        this.selectedSolution&&this.solutionService.updateControl(this.selectedSolution.queryConditions,this._resetFieldConfigs);\r\n    }\r\n    get resetFieldConfigs(){\r\n        return this._resetFieldConfigs;\r\n    }\r\n    /**\r\n     * é¢ç½®æ¥è¯¢å­æ®µ\r\n     */\r\n    @Input()\r\n    set presetFieldConfigs(presetFieldConfigJson: Array<any>) {\r\n        this._presetFieldConfigs = this.solutionService.convertToQueryConditions(presetFieldConfigJson);\r\n    }\r\n    get presetFieldConfigs() {\r\n        return this._presetFieldConfigs;\r\n    }\r\n\r\n    /**\r\n     * æ­¤å¼ç±è®¾è®¡å¨ä¼ å¥\r\n     * ç»ä»¶å¨è®¾è®¡æ¶æ æ³ç¹å»è¢«ç¦ç¨ï¼true\r\n     * ç»ä»¶å¨è¿è¡æ¶å¯ä»¥ç¹å»ä½¿ç¨ï¼false\r\n     */\r\n    @Input() isDisabled: boolean = false;\r\n    /**\r\n     * è¡¨åIDï¼å¿éå­æ®µï¼è¡¨ç¤ºæ¥è¯¢æ¹æ¡æå±çè¡¨å\r\n     */\r\n    @Input() formId: string;\r\n\r\n    /**\r\n     * sessionId\r\n     */\r\n    sessionId: string;\r\n\r\n    /**\r\n     * æ¥è¯¢æ¡ä»¶åè¡¨\r\n     */\r\n    @Output() queryEmitter: EventEmitter<any> = new EventEmitter<Array<QueryCondition>>();\r\n\r\n    /**\r\n     * æ¥è¯¢æ¹æ¡cls\r\n     */\r\n    @HostBinding('class') cls = 'query-solution';\r\n\r\n    /**\r\n     * æ¥è¯¢æ¹æ¡æ°æ®æº\r\n     */\r\n    querySolutionVos: Array<QuerySolutionVo> = new Array<QuerySolutionVo>();\r\n\r\n    /**\r\n     * å½åæéçæ¹æ¡ï¼æå¯è½ä¸æ¯æ¹æ¡\r\n     */\r\n    selectedSolution: QuerySolutionVo = new QuerySolutionVo();\r\n\r\n    /**\r\n     * æ¯å¦æå \r\n     */\r\n    @Input() isFold: boolean = false;\r\n\r\n    /**\r\n     * labelåæ§ä»¶æ¯å¦ææä¸è¡ï¼é»è®¤æ¯ï¼falseæ¶ææä¸ä¸ä¸¤è¡\r\n     */\r\n    @Input() isControlInline: boolean = true;\r\n\r\n    /**\r\n     * æ¯å¦éè¦å®æ´æ¾ç¤ºè¶è¿6ä¸ªå­ç¬¦çæ ç­¾ï¼é»è®¤false\r\n     */\r\n    @Input() showCompleteLabel: boolean = false;\r\n\r\n    /**\r\n     * æ¯å¦å¯ç¨å è½½åæ¥è¯¢\r\n    */\r\n    @Input() enableInitQuery: boolean = false;\r\n    /**\r\n     * é»è®¤æ¹æ¡\r\n     */\r\n    defaultQuerySolution: QuerySolutionVo;\r\n\r\n    /**\r\n     * éæ©çæ§ä»¶å±ç¤ºåè¡¨\r\n     */\r\n    selectedFieldConditions: Array<QueryCondition> = new Array<QueryCondition>();\r\n    sysQuerySolutionVo: QuerySolutionVo;\r\n\r\n    showSaveButton: boolean;\r\n\r\n    //æ¹æ¡æ¯å¦èµé»è®¤å¼\r\n    isSetDefaultValue: boolean = false;\r\n\r\n    //æ¹æ¡æ¯å¦å·²èµé»è®¤å¼\r\n    doneSetDefaultValue: boolean = false;\r\n\r\n    //æ¯å¦å·²å®æèªå¨æ¥è¯¢ï¼é»è®¤å¼ä¸ºtrueï¼å½enableInitQueryè¾å¥å¼ä¸ºtrueæ¶ï¼é¦æ¬¡æ§è¡ngOnchanges()æ¶å°å¶è®¾ä¸ºfalse\r\n    doneInitQuery: boolean = true;\r\n\r\n    //ç­éæé®æ¯å¦å¨çé¢å³ä¾§\r\n    //queryButtonOnRight: boolean = true;\r\n\r\n    /**\r\n     * ç»ä»¶æå¡æ¥å£\r\n    */\r\n    solutionHandler: IQuerySolutionHandler;\r\n    cdf: ChangeDetectorRef;\r\n    /**\r\n     * æ¡ä»¶æ¦è¦\r\n     */\r\n    summaryConditions = []\r\n    eventManager: EventManager;\r\n    /**\r\n     * æ¯å¦å¯ç¨è®°å½åå²æ¹å¼\r\n     * ä¸æ¬¡æ¥è¯¢ââä¸è½å é¤ãå¯ä»¥å¦å­ãä¸å­å¨åæ´\r\n     * æ¹æ¡åè¡¨åªæä¸æ¬¡æ¥è¯¢æ¶ï¼ä¸æ¬¡æ¥è¯¢ãç³»ç»é»è®¤é½å­å¨\r\n     * æ¹æ¡åè¡¨å¤ä¸ªæ¶ï¼æä¸æ¬¡æ¥è¯¢ï¼ä¸æ¬¡æ¥è¯¢éä¸­\r\n     * æ¹æ¡åè¡¨æ²¡æä¸æ¬¡æ¥è¯¢æ¶ï¼ä½æ¯LocalStorageæ,æé ä¸ä¸ªä¸æ¬¡æ¥è¯¢\r\n     * \r\n     */\r\n    @Input() enableHistory: boolean = false;\r\n    private historyRefer = {\r\n        schemeKey: '',// åå²è®°å½scheme\r\n        foundSchme: null,// åå²æ¹æ¡ä¿å­\r\n        schemeKeyLS: '',//LocalStorage åå²è®°å½æ è®°\r\n        initCondition: false//LocalStorageæ¯å¦æç§æ§è¡å®æ¥è¯¢\r\n    }\r\n\r\n    @ViewChild('farrisQueryCondition') farrisQueryCondition: QueryConditionComponent;\r\n    @ViewChild('manageDialog') manageDialog: SolutionManangerComponent;\r\n    @ViewChild('saveAsDialog') saveAsDialog: SaveAsDialogComponent;\r\n    _self: any;\r\n    private _idSer: IdService;\r\n    constructor(private notify: NotifyService, private resolver: ComponentFactoryResolver, private injector: Injector,\r\n        private modalService: BsModalService, private convertService: ConvertorService, private solutionService: SolutionService,\r\n        private httpService: HttpService, private fieldConfigService: FieldConfigService, private localeService: LocaleService) {\r\n        this._idSer = new IdService();\r\n        this.solutionHandler = this.injector.get<IQuerySolutionHandler>(QUERYSOLUTION_HANDLER_TOKEN, null, InjectFlags.Optional);\r\n        this._self = this.injector.get(ElementRef);\r\n        this.cdf = this.injector.get(ChangeDetectorRef);\r\n        this.eventManager = this.injector.get(EventManager);\r\n    }\r\n    ngOnDestroy(): void {\r\n        this._self.nativeElement.removeEventListener(\"keydown\", this.handleKeyDown);\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (changes['defaultConfigs']) {\r\n            this.isSetDefaultValue = true;\r\n            if (changes['defaultConfigs'].currentValue && !changes['defaultConfigs'].firstChange) {//è®¾è®¡æ¶ä¸ä¼ç»defaultConfigsèµå¼\r\n                this.setQueryConditionValues(changes['defaultConfigs'].currentValue, this.selectedSolution);\r\n                this.initAutoQuery(this.selectedSolution);\r\n            }\r\n        }\r\n        if (changes['enableInitQuery'] && changes['enableInitQuery'].firstChange && changes['enableInitQuery'].currentValue) {\r\n            this.doneInitQuery = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * ç»ä»¶åå§å\r\n     */\r\n    ngOnInit(): void {\r\n        //åªå¨è¿è¡æ¶ è·åsessionIdï¼æ¥è¯¢å·²å­å¨æ¹æ¡\r\n        this.initSysQuerySolution();\r\n        if (!this.isDisabled) {\r\n            this.sessionId = this.solutionHandler.getUserSessionId();\r\n            // ç¼å­åå²æ¹æ¡\r\n            this.initAutoQueryByLS();\r\n            // å è½½æ¹æ¡åè¡¨\r\n            this.loadQuerySolutions();\r\n            //æ³¨åé®ççå¬äºä»¶\r\n            this.listenKeyBoard();\r\n        } else {\r\n            //è®¾è®¡æ¶åªå è½½ç³»ç»é¢ç½®æ¹æ¡\r\n            this.loadSysQuerySolution();\r\n        }\r\n    }\r\n\r\n    initSysQuerySolution() {\r\n        if (this.presetQuerySolutionName && this.presetQuerySolutionName != '') {\r\n            this.sysQuerySolutionVo = new QuerySolutionVo();\r\n            this.sysQuerySolutionVo.id = this.solutionService.getGuid();\r\n            this.sysQuerySolutionVo.code = (this.presetQuerySolutionName != this.localeService.getValue(\"querySolution.container.sysPresetName\")) ? this.presetQuerySolutionName : this.localeService.getValue(\"querySolution.container.defaultName\");\r\n            this.sysQuerySolutionVo.queryConditions = cloneDeep(this.presetFieldConfigs);\r\n            this.sysQuerySolutionVo.belongId = this.formId;\r\n            this.sysQuerySolutionVo.isSystem = true;\r\n            // this.querySolutionVos.push(this.sysQuerySolutionVo);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * å è½½ç³»ç»é¢ç½®æ¹æ¡\r\n    */\r\n    loadSysQuerySolution() {\r\n        this.querySolutionVos.push(this.sysQuerySolutionVo);\r\n        this.selectedSolution = cloneDeep(this.sysQuerySolutionVo);\r\n        this.loadQueryConditions();\r\n    }\r\n    /**\r\n     * è§èæ¹æ¡æ¡ä»¶\r\n     */\r\n    private formatQuerySolutionVO(tConvertor: QuerySolutionVoConvertor, element, fromJobject = false): QuerySolutionVo {\r\n        let querysolutionVO: QuerySolutionVo;\r\n        let sourceData: any;\r\n        let _fieldCodeArr: Array<string> = [];\r\n        let _tQueryConditions: Array<QueryCondition>;\r\n        if (fromJobject) {\r\n            querysolutionVO = tConvertor.initFromJobject(element);\r\n        } else {\r\n            querysolutionVO = element;\r\n        }\r\n        this.fieldConfigs.forEach(_item => { _fieldCodeArr.push(_item.fieldCode) });\r\n        if (querysolutionVO && querysolutionVO.queryConditions && querysolutionVO.queryConditions.length > 0) {\r\n            //è¥è¡¨åä¸å é¤äºæä¸ªå­æ®µï¼ä½å·²ä¿å­çèªå®ä¹æ¹æ¡ä¸­åå«è¯¥å­æ®µæ¶ï¼å¨å è½½æ¹æ¡è¿ç¨ä¸­å°è¯¥å­æ®µåé¤\r\n            _tQueryConditions = querysolutionVO.queryConditions.filter(function (element) {\r\n                return _fieldCodeArr.indexOf(element.fieldCode) > -1;\r\n            });\r\n            querysolutionVO.queryConditions = _tQueryConditions;\r\n\r\n            //å¯¹èªå®ä¹æ¹æ¡çå½éåä¿¡æ¯ãå¸®å©æ§ä»¶çå¸®å©ååå¸®å©åäºä»¶è¿è¡å¨æèµå¼\r\n            querysolutionVO.queryConditions.forEach(element => {\r\n                sourceData = this.fieldConfigs.find(_item => _item.fieldCode == element.fieldCode);\r\n                element.fieldName = sourceData.fieldName;\r\n                element.placeHolder = sourceData.placeHolder;\r\n                element.beginPlaceHolder =sourceData.hasOwnProperty('beginPlaceHolder')?sourceData['beginPlaceHolder']:'';\r\n                element.endPlaceHolder =sourceData.hasOwnProperty('endPlaceHolder')?sourceData['endPlaceHolder']:'';                                \r\n                if (sourceData.control.preEventCmd) {\r\n                    (element.control as SmartHelpContol).preEventCmd = sourceData.control.preEventCmd;\r\n                }\r\n                if (sourceData.control.postEventCmd) {\r\n                    (element.control as SmartHelpContol).postEventCmd = sourceData.control.postEventCmd;\r\n                }\r\n                if (sourceData.control.clear) {\r\n                    (element.control as SmartHelpContol).clear = sourceData.control.clear;\r\n                }\r\n                if (sourceData.control.click) {\r\n                    (element.control as InputGroupControl).click = sourceData.control.click;\r\n                }\r\n                if (sourceData.control.enumValues && sourceData.control.enumValues.length > 0) {\r\n                    (element.control as DropDownListControl).enumValues = sourceData.control.enumValues;\r\n                    (element.control as RadioControl).enumValues = sourceData.control.enumValues;\r\n                }\r\n                if (sourceData.control.data && sourceData.control.data.length > 0) {\r\n                    (element.control as CheckBoxControl).data = sourceData.control.data;\r\n                }\r\n            });\r\n        }\r\n        return querysolutionVO;\r\n    }\r\n    /**\r\n     * å è½½æ¥è¯¢æ¹æ¡æ°æ®\r\n     */\r\n    async loadQuerySolutions() {\r\n        const self = this;\r\n        this.httpService.query(this.formId, this.sessionId).subscribe((items: Array<any>) => {\r\n            const convertor = new QuerySolutionVoConvertor();\r\n            let querysolutionVO: QuerySolutionVo;\r\n            if (items && items.length > 0) {\r\n                items.forEach(element => {\r\n                    querysolutionVO = this.formatQuerySolutionVO(convertor, element, true);\r\n                    if (this.enableHistory && querysolutionVO['type'] == 'pre') {\r\n                        // å¦æè¿ååè¡¨åå­å¨åå²è®°å½                        \r\n                        querysolutionVO.code=this.localeService.getValue(\"querySolution.container.histroyName\");\r\n                        this.historyRefer['schemeKey'] = querysolutionVO.id;\r\n                        this.historyRefer['foundSchme'] = cloneDeep(querysolutionVO);\r\n                        this.historyRefer['initCondition'] = true;                                                \r\n                        //  this.defaultQuerySolution = cloneDeep(querysolutionVO);\r\n                    } else if(querysolutionVO['type'] != 'pre'){\r\n                        this.querySolutionVos.push(querysolutionVO);\r\n                        if (querysolutionVO.isDefault) {//å¦ææé»è®¤æ¹æ¡ï¼åè®¾ç½®å¨å±é»è®¤æ¹æ¡\r\n                            this.defaultQuerySolution = cloneDeep(querysolutionVO);\r\n                        }\r\n                    }\r\n                });\r\n                self.setSolutionCache(this.querySolutionVos);\r\n            }\r\n            if (this.enableHistory && !this.historyRefer['initCondition']) {\r\n                //å¦æè¿æ²¡æè®¾ç½®æ¡ä»¶\r\n                this.formatInitQuerySolution();\r\n            }\r\n            if (this.enableHistory && this.historyRefer['initCondition']) {\r\n\r\n                this.selectedSolution = cloneDeep(this.historyRefer['foundSchme']);\r\n                //åªæç¼å­è®°å½\r\n                this.querySolutionVos.splice(0, 0, this.historyRefer['foundSchme']);\r\n\r\n                if (this.querySolutionVos.length == 1) {\r\n                    // åªæä¸æ¬¡æ¥è¯¢æ¶\r\n                    this.querySolutionVos.push(this.sysQuerySolutionVo);\r\n                }\r\n                self.setSolutionCache(this.querySolutionVos);\r\n                this.loadQueryConditions();\r\n                // if(this.historyRefer['schemeKey'] !== ''){\r\n                //     //æ´æ°ä¸æ¬¡ç¼å­\r\n                //     this.changeQueryHistroy(false);\r\n                // }                \r\n            } else if (this.defaultQuerySolution || this.querySolutionVos.length) {\r\n                //å¦æå·²æ¥å°æé»è®¤æ¹æ¡ï¼æå·²æå­å¨çæ¹æ¡\r\n                //ä¸åå è½½ç³»ç»éç½®çæ¹æ¡ï¼é¦åå è½½é»è®¤æ¹æ¡ï¼æ²¡æé»è®¤åå è½½ç¬¬ä¸ä¸ªæ¹æ¡\r\n                if (this.defaultQuerySolution && this.defaultQuerySolution.id != '') {\r\n                    this.selectedSolution = cloneDeep(this.defaultQuerySolution);\r\n                } else {\r\n                    this.selectedSolution = cloneDeep(this.querySolutionVos[0]);\r\n                }\r\n                this.loadQueryConditions();\r\n            } else {\r\n                //å¦ææ²¡æä»»ä½å·²å­å¨çæ¹æ¡ï¼åå è½½ç³»ç»éç½®æ¹æ¡\r\n                this.loadSysQuerySolution();\r\n            }\r\n\r\n            if (this.isSetDefaultValue && !this.historyRefer['initCondition']) {\r\n                this.setQueryConditionValues(this.defaultConfigs, this.selectedSolution);\r\n            }\r\n\r\n            this.initAutoQuery(this.selectedSolution);\r\n        });\r\n    }\r\n\r\n    setSolutionCache(querySolutionVos: any) {\r\n        if (!this.isDisabled && gspframeworkService && querySolutionVos && querySolutionVos.length) {\r\n            // è·åå½ååè½èåä¿¡æ¯, å¹¶ä»¥åè½èåIDä¸ºç¼å­key\r\n            const option = gspframeworkService.rtf.session.getCommonVariable();\r\n            SolutionCacheService.setSolutionCache(option.tabId, querySolutionVos);\r\n            SolutionCacheService.solutionListChanged.next(true);\r\n        }\r\n    }\r\n\r\n    setCurrentSolutionCache(value: any) {\r\n        if (!this.isDisabled && gspframeworkService && value) {\r\n            // è·åå½ååè½èåä¿¡æ¯, å¹¶ä»¥åè½èåIDä¸ºç¼å­key\r\n            const option = gspframeworkService.rtf.session.getCommonVariable();\r\n            if (option && option.tabId) {\r\n                SolutionCacheService.setCurrentSolution(option.tabId, value);\r\n            }\r\n        }\r\n    }\r\n\r\n    loadQueryConditions() {\r\n        //å è½½ç­éæ¡ä»¶\r\n        this.selectedFieldConditions = new Array<QueryCondition>();\r\n        if (this.selectedSolution && this.selectedSolution.queryConditions && this.selectedSolution.queryConditions.length > 0) {\r\n            // this.selectedFieldConditions = this.selectedSolution.queryConditions as Array<QueryCondition>;\r\n            this.selectedFieldConditions = this.selectedSolution.queryConditions;\r\n        }\r\n        // å¦ææ¹æ¡çåæ´æ¯å¨åææ¶\r\n        this.whenFoldSetSummaryConditions();\r\n        this.showSaveButton = this.selectedSolution.isSystem ? false : true;\r\n        !this.isDisabled && this.solutionHandler.setCurrentQueryConditions(cloneDeep(this.selectedFieldConditions));\r\n        this.setCurrentSolutionCache(this.selectedSolution);\r\n\r\n    }\r\n\r\n    saveAs() {\r\n        this.openSaveAsDialog(this.localeService.getValue(\"querySolution.saveAsDialog.title\"));\r\n    }\r\n\r\n    /**\r\n     * è·åé»è®¤æ ç­¾\r\n     * @param solution\r\n     */\r\n    getDefaultLabel(solution: QuerySolutionVo) {\r\n        if (!(this.defaultQuerySolution)) {\r\n            return { 'visibility': 'hidden' }\r\n        }\r\n        else {\r\n            if (solution.id == this.defaultQuerySolution.id) {\r\n                // //ä¸å¤çäº\r\n            }\r\n            else {\r\n                return { 'visibility': 'hidden' }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * æ¹æ¡éæ©äºä»¶\r\n     * @param solution å½åéä¸­çæ¹æ¡\r\n     */\r\n    select(solution: QuerySolutionVo) {\r\n        this.selectedSolution = Object.assign(new QuerySolutionVo(), solution);\r\n        if (solution.queryConditions && solution.queryConditions.length > 0) {\r\n            this.selectedFieldConditions = this.selectedSolution.queryConditions;\r\n        }\r\n        else {\r\n            this.selectedFieldConditions = new Array<QueryCondition>();\r\n        }\r\n        this.showSaveButton = this.selectedSolution.isSystem ? false : true;\r\n        !this.isDisabled && this.solutionHandler.setCurrentQueryConditions(cloneDeep(this.selectedFieldConditions));\r\n        this.setCurrentSolutionCache(this.selectedSolution);\r\n        // å¦ææ¹æ¡çåæ´æ¯å¨åææ¶\r\n        this.whenFoldSetSummaryConditions();\r\n    }\r\n\r\n    selectAndQuery(solution: QuerySolutionVo) {\r\n        if (this.defaultConfigs && this.defaultConfigs.isCurrent||(solution.isSystem&&solution.type!=='pre')) {\r\n            this.setQueryConditionValues(this.defaultConfigs, solution);//å·²åå«selectæä½\r\n        } else {\r\n            if (this.enableHistory && solution.type == 'pre') {\r\n                let conditions = cloneDeep(this.historyRefer['foundSchme']['queryConditions']);\r\n                if (conditions.length > 0) {\r\n                    solution.queryConditions = conditions;\r\n                }\r\n            }\r\n            this.select(solution);\r\n        }\r\n        this.query();\r\n    }\r\n    /**\r\n     * æå¼å­æ®µéç½®çªå£\r\n     */\r\n    openFieldConfigDialog() {\r\n        this.farrisQueryCondition.openFieldConfigDialog();\r\n    }\r\n\r\n    fieldConditionsChangeHander($event: any) {\r\n        let data = $event;\r\n        // this.selectedSolution.queryConditions = data;æ­¤æ¶ä¸æ¹åå½åéä¸­çæ¹æ¡ï¼ç­å°ä¿å­æ¶ï¼ç´æ¥è°ç¨this.selectedFieldConditionsæ¥ä¿å­ã\r\n        this.selectedFieldConditions = data;\r\n        if (!this.isDisabled) {\r\n            this.solutionHandler.setCurrentQueryConditions(cloneDeep(this.selectedFieldConditions));\r\n            this.solutionHandler.setFilterConditions(this.selectedFieldConditions);\r\n            this.setCurrentSolutionCache(this.selectedSolution);\r\n        }\r\n        this.markAsChanged(true, this.selectedSolution.id);\r\n    }\r\n\r\n    /**\r\n     * ä¿å­æ¹æ¡\r\n     */\r\n    save() {\r\n        if (!this.formId) {\r\n            this.solutionService.showInfo(this.localeService.getValue(\"querySolution.container.pleaseInput\"), 'error', '', 1500);\r\n            return;\r\n        }\r\n        //idä¸ºç©ºåè¡¨ç¤ºæ²¡æé¢ç½®æ¹æ¡ï¼åæ­¤æ¶ä¿å­æ¹æ¡ç¸å½äºæ°å¢ä¸ä¸ªæ¹æ¡\r\n        if (!this.selectedSolution.id) {\r\n            this.openSaveAsDialog(this.localeService.getValue(\"querySolution.container.save\"));\r\n        }\r\n        //ç´æ¥ä¿å­\r\n        else {\r\n            this.selectedSolution.queryConditions = this.selectedFieldConditions;\r\n            this.httpService.update(this.selectedSolution, this.sessionId).subscribe(\r\n                () => {\r\n                    let tempIndex = this.querySolutionVos.findIndex(x => x.id == this.selectedSolution.id);\r\n                    // this.selectedFieldConditions = this.selectedSolution.queryConditions;\r\n                    this.querySolutionVos.splice(tempIndex, 1, this.selectedSolution);\r\n                    this.markAsChanged(false, this.selectedSolution.id);\r\n                    this.solutionService.showInfo(this.localeService.getValue(\"querySolution.container.saveSuccess\"), 'success', '', 1500);\r\n                },\r\n                error => {\r\n                    this.solutionService.showInfo(this.localeService.getValue(\"querySolution.container.saveFail\"), 'error', '', 1500);\r\n                    throw error;\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    /**\r\n     * æå¼å¦å­ä¸ºå¯¹è¯æ¡ï¼ç¹å»ä¿å­æé®æ¶ä¹èµ°è¯¥é»è¾\r\n     * @param title\r\n     */\r\n    openSaveAsDialog(title: string) {\r\n        if (!this.formId) {\r\n            this.solutionService.showInfo(this.localeService.getValue(\"querySolution.container.pleaseInput\"), 'error', '', 1500);\r\n            return;\r\n        }\r\n        this.saveAsDialog.title = title;\r\n        this.saveAsDialog.querySolution = this.newSaveAsSolutionVo();\r\n        this.saveAsDialog.show();\r\n    }\r\n\r\n    newSaveAsSolutionVo = () => {\r\n        //å½åéä¸­çæ¹æ¡ï¼åä¿®æ¹ç­éæ¡ä»¶åï¼å¶åæ¥çç­éæ¡ä»¶å¹¶æ²¡æååï¼ä»ä»this.selectedFieldConditionsæåå\r\n        const solution = cloneDeep(this.selectedSolution);\r\n        //æ°å¢çæ¹æ¡è¦æ¸ç©ºæ¥è¯¢æ¹æ¡ç¼å·\r\n        solution.code = '';\r\n        //æ¯å¦ç³»ç»å±æ§å¿é¡»è®¾ç½®ä¸ºFalse\r\n        solution.isSystem = false;\r\n        //è§£å³æ¹æ¡æå±è¡¨å\r\n        solution.belongId = this.formId;\r\n        //æ°å¢æ¹æ¡Idéè¦Guid\r\n        solution.id = this.solutionService.getGuid();\r\n        //æ°å¢æ¹æ¡isDefaultéè¦è®¾ç½®ä¸ºfalse\r\n        solution.isDefault = false;\r\n        //æ°å¢æ¹æ¡çç­éæ¡ä»¶ï¼æ¯å½åéä¸­çç­éæ¡ä»¶\r\n        solution.queryConditions = this.selectedFieldConditions;\r\n        //è®¾ç½®ç±»åè¦æ¸ç©º\r\n        solution.type = \"\";\r\n        solution.isChanged = false;\r\n        return solution;\r\n    }\r\n\r\n    /**\r\n     * å¦å­ä¸ºç¡®å®äºä»¶å¤ç\r\n     * @param solution æ°å¢çæ¥è¯¢æ¹æ¡\r\n     */\r\n    saveAsConfrimHandler(_event: any) {\r\n        const solution: QuerySolutionVo = _event['querySolution'];\r\n        if (solution.queryConditions && solution.queryConditions.length) {\r\n            solution.queryConditions.forEach(element => {\r\n                if (!!element.readonly) {\r\n                    element.readonly = false;\r\n                }\r\n            });\r\n        }\r\n        this.httpService.create(solution, this.sessionId).subscribe(\r\n            () => {\r\n                //éæ°è®¾ç½®å¨å±çé»è®¤æ¹æ¡\r\n                if (solution.isDefault) {//è¢«è®¾ç½®ä¸ºé»è®¤æ¹æ¡\r\n                    this.defaultQuerySolution = solution;\r\n                    this.querySolutionVos = this.querySolutionVos.map(vo => {\r\n                        vo.isDefault = false;\r\n                        return vo;\r\n                    });\r\n                }\r\n                //ç¨æ·ä¿å­èªå·±çç­éæ¹æ¡åï¼ä¸åæ¾ç¤ºç³»ç»é»è®¤çæ¹æ¡\r\n                if (this.querySolutionVos.length === 1 && this.querySolutionVos[0].isSystem) {\r\n                    //ç¨æ·æ²¡æéç½®èªå·±çç­éæ¹æ¡æ¶ï¼æèç¨æ·åªéç½®äºä¸ä¸ªç­éæ¹æ¡æ¶ï¼æ­¤æ°ç»é½æä¸ä¸ªæ¹æ¡ï¼è¥æ­¤æ¹æ¡æ¯ç³»ç»é»è®¤æ¹æ¡ï¼ååºå¨å¦å­ä¸ºæ¶å æ\r\n                    this.querySolutionVos = new Array<QuerySolutionVo>();\r\n                }else if(this.querySolutionVos.length===2&&this.enableHistory){   \r\n                    let filterSolutionVos = new Array<QuerySolutionVo>();                 \r\n                    filterSolutionVos=this.querySolutionVos.filter(item=>{\r\n                        if(item.type=='pre'){\r\n                            return true;\r\n                        }\r\n                        return !item.isSystem\r\n                    })\r\n                    this.querySolutionVos=filterSolutionVos;\r\n                }\r\n\r\n                this.querySolutionVos.push(solution);\r\n                this.selectedSolution = solution;\r\n                this.showSaveButton = this.selectedSolution.isSystem ? false : true;\r\n                this.selectedFieldConditions = this.selectedSolution.queryConditions;\r\n                this.solutionService.showInfo(this.localeService.getValue(\"querySolution.container.saveSuccess\"), 'success', '', 1500);\r\n            },\r\n            error => {\r\n                this.solutionService.showInfo(this.localeService.getValue(\"querySolution.container.saveFail\"), 'error', '', 1500);\r\n                throw error;\r\n            }\r\n        );\r\n    }\r\n\r\n    /**\r\n     * æå¼ç®¡ççé¢\r\n     */\r\n    openManangerDialog() {\r\n        this.manageDialog.show(cloneDeep(this.querySolutionVos));\r\n    }\r\n\r\n    /**\r\n     * ç®¡ççé¢ç¡®å®å¤ç\r\n     * @param _event\r\n     * @param dialog\r\n     */\r\n    managerConfirmHandler(_event: any) {\r\n        let obj: object = _event;\r\n        if (obj['validator'] == true) {\r\n            //ç¹å»checkboxæ¶ï¼newDefaultQuerySolutionè¢«èµå¼ï¼ å¨å±é»è®¤æ¹æ¡è¢«å é¤æ¶ï¼newDefaultQuerySolutionåä¸ºnull\r\n            const defaultId = obj['newDefaultQuerySolution'] ? obj['newDefaultQuerySolution'].id : '';\r\n            const belongId = this.formId;\r\n            //è¥æ²¡æå é¤ä»»ä½æ¹æ¡ï¼deletedQuerySolutionVosä¼æ¯ä¸ä¸ªç©ºæ°ç»\r\n            const deletedIds = obj['deletedQuerySolutionIds'];\r\n            this.httpService.batchUpdate({ defaultId, belongId, deletedIds }, this.sessionId).subscribe(\r\n                () => {\r\n                    //æå é¤åçvoèµå¼ç» this.querySolutionVosï¼å¦ææ²¡å é¤æ¹æ¡ï¼ this.querySolutionVosè·obj['splicedQuerySolutionVos']åå¼\r\n                    //é»è®¤æ¹æ¡çååä¹è®°å½å¨updatedQuerySolutionVosä¸­\r\n                    this.querySolutionVos = obj['updatedQuerySolutionVos'];\r\n                    if (!obj['currentDefaultQuerySolutionId']) {//å¦æä¼ è¿æ¥çå½åé»è®¤æ¹æ¡idæ¯ç©ºï¼ä»£è¡¨ææé»è®¤æ¹æ¡é½åæ¶äº\r\n                        this.defaultQuerySolution = null;\r\n                    }\r\n                    //å¦ææé»è®¤æ¹æ¡åæ¾ç¤ºé»è®¤æ¹æ¡ï¼å¦ææ²¡æé»è®¤æ¹æ¡åç´æ¥æ¾ç¤ºå½åæ¥è¯¢æ¹æ¡çç¬¬ä¸ä¸ªï¼å¦ææ²¡æä»»ä½æ¥è¯¢æ¹æ¡åç´æ¥æ¸ç©ºæ¥è¯¢æ¹æ¡ï¼åæ¾ç¤ºç³»ç»é¢ç½®çé»è®¤æ¹æ¡\r\n                    if (defaultId) {\r\n                        //å·²è®¾ç½®é»è®¤æ¹æ¡\r\n                        this.select(obj['newDefaultQuerySolution']);\r\n                        this.defaultQuerySolution = obj['newDefaultQuerySolution'];\r\n                    } else {\r\n                        //æªæ´æ¹é»è®¤æ¹æ¡ï¼å¤æ­å½åéæ©çæ¥è¯¢æ¹æ¡æ¯å¦å·²è¢«å é¤\r\n                        if (deletedIds.includes(this.selectedSolution.id)) {//å¦æè¢«å é¤\r\n                            if (this.querySolutionVos.length > 0) {\r\n                                if(this.enableHistory&&this.querySolutionVos.length==1&&this.querySolutionVos[0].type=='pre'){\r\n                                    this.select(this.sysQuerySolutionVo);\r\n                                    this.querySolutionVos.push(this.sysQuerySolutionVo);\r\n                                }else{\r\n                                    this.select(this.querySolutionVos[0]);\r\n                                }\r\n                            } else {\r\n                                this.select(this.sysQuerySolutionVo);\r\n\r\n                                this.querySolutionVos.push(this.sysQuerySolutionVo);\r\n                            }\r\n                        } else {\r\n                            //ä»ä¹ä¹æ²¡åç\r\n                            //æææçé»è®¤é½åæ¶äº\r\n                        }\r\n                    }\r\n                    this.solutionService.showInfo(this.localeService.getValue(\"querySolution.container.saveSuccess\"), 'success', '', 1500);\r\n                },\r\n                error => {\r\n                    this.solutionService.showInfo(this.localeService.getValue(\"querySolution.container.saveFail\"), 'error', '', 1500);\r\n                    return Observable.throw(error);\r\n                }\r\n            )\r\n        } else {\r\n            //æ ¡éªå¤±è´¥\r\n        }\r\n    }\r\n\r\n    /**\r\n     * æ§è¡ç­é\r\n     */\r\n    query() {\r\n        if (!this.isDisabled) {\r\n            const errorArr = this.solutionService.isValid(this.selectedFieldConditions);\r\n            if (errorArr && errorArr.length) {\r\n                const errorFields = errorArr.map(error => error.field);\r\n                this.solutionService.showInfo(this.localeService.getValue(\"querySolution.container.require\").replace('{fields}', errorFields.join(', ')), 'warning', '', 2500);\r\n            } else {\r\n                const queryConditions = cloneDeep(this.selectedFieldConditions);\r\n                this.solutionHandler.setFilterConditions(queryConditions);\r\n                this.queryEmitter.emit(queryConditions);\r\n                // æ´æ°åå²è®°å½\r\n                this.changeQueryHistroy();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * æ¸ç©º->æ¡ä»¶å¨é¨éç½®ä¸ºç©º\r\n     */\r\n    clear() {\r\n        // this.isFold = !this.isFold;\r\n        const isNotEmpty = this.selectedFieldConditions.some(condition => condition.value.isEmpty() == false);\r\n        if (isNotEmpty) {\r\n            const newList = cloneDeep(this.farrisQueryCondition.resetSelectedConditionValues(true));\r\n            this.selectedFieldConditions = newList;\r\n            this.selectedSolution.queryConditions = newList;\r\n            this.solutionHandler.setCurrentQueryConditions(cloneDeep(newList));\r\n            this.solutionHandler.setFilterConditions(newList);\r\n            this.markAsChanged(true, this.selectedSolution.id);\r\n            this.query();\r\n        }\r\n    }\r\n    /**\r\n     * æå æé®çæ¸ç©º\r\n     */\r\n    foldClearHandler() {\r\n        if (this.isFold) {\r\n            // å¦æç¹å»çæ¶åæ¯åæç\r\n            this.isFold = false;\r\n            if (this.summaryConditions.length > 0) {\r\n                this.summaryConditions = [];\r\n                this.clear();\r\n            }\r\n        } else {\r\n            // å¦æç¹å»çæ¶åæ¯å±å¼ç\r\n            this.clear();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * ç®­å¤´ç¹å»äºä»¶\r\n     */\r\n    arrowClick() {\r\n        this.isFold = !this.isFold;\r\n        this.whenFoldSetSummaryConditions();\r\n        if (!this.isFold) {\r\n            this.summaryConditions = [];\r\n        }\r\n    }\r\n    private whenFoldSetSummaryConditions() {\r\n        if (this.isFold) {\r\n            // å¦æåæ\r\n            const isNotEmpty = this.selectedFieldConditions.some(condition => condition.value.isEmpty() == false);\r\n            if (isNotEmpty) {\r\n                this.summaryConditions = this.selectedFieldConditions.filter(condition => condition.value.isEmpty() == false);\r\n            } else {\r\n                this.summaryConditions = [];\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * ä¸ºç³»ç»é¢ç½®æ¹æ¡æèèªå®ä¹æ¥è¯¢æ¹æ¡è®¾ç½®ç­éæ¡ä»¶é»è®¤å¼\r\n     * @param configs é»è®¤å¼è®¾ç½®\r\n     * @param selectedSolution å½åéæ©çç­éæ¹æ¡\r\n     */\r\n    setQueryConditionValues(configs: DefaultConfigs, selectedSolution: QuerySolutionVo): void {\r\n        let targetSolution: QuerySolutionVo;\r\n        let targetSolutionWithValues: QuerySolutionVo;\r\n        if (configs && configs.fieldConfigs && configs.fieldConfigs.length) {\r\n            if(selectedSolution.hasOwnProperty('type')&&selectedSolution['type']=='pre'){\r\n                //å¦ææ¯åå²è®°å½\r\n                targetSolution=null; \r\n                this.select(selectedSolution);\r\n            }else{\r\n                targetSolution = configs.isCurrent ? selectedSolution : (selectedSolution.isSystem ? selectedSolution : null);\r\n            }\r\n            if (targetSolution && targetSolution.queryConditions && targetSolution.queryConditions.length) {\r\n                targetSolutionWithValues = cloneDeep(this.solutionService.setValues(targetSolution, configs.fieldConfigs, !!configs.readonly));\r\n                this.doneSetDefaultValue = true;\r\n                this.select(targetSolutionWithValues);\r\n            } else {\r\n                //ä¸ä¸ºèªå®ä¹æ¹æ¡è®¾ç½®é»è®¤å¼æ¶ï¼æ è®°ä¸è¦ä¸ºå¶èµé»è®¤å¼çæå¾ï¼ä½æªæå\r\n                this.doneSetDefaultValue = true;\r\n\r\n                //å¦ææ²¡æè®¾ç½®é»è®¤å¼ï¼å°±æå½åéä¸­æ¹æ¡çæ¡ä»¶çå¼ä¼ åº\r\n                this.solutionHandler.setCurrentQueryConditions(this.selectedSolution.queryConditions);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * å è½½ç­éæ¹æ¡åèªå¨æ¥è¯¢\r\n     * @param currentSolution å½åç­éæ¹æ¡ \r\n     */\r\n    initAutoQuery(currentSolution: QuerySolutionVo): void {\r\n        if (this.enableInitQuery && this.doneInitQuery && this.enableHistory) {\r\n            // å·²éè¿åå²è®°å½è¿è¡è¿æ¥è¯¢\r\n            return;\r\n        }\r\n        let enableQuery: boolean = true;\r\n        if (currentSolution && currentSolution.queryConditions && currentSolution.queryConditions.length) {\r\n            if (this.isSetDefaultValue && !this.doneSetDefaultValue) {\r\n                enableQuery = false;\r\n            }\r\n        } else {\r\n            enableQuery = false;\r\n        }\r\n\r\n        if (enableQuery && this.enableInitQuery) {\r\n            // this.solutionHandler.setFilterConditions(this.selectedSolution.queryConditions); æ§è¡queryæ¹æ³æ¶ï¼å·²ç»æ§è¡setFilterConditions\r\n            //if(this._self.nativeElement.querySelector('.farris-panel .btn-group .btn-primary')){\r\n            this.query();\r\n            this.doneInitQuery = true;\r\n            //}\r\n        }\r\n    }\r\n\r\n    /**\r\n     * å½åæ¥è¯¢æ¹æ¡çç­éæ¡ä»¶åçååæ¶ï¼æ è®°æ¹æ¡å¤äºç¼è¾ç¶æ\r\n     * @param isChanged æ¹æ¡æ¯å¦å¤äºç¼è¾ç¶æ\r\n     * @param solutionId éè¦æ è®°æ¯å¦å¤äºç¼è¾ç¶æçæ¹æ¡çid\r\n     */\r\n    markAsChanged(isChanged: boolean, solutionId: string) {\r\n        this.querySolutionVos.forEach(solution => {\r\n            if (solution.id == solutionId)\r\n                solution.isChanged = isChanged;\r\n        });\r\n        this.selectedSolution.isChanged = isChanged;\r\n        this.cdf.detectChanges();\r\n    }\r\n\r\n    /**\r\n     * å¤çç­éæé®åæ¸ç©ºæé®çååºå¼ä½ç½®åæ´\r\n     * @param $event farris-queryconditionç»ä»¶åé¨æ¯å¦æ¾ç¤ºæé®\r\n     */\r\n    // showButtonHandle($event: any) {\r\n    //     if(!this.isDisabled){\r\n    //         let data = $event;\r\n    //         this.queryButtonOnRight = !data;\r\n    //         if(this.enableInitQuery && !this.doneInitQuery) {\r\n    //             this.initAutoQuery(this.selectedSolution);\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    /**\r\n     * é®ççå¬å½æ°ï¼å½æä¸åè½¦é®æ¶ç¸å½äºæä¸ç­éæé®\r\n     */\r\n    private listenKeyBoard() {\r\n        this._self.nativeElement.addEventListener(\"keydown\", this.handleKeyDown);\r\n    }\r\n\r\n    handleKeyDown = (event) => {\r\n        if (event.key == 'Enter')\r\n            this.query();\r\n    }\r\n    /**\r\n     * èªå¨åå§åæ¥è¯¢\r\n     * å¯ç¨åå²è®°å½ï¼å¹¶ä¸å¯ç¨äºåå§åæ¥è¯¢ï¼å¦æææ¡ä»¶ï¼å°±è¿è¡æ¥è¯¢\r\n     */\r\n    private initAutoQueryByLS() {\r\n        // å¯ç¨åå²\r\n        if (this.enableHistory && !this.isDisabled) {\r\n            // key\r\n            this.setLSKey();\r\n            // åå§åå¯¹è±¡\r\n            this.initQuerySolution();\r\n            // å¦æè®¾ç½®äºåå§æ¥è¯¢\r\n            if (this.enableInitQuery) {\r\n                this.formatInitQuerySolution();\r\n                if (this.historyRefer['foundSchme']['queryConditions'].length > 0) {\r\n                    const queryConditions = cloneDeep(this.historyRefer['foundSchme']['queryConditions']);\r\n                    this.selectedFieldConditions = queryConditions;\r\n                    // è®¾ç½®æ¥è¯¢æ¡ä»¶\r\n                    this.solutionHandler.setFilterConditions(queryConditions);\r\n                    // æåºæ¥è¯¢äºä»¶\r\n                    this.queryEmitter.emit(queryConditions);\r\n                    // æ è®°\r\n                    this.doneInitQuery = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * åå§å\r\n     */\r\n    private initQuerySolution() {\r\n        let querysolutionVO = new QuerySolutionVo();\r\n        querysolutionVO.id = this.solutionService.getGuid();\r\n        querysolutionVO.code = this.localeService.getValue(\"querySolution.container.histroyName\");\r\n        querysolutionVO.queryConditions = [];\r\n        querysolutionVO.belongId = this.formId;\r\n        querysolutionVO.isSystem = true;\r\n        querysolutionVO.type = 'pre';\r\n        this.historyRefer['foundSchme'] = querysolutionVO;\r\n    }\r\n    /**\r\n     * åå§åæ¥èªLSçæ¡ä»¶\r\n     */\r\n    private formatInitQuerySolution() {\r\n        let histroyCondition = this.httpService.getLS(this.historyRefer.schemeKeyLS);\r\n        if (histroyCondition.length > 0) {\r\n            let convertor = new QuerySolutionVoConvertor();\r\n            this.historyRefer['foundSchme']['queryConditions'] = histroyCondition;\r\n            // è§èåæ¡ä»¶\r\n            this.historyRefer['foundSchme'] = this.formatQuerySolutionVO(convertor, this.historyRefer['foundSchme']);\r\n            // æ´æ°éç½®\r\n            this.solutionService.updateControl(this.historyRefer['foundSchme'],this.resetFieldConfigs);\r\n            this.historyRefer.initCondition = true;\r\n        }\r\n    }\r\n    /**\r\n     * ä¿å­ä¹åæ´æ°åå²\r\n     */\r\n    private changeQueryHistroy(updateAll = true) {\r\n        if (!this.enableHistory) {\r\n            return;\r\n        }\r\n        if (this.selectedSolution['type'] == 'pre') {\r\n            this.selectedSolution['isChanged'] = false;\r\n        } else {\r\n            let preIndex = this.querySolutionVos.findIndex((qsolutionVO) => {\r\n                return qsolutionVO['type'] == 'pre';\r\n            });\r\n            // æ§è¡æ¥è¯¢ä¹åï¼ä¸æ¬¡æ¥è¯¢çä¿®æ¹å°±ä¸è®¤ä¸ºæ¯åæ´äº\r\n            if (preIndex > -1) {\r\n                this.querySolutionVos[preIndex]['isChanged'] = false;\r\n            }\r\n        }\r\n        const queryConditions = cloneDeep(this.selectedFieldConditions);\r\n\r\n        this.historyRefer['foundSchme'].queryConditions = queryConditions;\r\n        // æ´æ°ç¼å­\r\n        this.httpService.setLS(this.historyRefer.schemeKeyLS, this.historyRefer['foundSchme'].queryConditions);\r\n        if (updateAll) {\r\n            // åèµ·è¯·æ±ä¿å­åå²è®°å½\r\n            this.httpService.saveHistroy(this.historyRefer['foundSchme'], this.sessionId).subscribe(() => {\r\n\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * å¤çiframeåµå¥\r\n     */\r\n    private getTopWindow(): Window {\r\n        let curWin: Window = window.self;\r\n        try {\r\n            while (curWin.location.origin === curWin.parent.location.origin) {\r\n                if (curWin !== curWin.parent && !(curWin as any).isRTFTopWin) {\r\n                    curWin = curWin.parent;\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n        } catch (e) { }\r\n        return curWin;\r\n    }\r\n    /**\r\n     * è®¾ç½®key\r\n     */\r\n    private setLSKey() {\r\n        // è·åwindow\r\n        let curWindow = this.getTopWindow();\r\n        let userCode = '';\r\n        if (curWindow['gspframeworkService'] && curWindow['gspframeworkService'].hasOwnProperty('common')) {\r\n            userCode = curWindow['gspframeworkService']['common'].userInfos.get().code;\r\n        }\r\n        this.historyRefer.schemeKeyLS = userCode ? 'Scheme' + this._idSer.encrypt(userCode + this.formId) : '';\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nconst itemIndex = (item: any, data: any[]): number => {\r\n    for (let idx = 0; idx < data.length; idx++) {\r\n        if (data[idx].id === item.id) {\r\n            return idx;\r\n        }\r\n    }\r\n\r\n    return -1;\r\n};\r\n\r\n@Injectable()\r\nexport class EditService {\r\n    private createdItems: any[] = [];\r\n    private updatedItems: any[] = [];\r\n\r\n    public update(item: any): void {\r\n        if (!this.isNew(item)) {\r\n            const index = itemIndex(item, this.updatedItems);\r\n            if (index !== -1) {\r\n                this.updatedItems.splice(index, 1, item);\r\n            } else {\r\n                this.updatedItems.push(item);\r\n            }\r\n        } else {\r\n            const index = this.createdItems.indexOf(item);\r\n            this.createdItems.splice(index, 1, item);\r\n        }\r\n    }\r\n\r\n    public isNew(item: any): boolean {\r\n        return !item.id;\r\n    }\r\n\r\n    public assignValues(target: any, source: any): void {\r\n        Object.assign(target, source);\r\n    }\r\n    \r\n}\r\n","import { Component, OnInit, ViewChild, TemplateRef, Output, EventEmitter, Input} from '@angular/core';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { EditService } from '../service/edit.service';\r\nimport { NotifyService, NotifyOptions } from '@farris/ui-notify';\r\nimport { QuerySolutionVo } from '@farris/component-querycondition';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { DialogComponent } from '@farris/ui-dialog';\r\nimport { DatagridComponent } from '@farris/ui-datagrid';\r\nimport { cloneDeep } from 'lodash-es';\r\n@Component({\r\n    selector: 'app-solutionmanager',\r\n    templateUrl: './solutionmanager.component.html',\r\n    styleUrls: ['./solutionmanager.component.css'],\r\n    providers: [EditService]\r\n})\r\nexport class SolutionManangerComponent implements OnInit {\r\n\r\n    @Output() cancelEmitter: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() confirmEmitter: EventEmitter<any> = new EventEmitter<any>();\r\n    \r\n    // @Input()\r\n    // currentDefaultQuerySolutionId: string;\r\n    // @Input()\r\n    querySolutions: Array<QuerySolutionVo> = new Array<QuerySolutionVo>();\r\n\r\n    deletedQuerySolutionIds: Array<String> = new Array<String>();\r\n    checkedSolution: QuerySolutionVo;\r\n    listData: QuerySolutionVo[];\r\n\r\n    @ViewChild('dialog') dialog: DialogComponent;\r\n    // è·åå®ä¹çååæ ¼æ¨¡æ¿\r\n    @ViewChild('optCell') optCell: TemplateRef<any>;\r\n    @ViewChild('checkCell') checkCell: TemplateRef<any>;\r\n    @ViewChild('list') list: DatagridComponent;\r\n    columns: Array<any>;\r\n    title: string;\r\n\r\n    constructor(private formBuilder: FormBuilder, private editService: EditService, private notify: NotifyService, private localeService: LocaleService) { }\r\n\r\n\r\n    ngOnInit(): void {\r\n\r\n        this.columns = [\r\n            { field: 'code', width: 272, title: this.localeService.getValue('querySolution.manageDialog.name')},\r\n            { field: 'isSystem', width: 110, title: this.localeService.getValue('querySolution.manageDialog.property'), formatter: this.getSolutionProperty.bind(this), halign: 'center', align: 'center'},\r\n            { field: 'isDefault', width: 70, title: this.localeService.getValue('querySolution.manageDialog.default'), template: this.checkCell, halign: 'center', align: 'center'},\r\n            { width: 70, title: this.localeService.getValue('querySolution.manageDialog.operation'), template: this.optCell, halign: 'center', align: 'center'}\r\n        ];\r\n        this.title = this.localeService.getValue('querySolution.container.manage');\r\n    }\r\n\r\n    show(querySolutions: QuerySolutionVo[]){\r\n        if(querySolutions){\r\n            this.listData = this.findSolutionsWithoutSys(querySolutions);\r\n            this.querySolutions = querySolutions;\r\n        }\r\n        this.checkedSolution = this.querySolutions.find(vo => vo.isDefault);\r\n\r\n        this.deletedQuerySolutionIds = [];\r\n        // this.checkedSolution = undefined;\r\n        this.dialog.show();\r\n    }\r\n\r\n    getSolutionProperty(value: boolean) {\r\n        return value ? this.localeService.getValue(\"querySolution.manageDialog.system\") : this.localeService.getValue(\"querySolution.manageDialog.personal\");\r\n    }\r\n\r\n    findSolutionsWithoutSys(querySolutions: QuerySolutionVo[]): QuerySolutionVo[]{\r\n        const result: QuerySolutionVo[] = [];\r\n        querySolutions.forEach(qs => {\r\n            if(!qs.isSystem)\r\n                result.push(qs);\r\n        });\r\n        return result;\r\n    }\r\n\r\n    delelteSolution(dataItem: QuerySolutionVo) {\r\n        this.deletedQuerySolutionIds.push(dataItem.id);\r\n        if (this.checkedSolution && dataItem.id == this.checkedSolution.id) {\r\n            this.checkedSolution = null;\r\n        }\r\n        //å½checkedSolutionä¸å­å¨ï¼ç´æ¥å é¤\r\n        for(let i=0; i<this.querySolutions.length; i++){\r\n            if(dataItem.id == this.querySolutions[i].id){\r\n                this.querySolutions.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n        this.listData = this.findSolutionsWithoutSys(this.querySolutions);\r\n    }\r\n\r\n    setDefault(checked: boolean, dataItem: QuerySolutionVo) {\r\n        if (checked) {//if checkedï¼è®¾ç½®å½åvoä¸ºé»è®¤ï¼å¶ä»è®¾ä¸ºéé»è®¤\r\n            this.checkedSolution = dataItem;\r\n            //key pointï¼\r\n            // this.currentDefaultQuerySolutionId = dataItem.id;\r\n            this.querySolutions = this.querySolutions.map(vo => {\r\n                if(vo.id == dataItem.id){\r\n                    vo.isDefault = true;\r\n                }else{\r\n                    vo.isDefault = false;\r\n                }\r\n                return vo;\r\n            });\r\n        }\r\n        else {//if unchecked, è®¾ç½®å½åvoä¸ºéé»è®¤ï¼å¶ä½voä¸å; æ²¡æcheckedSolutionæ¶\r\n            if (dataItem.id == this.checkedSolution.id) {\r\n                this.checkedSolution = null;\r\n                // this.currentDefaultQuerySolutionId = '';\r\n                this.querySolutions = this.querySolutions.map(vo => {\r\n                    if(vo.id == dataItem.id){\r\n                        vo.isDefault = false;\r\n                    }\r\n                    return vo;\r\n                });\r\n            }\r\n        }\r\n        this.listData = this.findSolutionsWithoutSys(this.querySolutions);\r\n        this.list.refresh();\r\n    }\r\n\r\n    cancel() {\r\n        this.dialog.close();\r\n    }\r\n\r\n    confirm() {\r\n        let obj = new Object();\r\n        \r\n        obj['deletedQuerySolutionIds'] = this.deletedQuerySolutionIds;\r\n        obj['newDefaultQuerySolution'] = cloneDeep(this.checkedSolution);\r\n        obj['updatedQuerySolutionVos'] = cloneDeep(this.querySolutions);\r\n        // obj['currentDefaultQuerySolutionId'] = this.currentDefaultQuerySolutionId;\r\n\r\n        if(this.deletedQuerySolutionIds.length > 0 || this.checkedSolution && this.checkedSolution.id){\r\n            obj['validator'] = true;\r\n        }else{\r\n            obj['validator'] = false;\r\n        }\r\n        this.confirmEmitter.emit(obj);\r\n        this.dialog.close();\r\n    }\r\n}\r\n","import { Component, OnInit, Output, EventEmitter, ViewChild, TemplateRef, HostBinding, ViewEncapsulation, ElementRef, Input } from '@angular/core';\r\nimport { NotifyService } from '@farris/ui-notify';\r\nimport { QuerySolutionVo, SolutionService } from '@farris/component-querycondition';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { DialogComponent } from '@farris/ui-dialog';\r\nimport { cloneDeep } from 'lodash-es';\r\n\r\n@Component({\r\n  selector: 'app-saveasdialog',\r\n  templateUrl: './saveasdialog.component.html',\r\n  styleUrls: ['./saveasdialog.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class SaveAsDialogComponent implements OnInit {\r\n\r\n  @HostBinding('class') cls = 'saveasdialog';\r\n  @Output() cancelEmitter: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output() confirmEmitter: EventEmitter<any> = new EventEmitter<any>();\r\n  //@Inputå±æ§ï¼æ§ä»£ç æªè®¾ç½®ï¼æä¿ç\r\n  querySolution: QuerySolutionVo = new QuerySolutionVo();\r\n  //æ°å¢@Inputå±æ§\r\n  title: string;\r\n  //åé¨å±æ§\r\n  defaultQuerySolution: QuerySolutionVo;\r\n\r\n  @ViewChild('dialog') dialog: DialogComponent;\r\n\r\n  constructor(private notify: NotifyService, private solutionService: SolutionService, private localeService: LocaleService) { }\r\n\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  show(){\r\n    this.dialog.show();\r\n  }\r\n\r\n  cancel() {\r\n    // this.cancelEmitter.emit(true);\r\n    this.dialog.close();\r\n  }\r\n\r\n  confirm() {\r\n    if (!this.querySolution.code) {\r\n      this.solutionService.showInfo(this.localeService.getValue('querySolution.saveAsDialog.pleaseInput'), 'info', '', 1500);\r\n      return;\r\n    }\r\n    let obj = new Object();\r\n    obj['querySolution'] = cloneDeep(this.querySolution);\r\n    this.confirmEmitter.emit(obj);\r\n    this.dialog.close();\r\n  }\r\n\r\n  setDefault(checkStatus: boolean) {\r\n    this.querySolution.isDefault = checkStatus;\r\n  }\r\n}\r\n","import { Component, OnInit, Input, Injector, OnDestroy } from '@angular/core';\r\nimport { QueryCondition, ControlType, TextValue, DropDownListControl, InputGroupValue, SmartHelpValue, NumberRangeValue, RadioControl, CheckBoxControl, CheckBoxValue } from '@farris/component-querycondition';\r\nimport { DateTimeHelperService } from '@farris/ui-common/date';\r\nimport { NumberHelperService } from '@farris/ui-common/number';\r\nimport { LocaleService } from '@farris/ui-locale';\r\n\r\n@Component({\r\n  selector: 'lib-summary-condition',\r\n  templateUrl: './summary-condition.component.html',\r\n  styleUrls: ['./summary-condition.component.css']\r\n})\r\nexport class SummaryConditionComponent implements OnInit {\r\n\r\n\r\n  private _condition: QueryCondition;\r\n  // å½åcontrolType\r\n  private _conditionType;\r\n  // åéç¬¦\r\n  private _spliter = '';\r\n  // æ¯å¦åºé´\r\n  private _isRange = false;\r\n  private showTime = false;\r\n  private textField = 'name';\r\n  private valueField = 'value';\r\n  // ä»æå¡å¨ç«¯åå¼æ¯æ ¼å¼ååç\r\n  private returnFormat = '';\r\n  // éè¦è½¬åç±»åæ ¼å¼çè¡¨è¾¾å¼\r\n  private format: any;\r\n  // è½¬æ¢ç±»åç¨å°çæ°æ®\r\n  private dataSource;\r\n  // ææ¬æ¾ç¤º\r\n  text = \"\";\r\n\r\n  @Input()\r\n  set condition(qCondition) {\r\n    this._condition=qCondition;\r\n    this.formatCondition();\r\n  }\r\n  get condition(): QueryCondition {\r\n    return this._condition;\r\n  };\r\n  // å¤è¯­è¨\r\n  private currentLanguage: string;\r\n  // ååä½ç¬¦å·\r\n  private thousand = ',';\r\n  // å°æ°ç¹å¤ç¬¦å·\r\n  private decimal = '.';\r\n  // è´§å¸ç¬¦å·åå¼å±ç°å½¢å¼\r\n  private expression = '%s%v';\r\n\r\n  // formControlæ¾ç¤ºçææ¬\r\n  /**\r\n   * å½éåç±»å\r\n   \r\n  @Input() localizationType: string;*/\r\n  // è´§å¸ç¬¦å·ï¼é»è®¤æ¯RMB\r\n  currencySymbol = 'ï¿¥';\r\n  // åè¿å¶åé¢å¡«åçç¬¦å·\r\n  @Input() filledSymbol = '0';\r\n  //æ°å¼æ ¼å¼åæ°\r\n  private numberOptions;\r\n\r\n  private localeService: any;\r\n  constructor(\r\n    private dtHelper: DateTimeHelperService,\r\n    private numberHelper: NumberHelperService,\r\n    private injector: Injector\r\n  ) {\r\n    this.localeService = this.injector.get(LocaleService);\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  formatCondition() {\r\n    let qCondition = this.condition;\r\n    if (qCondition) {\r\n      this._conditionType = qCondition.control.getControlType();\r\n      let textValueObj;\r\n      let textOriginalValue = qCondition.value.getOriginalValue();\r\n      let startValue;\r\n      let endValue\r\n      switch (this._conditionType) {\r\n        case ControlType.Text:\r\n          //ææ¬\r\n          textValueObj = qCondition.value as TextValue;\r\n          textOriginalValue = textValueObj.value && textValueObj.value.trim();\r\n          break;\r\n        case ControlType.SingleNumber:\r\n          // æ°å¼\r\n          this.numberOptions = { precision: qCondition.control['precision'],type:'number' }\r\n          break;\r\n        case ControlType.NumberRange:\r\n          // æ°å¼åºé´\r\n          this._isRange = true;\r\n          this._spliter = '~';\r\n          this.numberOptions = { precision: qCondition.control['precision'],type:'number' };\r\n          startValue = qCondition.value['startValue'] ? qCondition.value['startValue'] : '';\r\n          endValue = qCondition.value['endValue'] ? qCondition.value['endValue'] : '';\r\n          textOriginalValue = [startValue, endValue].join(this._spliter);\r\n          break;\r\n        case ControlType.SingleDate:\r\n          //åä¸ªæ¥æ\r\n          this.returnFormat =  qCondition.control&&qCondition.control['returnFormat']?qCondition.control['returnFormat']:\"yyyy-MM-dd\";\r\n          this.format =  qCondition.control&&qCondition.control['format']?qCondition.control['format']:\"yyyy-MM-dd\";\r\n          break;\r\n\r\n        case ControlType.DateRange:\r\n          //æ¥æåºé´\r\n          this._isRange = true;\r\n          this._spliter = '~';\r\n          this.returnFormat = qCondition.control&&qCondition.control['returnFormat']?qCondition.control['returnFormat']:\"yyyy-MM-dd\";\r\n          this.format =  qCondition.control&&qCondition.control['format']?qCondition.control['format']:\"yyyy-MM-dd\";\r\n\r\n          startValue = qCondition.value['startTime'] ? qCondition.value['startTime'] : '';\r\n          endValue = qCondition.value['endTime'] ? qCondition.value['endTime'] : '';\r\n          textOriginalValue = [startValue, endValue].join(this._spliter);\r\n          break;\r\n\r\n        case ControlType.SingleYear:\r\n          // åªæå¹´\r\n          this.returnFormat = qCondition.control&&qCondition.control['returnFormat']?qCondition.control['returnFormat']:\"yyyy\";\r\n          this.format =  qCondition.control&&qCondition.control['format']?qCondition.control['format']:\"yyyy\";\r\n          break;\r\n        case ControlType.SingleMonth:\r\n          // åªææ\r\n          this.returnFormat = qCondition.control&&qCondition.control['returnFormat']?qCondition.control['returnFormat']:\"yyyy-MM\";\r\n          this.format =  qCondition.control&&qCondition.control['format']?qCondition.control['format']:\"yyyy-MM\";\r\n          break;\r\n        case ControlType.MonthRange:\r\n          // æèå´\r\n          this._isRange = true;\r\n          this._spliter = '~';\r\n          this.returnFormat =qCondition.control&&qCondition.control['returnFormat']?qCondition.control['returnFormat']:\"yyyy-MM\";\r\n          this.format =  qCondition.control&&qCondition.control['format']?qCondition.control['format']:\"yyyy-MM\";\r\n          startValue = qCondition.value['startTime'] ? qCondition.value['startTime'] : '';\r\n          endValue = qCondition.value['endTime'] ? qCondition.value['endTime'] : '';\r\n          break;\r\n        case ControlType.SingleDateTime:\r\n          // æ¶é´\r\n          this.showTime = true;\r\n          this.returnFormat=qCondition.control['returnFormat']?qCondition.control['returnFormat']:this.returnFormat;\r\n          this.format ='yyyy-MM-dd HH:mm:ss';\r\n          if(qCondition.control){\r\n            if(qCondition.control['enableCustomFormat']){\r\n              this.format=qCondition.control['format']?qCondition.control['format']:this.returnFormat;\r\n            }else{\r\n              this.format=qCondition.control&&qCondition.control['format']?qCondition.control['format']+' HH:mm:ss':this.returnFormat;\r\n            }\r\n          }         \r\n          break;\r\n        case ControlType.DateTimeRange:\r\n          // æ¶é´åºé´\r\n          this.showTime = true;\r\n          this._isRange = true;\r\n          this._spliter = '~';\r\n          this.returnFormat=qCondition.control['returnFormat']?qCondition.control['returnFormat']:this.returnFormat;\r\n          this.format ='yyyy-MM-dd HH:mm:ss';\r\n          if(qCondition.control){\r\n            if(qCondition.control['enableCustomFormat']){\r\n              this.format=qCondition.control['format']?qCondition.control['format']:this.returnFormat;\r\n            }else{\r\n              this.format=qCondition.control&&qCondition.control['format']?qCondition.control['format']+' HH:mm:ss':this.returnFormat;\r\n            }\r\n          }\r\n          startValue = qCondition.value['startTime'] ? qCondition.value['startTime'] : '';\r\n          endValue = qCondition.value['endTime'] ? qCondition.value['endTime'] : '';\r\n          break;\r\n\r\n        case ControlType.BoolCheck:\r\n          // å¸å°å¼-åä¸ªå¼\r\n          let checkValue= (qCondition.value as CheckBoxValue).value;\r\n          textOriginalValue =checkValue.length>0?checkValue['0']:null;\r\n          break;\r\n        case ControlType.DropDownList:\r\n          // ä¸æ\r\n          this._spliter = ',';\r\n          break;\r\n        case ControlType.Radio:\r\n          // åéç»\r\n          this._spliter = ',';\r\n          break;\r\n        case ControlType.InputGroup:\r\n          // inputgroup\r\n          textValueObj = qCondition.value as InputGroupValue;\r\n          textOriginalValue = textValueObj.textValue && textValueObj.textValue.trim();\r\n          break;\r\n        case ControlType.SmartHelp:\r\n          // å¸®å©\r\n          textValueObj = qCondition.value as SmartHelpValue;\r\n          textOriginalValue = textValueObj.textValue && textValueObj.textValue.trim();\r\n          break;\r\n        default:\r\n          textOriginalValue = qCondition.value.getOriginalValue();\r\n      }\r\n      this.text = this.formatValue(textOriginalValue);\r\n    } else {\r\n      this.text = '';\r\n    }\r\n  }\r\n  /**\r\n   * å¤çå¤è¯­è¨ï¼å¾å®\r\n   */\r\n  formatLang(value: any) {\r\n    return value && value[this.currentLanguage] ? value[this.currentLanguage] : '';\r\n  }\r\n  /**\r\n   * Cè´§å¸\r\n   * Dåè¿å¶\r\n   * Fæµ®ç¹æ°\r\n   * Næ°å­ï¼å¸¦ååä½\r\n   * Pç¾åæ¯\r\n   */\r\n  getFormatNumberValue(value: any) {\r\n    if (!this.format && !this.numberOptions) {\r\n      return value.toString();\r\n    }\r\n    if (this.numberOptions && this.numberOptions.type && this.numberOptions.type == 'number') {\r\n      if (this.numberOptions.formatter) {\r\n        return this.numberOptions.formatter(value);\r\n      }\r\n      else {\r\n        if (this.numberOptions.useThousands) {\r\n          // è®¾ç½®äºååä½\r\n          if (this.numberOptions.precision != undefined) {\r\n            this.format = 'n' + this.numberOptions.precision;\r\n          }\r\n          else {\r\n            this.format = 'n';\r\n          }\r\n        }\r\n        else {\r\n          // æ²¡æè®¾ç½®ååä½\r\n          if (this.numberOptions.precision != undefined) {\r\n            this.format = 'f' + this.numberOptions.precision;\r\n          }\r\n          else {\r\n            // æ²¡æè®¾ç½®ç²¾åº¦ï¼æ²¡æè®¾ç½®ååä½\r\n            return value.toString();\r\n          }\r\n        }\r\n      }\r\n    }else{\r\n      return value.toString();\r\n    }\r\n    const firstLetter = this.currencyToUpperCase(this.format.substring(0, 1));\r\n    const precision = Number(this.format.substring(1));\r\n    let config = {};\r\n    let result: any;\r\n    if (!/C|D|F|N|P/g.test(firstLetter)) {\r\n      console.warn(`ä¸æ¯æformatä¸º ${this.format} ç±»åçæ°å­æ ¼å¼å`);\r\n      return;\r\n    }\r\n    if (this.thousand) {\r\n      Object.assign(config, { thousand: this.thousand });\r\n    }\r\n    if (this.decimal) {\r\n      Object.assign(config, { decimal: this.decimal });\r\n    }\r\n    if (this.expression) {\r\n      Object.assign(config, { format: this.expression });\r\n    }\r\n    switch (firstLetter) {\r\n      case 'C':\r\n        Object.assign(config, { prefix: this.currencySymbol, precision });\r\n        result = this.numberHelper.formatMoney(value, config);\r\n        break;\r\n      case 'D':\r\n        result = this.toDecimal(value, precision);\r\n        break;\r\n      case 'F':\r\n        Object.assign(config, { prefix: '', thousand: '', precision });\r\n        result = this.numberHelper.formatMoney(value, config);\r\n        break;\r\n      case 'N':\r\n        Object.assign(config, { prefix: '', precision });\r\n        result = this.numberHelper.formatMoney(value, config);\r\n        break;\r\n      case 'P':\r\n        result = this.toPercent(value, precision);\r\n        break;\r\n    }\r\n    return result;\r\n  }\r\n  /**\r\n   * @param value è½¬æ¢æåè¿å¶çæ°å­\r\n   * @param precision åè¿å¶æ°å­çé¿åº¦\r\n   */\r\n  toDecimal(value: any, precision: any) {\r\n    if (value.toString().indexOf('.') > -1) {\r\n      console.warn('åè¿å¶è½¬æ¢ä»éæ´åç±»å');\r\n      return;\r\n    }\r\n    return (Array(precision).join(this.filledSymbol) + value).slice(-precision);\r\n  }\r\n  /**\r\n   * @param value è½¬æ¢æç¾åæ°çæ°å­\r\n   * @param decimal å°æ°ç¹ä¿çå ä½\r\n   */\r\n  toPercent(value: any, precision: any) {\r\n    return Number(value * 100).toFixed(Number(precision)) + '%';\r\n  }\r\n\r\n  /**\r\n   * å°è´§å¸ç¬¦å·é¦å­æ¯è½¬æ¢æå¤§å\r\n   */\r\n  currencyToUpperCase(value: any) {\r\n    return value.replace(/[a-z]+/g, (word: any) => {\r\n      return word.toUpperCase();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * å¤çå¹´ï¼Y=>y, D=>d\r\n   */\r\n  dateToUpperCase(value: any) {\r\n    let newFormat: any;\r\n    if (/Y/g.test(value) === true) {\r\n      newFormat = value.replace(/Y/g, 'y');\r\n    } else {\r\n      newFormat = value;\r\n    }\r\n    if (/D/g.test(newFormat) === true) {\r\n      newFormat = newFormat.replace(/D/g, 'd');\r\n    }\r\n\r\n    return newFormat;\r\n  }\r\n  /**\r\n   * æä¸¾ç±»åå¤ç\r\n   */\r\n  getFormatEnumValue(value: any) {\r\n    if (value == undefined || value === null || value === '') {\r\n      return '';\r\n    }\r\n    if (this.dataSource && this.dataSource.length) {\r\n      // å¯è½å­å¨å¤éæä¸¾ï¼ä½ä¸ºåéç¬¦  \r\n      // let curVals = ('' + value).split(',');\r\n      let curVals = ('' + value).split(this._spliter);\r\n      let nameResult = [];\r\n      for (let k = 0; k < curVals.length; k++) {\r\n        let findObj = this.dataSource.find(item => {\r\n          return item[this.valueField] == curVals[k];\r\n        });\r\n        if (findObj) {\r\n          nameResult.push(findObj[this.textField]);\r\n        }\r\n        else {\r\n          nameResult.push(curVals[k]);\r\n        }\r\n      }\r\n      if (nameResult.length > 0) {\r\n        // return nameResult.join(',');\r\n        return nameResult.join(this._spliter)\r\n      }\r\n      return '';\r\n    } else {\r\n      return value;\r\n    }\r\n  }\r\n  /**\r\n   * booleanå¼å¤ç\r\n   */\r\n  getFormatCheckBoxValue(value: boolean) {\r\n    if (value === true) {\r\n      return this.localeService.getValue('text.yes');\r\n    } else if (value === false || value == null || typeof value === 'undefined') {\r\n      return this.localeService.getValue('text.no');\r\n    } else {\r\n      return value;\r\n    }\r\n  }\r\n  /*\r\n  * æ¥ææ ¼å¼å\r\n  */\r\n  dateformat(value) {\r\n    let str;\r\n    if (!this.format) {\r\n      this.format = 'YYYY-MM-dd';\r\n    }\r\n    // å½åå¼æ¯å·²ç»æ ¼å¼ååçæ¥æå­ç¬¦ä¸²\r\n    if (this.returnFormat  && typeof value == 'string') {\r\n      value = this.getDateFromFormatedString(value, this.returnFormat);\r\n    }\r\n    if (this.format === 'hh:mm:ss' || this.format === 'HH:mm:ss') {\r\n      // æ ¼å¼åæ¶é´  ä¸´æ¶å¤ç\r\n      str = value;\r\n    } else {\r\n        // æ ¼å¼åæ¥æ\r\n        str = this.dtHelper.formatTo(value, this.dateToUpperCase(this.format));\r\n    }\r\n    return str;\r\n  }\r\n  private getDateFromFormatedString(dateString, format) {\r\n    var result = { year: 0, month: 0, day: 0, hour: 0, minite: 0, second: 0 };//å½ç¶è¿éå¯ä»¥é»è®¤1970-1-1æ¥\r\n    if (dateString) {\r\n      format.replace(/y{4}|Y{4}|M+|d+|D+|h+|H+|m+|s+/g, function (m, a, b, c) {//è¿éåªåäºå¹´ææ¥  å æ¶åç§ä¹æ¯å¯ä»¥ç\r\n        dateString.substring(a).replace(/\\d+/, function (d) {\r\n           if(d){\r\n              c = parseInt(d.substr(0,m.length), 10); \r\n            }\r\n        });\r\n        if (/y+/i.test(m) && !result.year) result.year = c;\r\n        if (/M+/.test(m) && !result.month) result.month = c;\r\n        if (/d+/i.test(m) && !result.day) result.day = c;\r\n        if (/h+/i.test(m) && !result.hour) result.hour = c;\r\n        if (/m+/.test(m) && !result.minite) result.minite = c;\r\n        if (/s+/.test(m) && !result.second) result.second = c;\r\n      });\r\n    }\r\n    result.day=result.day?result.day:1;\r\n    result.month=result.month?result.month:1;\r\n    var resultDate = new Date(result.year + '/' + result.month + '/' + result.day + ' ' + result.hour + ':' + result.minite + ':' + result.second);\r\n    return resultDate;\r\n  }\r\n\r\n  function (date, fmt) {\r\n    var o = {\r\n      'M+': date.getMonth() + 1, //æä»½\r\n      'd+': date.getDate(), //æ¥\r\n      'h+': date.getHours(), //å°æ¶\r\n      'm+': date.getMinutes(), //å\r\n      's+': date.getSeconds(), //ç§\r\n      'q+': Math.floor((date.getMonth() + 3) / 3), //å­£åº¦\r\n      'S': date.getMilliseconds() //æ¯«ç§\r\n    };\r\n    if (!fmt) {\r\n      fmt = 'yyyy-MM-dd hh:mm:ss';\r\n    }\r\n    if (/(y+)/.test(fmt)) {\r\n      fmt = fmt.replace(RegExp.$1, (date.getFullYear() + '').substr(4 - RegExp.$1.length));\r\n    }\r\n    for (var k in o) {\r\n      if (new RegExp('(' + k + ')').test(fmt)) {\r\n        fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : (('00' + o[k]).substr(('' + o[k]).length)));\r\n      }\r\n    }\r\n    return fmt;\r\n  }\r\n\r\n  /**\r\n   * æ ¼å¼åå¤ç\r\n   */\r\n  formatValue(value: any) {\r\n    let str: any;\r\n    if (this.currentLanguage) {\r\n      return this.formatLang(value);\r\n    }\r\n    // æ è®°ç±»å\r\n    if (this._conditionType !== ControlType.BoolCheck && (value == null || typeof value === 'undefined')) {\r\n      return '';\r\n    }\r\n    switch (this._conditionType) {\r\n      case ControlType.Text:\r\n        str = value;\r\n        break;\r\n      case ControlType.DateRange:\r\n      case ControlType.MonthRange:\r\n      case ControlType.DateTimeRange:\r\n        const dateValues = value.split(this._spliter);\r\n        let dataStr = [];\r\n        if (dateValues && dateValues.length) {\r\n          dateValues.forEach(date => {\r\n            let val = this.dateformat(date);\r\n            dataStr.push(val);\r\n          });\r\n        }\r\n        str = dataStr.join(this._spliter);\r\n        break;\r\n      case ControlType.SingleDate:\r\n      case ControlType.SingleDateTime:\r\n      case ControlType.SingleMonth:\r\n      case ControlType.SingleYear:\r\n        str = this.dateformat(value);\r\n        break;\r\n      case ControlType.SingleNumber:\r\n        // æ°å­\r\n        str = this.getFormatNumberValue(value);\r\n        break;\r\n      case ControlType.NumberRange:\r\n        // æ°å­ åºé´     \r\n        const numberValues = value.split(this._spliter);\r\n        let resultStr = [];\r\n        if (numberValues && numberValues.length) {\r\n          numberValues.forEach(date => {\r\n            let val = this.getFormatNumberValue(date);\r\n            resultStr.push(val);\r\n          });\r\n        }\r\n        str = resultStr.join(this._spliter);\r\n        break;\r\n      case ControlType.Radio:\r\n        // åéç»\r\n        this.dataSource = (this.condition.control as RadioControl).enumValues;\r\n        str = this.getFormatEnumValue(value);\r\n        break;\r\n      case ControlType.DropDownList:\r\n        // ä¸æ\r\n        this.dataSource = (this.condition.control as DropDownListControl).enumValues;\r\n        str = this.getFormatEnumValue(value);\r\n        break;\r\n      case ControlType.BoolCheck:\r\n        // å¸å°\r\n        //this.dataSource = (this.condition.control as CheckBoxControl).data;\r\n        str = this.getFormatCheckBoxValue(value);\r\n        break;\r\n      default:\r\n        str = value;\r\n    }\r\n\r\n    return str;\r\n  }\r\n}\r\n","import { Component, OnInit, Input,  ViewChild, ElementRef, NgZone, OnDestroy, HostBinding, AfterViewInit, ChangeDetectorRef } from '@angular/core';\r\nimport { QueryCondition} from '@farris/component-querycondition';\r\nimport ResizeObserver from \"resize-observer-polyfill\";\r\n@Component({\r\n  selector: 'lib-summary-list',\r\n  templateUrl: './summary-list.component.html',\r\n  styleUrls: ['./summary-list.component.css']\r\n})\r\nexport class SummaryListComponent implements OnInit, OnDestroy {\r\n    \r\n  @HostBinding('class.summary-list') cls=true;\r\n  @Input() conditions: Array<QueryCondition> = new Array<QueryCondition>();\r\n  @Input() enableTips = false;\r\n  @ViewChild('wrapper', { read: ElementRef }) wrapperEl: ElementRef;\r\n  private ro: ResizeObserver | null = null;\r\n  widthFlag = 0;\r\n  constructor(private ngZone:NgZone,private cd: ChangeDetectorRef) {\r\n\r\n  }\r\n  ngOnDestroy(): void {\r\n    if (this.ro) {\r\n      this.ro.unobserve(this.wrapperEl.nativeElement);\r\n      this.ro = null;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.observerElement();\r\n  }\r\n\r\n  private observerElement() {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      this.ro = new ResizeObserver((entries, observer) => {\r\n        const tempWidth = entries[0].contentRect.width;\r\n        // å®½åº¦ååè¶è¿80å¼å§è®¡ç®\r\n        if (Math.abs(tempWidth - this.widthFlag) > 15) {\r\n          this.widthFlag = tempWidth;\r\n          this.changeTipsState();\r\n        }\r\n      });\r\n      this.ro.observe(this.wrapperEl.nativeElement);\r\n    });\r\n  }\r\n  private changeTipsState() {\r\n    let tEnableTips=this.enableTips;\r\n    if (this.wrapperEl.nativeElement.clientWidth +2 < this.wrapperEl.nativeElement.scrollWidth) {\r\n      tEnableTips = true;\r\n    } else {\r\n      tEnableTips = false;\r\n    }\r\n    if(tEnableTips!==this.enableTips){\r\n      this.enableTips=tEnableTips;\r\n      this.cd.markForCheck();\r\n      this.cd.detectChanges();\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { QuerySolutionComponent } from './query-solution.component';\r\nimport { SolutionManangerComponent } from './solutionmanager/solutionmanager.component';\r\nimport { SaveAsDialogComponent } from './saveasdialog/saveasdialog.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { FarrisDialogModule } from '@farris/ui-dialog';\r\nimport { LookupModule } from '@farris/ui-lookup';\r\nimport { MultiSelectModule } from '@farris/ui-multi-select';\r\nimport { FieldGroupModule } from '@farris/ui-field-group';\r\nimport { InputGroupModule } from '@farris/ui-input-group';\r\nimport { FDropdownDirectiveTypeModule } from '@farris/ui-dropdown';\r\nimport { NotifyModule } from '@farris/ui-notify';\r\nimport { LoadingModule } from '@farris/ui-loading';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { SolutionService, QueryConditionModule } from '@farris/component-querycondition';\r\nimport { LocaleModule } from '@farris/ui-locale';\r\nimport { DatagridModule } from '@farris/ui-datagrid';\r\nimport { NumberHelperModule } from '@farris/ui-common/number';\r\nimport { DateHelperModule } from '@farris/ui-common/date';\r\nimport { FarrisTooltipModule } from '@farris/ui-tooltip';\r\nimport { SummaryConditionComponent } from './summary-condition/summary-condition.component';\r\nimport { SummaryListComponent } from './summary-list/summary-list.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    FarrisDialogModule,\r\n    LookupModule,\r\n    MultiSelectModule,\r\n    FieldGroupModule,\r\n    InputGroupModule,\r\n    FDropdownDirectiveTypeModule,\r\n    NotifyModule.forRoot(),\r\n    LoadingModule.forRoot(),\r\n    QueryConditionModule,\r\n    HttpClientModule,\r\n    LocaleModule,\r\n    DatagridModule,\r\n    NumberHelperModule,\r\n    DateHelperModule,\r\n    FarrisTooltipModule\r\n  ],\r\n  declarations: [\r\n    QuerySolutionComponent,\r\n    SolutionManangerComponent,\r\n    SaveAsDialogComponent,\r\n    SummaryConditionComponent,\r\n    SummaryListComponent,\r\n  ],\r\n  entryComponents:[\r\n    SolutionManangerComponent,\r\n    SaveAsDialogComponent\r\n  ],\r\n  providers:[SolutionService],\r\n  exports:[ \r\n    QuerySolutionComponent,\r\n    SolutionManangerComponent,\r\n    SaveAsDialogComponent\r\n  ]\r\n})\r\nexport class QuerySolutionModule { }\r\n"]}