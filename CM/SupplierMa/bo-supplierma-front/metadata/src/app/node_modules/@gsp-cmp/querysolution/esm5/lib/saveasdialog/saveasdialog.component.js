/**
 * @fileoverview added by tsickle
 * Generated from: lib/saveasdialog/saveasdialog.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Output, EventEmitter, ViewChild, HostBinding, ViewEncapsulation } from '@angular/core';
import { NotifyService } from '@farris/ui-notify';
import { QuerySolutionVo, SolutionService } from '@farris/component-querycondition';
import { LocaleService } from '@farris/ui-locale';
import { DialogComponent } from '@farris/ui-dialog';
import { cloneDeep } from 'lodash-es';
var SaveAsDialogComponent = /** @class */ (function () {
    function SaveAsDialogComponent(notify, solutionService, localeService) {
        this.notify = notify;
        this.solutionService = solutionService;
        this.localeService = localeService;
        this.cls = 'saveasdialog';
        this.cancelEmitter = new EventEmitter();
        this.confirmEmitter = new EventEmitter();
        //@Input属性，旧代码未设置，故保留
        this.querySolution = new QuerySolutionVo();
    }
    /**
     * @return {?}
     */
    SaveAsDialogComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @return {?}
     */
    SaveAsDialogComponent.prototype.show = /**
     * @return {?}
     */
    function () {
        this.dialog.show();
    };
    /**
     * @return {?}
     */
    SaveAsDialogComponent.prototype.cancel = /**
     * @return {?}
     */
    function () {
        // this.cancelEmitter.emit(true);
        this.dialog.close();
    };
    /**
     * @return {?}
     */
    SaveAsDialogComponent.prototype.confirm = /**
     * @return {?}
     */
    function () {
        if (!this.querySolution.code) {
            this.solutionService.showInfo(this.localeService.getValue('querySolution.saveAsDialog.pleaseInput'), 'info', '', 1500);
            return;
        }
        /** @type {?} */
        var obj = new Object();
        obj['querySolution'] = cloneDeep(this.querySolution);
        this.confirmEmitter.emit(obj);
        this.dialog.close();
    };
    /**
     * @param {?} checkStatus
     * @return {?}
     */
    SaveAsDialogComponent.prototype.setDefault = /**
     * @param {?} checkStatus
     * @return {?}
     */
    function (checkStatus) {
        this.querySolution.isDefault = checkStatus;
    };
    SaveAsDialogComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-saveasdialog',
                    template: "<farris-dialog #dialog [buttons]=\"saveasbuttonRef\" [width]=\"550\" [height]=\"310\" [title]=\"title\">\r\n    <div class=\"qs-save-as-input\">\r\n        <div class=\"farris-input-wrap\">\r\n            <input class=\"form-control\" placeholder=\"{{'querySolution.saveAsDialog.placeholder' | locale}}\" [(ngModel)]=\"querySolution.code\"/>\r\n        </div>\r\n        <div class=\"custom-control custom-checkbox qs-save-as-check\">\r\n            <input class=\"custom-control-input\" type=\"checkbox\" (change)=\"setDefault($event.target.checked)\" [(ngModel)]=\"querySolution.isDefault\"/>\r\n            <label class=\"custom-control-label\" (click)=\"setDefault(!querySolution.isDefault)\">{{'querySolution.saveAsDialog.setAsDefault' | locale}}</label>\r\n        </div>\r\n    </div>\r\n</farris-dialog>\r\n<ng-template #saveasbuttonRef>\r\n    <div class=\"qs-save-as-btn\">\r\n        <button class=\"btn btn-primary\" (click)=\"confirm()\">{{'querySolution.saveAsDialog.confirm' | locale}}</button>        \r\n        <button class=\"btn btn-secondary\" (click)=\"cancel()\">{{'querySolution.saveAsDialog.cancel' | locale}}</button>\r\n    </div>\r\n</ng-template>",
                    encapsulation: ViewEncapsulation.None,
                    styles: [".qs-save-as-btn .btn{float:right;margin-left:10px;font-size:14px;line-height:26px}.qs-save-as-btn .btn-secondary{min-width:70px}.qs-save-as-input{width:100%;line-height:20px;font-size:14px;padding:20px 10px}.qs-save-as-check{margin:10px auto}"]
                }] }
    ];
    /** @nocollapse */
    SaveAsDialogComponent.ctorParameters = function () { return [
        { type: NotifyService },
        { type: SolutionService },
        { type: LocaleService }
    ]; };
    SaveAsDialogComponent.propDecorators = {
        cls: [{ type: HostBinding, args: ['class',] }],
        cancelEmitter: [{ type: Output }],
        confirmEmitter: [{ type: Output }],
        dialog: [{ type: ViewChild, args: ['dialog',] }]
    };
    return SaveAsDialogComponent;
}());
export { SaveAsDialogComponent };
if (false) {
    /** @type {?} */
    SaveAsDialogComponent.prototype.cls;
    /** @type {?} */
    SaveAsDialogComponent.prototype.cancelEmitter;
    /** @type {?} */
    SaveAsDialogComponent.prototype.confirmEmitter;
    /** @type {?} */
    SaveAsDialogComponent.prototype.querySolution;
    /** @type {?} */
    SaveAsDialogComponent.prototype.title;
    /** @type {?} */
    SaveAsDialogComponent.prototype.defaultQuerySolution;
    /** @type {?} */
    SaveAsDialogComponent.prototype.dialog;
    /**
     * @type {?}
     * @private
     */
    SaveAsDialogComponent.prototype.notify;
    /**
     * @type {?}
     * @private
     */
    SaveAsDialogComponent.prototype.solutionService;
    /**
     * @type {?}
     * @private
     */
    SaveAsDialogComponent.prototype.localeService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2F2ZWFzZGlhbG9nLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc3AtY21wL3F1ZXJ5c29sdXRpb24vIiwic291cmNlcyI6WyJsaWIvc2F2ZWFzZGlhbG9nL3NhdmVhc2RpYWxvZy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLE1BQU0sRUFBRSxZQUFZLEVBQUUsU0FBUyxFQUFlLFdBQVcsRUFBRSxpQkFBaUIsRUFBcUIsTUFBTSxlQUFlLENBQUM7QUFDbkosT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ2xELE9BQU8sRUFBRSxlQUFlLEVBQUUsZUFBZSxFQUFFLE1BQU0sa0NBQWtDLENBQUM7QUFDcEYsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ2xELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNwRCxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBRXRDO0lBb0JFLCtCQUFvQixNQUFxQixFQUFVLGVBQWdDLEVBQVUsYUFBNEI7UUFBckcsV0FBTSxHQUFOLE1BQU0sQ0FBZTtRQUFVLG9CQUFlLEdBQWYsZUFBZSxDQUFpQjtRQUFVLGtCQUFhLEdBQWIsYUFBYSxDQUFlO1FBWm5HLFFBQUcsR0FBRyxjQUFjLENBQUM7UUFDakMsa0JBQWEsR0FBc0IsSUFBSSxZQUFZLEVBQU8sQ0FBQztRQUMzRCxtQkFBYyxHQUFzQixJQUFJLFlBQVksRUFBTyxDQUFDOztRQUV0RSxrQkFBYSxHQUFvQixJQUFJLGVBQWUsRUFBRSxDQUFDO0lBUXNFLENBQUM7Ozs7SUFHOUgsd0NBQVE7OztJQUFSO0lBRUEsQ0FBQzs7OztJQUVELG9DQUFJOzs7SUFBSjtRQUNFLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDckIsQ0FBQzs7OztJQUVELHNDQUFNOzs7SUFBTjtRQUNFLGlDQUFpQztRQUNqQyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssRUFBRSxDQUFDO0lBQ3RCLENBQUM7Ozs7SUFFRCx1Q0FBTzs7O0lBQVA7UUFDRSxJQUFJLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLEVBQUU7WUFDNUIsSUFBSSxDQUFDLGVBQWUsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxRQUFRLENBQUMsd0NBQXdDLENBQUMsRUFBRSxNQUFNLEVBQUUsRUFBRSxFQUFFLElBQUksQ0FBQyxDQUFDO1lBQ3ZILE9BQU87U0FDUjs7WUFDRyxHQUFHLEdBQUcsSUFBSSxNQUFNLEVBQUU7UUFDdEIsR0FBRyxDQUFDLGVBQWUsQ0FBQyxHQUFHLFNBQVMsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7UUFDckQsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDOUIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLEVBQUUsQ0FBQztJQUN0QixDQUFDOzs7OztJQUVELDBDQUFVOzs7O0lBQVYsVUFBVyxXQUFvQjtRQUM3QixJQUFJLENBQUMsYUFBYSxDQUFDLFNBQVMsR0FBRyxXQUFXLENBQUM7SUFDN0MsQ0FBQzs7Z0JBakRGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsa0JBQWtCO29CQUM1QixtcUNBQTRDO29CQUU1QyxhQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSTs7aUJBQ3RDOzs7O2dCQVhRLGFBQWE7Z0JBQ0ksZUFBZTtnQkFDaEMsYUFBYTs7O3NCQVluQixXQUFXLFNBQUMsT0FBTztnQ0FDbkIsTUFBTTtpQ0FDTixNQUFNO3lCQVFOLFNBQVMsU0FBQyxRQUFROztJQWdDckIsNEJBQUM7Q0FBQSxBQWxERCxJQWtEQztTQTVDWSxxQkFBcUI7OztJQUVoQyxvQ0FBMkM7O0lBQzNDLDhDQUFxRTs7SUFDckUsK0NBQXNFOztJQUV0RSw4Q0FBdUQ7O0lBRXZELHNDQUFjOztJQUVkLHFEQUFzQzs7SUFFdEMsdUNBQTZDOzs7OztJQUVqQyx1Q0FBNkI7Ozs7O0lBQUUsZ0RBQXdDOzs7OztJQUFFLDhDQUFvQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciwgVmlld0NoaWxkLCBUZW1wbGF0ZVJlZiwgSG9zdEJpbmRpbmcsIFZpZXdFbmNhcHN1bGF0aW9uLCBFbGVtZW50UmVmLCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBOb3RpZnlTZXJ2aWNlIH0gZnJvbSAnQGZhcnJpcy91aS1ub3RpZnknO1xyXG5pbXBvcnQgeyBRdWVyeVNvbHV0aW9uVm8sIFNvbHV0aW9uU2VydmljZSB9IGZyb20gJ0BmYXJyaXMvY29tcG9uZW50LXF1ZXJ5Y29uZGl0aW9uJztcclxuaW1wb3J0IHsgTG9jYWxlU2VydmljZSB9IGZyb20gJ0BmYXJyaXMvdWktbG9jYWxlJztcclxuaW1wb3J0IHsgRGlhbG9nQ29tcG9uZW50IH0gZnJvbSAnQGZhcnJpcy91aS1kaWFsb2cnO1xyXG5pbXBvcnQgeyBjbG9uZURlZXAgfSBmcm9tICdsb2Rhc2gtZXMnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhcHAtc2F2ZWFzZGlhbG9nJyxcclxuICB0ZW1wbGF0ZVVybDogJy4vc2F2ZWFzZGlhbG9nLmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9zYXZlYXNkaWFsb2cuY29tcG9uZW50LmNzcyddLFxyXG4gIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmVcclxufSlcclxuZXhwb3J0IGNsYXNzIFNhdmVBc0RpYWxvZ0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcblxyXG4gIEBIb3N0QmluZGluZygnY2xhc3MnKSBjbHMgPSAnc2F2ZWFzZGlhbG9nJztcclxuICBAT3V0cHV0KCkgY2FuY2VsRW1pdHRlcjogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcclxuICBAT3V0cHV0KCkgY29uZmlybUVtaXR0ZXI6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XHJcbiAgLy9ASW5wdXTlsZ7mgKfvvIzml6fku6PnoIHmnKrorr7nva7vvIzmlYXkv53nlZlcclxuICBxdWVyeVNvbHV0aW9uOiBRdWVyeVNvbHV0aW9uVm8gPSBuZXcgUXVlcnlTb2x1dGlvblZvKCk7XHJcbiAgLy/mlrDlop5ASW5wdXTlsZ7mgKdcclxuICB0aXRsZTogc3RyaW5nO1xyXG4gIC8v5YaF6YOo5bGe5oCnXHJcbiAgZGVmYXVsdFF1ZXJ5U29sdXRpb246IFF1ZXJ5U29sdXRpb25WbztcclxuXHJcbiAgQFZpZXdDaGlsZCgnZGlhbG9nJykgZGlhbG9nOiBEaWFsb2dDb21wb25lbnQ7XHJcblxyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgbm90aWZ5OiBOb3RpZnlTZXJ2aWNlLCBwcml2YXRlIHNvbHV0aW9uU2VydmljZTogU29sdXRpb25TZXJ2aWNlLCBwcml2YXRlIGxvY2FsZVNlcnZpY2U6IExvY2FsZVNlcnZpY2UpIHsgfVxyXG5cclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcblxyXG4gIH1cclxuXHJcbiAgc2hvdygpe1xyXG4gICAgdGhpcy5kaWFsb2cuc2hvdygpO1xyXG4gIH1cclxuXHJcbiAgY2FuY2VsKCkge1xyXG4gICAgLy8gdGhpcy5jYW5jZWxFbWl0dGVyLmVtaXQodHJ1ZSk7XHJcbiAgICB0aGlzLmRpYWxvZy5jbG9zZSgpO1xyXG4gIH1cclxuXHJcbiAgY29uZmlybSgpIHtcclxuICAgIGlmICghdGhpcy5xdWVyeVNvbHV0aW9uLmNvZGUpIHtcclxuICAgICAgdGhpcy5zb2x1dGlvblNlcnZpY2Uuc2hvd0luZm8odGhpcy5sb2NhbGVTZXJ2aWNlLmdldFZhbHVlKCdxdWVyeVNvbHV0aW9uLnNhdmVBc0RpYWxvZy5wbGVhc2VJbnB1dCcpLCAnaW5mbycsICcnLCAxNTAwKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgbGV0IG9iaiA9IG5ldyBPYmplY3QoKTtcclxuICAgIG9ialsncXVlcnlTb2x1dGlvbiddID0gY2xvbmVEZWVwKHRoaXMucXVlcnlTb2x1dGlvbik7XHJcbiAgICB0aGlzLmNvbmZpcm1FbWl0dGVyLmVtaXQob2JqKTtcclxuICAgIHRoaXMuZGlhbG9nLmNsb3NlKCk7XHJcbiAgfVxyXG5cclxuICBzZXREZWZhdWx0KGNoZWNrU3RhdHVzOiBib29sZWFuKSB7XHJcbiAgICB0aGlzLnF1ZXJ5U29sdXRpb24uaXNEZWZhdWx0ID0gY2hlY2tTdGF0dXM7XHJcbiAgfVxyXG59XHJcbiJdfQ==