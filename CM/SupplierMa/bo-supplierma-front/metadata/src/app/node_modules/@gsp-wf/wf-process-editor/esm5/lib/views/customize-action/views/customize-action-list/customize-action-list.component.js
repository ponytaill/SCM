/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, ViewChild, TemplateRef, Output, EventEmitter } from '@angular/core';
import { ProcessDesignerUIState } from '../../../../app/process-designer.uistate';
import { DatagridComponent } from '@farris/ui-datagrid';
import { CustomizeAciton } from '../../entities/customize-action.entity';
var CustomizeActionListComponent = /** @class */ (function () {
    function CustomizeActionListComponent(designerUIState) {
        this.designerUIState = designerUIState;
        this.submit = new EventEmitter();
        this.cancel = new EventEmitter();
        this.terminalList = [
            { value: 'app', text: '移动' },
            { value: 'web', text: 'web' },
            { value: 'web,app', text: 'web,移动' }
        ];
        this.cols = [
            { field: 'code', width: 100, title: '编号' },
            { field: 'name', width: 100, title: '名称' },
            {
                field: 'terminal', width: 100, title: '适用终端',
                formatter: {
                    type: 'enum',
                    options: { valueField: 'value', textField: 'text', data: this.terminalList }
                },
            },
            {
                field: 'isAll', width: 100, title: '是否默认',
                formatter: { type: 'boolean', options: { trueText: '是', falseText: '否' } }
            }
        ];
        this.customActionList = this.designerUIState.flowFormInfo.customizeActions || [];
    }
    /**
     * @return {?}
     */
    CustomizeActionListComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @return {?}
     */
    CustomizeActionListComponent.prototype.clickOK = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var selections = [];
        /** @type {?} */
        var checkeds = this.grid.checkeds;
        if (checkeds && checkeds.length > 0) {
            checkeds.forEach((/**
             * @param {?} action
             * @return {?}
             */
            function (action) {
                var e_1, _a;
                /** @type {?} */
                var item = new CustomizeAciton(action.data.id, action.data.code, action.data.name);
                item.terminalType = action.data.terminal;
                // item.enable = true;
                item.actualParameters = [];
                if (action.data.actualParameters && action.data.actualParameters.length > 0) {
                    try {
                        for (var _b = tslib_1.__values(action.data.actualParameters), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var p = _c.value;
                            /** @type {?} */
                            var param = (/** @type {?} */ ({
                                Name: p.code,
                                Value: p.value,
                                ValueText: p.name,
                                Tag: 'expression'
                            }));
                            item.actualParameters.push(param);
                        }
                    }
                    catch (e_1_1) { e_1 = { error: e_1_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_1) throw e_1.error; }
                    }
                }
                selections.push(item);
            }));
        }
        this.submit.emit(selections);
    };
    /**
     * @return {?}
     */
    CustomizeActionListComponent.prototype.clickCancel = /**
     * @return {?}
     */
    function () {
        this.cancel.emit(true);
    };
    CustomizeActionListComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-customize-action-list',
                    template: "<div class=\"f-utils-fill-flex-column farris-overflow-y-auto h-100 m-2\">\r\n  <farris-datagrid #grid [columns]=\"cols\" [data]=\"customActionList\" [idField]=\"'id'\" [fit]=\"true\"\r\n    [fitColumns]=\"true\" [pagination]='false' [multiSelect]=\"true\" [showCheckbox]=\"true\" [multiSelect]=\"true\"\r\n    [checkOnSelect]=\"true\" [selectOnCheck]=\"true\">\r\n  </farris-datagrid>\r\n</div>\r\n\r\n<ng-template #footer>\r\n  <button type=\"button\" class=\"btn btn-primary btn-sm px-3 mx-2\" (click)=\"clickOK()\">\u786E\u5B9A</button>\r\n  <button type=\"button\" class=\"btn btn-secondary btn-sm px-3\" (click)=\"clickCancel()\">\u53D6\u6D88</button>\r\n</ng-template>",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    CustomizeActionListComponent.ctorParameters = function () { return [
        { type: ProcessDesignerUIState }
    ]; };
    CustomizeActionListComponent.propDecorators = {
        grid: [{ type: ViewChild, args: ['grid',] }],
        footer: [{ type: ViewChild, args: ['footer',] }],
        submit: [{ type: Output }],
        cancel: [{ type: Output }]
    };
    return CustomizeActionListComponent;
}());
export { CustomizeActionListComponent };
if (false) {
    /** @type {?} */
    CustomizeActionListComponent.prototype.grid;
    /** @type {?} */
    CustomizeActionListComponent.prototype.footer;
    /** @type {?} */
    CustomizeActionListComponent.prototype.submit;
    /** @type {?} */
    CustomizeActionListComponent.prototype.cancel;
    /** @type {?} */
    CustomizeActionListComponent.prototype.customActionList;
    /**
     * @type {?}
     * @private
     */
    CustomizeActionListComponent.prototype.terminalList;
    /** @type {?} */
    CustomizeActionListComponent.prototype.cols;
    /**
     * @type {?}
     * @private
     */
    CustomizeActionListComponent.prototype.designerUIState;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3VzdG9taXplLWFjdGlvbi1saXN0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc3Atd2Yvd2YtcHJvY2Vzcy1lZGl0b3IvIiwic291cmNlcyI6WyJsaWIvdmlld3MvY3VzdG9taXplLWFjdGlvbi92aWV3cy9jdXN0b21pemUtYWN0aW9uLWxpc3QvY3VzdG9taXplLWFjdGlvbi1saXN0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsU0FBUyxFQUFFLFdBQVcsRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2hHLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDBDQUEwQyxDQUFDO0FBQ2xGLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3hELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSx3Q0FBd0MsQ0FBQztBQUd6RTtJQWtDRSxzQ0FBb0IsZUFBdUM7UUFBdkMsb0JBQWUsR0FBZixlQUFlLENBQXdCO1FBeEJqRCxXQUFNLEdBQUcsSUFBSSxZQUFZLEVBQVMsQ0FBQztRQUNuQyxXQUFNLEdBQUcsSUFBSSxZQUFZLEVBQU8sQ0FBQztRQUluQyxpQkFBWSxHQUFHO1lBQ3JCLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFO1lBQzVCLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFO1lBQzdCLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsUUFBUSxFQUFFO1NBQ3JDLENBQUM7UUFFRixTQUFJLEdBQUc7WUFDTCxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLEdBQUcsRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFO1lBQzFDLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsR0FBRyxFQUFFLEtBQUssRUFB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LDhDQUEyQzs7SUFFM0Msd0RBQXdCOzs7OztJQUV4QixvREFJRTs7SUFFRiw0Q0FZRTs7Ozs7SUFDVSx1REFBK0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgVmlld0NoaWxkLCBUZW1wbGF0ZVJlZiwgT3V0cHV0LCBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgUHJvY2Vzc0Rlc2lnbmVyVUlTdGF0ZSB9IGZyb20gJy4uLy4uLy4uLy4uL2FwcC9wcm9jZXNzLWRlc2lnbmVyLnVpc3RhdGUnO1xyXG5pbXBvcnQgeyBEYXRhZ3JpZENvbXBvbmVudCB9IGZyb20gJ0BmYXJyaXMvdWktZGF0YWdyaWQnO1xyXG5pbXBvcnQgeyBDdXN0b21pemVBY2l0b24gfSBmcm9tICcuLi8uLi9lbnRpdGllcy9jdXN0b21pemUtYWN0aW9uLmVudGl0eSc7XHJcbmltcG9ydCB7IEFjdHVhbFBhcmFtZXRlciB9IGZyb20gJy4uLy4uLy4uL2V4ZWN1dGUtZm9ybXMvZW50aXRpZXMvZXhlY3V0ZS1mb3JtLmVudGl0eSc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2FwcC1jdXN0b21pemUtYWN0aW9uLWxpc3QnLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9jdXN0b21pemUtYWN0aW9uLWxpc3QuY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL2N1c3RvbWl6ZS1hY3Rpb24tbGlzdC5jb21wb25lbnQuc2NzcyddXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBDdXN0b21pemVBY3Rpb25MaXN0Q29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuXHJcbiAgQFZpZXdDaGlsZCgnZ3JpZCcpIGdyaWQ6IERhdGFncmlkQ29tcG9uZW50O1xyXG4gIEBWaWV3Q2hpbGQoJ2Zvb3RlcicpIGZvb3RlcjogVGVtcGxhdGVSZWY8YW55PjtcclxuXHJcbiAgQE91dHB1dCgpIHN1Ym1pdCA9IG5ldyBFdmVudEVtaXR0ZXI8YW55W10+KCk7XHJcbiAgQE91dHB1dCgpIGNhbmNlbCA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xyXG5cclxuICBjdXN0b21BY3Rpb25MaXN0OiBhbnlbXTtcclxuXHJcbiAgcHJpdmF0ZSB0ZXJtaW5hbExpc3QgPSBbXHJcbiAgICB7IHZhbHVlOiAnYXBwJywgdGV4dDogJ+enu+WKqCcgfSxcclxuICAgIHsgdmFsdWU6ICd3ZWInLCB0ZXh0OiAnd2ViJyB9LFxyXG4gICAgeyB2YWx1ZTogJ3dlYixhcHAnLCB0ZXh0OiAnd2ViLOenu+WKqCcgfVxyXG4gIF07XHJcblxyXG4gIGNvbHMgPSBbXHJcbiAgICB7IGZpZWxkOiAnY29kZScsIHdpZHRoOiAxMDAsIHRpdGxlOiAn57yW5Y+3JyB9LFxyXG4gICAgeyBmaWVsZDogJ25hbWUnLCB3aWR0aDogMTAwLCB0aXRsZTogJ+WQjeensCcgfSxcclxuICAgIHtcclxuICAgICAgZmllbGQ6ICd0ZXJtaW5hbCcsIHdpZHRoOiAxMDAsIHRpdGxlOiAn6YCC55So57uI56uvJyxcclxuICAgICAgZm9ybWF0dGVyOiB7XHJcbiAgICAgICAgdHlwZTogJ2VudW0nLFxyXG4gICAgICAgIG9wdGlvbnM6IHsgdmFsdWVGaWVsZDogJ3ZhbHVlJywgdGV4dEZpZWxkOiAndGV4dCcsIGRhdGE6IHRoaXMudGVybWluYWxMaXN0IH1cclxuICAgICAgfSwgfSxcclxuICAgIHtcclxuICAgICAgZmllbGQ6ICdpc0FsbCcsIHdpZHRoOiAxMDAsIHRpdGxlOiAn5piv5ZCm6buY6K6kJyxcclxuICAgICAgZm9ybWF0dGVyOiB7IHR5cGU6ICdib29sZWFuJywgb3B0aW9uczogeyB0cnVlVGV4dDogJ+aYrycsIGZhbHNlVGV4dDogJ+WQpicgfSB9ICB9XHJcbiAgXTtcclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGRlc2lnbmVyVUlTdGF0ZTogUHJvY2Vzc0Rlc2lnbmVyVUlTdGF0ZSkge1xyXG4gICAgdGhpcy5jdXN0b21BY3Rpb25MaXN0ID0gdGhpcy5kZXNpZ25lclVJU3RhdGUuZmxvd0Zvcm1JbmZvLmN1c3RvbWl6ZUFjdGlvbnMgfHwgW107XHJcbiAgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICB9XHJcbiAgY2xpY2tPSygpIHtcclxuICAgIGNvbnN0IHNlbGVjdGlvbnMgPSBbXTtcclxuICAgIGNvbnN0IGNoZWNrZWRzOiBhbnlbXSA9IHRoaXMuZ3JpZC5jaGVja2VkcztcclxuICAgIGlmIChjaGVja2VkcyAmJiBjaGVja2Vkcy5sZW5ndGggPiAwKSB7XHJcbiAgICAgIGNoZWNrZWRzLmZvckVhY2goYWN0aW9uID0+IHtcclxuICAgICAgICBjb25zdCBpdGVtID0gbmV3IEN1c3RvbWl6ZUFjaXRvbihhY3Rpb24uZGF0YS5pZCwgYWN0aW9uLmRhdGEuY29kZSwgYWN0aW9uLmRhdGEubmFtZSk7XHJcbiAgICAgICAgaXRlbS50ZXJtaW5hbFR5cGUgPSBhY3Rpb24uZGF0YS50ZXJtaW5hbDtcclxuICAgICAgICAvLyBpdGVtLmVuYWJsZSA9IHRydWU7XHJcbiAgICAgICAgaXRlbS5hY3R1YWxQYXJhbWV0ZXJzID0gW107XHJcbiAgICAgICAgaWYgKGFjdGlvbi5kYXRhLmFjdHVhbFBhcmFtZXRlcnMgJiYgYWN0aW9uLmRhdGEuYWN0dWFsUGFyYW1ldGVycy5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICBmb3IgKGNvbnN0IHAgb2YgYWN0aW9uLmRhdGEuYWN0dWFsUGFyYW1ldGVycykge1xyXG4gICAgICAgICAgICBjb25zdCBwYXJhbSA9IHtcclxuICAgICAgICAgICAgICBOYW1lOiBwLmNvZGUsXHJcbiAgICAgICAgICAgICAgVmFsdWU6IHAudmFsdWUsXHJcbiAgICAgICAgICAgICAgVmFsdWVUZXh0OiBwLm5hbWUsXHJcbiAgICAgICAgICAgICAgVGFnOiAnZXhwcmVzc2lvbidcclxuICAgICAgICAgICAgfSBhcyBBY3R1YWxQYXJhbWV0ZXI7XHJcbiAgICAgICAgICAgIGl0ZW0uYWN0dWFsUGFyYW1ldGVycy5wdXNoKHBhcmFtKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgc2VsZWN0aW9ucy5wdXNoKGl0ZW0pO1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuICAgIHRoaXMuc3VibWl0LmVtaXQoc2VsZWN0aW9ucyk7XHJcbiAgfVxyXG4gIGNsaWNrQ2FuY2VsKCkge1xyXG4gICAgdGhpcy5jYW5jZWwuZW1pdCh0cnVlKTtcclxuICB9XHJcbn1cclxuIl19