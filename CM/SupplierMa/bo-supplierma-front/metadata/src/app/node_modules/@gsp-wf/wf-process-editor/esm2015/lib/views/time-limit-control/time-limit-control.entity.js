/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ProcessDeUtil } from '../../domain/process-de-util';
export class TimeLimitInfo {
    constructor() {
        this.tag = 'constant';
        this.enable = false;
        this.timeUnit = 'day';
        this.expireOperations = new Array();
    }
}
if (false) {
    /** @type {?} */
    TimeLimitInfo.prototype.tag;
    /**
     * 是否启用
     * @type {?}
     */
    TimeLimitInfo.prototype.enable;
    /**
     * 限定时长
     * @type {?}
     */
    TimeLimitInfo.prototype.dueTime;
    /**
     * 时间单位
     * @type {?}
     */
    TimeLimitInfo.prototype.timeUnit;
    /** @type {?} */
    TimeLimitInfo.prototype.expireOperations;
}
export class ExpireOperation {
    constructor() {
        this.id = ProcessDeUtil.GenerateElementId();
        this.durationType = 'BeforeDuration';
        this.timeDuration = 0;
        this.timeUnit = 'day';
        // 默认操作类型是发送预警消息
        this.operationTypeName = 'SendMessageExpireOperation';
    }
}
if (false) {
    /** @type {?} */
    ExpireOperation.prototype.id;
    /**
     * 期限控制类型
     * @type {?}
     */
    ExpireOperation.prototype.durationType;
    /**
     * 任务期限
     * @type {?}
     */
    ExpireOperation.prototype.timeDuration;
    /**
     * 时间单位
     * @type {?}
     */
    ExpireOperation.prototype.timeUnit;
    /**
     * 操作类型名称
     * @type {?}
     */
    ExpireOperation.prototype.operationTypeName;
}
/**
 * 发送预警信息方式
 */
export class SendMessage extends ExpireOperation {
    /**
     * @param {?} location
     */
    constructor(location) {
        super();
        this.cycleEnable = false;
        this.cycleTimeUnit = 'day';
        this.receiver = location === 'activity' ? 'workItemParticipant' : 'procInstCreator';
        this.receiverText = location === 'activity' ? '当前节点办理人' : '流程发起人';
        this.subject = '超时预警';
        this.message = location === 'activity' ? '您有一条待办消息即将超时。' : '您有一条消息即将超时';
    }
}
if (false) {
    /**
     * 预警信息内容
     * @type {?}
     */
    SendMessage.prototype.message;
    /**
     * 发送预警信息类型
     * @type {?}
     */
    SendMessage.prototype.sendType;
    /**
     * 预警信息主题
     * @type {?}
     */
    SendMessage.prototype.subject;
    /**
     * 消息接收人
     * 用户IDs
     * @type {?}
     */
    SendMessage.prototype.receiver;
    /**
     * 消息接收人显示
     * @type {?}
     */
    SendMessage.prototype.receiverText;
    /**
     * 启用循环预警
     * @type {?}
     */
    SendMessage.prototype.cycleEnable;
    /**
     * 循环预警时间间隔
     * @type {?}
     */
    SendMessage.prototype.cycleTime;
    /**
     * 循环预警时间间隔单位
     * @type {?}
     */
    SendMessage.prototype.cycleTimeUnit;
}
export class AutoHandle extends ExpireOperation {
    /**
     * @param {?} type
     */
    constructor(type) {
        super();
        this.autoHandleType = type;
        this.message = '同意';
    }
}
if (false) {
    /**
     * 办理类型，通过驳回否决等等
     * @type {?}
     */
    AutoHandle.prototype.autoHandleType;
    /**
     * 办理意见
     * @type {?}
     */
    AutoHandle.prototype.message;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGltZS1saW1pdC1jb250cm9sLmVudGl0eS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc3Atd2Yvd2YtcHJvY2Vzcy1lZGl0b3IvIiwic291cmNlcyI6WyJsaWIvdmlld3MvdGltZS1saW1pdC1jb250cm9sL3RpbWUtbGltaXQtY29udHJvbC5lbnRpdHkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUU3RCxNQUFNLE9BQU8sYUFBYTtJQW9CdEI7UUFDSSxJQUFJLENBQUMsR0FBRyxHQUFHLFVBQVUsQ0FBQztRQUN0QixJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztRQUNwQixJQUFJLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQztRQUN0QixJQUFJLENBQUMsZ0JBQWdCLEdBQUcsSUFBSSxLQUFLLEVBQUUsQ0FBQztJQUN4QyxDQUFDO0NBQ0o7OztJQXpCRyw0QkFBWTs7Ozs7SUFLWiwrQkFBZ0I7Ozs7O0lBS2hCLGdDQUFnQjs7Ozs7SUFLaEIsaUNBQWlCOztJQUVqQix5Q0FBeUM7O0FBVTdDLE1BQU0sT0FBTyxlQUFlO0lBc0J4QjtRQUNJLElBQUksQ0FBQyxFQUFFLEdBQUcsYUFBYSxDQUFDLGlCQUFpQixFQUFFLENBQUM7UUFDNUMsSUFBSSxDQUFDLFlBQVksR0FBRyxnQkFBZ0IsQ0FBQztRQUNyQyxJQUFJLENBQUMsWUFBWSxHQUFHLENBQUMsQ0FBQztRQUN0QixJQUFJLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQztRQUN0QixnQkFBZ0I7UUFDaEIsSUFBSSxDQUFDLGlCQUFpQixHQUFHLDRCQUE0QixDQUFDO0lBQzFELENBQUM7Q0FDSjs7O0lBN0JHLDZCQUFXOzs7OztJQUlYLHVDQUFxQjs7Ozs7SUFLckIsdUNBQXFCOzs7OztJQUtyQixtQ0FBaUI7Ozs7O0lBS2pCLDRDQUEwQjs7Ozs7QUFlOUIsTUFBTSxPQUFPLFdBQVksU0FBUSxlQUFlOzs7O0lBMEM1QyxZQUFZLFFBQVE7UUFDbEIsS0FBSyxFQUFFLENBQUM7UUFDUixJQUFJLENBQUMsV0FBVyxHQUFHLEtBQUssQ0FBQztRQUN6QixJQUFJLENBQUMsYUFBYSxHQUFHLEtBQUssQ0FBQztRQUMzQixJQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsS0FBSyxVQUFVLENBQUMsQ0FBQyxDQUFDLHFCQUFxQixDQUFDLENBQUMsQ0FBQyxpQkFBaUIsQ0FBQztRQUNwRixJQUFJLENBQUMsWUFBWSxHQUFHLFFBQVEsS0FBSyxVQUFVLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDO1FBQ2xFLElBQUksQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFDO1FBQ3RCLElBQUksQ0FBQyxPQUFPLEdBQUcsUUFBUSxLQUFLLFVBQVUsQ0FBQyxDQUFDLENBQUMsZUFBZSxDQUFDLENBQUMsQ0FBQyxZQUFZLENBQUM7SUFDMUUsQ0FBQztDQUNKOzs7Ozs7SUEvQ0csOEJBQWdCOzs7OztJQUtoQiwrQkFBaUI7Ozs7O0lBS2pCLDhCQUFnQjs7Ozs7O0lBTWhCLCtCQUFrQjs7Ozs7SUFLbEIsbUNBQXNCOzs7OztJQUt0QixrQ0FBcUI7Ozs7O0lBS3JCLGdDQUFrQjs7Ozs7SUFLbEIsb0NBQXNCOztBQWExQixNQUFNLE9BQU8sVUFBVyxTQUFRLGVBQWU7Ozs7SUFXN0MsWUFBWSxJQUFZO1FBQ3RCLEtBQUssRUFBRSxDQUFDO1FBQ1IsSUFBSSxDQUFDLGNBQWMsR0FBRyxJQUFJLENBQUM7UUFDM0IsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUM7SUFDdEIsQ0FBQztDQUNGOzs7Ozs7SUFaQyxvQ0FBdUI7Ozs7O0lBS3ZCLDZCQUFnQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFByb2Nlc3NEZVV0aWwgfSBmcm9tICcuLi8uLi9kb21haW4vcHJvY2Vzcy1kZS11dGlsJztcclxuXHJcbmV4cG9ydCBjbGFzcyBUaW1lTGltaXRJbmZvIHtcclxuICAgIHRhZzogc3RyaW5nO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICog5piv5ZCm5ZCv55SoXHJcbiAgICAgKi9cclxuICAgIGVuYWJsZTogYm9vbGVhbjtcclxuXHJcbiAgICAvKipcclxuICAgICAqIOmZkOWumuaXtumVv1xyXG4gICAgICovXHJcbiAgICBkdWVUaW1lOiBzdHJpbmc7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDml7bpl7TljZXkvY1cclxuICAgICAqL1xyXG4gICAgdGltZVVuaXQ6IHN0cmluZztcclxuXHJcbiAgICBleHBpcmVPcGVyYXRpb25zOiBBcnJheTxFeHBpcmVPcGVyYXRpb24+O1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIHRoaXMudGFnID0gJ2NvbnN0YW50JztcclxuICAgICAgICB0aGlzLmVuYWJsZSA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMudGltZVVuaXQgPSAnZGF5JztcclxuICAgICAgICB0aGlzLmV4cGlyZU9wZXJhdGlvbnMgPSBuZXcgQXJyYXkoKTtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIEV4cGlyZU9wZXJhdGlvbiB7XHJcbiAgICBpZDogc3RyaW5nO1xyXG4gICAgLyoqXHJcbiAgICAgKiDmnJ/pmZDmjqfliLbnsbvlnotcclxuICAgICAqL1xyXG4gICAgZHVyYXRpb25UeXBlOiBzdHJpbmc7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDku7vliqHmnJ/pmZBcclxuICAgICAqL1xyXG4gICAgdGltZUR1cmF0aW9uOiBudW1iZXI7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDml7bpl7TljZXkvY1cclxuICAgICAqL1xyXG4gICAgdGltZVVuaXQ6IHN0cmluZztcclxuXHJcbiAgICAvKipcclxuICAgICAqIOaTjeS9nOexu+Wei+WQjeensFxyXG4gICAgICovXHJcbiAgICBvcGVyYXRpb25UeXBlTmFtZTogc3RyaW5nO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIHRoaXMuaWQgPSBQcm9jZXNzRGVVdGlsLkdlbmVyYXRlRWxlbWVudElkKCk7XHJcbiAgICAgICAgdGhpcy5kdXJhdGlvblR5cGUgPSAnQmVmb3JlRHVyYXRpb24nO1xyXG4gICAgICAgIHRoaXMudGltZUR1cmF0aW9uID0gMDtcclxuICAgICAgICB0aGlzLnRpbWVVbml0ID0gJ2RheSc7XHJcbiAgICAgICAgLy8g6buY6K6k5pON5L2c57G75Z6L5piv5Y+R6YCB6aKE6K2m5raI5oGvXHJcbiAgICAgICAgdGhpcy5vcGVyYXRpb25UeXBlTmFtZSA9ICdTZW5kTWVzc2FnZUV4cGlyZU9wZXJhdGlvbic7XHJcbiAgICB9XHJcbn1cclxuXHJcbi8qKlxyXG4gKiDlj5HpgIHpooTorabkv6Hmga/mlrnlvI9cclxuICovXHJcbmV4cG9ydCBjbGFzcyBTZW5kTWVzc2FnZSBleHRlbmRzIEV4cGlyZU9wZXJhdGlvbntcclxuICAgIC8qKlxyXG4gICAgICog6aKE6K2m5L+h5oGv5YaF5a65XHJcbiAgICAgKi9cclxuICAgIG1lc3NhZ2U6IHN0cmluZztcclxuXHJcbiAgICAvKipcclxuICAgICAqIOWPkemAgemihOitpuS/oeaBr+exu+Wei1xyXG4gICAgICovXHJcbiAgICBzZW5kVHlwZTogc3RyaW5nO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICog6aKE6K2m5L+h5oGv5Li76aKYXHJcbiAgICAgKi9cclxuICAgIHN1YmplY3Q6IHN0cmluZztcclxuXHJcbiAgICAvKipcclxuICAgICAqIOa2iOaBr+aOpeaUtuS6ulxyXG4gICAgICog55So5oi3SURzXHJcbiAgICAgKi9cclxuICAgIHJlY2VpdmVyPzogc3RyaW5nO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICog5raI5oGv5o6l5pS25Lq65pi+56S6XHJcbiAgICAgKi9cclxuICAgIHJlY2VpdmVyVGV4dD86IHN0cmluZztcclxuXHJcbiAgICAvKipcclxuICAgICAqIOWQr+eUqOW+queOr+mihOitplxyXG4gICAgICovXHJcbiAgICBjeWNsZUVuYWJsZTogYm9vbGVhbjtcclxuXHJcbiAgICAvKipcclxuICAgICAqIOW+queOr+mihOitpuaXtumXtOmXtOmalFxyXG4gICAgICovXHJcbiAgICBjeWNsZVRpbWU6IHN0cmluZztcclxuXHJcbiAgICAvKipcclxuICAgICAqIOW+queOr+mihOitpuaXtumXtOmXtOmalOWNleS9jVxyXG4gICAgICovXHJcbiAgICBjeWNsZVRpbWVVbml0OiBzdHJpbmc7XHJcblxyXG4gICAgY29uc3RydWN0b3IobG9jYXRpb24pIHtcclxuICAgICAgc3VwZXIoKTtcclxuICAgICAgdGhpcy5jeWNsZUVuYWJsZSA9IGZhbHNlO1xyXG4gICAgICB0aGlzLmN5Y2xlVGltZVVuaXQgPSAnZGF5JztcclxuICAgICAgdGhpcy5yZWNlaXZlciA9IGxvY2F0aW9uID09PSAnYWN0aXZpdHknID8gJ3dvcmtJdGVtUGFydGljaXBhbnQnIDogJ3Byb2NJbnN0Q3JlYXRvcic7XHJcbiAgICAgIHRoaXMucmVjZWl2ZXJUZXh0ID0gbG9jYXRpb24gPT09ICdhY3Rpdml0eScgPyAn5b2T5YmN6IqC54K55Yqe55CG5Lq6JyA6ICfmtYHnqIvlj5HotbfkuronO1xyXG4gICAgICB0aGlzLnN1YmplY3QgPSAn6LaF5pe26aKE6K2mJztcclxuICAgICAgdGhpcy5tZXNzYWdlID0gbG9jYXRpb24gPT09ICdhY3Rpdml0eScgPyAn5oKo5pyJ5LiA5p2h5b6F5Yqe5raI5oGv5Y2z5bCG6LaF5pe244CCJyA6ICfmgqjmnInkuIDmnaHmtojmga/ljbPlsIbotoXml7YnO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgQXV0b0hhbmRsZSBleHRlbmRzIEV4cGlyZU9wZXJhdGlvbiB7XHJcbiAgLyoqXHJcbiAgICog5Yqe55CG57G75Z6L77yM6YCa6L+H6amz5Zue5ZCm5Yaz562J562JXHJcbiAgICovXHJcbiAgYXV0b0hhbmRsZVR5cGU6IHN0cmluZztcclxuXHJcbiAgLyoqXHJcbiAgICog5Yqe55CG5oSP6KeBXHJcbiAgICovXHJcbiAgbWVzc2FnZTogc3RyaW5nO1xyXG5cclxuICBjb25zdHJ1Y3Rvcih0eXBlOiBzdHJpbmcpIHtcclxuICAgIHN1cGVyKCk7XHJcbiAgICB0aGlzLmF1dG9IYW5kbGVUeXBlID0gdHlwZTtcclxuICAgIHRoaXMubWVzc2FnZSA9ICflkIzmhI8nO1xyXG4gIH1cclxufVxyXG4iXX0=