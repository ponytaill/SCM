/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable, Injector, ComponentFactoryResolver } from '@angular/core';
import { ProcessDesignerUIState } from './process-designer.uistate';
import { ApprovalItemEntity } from '../views/approvel-items/entities/approval-item.entity';
import { ResourceKeys } from '../model/resourceKeys';
import { AssignPerformerConfigComponent, AssignConfigConverter } from '../views/assign-performer-config/assign-performer-config.component';
import { SignRuleComponent, SignRuleConverter } from '../views/sign-rule/sign-rule.component';
import { ApprovelItemsComponent, ApprovelItemsConverter } from '../views/approvel-items/approvel-items.component';
import { ExpressionEditorComponent, ExpressionEditorConverter } from '../views/expressionEditor/expression-editor.component';
import { ExecuteFormsComponent, ExecuteFormsConverter } from '../views/execute-forms/execute-forms.component';
import { JumpScopeComponent, JumpScopeConverter } from '../views/jump-scope/jump-scope.component';
import { VarEntity } from '@gsp-svc/expression';
import { BackwardRuleComponent, BackwardRuleConverter } from '../views/backward-rule/backward-rule.component';
import { MessagerService } from '@farris/ui-messager';
import { ActivityComponentComponent, ActivityComponentConverter } from '../views/activity-component/activity-component.component';
import { PerformerComponent, PerformerConverter } from '../views/performer/performer.component';
import { TitleExpressionComponent, TitleExpressionConverter } from '../views/title-expression/title-expression.component';
import { BsModalService } from '@farris/ui-modal';
import { OrganizationPotentialOwnerComponent, OrganizationPotentialOwnerConverter } from '../views/organization-potential-owner/organization-potential-owner.component';
import { CustomizeActionComponent, CustomizeActionConverter } from '../views/customize-action/customize-action.component';
import { TimeLimitControlComponent, TimeLimitControlConverter } from '../views/time-limit-control/time-limit-control.component';
import { AnonymousSetComponent, AnonymousSetConverter } from '../views/anonymous-set/anonymous-set.component';
import { VariableSettingComponent, VariableSettingConverter } from '../views/variable-setting/variable-setting.component';
import { MessageNoticeComponent, MessageNoticeConverter } from '../views/message-notice/message-notice.component';
import { ApprovalPivotComponent, ApprovalPivotConverter } from '../views/approval-pivot/approval-pivot.component';
import { UrgeHandleRuleComponent, UrgeHandleRuleConverter } from '../views/urge-handle-rule/urge-handle-rule.component';
import { ExtendPropertyComponent, ExtendPropertyConverter } from '../views/extend-property/extend-property.component';
export class WFFlowElementsViewModel {
    /**
     * @param {?} uiState
     * @param {?} message
     * @param {?} injector
     * @param {?} modalService
     * @param {?} resolver
     */
    constructor(uiState, message, injector, modalService, resolver) {
        this.uiState = uiState;
        this.message = message;
        this.injector = injector;
        this.modalService = modalService;
        this.resolver = resolver;
    }
    /**
     * 设置流程元素属性框
     * @param {?} obj
     * @return {?}
     */
    setFlowElementProperty(obj) {
        this.uiState.propertyData = obj.propertyData;
        this.uiState.propertyConfig = this.setFlowEleConfig(obj.propertyConfig);
    }
    /**
     * @private
     * @param {?} obj
     * @return {?}
     */
    setFlowEleConfig(obj) {
        /** @type {?} */
        const propertyConfig = [];
        if (obj) {
            obj.forEach((/**
             * @param {?} element
             * @return {?}
             */
            (element) => {
                this.setFlowEleEntity(element.properties);
                propertyConfig.push(element);
            }));
        }
        return propertyConfig;
    }
    /**
     * @private
     * @param {?} obj
     * @return {?}
     */
    setFlowEleEntity(obj) {
        if (obj && obj.length > 0) {
            obj.forEach((/**
             * @param {?} item
             * @return {?}
             */
            (item) => {
                switch (item.propertyID) {
                    case ResourceKeys.ConditionExpression: // 条件表达式
                        item.editor = ExpressionEditorComponent;
                        item.converter = new ExpressionEditorConverter();
                        item.editorParams = {};
                        break;
                    case ResourceKeys.wf_ExecuteForms_PC: // 开始活动的表单构件
                        item.editor = ExecuteFormsComponent;
                        item.converter = new ExecuteFormsConverter();
                        item.editorParams = {
                            location: 'startActivity',
                            tab: 'web'
                        };
                        break;
                    case ResourceKeys.wf_ExecuteForms_Mobile: // 开始活动的表单构件
                        item.editor = ExecuteFormsComponent;
                        item.converter = new ExecuteFormsConverter();
                        item.editorParams = {
                            location: 'startActivity',
                            tab: 'mobile'
                        };
                        break;
                    case ResourceKeys.sendBackedTask: // 开始活动的发送驳回任务
                        item.iterator = this.uiState.boolIterator;
                        break;
                    case ResourceKeys.SelectTargetAble: // 允许跳转
                        item.iterator = this.uiState.boolIterator;
                        break;
                    case ResourceKeys.JumpScope: // 跳转规则
                        item.editor = JumpScopeComponent;
                        item.converter = new JumpScopeConverter();
                        break;
                    case ResourceKeys.Default: // 默认分支
                        item.iterator = this.uiState.boolIterator;
                        break;
                    default:
                        item.editor = ExtendPropertyComponent;
                        item.converter = new ExtendPropertyConverter();
                        break;
                }
            }));
        }
    }
    /**
     * 设置审批活动节点的属性框
     * @param {?} obj
     * @return {?}
     */
    setUserActivityProperty(obj) {
        if (obj.propertyData.ApprovalItems) {
            this.buildApprovalItems(obj.propertyData.ApprovalItems);
            this.buildCounterSignVariables(obj.propertyData.ApprovalItems);
            this.buildSignRules(obj.propertyData.SignRule); // 设置会签规则的结论名称
        }
        this.uiState.propertyData = obj.propertyData;
        this.uiState.bizActivityId = obj.propertyData.BizActivityID;
        this.uiState.propertyConfig = this.setUserActConfig(obj.propertyConfig);
    }
    /**
     * @private
     * @param {?} obj
     * @return {?}
     */
    setUserActConfig(obj) {
        /** @type {?} */
        const propertyConfig = [];
        if (obj) {
            obj.forEach((/**
             * @param {?} element
             * @return {?}
             */
            (element) => {
                this.setUserActEntity(element.properties);
                propertyConfig.push(element);
            }));
        }
        return propertyConfig;
    }
    /**
     * @private
     * @param {?} obj
     * @return {?}
     */
    setUserActEntity(obj) {
        if (obj && obj.length > 0) {
            obj.forEach((/**
             * @param {?} item
             * @return {?}
             */
            (item) => {
                switch (item.propertyID) {
                    case ResourceKeys.ParticipantSchemes: // 参与者
                        item.editor = PerformerComponent;
                        item.converter = new PerformerConverter();
                        break;
                    case ResourceKeys.wf_ExecuteForms_PC: // 表单定义
                        item.editor = ExecuteFormsComponent;
                        item.converter = new ExecuteFormsConverter();
                        item.editorParams = {
                            location: 'userActivity',
                            tab: 'web'
                        };
                        break;
                    case ResourceKeys.wf_ExecuteForms_Mobile: // 表单定义
                        item.editor = ExecuteFormsComponent;
                        item.converter = new ExecuteFormsConverter();
                        item.editorParams = {
                            location: 'userActivity',
                            tab: 'mobile'
                        };
                        break;
                    case ResourceKeys.AssignStrategy: // 分配策略
                        item.iterator = this.uiState.assignIterator;
                        break;
                    case ResourceKeys.OperatorConfig: // 指派规则
                        item.editor = AssignPerformerConfigComponent;
                        item.converter = new AssignConfigConverter();
                        break;
                    case ResourceKeys.CompleteStrategy: // 完成策略
                        if (this.uiState.propertyData.AssignStrategy === this.uiState.assignIterator[2].key) {
                            item.iterator = this.uiState.completeIterator4Claim; // 分配策略为领用时，完成策略只能是抢占模式
                        }
                        else {
                            item.iterator = this.uiState.completeIterator;
                        }
                        break;
                    case ResourceKeys.SignRule: // 会签规则
                        item.editor = SignRuleComponent;
                        item.converter = new SignRuleConverter();
                        item.editorParams = {
                            variables: this.uiState.counterSignVariables,
                            approvalItems: this.uiState.approvalItems
                        };
                        break;
                    case ResourceKeys.ApprovalItems: // 审批项
                        item.editor = ApprovelItemsComponent;
                        item.converter = new ApprovelItemsConverter();
                        break;
                    case ResourceKeys.Retrievable: // 允许取回
                        item.iterator = this.uiState.boolIterator;
                        break;
                    case ResourceKeys.AddSignFrontAble: // 允许征询
                        item.editor = OrganizationPotentialOwnerComponent;
                        item.converter = new OrganizationPotentialOwnerConverter();
                        break;
                    case ResourceKeys.AddSignBehindAble: // 允许加签
                        item.editor = OrganizationPotentialOwnerComponent;
                        item.converter = new OrganizationPotentialOwnerConverter();
                        break;
                    case ResourceKeys.NotifyAble: // 允许知会
                        item.editor = OrganizationPotentialOwnerComponent;
                        item.converter = new OrganizationPotentialOwnerConverter();
                        break;
                    case ResourceKeys.transferScope: // 移交范围
                        item.editor = OrganizationPotentialOwnerComponent;
                        item.converter = new OrganizationPotentialOwnerConverter();
                        break;
                    case ResourceKeys.SelectBranch: // 允许指定后续分支
                        item.iterator = this.uiState.boolIterator;
                        break;
                    case ResourceKeys.SelectTargetAble: // 允许跳转
                        if (this.uiState.propertyData.CompleteStrategy
                            && this.uiState.propertyData.CompleteStrategy !== this.uiState.completeIterator[0].key) {
                            item.iterator = this.uiState.noJump4Sign;
                        }
                        else {
                            item.iterator = this.uiState.boolIterator;
                        }
                        break;
                    case ResourceKeys.JumpScope: // 跳转规则
                        item.editor = JumpScopeComponent;
                        item.converter = new JumpScopeConverter();
                        break;
                    case ResourceKeys.BackWardRule: // 驳回规则
                        item.editor = BackwardRuleComponent;
                        item.converter = new BackwardRuleConverter();
                        item.editorParams = {
                            nodeType: 'UserActivity'
                        };
                        break;
                    case ResourceKeys.wf_TitleExpression:
                        item.editor = TitleExpressionComponent;
                        item.converter = new TitleExpressionConverter();
                        break;
                    case ResourceKeys.Tools: // 活动构件
                        item.editor = ActivityComponentComponent;
                        item.converter = new ActivityComponentConverter();
                        item.editorParams = {
                            location: 'activity'
                        };
                        break;
                    case ResourceKeys.wf_CustomizeAction: // 活动构件
                        item.editor = CustomizeActionComponent;
                        item.converter = new CustomizeActionConverter();
                        break;
                    case ResourceKeys.timeLimitControl: // 超时预警
                        item.editor = TimeLimitControlComponent;
                        item.converter = new TimeLimitControlConverter();
                        item.editorParams = {
                            location: 'activity'
                        };
                        break;
                    case ResourceKeys.anonymousSet: // 匿名设置
                        item.editor = AnonymousSetComponent;
                        item.converter = new AnonymousSetConverter();
                        break;
                    case ResourceKeys.variableSettings: // 变量设置
                        item.editor = VariableSettingComponent;
                        item.converter = new VariableSettingConverter();
                        break;
                    case ResourceKeys.messageNotice: // 消息通知
                        item.editor = MessageNoticeComponent;
                        item.converter = new MessageNoticeConverter();
                        item.editorParams = {
                            location: 'activity'
                        };
                        break;
                    case ResourceKeys.approvalPivotConfig: // 审批要点
                        item.editor = ApprovalPivotComponent;
                        item.converter = new ApprovalPivotConverter();
                        break;
                    case ResourceKeys.DisplayTerminal: // 显示终端
                        item.iterator = this.uiState.displayTerminal;
                        break;
                    case ResourceKeys.urgeHandleRule: // 显示终端
                        item.editor = UrgeHandleRuleComponent;
                        item.converter = new UrgeHandleRuleConverter();
                        break;
                    default:
                        item.editor = ExtendPropertyComponent;
                        item.converter = new ExtendPropertyConverter();
                        break;
                }
            }));
        }
    }
    /**
     * 创建会签规则变量
     * @param {?} conclusions
     * @return {?}
     */
    buildCounterSignVariables(conclusions) {
        this.uiState.counterSignVariables = [];
        this.uiState.counterSignVariables = this.uiState.counterSignVariables.concat([{
                key: 'nrOfInstances',
                name: '总任务数',
                description: '总任务数'
            }, {
                key: 'nrOfCompletedInstances',
                name: '已完成任务数',
                description: '已完成任务数'
            }
        ]);
        if (conclusions && conclusions.length > 0) {
            for (const conclusion of conclusions) {
                /** @type {?} */
                const variable = new VarEntity();
                variable.key = `nrOf${conclusion.Value}`;
                variable.name = `${conclusion.Text}_任务数`;
                variable.description = `${conclusion.Text}_任务数`;
                this.uiState.counterSignVariables.push(variable);
            }
        }
    }
    /**
     * 创建自定义项
     * @param {?} conclusions
     * @return {?}
     */
    buildApprovalItems(conclusions) {
        this.uiState.approvalItems = [];
        if (conclusions && conclusions.length > 0) {
            for (const item of conclusions) {
                /** @type {?} */
                const conclusion = new ApprovalItemEntity();
                conclusion.value = item.Value;
                conclusion.text = item.Text;
                conclusion.workFlowAction = item.WorkFlowAction;
                conclusion.isDefault = item.IsDefault;
                this.uiState.approvalItems.push(conclusion);
            }
        }
    }
    /**
     * 会签规则绑定审批项名称
     * @private
     * @param {?} signRules 会签规则
     * @return {?}
     */
    buildSignRules(signRules) {
        if (signRules && signRules.length > 0) {
            for (const signRule of signRules) {
                /** @type {?} */
                const approvalItem = this.uiState.approvalItems.find((/**
                 * @param {?} item
                 * @return {?}
                 */
                item => item.value === signRule.ConclusionValue));
                // if (!approvalItem) {
                //     this.message.info('审批项发生改变，请调整会签规则！');
                // }
                if (approvalItem) {
                    signRule.ConclusionName = approvalItem.text;
                }
            }
        }
    }
}
WFFlowElementsViewModel.decorators = [
    { type: Injectable }
];
/** @nocollapse */
WFFlowElementsViewModel.ctorParameters = () => [
    { type: ProcessDesignerUIState },
    { type: MessagerService },
    { type: Injector },
    { type: BsModalService },
    { type: ComponentFactoryResolver }
];
if (false) {
    /**
     * @type {?}
     * @private
     */
    WFFlowElementsViewModel.prototype.uiState;
    /**
     * @type {?}
     * @private
     */
    WFFlowElementsViewModel.prototype.message;
    /**
     * @type {?}
     * @private
     */
    WFFlowElementsViewModel.prototype.injector;
    /**
     * @type {?}
     * @private
     */
    WFFlowElementsViewModel.prototype.modalService;
    /**
     * @type {?}
     * @private
     */
    WFFlowElementsViewModel.prototype.resolver;
}
//# sourceMappingURL=data:application/json;base64,