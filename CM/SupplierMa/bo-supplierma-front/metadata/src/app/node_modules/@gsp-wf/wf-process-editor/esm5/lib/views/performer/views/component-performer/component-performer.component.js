/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, ComponentFactoryResolver, Injector, Input, ViewChild, ElementRef, HostBinding, NgZone } from '@angular/core';
import { FormBuilder } from '@angular/forms';
import { ProcessDesignerUIState } from '../../../../app/process-designer.uistate';
import { ExpressionService, InjectedType, ExprEditMode } from '@gsp-svc/expression';
import { SessionService } from '@ecp-caf/caf-common';
import { BsModalService } from '@farris/ui-modal';
import { CommonComponentUiRTService } from '@gsp-cmp/ccmp-ui';
import { SelectMetadataRTComponent } from '@gsp-lcm/metadatart-selector';
import { DatagridComponent } from '@farris/ui-datagrid';
import { of, forkJoin } from 'rxjs';
import { EditorTypes } from '@farris/ui-datagrid-editors';
import { LookupGridComponent } from '@farris/ui-lookup';
import { ComponentPerformerService } from './component-performer.service';
import { ParameterFetchValueMode } from '@gsp-cmp/wscmp-models';
import { ComponentPerformer } from './component-performer.entity';
import { ProcessDeUtil } from '../../../../domain/process-de-util';
var ComponentPerformerComponent = /** @class */ (function () {
    function ComponentPerformerComponent(formBuilder, designerState, expr, resolver, injector, sessionSrc, modalService, componentService, ngZone, service, util) {
        var _this = this;
        this.formBuilder = formBuilder;
        this.designerState = designerState;
        this.expr = expr;
        this.resolver = resolver;
        this.injector = injector;
        this.sessionSrc = sessionSrc;
        this.modalService = modalService;
        this.componentService = componentService;
        this.ngZone = ngZone;
        this.service = service;
        this.util = util;
        this.cls = 'farris-main-area flex-column';
        this.showClearButton = false;
        this.columns = [
            { field: 'code', width: 60, title: '编号' },
            { field: 'name', width: 60, title: '名称' },
            { field: 'description', width: 60, title: '描述', showTips: true },
            {
                field: 'valueText', width: 100, title: '参数值',
                editor: {
                    type: 'input-group',
                    options: {
                        groupText: '<i class="f-icon f-icon-lookup"></i>',
                        editable: false,
                        clickHandle: (/**
                         * @param {?} e
                         * @return {?}
                         */
                        function (e) {
                            e.formControl.setValue(e.instance.value ? e.instance.value : '');
                            _this.showExprHelp(e);
                        }),
                        clear: (/**
                         * @param {?} e
                         * @return {?}
                         */
                        function (e) {
                            var e_1, _a;
                            // 清理valueText，也应该清理value
                            e.rowData.value = '';
                            try {
                                for (var _b = tslib_1.__values(_this.component.actualParameters), _c = _b.next(); !_c.done; _c = _b.next()) {
                                    var p = _c.value;
                                    if (p.code === e.rowId) {
                                        p.value = '';
                                    }
                                }
                            }
                            catch (e_1_1) { e_1 = { error: e_1_1 }; }
                            finally {
                                try {
                                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                                }
                                finally { if (e_1) throw e_1.error; }
                            }
                        })
                    }
                }
            }
        ];
        this.helpInfo = {
            helpId: '',
            su: '',
            columns: [],
            displayType: 'List',
            items: [],
            pageInfo: {
                pageIndex: 1,
                pageList: [10, 20, 30, 50],
                pageSize: 20
            },
            search: { category: 'search' },
            title: '帮助',
            total: 100,
            fieldInfo: {
                idField: 'id',
                textField: 'name',
                valueField: 'id'
            }
        };
        this.beforeEdit = (/**
         * @param {?} param
         * @return {?}
         */
        function (param) {
            /** @type {?} */
            var rowData = (/** @type {?} */ (param.rowData));
            _this.curParameter = rowData;
            switch (rowData.fetchValueMode) {
                case ParameterFetchValueMode.express:
                    param.column.editor = {
                        type: 'input-group',
                        options: {
                            groupText: '<i class="f-icon f-icon-lookup"></i>',
                            editable: false,
                            clickHandle: (/**
                             * @param {?} e
                             * @return {?}
                             */
                            function (e) {
                                e.formControl.setValue(e.instance.value ? e.instance.value : '');
                                _this.showExprHelp(e);
                            }),
                            clear: (/**
                             * @param {?} e
                             * @return {?}
                             */
                            function (e) {
                                var e_2, _a;
                                // 清理valueText，也应该清理value
                                e.rowData.value = '';
                                try {
                                    for (var _b = tslib_1.__values(_this.component.actualParameters), _c = _b.next(); !_c.done; _c = _b.next()) {
                                        var p = _c.value;
                                        if (p.code === e.rowId) {
                                            p.value = '';
                                        }
                                    }
                                }
                                catch (e_2_1) { e_2 = { error: e_2_1 }; }
                                finally {
                                    try {
                                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                                    }
                                    finally { if (e_2) throw e_2.error; }
                                }
                            })
                        }
                    };
                    break;
                case ParameterFetchValueMode.none:
                    param.column.editor = {
                        type: 'input-group',
                        options: {
                            groupText: '<i class="f-icon f-icon-lookup"></i>',
                            editable: false,
                            clickHandle: (/**
                             * @param {?} e
                             * @return {?}
                             */
                            function (e) {
                                e.formControl.setValue(e.instance.value ? e.instance.value : '');
                                _this.showExprHelp(e);
                            }),
                            clear: (/**
                             * @param {?} e
                             * @return {?}
                             */
                            function (e) {
                                var e_3, _a;
                                // 清理valueText，也应该清理value
                                e.rowData.value = '';
                                try {
                                    for (var _b = tslib_1.__values(_this.component.actualParameters), _c = _b.next(); !_c.done; _c = _b.next()) {
                                        var p = _c.value;
                                        if (p.code === e.rowId) {
                                            p.value = '';
                                        }
                                    }
                                }
                                catch (e_3_1) { e_3 = { error: e_3_1 }; }
                                finally {
                                    try {
                                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                                    }
                                    finally { if (e_3) throw e_3.error; }
                                }
                            })
                        }
                    };
                    break;
                case ParameterFetchValueMode.const:
                    param.column.editor = { type: EditorTypes.TEXTBOX, options: {} };
                    break;
                case ParameterFetchValueMode.enum:
                    param.column.editor = { type: EditorTypes.TEXTBOX, options: {} };
                    break;
                case ParameterFetchValueMode.help:
                    param.column.editor = {
                        type: 'input-group',
                        options: {
                            groupText: '<i class="f-icon f-icon-lookup"></i>',
                            editable: false,
                            clickHandle: (/**
                             * @param {?} e
                             * @return {?}
                             */
                            function (e) {
                                _this.cell = e;
                                _this.helpInfo.helpId = ((/** @type {?} */ (rowData.fetchValueSetting))).helpId;
                                _this.helpInfo.su = ((/** @type {?} */ (rowData.fetchValueSetting))).serviceUnit;
                                _this.helpInfo.pageInfo = {
                                    pageIndex: 1,
                                    pageList: [10, 20, 30, 50],
                                    pageSize: 20
                                };
                                _this.helpInfo.search = { category: 'search' };
                                _this.getHelpInfo();
                            }),
                            clear: (/**
                             * @param {?} e
                             * @return {?}
                             */
                            function (e) {
                                var e_4, _a;
                                // 清理valueText，也应该清理value
                                e.rowData.value = '';
                                try {
                                    for (var _b = tslib_1.__values(_this.component.actualParameters), _c = _b.next(); !_c.done; _c = _b.next()) {
                                        var p = _c.value;
                                        if (p.code === e.rowId) {
                                            p.value = '';
                                        }
                                    }
                                }
                                catch (e_4_1) { e_4 = { error: e_4_1 }; }
                                finally {
                                    try {
                                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                                    }
                                    finally { if (e_4) throw e_4.error; }
                                }
                            })
                        }
                    };
                    break;
            }
            return of(true);
        });
        this.afterEdit = (/**
         * @param {?} rowIndex
         * @param {?} rowData
         * @param {?=} column
         * @return {?}
         */
        function (rowIndex, rowData, column) {
            return of(true);
        });
        this.dictPicked = (/**
         * @param {?} rowData
         * @return {?}
         */
        function (rowData) {
            var e_5, _a;
            if (_this.cell) {
                _this.cell.formControl.setValue(_this.util.getValue(rowData, _this.helpInfo.fieldInfo.textField));
                _this.cell.instance.cd.detectChanges();
                _this.cell.rowData.value = _this.util.getValue(rowData, _this.helpInfo.fieldInfo.valueField);
                try {
                    for (var _b = tslib_1.__values(_this.component.actualParameters), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var p = _c.value;
                        if (p.code === _this.cell.rowId) {
                            p.value = _this.util.getValue(rowData, _this.helpInfo.fieldInfo.valueField);
                        }
                    }
                }
                catch (e_5_1) { e_5 = { error: e_5_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_5) throw e_5.error; }
                }
                return of(true);
            }
        });
    }
    Object.defineProperty(ComponentPerformerComponent.prototype, "component", {
        get: /**
         * @return {?}
         */
        function () {
            return this.componentPerformer;
        },
        set: /**
         * @param {?} cmp
         * @return {?}
         */
        function (cmp) {
            var _this = this;
            if (cmp && cmp.methodCode) {
                this.service.getHelpMetaData(cmp.metadataId, '').subscribe((/**
                 * @param {?} re
                 * @return {?}
                 */
                function (re) {
                    /** @type {?} */
                    var c = JSON.parse(re.content);
                    /** @type {?} */
                    var operation = c.operations.find((/**
                     * @param {?} o
                     * @return {?}
                     */
                    function (o) { return o.code === cmp.methodCode; }));
                    if (operation) {
                        cmp.actualParameters = cmp.actualParameters.map((/**
                         * @param {?} a
                         * @return {?}
                         */
                        function (a) {
                            /** @type {?} */
                            var p = operation.parameters.find((/**
                             * @param {?} i
                             * @return {?}
                             */
                            function (i) { return i.code === a.code; }));
                            if (p) {
                                return {
                                    code: a.code,
                                    name: p.name,
                                    value: a.value,
                                    valueText: a.valueText ? a.valueText : a.value,
                                    description: p.description,
                                    tag: a.tag,
                                    fetchValueMode: p.fetchValueMode,
                                    fetchValueSetting: p.fetchValueSetting
                                };
                            }
                            else {
                                throw new Error('当前构件方法参数不一致，请更新！');
                            }
                        }));
                        _this.componentPerformer = cmp;
                    }
                    else {
                        throw new Error('当前构件已不存在此方法，请更新！');
                    }
                }));
            }
            else {
                this.componentPerformer = new ComponentPerformer();
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    ComponentPerformerComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @return {?}
     */
    ComponentPerformerComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.ngZone.runOutsideAngular((/**
         * @return {?}
         */
        function () {
            _this.inputGroup.nativeElement.addEventListener('mouseenter', _this.onMouseEnter.bind(_this));
            _this.inputGroup.nativeElement.addEventListener('mouseleave', _this.onMouseLeave.bind(_this));
        }));
    };
    /**
     * @param {?} event
     * @return {?}
     */
    ComponentPerformerComponent.prototype.onMouseEnter = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.showClearButton = true;
        if (this.showClearButton) {
            this.toggleClearIcon(event, true);
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    ComponentPerformerComponent.prototype.onMouseLeave = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.showClearButton = false;
        this.toggleClearIcon(event, false);
    };
    /**
     * @private
     * @param {?} event
     * @param {?=} isShow
     * @return {?}
     */
    ComponentPerformerComponent.prototype.toggleClearIcon = /**
     * @private
     * @param {?} event
     * @param {?=} isShow
     * @return {?}
     */
    function (event, isShow) {
        if (isShow === void 0) { isShow = false; }
        /** @type {?} */
        var str = isShow ? '' : 'none';
        /** @type {?} */
        var clearIcon = event.target.querySelector('.input-group-clear');
        if (clearIcon) {
            clearIcon.style.display = str;
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    ComponentPerformerComponent.prototype.selectChanged = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.curParameter = event.data;
    };
    /**
     * @param {?} e
     * @return {?}
     */
    ComponentPerformerComponent.prototype.endEdit = /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
        // 文本框编辑同时修改value
        if (e.rowData.fetchValueMode === ParameterFetchValueMode.const || e.rowData.fetchValueMode === ParameterFetchValueMode.enum) {
            this.component.actualParameters[e.rowIndex].value = this.component.actualParameters[e.rowIndex].valueText;
        }
    };
    /**
     * @return {?}
     */
    ComponentPerformerComponent.prototype.clear = /**
     * @return {?}
     */
    function () {
        this.componentPerformer.name = '';
        this.componentPerformer.metadataId = '';
        this.componentPerformer.methodCode = '';
        this.componentPerformer.methodName = '';
        this.componentPerformer.condition = '';
        this.componentPerformer.actualParameters = new Array();
    };
    /**
     * @return {?}
     */
    ComponentPerformerComponent.prototype.selectComponent = /**
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var compFactory = this.resolver.resolveComponentFactory(SelectMetadataRTComponent);
        /** @type {?} */
        var compRef = compFactory.create(this.injector);
        compRef.instance.typeList = 'WebServiceComponent'; // 目前只能根据元数据类型过滤，后续添加标签过滤
        compRef.instance.selectedMetadata.subscribe((/**
         * @param {?} $event
         * @return {?}
         */
        function ($event) {
            try {
                /** @type {?} */
                var meta = $event.metadata;
                _this.openComponentSelectorNew(meta.id, _this.sessionSrc.getUserSessionId());
            }
            catch (_a) {
                console.log('$event', $event);
                throw new Error('获取解析构件出错' + $event);
            }
        }));
        /** @type {?} */
        var modalConfig = {
            title: '构件选择',
            width: 980,
            height: 548,
            showButtons: false
        };
        /** @type {?} */
        var dialog = this.modalService.show(compRef, modalConfig);
        compRef.instance.closeModalEmitter.subscribe((/**
         * @param {?} $event
         * @return {?}
         */
        function ($event) { return dialog.close(); }));
    };
    /**
     * @private
     * @param {?} metadataId
     * @param {?} sessionId
     * @return {?}
     */
    ComponentPerformerComponent.prototype.openComponentSelectorNew = /**
     * @private
     * @param {?} metadataId
     * @param {?} sessionId
     * @return {?}
     */
    function (metadataId, sessionId) {
        var _this = this;
        this.componentService.openSelector(metadataId, sessionId).subscribe((/**
         * @param {?} selectorResult
         * @return {?}
         */
        function (selectorResult) {
            selectorResult.confirmEvent.subscribe((/**
             * @param {?} result
             * @return {?}
             */
            function (result) {
                if (result) {
                    _this.component.name = result.name;
                    _this.component.metadataId = result.id;
                    _this.component.methodCode = result.operations[0].code;
                    _this.component.methodName = result.operations[0].name;
                    _this.component.actualParameters = [];
                    if (result.operations[0].parameters && result.operations[0].parameters.length > 0) {
                        _this.component.actualParameters = result.operations[0].parameters
                            .map((/**
                         * @param {?} p
                         * @return {?}
                         */
                        function (p) { return (/** @type {?} */ (({
                            code: p.code,
                            name: p.name,
                            value: '',
                            valueText: '',
                            description: p.description,
                            fetchValueMode: p.fetchValueMode,
                            fetchValueSetting: p.fetchValueSetting
                        }))); }));
                    }
                }
            }));
        }));
    };
    /**
     * @param {?} e
     * @return {?}
     */
    ComponentPerformerComponent.prototype.showExprHelp = /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
        var _this = this;
        var e_6, _a, e_7, _b, e_8, _c, e_9, _d, e_10, _e, e_11, _f;
        if (this.designerState.schemas.length > 0) {
            try {
                for (var _g = tslib_1.__values(this.designerState.schemas), _h = _g.next(); !_h.done; _h = _g.next()) {
                    var schema = _h.value;
                    this.expr.addSchema('Schema', schema);
                }
            }
            catch (e_6_1) { e_6 = { error: e_6_1 }; }
            finally {
                try {
                    if (_h && !_h.done && (_a = _g.return)) _a.call(_g);
                }
                finally { if (e_6) throw e_6.error; }
            }
            if (this.designerState.schemas[0].entityTypes && this.designerState.schemas[0].entityTypes.length > 0) {
                /** @type {?} */
                var entityType = this.designerState.schemas[0].entityTypes[0];
                this.expr.addInjectedEntity(entityType.name, 'Schema', entityType.name, InjectedType.EntityType);
            }
        }
        /** @type {?} */
        var context = new Array();
        if (this.designerState.procInstContext.length > 0) {
            try {
                for (var _j = tslib_1.__values(this.designerState.procInstContext), _k = _j.next(); !_k.done; _k = _j.next()) {
                    var variable = _k.value;
                    context.push(variable);
                }
            }
            catch (e_7_1) { e_7 = { error: e_7_1 }; }
            finally {
                try {
                    if (_k && !_k.done && (_b = _j.return)) _b.call(_j);
                }
                finally { if (e_7) throw e_7.error; }
            }
        }
        if (this.designerState.formalParameterContext.length > 0) {
            var _loop_1 = function (variable) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) { return c.key === variable.key; }))) {
                    context.push(variable);
                }
            };
            try {
                for (var _l = tslib_1.__values(this.designerState.formalParameterContext), _m = _l.next(); !_m.done; _m = _l.next()) {
                    var variable = _m.value;
                    _loop_1(variable);
                }
            }
            catch (e_8_1) { e_8 = { error: e_8_1 }; }
            finally {
                try {
                    if (_m && !_m.done && (_c = _l.return)) _c.call(_l);
                }
                finally { if (e_8) throw e_8.error; }
            }
        }
        if (this.designerState.participantContext.length > 0) {
            var _loop_2 = function (variable) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) { return c.key === variable.key; }))) {
                    context.push(variable);
                }
            };
            try {
                for (var _o = tslib_1.__values(this.designerState.participantContext), _p = _o.next(); !_p.done; _p = _o.next()) {
                    var variable = _p.value;
                    _loop_2(variable);
                }
            }
            catch (e_9_1) { e_9 = { error: e_9_1 }; }
            finally {
                try {
                    if (_p && !_p.done && (_d = _o.return)) _d.call(_o);
                }
                finally { if (e_9) throw e_9.error; }
            }
        }
        if (this.designerState.processVariableContext.length > 0) {
            var _loop_3 = function (variable) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) { return c.key === variable.key; }))) {
                    context.push(variable);
                }
            };
            try {
                for (var _q = tslib_1.__values(this.designerState.processVariableContext), _r = _q.next(); !_r.done; _r = _q.next()) {
                    var variable = _r.value;
                    _loop_3(variable);
                }
            }
            catch (e_10_1) { e_10 = { error: e_10_1 }; }
            finally {
                try {
                    if (_r && !_r.done && (_e = _q.return)) _e.call(_q);
                }
                finally { if (e_10) throw e_10.error; }
            }
        }
        if (context.length > 0) {
            try {
                for (var context_1 = tslib_1.__values(context), context_1_1 = context_1.next(); !context_1_1.done; context_1_1 = context_1.next()) {
                    var v = context_1_1.value;
                    this.expr.addContext(v);
                }
            }
            catch (e_11_1) { e_11 = { error: e_11_1 }; }
            finally {
                try {
                    if (context_1_1 && !context_1_1.done && (_f = context_1.return)) _f.call(context_1);
                }
                finally { if (e_11) throw e_11.error; }
            }
        }
        this.expr.setEditPattern(ExprEditMode.Advanced); // 默认打开高级表达式编辑器
        this.expr.addExpressionText(e.instance.value);
        this.expr.buildExpression().then((/**
         * @param {?} d
         * @return {?}
         */
        function (d) {
            var e_12, _a;
            if (d) {
                e.formControl.setValue(d);
                e.instance.cd.detectChanges();
                e.rowData.value = d;
                try {
                    for (var _b = tslib_1.__values(_this.component.actualParameters), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var p = _c.value;
                        if (p.code === e.rowId) {
                            p.value = d;
                        }
                    }
                }
                catch (e_12_1) { e_12 = { error: e_12_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_12) throw e_12.error; }
                }
            }
        }));
    };
    /**
     * @return {?}
     */
    ComponentPerformerComponent.prototype.getPerformers = /**
     * @return {?}
     */
    function () {
        this.grid.endCellEdit();
        console.log(this.component);
        return this.component;
    };
    /**
     * @private
     * @return {?}
     */
    ComponentPerformerComponent.prototype.getHelpInfo = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        forkJoin(this.service.getHelpMetaData(this.helpInfo.helpId, this.helpInfo.su), this.service.getLookUpData(this.helpInfo.helpId, this.helpInfo.su, this.helpInfo.pageInfo.pageIndex, this.helpInfo.pageInfo.pageSize, this.helpInfo.search)).subscribe((/**
         * @param {?} re
         * @return {?}
         */
        function (re) {
            if (re[0]) {
                /** @type {?} */
                var meta = re[0];
                /** @type {?} */
                var help = (/** @type {?} */ (JSON.parse(meta.content)));
                _this.helpInfo.columns = help.dataSource.columns;
                _this.helpInfo.displayType = help.displayType;
                _this.helpInfo.fieldInfo = {
                    idField: help.idField,
                    valueField: help.valueField,
                    textField: help.textField
                };
            }
            else {
                throw new Error('帮助元数据不存在！');
            }
            if (re[1]) {
                /** @type {?} */
                var helpData = re[1];
                _this.helpInfo.items = helpData.items;
                _this.helpInfo.title = helpData.title;
                _this.helpInfo.total = helpData.total;
                _this.lookup.showDialog();
            }
            else {
                throw new Error('获取帮助数据源失败！');
            }
        }));
    };
    /**
     * @param {?} data
     * @return {?}
     */
    ComponentPerformerComponent.prototype.pagerChanged = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        var _this = this;
        if (data) {
            this.helpInfo.pageInfo.pageIndex = data.pageIndex;
            this.helpInfo.pageInfo.pageSize = data.pageSize;
            this.service.getLookUpData(this.helpInfo.helpId, this.helpInfo.su, this.helpInfo.pageInfo.pageIndex, this.helpInfo.pageInfo.pageSize, this.helpInfo.search)
                .subscribe((/**
             * @param {?} re
             * @return {?}
             */
            function (re) {
                _this.helpInfo.items = re.items;
                _this.helpInfo.title = re.title;
                _this.helpInfo.total = re.total;
                _this.lookup.loadData(re);
            }));
        }
    };
    /**
     * @param {?} data
     * @return {?}
     */
    ComponentPerformerComponent.prototype.search = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        var _this = this;
        console.log(data);
        this.helpInfo.search = { category: 'search' };
        if (data) {
            /** @type {?} */
            var searchInfo = {
                searchField: data.field || data.search.field,
                searchValue: data.value || data.search.value
            };
            this.helpInfo.search = Object.assign(this.helpInfo.search, searchInfo);
            this.service.getLookUpData(this.helpInfo.helpId, this.helpInfo.su, this.helpInfo.pageInfo.pageIndex, this.helpInfo.pageInfo.pageSize, this.helpInfo.search)
                .subscribe((/**
             * @param {?} re
             * @return {?}
             */
            function (re) {
                _this.helpInfo.items = re.items;
                _this.helpInfo.title = re.title;
                _this.helpInfo.total = re.total;
                _this.lookup.loadData(re);
            }));
        }
    };
    ComponentPerformerComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-component-performer',
                    template: "\r\n    <div class=\"f-utils-fill-flex-column farris-overflow-y-auto h-100\">\r\n      <form class=\"farris-form farris-card-content-bg farris-card-section mx-2\">\r\n        <div class=\"d-flex flex-wrap flex-column mb-2 pr-4\">\r\n          <div class=\"farris-form-controls-inline farris-form-auto mb-2\">\r\n            <div class=\"farris-group-wrap mx-3\">\r\n              <div class=\"form-group\">\r\n                <label class=\"col-form-label\">\r\n                  <span class=\"farris-label-info text-danger\">*</span>\r\n                  <span class=\"farris-label-text\">\u6784\u4EF6\u540D\u79F0</span>\r\n                </label>\r\n                <div class=\"farris-input-wrap ml-2\">\r\n                  <input type=\"text\" class=\"k-textbox form-control\" name=\"name\"\r\n                    [(ngModel)]=\"component.name\" />\r\n                  <div class=\"farris-feedback valid-feedback\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"farris-form-controls-inline farris-form-auto\">\r\n            <div class=\"farris-group-wrap mx-3\">\r\n              <div class=\"form-group\">\r\n                <label class=\"col-form-label\">\r\n                  <span class=\"farris-label-info text-danger\">*</span>\r\n                  <span class=\"farris-label-text\">\u6784\u4EF6\u9009\u62E9</span>\r\n                </label>\r\n                <div class=\"farris-input-wrap ml-2\">\r\n                  <div #inputGroup class=\"input-group\">\r\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"component.methodCode\" name=\"methodCode\" [readOnly]=\"true\" />\r\n                    <div class=\"input-group-append\">\r\n                      <span [style.display]=\"showClearButton ? '' : 'none'\" class=\"input-group-text input-group-clear\" (click)=\"clear()\">\r\n                        <i class=\"f-icon modal_close\"></i>\r\n                      </span>\r\n                      <span class=\"input-group-text\" (click)=\"selectComponent()\" style=\"background: #FFF;\">\r\n                        <i class=\"f-icon f-icon-lookup\"></i>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"farris-feedback valid-feedback\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      <farris-tabs class=\"f-utils-fill\" #params [value]=\"'params'\" [contentFill]=\"true\">\r\n        <farris-tab title=\"\u53C2\u6570\u5217\u8868\" [id]=\"'params'\">\r\n          <ng-template #content>\r\n            <div class=\"f-utils-fill-flex-column h-100\">\r\n              <farris-datagrid #grid [data]=\"component.actualParameters\" [columns]=\"columns\" [idField]=\"'code'\" [fit]=\"true\"\r\n                [fitColumns]=\"true\" [editable]=\"true\" [editMode]=\"'cell'\" [pagination]=\"false\" [showCheckbox]=\"false\"\r\n                [multiSelect]=\"false\" [afterEdit]=\"afterEdit\" [beforeEdit]=\"beforeEdit\" \r\n                (selectChanged)=\"selectChanged($event)\" (endEdit)=\"endEdit($event)\"></farris-datagrid>\r\n            </div>\r\n          </ng-template>\r\n        </farris-tab>\r\n      </farris-tabs>\r\n    </div>\r\n\r\n<farris-lookup-grid style=\"display: none;\" [items]=\"helpInfo.items\" [columns]=\"helpInfo.columns\"  [resizable]=\"true\" [singleSelect]=\"true\" \r\n  [idField]=\"helpInfo.fieldInfo.idField\" [textField]=\"helpInfo.fieldInfo.textField\" [valueField]=\"helpInfo.fieldInfo.valueField\" \r\n  [pagination]=\"true\"  [pageIndex]=\"helpInfo.pageInfo.pageIndex\" [pageSize]=\"helpInfo.pageInfo.pageSize\" [pageList]=\"helpInfo.pageInfo.pageList\" \r\n  [total]=\"helpInfo.total\" [title]=\"helpInfo.title\" [displayType]=\"helpInfo.displayType\" [dictPicked]=\"dictPicked\" [remoteSearch]='false'\r\n  (pagerChanged)=\"pagerChanged($event)\" (search)=\"search($event)\">\r\n</farris-lookup-grid>",
                    providers: [ComponentPerformerService],
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    ComponentPerformerComponent.ctorParameters = function () { return [
        { type: FormBuilder },
        { type: ProcessDesignerUIState },
        { type: ExpressionService },
        { type: ComponentFactoryResolver },
        { type: Injector },
        { type: SessionService },
        { type: BsModalService },
        { type: CommonComponentUiRTService },
        { type: NgZone },
        { type: ComponentPerformerService },
        { type: ProcessDeUtil }
    ]; };
    ComponentPerformerComponent.propDecorators = {
        cls: [{ type: HostBinding, args: ['class',] }],
        grid: [{ type: ViewChild, args: [DatagridComponent,] }],
        lookup: [{ type: ViewChild, args: [LookupGridComponent,] }],
        inputGroup: [{ type: ViewChild, args: ['inputGroup',] }],
        component: [{ type: Input }]
    };
    return ComponentPerformerComponent;
}());
export { ComponentPerformerComponent };
if (false) {
    /** @type {?} */
    ComponentPerformerComponent.prototype.cls;
    /**
     * @type {?}
     * @private
     */
    ComponentPerformerComponent.prototype.componentPerformer;
    /** @type {?} */
    ComponentPerformerComponent.prototype.grid;
    /** @type {?} */
    ComponentPerformerComponent.prototype.lookup;
    /** @type {?} */
    ComponentPerformerComponent.prototype.inputGroup;
    /** @type {?} */
    ComponentPerformerComponent.prototype.showClearButton;
    /** @type {?} */
    ComponentPerformerComponent.prototype.curParameter;
    /** @type {?} */
    ComponentPerformerComponent.prototype.columns;
    /** @type {?} */
    ComponentPerformerComponent.prototype.helpInfo;
    /** @type {?} */
    ComponentPerformerComponent.prototype.cell;
    /** @type {?} */
    ComponentPerformerComponent.prototype.beforeEdit;
    /** @type {?} */
    ComponentPerformerComponent.prototype.afterEdit;
    /** @type {?} */
    ComponentPerformerComponent.prototype.dictPicked;
    /**
     * @type {?}
     * @private
     */
    ComponentPerformerComponent.prototype.formBuilder;
    /**
     * @type {?}
     * @private
     */
    ComponentPerformerComponent.prototype.designerState;
    /**
     * @type {?}
     * @private
     */
    ComponentPerformerComponent.prototype.expr;
    /**
     * @type {?}
     * @private
     */
    ComponentPerformerComponent.prototype.resolver;
    /**
     * @type {?}
     * @private
     */
    ComponentPerformerComponent.prototype.injector;
    /**
     * @type {?}
     * @private
     */
    ComponentPerformerComponent.prototype.sessionSrc;
    /**
     * @type {?}
     * @private
     */
    ComponentPerformerComponent.prototype.modalService;
    /**
     * @type {?}
     * @private
     */
    ComponentPerformerComponent.prototype.componentService;
    /**
     * @type {?}
     * @private
     */
    ComponentPerformerComponent.prototype.ngZone;
    /**
     * @type {?}
     * @private
     */
    ComponentPerformerComponent.prototype.service;
    /**
     * @type {?}
     * @private
     */
    ComponentPerformerComponent.prototype.util;
}
//# sourceMappingURL=data:application/json;base64,