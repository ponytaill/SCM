/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, HostBinding, Output, EventEmitter, Input, ViewChild, TemplateRef } from '@angular/core';
import { FormBuilder } from '@angular/forms';
import { DialogComponent } from '@farris/ui-dialog';
import { ApprovalItemEntity } from './entities/approval-item.entity';
import { HttpService } from '@ecp-caf/caf-common';
import { MessagerService } from '@farris/ui-messager';
import { ProcessDesignerUIState } from '../../app/process-designer.uistate';
import { EditorTypes } from '@farris/ui-datagrid-editors';
import { DatagridComponent } from '@farris/ui-datagrid';
import { ProcessDeUtil } from '../../domain/process-de-util';
export class ApprovelItemsComponent {
    /**
     * @param {?} formBuilder
     * @param {?} message
     * @param {?} util
     * @param {?} http
     * @param {?} uiState
     */
    constructor(formBuilder, message, util, http, uiState) {
        this.formBuilder = formBuilder;
        this.message = message;
        this.util = util;
        this.http = http;
        this.uiState = uiState;
        this.cls = 'farris-main-area flex-column';
        this.closeModal = new EventEmitter();
        this.submitModal = new EventEmitter();
        this.modalConfig = {
            title: '审批选项',
            width: 880,
            height: 515,
            showButtons: true
        };
        this.workFlowActions = [
            { text: '正向', value: 'Forward' },
            { text: '反向', value: 'Backward' },
            { text: '终止', value: 'Abort' }
        ];
        this.columns = [
            {
                field: 'value', width: 80, title: '编号',
            },
            { field: 'text', width: 80, title: '名称' },
            {
                field: 'workFlowAction', width: 80, title: '流转方向',
                formatter: {
                    type: 'enum',
                    options: { valueField: 'value', textField: 'text', data: this.workFlowActions }
                },
                editor: {
                    type: EditorTypes.COMBOLIST,
                    options: { valueField: 'value', textField: 'text', data: this.workFlowActions, idField: 'value', panelHeight: 'auto' }
                },
                validators: [
                    { type: 'required', messager: '必填' }
                ]
            },
            {
                field: 'isDefault', width: 60, title: '默认',
                editor: {
                    type: EditorTypes.SWITCH,
                    options: {}
                },
                formatter: { type: 'boolean', options: { trueText: '是', falseText: '否' } },
                validators: [
                    { type: 'required', messager: '必填' }
                ]
            },
            {
                field: 'commentNecessary', width: 60, title: '意见必填',
                editor: {
                    type: EditorTypes.SWITCH,
                    options: {}
                },
                formatter: { type: 'boolean', options: { trueText: '是', falseText: '否' } },
                validators: [
                    { type: 'required', messager: '必填' }
                ]
            },
            {
                field: 'attachmentNecessary', width: 60, title: '附件上传',
                editor: {
                    type: EditorTypes.SWITCH,
                    options: {}
                },
                formatter: { type: 'boolean', options: { trueText: '是', falseText: '否' } },
                validators: [
                    { type: 'required', messager: '必填' }
                ]
            },
            {
                field: 'certification', width: 60, title: '数字签名',
                editor: {
                    type: EditorTypes.SWITCH,
                    options: {}
                },
                formatter: { type: 'boolean', options: { trueText: '是', falseText: '否' } },
                validators: [
                    { type: 'required', messager: '必填' }
                ]
            }
        ];
        this.data = [];
        this.actionsCols = [
            { title: '编号', field: 'code', width: 80 },
            { title: '名称', field: 'name', width: 90 }
        ];
    }
    /**
     * @param {?} items
     * @return {?}
     */
    set value(items) {
        if (items && items.length > 0) {
            for (const item of items) {
                /** @type {?} */
                const approval = new ApprovalItemEntity();
                approval.value = item.Value;
                approval.text = item.Text;
                approval.workFlowAction = item.WorkFlowAction;
                approval.isDefault = item.IsDefault;
                if (item.commentNecessary === null || item.commentNecessary === undefined) {
                    approval.commentNecessary = (item.Value === 'Back' ? true : false);
                }
                else {
                    approval.commentNecessary = item.commentNecessary;
                }
                approval.certification = item.certification ? item.certification : false;
                approval.attachmentNecessary = item.attachmentNecessary ? item.attachmentNecessary : false;
                this.data.push(approval);
            }
        }
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.getActionsList();
    }
    /**
     * @return {?}
     */
    clickOK() {
        this.grid.endCellEdit();
        if (this.validator()) {
            /** @type {?} */
            const object = { value: this.data, parameters: null };
            this.submitModal.emit(object);
        }
    }
    /**
     * @return {?}
     */
    clickCancel() {
        this.closeModal.emit();
    }
    /**
     * @private
     * @return {?}
     */
    validator() {
        if (this.data.findIndex((/**
         * @param {?} d
         * @return {?}
         */
        d => !d.workFlowAction)) > -1) {
            this.message.warning('审批项流转方向不允许为空，请修改！');
            return false;
        }
        return true;
    }
    /**
     * @param {?} data
     * @return {?}
     */
    selectChanged(data) { }
    /**
     * @return {?}
     */
    deleteRow() {
        this.grid.endCellEdit();
        if (this.grid.selectedRow && this.grid.selectedRow.data) {
            /** @type {?} */
            const i = this.data.findIndex((/**
             * @param {?} d
             * @return {?}
             */
            d => d.value === this.grid.selectedRow.data.value));
            this.data.splice(i, 1);
            this.grid.loadData(this.data);
        }
        else {
            this.message.info('请首先选中一条选项！');
        }
    }
    /**
     * @private
     * @return {?}
     */
    getActionsList() {
        /** @type {?} */
        let url = this.util.getApprovalActionWebApi() + '?';
        if (this.uiState.bizActivityId) {
            url += `bizActivityId=${this.uiState.bizActivityId}`;
        }
        else {
            url += `bizActivityId=`;
        }
        this.http.get(url).subscribe((/**
         * @param {?} data
         * @return {?}
         */
        (data) => {
            data = data.filter((/**
             * @param {?} a
             * @return {?}
             */
            a => this.actionValidate(a)));
            this.actions = data;
        }));
    }
    /**
     * @return {?}
     */
    actionsSelect() {
        /** @type {?} */
        const selections = this.actionsTable.checkeds;
        if (selections && selections.length > 0) {
            selections.forEach((/**
             * @param {?} action
             * @return {?}
             */
            action => {
                /** @type {?} */
                const item = new ApprovalItemEntity(action.data.code, action.data.name, action.data.workFlowAction);
                /** @type {?} */
                const index = this.data.findIndex((/**
                 * @param {?} act
                 * @return {?}
                 */
                act => act.value === action.data.code));
                if (index > -1) {
                    this.data.splice(index, 1);
                }
                this.data.push(item);
            }));
            this.grid.loadData(this.data);
        }
        this.actionsDialog.close();
    }
    /**
     * @private
     * @param {?} action
     * @return {?}
     */
    actionValidate(action) {
        /** @type {?} */
        const arr = ['ViewBizLog', 'ViewFlowChart', 'AssignUser', 'Claim', 'Unclaim', 'Retrieve', 'Resubmit', 'Obsolete', 'Transfer', 'AddSignFront', 'ViewExecuteForm'];
        return arr.indexOf(action.code.trim()) === -1;
    }
}
ApprovelItemsComponent.decorators = [
    { type: Component, args: [{
                selector: 'app-approvel-items',
                template: "<div class=\"f-page\">\r\n  <div class=\"f-page-header\">\r\n    <nav class=\"f-page-header-base\">\r\n      <div class=\"f-title\">\r\n        <span class=\"f-title-icon f-text-orna-bill\">\r\n          <i class=\"f-icon f-icon-page-title-administer\"></i>\r\n        </span>\r\n        <h4 class=\"f-title-text\">\u5BA1\u6279\u9879\u5217\u8868</h4>\r\n      </div>\r\n      <div class=\"btn-toolbar btn-group-lg\">\r\n      <button class=\"btn btn-primary mr-2\" (click)=\"actionsDialog.show()\">\u65B0\u589E</button>\r\n      <button class=\"btn btn-secondary\" (click)=\"deleteRow()\">\u5220\u9664</button>\r\n      </div>\r\n    </nav>\r\n  </div>\r\n  <div class=\"f-page-main f-utils-fill-flex-column h-100\">\r\n    <div class=\"f-utils-fill-flex-column farris-overflow-y-auto h-100\">\r\n      <farris-datagrid #grid [data]=\"data\" [columns]=\"columns\" [idField]=\"'value'\" [fit]=\"true\"\r\n        [fitColumns]=\"true\" [editable]=\"true\" [editMode]=\"'cell'\" [pagination]=\"false\" [showCheckbox]=\"false\"\r\n        [multiSelect]=\"false\" (selectChanged)=\"selectChanged($event)\">\r\n      </farris-datagrid>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #iconSelectFooter>\r\n  <button type=\"button\" class=\"btn btn-primary btn-sm px-3 mx-2\" (click)=\"clickOK()\">\u786E\u5B9A</button>\r\n  <button type=\"button\" class=\"btn btn-secondary btn-sm px-3 mx-2\" (click)=\"clickCancel()\">\u53D6\u6D88</button>\r\n</ng-template>\r\n\r\n<ng-template #buttonRef>\r\n  <button class=\"btn btn-sm btn-primary px-3\" (click)=\"actionsSelect()\">\u786E\u5B9A</button>\r\n  <button class=\"btn btn-sm btn-default px-3\" (click)=\"actionsDialog.close()\">\u53D6\u6D88</button>\r\n</ng-template>\r\n<farris-dialog #actionsDialog [buttons]=\"buttonRef\" [width]=\"700\" [height]=\"520\" [title]=\"'\u5BA1\u6279\u52A8\u4F5C'\">\r\n  <div class=\"f-utils-fill-flex-column farris-overflow-y-auto h-100 m-2\">\r\n    <farris-datagrid #actionsTable [columns]=\"actionsCols\" [data]=\"actions\"\r\n      [idField]=\"'id'\" [fit]=\"true\" [fitColumns]=\"true\" [pagination]='false'\r\n      [showCheckbox]=\"true\" [multiSelect]=\"true\" [checkOnSelect]=\"true\" [selectOnCheck]=\"true\" [showAllCheckbox]=\"true\"\r\n      [showLineNumber]=\"true\" [lineNumberTitle]=\"'\u5E8F\u53F7'\" [lineNumberWidth]=\"50\" [striped]=\"true\">\r\n    </farris-datagrid>\r\n  </div>\r\n</farris-dialog>\r\n",
                styles: [""]
            }] }
];
/** @nocollapse */
ApprovelItemsComponent.ctorParameters = () => [
    { type: FormBuilder },
    { type: MessagerService },
    { type: ProcessDeUtil },
    { type: HttpService },
    { type: ProcessDesignerUIState }
];
ApprovelItemsComponent.propDecorators = {
    cls: [{ type: HostBinding, args: ['class',] }],
    closeModal: [{ type: Output }],
    submitModal: [{ type: Output }],
    value: [{ type: Input }],
    modalFooter: [{ type: ViewChild, args: ['iconSelectFooter',] }],
    actionsTable: [{ type: ViewChild, args: ['actionsTable',] }],
    actionsDialog: [{ type: ViewChild, args: ['actionsDialog',] }],
    grid: [{ type: ViewChild, args: ['grid',] }]
};
if (false) {
    /** @type {?} */
    ApprovelItemsComponent.prototype.cls;
    /** @type {?} */
    ApprovelItemsComponent.prototype.closeModal;
    /** @type {?} */
    ApprovelItemsComponent.prototype.submitModal;
    /** @type {?} */
    ApprovelItemsComponent.prototype.modalFooter;
    /** @type {?} */
    ApprovelItemsComponent.prototype.actionsTable;
    /** @type {?} */
    ApprovelItemsComponent.prototype.actionsDialog;
    /** @type {?} */
    ApprovelItemsComponent.prototype.grid;
    /** @type {?} */
    ApprovelItemsComponent.prototype.modalConfig;
    /** @type {?} */
    ApprovelItemsComponent.prototype.workFlowActions;
    /** @type {?} */
    ApprovelItemsComponent.prototype.columns;
    /** @type {?} */
    ApprovelItemsComponent.prototype.data;
    /** @type {?} */
    ApprovelItemsComponent.prototype.actions;
    /** @type {?} */
    ApprovelItemsComponent.prototype.actionsCols;
    /**
     * @type {?}
     * @private
     */
    ApprovelItemsComponent.prototype.formBuilder;
    /**
     * @type {?}
     * @private
     */
    ApprovelItemsComponent.prototype.message;
    /**
     * @type {?}
     * @private
     */
    ApprovelItemsComponent.prototype.util;
    /**
     * @type {?}
     * @private
     */
    ApprovelItemsComponent.prototype.http;
    /**
     * @type {?}
     * @private
     */
    ApprovelItemsComponent.prototype.uiState;
}
export class ApprovelItemsConverter {
    constructor() { }
    /**
     * @param {?} data
     * @return {?}
     */
    convertTo(data) {
        if (data && data.length > 0) {
            return '（已设置）';
        }
        else {
            return '（未设置）';
        }
    }
}
//# sourceMappingURL=data:application/json;base64,