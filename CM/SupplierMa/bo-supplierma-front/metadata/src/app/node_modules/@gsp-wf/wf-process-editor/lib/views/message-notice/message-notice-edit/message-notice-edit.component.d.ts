import { OnInit, TemplateRef, EventEmitter } from '@angular/core';
import { MessageNotice } from '../message-notice';
import { MessagerService } from '@farris/ui-messager';
import { ProcessDesignerUIState } from '../../../app/process-designer.uistate';
import { ExpressionService } from "@gsp-svc/expression";
export declare class MessageNoticeEditComponent implements OnInit {
    private message;
    private uistate;
    private expr;
    groupIcon2: string;
    exprAble: boolean;
    footer: TemplateRef<any>;
    closeEmitter: EventEmitter<any>;
    submitEmitter: EventEmitter<MessageNotice>;
    private _location;
    location: 'activity' | 'process' | 'messageActivity';
    messageNotice: MessageNotice;
    value: MessageNotice;
    typeGroup: {
        value: any;
        name: any;
    }[];
    receiverVariables: {
        value: string;
        name: string;
    }[];
    sendTimes: any[];
    receiverVari: string;
    bindingData: {
        id?: any;
        name?: any;
    };
    constructor(message: MessagerService, uistate: ProcessDesignerUIState, expr: ExpressionService);
    ngOnInit(): void;
    clickOK(): void;
    clickCancel(): void;
    sendTimeChange(data: any): void;
    usersSelect(data: any): void;
    changeValue(data: any): void;
    clear(): void;
    private setReceiver;
    private validator;
    titleExpr(data: any): void;
    contentExpr(data: any): void;
    showContentHelp(data: string): void;
    showTitleHelp(data: string): void;
    showExpr(): void;
    tranExpr(): void;
}
