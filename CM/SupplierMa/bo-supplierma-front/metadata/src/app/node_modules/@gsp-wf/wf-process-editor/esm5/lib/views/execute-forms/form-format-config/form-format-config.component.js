/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, TemplateRef, ViewChild, Input } from '@angular/core';
import { HttpService } from '@ecp-caf/caf-common';
import { of, forkJoin } from 'rxjs';
import { FormFormat } from '../entities/form-format';
import { FormFormatConfig, FormButtonConfig, FormFieldConfig } from '../entities/form-format-config';
import { DatagridComponent } from '@farris/ui-datagrid';
import { MessagerService } from '@farris/ui-messager';
import { NotifyService } from '@farris/ui-notify';
import { switchMap, catchError } from 'rxjs/operators';
import { FormOperationConfigComponent } from '../form-operation-config/form-operation-config.component';
import { TreeTableComponent } from '@farris/ui-treetable';
var FormFormatConfigComponent = /** @class */ (function () {
    function FormFormatConfigComponent(http, message, notify) {
        this.http = http;
        this.message = message;
        this.notify = notify;
        this.config = new FormFormatConfig();
        this.formFormat = new FormFormat();
        this.state = 'edit';
        this.showMethodTab = true;
        this.buttonCols = [];
        this.buttonConfigs = new Array();
        this.fieldCols = [];
        this.fieldConfigs = new Array();
        this.formatFieldList = new Array();
    }
    Object.defineProperty(FormFormatConfigComponent.prototype, "formFormatId", {
        get: /**
         * @return {?}
         */
        function () {
            return this._formFormatId;
        },
        set: /**
         * @param {?} v
         * @return {?}
         */
        function (v) {
            this._formFormatId = v;
            this.config.formFormatId = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FormFormatConfigComponent.prototype, "formatConfigId", {
        get: /**
         * @return {?}
         */
        function () {
            return this._formatConfigId;
        },
        set: /**
         * @param {?} v
         * @return {?}
         */
        function (v) {
            this._formatConfigId = v;
            if (!v) {
                this.state = 'new';
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    FormFormatConfigComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.buttonCols = [
            { field: 'buttonName', width: 100, title: '按钮名称' },
            // { field: 'buttonId', width: 100, title: '按钮标识' },
            {
                title: '是否可用',
                field: 'enable',
                width: 80,
                template: this.btnEnable,
                align: 'center',
                hAlign: 'center'
            },
            {
                title: '是否禁用',
                field: 'disabled',
                width: 80,
                template: this.btnDisabled,
                align: 'center',
                hAlign: 'center'
            },
            {
                title: '是否隐藏',
                field: 'hidden',
                width: 80,
                template: this.btnHidden,
                align: 'center',
                hAlign: 'center'
            }
        ];
        this.fieldCols = [
            { field: 'fieldName', width: 100, title: '字段名称' },
            // { field: 'fieldId', width: 100, title: '字段标识' },
            {
                title: '是否可写',
                field: 'editable',
                width: 80,
                template: this.fieldEditable,
                align: 'center',
                hAlign: 'center'
            },
            {
                title: '是否只读',
                field: 'readonly',
                width: 80,
                template: this.fieldReadonly,
                align: 'center',
                hAlign: 'center'
            },
            {
                title: '是否隐藏',
                field: 'hidden',
                width: 80,
                template: this.fieldHidden,
                align: 'center',
                hAlign: 'center'
            },
            {
                title: '是否必填',
                field: 'required',
                width: 80,
                template: this.fieldRequired,
                align: 'center',
                hAlign: 'center'
            }
        ];
        this.getConfig();
    };
    /**
     * @return {?}
     */
    FormFormatConfigComponent.prototype.submit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.validator()) {
            this.setBtnAndFieldConfigs();
            if (this.state === 'new' &&
                this.config.formButtonConfigs.length === 0 &&
                this.config.formFieldConfigs.length === 0 &&
                this.operationConfig.operations.length === 0) {
                return of({ result: true, configId: null });
            }
            else {
                return this.saveConfig(this.config).pipe(switchMap((/**
                 * @param {?} re
                 * @return {?}
                 */
                function (re) {
                    return of({ result: true, configId: _this.config.id });
                })), catchError((/**
                 * @param {?} re
                 * @return {?}
                 */
                function (re) {
                    _this.message.error('保存配置失败，请联系管理员查看原因！');
                    return of({ result: false, configId: _this.config.id });
                })));
            }
        }
        else {
            return of({ result: false, configId: null });
        }
    };
    /**
     * @param {?} bool
     * @param {?} field
     * @param {?} id
     * @return {?}
     */
    FormFormatConfigComponent.prototype.btnConfigChange = /**
     * @param {?} bool
     * @param {?} field
     * @param {?} id
     * @return {?}
     */
    function (bool, field, id) {
        var e_1, _a;
        if (bool) {
            try {
                for (var _b = tslib_1.__values(this.buttonConfigs), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var b = _c.value;
                    if (b.id === id) {
                        switch (field) {
                            case 'enable':
                                b.enable = bool;
                                b.disabled = false;
                                b.hidden = false;
                                break;
                            case 'disabled':
                                b.disabled = bool;
                                b.enable = false;
                                b.hidden = false;
                                break;
                            case 'hidden':
                                b.hidden = bool;
                                b.disabled = false;
                                b.enable = false;
                                break;
                        }
                    }
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_1) throw e_1.error; }
            }
        }
    };
    /**
     * @param {?} operation
     * @return {?}
     */
    FormFormatConfigComponent.prototype.btnBatchOperate = /**
     * @param {?} operation
     * @return {?}
     */
    function (operation) {
        var e_2, _a;
        /** @type {?} */
        var checkeds = this.btnGrid.checkedRows;
        if (checkeds && checkeds.length > 0) {
            try {
                for (var checkeds_1 = tslib_1.__values(checkeds), checkeds_1_1 = checkeds_1.next(); !checkeds_1_1.done; checkeds_1_1 = checkeds_1.next()) {
                    var c = checkeds_1_1.value;
                    this.btnConfigChange(true, operation, c.id);
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (checkeds_1_1 && !checkeds_1_1.done && (_a = checkeds_1.return)) _a.call(checkeds_1);
                }
                finally { if (e_2) throw e_2.error; }
            }
        }
    };
    /**
     * @return {?}
     */
    FormFormatConfigComponent.prototype.btnBatchReset = /**
     * @return {?}
     */
    function () {
        var e_3, _a;
        /** @type {?} */
        var checkeds = this.btnGrid.checkedRows;
        if (checkeds && checkeds.length > 0) {
            var _loop_1 = function (c) {
                var e_4, _a;
                /** @type {?} */
                var button = this_1.formFormat.formButtons.find((/**
                 * @param {?} b
                 * @return {?}
                 */
                function (b) { return b.id === c.id; }));
                try {
                    for (var _b = tslib_1.__values(this_1.buttonConfigs), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var b = _c.value;
                        if (b.id === c.id) {
                            b.enable = button.buttonState === 'Enable' ? true : false;
                            b.disabled = button.buttonState === 'Disabled' ? true : false;
                            b.hidden = button.buttonState === 'Hidden' ? true : false;
                        }
                    }
                }
                catch (e_4_1) { e_4 = { error: e_4_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_4) throw e_4.error; }
                }
            };
            var this_1 = this;
            try {
                for (var checkeds_2 = tslib_1.__values(checkeds), checkeds_2_1 = checkeds_2.next(); !checkeds_2_1.done; checkeds_2_1 = checkeds_2.next()) {
                    var c = checkeds_2_1.value;
                    _loop_1(c);
                }
            }
            catch (e_3_1) { e_3 = { error: e_3_1 }; }
            finally {
                try {
                    if (checkeds_2_1 && !checkeds_2_1.done && (_a = checkeds_2.return)) _a.call(checkeds_2);
                }
                finally { if (e_3) throw e_3.error; }
            }
        }
    };
    /**
     * @param {?} bool
     * @param {?} field
     * @param {?} id
     * @return {?}
     */
    FormFormatConfigComponent.prototype.fieldConfigChange = /**
     * @param {?} bool
     * @param {?} field
     * @param {?} id
     * @return {?}
     */
    function (bool, field, id) {
        if (bool) {
            this.fieldSwitchChange(this.fieldConfigs, field, id);
        }
    };
    /**
     * @private
     * @param {?} fieldConfigs
     * @param {?} field
     * @param {?} id
     * @return {?}
     */
    FormFormatConfigComponent.prototype.fieldSwitchChange = /**
     * @private
     * @param {?} fieldConfigs
     * @param {?} field
     * @param {?} id
     * @return {?}
     */
    function (fieldConfigs, field, id) {
        var e_5, _a;
        if (fieldConfigs.length > 0) {
            try {
                for (var fieldConfigs_1 = tslib_1.__values(fieldConfigs), fieldConfigs_1_1 = fieldConfigs_1.next(); !fieldConfigs_1_1.done; fieldConfigs_1_1 = fieldConfigs_1.next()) {
                    var f = fieldConfigs_1_1.value;
                    if (f.data.id === id) {
                        switch (field) {
                            case 'editable':
                                f.data.editable = true;
                                f.data.readonly = false;
                                f.data.hidden = false;
                                f.data.required = false;
                                break;
                            case 'readonly':
                                f.data.editable = false;
                                f.data.readonly = true;
                                f.data.hidden = false;
                                f.data.required = false;
                                break;
                            case 'hidden':
                                f.data.editable = false;
                                f.data.readonly = false;
                                f.data.hidden = true;
                                f.data.required = false;
                                break;
                            case 'required':
                                f.data.editable = false;
                                f.data.readonly = false;
                                f.data.hidden = false;
                                f.data.required = true;
                                break;
                        }
                        return;
                    }
                    else {
                        if (f.children && f.children.length > 0) {
                            this.fieldSwitchChange(f.children, field, id);
                        }
                    }
                }
            }
            catch (e_5_1) { e_5 = { error: e_5_1 }; }
            finally {
                try {
                    if (fieldConfigs_1_1 && !fieldConfigs_1_1.done && (_a = fieldConfigs_1.return)) _a.call(fieldConfigs_1);
                }
                finally { if (e_5) throw e_5.error; }
            }
        }
    };
    /**
     * @param {?} operation
     * @return {?}
     */
    FormFormatConfigComponent.prototype.fieldBatchOperate = /**
     * @param {?} operation
     * @return {?}
     */
    function (operation) {
        var e_6, _a;
        /** @type {?} */
        var checkeds = this.fieldTree.checkeds;
        if (checkeds && checkeds.length > 0) {
            try {
                for (var checkeds_3 = tslib_1.__values(checkeds), checkeds_3_1 = checkeds_3.next(); !checkeds_3_1.done; checkeds_3_1 = checkeds_3.next()) {
                    var c = checkeds_3_1.value;
                    this.fieldConfigChange(true, operation, c.data.id);
                }
            }
            catch (e_6_1) { e_6 = { error: e_6_1 }; }
            finally {
                try {
                    if (checkeds_3_1 && !checkeds_3_1.done && (_a = checkeds_3.return)) _a.call(checkeds_3);
                }
                finally { if (e_6) throw e_6.error; }
            }
        }
    };
    /**
     * @return {?}
     */
    FormFormatConfigComponent.prototype.fieldBatchReset = /**
     * @return {?}
     */
    function () {
        var e_7, _a;
        /** @type {?} */
        var checkeds = this.fieldTree.checkeds;
        if (checkeds && checkeds.length > 0) {
            var _loop_2 = function (c) {
                /** @type {?} */
                var field = this_2.formatFieldList.find((/**
                 * @param {?} f
                 * @return {?}
                 */
                function (f) { return f.id === c.data.id; }));
                this_2.resetFieldConfig(this_2.fieldConfigs, c.data.id, field);
            };
            var this_2 = this;
            try {
                for (var checkeds_4 = tslib_1.__values(checkeds), checkeds_4_1 = checkeds_4.next(); !checkeds_4_1.done; checkeds_4_1 = checkeds_4.next()) {
                    var c = checkeds_4_1.value;
                    _loop_2(c);
                }
            }
            catch (e_7_1) { e_7 = { error: e_7_1 }; }
            finally {
                try {
                    if (checkeds_4_1 && !checkeds_4_1.done && (_a = checkeds_4.return)) _a.call(checkeds_4);
                }
                finally { if (e_7) throw e_7.error; }
            }
        }
    };
    /**
     * @param {?} fieldConfigs
     * @param {?} id
     * @param {?} field
     * @return {?}
     */
    FormFormatConfigComponent.prototype.resetFieldConfig = /**
     * @param {?} fieldConfigs
     * @param {?} id
     * @param {?} field
     * @return {?}
     */
    function (fieldConfigs, id, field) {
        var e_8, _a;
        if (fieldConfigs.length > 0) {
            try {
                for (var fieldConfigs_2 = tslib_1.__values(fieldConfigs), fieldConfigs_2_1 = fieldConfigs_2.next(); !fieldConfigs_2_1.done; fieldConfigs_2_1 = fieldConfigs_2.next()) {
                    var f = fieldConfigs_2_1.value;
                    if (f.leaf === true && f.data.id === id) {
                        f.data.editable = field.fieldState === 'Editable' ? true : false;
                        f.data.readonly = field.fieldState === 'Readonly' ? true : false;
                        f.data.hidden = field.fieldState === 'Hidden' ? true : false;
                        f.data.required = field.fieldState === 'Required' ? true : false;
                        return;
                    }
                    else {
                        if (f.children && f.children.length > 0) {
                            this.resetFieldConfig(f.children, id, field);
                        }
                    }
                }
            }
            catch (e_8_1) { e_8 = { error: e_8_1 }; }
            finally {
                try {
                    if (fieldConfigs_2_1 && !fieldConfigs_2_1.done && (_a = fieldConfigs_2.return)) _a.call(fieldConfigs_2);
                }
                finally { if (e_8) throw e_8.error; }
            }
        }
    };
    /**
     * @private
     * @return {?}
     */
    FormFormatConfigComponent.prototype.validator = /**
     * @private
     * @return {?}
     */
    function () {
        return this.operationConfig.validator();
    };
    /**
     * @private
     * @return {?}
     */
    FormFormatConfigComponent.prototype.setBtnAndFieldConfigs = /**
     * @private
     * @return {?}
     */
    function () {
        var e_9, _a;
        this.config.formButtonConfigs = new Array();
        var _loop_3 = function (btn) {
            /** @type {?} */
            var button = this_3.formFormat.formButtons.find((/**
             * @param {?} b
             * @return {?}
             */
            function (b) { return b.buttonId === btn.buttonId; }));
            /** @type {?} */
            var btnConfig = new FormButtonConfig();
            btnConfig.buttonId = btn.buttonId;
            if (btn.enable) {
                btnConfig.buttonState = 'Enable';
            }
            else if (btn.disabled) {
                btnConfig.buttonState = 'Disabled';
            }
            else if (btn.hidden) {
                btnConfig.buttonState = 'Hidden';
            }
            else {
                return "continue";
            }
            if (!button.buttonState && btnConfig.buttonState) {
                this_3.config.formButtonConfigs.push(btnConfig);
            }
            if (button.buttonState && button.buttonState !== btnConfig.buttonState) {
                this_3.config.formButtonConfigs.push(btnConfig);
            }
        };
        var this_3 = this;
        try {
            for (var _b = tslib_1.__values(this.buttonConfigs), _c = _b.next(); !_c.done; _c = _b.next()) {
                var btn = _c.value;
                _loop_3(btn);
            }
        }
        catch (e_9_1) { e_9 = { error: e_9_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_9) throw e_9.error; }
        }
        this.config.formFieldConfigs = new Array();
        this.getFieldConfigs(this.fieldConfigs);
        this.config.formMethodConfigs = this.operationConfig.operations || new Array();
    };
    /**
     * @private
     * @param {?} fieldConfigs
     * @return {?}
     */
    FormFormatConfigComponent.prototype.getFieldConfigs = /**
     * @private
     * @param {?} fieldConfigs
     * @return {?}
     */
    function (fieldConfigs) {
        var e_10, _a;
        if (fieldConfigs && fieldConfigs.length > 0) {
            var _loop_4 = function (f) {
                if (f.children && f.children.length > 0) {
                    this_4.getFieldConfigs(f.children);
                }
                if (f.leaf === false) {
                    return "continue";
                }
                /** @type {?} */
                var field = this_4.formatFieldList.find((/**
                 * @param {?} fd
                 * @return {?}
                 */
                function (fd) { return fd.fieldId === f.data.fieldId; }));
                /** @type {?} */
                var fieldConfig = new FormFieldConfig();
                fieldConfig.fieldId = f.data.fieldId;
                if (f.data.editable) {
                    fieldConfig.fieldState = 'Editable';
                }
                else if (f.data.readonly) {
                    fieldConfig.fieldState = 'Readonly';
                }
                else if (f.data.hidden) {
                    fieldConfig.fieldState = 'Hidden';
                }
                else if (f.data.required) {
                    fieldConfig.fieldState = 'Required';
                }
                else {
                    return "continue";
                }
                if (!field.fieldState && fieldConfig.fieldState) {
                    this_4.config.formFieldConfigs.push(fieldConfig);
                }
                if (field.fieldState && field.fieldState !== fieldConfig.fieldState) {
                    this_4.config.formFieldConfigs.push(fieldConfig);
                }
            };
            var this_4 = this;
            try {
                for (var fieldConfigs_3 = tslib_1.__values(fieldConfigs), fieldConfigs_3_1 = fieldConfigs_3.next(); !fieldConfigs_3_1.done; fieldConfigs_3_1 = fieldConfigs_3.next()) {
                    var f = fieldConfigs_3_1.value;
                    _loop_4(f);
                }
            }
            catch (e_10_1) { e_10 = { error: e_10_1 }; }
            finally {
                try {
                    if (fieldConfigs_3_1 && !fieldConfigs_3_1.done && (_a = fieldConfigs_3.return)) _a.call(fieldConfigs_3);
                }
                finally { if (e_10) throw e_10.error; }
            }
        }
    };
    /**
     * @private
     * @return {?}
     */
    FormFormatConfigComponent.prototype.getConfig = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.formFormatId) {
            forkJoin(this.getFormFormat(), this.getFormFormatConfig()).subscribe((/**
             * @param {?} re
             * @return {?}
             */
            function (re) {
                var e_11, _a, e_12, _b, e_13, _c;
                /** @type {?} */
                var formFormat = (/** @type {?} */ (re[0]));
                if (formFormat) {
                    _this.formFormat = _this.convertFormFormat(formFormat);
                }
                /** @type {?} */
                var config = (/** @type {?} */ (re[1]));
                if (config) {
                    _this.config = config;
                }
                if (_this.formFormat.formButtons) {
                    _this.buttonConfigs = _this.formFormat.formButtons.map((/**
                     * @param {?} b
                     * @return {?}
                     */
                    function (b) { return Object.assign({}, b, {
                        enable: b.buttonState === 'Enable' ? true : false,
                        disabled: b.buttonState === 'Disabled' ? true : false,
                        hidden: b.buttonState === 'Hidden' ? true : false
                    }); }));
                    /** @type {?} */
                    var btnConfigs = new Array();
                    if (config && config.formButtonConfigs) {
                        btnConfigs = config.formButtonConfigs;
                    }
                    try {
                        for (var btnConfigs_1 = tslib_1.__values(btnConfigs), btnConfigs_1_1 = btnConfigs_1.next(); !btnConfigs_1_1.done; btnConfigs_1_1 = btnConfigs_1.next()) {
                            var b = btnConfigs_1_1.value;
                            try {
                                for (var _d = tslib_1.__values(_this.buttonConfigs), _e = _d.next(); !_e.done; _e = _d.next()) {
                                    var btn = _e.value;
                                    if (btn.buttonId === b.buttonId) {
                                        switch (b.buttonState) {
                                            case 'Enable':
                                                btn.enable = true;
                                                btn.disabled = false;
                                                btn.hidden = false;
                                                break;
                                            case 'Disabled':
                                                btn.enable = false;
                                                btn.disabled = true;
                                                btn.hidden = false;
                                                break;
                                            case 'Hidden':
                                                btn.enable = false;
                                                btn.disabled = false;
                                                btn.hidden = true;
                                                break;
                                        }
                                        break;
                                    }
                                }
                            }
                            catch (e_12_1) { e_12 = { error: e_12_1 }; }
                            finally {
                                try {
                                    if (_e && !_e.done && (_b = _d.return)) _b.call(_d);
                                }
                                finally { if (e_12) throw e_12.error; }
                            }
                        }
                    }
                    catch (e_11_1) { e_11 = { error: e_11_1 }; }
                    finally {
                        try {
                            if (btnConfigs_1_1 && !btnConfigs_1_1.done && (_a = btnConfigs_1.return)) _a.call(btnConfigs_1);
                        }
                        finally { if (e_11) throw e_11.error; }
                    }
                }
                if (_this.formFormat.formFields) {
                    _this.fieldConfigs = tslib_1.__spread(_this.formFormat.formFields);
                    _this.orgFieldConfigs(_this.fieldConfigs);
                    /** @type {?} */
                    var configs = new Array();
                    if (config && config.formFieldConfigs) {
                        configs = config.formFieldConfigs;
                    }
                    try {
                        for (var configs_1 = tslib_1.__values(configs), configs_1_1 = configs_1.next(); !configs_1_1.done; configs_1_1 = configs_1.next()) {
                            var f = configs_1_1.value;
                            _this.setFieldConfig(_this.fieldConfigs, f);
                        }
                    }
                    catch (e_13_1) { e_13 = { error: e_13_1 }; }
                    finally {
                        try {
                            if (configs_1_1 && !configs_1_1.done && (_c = configs_1.return)) _c.call(configs_1);
                        }
                        finally { if (e_13) throw e_13.error; }
                    }
                }
            }));
        }
    };
    /**
     * @private
     * @param {?} formFields
     * @return {?}
     */
    FormFormatConfigComponent.prototype.orgFieldConfigs = /**
     * @private
     * @param {?} formFields
     * @return {?}
     */
    function (formFields) {
        var e_14, _a;
        if (formFields.length > 0) {
            try {
                for (var formFields_1 = tslib_1.__values(formFields), formFields_1_1 = formFields_1.next(); !formFields_1_1.done; formFields_1_1 = formFields_1.next()) {
                    var d = formFields_1_1.value;
                    d.data = Object.assign({}, d.data, {
                        editable: d.data.fieldState === 'Editable' ? true : false,
                        readonly: d.data.fieldState === 'Readonly' ? true : false,
                        hidden: d.data.fieldState === 'Hidden' ? true : false,
                        required: d.data.fieldState === 'Required' ? true : false
                    });
                    if (d.children && d.children) {
                        this.orgFieldConfigs(d.children);
                    }
                }
            }
            catch (e_14_1) { e_14 = { error: e_14_1 }; }
            finally {
                try {
                    if (formFields_1_1 && !formFields_1_1.done && (_a = formFields_1.return)) _a.call(formFields_1);
                }
                finally { if (e_14) throw e_14.error; }
            }
        }
    };
    /**
     * @private
     * @param {?} fieldConfigs
     * @param {?} config
     * @return {?}
     */
    FormFormatConfigComponent.prototype.setFieldConfig = /**
     * @private
     * @param {?} fieldConfigs
     * @param {?} config
     * @return {?}
     */
    function (fieldConfigs, config) {
        var e_15, _a;
        if (fieldConfigs.length > 0) {
            try {
                for (var fieldConfigs_4 = tslib_1.__values(fieldConfigs), fieldConfigs_4_1 = fieldConfigs_4.next(); !fieldConfigs_4_1.done; fieldConfigs_4_1 = fieldConfigs_4.next()) {
                    var f = fieldConfigs_4_1.value;
                    if (f.data.fieldId === config.fieldId) {
                        switch (config.fieldState) {
                            case 'Editable':
                                f.data.editable = true;
                                f.data.readonly = false;
                                f.data.hidden = false;
                                f.data.required = false;
                                break;
                            case 'Readonly':
                                f.data.editable = false;
                                f.data.readonly = true;
                                f.data.hidden = false;
                                f.data.required = false;
                                break;
                            case 'Hidden':
                                f.data.editable = false;
                                f.data.readonly = false;
                                f.data.hidden = true;
                                f.data.required = false;
                                break;
                            case 'Required':
                                f.data.editable = false;
                                f.data.readonly = false;
                                f.data.hidden = false;
                                f.data.required = true;
                                break;
                        }
                        return;
                    }
                    else {
                        if (f.children && f.children.length > 0) {
                            this.setFieldConfig(f.children, config);
                        }
                    }
                }
            }
            catch (e_15_1) { e_15 = { error: e_15_1 }; }
            finally {
                try {
                    if (fieldConfigs_4_1 && !fieldConfigs_4_1.done && (_a = fieldConfigs_4.return)) _a.call(fieldConfigs_4);
                }
                finally { if (e_15) throw e_15.error; }
            }
        }
    };
    /**
     * @private
     * @param {?} config
     * @return {?}
     */
    FormFormatConfigComponent.prototype.saveConfig = /**
     * @private
     * @param {?} config
     * @return {?}
     */
    function (config) {
        /** @type {?} */
        var url = '/api/runtime/wf/v1.0/formFormatConfig';
        return this.http.post(url, config);
    };
    /**
     * @private
     * @return {?}
     */
    FormFormatConfigComponent.prototype.getFormFormat = /**
     * @private
     * @return {?}
     */
    function () {
        if (this.formFormatId) {
            /** @type {?} */
            var url = "/api/runtime/wf/v1.0/formFormat/" + this.formFormatId;
            url = encodeURI(url);
            return this.http.get(url);
        }
        else {
            return of(null);
        }
    };
    /**
     * @private
     * @return {?}
     */
    FormFormatConfigComponent.prototype.getFormFormatConfig = /**
     * @private
     * @return {?}
     */
    function () {
        if (this.formatConfigId) {
            /** @type {?} */
            var url = "/api/runtime/wf/v1.0/formFormatConfig/" + this.formatConfigId;
            url = encodeURI(url);
            return this.http.get(url);
        }
        else {
            return of(null);
        }
    };
    /**
     * @private
     * @param {?} formFormat
     * @return {?}
     */
    FormFormatConfigComponent.prototype.convertFormFormat = /**
     * @private
     * @param {?} formFormat
     * @return {?}
     */
    function (formFormat) {
        if (!formFormat.status) {
            formFormat.status = 0;
        }
        this.convertformFields(formFormat.formFields);
        this.getFormatFieldList(formFormat.formFields, this.formatFieldList);
        return formFormat;
    };
    /**
     * @private
     * @param {?} formFields
     * @return {?}
     */
    FormFormatConfigComponent.prototype.convertformFields = /**
     * @private
     * @param {?} formFields
     * @return {?}
     */
    function (formFields) {
        var e_16, _a;
        if (formFields.length > 0) {
            try {
                for (var formFields_2 = tslib_1.__values(formFields), formFields_2_1 = formFields_2.next(); !formFields_2_1.done; formFields_2_1 = formFields_2.next()) {
                    var d = formFields_2_1.value;
                    if (typeof (d.leaf) !== 'boolean' && (d.leaf == null || d.leaf === undefined)) {
                        d.leaf = true;
                    }
                    if (d.children && d.children) {
                        this.orgFieldConfigs(d.children);
                    }
                }
            }
            catch (e_16_1) { e_16 = { error: e_16_1 }; }
            finally {
                try {
                    if (formFields_2_1 && !formFields_2_1.done && (_a = formFields_2.return)) _a.call(formFields_2);
                }
                finally { if (e_16) throw e_16.error; }
            }
        }
    };
    /**
     * @private
     * @param {?} formFields
     * @param {?} array
     * @return {?}
     */
    FormFormatConfigComponent.prototype.getFormatFieldList = /**
     * @private
     * @param {?} formFields
     * @param {?} array
     * @return {?}
     */
    function (formFields, array) {
        var e_17, _a;
        if (formFields.length > 0) {
            try {
                for (var formFields_3 = tslib_1.__values(formFields), formFields_3_1 = formFields_3.next(); !formFields_3_1.done; formFields_3_1 = formFields_3.next()) {
                    var d = formFields_3_1.value;
                    array.push(d.data);
                    if (d.children && d.children) {
                        this.getFormatFieldList(d.children, array);
                    }
                }
            }
            catch (e_17_1) { e_17 = { error: e_17_1 }; }
            finally {
                try {
                    if (formFields_3_1 && !formFields_3_1.done && (_a = formFields_3.return)) _a.call(formFields_3);
                }
                finally { if (e_17) throw e_17.error; }
            }
        }
    };
    /**
     * @private
     * @param {?} formFields
     * @param {?} fieldId
     * @return {?}
     */
    FormFormatConfigComponent.prototype.getFormatField = /**
     * @private
     * @param {?} formFields
     * @param {?} fieldId
     * @return {?}
     */
    function (formFields, fieldId) {
        var e_18, _a;
        try {
            for (var formFields_4 = tslib_1.__values(formFields), formFields_4_1 = formFields_4.next(); !formFields_4_1.done; formFields_4_1 = formFields_4.next()) {
                var f = formFields_4_1.value;
                if (f.data.fieldId === fieldId) {
                    return f;
                }
                if (f.children && f.children.length > 0) {
                    return this.getFormatField(f.children, fieldId);
                }
            }
        }
        catch (e_18_1) { e_18 = { error: e_18_1 }; }
        finally {
            try {
                if (formFields_4_1 && !formFields_4_1.done && (_a = formFields_4.return)) _a.call(formFields_4);
            }
            finally { if (e_18) throw e_18.error; }
        }
    };
    FormFormatConfigComponent.decorators = [
        { type: Component, args: [{
                    selector: 'lib-form-format-config',
                    template: "\r\n<!--\u9700\u8981\u5D4C\u5957\u7684\u5C42-----------\u6807\u7B7E\u9875---------------->\r\n<farris-tabs class=\"h-100 f-component-tabs f-tabs-has-grid\" [value]=\"'buttonConfig'\" [contentFill]=\"true\">\r\n  <farris-tab [title]=\"'\u8868\u5355\u6309\u94AE'\" [id]=\"'buttonConfig'\">\r\n    <ng-template farrisTabsExtend>\r\n      <farris-button [type]=\"'link'\" (click)=\"btnBatchOperate('enable')\">\r\n        \u53EF\u7528\r\n      </farris-button>\r\n      <farris-button [type]=\"'link'\" (click)=\"btnBatchOperate('disabled')\">\r\n        \u7981\u7528\r\n      </farris-button>\r\n      <farris-button [type]=\"'link'\" (click)=\"btnBatchOperate('hidden')\">\r\n        \u9690\u85CF\r\n      </farris-button>\r\n      <farris-button [type]=\"'link'\" (click)=\"btnBatchReset()\">\r\n        \u91CD\u7F6E\r\n      </farris-button>\r\n    </ng-template>\r\n    <ng-template #content>\r\n      <div class=\"f-utils-fill-flex-column\" style=\"background: #FFF;\">\r\n        <farris-datagrid class=\"f-component-grid f-utils-fill\" [columns]=\"buttonCols\" [data]=\"buttonConfigs\" #btnGrid\r\n          [idField]=\"'id'\" [showLineNumber]=\"false\" [fitColumns]=\"true\" [striped]=\"true\"\r\n          [virtualized]=\"true\" [pagination]=\"false\" [useThemes]=\"false\" [fit]=\"true\" [showAllCheckbox]=\"true\" \r\n          [showCheckbox]=\"true\" [multiSelect]=\"true\">\r\n        </farris-datagrid>\r\n      </div>\r\n    </ng-template>\r\n  </farris-tab>\r\n  <farris-tab [title]=\"'\u8868\u5355\u5B57\u6BB5'\" [id]=\"'fieldConfig'\">\r\n    <ng-template farrisTabsExtend>\r\n      <farris-button [type]=\"'link'\" (click)=\"fieldBatchOperate('editable')\">\r\n        \u53EF\u5199\r\n      </farris-button>\r\n      <farris-button [type]=\"'link'\" (click)=\"fieldBatchOperate('readonly')\">\r\n        \u53EA\u8BFB\r\n      </farris-button>\r\n      <farris-button [type]=\"'link'\" (click)=\"fieldBatchOperate('hidden')\">\r\n        \u9690\u85CF\r\n      </farris-button>\r\n      <farris-button [type]=\"'link'\" (click)=\"fieldBatchOperate('required')\">\r\n        \u5FC5\u586B\r\n      </farris-button>\r\n      <farris-button [type]=\"'link'\" (click)=\"fieldBatchReset()\">\r\n        \u91CD\u7F6E\r\n      </farris-button>\r\n    </ng-template>\r\n    <ng-template #content>\r\n      <div class=\"f-utils-fill-flex-column\" style=\"background: #FFF;\">\r\n        <!-- <farris-datagrid class=\"f-component-grid f-utils-fill\" [columns]=\"fieldCols\" [data]=\"fieldConfigs\" #fieldGrid\r\n          [idField]=\"'id'\" [showLineNumber]=\"false\" [fitColumns]=\"true\" [striped]=\"true\"\r\n          [virtualized]=\"true\" [pagination]=\"false\" [useThemes]=\"false\" [fit]=\"true\" [showAllCheckbox]=\"true\" \r\n          [showCheckbox]=\"true\" [multiSelect]=\"true\">\r\n        </farris-datagrid> -->\r\n        <farris-treetable #fieldTree [columns]=\"fieldCols\" \r\n          [showBorder]=\"false\" [showHeader]=\"true\" [data]=\"fieldConfigs\" [fit]=\"true\" [fitColumns]=\"true\"\r\n          [idField]=\"'id'\" [singleSelect]=\"false\" [showCheckbox]=\"true\" \r\n          [showCheckAll]=\"true\" [striped]=\"true\" [fixedHeader]=\"true\">\r\n        </farris-treetable>\r\n      </div>\r\n    </ng-template>\r\n  </farris-tab>\r\n  <farris-tab [title]=\"'\u8868\u5355\u4E8B\u4EF6'\" [id]=\"'operationConfig'\" [show]=\"showMethodTab\">\r\n    <ng-template farrisTabsExtend>\r\n      <farris-button [type]=\"'link'\" (click)=\"operationConfig.add()\">\r\n        \u65B0\u589E\r\n      </farris-button>\r\n      <farris-button [type]=\"'link'\" (click)=\"operationConfig.delete()\">\r\n        \u5220\u9664\r\n      </farris-button>\r\n    </ng-template>\r\n    <ng-template #content>\r\n      <lib-form-operation-config \r\n        [formFormatId]=\"formFormatId\" \r\n        [formFormatConfigId]=\"config.id\" \r\n        [operations]=\"config.formMethodConfigs\"\r\n        class=\"h-100\"></lib-form-operation-config>\r\n    </ng-template>\r\n  </farris-tab>\r\n</farris-tabs>\r\n<!--Tab\u533A\u57DF-->  \r\n      \r\n  <!-- </section>\r\n</div> -->\r\n\r\n<ng-template #btnEnable let-ctx>\r\n  <farris-switch [(ngModel)]=\"ctx.rowData.enable\" (valueChange)=\"btnConfigChange($event, ctx.field, ctx.rowData.id)\"></farris-switch>\r\n</ng-template>\r\n<ng-template #btnDisabled let-ctx>\r\n  <farris-switch [(ngModel)]=\"ctx.rowData.disabled\" (valueChange)=\"btnConfigChange($event, ctx.field, ctx.rowData.id)\"></farris-switch>\r\n</ng-template>\r\n<ng-template #btnHidden let-ctx>\r\n  <farris-switch [(ngModel)]=\"ctx.rowData.hidden\" (valueChange)=\"btnConfigChange($event, ctx.field, ctx.rowData.id)\"></farris-switch>\r\n</ng-template>\r\n<ng-template #fieldEditable let-ctx>\r\n  <farris-switch *ngIf=\"ctx.node.leaf\" size=\"small\" [(ngModel)]=\"ctx.node.data.editable\"\r\n  (valueChange)=\"fieldConfigChange($event, ctx.column.field, ctx.node.data.id)\">\r\n  </farris-switch>\r\n</ng-template>\r\n<ng-template #fieldReadonly let-ctx>\r\n  <farris-switch *ngIf=\"ctx.node.leaf\" size=\"small\" [(ngModel)]=\"ctx.node.data.readonly\"\r\n    (valueChange)=\"fieldConfigChange($event, ctx.column.field, ctx.node.data.id)\">\r\n  </farris-switch>\r\n</ng-template>\r\n<ng-template #fieldHidden let-ctx>\r\n  <farris-switch *ngIf=\"ctx.node.leaf\" size=\"small\" [(ngModel)]=\"ctx.node.data.hidden\"\r\n    (valueChange)=\"fieldConfigChange($event, ctx.column.field, ctx.node.data.id)\">\r\n  </farris-switch>\r\n</ng-template>\r\n<ng-template #fieldRequired let-ctx>\r\n  <farris-switch *ngIf=\"ctx.node.leaf\" size=\"small\" [(ngModel)]=\"ctx.node.data.required\"\r\n    (valueChange)=\"fieldConfigChange($event, ctx.column.field, ctx.node.data.id)\">\r\n  </farris-switch>\r\n</ng-template>\r\n\r\n\r\n",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    FormFormatConfigComponent.ctorParameters = function () { return [
        { type: HttpService },
        { type: MessagerService },
        { type: NotifyService }
    ]; };
    FormFormatConfigComponent.propDecorators = {
        btnEnable: [{ type: ViewChild, args: ['btnEnable',] }],
        btnDisabled: [{ type: ViewChild, args: ['btnDisabled',] }],
        btnHidden: [{ type: ViewChild, args: ['btnHidden',] }],
        fieldEditable: [{ type: ViewChild, args: ['fieldEditable',] }],
        fieldReadonly: [{ type: ViewChild, args: ['fieldReadonly',] }],
        fieldHidden: [{ type: ViewChild, args: ['fieldHidden',] }],
        fieldRequired: [{ type: ViewChild, args: ['fieldRequired',] }],
        btnGrid: [{ type: ViewChild, args: ['btnGrid',] }],
        fieldTree: [{ type: ViewChild, args: ['fieldTree',] }],
        operationConfig: [{ type: ViewChild, args: [FormOperationConfigComponent,] }],
        showMethodTab: [{ type: Input }]
    };
    return FormFormatConfigComponent;
}());
export { FormFormatConfigComponent };
if (false) {
    /** @type {?} */
    FormFormatConfigComponent.prototype.btnEnable;
    /** @type {?} */
    FormFormatConfigComponent.prototype.btnDisabled;
    /** @type {?} */
    FormFormatConfigComponent.prototype.btnHidden;
    /** @type {?} */
    FormFormatConfigComponent.prototype.fieldEditable;
    /** @type {?} */
    FormFormatConfigComponent.prototype.fieldReadonly;
    /** @type {?} */
    FormFormatConfigComponent.prototype.fieldHidden;
    /** @type {?} */
    FormFormatConfigComponent.prototype.fieldRequired;
    /** @type {?} */
    FormFormatConfigComponent.prototype.btnGrid;
    /** @type {?} */
    FormFormatConfigComponent.prototype.fieldTree;
    /** @type {?} */
    FormFormatConfigComponent.prototype.operationConfig;
    /** @type {?} */
    FormFormatConfigComponent.prototype.config;
    /** @type {?} */
    FormFormatConfigComponent.prototype.formFormat;
    /** @type {?} */
    FormFormatConfigComponent.prototype.state;
    /** @type {?} */
    FormFormatConfigComponent.prototype.showMethodTab;
    /**
     * @type {?}
     * @private
     */
    FormFormatConfigComponent.prototype._formFormatId;
    /**
     * @type {?}
     * @private
     */
    FormFormatConfigComponent.prototype._formatConfigId;
    /** @type {?} */
    FormFormatConfigComponent.prototype.buttonCols;
    /** @type {?} */
    FormFormatConfigComponent.prototype.buttonConfigs;
    /** @type {?} */
    FormFormatConfigComponent.prototype.fieldCols;
    /** @type {?} */
    FormFormatConfigComponent.prototype.fieldConfigs;
    /** @type {?} */
    FormFormatConfigComponent.prototype.formatFieldList;
    /**
     * @type {?}
     * @private
     */
    FormFormatConfigComponent.prototype.http;
    /**
     * @type {?}
     * @private
     */
    FormFormatConfigComponent.prototype.message;
    /**
     * @type {?}
     * @private
     */
    FormFormatConfigComponent.prototype.notify;
}
//# sourceMappingURL=data:application/json;base64,