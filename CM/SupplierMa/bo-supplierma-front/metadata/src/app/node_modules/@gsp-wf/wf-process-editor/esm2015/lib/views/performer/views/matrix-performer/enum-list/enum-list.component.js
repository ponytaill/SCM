/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, HostBinding, ViewChild, TemplateRef, Injector } from '@angular/core';
import { DatagridComponent } from '@farris/ui-datagrid';
import { Subject } from 'rxjs/Subject';
import { MessagerService } from '@farris/ui-messager';
export class EnumListComponent {
    /**
     * @param {?} messageService
     * @param {?} injector
     */
    constructor(messageService, injector) {
        this.messageService = messageService;
        this.injector = injector;
        this.cls = 'farris-main-area flex-column';
        this.columns = [
            { field: 'key', width: 100, title: '键' },
            { field: 'value', width: 100, title: '值' }
        ];
        this.confirm = new Subject();
        this.closeModalEmitter = new Subject();
        /**
         * 显示值
         */
        this.data = new Array();
        this.selectedIds = new Array();
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * 加载显示数据
     * @param {?} enumValues
     * @return {?}
     */
    load(enumValues) {
        this.data = [...enumValues];
    }
    /**
     * 确认
     * @return {?}
     */
    onConfirm() {
        if (this.selectedIds.length === 0) {
            this.messageService.warning('尚未选中枚举值');
        }
        /** @type {?} */
        const enumValues = this.data.filter((/**
         * @param {?} d
         * @return {?}
         */
        d => this.selectedIds.findIndex((/**
         * @param {?} id
         * @return {?}
         */
        id => id === d.key)) > -1));
        this.confirm.next(enumValues);
        this.closeModalEmitter.next();
    }
    /**
     * 取消
     * @return {?}
     */
    cancel() {
        this.closeModalEmitter.next();
    }
}
EnumListComponent.decorators = [
    { type: Component, args: [{
                selector: 'app-enum-list',
                template: "<ng-template #buttons>\r\n  <button class=\"btn btn-primary\" (click)=\"onConfirm()\">\u786E\u5B9A</button>\r\n  <button class=\"btn btn-secondary\" (click)=\"cancel()\">\u53D6\u6D88</button>\r\n</ng-template>\r\n\r\n<div class=\"f-page\">\r\n  <div class=\"f-page-main f-utils-fill-flex-column h-100\">\r\n    <div class=\"f-utils-fill-flex-column farris-overflow-y-auto h-100\">\r\n      <farris-datagrid [data]=\"data\" [columns]=\"columns\" #dg=\"datagrid\" [fit]=\"true\"\r\n                       [idField]=\"'key'\" [fitColumns]=\"true\" [showLineNumber]=\"true\" [(checkValues)]=\"selectedIds\"\r\n                       [showAllCheckbox]=\"true\" [showCheckbox]=\"true\" [multiSelect]=\"false\" [checkOnSelect]=\"true\" [selectOnCheck]=\"true\"\r\n                       [lineNumberTitle]=\"'\u5E8F\u53F7'\" [lineNumberWidth]=\"50\" [striped]=\"true\" [virtualized]=\"true\" [pagination]=\"false\">\r\n      </farris-datagrid>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n",
                styles: [""]
            }] }
];
/** @nocollapse */
EnumListComponent.ctorParameters = () => [
    { type: MessagerService },
    { type: Injector }
];
EnumListComponent.propDecorators = {
    cls: [{ type: HostBinding, args: ['class',] }],
    dg: [{ type: ViewChild, args: ['dg',] }],
    btnRef: [{ type: ViewChild, args: ['buttons',] }]
};
if (false) {
    /** @type {?} */
    EnumListComponent.prototype.cls;
    /** @type {?} */
    EnumListComponent.prototype.columns;
    /** @type {?} */
    EnumListComponent.prototype.dg;
    /** @type {?} */
    EnumListComponent.prototype.btnRef;
    /** @type {?} */
    EnumListComponent.prototype.confirm;
    /** @type {?} */
    EnumListComponent.prototype.closeModalEmitter;
    /**
     * 显示值
     * @type {?}
     */
    EnumListComponent.prototype.data;
    /** @type {?} */
    EnumListComponent.prototype.selectedIds;
    /**
     * @type {?}
     * @private
     */
    EnumListComponent.prototype.messageService;
    /**
     * @type {?}
     * @private
     */
    EnumListComponent.prototype.injector;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW51bS1saXN0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc3Atd2Yvd2YtcHJvY2Vzcy1lZGl0b3IvIiwic291cmNlcyI6WyJsaWIvdmlld3MvcGVyZm9ybWVyL3ZpZXdzL21hdHJpeC1wZXJmb3JtZXIvZW51bS1saXN0L2VudW0tbGlzdC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsV0FBVyxFQUFFLFNBQVMsRUFBRSxXQUFXLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2pHLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3hELE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFDdkMsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBT3RELE1BQU0sT0FBTyxpQkFBaUI7Ozs7O0lBcUI1QixZQUNVLGNBQStCLEVBQy9CLFFBQWtCO1FBRGxCLG1CQUFjLEdBQWQsY0FBYyxDQUFpQjtRQUMvQixhQUFRLEdBQVIsUUFBUSxDQUFVO1FBcEI1QixRQUFHLEdBQUcsOEJBQThCLENBQUM7UUFFckMsWUFBTyxHQUFHO1lBQ1IsRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxHQUFHLEVBQUUsS0FBSyxFQUFFLEdBQUcsRUFBRTtZQUN4QyxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFFLEdBQUcsRUFBRSxLQUFLLEVBQUUsR0FBRyxFQUFDO1NBQUMsQ0FBQztRQUk3QyxZQUFPLEdBQUcsSUFBSSxPQUFPLEVBQU8sQ0FBQztRQUM3QixzQkFBaUIsR0FBRyxJQUFJLE9BQU8sRUFBTyxDQUFDOzs7O1FBS3ZDLFNBQUksR0FBRyxJQUFJLEtBQUssRUFBRSxDQUFDO1FBRW5CLGdCQUFXLEdBQUcsSUFBSSxLQUFLLEVBQUUsQ0FBQztJQUt0QixDQUFDOzs7O0lBRUwsUUFBUTtJQUVSLENBQUM7Ozs7OztJQUtELElBQUksQ0FBQyxVQUFVO1FBQ2IsSUFBSSxDQUFDLElBQUksR0FBRyxDQUFDLEdBQUcsVUFBVSxDQUFDLENBQUM7SUFDOUIsQ0FBQzs7Ozs7SUFLRCxTQUFTO1FBQ1AsSUFBSSxJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUc7WUFDbEMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUM7U0FDeEM7O2NBQ0ssVUFBVSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTTs7OztRQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxTQUFTOzs7O1FBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFDLEdBQUcsRUFBQyxHQUFHLENBQUMsQ0FBQyxFQUFDO1FBQzdGLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQzlCLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUNoQyxDQUFDOzs7OztJQUtELE1BQU07UUFDSixJQUFJLENBQUMsaUJBQWlCLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDaEMsQ0FBQzs7O1lBM0RGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsZUFBZTtnQkFDekIsKzlCQUF5Qzs7YUFFMUM7Ozs7WUFOUSxlQUFlO1lBSHlDLFFBQVE7OztrQkFZdEUsV0FBVyxTQUFDLE9BQU87aUJBTW5CLFNBQVMsU0FBQyxJQUFJO3FCQUNkLFNBQVMsU0FBQyxTQUFTOzs7O0lBUHBCLGdDQUNxQzs7SUFFckMsb0NBRTZDOztJQUM3QywrQkFBdUM7O0lBQ3ZDLG1DQUErQzs7SUFFL0Msb0NBQTZCOztJQUM3Qiw4Q0FBdUM7Ozs7O0lBS3ZDLGlDQUFtQjs7SUFFbkIsd0NBQTBCOzs7OztJQUd4QiwyQ0FBdUM7Ozs7O0lBQ3ZDLHFDQUEwQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBIb3N0QmluZGluZywgVmlld0NoaWxkLCBUZW1wbGF0ZVJlZiwgSW5qZWN0b3IgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgRGF0YWdyaWRDb21wb25lbnQgfSBmcm9tICdAZmFycmlzL3VpLWRhdGFncmlkJztcclxuaW1wb3J0IHsgU3ViamVjdCB9IGZyb20gJ3J4anMvU3ViamVjdCc7XHJcbmltcG9ydCB7IE1lc3NhZ2VyU2VydmljZSB9IGZyb20gJ0BmYXJyaXMvdWktbWVzc2FnZXInO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhcHAtZW51bS1saXN0JyxcclxuICB0ZW1wbGF0ZVVybDogJy4vZW51bS1saXN0LmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9lbnVtLWxpc3QuY29tcG9uZW50LnNjc3MnXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgRW51bUxpc3RDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG5cclxuICBASG9zdEJpbmRpbmcoJ2NsYXNzJylcclxuICBjbHMgPSAnZmFycmlzLW1haW4tYXJlYSBmbGV4LWNvbHVtbic7XHJcblxyXG4gIGNvbHVtbnMgPSBbXHJcbiAgICB7IGZpZWxkOiAna2V5Jywgd2lkdGg6IDEwMCwgdGl0bGU6ICfplK4nIH0sXHJcbiAgICB7IGZpZWxkOiAndmFsdWUnLCB3aWR0aDogMTAwLCB0aXRsZTogJ+WAvCd9XTtcclxuICBAVmlld0NoaWxkKCdkZycpIGRnOiBEYXRhZ3JpZENvbXBvbmVudDtcclxuICBAVmlld0NoaWxkKCdidXR0b25zJykgYnRuUmVmOiBUZW1wbGF0ZVJlZjxhbnk+O1xyXG5cclxuICBjb25maXJtID0gbmV3IFN1YmplY3Q8YW55PigpO1xyXG4gIGNsb3NlTW9kYWxFbWl0dGVyID0gbmV3IFN1YmplY3Q8YW55PigpO1xyXG5cclxuICAvKipcclxuICAgKiDmmL7npLrlgLxcclxuICAgKi9cclxuICBkYXRhID0gbmV3IEFycmF5KCk7XHJcblxyXG4gIHNlbGVjdGVkSWRzID0gbmV3IEFycmF5KCk7XHJcblxyXG4gIGNvbnN0cnVjdG9yKFxyXG4gICAgcHJpdmF0ZSBtZXNzYWdlU2VydmljZTogTWVzc2FnZXJTZXJ2aWNlLFxyXG4gICAgcHJpdmF0ZSBpbmplY3RvcjogSW5qZWN0b3JcclxuICApIHsgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuXHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDliqDovb3mmL7npLrmlbDmja5cclxuICAgKi9cclxuICBsb2FkKGVudW1WYWx1ZXMpIHtcclxuICAgIHRoaXMuZGF0YSA9IFsuLi5lbnVtVmFsdWVzXTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOehruiupFxyXG4gICAqL1xyXG4gIG9uQ29uZmlybSgpOiB2b2lkIHtcclxuICAgIGlmICh0aGlzLnNlbGVjdGVkSWRzLmxlbmd0aCA9PT0gMCApIHtcclxuICAgICAgdGhpcy5tZXNzYWdlU2VydmljZS53YXJuaW5nKCflsJrmnKrpgInkuK3mnprkuL7lgLwnKTtcclxuICAgIH1cclxuICAgIGNvbnN0IGVudW1WYWx1ZXMgPSB0aGlzLmRhdGEuZmlsdGVyKGQgPT4gdGhpcy5zZWxlY3RlZElkcy5maW5kSW5kZXgoaWQgPT4gaWQgPT09IGQua2V5KSA+IC0xKTtcclxuICAgIHRoaXMuY29uZmlybS5uZXh0KGVudW1WYWx1ZXMpO1xyXG4gICAgdGhpcy5jbG9zZU1vZGFsRW1pdHRlci5uZXh0KCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDlj5bmtohcclxuICAgKi9cclxuICBjYW5jZWwoKTogdm9pZCB7XHJcbiAgICB0aGlzLmNsb3NlTW9kYWxFbWl0dGVyLm5leHQoKTtcclxuICB9XHJcblxyXG59XHJcbiJdfQ==