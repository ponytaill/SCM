/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @enum {string} */
const ResourceKeys = {
    // 发出动作
    new: 'new',
    open: 'open',
    updateProperty: 'updateProperty',
    refresh: 'refresh',
    loadBizActivity: 'loadBizActivity',
    // 接受消息
    wf_initProperty: 'initProperty',
    wf_save: 'save',
    wf_saveAs: 'saveAs',
    wf_sync: 'wf_sync',
    wf_note: 'wf_note',
    wf_deploy: 'release',
    wf_closeDesigner: 'closeDesigner',
    getActivities: 'getActivities',
    getEndEvents: 'getEndEvents',
    wf_showTip: 'showTip',
    /**
     * 属性名称
     */
    EntryForm: 'EntryForm',
    ConditionExpression: 'ConditionExpression',
    ParticipantSchemes: 'ParticipantSchemes',
    ApprovalItems: 'ApprovalItems',
    AssignStrategy: 'AssignStrategy',
    OperatorConfig: 'OperatorConfig',
    CompleteStrategy: 'CompleteStrategy',
    SignRule: 'SignRule',
    Retrievable: 'Retrievable',
    AddSignFrontAble: 'AddSignFrontAble',
    AddSignBehindAble: 'AddSignBehindAble',
    NotifyAble: 'NotifyAble',
    DisplayTerminal: 'DisplayTerminal',
    ExecuteForms: 'ExecuteForms',
    sendBackedTask: 'sendBackedTask',
    SelectTargetAble: 'SelectTargetAble',
    JumpScope: 'JumpScope',
    BackWardRule: 'BackWardRule',
    Tools: 'Tools',
    SelectBranch: 'SelectBranch',
    Default: 'Default',
    allowPreAssign: 'allowPreAssign',
    startMode: 'startMode',
    transferScope: 'transferScope',
    eventDefinitions: 'EventDefinitions',
    urgeHandleRule: 'urgeHandleRule',
    // 子流程
    callActivitySubProcess: 'callActivitySubProcess',
    wf_Component: 'wf_Component',
    wf_ExecuteForms: 'wf_ExecuteForms',
    wf_ExecuteForms_PC: 'wf_ExecuteForms_PC',
    wf_ExecuteForms_Mobile: 'wf_ExecuteForms_Mobile',
    wf_TitleExpression: 'wf_TitleExpression',
    wf_CustomizeAction: 'wf_CustomizeAction',
    timeLimitControl: 'timeLimitControl',
    anonymousSet: 'anonymousSet',
    processVariables: 'processVariables',
    variableSettings: 'variableSettings',
    messageNotice: 'messageNotice',
    approvalPivotConfig: 'approvalPivotConfig',
    // state
    complete: 'complete',
    // 单据流编号
    aifProcessCode: 'aifProcessCode',
    // isRelied
    isRelied: 'isRelied',
};
export { ResourceKeys };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVzb3VyY2VLZXlzLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzcC13Zi93Zi1wcm9jZXNzLWVkaXRvci8iLCJzb3VyY2VzIjpbImxpYi9tb2RlbC9yZXNvdXJjZUtleXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0lBQ0ksT0FBTztJQUNQLEtBQU0sS0FBSztJQUNYLE1BQU8sTUFBTTtJQUNiLGdCQUFpQixnQkFBZ0I7SUFDakMsU0FBVSxTQUFTO0lBQ25CLGlCQUFrQixpQkFBaUI7SUFFbkMsT0FBTztJQUNQLGlCQUFrQixjQUFjO0lBQ2hDLFNBQVUsTUFBTTtJQUNoQixXQUFZLFFBQVE7SUFDcEIsU0FBVSxTQUFTO0lBQ25CLFNBQVUsU0FBUztJQUNuQixXQUFZLFNBQVM7SUFDckIsa0JBQW1CLGVBQWU7SUFDbEMsZUFBZ0IsZUFBZTtJQUMvQixjQUFlLGNBQWM7SUFDN0IsWUFBYSxTQUFTO0lBQ3RCOztPQUVHO0lBQ0gsV0FBWSxXQUFXO0lBQ3ZCLHFCQUFzQixxQkFBcUI7SUFDM0Msb0JBQXFCLG9CQUFvQjtJQUN6QyxlQUFnQixlQUFlO0lBQy9CLGdCQUFpQixnQkFBZ0I7SUFDakMsZ0JBQWlCLGdCQUFnQjtJQUNqQyxrQkFBbUIsa0JBQWtCO0lBQ3JDLFVBQVcsVUFBVTtJQUNyQixhQUFjLGFBQWE7SUFDM0Isa0JBQW1CLGtCQUFrQjtJQUNyQyxtQkFBb0IsbUJBQW1CO0lBQ3ZDLFlBQWEsWUFBWTtJQUN6QixpQkFBa0IsaUJBQWlCO0lBQ25DLGNBQWUsY0FBYztJQUM3QixnQkFBaUIsZ0JBQWdCO0lBQ2pDLGtCQUFtQixrQkFBa0I7SUFDckMsV0FBWSxXQUFXO0lBQ3ZCLGNBQWUsY0FBYztJQUM3QixPQUFRLE9BQU87SUFDZixjQUFlLGNBQWM7SUFDN0IsU0FBVSxTQUFTO0lBQ25CLGdCQUFpQixnQkFBZ0I7SUFDakMsV0FBWSxXQUFXO0lBQ3ZCLGVBQWdCLGVBQWU7SUFDL0Isa0JBQW1CLGtCQUFrQjtJQUNyQyxnQkFBaUIsZ0JBQWdCO0lBRWpDLE1BQU07SUFDTix3QkFBeUIsd0JBQXdCO0lBRWpELGNBQWUsY0FBYztJQUM3QixpQkFBa0IsaUJBQWlCO0lBQ25DLG9CQUFxQixvQkFBb0I7SUFDekMsd0JBQXlCLHdCQUF3QjtJQUNqRCxvQkFBcUIsb0JBQW9CO0lBQ3pDLG9CQUFxQixvQkFBb0I7SUFDekMsa0JBQW1CLGtCQUFrQjtJQUNyQyxjQUFlLGNBQWM7SUFDN0Isa0JBQW1CLGtCQUFrQjtJQUNyQyxrQkFBbUIsa0JBQWtCO0lBQ3JDLGVBQWdCLGVBQWU7SUFDL0IscUJBQXNCLHFCQUFxQjtJQUMzQyxRQUFRO0lBQ1IsVUFBVyxVQUFVO0lBQ3JCLFFBQVE7SUFDUixnQkFBaUIsZ0JBQWdCO0lBQ2pDLFdBQVc7SUFDWCxVQUFXLFVBQVUiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZW51bSBSZXNvdXJjZUtleXMge1xyXG4gICAgLy8g5Y+R5Ye65Yqo5L2cXHJcbiAgICBuZXcgPSAnbmV3JywgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyDmlrDlu7rmtYHnqItcclxuICAgIG9wZW4gPSAnb3BlbicsICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIOaJk+W8gOa1geeoi1xyXG4gICAgdXBkYXRlUHJvcGVydHkgPSAndXBkYXRlUHJvcGVydHknLCAgICAgICAgICAgICAgLy8g5pu05paw5bGe5oCnXHJcbiAgICByZWZyZXNoID0gJ3JlZnJlc2gnLCAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyDliLfmlrDlsZ7mgKfmoYZcclxuICAgIGxvYWRCaXpBY3Rpdml0eSA9ICdsb2FkQml6QWN0aXZpdHknLCAgICAgICAgICAgIC8vIOWfuuS6jua1geeoi+WIhuexu+WKoOi9veS4muWKoea0u+WKqFxyXG5cclxuICAgIC8vIOaOpeWPl+a2iOaBr1xyXG4gICAgd2ZfaW5pdFByb3BlcnR5ID0gJ2luaXRQcm9wZXJ0eScsICAgICAgICAgICAgICAgLy8g5Yid5aeL5bGe5oCn5qGGXHJcbiAgICB3Zl9zYXZlID0gJ3NhdmUnLCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyDkv53lrZjmtYHnqItcclxuICAgIHdmX3NhdmVBcyA9ICdzYXZlQXMnLCAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIOWPpuWtmOS4ulxyXG4gICAgd2Zfc3luYyA9ICd3Zl9zeW5jJywgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8g5ZCM5q2l5rWB56iLXHJcbiAgICB3Zl9ub3RlID0gJ3dmX25vdGUnLCAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyDorrDlvZXlj5jmm7RcclxuICAgIHdmX2RlcGxveSA9ICdyZWxlYXNlJywgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIOWPkeW4g+a1geeoi1xyXG4gICAgd2ZfY2xvc2VEZXNpZ25lciA9ICdjbG9zZURlc2lnbmVyJywgICAgICAgICAgICAgLy8g5YWz6Zet5rWB56iL6K6+6K6h5ZmoXHJcbiAgICBnZXRBY3Rpdml0aWVzID0gJ2dldEFjdGl2aXRpZXMnLCAgICAgICAgICAgICAgICAvLyDojrflj5bmtLvliqjoioLngrlcclxuICAgIGdldEVuZEV2ZW50cyA9ICdnZXRFbmRFdmVudHMnLCAgICAgICAgICAgICAgICAgIC8vICDojrflj5bnu5PmnZ/oioLngrlcclxuICAgIHdmX3Nob3dUaXAgPSAnc2hvd1RpcCcsXHJcbiAgICAvKipcclxuICAgICAqIOWxnuaAp+WQjeensFxyXG4gICAgICovXHJcbiAgICBFbnRyeUZvcm0gPSAnRW50cnlGb3JtJywgICAgICAgICAgICAgICAgICAgICAgICAvLyDmtYHnqIvliIbnsbtcclxuICAgIENvbmRpdGlvbkV4cHJlc3Npb24gPSAnQ29uZGl0aW9uRXhwcmVzc2lvbicsICAgIC8vIOadoeS7tuihqOi+vuW8j1xyXG4gICAgUGFydGljaXBhbnRTY2hlbWVzID0gJ1BhcnRpY2lwYW50U2NoZW1lcycsICAgICAgLy8g5Y+C5LiO6ICFXHJcbiAgICBBcHByb3ZhbEl0ZW1zID0gJ0FwcHJvdmFsSXRlbXMnLCAgICAgICAgICAgICAgICAvLyDlrqHmibnpoblcclxuICAgIEFzc2lnblN0cmF0ZWd5ID0gJ0Fzc2lnblN0cmF0ZWd5JywgICAgICAgICAgICAgIC8vIOWIhumFjeetlueVpVxyXG4gICAgT3BlcmF0b3JDb25maWcgPSAnT3BlcmF0b3JDb25maWcnLCAgICAgICAgICAgICAgLy8g5YiG6YWN562W55Wl6YWN572uXHJcbiAgICBDb21wbGV0ZVN0cmF0ZWd5ID0gJ0NvbXBsZXRlU3RyYXRlZ3knLCAgICAgICAgICAvLyDlrozmiJDnrZbnlaVcclxuICAgIFNpZ25SdWxlID0gJ1NpZ25SdWxlJywgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIOS8muetvuinhOWImVxyXG4gICAgUmV0cmlldmFibGUgPSAnUmV0cmlldmFibGUnLCAgICAgICAgICAgICAgICAgICAgLy8g5YWB6K645Y+W5ZueXHJcbiAgICBBZGRTaWduRnJvbnRBYmxlID0gJ0FkZFNpZ25Gcm9udEFibGUnLCAgICAgICAgICAvLyDlhYHorrjlvoHor6JcclxuICAgIEFkZFNpZ25CZWhpbmRBYmxlID0gJ0FkZFNpZ25CZWhpbmRBYmxlJywgICAgICAgIC8vIOWFgeiuuOWKoOetvlxyXG4gICAgTm90aWZ5QWJsZSA9ICdOb3RpZnlBYmxlJywgICAgICAgICAgICAgICAgICAgICAgLy8g5YWB6K6455+l5LyaXHJcbiAgICBEaXNwbGF5VGVybWluYWwgPSAnRGlzcGxheVRlcm1pbmFsJywgICAgICAgICAgICAvLyDmmL7npLrnu4jnq69cclxuICAgIEV4ZWN1dGVGb3JtcyA9ICdFeGVjdXRlRm9ybXMnLFxyXG4gICAgc2VuZEJhY2tlZFRhc2sgPSAnc2VuZEJhY2tlZFRhc2snLFxyXG4gICAgU2VsZWN0VGFyZ2V0QWJsZSA9ICdTZWxlY3RUYXJnZXRBYmxlJywgICAgICAgICAgLy8g5YWB6K646LCD5pW0XHJcbiAgICBKdW1wU2NvcGUgPSAnSnVtcFNjb3BlJywgICAgICAgICAgICAgICAgICAgICAgICAvLyDot7Povazop4TliJlcclxuICAgIEJhY2tXYXJkUnVsZSA9ICdCYWNrV2FyZFJ1bGUnLCAgICAgICAgICAgICAgICAgIC8vIOmps+WbnuinhOWImVxyXG4gICAgVG9vbHMgPSAnVG9vbHMnLFxyXG4gICAgU2VsZWN0QnJhbmNoID0gJ1NlbGVjdEJyYW5jaCcsXHJcbiAgICBEZWZhdWx0ID0gJ0RlZmF1bHQnLCAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyDpu5jorqTliIbmlK9cclxuICAgIGFsbG93UHJlQXNzaWduID0gJ2FsbG93UHJlQXNzaWduJyxcclxuICAgIHN0YXJ0TW9kZSA9ICdzdGFydE1vZGUnLFxyXG4gICAgdHJhbnNmZXJTY29wZSA9ICd0cmFuc2ZlclNjb3BlJywgICAgICAgICAgICAgICAgLy8g56e75Lqk6IyD5Zu0XHJcbiAgICBldmVudERlZmluaXRpb25zID0gJ0V2ZW50RGVmaW5pdGlvbnMnLFxyXG4gICAgdXJnZUhhbmRsZVJ1bGUgPSAndXJnZUhhbmRsZVJ1bGUnLFxyXG5cclxuICAgIC8vIOWtkOa1geeoi1xyXG4gICAgY2FsbEFjdGl2aXR5U3ViUHJvY2VzcyA9ICdjYWxsQWN0aXZpdHlTdWJQcm9jZXNzJyxcclxuXHJcbiAgICB3Zl9Db21wb25lbnQgPSAnd2ZfQ29tcG9uZW50JyxcclxuICAgIHdmX0V4ZWN1dGVGb3JtcyA9ICd3Zl9FeGVjdXRlRm9ybXMnLFxyXG4gICAgd2ZfRXhlY3V0ZUZvcm1zX1BDID0gJ3dmX0V4ZWN1dGVGb3Jtc19QQycsXHJcbiAgICB3Zl9FeGVjdXRlRm9ybXNfTW9iaWxlID0gJ3dmX0V4ZWN1dGVGb3Jtc19Nb2JpbGUnLFxyXG4gICAgd2ZfVGl0bGVFeHByZXNzaW9uID0gJ3dmX1RpdGxlRXhwcmVzc2lvbicsXHJcbiAgICB3Zl9DdXN0b21pemVBY3Rpb24gPSAnd2ZfQ3VzdG9taXplQWN0aW9uJyxcclxuICAgIHRpbWVMaW1pdENvbnRyb2wgPSAndGltZUxpbWl0Q29udHJvbCcsXHJcbiAgICBhbm9ueW1vdXNTZXQgPSAnYW5vbnltb3VzU2V0JyxcclxuICAgIHByb2Nlc3NWYXJpYWJsZXMgPSAncHJvY2Vzc1ZhcmlhYmxlcycsXHJcbiAgICB2YXJpYWJsZVNldHRpbmdzID0gJ3ZhcmlhYmxlU2V0dGluZ3MnLFxyXG4gICAgbWVzc2FnZU5vdGljZSA9ICdtZXNzYWdlTm90aWNlJyxcclxuICAgIGFwcHJvdmFsUGl2b3RDb25maWcgPSAnYXBwcm92YWxQaXZvdENvbmZpZycsXHJcbiAgICAvLyBzdGF0ZVxyXG4gICAgY29tcGxldGUgPSAnY29tcGxldGUnLFxyXG4gICAgLy8g5Y2V5o2u5rWB57yW5Y+3XHJcbiAgICBhaWZQcm9jZXNzQ29kZSA9ICdhaWZQcm9jZXNzQ29kZScsXHJcbiAgICAvLyBpc1JlbGllZFxyXG4gICAgaXNSZWxpZWQgPSAnaXNSZWxpZWQnLFxyXG59XHJcbiJdfQ==