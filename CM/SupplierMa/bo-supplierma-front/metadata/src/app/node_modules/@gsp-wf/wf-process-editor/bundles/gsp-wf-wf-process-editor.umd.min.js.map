{"version":3,"sources":["ng://@gsp-wf/wf-process-editor/lib/wf-process-editor.service.ts","ng://@gsp-wf/wf-process-editor/lib/model/process-time.ts","node_modules/tslib/tslib.es6.js","ng://@gsp-wf/wf-process-editor/lib/domain/entities/flowform-info.ts","ng://@gsp-wf/wf-process-editor/lib/app/process-designer.uistate.ts","ng://@gsp-wf/wf-process-editor/lib/model/resourceKeys.ts","ng://@gsp-wf/wf-process-editor/lib/domain/process-de-util.ts","ng://@gsp-wf/wf-process-editor/lib/domain/process-designer.dataservice.ts","ng://@gsp-wf/wf-process-editor/lib/model/process-clrtypeId.ts","ng://@gsp-wf/wf-process-editor/lib/views/entryForm/entry-form-editor.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/activity-component/activity-component.uistate.ts","ng://@gsp-wf/wf-process-editor/lib/domain/entities/biz-component.entity.ts","ng://@gsp-wf/wf-process-editor/lib/views/activity-component/activity-component.repository.ts","ng://@gsp-wf/wf-process-editor/lib/views/activity-component/activity-component.viewmodel.ts","ng://@gsp-wf/wf-process-editor/lib/domain/entities/actual-parameter.ts","ng://@gsp-wf/wf-process-editor/lib/views/activity-component/activity-component.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/execute-forms/execute-forms.uistate.ts","ng://@gsp-wf/wf-process-editor/lib/views/execute-forms/execute-forms.viewmodel.ts","ng://@gsp-wf/wf-process-editor/lib/views/execute-forms/execute-forms.repository.ts","ng://@gsp-wf/wf-process-editor/lib/views/execute-forms/entities/execute-form.entity.ts","ng://@gsp-wf/wf-process-editor/lib/views/execute-forms/add-execute-form/form-format.service.ts","ng://@gsp-wf/wf-process-editor/lib/views/execute-forms/entities/execute-form.ts","ng://@gsp-wf/wf-process-editor/lib/views/execute-forms/add-execute-form/add-execute-form.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/execute-forms/parameter-setting/parameter-setting.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/execute-forms/execute-forms.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/title-expression/title-expression.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/customize-action/entities/customize-action.entity.ts","ng://@gsp-wf/wf-process-editor/lib/views/customize-action/views/customize-action-list/customize-action-list.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/customize-action/customize-action.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/process-variables/process-variable.entity.ts","ng://@gsp-wf/wf-process-editor/lib/views/variable-setting/views/constant-edit/constant-edit.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/variable-setting/views/component-edit/component-edit-lookup.service.ts","ng://@gsp-wf/wf-process-editor/lib/views/variable-setting/views/component-edit/component-edit.service.ts","ng://@gsp-wf/wf-process-editor/lib/views/variable-setting/views/component-edit/component.entity.ts","ng://@gsp-wf/wf-process-editor/lib/views/variable-setting/views/component-edit/component-edit.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/process-variables/process-variables.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/time-limit-control/time-limit-control.entity.ts","ng://@gsp-wf/wf-process-editor/lib/views/time-limit-control/send-message-operation/send-message-operation.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/time-limit-control/auto-handle-operation/auto-handle-operation.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/time-limit-control/time-limit-control.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/message-notice/message-notice.ts","ng://@gsp-wf/wf-process-editor/lib/views/message-notice/message-notice-edit/message-notice-edit.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/message-notice/message-notice.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/extend-property/extend-property.component.ts","ng://@gsp-wf/wf-process-editor/lib/app/bpmn-process.viewmodel.ts","ng://@gsp-wf/wf-process-editor/lib/views/approvel-items/entities/approval-item.entity.ts","ng://@gsp-wf/wf-process-editor/lib/views/organization-potential-owner/actionOrganizationScope.ts","ng://@gsp-wf/wf-process-editor/lib/views/assign-performer-config/assign-performer-config.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/sign-rule/entites/sign-rule.entity.ts","ng://@gsp-wf/wf-process-editor/lib/views/sign-rule/sign-rule.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/approvel-items/approvel-items.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/expressionEditor/expression-editor.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/jump-scope/jump-scope.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/backward-rule/backward-rule.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/performer/performer.uistate.ts","ng://@gsp-wf/wf-process-editor/lib/views/performer/performer.repository.ts","ng://@gsp-wf/wf-process-editor/lib/views/performer/performer.viewmodel.ts","ng://@gsp-wf/wf-process-editor/lib/views/performer/entities/performer.entity.ts","ng://@gsp-wf/wf-process-editor/lib/views/performer/entities/user-performer.entity.ts","ng://@gsp-wf/wf-process-editor/lib/views/performer/performer-config.service.ts","ng://@gsp-wf/wf-process-editor/lib/views/performer/views/user-performer/user-performer.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/performer/entities/position-performer.entity.ts","ng://@gsp-wf/wf-process-editor/lib/views/performer/views/position-performer/position-performer.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/performer/views/component-performer/component-performer.service.ts","ng://@gsp-wf/wf-process-editor/lib/views/performer/views/component-performer/component-performer.entity.ts","ng://@gsp-wf/wf-process-editor/lib/views/performer/views/component-performer/component-performer.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/performer/views/reporting-line/reporting-line-data.entity.ts","ng://@gsp-wf/wf-process-editor/lib/views/performer/views/reporting-line/service/wf-report-def-help.service.ts","ng://@gsp-wf/wf-process-editor/lib/views/performer/views/reporting-line/service/wf-report-def-help.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/performer/views/reporting-line/reporting-line.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/performer/views/matrix-performer/entitis/matrix-def-info.entity.ts","ng://@gsp-wf/wf-process-editor/lib/views/performer/views/matrix-performer/entitis/matrix-data-info.entity.ts","ng://@gsp-wf/wf-process-editor/lib/views/performer/views/matrix-performer/enum-list/enum-list.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/performer/views/matrix-performer/matrix-performer.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/performer/views/performer-edit/performer-edit.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/performer/views/performer-options/performer-options.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/performer/performer.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/organization-potential-owner/organization-potential-owner.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/anonymous-set/anonymous-set.entity.ts","ng://@gsp-wf/wf-process-editor/lib/views/anonymous-set/anonymous-set.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/variable-setting/variable-setting.ts","ng://@gsp-wf/wf-process-editor/lib/views/variable-setting/variable-setting.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/approval-pivot/approval-pivot-config.ts","ng://@gsp-wf/wf-process-editor/lib/views/approval-pivot/approval-pivot.ts","ng://@gsp-wf/wf-process-editor/lib/views/approval-pivot/approval-pivot.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/urge-handle-rule/urge-handle-rule.ts","ng://@gsp-wf/wf-process-editor/lib/views/urge-handle-rule/urge-handle-rule.component.ts","ng://@gsp-wf/wf-process-editor/lib/app/wf-flowElements.viewModel.ts","ng://@gsp-wf/wf-process-editor/lib/views/save-as-edit/save-as-edit.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/call-activity-sub-process/BillSourceType.ts","ng://@gsp-wf/wf-process-editor/lib/views/call-activity-sub-process/SubProcessType.ts","ng://@gsp-wf/wf-process-editor/lib/views/call-activity-sub-process/call-activity-sub-process.entity.ts","ng://@gsp-wf/wf-process-editor/lib/aif-process-list-help/entity/BifMonitorConstant.ts","ng://@gsp-wf/wf-process-editor/lib/aif-process-list-help/entity/BifMetadataType.ts","ng://@gsp-wf/wf-process-editor/lib/aif-process-list-help/entity/AbstractShowEntity.ts","ng://@gsp-wf/wf-process-editor/lib/aif-process-list-help/entity/RtShowEntity.ts","ng://@gsp-wf/wf-process-editor/lib/aif-process-list-help/entity/RtShowEntitiesWithCustomization.ts","ng://@gsp-wf/wf-process-editor/lib/aif-process-list-help/entity/RtBillProcessListResult.ts","ng://@gsp-wf/wf-process-editor/lib/aif-process-list-help/services/process-list-help.service.ts","ng://@gsp-wf/wf-process-editor/lib/aif-process-list-help/entity/ProcessFilterConditionArgs.ts","ng://@gsp-wf/wf-process-editor/lib/aif-process-list-help/entity/OrderByDirection.ts","ng://@gsp-wf/wf-process-editor/lib/aif-ui-common/pipe/aif-ui-common-locale.pipe.ts","ng://@gsp-wf/wf-process-editor/lib/aif-process-list-help/components/process-list-help/process-list-help.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/call-activity-sub-process2/call-activity-sub-process2.component.ts","ng://@gsp-wf/wf-process-editor/lib/app/sub-process.viewmodel.ts","ng://@gsp-wf/wf-process-editor/lib/app/auto-activity.adapter.ts","ng://@gsp-wf/wf-process-editor/lib/views/event-definition/event-definition.entity.ts","ng://@gsp-wf/wf-process-editor/lib/views/event-definition/event-definition.component.ts","ng://@gsp-wf/wf-process-editor/lib/app/catch-event.adapter.ts","ng://@gsp-wf/wf-process-editor/lib/app/message-activity.adapter.ts","ng://@gsp-wf/wf-process-editor/lib/model/process-info.ts","ng://@gsp-wf/wf-process-editor/lib/domain/entities/audit-processDef-info.ts","ng://@gsp-wf/wf-process-editor/lib/app/notify-activity.adapter.ts","ng://@gsp-wf/wf-process-editor/lib/aif-process-list-help/AifCreationBillProcessConverter.ts","ng://@gsp-wf/wf-process-editor/lib/app/aif-creation-bill-activity.adapter.ts","ng://@gsp-wf/wf-process-editor/lib/app/process-designer.viewmodel.ts","ng://@gsp-wf/wf-process-editor/lib/views/note/note.component.ts","ng://@gsp-wf/wf-process-editor/lib/wf-process-editor.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/jump-scope/jump-scope.pipe.ts","ng://@gsp-wf/wf-process-editor/lib/views/performer/views/user-performer/users-name.pipe.ts","ng://@gsp-wf/wf-process-editor/lib/index.ts","ng://@gsp-wf/wf-process-editor/lib/views/call-activity-sub-process/call-activity-sub-process.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/execute-forms/entities/form-format.ts","ng://@gsp-wf/wf-process-editor/lib/views/execute-forms/entities/form-format-config.ts","ng://@gsp-wf/wf-process-editor/lib/views/execute-forms/entities/form-method-config.ts","ng://@gsp-wf/wf-process-editor/lib/views/execute-forms/form-operation-config/form-operation-config.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/execute-forms/form-format-config/form-format-config.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/execute-forms/form-config-container/form-config-container.component.ts","ng://@gsp-wf/wf-process-editor/lib/aif-process-list-help/entity/VOTemplateType.ts","ng://@gsp-wf/wf-process-editor/lib/aif-process-list-help/utils/common-model-type-helper.ts","ng://@gsp-wf/wf-process-editor/lib/aif-process-list-help/components/proc-help-query-solution/proc-help-query-solution.component.ts","ng://@gsp-wf/wf-process-editor/lib/aif-ui-common/aif-ui-common.module.ts","ng://@gsp-wf/wf-process-editor/lib/aif-process-list-help/i18n/lang.resource.ts","ng://@gsp-wf/wf-process-editor/lib/aif-process-list-help/process-list-help.module.ts","ng://@gsp-wf/wf-process-editor/lib/wf-process-editor.module.ts","ng://@gsp-wf/wf-process-editor/lib/model/rt-process-info.ts"],"names":["WfProcessEditorService","Injectable","args","providedIn","dt","rt","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__extends","TypeError","String","__","this","constructor","create","__assign","assign","t","s","i","n","arguments","length","apply","__values","o","Symbol","iterator","m","next","value","done","__read","r","e","ar","push","error","__spread","concat","FlowFormInfo","defineProperty","ProcessDesignerUIState","processVariables","variables","setProcessVariableContext","variableContextName","key","participantContext","find","name","ranksName","dimensions","text","getMessageChannels","_this","http","get","subscribe","re","messageChannels","getAdministratorInfo","getCurrentUser","user","userId","forkJoin","getAdministratorConfig","getAdministrator","isAdministratorConfig","currentValue","administrator","enable","administratorAuthorities","map","a","includeSubordinate","getSysOrgWithAllSubsById","organization","getSysOrgById","organizations","r_1","tslib_1.__values","r_1_1","orgs","some","org","id","orgs_1","orgs_1_1","url","orgId","encodeURIComponent","getCurUserInfo","processVariableContext","ProcessVariables","_b","_c","v","varEntity","documentation","description","getTopWindow","curWin","window","self","location","origin","parent","isRTFTopWin","initUIState","propertyConfig","propertyData","content","schemas","getUserActList","data","userActList","data_1","data_1_1","userAct","userActInfo","Id","Name","getEndEventList","allActList","data_2","data_2_1","endEvent","endEventInfo","HttpService","flowFormInfo","POST_MESSAGE_TARGET","document","counterSignVariables","approvalItems","assignIterator","completeIterator","completeIterator4Claim","boolIterator","noJump4Sign","procInstContext","urgeContext","formalParameterContext","activityComponentContext","startModeIterator","displayTerminal","orgTypeCollection","ProcessDeUtil","GenerateElementId","Decimal2String","generatedId","c","exponent","keys","createNM","S4","Math","random","toString","substring","getProcessDesignerRouter","getFlowFormWebApi","getFormalParametersWebApi","getMetaDataRUWebApi","getBizComponentsWebApi","getExcuteFormsWebApi","getProcessDefinitionWebApi","getCheckExistActiveProcDefApi","getBizActivityWebApi","ffId","getProcDefKeyWebApi","deployWebApi","saveWebApi","getApprovalActionWebApi","getRTProcessDefinitionWebApi","getValue","code","indexOf","split","reduce","obj","toUpperCase","jsonObj","toLowCase","toLowerCase","parseInt","Date","now","ProcessDesignerDataService","GetFlowFormbyId","util","getParametersbyFlowFormKey","getComponentsbyFlowformkey","getExecuteFormbyFlowFormKey","getBizActivities","getCustomizeActions","formId","getBizActivityComponents","flowFormId","getBizActivityActions","getBusinessEntitybyId","getProcContentbyKey","getRTProcContentbyId","saveProcess","processInfo","state","postData","procOrg","organizationName","orgName","accessLevel","procContent","post","JSON","stringify","auditProcessDef","info","deployProcess","procDefContent","saveRTProcess","procDefId","syncDtProcess","rtProcessInfo","EntryFormEditorComponent","ngOnInit","getBaseAndExtendFlowForm","ngAfterViewInit","clickOK","grid","selectedRow","object","parameters","submitModal","emit","message","clickCancel","closeModal","setTimeout","selectRow","Component","selector","template","MessagerService","Output","Input","ViewChild","EventEmitter","editorParams","modalConfig","title","width","height","showButtons","columns","field","sortable","formatter","type","options","trueText","falseText","FlowFormConverter","convertTo","ActivityComponentUIState","components","allComponents","executionCollection","activityCollection","BizComponentEntity","metadataid","method","metadataId","methodCode","isForCompensation","ActivityComponentRepository","loadComponents","bizActId","uistate","filter","ownerType","OwnerType","removeComponent","index","findIndex","splice","subject","curComponent","addComponent","cpt","component","operations","actualParameters","bindParas","defaultProcessComponentIds","assignParameterValue","params","designerState","swapArray","arr","i1","i2","Subject","ActivityComponentViewModel","deleteRow","executionTime","messager","repository","componentSelect","ActualParameter","ActivityComponentComponent","cpts","cpts_1","cpts_1_1","bizComponent","MetadataId","MethodCode","Time","ActualParameters","actualParameters_1","actualParameters_1_1","para","actualParameter","Value","editor","EditorTypes","COMBOLIST","valueField","textField","idField","panelHeight","item","validators","SWITCH","cmplist","paramColumns","groupText","editable","clickHandle","formControl","setValue","instance","showExprHelp","clear","console","log","cmp","loadData","closeCellEdit","viewModel","moveUp","curCmpId","moveDown","validator","compRef","resolver","resolveComponentFactory","SelectMetadataRTComponent","injector","typeList","selectedMetadata","$event","meta","metadata","openComponentSelectorNew","sessionSrc","getUserSessionId","_a","Error","dialog","modalService","show","closeModalEmitter","close","sessionId","componentService","openSelector","selectorResult","confirmEvent","result","_h","_j","schema","expr","addSchema","entityTypes","entityType","addInjectedEntity","InjectedType","EntityType","context","_k","_l","variable","_m","_o","_p","_q","_r","_s","_t","_u","context_1","context_1_1","addContext","setEditPattern","ExprEditMode","Advanced","addExpressionText","buildExpression","then","expressioninfo","cd","detectChanges","selectionChange","endCellEdit","paramlist","warning","providers","FormBuilder","ExpressionService","ComponentFactoryResolver","Injector","SessionService","BsModalService","CommonComponentUiRTService","HostBinding","formBuilder","cls","paramAfterEdit","rowIndex","rowData","column","of","ActivityComponentConverter","ExecuteFormsUIState","formTypeCollection","ExecuteFormsViewModel","ExecuteFormsRepository","ExecuteFormModel","ActualParameter$1","FormFormatService","getData","customData","pageIndex","size","pageSize","searchValue","parse","query","tab","searchField","pipe","items","total","totalElements","pageInfo","pageable","pageNumber","pageList","enablePager","ExecuteForm","AddExecuteFormComponent","getAllExecuteForms","form","model","ComponentId","appId","FormType","formType","formFormatId","TerminalType","submit","cancel","selectOtherFormFormat","lookUp","showDialog","selectOtherFunc","appHelper","showHelp","session","funcSelected","apps","model_1","InvokingConfig","paras","getExecuteForms","getFormFormats","forms","formFormats","format","f","executeForm","flowFormKey","flowForm","isDefault","terminal","sysInit","remarks","urlParameters","actPList","formFormats_1","formFormats_1_1","from","businessObjectId","param","provide","ServerSideToken","useClass","RtfAppHelpComponent","cols","dataUri","dictPicking","arg","dictPicked","closeDialog","ParameterSettingComponent","_mode","_g","showFormType","ExecuteFormsComponent","paramArray_1","forEach","formatConfigId","showMethodTab","getForm","configContainer","switchMap","configId","parametersSet","mode","buttons","modalFooter","selectExecuteForm","read","ElementRef","viewmodel","style","groupIcon","ExecuteFormsConverter","TitleExpressionComponent","contextEntities","_e","_f","this_1","this_2","this_3","convertToValue","getExpr","val","ExpressioneditorComponent","injectName","TitleExpressionConverter","CustomizeAciton","CustomizeActionListComponent","selections","checkeds","action","terminalType","ValueText","Tag","designerUIState","terminalList","customActionList","customizeActions","CustomizeActionComponent","_d","actions","addActions","footer","act","delete","actionlist","curAction","selectChanged","CustomizeActionConverter","ProcessVariable","basicType","ConstantEditComponent","submitEmitter","closeEmitter","ComponentEditLookUpService","helpId","ComponentEditService","getHelpMetaData","su","ComponentEntity","ComponentEditComponent","_component","service","operation","fetchValueMode","fetchValueSetting","ngZone","runOutsideAngular","inputGroup","nativeElement","addEventListener","onMouseEnter","bind","onMouseLeave","event","showClearButton","toggleClearIcon","isShow","str","clearIcon","target","querySelector","display","selectComponent","getHelpInfo","NgZone","DatagridComponent","LookupGridComponent","helpFields","helpCols","displayType","beforeEdit","ParameterFetchValueMode","express","none","const","enum","TEXTBOX","help","cell","serviceUnit","dataSource","lookup","onClear","err","afterEdit","ProcessVariablesComponent","variableSetting","add","selected","selecteds","variableSetEmitter","endEdit","tag","tags","valueText","valueEdit","editConstant","editExpression","editComponent","IsMatchVariableNameRules","code1","j","test","basicTypes","showClear","showTips","selectChange","rowId","ProcessVariablesConverter","TimeLimitInfo","timeUnit","expireOperations","ExpireOperation","durationType","timeDuration","operationTypeName","tslib_1.__extends","SendMessage","_super","cycleEnable","cycleTimeUnit","receiver","receiverText","AutoHandle","autoHandleType","SendMessageOperationComponent","array","sendType","undefined","sendMessage","receiverVari","activityReceiverVar","bindingData","array_1","array_1_1","array_2","array_2_1","cycleTime","setReceiver","setActivityReceiver","receiverVariables","array_3","array_3_1","typeGroup","activityReceiverVariables","placeholder","placeholder2","parser","Number","timeUnitCollection","AutoHandleOperationComponent","autoHandle","uiState","ApprovalItems","Text","TimeLimitControlComponent","timeLimitInfo","activityOperationTypeName","processOperationTypeName","durationTypeCollection","valueChange","durationTypeChange","NUMBERBOX","min","dueTime","remove","curItem","editOperation","ctx","sendMassageOperation","confirm","autoHandleOperation","tagSelectChange","timeScopeValue","changeTimeScope","tagCollection","timeScopeCollection","TimeLimitControlConverter","MessageNotice","processSendTime","activitySendTime","MessageNoticeEditComponent","_location","l","messageNotice","exprAble","charAt","sendTimes","sendTimeChange","usersSelect","changeValue","sendTime","titleExpr","showTitleHelp","contentExpr","showContentHelp","showExpr","expressionInfo","tranExpr","groupIcon2","MessageNoticeComponent","notices","messageNotices","edit","MessageNoticeConverter","ExtendPropertyComponent","property","procExtendProperty","parentId","sortOrder","propertyNote","propertyTitle","propertyLocation","propertyType","enumValue","bizDefKey","bizCategoryId","startMode","setProperty","booleanlist","extendPropertyList","ExtendPropertyConverter","BpmnProcessViewModel","setProcessProperty","ResourceKeys","setProcessConfig","element","setProcessEntity","properties","propertyID","converter","ApprovalItemEntity","wfAction","commentNecessary","certification","attachmentNecessary","workFlowAction","ActionOrganizationScope","OrganizationPotentialOwner","AssignPerformerConfigComponent","assingPerformerConfigForm","FormGroup","multiSelect","FormControl","necessary","operator","allowGlobalAssign","assignScope","organizationLevel","includeChildren","config","organizationLevelCollection","potential","actionScope","ActionScope","organizationId","operatorCollection","AssignConfigConverter","SignRuleEntity","SignRuleComponent","rules","rules_1","rules_1_1","rule","conclusionValue","ConclusionValue","conclusionName","ConclusionName","calculateType","CalculateType","conditionValue","ConditionValue","waitAllVotes","WaitAllVotes","completionCondition","CompletionCondition","_value","ruleItems","ruleItems_1","ruleItems_1_1","ruleItem","editConditon","exprService","cond","approvalSelect","apvlItemsGrid","selections_1","selections_1_1","selection","signRule","apvlItemDialog","curValue","preValue","calculationMethods","approvalCols","precision","SignRuleConverter","ApprovelItemsComponent","items_1","items_1_1","approval","WorkFlowAction","IsDefault","getActionsList","bizActivityId","actionValidate","actionsSelect","actionsTable","actionsDialog","trim","workFlowActions","actionsCols","ApprovelItemsConverter","ExpressionEditorComponent","this_4","compute","changeType","ExpressionEditorConverter","JumpScopeComponent","category","Category","defaultType","DefaultType","acty","DefaultActivity","defaultacty","strs","DestinationActivities","name_1","actis","strs_1","strs_1_1","list_1","defaultActivity","defAct","fullActis","allAct","actTable","categoryListItems","defaultTypeListItems","actisSelect","defaultActivitySelect","JumpScopeConverter","BackwardRuleComponent","selectAbleChecked","SelectTargetAble","waitReturnChecked","WaitReturn","dynamicBackWardRuleAbleChecked","DynamicBackWardRuleAble","TargetRef","targetRef","listItems","displayText","nodeType","selectAbleClick","ClrTypeID","CompleteStrategy","waitReturnClick","dynamicBackWardRuleAbleClick","getTargetRef","pagerChanged","search","load","pageSizeChange","hlp","componentRef","BackwardRuleConverter","PerformerUIState","performersList","typeCollection","performerInfo","performers","reportingLines","matrixParticipants","PerformerRepository","PerformerViewModel","PerformerEntity","performerId","performerName","UserPerformerEntity","PerformerConfigService","getLookupConfig","lookupConfig","asObservable","HttpClient","ReplaySubject","UserPerformerComponent","hasAdminOrg","userTypeChange","users","orgTypeChange","userTypeButtonNeedShow","variableOrgTypes","selectUsers","userType","userTypeCollection","impl","System","import","moduleFactorys","values","u","userHelp","Conditional","condition","sysOrgId","sysOrgName","context_2","context_2_1","variableParticipantName","getPerformers","orgType","curOrgType","SysFarrisLookupComponent","PositionPerformerEntity","PositionPerformerComponent","position","positionTypeChange","positionType","selectOrganition","selectPosition","posiHelp","editCondition","clearOrgType","positionsSelect","posType","positionTypes","ComponentPerformerService","getLookUpData","pageSiza","ComponentPerformer","ComponentPerformerComponent","componentPerformer","curParameter","methodName","helpInfo","fieldInfo","helpData","searchInfo","ReportingLineDataEntity","WfReportDefHelpService","keys_1","keys_1_1","substr","WfReportDefHelpComponent","mapFields","afterClear","disabled","singleSelect","pagination","afterConfirm","dialogClosed","beforeOpen","ReportingLineComponent","dataEntity","defName","reportingLineDefName","defUrl","reportingLineDataEntity","reportingLineDefId","reportingLineDefinition","di","dimension","refUserId","curReportingRefer","reportingReferObjects","refEmployeeId","typeReadOnly","getReportingLineType","reportingLineDefinitionList","slice","onclear","referObjectChange","refOrgId","refOrgName","departments","referUserChange","reportingDimensionChange","orgSelected","getReportingTypes","start","end","inputGroup1","clearUser","clearOrg","selectOrg","employee","defChanged","gspWfReportingLineDef","ReportingLineDefHelpUtil","getReportingLineHelp","defSelected","reportingLineDimension","reportingReferObject","SysFarrisTreeHelpComponent","treeFilter","MatrixDefInfoEntity","MatrixDataInfoEntity","EnumListComponent","enumValues","onConfirm","selectedIds","messageService","MatrixPerformerComponent","curMatrixDataEntity","matrixDefId","curMatrixDefEntity","setFields","curDataFieldValue","dataFieldAlias","conditionField1","condition1","condition1ExprAble","conditionField2","condition2","condition2ExprAble","conditionField3","condition3","condition3ExprAble","condition1Text","conditionFieldText1","condition1Value","condition2Text","conditionFieldText2","condition2Value","condition3Text","conditionFieldText3","condition3Value","getMatrixLineType","matrixDefEntityList","conditionFields","dataFieldAndValues","conditionField","sort","dataField","temp","alias","onHelpSearch","fieldId","smartHelp","openEnumValue","showEnumList","enumList","btnRef","dataFieldChange","selectedDataHandler","condition1Expr","condition1ExprClick","condition2Expr","condition2ExprClick","condition3Expr","condition3ExprClick","LookupDataService","exprGroup","matrixDefName","dictHelpPicked","PerformerEditComponent","performer","usersCmp","isContextVariable","posiCmp","reportingLineCmp","setReportingLineDataEntity","cmpCmp","matrixCmp","setMatrixDataEntity","reportingLine","matrix","positionPerformers","userPerformers","PerformerOptionsComponent","exclusionPerformers","ExclusionPerformers","noPerformerStrategy","NoPerformerStrategy","historicFirst","HistoricFirst","automaticPerformers","excludeProcInstCreator","excludePreActExecutors","excludeAllPassExecutors","excludeExprPerformer","autoProcInstCreator","autoPreActExecutors","autoAllPassExecutors","excludeProcInstCreatorClick","excludePreActExecutorsClick","excludeAllPassExecutorsClick","autoProcInstCreatorClick","AssignStrategy","autoPreActExecutorsClick","autoAllPassExecutorsClick","getPerformerOptions","getExclusionPerformers","getAutoPerformers","exclusionPerf","autoPerf","openExprEditor","noPerformerStrategyList","exclusionPerformersOptions","PerformerComponent","partInfo","performerDescription","componentDescription","reportingLineDescription","matrixDescription","getMatrixConfig","editState","compFactory","editFooter","editDialog","curPerformer","modalConfig_1","res","urlMatrix","editOK","re_1","id_1","id_2","isClose","addReportingLineData","addMatrixData","reportingLineData","definitionId","referUserId","referDeptId","matrixData","editCancel","participantOptionsSet","optionsDialog","des","GetOrganizationType","PerformerConverter","OrganizationPotentialOwnerComponent","actionCollection","scope","actionName","OrganizationPotentialOwnerConverter","AnonymousSet","isAnonymity","anonymous","AnonymousSetComponent","anonymousSet","AnonymousSetConverter","VariableSetting","VariableSettingComponent","variableCode","opportunities","variableSet","variableName","re_1_1","VariableSettingConverter","ApprovalPivotConfig","approvalPivots","ApprovalPivot","ApprovalPivotComponent","approvalPivot","enableClear","ApprovalPivotConverter","UrgeHandleRule","urgeHandleAble","earlyTime","intervalTime","urgeMessageSubject","urgeMessageContent","addReminder","subjectEditable","contentEditable","UrgeHandleRuleComponent","urgeHandleRule","UrgeHandleRuleConverter","WFFlowElementsViewModel","setFlowElementProperty","setFlowEleConfig","setFlowEleEntity","setUserActivityProperty","buildApprovalItems","buildCounterSignVariables","buildSignRules","SignRule","BizActivityID","setUserActConfig","setUserActEntity","conclusions","conclusions_1","conclusions_1_1","conclusion","VarEntity","conclusions_2","conclusions_2_1","signRules","approvalItem","signRules_1","signRules_1_1","SaveAsEditComponent","_organizations","makeTreeByParent","saveAsOK","procName","saveAsCancel","searchHandle","datas","parentField","keyField","pathLayerOnes","x","treedata","entity","children","findChildrenByParent","childList","childitem","child","childEntity","accessLevelCollection","InheritParent","VariablesExpression","AutoCreation","Dynamic","Specified","CallActivitySubProcess","subProcessType","SubProcessType","billSourceType","BillSourceType","BifMonitorConstant","bifMonitorAppId","bifManagerAppEntrance","bifDiagnostorFuncId","bifManagerFuncId","BifCreationProcess","BifWritebackProcess","JsonConvertableImpl","AbstractShowEntity","ResetBeforeLoadFrom","upBillVoName","downBillVoName","bifMetadataType","lastModifiedTime","originId","rootId","ConvertToJsonObject","BpmnModelJsonHelper","SetAttributeValue","LoadFromJsonObject","GetAttributeValueAsString","BifMetadataType","GetAttributeValueAsDateTime","GetAttributeValueAsBoolean","RtShowEntity","isEnabled","RtShowEntitiesWithCustomization","customizationEntities","GetAttributeValueAsList","getTClass","RtBillProcessListResult","totalCount","pageCount","entities","GetAttributeValueAsNumber","ProcessListHelpService","openBifManagerApp","Map","set","opt","funcId","appEntrance","appType","entityParams","queryStringParams","tabId","tabName","frameworkService","openMenu","getDatagridData","body","ConvertToJson","bizType","httpService","baseUrl","listRes","elt","AppService","FrameworkService","appService","ProcessFilterConditionArgs","upBillVoId","downBillVoId","billProcessType","orderByCode","orderByName","OrderByLastModifiedTime","GetAttributeValueAsJsonSerializable","TextValue","BIF_LANG_RESOURCES","InjectionToken","AifLocalePipe","transform","lang","instant","Pipe","Inject","LOCALE_ID","localeId","resources","defaultLang","langCode","ProcessListHelpComponent","processCode","configTtColumns","bizTypeId","queryParam","filterArgs","hasValue","loadItems","ttData","proc","it","tt","clickOk","evt","procEmitter","modalRef","notify","localePipe","complete","onSearch","clearCheckeds","clearSelections","clickNameCell","procHelpService","columnSorted","onPageSizeChanged","checkedIds","checkRows","onPageChanged","pageChangeHandler","pageSizeChangeHandler","loadingComp","loading","setPageIndex","catchError","Message","ttColumns","nameCellTemp","createDefaultQueryParam","filterArgsExt","defaultPageSize","OrderByDirection","NotifyService","Router","ActivatedRoute","LoadingService","router","activatedRoute","ttIdField","cascadeCheck","cascadeDown","cascadeUp","beforeSortColumn","order","orders","orderBy","CallActivitySubProcess2Component","callActivitySubProcess","calledElement","calledBizDefKey","inheritBizDataId","useAutoCreationData","getProcessDefKey","getFlowForm","getAifProcessName","aifProcessCode","processConfirm","calledElementName","processTypeChange","calledBizDefName","billSourceChange","selectProcess","openProcHelp","rte","aifProcessName","clearProcess","cmpR","cfr","inj","resizable","handle","closed","destroy","clearProcessDef","flowFormConfirm","clearFlowForm","setBizDataId","bizDataId","bool","request","responseType","radioGroupProcessTypeData","radioGroupBillSourceData","CallActivitySubProcess2Converter","SubProcessViewModel","setConfig","setEntity","AutoActivityAdapter","EventDefinition","triggerAction","Async","EventDefinitionComponent","event_1","SignalRef","triggerActionCollection","EventDefinitionConverter","CatchEventAdapter","MessageActivityAdapter","AuditProcessDefInfo","ProcessInfo","NotifyActivityAdapter","AifCreationBillProcessConverter","AifCreationBillActivityAdapter","ProcessDesignerViewModel","initProcessProperty","pptData","EntryForm","process","ProcessClrTypeID","activity","subProcess","autoActAdapter","catchEventAdapter","messageActAdapter","notifyActAdapter","creationActAdapter","updateSchemas","formalParameters","schemaParams","dataType","schemaMetadataId","getFlowFormInfoById","$flowform","setFormParamCxt","flowform","bizComponents","excuteForms","bizActivities","getFormFormatsByBizCategory","auditId","success","processDefKey","saveAsProcess","procKey","DefaultProcess","Key","modalOptions","dlg","procInfo","msg","timeout","process_1","question","AuditEvent","beforeCompleteStrategyChange","rtProcDefId","getProcessCategory","procCategoryId","NoteComponent","record","WfProcessEditorComponent","_time","getSrc","showLoading","updateProperty","processCategoryId","ProcessTime","procCategory","src","sanitizer","bypassSecurityTrustResourceUrl","addMessageListener","eventHandler","func","propertyPanel","propertyChanged","updateChangeProperty","changeObject","bindEntryFormInfo","propertyValue","completeStrategyChanged","flowformId","processBizComponnets","executeForms","ConvertExecuteForm","isAll","note","openProcContent","time","processKey","openNewProcess","getProcContent","checkModelContent","formFormat","status","formFormat2ExecuteForm","processName","bizObjId","ffName","flowFormName","processDescription","iframeWindow","iframe","contentWindow","wrapMessage","postMessage","showTip","level","save","saveHttp","closeLoading","loadService","container","webForm","appForm","formformat","strategy","dialog_1","categoryId","modelBizDefKey","extensionElements","BizDefKey","BizDefName","DomSanitizer","flag","prcoess","removeEventListener","JumpScopePipe","nodeId","UsersNamePipe","defaultVal","PROCESS_DESIGNER_APP_PROVIDERS","PROCESS_DESIGNER_DOMAIN_PROVIDERS","PROCESS_DESIGNER_PART_PROVIDERS","CallActivitySubProcessComponent","FormFormat","FormFormatConfig","formMethodConfigs","FormButtonConfig","FormFieldConfig","FormMethodConfig","FormOperationConfigComponent","_fromFormatId","getFormMethods","methodsDialog","formMethods","halign","align","editParam","methodParameters","methodSelected","methodGrid","formFormatConfigId","methodCols","FormFormatConfigComponent","_formFormatId","_formatConfigId","buttonCols","btnEnable","hAlign","btnDisabled","btnHidden","fieldCols","fieldEditable","fieldReadonly","fieldHidden","fieldRequired","getConfig","setBtnAndFieldConfigs","formButtonConfigs","formFieldConfigs","operationConfig","saveConfig","btnConfigChange","buttonConfigs","hidden","btnBatchOperate","btnGrid","checkedRows","checkeds_1","checkeds_1_1","btnBatchReset","button","formButtons","buttonState","checkeds_2","checkeds_2_1","fieldConfigChange","fieldSwitchChange","fieldConfigs","fieldConfigs_1","fieldConfigs_1_1","readonly","required","fieldBatchOperate","fieldTree","checkeds_3","checkeds_3_1","fieldBatchReset","formatFieldList","resetFieldConfig","checkeds_4","checkeds_4_1","fieldConfigs_2","fieldConfigs_2_1","leaf","fieldState","btn","buttonId","btnConfig","getFieldConfigs","fd","fieldConfig","fieldConfigs_3","fieldConfigs_3_1","getFormFormat","getFormFormatConfig","convertFormFormat","btnConfigs","btnConfigs_1","btnConfigs_1_1","formFields","orgFieldConfigs","configs","configs_1","configs_1_1","setFieldConfig","formFields_1","formFields_1_1","fieldConfigs_4","fieldConfigs_4_1","encodeURI","convertformFields","getFormatFieldList","formFields_2","formFields_2_1","formFields_3","formFields_3_1","getFormatField","formFields_4","formFields_4_1","FormConfigContainerComponent","ngOnChanges","changes","showComponentRef","createWFComponentRef","insert","hostView","getFormFormatType","ViewContainerRef","FromBE","FromVO","FromNone","CommonModelTypeHelper","getCommonModelType","cm","CommonModelUtil","GetGeneratedConfigID","judgeVoTemplateType","gspViewModel","IsVirtual","TemplateVoInfo","TemplateVoId","VOTemplateType","ProcHelpQuerySolutionComponent","processNameChange","enabledStateChange","sysInitChange","selectUpBill","metadata4RefDto","clearUpBill","upVODto","upVO","ID","MainObject","selectDownBill","clearDownBill","downVODto","downVO","clearProcessName","clearProcessType","clearIsEnabled","clearIsPublished","clearSysInit","clickBtnFilter","onSearchEmitter","clickBtnClear","comboProcessType","comboProcessTypeData","comboEnabledState","comboEnabledStateData","comboSysInit","comboSysInitData","GSPMetadataRTService","metadataService","queryParamChange","comboProcessTypeIdField","comboProcessTypeValueField","comboProcessTypeTextField","comboEnabledStateIdField","comboEnabledStateValueField","comboEnabledStateTextField","comboSysInitIdField","comboSysInitValueField","comboSysInitTextField","AifUiCommonModule","NgModule","declarations","exports","BILL_TRACKER_LANG_RESOURCES","zh-CHS","upBill","downBill","processType","creation","writeback","enabledState","all","enabled","yes","no","billSelector","querySolution","collapse","expand","pleaseSelectNonVirtualVO","pleaseSelectOneItemOnly","isExtendProcess","en","zh-CHT","localStorage","getItem","ɵ1","ProcessListHelpModule","imports","CommonModule","HttpClientModule","MetadataRTSelectModule","GSPMetadataRTServiceModule","forRoot","FResponseToolbarModule","ListFilterModule","AngularDraggableModule","FarrisCommonModule","FarrisFormsModule","FarrisSectionModule","DatagridEditorsModule","DatagridModule","EditorProviders","ComboListModule","InputGroupModule","FarrisDialogModule","SwitchModule","FarrisTabsModule","LookupModule","LoadingModule","NotifyModule","MessagerModule","ModalModule","CacheService","FrmEventBus","FuncsService","useValue","ɵ0","BusinessObjectRtService","entryComponents","ReactiveFormsModule","FormsModule","SysManagerUIModule","RtfAppHelpModule","CommonComponentUiModule","TreeTableModule","DataTableModule","LayoutModule","SplitterModule","FlexLayoutModule","FarrisPanelModule","FarrisResponsiveModule","ExpressionModule","PropertyPanelModule","PopoverModule","PaginationModule","FarrisDropdownModule","WizardModule","WfBizprocessLookupModule","NumberSpinnerModule","PerfectScrollbarModule","FarrisButtonModule","WfProcessEditorModule","RTProcessInfo"],"mappings":"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A9B,GACAgxB,GACA3Q,GACA7iB,GACAijB,GACAxmB,GACAS,GACAiK,GACAnB,GACA3Q,GACA4nC,GACAuF,GACA7pC,GACAyjC,GACAnF,GACAtT,GACAnN,GACAgO,GACAyS,GACA9c,GACAL,GACA7V,GACAuD,GACAmpB,IAEF0X,QAAS,CACPC,EAAAA,aACA+B,EAAAA,oBACAC,EAAAA,YACA/B,EAAAA,iBACAgC,EAAAA,mBACAC,EAAAA,iBACAC,EAAAA,wBACAhC,GAAAA,2BAA2BC,QAAQ,IACnCF,GAAAA,uBACAkC,EAAAA,gBACAC,EAAAA,gBACAC,EAAAA,aACAjB,EAAAA,aACAL,EAAAA,mBACAuB,EAAAA,eACAxB,EAAAA,iBACAI,EAAAA,aACAqB,EAAAA,iBACAC,EAAAA,kBACAC,EAAAA,uBACAC,EAAAA,iBACAC,EAAAA,oBACA1B,EAAAA,iBACAE,EAAAA,cAAchB,QAAQ,CACpBxhD,QAAS,WAEX0iD,EAAAA,eAAelB,QAAQ,CACrBxgD,MAAO,MAET2hD,GAAAA,YACAsB,EAAAA,cACAC,EAAAA,iBACAC,EAAAA,qBACApC,EAAAA,sBACAC,EAAAA,eAAeR,QAAO5tD,GACjBquD,EAAAA,kBAELC,EAAAA,gBACAkC,EAAAA,aACAvC,EAAAA,kBACAQ,EAAAA,aACAgC,EAAAA,yBACAC,EAAAA,oBACAC,EAAAA,uBACAzC,EAAAA,oBACA0C,EAAAA,mBACAtD,IAEF31C,UAAW,CACTK,EAAAA,eACArS,EAAAA,YACAkS,EAAAA,kBACAK,EAAAA,2BACA0oC,GACAC,GACAC,GACAppB,GACA7wB,GACAy0B,IAEFuwB,QAAS,CAACxP,IACViT,gBAAiB,CACf7jD,GACA6nB,GACA1E,GACAoB,GACAsC,GACArU,GACA0V,GACAyB,GACArkB,GACA+C,GAAAA,0BACAwxB,GACA5C,GACA1K,GACA6C,GACAhB,GACA2J,GACArH,GACA9c,GACA+rB,GACA7D,GACAzmB,GACAX,GACA4gC,GACAv3B,GACA9B,GACAgxB,GACA3Q,GACA7iB,GACAijB,GACAxmB,GACAS,GACAiK,GACAnB,GACA3Q,GACA4nC,GACAuF,GACA7pC,GACAyjC,GACAnF,GACAtT,GACAa,GACAyS,GACA9c,GACAL,GACA7V,GACAkpB,GACA3lB,GACAmpB,QAGiCgb,IAtKrC,SAAAA,MClGA,SAAAC","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WfProcessEditorService {\r\n\r\n  constructor() { }\r\n}\r\n","export enum ProcessTime {\r\n    dt = 'dt',\r\n    rt = 'rt'\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import { FlowFormEntity } from './flowform.entity';\r\nimport { FormalParameterEntity } from './formal-parameter.entity';\r\nimport { BizComponentEntity } from './biz-component.entity';\r\nimport { ExcuteFormEntity } from './excute-form.entity';\r\n\r\nexport class FlowFormInfo {\r\n    flowForm: FlowFormEntity;\r\n    formalParameters: Array<FormalParameterEntity>;\r\n    bizComponents: Array<BizComponentEntity>;\r\n    excuteForms: Array<ExcuteFormEntity>;\r\n    bizActivities: Array<any>;\r\n    customizeActions: Array<any>;\r\n}\r\n","import {Injectable, Injector} from '@angular/core';\r\nimport {KeyMap} from '@farris/ui-property-panel';\r\nimport {FlowFormInfo} from '../domain/entities/flowform-info';\r\nimport {VarEntity} from '@gsp-svc/expression';\r\nimport {GSPCommonModel} from '@gsp-bef/gsp-cm-metadata';\r\nimport {HttpService} from '@ecp-caf/caf-common';\r\nimport {forkJoin, Observable} from 'rxjs';\r\n\r\n@Injectable()\r\n\r\nexport class ProcessDesignerUIState {\r\n\r\n  constructor(private http: HttpService) {\r\n  }\r\n\r\n  // å¥å£åæ®Info\r\n  flowFormInfo: FlowFormInfo = new FlowFormInfo();\r\n\r\n  // Modelä¸ä¸æ\r\n  content = '';\r\n\r\n  // å±æ§æ¡\r\n  propertyConfig: any[] = [];\r\n  propertyData: any = {};\r\n\r\n  // è®¾è®¡å¨å°å\r\n  POST_MESSAGE_TARGET = window.document.location.origin + '/platform/runtime/wf/web/designer/index.html';\r\n\r\n  BE: GSPCommonModel;\r\n  schemas: any[] = [];\r\n\r\n  // å®¡æ¹æ´»å¨å±æ§\r\n  counterSignVariables: any[] = [];\r\n  approvalItems: any[] = [];\r\n\r\n  // æµç¨çå®¡æ¹æ´»å¨èç¹ä¿¡æ¯\r\n  userActList = [];\r\n  // æµç¨åæ¬ç»æåå®¡æ¹æ´»å¨èç¹çä¿¡æ¯\r\n  allActList = [];\r\n  // è®°å½å½åéä¸­ç¨æ·æ´»å¨èç¹çbizActivityId\r\n  bizActivityId: string;\r\n\r\n  // æµç¨ç®¡çåä¿¡æ¯\r\n  isAdministratorConfig = false;\r\n  administrator: any;\r\n  organizations: any[] = new Array();\r\n\r\n\r\n  // å®¡æ¹æ´»å¨å±æ§æä¸¾===========================================================================================\r\n  public assignIterator: KeyMap[] = [{key: 'ALL', value: 'ææ'},\r\n    {key: 'ASSIGN', value: 'ææ´¾'},\r\n    {key: 'CLAIM', value: 'é¢ç¨'}];\r\n  public completeIterator: KeyMap[] = [{key: 'Preempt', value: 'æ¢å æ¨¡å¼'},\r\n    {key: 'Parallel', value: 'å¹¶è¡ä¼ç­¾'},\r\n    {key: 'Sequential', value: 'ä¸²è¡ä¼ç­¾'}];\r\n  public completeIterator4Claim: KeyMap[] = [{key: 'Preempt', value: 'æ¢å æ¨¡å¼'}];\r\n  public boolIterator: KeyMap[] = [{key: true, value: 'æ¯'},\r\n    {key: false, value: 'å¦'}];\r\n  // ä¼ç­¾ä¸åè®¸è·³è½¬\r\n  public noJump4Sign: KeyMap[] = [{key: false, value: 'å¦'}];\r\n  // =================================================================================================\r\n\r\n  // æµç¨å®ä¾ä¸ä¸æ-----------------------------------------------\r\n  procInstContext: VarEntity[] = [\r\n    {key: 'dataId', name: 'åæ®åç ', description: 'åæ®åç '},\r\n    {key: 'procInstId', name: 'æµç¨å®ä¾ID', description: 'æµç¨å®ä¾ID'},\r\n    {key: 'bizDefKey', name: 'å¥å£åæ®ID', description: 'å¥å£åæ®ID'},\r\n    {key: 'processDefinitionKey', name: 'æµç¨å®ä¹KEY', description: 'æµç¨å®ä¹KEY'},\r\n    {key: 'procInstCreator', name: 'æµç¨åèµ·äºº', description: 'æµç¨åèµ·äºº'},\r\n    {key: 'procInstDescription', name: 'æµç¨æè¦', description: 'æµç¨æè¦'},\r\n    {key: 'comment', name: 'å®¡æ¹æè§', description: 'å®¡æ¹æè§'}\r\n  ];\r\n\r\n  // å¬åä¸ä¸æ--------------------------------------------------\r\n  urgeContext: VarEntity[] = [\r\n    {key: 'dataId', name: 'åæ®åç ', description: 'åæ®åç '},\r\n    {key: 'procInstId', name: 'æµç¨å®ä¾ID', description: 'æµç¨å®ä¾ID'},\r\n    {key: 'bizDefKey', name: 'å¥å£åæ®ID', description: 'å¥å£åæ®ID'},\r\n    {key: 'processDefinitionKey', name: 'æµç¨å®ä¹KEY', description: 'æµç¨å®ä¹KEY'},\r\n    {key: 'procInstCreator', name: 'æµç¨åèµ·äºº', description: 'æµç¨åèµ·äºº'},\r\n    {key: 'procInstDescription', name: 'æµç¨æè¦', description: 'æµç¨æè¦'},\r\n    {key: 'comment', name: 'å®¡æ¹æè§', description: 'å®¡æ¹æè§'},\r\n    {key: 'bizDefName', name: 'æµç¨åç±»åç§°', description: 'æµç¨åç±»åç§°'},\r\n    {key: 'curLoginUsername', name: 'å½åç»å½äººåç§°', description: 'å½åç»å½äººåç§°'},\r\n    {key: 'procInstCreatorName', name: 'æµç¨åèµ·äººåç§°', description: 'æµç¨åèµ·äººåç§°'}\r\n  ];\r\n  /**\r\n   * æµç¨åæ°ä¸ä¸æ\r\n   */\r\n  formalParameterContext: VarEntity[] = [];\r\n\r\n  /**\r\n   * åä¸èä¸ä¸æ\r\n   */\r\n  participantContext: VarEntity[] = [\r\n    {\r\n      key: 'procInstCreator',\r\n      name: 'æµç¨åèµ·äºº',\r\n      description: 'æµç¨åèµ·äºº'\r\n    }, {\r\n      key: 'currentUser',\r\n      name: 'å½åæ§è¡äºº',\r\n      description: 'å½åæ§è¡äºº'\r\n    }, {\r\n      key: 'preActExecutors',\r\n      name: 'ä¸ä¸ä¸ªæ´»å¨çæ§è¡äºº',\r\n      description: 'ä¸ä¸ä¸ªæ´»å¨çæ§è¡äºº'\r\n    }];\r\n\r\n  /**\r\n   * æ´»å¨æä»¶åæ°ä¸ä¸æ\r\n   */\r\n  activityComponentContext: VarEntity[] = [\r\n    {\r\n      key: 'conclusionType',\r\n      name: 'ç»è®ºç±»å',\r\n      description: 'å®¡æ¹é¡¹æµè½¬æ¹åï¼1æ­£åï¼2ååï¼3ç»æ­¢'\r\n    }, {\r\n      key: 'conclusionValue',\r\n      name: 'ç»è®ºå¼',\r\n      description: 'å®¡æ¹é¡¹ç¼å·ï¼ä¾å¦ï¼\"Pass\"ã\"Back\"ã\"Refuse\"'\r\n    }];\r\n  processVariableContext: VarEntity[] = new Array();\r\n\r\n  private processVariables = new Array();\r\n\r\n  set ProcessVariables(variables: any[]) {\r\n    this.processVariables = variables;\r\n    this.setProcessVariableContext();\r\n  }\r\n\r\n  get ProcessVariables() {\r\n    return this.processVariables;\r\n  }\r\n\r\n  /**\r\n   * æ±æ¥çº§æ¬¡\r\n   */\r\n  dimensions = [\r\n    {value: 'directSuperior', text: 'ç´æ¥ä¸çº§'},\r\n    {value: 'higherSuperior', text: 'é´æ¥ä¸çº§'}\r\n  ];\r\n\r\n  /**\r\n   * å¯å¨æ¹å¼\r\n   */\r\n  startModeIterator: KeyMap[] = [\r\n    {key: 'DIRECT', value: 'ç´æ¥'},\r\n    {key: 'EXTERNAL_PROCESS', value: 'å¤é¨æµç¨'},\r\n    {key: 'SUB_PROCESS', value: 'å­æµç¨'}\r\n  ];\r\n\r\n  /**\r\n   * æ¾ç¤ºç»ç«¯\r\n   */\r\n  displayTerminal: KeyMap[] = [\r\n    {key: \"ALL\", value: 'çµèç«¯åç§»å¨ç«¯'},\r\n    {key: \"WEB\", value: 'çµèç«¯'},\r\n    {key: \"APP\", value: 'ç§»å¨ç«¯'}\r\n  ];\r\n\r\n  /**\r\n   * æ¶æ¯æ¸ éåè¡¨\r\n   */\r\n  messageChannels = new Array();\r\n\r\n  orgTypeCollection: { value, text }[] = [];\r\n\r\n  variableContextName(key: string) {\r\n    return this.participantContext.find(i => i.key === key).name;\r\n  }\r\n\r\n  ranksName(value: string) {\r\n    return this.dimensions.find(i => i.value === value).text;\r\n  }\r\n\r\n  getMessageChannels() {\r\n    const url = '/api/runtime/sys/v1.0/messageplatform/channel/getenabledchannels';\r\n    this.http.get(url).subscribe((re: any) => {\r\n      this.messageChannels = re;\r\n    });\r\n  }\r\n\r\n  getAdministratorInfo() {\r\n    this.getCurrentUser().subscribe(user => {\r\n      const userId = user.userId;\r\n      forkJoin(this.getAdministratorConfig(), this.getAdministrator(userId)).subscribe(re => {\r\n        this.isAdministratorConfig = re[0].currentValue === 'true' ? true : false;\r\n        this.administrator = re[1];\r\n        if (this.isAdministratorConfig && this.administrator && this.administrator.enable) {\r\n          forkJoin(this.administrator.administratorAuthorities.map(a => {\r\n            if (a.includeSubordinate) {\r\n              return this.getSysOrgWithAllSubsById(a.organization);\r\n            } else {\r\n              return this.getSysOrgById(a.organization);\r\n            }\r\n          })).subscribe((r: any[]) => {\r\n            if (r && r.length > 0) {\r\n              this.organizations = new Array();\r\n              for (const orgs of r) {\r\n                if (orgs && orgs.length > 0) {\r\n                  for (const o of orgs) {\r\n                    if (!this.organizations.some(org => org.id === o.id)) {\r\n                      this.organizations.push(o);\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  private getCurrentUser(): Observable<any> {\r\n    const url = '/api/runtime/sys/v1.0/userinfos?infoType=user';\r\n    return this.http.get(url);\r\n  }\r\n\r\n  private getAdministrator(userId: string): Observable<any> {\r\n    const url = `/api/runtime/wf/v1.0/processAdministrator/${userId}`;\r\n    return this.http.get(url);\r\n  }\r\n\r\n  private getAdministratorConfig(): Observable<any> {\r\n    const url = `/api/runtime/wf/v1.0/generalConfig/Is_EnableAdministrator`;\r\n    return this.http.get(url);\r\n  }\r\n\r\n  private getSysOrgById(orgId: string): Observable<any> {\r\n    const url = `/api/runtime/sys/v1.0/sysOrgs/${orgId}`;\r\n    return this.http.get(url);\r\n  }\r\n\r\n  private getSysOrgWithAllSubsById(orgId: string): Observable<any> {\r\n    const url = `/api/runtime/sys/v1.0/sysOrgs?param=` + encodeURIComponent(`{\"parentId\":\"${orgId}\",\"withAllSub\":true}`);\r\n    return this.http.get(url);\r\n  }\r\n\r\n  private getCurUserInfo(userId: string): Observable<any> {\r\n    const url = `/api/runtime/sys/v1.0/users/${userId}`;\r\n    return this.http.get(url);\r\n  }\r\n\r\n  private setProcessVariableContext() {\r\n    this.processVariableContext = new Array();\r\n    if (this.ProcessVariables && this.ProcessVariables.length > 0) {\r\n      for (const v of this.ProcessVariables) {\r\n        const varEntity = {\r\n          key: v.name,\r\n          name: v.documentation,\r\n          description: v.description\r\n        };\r\n        this.processVariableContext.push(varEntity);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * è·åæ¡æ¶çé¡¶çº§window\r\n   * è¿è¡è·¨åå°è£\r\n   */\r\n  private getTopWindow(): Window {\r\n    let curWin: Window = window.self;\r\n    try {\r\n        while (curWin.location.origin === curWin.parent.location.origin) {\r\n            if (curWin !== curWin.parent && !(curWin as any).isRTFTopWin) {\r\n                curWin = curWin.parent;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n    } catch (e) { }\r\n    return curWin;\r\n  }\r\n\r\n  // --------------------------0-------------------------\r\n\r\n  // uiStateåå§\r\n  initUIState() {\r\n    this.propertyConfig = [];\r\n    this.propertyData = null;\r\n    this.content = '';\r\n    this.schemas = [];\r\n  }\r\n\r\n  /**\r\n   * è·åææå®¡æ¹èç¹ä¿¡æ¯\r\n   * @param data\r\n   */\r\n  getUserActList(data: any[]) {\r\n    this.userActList = [];\r\n    if (data && data.length > 0) {\r\n      for (const userAct of data) {\r\n        const userActInfo = {\r\n          Id: userAct.Id,\r\n          Name: userAct.Name\r\n        };\r\n        this.userActList.push(userActInfo);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * è·åææç»æèç¹ä¿¡æ¯\r\n   * @param data\r\n   */\r\n     getEndEventList(data: any[]) {\r\n      this.allActList = [];\r\n      if (data && data.length > 0) {\r\n        for (const endEvent of data) {\r\n          const endEventInfo = {\r\n            Id: endEvent.Id,\r\n            Name: endEvent.Name\r\n          };\r\n          // åç»æèç¹å­å°\r\n          this.allActList.push(endEventInfo);\r\n        }\r\n      }\r\n      // å­å¥å®¡æ¹æ´»å¨èç¹\r\n      this.allActList = this.allActList.concat(this.userActList);\r\n    }\r\n}\r\n\r\n\r\n","export enum ResourceKeys {\r\n    // ååºå¨ä½\r\n    new = 'new',                                    // æ°å»ºæµç¨\r\n    open = 'open',                                  // æå¼æµç¨\r\n    updateProperty = 'updateProperty',              // æ´æ°å±æ§\r\n    refresh = 'refresh',                            // å·æ°å±æ§æ¡\r\n    loadBizActivity = 'loadBizActivity',            // åºäºæµç¨åç±»å è½½ä¸å¡æ´»å¨\r\n\r\n    // æ¥åæ¶æ¯\r\n    wf_initProperty = 'initProperty',               // åå§å±æ§æ¡\r\n    wf_save = 'save',                               // ä¿å­æµç¨\r\n    wf_saveAs = 'saveAs',                           // å¦å­ä¸º\r\n    wf_sync = 'wf_sync',                            // åæ­¥æµç¨\r\n    wf_note = 'wf_note',                            // è®°å½åæ´\r\n    wf_deploy = 'release',                          // åå¸æµç¨\r\n    wf_closeDesigner = 'closeDesigner',             // å³é­æµç¨è®¾è®¡å¨\r\n    getActivities = 'getActivities',                // è·åæ´»å¨èç¹\r\n    getEndEvents = 'getEndEvents',                  //  è·åç»æèç¹\r\n    wf_showTip = 'showTip',\r\n    /**\r\n     * å±æ§åç§°\r\n     */\r\n    EntryForm = 'EntryForm',                        // æµç¨åç±»\r\n    ConditionExpression = 'ConditionExpression',    // æ¡ä»¶è¡¨è¾¾å¼\r\n    ParticipantSchemes = 'ParticipantSchemes',      // åä¸è\r\n    ApprovalItems = 'ApprovalItems',                // å®¡æ¹é¡¹\r\n    AssignStrategy = 'AssignStrategy',              // åéç­ç¥\r\n    OperatorConfig = 'OperatorConfig',              // åéç­ç¥éç½®\r\n    CompleteStrategy = 'CompleteStrategy',          // å®æç­ç¥\r\n    SignRule = 'SignRule',                          // ä¼ç­¾è§å\r\n    Retrievable = 'Retrievable',                    // åè®¸åå\r\n    AddSignFrontAble = 'AddSignFrontAble',          // åè®¸å¾è¯¢\r\n    AddSignBehindAble = 'AddSignBehindAble',        // åè®¸å ç­¾\r\n    NotifyAble = 'NotifyAble',                      // åè®¸ç¥ä¼\r\n    DisplayTerminal = 'DisplayTerminal',            // æ¾ç¤ºç»ç«¯\r\n    ExecuteForms = 'ExecuteForms',\r\n    sendBackedTask = 'sendBackedTask',\r\n    SelectTargetAble = 'SelectTargetAble',          // åè®¸è°æ´\r\n    JumpScope = 'JumpScope',                        // è·³è½¬è§å\r\n    BackWardRule = 'BackWardRule',                  // é©³åè§å\r\n    Tools = 'Tools',\r\n    SelectBranch = 'SelectBranch',\r\n    Default = 'Default',                            // é»è®¤åæ¯\r\n    allowPreAssign = 'allowPreAssign',\r\n    startMode = 'startMode',\r\n    transferScope = 'transferScope',                // ç§»äº¤èå´\r\n    eventDefinitions = 'EventDefinitions',\r\n    urgeHandleRule = 'urgeHandleRule',\r\n\r\n    // å­æµç¨\r\n    callActivitySubProcess = 'callActivitySubProcess',\r\n\r\n    wf_Component = 'wf_Component',\r\n    wf_ExecuteForms = 'wf_ExecuteForms',\r\n    wf_ExecuteForms_PC = 'wf_ExecuteForms_PC',\r\n    wf_ExecuteForms_Mobile = 'wf_ExecuteForms_Mobile',\r\n    wf_TitleExpression = 'wf_TitleExpression',\r\n    wf_CustomizeAction = 'wf_CustomizeAction',\r\n    timeLimitControl = 'timeLimitControl',\r\n    anonymousSet = 'anonymousSet',\r\n    processVariables = 'processVariables',\r\n    variableSettings = 'variableSettings',\r\n    messageNotice = 'messageNotice',\r\n    approvalPivotConfig = 'approvalPivotConfig',\r\n    // state\r\n    complete = 'complete',\r\n    // åæ®æµç¼å·\r\n    aifProcessCode = 'aifProcessCode',\r\n    // isRelied\r\n    isRelied = 'isRelied',\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\n\r\nexport class ProcessDeUtil {\r\n\r\n    private static generatedId: number = parseInt(Date.now().toString());\r\n    private static keys = '0123456789ABCDEFGHJKLMNPQRSTUVWXYZ';\r\n    private static exponent = 34;\r\n\r\n    public funcId: string;\r\n    constructor() { }\r\n\r\n    static GenerateElementId(): string {\r\n        ++(this.generatedId);\r\n\r\n        return '_' + this.Decimal2String(this.generatedId);\r\n    }\r\n\r\n    private static Decimal2String(a: number) {\r\n        let c: number;\r\n        let b = '';\r\n        do {\r\n            c = a % this.exponent, b = this.keys[c] + b, a = (a - c) / this.exponent;\r\n        }\r\n        while (a > 0);\r\n        return b;\r\n    }\r\n    /**\r\n     * åå»ºåç \r\n     */\r\n    static createNM() {\r\n        function S4() {\r\n            return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n        }\r\n        return (S4() + S4() + '-' + S4() + '-' + S4() + '-' + S4() + '-' + S4() + S4() + S4());\r\n        // return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\r\n        //     const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\r\n        //     return v.toString(16);\r\n        // });\r\n    }\r\n\r\n    getProcessDesignerRouter() {\r\n        const url = 'processList';\r\n        return url;\r\n    }\r\n    // è·åæµç¨åç±»webapi\r\n    getFlowFormWebApi() {\r\n        return '/api/runtime/wf/v1.0/flowForm';\r\n    }\r\n    // è·ååæ°åè¡¨webapi\r\n    getFormalParametersWebApi() {\r\n        return '/api/runtime/wf/v1.0/formalParameter';\r\n    }\r\n    // è·åè¿è¡æ¶åæ°æ®webapi\r\n    getMetaDataRUWebApi() {\r\n        return '/api/runtime/lcm/v1.0/rt-metadatas/';\r\n    }\r\n    // è·åæµç¨æä»¶webapi\r\n    getBizComponentsWebApi() {\r\n        return '/api/runtime/wf/v1.0/bizComponent';\r\n    }\r\n    // åºäºæµç¨åç±»è·åè¡¨åå®ä¹\r\n    getExcuteFormsWebApi() {\r\n        return '/api/runtime/wf/v1.0/excuteForm';\r\n    }\r\n    // è·åè®¾è®¡æ¶æµç¨å®ä¹WebAPi\r\n    getProcessDefinitionWebApi() {\r\n        return '/api/runtime/wf/v1.0/dtProcDefs';\r\n    }\r\n\r\n    // å¤æ­æ¯å¦åè®¸å é¤æµç¨å®ä¹çapi\r\n    getCheckExistActiveProcDefApi() {\r\n        return '/api/runtime/wf/v1.0/procDefs/checkExistActiveProcDef';\r\n    }\r\n    /**\r\n     * è·åä¸å¡æ´»å¨webApi\r\n     */\r\n    getBizActivityWebApi(ffId: string) {\r\n        return `/api/runtime/wf/v1.0/bizActivity?flowFormKey=${ffId}`;\r\n    }\r\n\r\n    getProcDefKeyWebApi() {\r\n        return '/api/runtime/wf/v1.0/procDefs/processDefinitionKeys';\r\n    }\r\n    // /**\r\n    //  * ä¸å¡æ´»å¨æä»¶webApi\r\n    //  */\r\n    // getBizActCptWebApi() {\r\n    //     return '/api/runtime/wf/v1.0/BizActivities/GetComponents';\r\n    // }\r\n    /**\r\n     * åå¸æµç¨api\r\n     */\r\n    deployWebApi() {\r\n        return '/api/runtime/wf/v1.0/procDefs/deploy';\r\n    }\r\n    /**\r\n     * ä¿å­æµç¨api\r\n     */\r\n    saveWebApi() {\r\n        return '/api/runtime/wf/v1.0/DTProcessDefinitions/SaveBpmnModel';\r\n    }\r\n    /**\r\n     * è·åå®¡æ¹å¨ä½webapi\r\n     */\r\n    getApprovalActionWebApi() {\r\n        return '/api/runtime/wf/v1.0/approvalAction';\r\n    }\r\n\r\n    /**\r\n     * è·åè¿è¡æ¶æµç¨å®ä¹WebAPi\r\n     */\r\n    getRTProcessDefinitionWebApi() {\r\n        return '/api/runtime/wf/v1.0/procDefs';\r\n    }\r\n\r\n    getValue(data: any, code: string): string {\r\n        if (!code) {\r\n            return '';\r\n        }\r\n        let resultVal = '';\r\n        if (code.indexOf('.') === -1) {\r\n            resultVal = data[code];\r\n        } else {\r\n            resultVal = code.split('.').reduce((obj, key) => {\r\n                if (obj) {\r\n                    return obj[key];\r\n                } else {\r\n                    return null;\r\n                }\r\n            }, data);\r\n        }\r\n        return resultVal;\r\n    }\r\n    /**\r\n     * è½¬æ¢\r\n     * @param jsonObj Object\r\n     */\r\n    toUpperCase(jsonObj: Object): any {\r\n        if (typeof (jsonObj) === 'object') {\r\n            for (const key of Object.keys(jsonObj)) {\r\n                jsonObj[key.substring(0, 1).toUpperCase() + key.substring(1)] = jsonObj[key];\r\n                delete (jsonObj[key]);\r\n            }\r\n        }\r\n        return jsonObj;\r\n    }\r\n    toLowCase(jsonObj: Object): any {\r\n        if (typeof (jsonObj) === 'object') {\r\n            for (const key of Object.keys(jsonObj)) {\r\n                if ((key.substring(0, 1).toLowerCase() + key.substring(1)) !== key) {\r\n                    jsonObj[key.substring(0, 1).toLowerCase() + key.substring(1)] = jsonObj[key];\r\n                    delete (jsonObj[key]);\r\n                }\r\n            }\r\n        }\r\n        return jsonObj;\r\n    }\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { map, mergeMap } from 'rxjs/operators';\r\nimport { forkJoin } from 'rxjs/observable/forkJoin';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { ProcessDeUtil } from './process-de-util';\r\nimport { AuditProcessDefInfo } from './entities/audit-processDef-info';\r\nimport { ProcessInfo } from '../model/process-info';\r\nimport { RTProcessInfo } from '../model/rt-process-info';\r\n\r\n@Injectable()\r\nexport class ProcessDesignerDataService {\r\n    constructor(\r\n        private http: HttpService,\r\n        private util: ProcessDeUtil) { }\r\n\r\n    // åºäºæµç¨åç±»IDè·åæµç¨åç±»ä¿¡æ¯\r\n    GetFlowFormbyId(id: string): Observable<any> {\r\n        if (id) {\r\n            let url = this.util.getFlowFormWebApi();\r\n            url += `/${id}`;\r\n            return this.http.get(url);\r\n        }\r\n    }\r\n    // åºäºæµç¨åç±»è·ååæ°åè¡¨\r\n    getParametersbyFlowFormKey(id: string): Observable<any> {\r\n        if (id) {\r\n            let url = this.util.getFormalParametersWebApi();\r\n            url += `?flowFormKey=${id}`;\r\n            return this.http.get(url);\r\n        }\r\n    }\r\n    // åºäºæµç¨åç±»è·åæµç¨æä»¶\r\n    getComponentsbyFlowformkey(id: string): Observable<any> {\r\n        if (id) {\r\n            let url = this.util.getBizComponentsWebApi();\r\n            url += `/query?param=` + encodeURIComponent(`{\"flowFormKey\":\"${id}\"}`);\r\n            return this.http.get(url);\r\n        }\r\n    }\r\n    // åºäºæµç¨åç±»è·åè¡¨åå®ä¹\r\n    getExecuteFormbyFlowFormKey(id: string): Observable<any> {\r\n        if (id) {\r\n            let url = this.util.getExcuteFormsWebApi();\r\n            url += `?flowFormKey=${id}`;\r\n            return this.http.get(url);\r\n        }\r\n    }\r\n    /**\r\n     * åºäºæµç¨åç±»Idè·åä¸å¡æ´»å¨\r\n     * @param ffId æµç¨åç±»id\r\n     */\r\n    getBizActivities(ffId: string) {\r\n        if (ffId) {\r\n            const url = this.util.getBizActivityWebApi(ffId);\r\n            return this.http.get(url);\r\n                // .pipe(\r\n                //     map((re: any) => re),\r\n                //     mergeMap((activities: any[]) => {\r\n                //         if (activities && activities.length > 0) {\r\n                //             return forkJoin(activities.map(activity => {\r\n                //                 return forkJoin(this.getBizActivityComponents(ffId, activity.id),\r\n                //                     this.getBizActivityActions(activity.id))\r\n                //                     .pipe(\r\n                //                         map((re: any[]) => {\r\n                //                             activity.components = re[0];\r\n                //                             activity.actions = re[1];\r\n                //                             return activity;\r\n                //                         }));\r\n                //             }));\r\n                //         } else {\r\n                //             return of([]);\r\n                //         }\r\n                //     })\r\n                // );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * åºäºæµç¨åç±»IDè·åèªå®ä¹å¨ä½\r\n     * @param formId æµç¨åç±»ID\r\n     */\r\n    getCustomizeActions(formId: string): Observable<any> {\r\n        if (formId) {\r\n            const url = `/api/runtime/wf/v1.0/customizeAction?flowFormKey=${formId}`;\r\n            return this.http.get(url);\r\n        }\r\n    }\r\n    /**\r\n     * åºäºä¸å¡æ´»å¨idè·åä¸å¡æ´»å¨æä»¶\r\n     * @param id ä¸å¡æ´»å¨id\r\n     */\r\n    private getBizActivityComponents(flowFormId: string, id: string) {\r\n        if (id) {\r\n            let url = this.util.getBizComponentsWebApi();\r\n            url += `/query?param=` + encodeURIComponent(`{\"flowFormKey\":\"${flowFormId}\",\"owner\":\"${id}\",\"ownerType\":\"Activity\"}`);\r\n            return this.http.get(url);\r\n        }\r\n    }\r\n    private getBizActivityActions(id: string) {\r\n        if (id) {\r\n            let url = this.util.getApprovalActionWebApi();\r\n            url += `?bizActivityId=${id}`;\r\n\r\n            return this.http.get(url);\r\n        }\r\n    }\r\n    // åºäºIDè·åBE\r\n    getBusinessEntitybyId(id: string): Observable<any> {\r\n        if (id) {\r\n            // let url = this.util.getMetaDataRUWebApi();\r\n            // url += id;\r\n            // const url = `/api/runtime/lcm/v1.0/bef/handledBeMeta?beId=${id}`;\r\n            const url = `/api/runtime/lcm/v1.0/bef/expression?beId=${id}`;\r\n            return this.http.get(url);\r\n        }\r\n    }\r\n    /**\r\n     * åºäºæµç¨å®ä¹Keyè·åä¸ä¸æ\r\n     * @param key æµç¨å®ä¹key\r\n     */\r\n    getProcContentbyKey(key: string): Observable<any> {\r\n        if (key) {\r\n            let url = this.util.getProcessDefinitionWebApi();\r\n            url += `/bpmnModel?procDefKey=${key}`;\r\n            return this.http.get(url);\r\n        }\r\n    }\r\n    /**\r\n     * åºäºæµç¨å®ä¹Keyè·åä¸ä¸æ\r\n     * @param key æµç¨å®ä¹Id\r\n     */\r\n    getRTProcContentbyId(id: string): Observable<any> {\r\n        if (id) {\r\n            let url = this.util.getRTProcessDefinitionWebApi();\r\n            url += `/${id}/bpmnModel`;\r\n            return this.http.get(url);\r\n        }\r\n    }\r\n    /**\r\n     * ä¿å­æµç¨\r\n     * @param content\r\n     */\r\n    saveProcess(content: string, processInfo: ProcessInfo, state: number): Observable<any> {\r\n        if (content) {\r\n            const postData = {\r\n                organization: processInfo.procOrg ? processInfo.procOrg.orgId : '',\r\n                organizationName: processInfo.procOrg ? processInfo.procOrg.orgName : '',\r\n                accessLevel: processInfo.accessLevel,\r\n                procContent: content,\r\n                state\r\n            };\r\n            const url = this.util.getProcessDefinitionWebApi();\r\n            return this.http.post(url, JSON.stringify(postData));\r\n        }\r\n    }\r\n\r\n    auditProcessDef(info: AuditProcessDefInfo) {\r\n        const url = '/api/runtime/wf/v1.0/dtProcDefs/auditProcessDef';\r\n        this.http.post(url, info).subscribe(re => { });\r\n    }\r\n\r\n    /**\r\n     * åå¸æµç¨\r\n     * @param content\r\n     */\r\n    deployProcess(content: string): Observable<any> {\r\n        if (content) {\r\n            const postData = {\r\n                procDefContent: content\r\n            };\r\n            const url = this.util.deployWebApi();\r\n            return this.http.post(url, JSON.stringify(postData));\r\n        }\r\n    }\r\n\r\n    saveRTProcess(content: string, procDefId: string): Observable<any> {\r\n        if (content) {\r\n            const postData = {\r\n                procDefContent: content\r\n            };\r\n            let url = this.util.getRTProcessDefinitionWebApi();\r\n            url += `/${procDefId}/adjust`;\r\n            return this.http.post(url, JSON.stringify(postData));\r\n        }\r\n    }\r\n\r\n    syncDtProcess(content: string, rtProcessInfo: RTProcessInfo): Observable<any> {\r\n        if (content) {\r\n            const postData = {\r\n                organization: rtProcessInfo.procOrg ? rtProcessInfo.procOrg.orgId : '',\r\n                organizationName: rtProcessInfo.procOrg ? rtProcessInfo.procOrg.orgName : '',\r\n                accessLevel: rtProcessInfo.accessLevel || 'public',\r\n                procContent: content,\r\n                state: 0\r\n            };\r\n            const url = '/api/runtime/wf/v1.0/dtProcDefs';\r\n            return this.http.post(url, JSON.stringify(postData));\r\n        }\r\n    }\r\n}\r\n","export enum ProcessClrTypeID {\r\n    /**\r\n     * æµç¨typeId\r\n     */\r\n    process = 'bpmn.Process',\r\n    /**\r\n     * å¼å§æ´»å¨typeId\r\n     */\r\n    startActivity = 'wf.StartActivity',\r\n    /**\r\n     * æ´»å¨èç¹typeId\r\n     */\r\n    userActivity = 'wf.UserActivity',\r\n    /**\r\n     * äººå·¥æä½typeId\r\n     */\r\n    operationActivity = 'wf.OperationActivity',\r\n    /**\r\n     * ç»ææ´»å¨typeId\r\n     */\r\n    endEvent = 'bpmn.EndEvent',\r\n    /**\r\n     * æµè½¬çº¿typeId\r\n     */\r\n    sequenceFlow = 'bpmn.SequenceFlow',\r\n    /**\r\n     * æä»ç½å³typeId\r\n     */\r\n    exclusiveGateway = 'bpmn.ExclusiveGateway',\r\n    /**\r\n     * å¹¶è¡ç½å³typeId\r\n     */\r\n    parallelGateway = 'bpmn.ParallelGateway',\r\n\r\n    /**\r\n     * å­æµç¨\r\n     */\r\n    subProcess = 'wf.CallActivitySubProcess',\r\n\r\n    /**\r\n     * æå¡æ´»å¨\r\n     */\r\n    autoActivity = 'wf.AutoActivity',\r\n\r\n    /**\r\n     * ä¿¡å·æè·\r\n     */\r\n    catchEvent = 'wf.IntermediateCatchEventImpl',\r\n\r\n    /**\r\n     * æ¶æ¯\r\n     */\r\n    messageActivity = 'wf.MessageActivity',\r\n\r\n    /**\r\n     * ç¥ä¼æ´»å¨\r\n     */\r\n    notifyActivity = \"wf.NotifyActivity\",\r\n\r\n    /**\r\n     * çåæ´»å¨\r\n     */\r\n    aifCreationBillActivity = \"wf.AifCreationBillActivity\",\r\n}\r\n","import { Component, OnInit, Output, Input, ViewChild, EventEmitter, TemplateRef, AfterViewInit } from '@angular/core';\r\nimport { DataTableComponent } from '@farris/ui-datatable';\r\nimport { TypeConverter } from '@farris/ui-property-panel';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { DatagridComponent } from '@farris/ui-datagrid';\r\nimport { MessagerService } from '@farris/ui-messager';\r\n\r\n@Component({\r\n  selector: 'app-entry-form-editor',\r\n  templateUrl: './entry-form-editor.component.html',\r\n  styleUrls: ['./entry-form-editor.component.css']\r\n})\r\nexport class EntryFormEditorComponent implements OnInit, AfterViewInit {\r\n\r\n  @Output() closeModal = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n\r\n  @Input()\r\n  set value(data: any) {\r\n    if (data) {\r\n      this.flowFormId = data.id;\r\n    }\r\n  }\r\n\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n\r\n  @ViewChild('grid') grid: DatagridComponent;\r\n\r\n  @Input() editorParams: any = {};\r\n\r\n  private flowFormId: string;\r\n  modalConfig = {\r\n    title: 'æµç¨åç±»',\r\n    width: 540,\r\n    height: 520,\r\n    showButtons: true\r\n  };\r\n\r\n  columns = [\r\n    { title: 'ç¼å·', field: 'code', width: 100, sortable: true },\r\n    { title: 'åç§°', field: 'name', width: 100, sortable: true },\r\n    { title: 'ç±»å', field: 'base', width: 60, formatter: { type: 'boolean', options: { trueText: 'åºç¡', falseText: 'æ©å±' } }}\r\n  ];\r\n\r\n  data = [];\r\n\r\n  constructor(\r\n    private http: HttpService,\r\n    private message: MessagerService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getBaseAndExtendFlowForm();\r\n  }\r\n  ngAfterViewInit() {\r\n  }\r\n\r\n  clickOK() {\r\n    if (!this.grid.selectedRow) {\r\n      this.message.info('å°æªéæ©æµç¨åç±»');\r\n      return;\r\n    }\r\n    const object = { value: this.grid.selectedRow.data, parameters: null };\r\n    this.submitModal.emit(object);\r\n  }\r\n\r\n  clickCancel() {\r\n    this.closeModal.emit();\r\n  }\r\n\r\n  private getBaseAndExtendFlowForm() {\r\n    if (this.flowFormId) {\r\n      const url = `/api/runtime/wf/v1.0/flowForm/${this.flowFormId}/baseAndExtend`;\r\n      this.http.get(url).subscribe((re: any) => {\r\n        if (re && re.length > 0) {\r\n          this.data = re;\r\n          setTimeout(() => {\r\n            this.grid.selectRow(this.flowFormId, true);\r\n          }, 0);\r\n        } else {\r\n          this.message.info('æµç¨åç±»å·²ç»ä¸å­å¨');\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\nexport class FlowFormConverter implements TypeConverter {\r\n  constructor() { }\r\n\r\n  convertTo(data): string {\r\n    if (data) {\r\n      return data.name;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { BizComponentEntity } from '../../domain/entities/biz-component.entity';\r\nimport { ActualParameter } from '../../domain/entities/actual-parameter';\r\n\r\n@Injectable()\r\n\r\nexport class ActivityComponentUIState {\r\n    /**\r\n     * æä»¶åè¡¨\r\n     */\r\n    components: BizComponentEntity[] = [];\r\n    /**\r\n     * éä¸­æä»¶\r\n     */\r\n    curComponent: BizComponentEntity;\r\n    /**\r\n     * æµç¨åç±»ç»å®çæææ´»å¨æä»¶\r\n     */\r\n    allComponents: BizComponentEntity[] = [];\r\n    /**\r\n     * æä»¶æ§è¡æ¶æºæ°æ®ç»å®\r\n     */\r\n    public executionCollection = [\r\n        // { text: 'æµç¨åå»º', value: 'PROCESSINSTANCE_CREATED' },\r\n        { text: 'æµç¨å¯å¨', value: 'PROCESSINSTANCE_STARTED' },\r\n        { text: 'æµç¨æèµ·', value: 'PROCESSINSTANCE_SUSPENDED' },\r\n        { text: 'æµç¨æ¢å¤', value: 'PROCESSINSTANCE_RESUMED' },\r\n        { text: 'æµç¨å®æ', value: 'PROCESSINSTANCE_COMPLETED' },\r\n        { text: 'æµç¨ç»æ­¢', value: 'PROCESSINSTANCE_ABORTED' },\r\n        // { text: 'æµç¨é¢è­¦', value: 'PROCESSINSTANCE_ALARM' },\r\n        // { text: 'æµç¨è¶æ¶', value: 'PROCESSINSTANCE_TIMEOUT' },\r\n        // { text: 'æµç¨å é¤', value: 'PROCESSINSTANCE_DELETED' },\r\n        { text: 'æµç¨åæ¶', value: 'PROCESSINSTANCE_CANCELED' },\r\n        { text: 'æµç¨å¤æ´»', value: 'PROCESSINSTANCE_REACTIVATED' },\r\n        { text: 'æµç¨é©³å', value: 'PROCESSINSTANCE_ROLLBACK' },\r\n        { text: 'éæ°æäº¤', value: 'PROCESSINSTANCE_RESUBMIT' },\r\n        { text: 'ç¯èåçäººåæ´', value: 'ACTIVITY_AND_PARTICIPANT_UPDATED' },\r\n        { text: 'ç®¡çåç»æ­¢', value: 'PROCESSINSTANCE_ABORTED_BY_ADMIN' },\r\n        { text: 'æµç¨å¯å¨å', value: 'PROCESSINSTANCE_BEFORE_START' },\r\n        { text: 'ä»»å¡å®æå', value: 'WORKITEM_BEFORE_COMPLETE' },\r\n        { text: 'ä»»å¡å®æå', value: 'WORKITEM_AFTER_COMPLETE' },\r\n        { text: 'è·åæ°æ®', value: 'LOADDATA' }\r\n    ];\r\n    activityCollection = [\r\n        // { text: 'æ´»å¨åå»º', value: 'ACTIVITY_CREATED' },\r\n        { text: 'æ´»å¨å¯å¨', value: 'ACTIVITY_STARTED' },\r\n        // { text: 'æ´»å¨æèµ·', value: 'ACTIVITY_SUSPENDED' },\r\n        // { text: 'æ´»å¨æ¢å¤', value: 'ACTIVITY_RESUMED' },\r\n        { text: 'æ´»å¨å®æ', value: 'ACTIVITY_COMPLETED' },\r\n        { text: 'æ´»å¨ç»æ­¢', value: 'ACTIVITY_ABORTED' },\r\n        { text: 'å·¥ä½é¡¹åå»º', value: 'WORKITEM_CREATED' },\r\n        { text: 'å·¥ä½é¡¹å®æ', value: 'WORKITEM_COMPLETED' },\r\n        { text: 'å·¥ä½é¡¹æèµ·', value: 'WORKITEM_SUSPENDED' },\r\n        { text: 'å·¥ä½é¡¹æ¢å¤', value: 'WORKITEM_RESUMED' },\r\n        { text: 'å·¥ä½é¡¹ç»æ­¢', value: 'WORKITEM_ABORTED' },\r\n        { text: 'å·¥ä½é¡¹åå', value: 'WORKITEM_RETRIEVED' },\r\n        { text: 'å·¥ä½é¡¹é¢ç¨', value: 'WORKITEM_CLAIMED' },\r\n        { text: 'å·¥ä½é¡¹åé¢ç¨', value: 'WORKITEM_UNCLAIMED' },\r\n        { text: 'ä»»å¡åéå', value: 'ACTIVITY_ASSIGNMENT' }\r\n    ];\r\n}\r\n","import { ActualParameter } from './actual-parameter';\r\nimport { ProcessDeUtil } from '../process-de-util';\r\n\r\nexport class BizComponentEntity {\r\n    constructor(name?: string, metadataid?: string, method?: string) {\r\n        this.id = ProcessDeUtil.GenerateElementId();\r\n        this.name = name;\r\n        this.metadataId = metadataid;\r\n        this.methodCode = method;\r\n        this.isForCompensation = false;\r\n    }\r\n    id: string;\r\n    name: string;\r\n    flowFormKey?: string;\r\n    bizActivityId?: string;\r\n    componentLocation?: ComponentLocation;\r\n    executionTime: string;\r\n    metadataId: string;\r\n    methodCode: string;\r\n    methodName?: string;\r\n    actualParameters: Array<ActualParameter>;\r\n    owner: string;\r\n    ownerType: OwnerType;\r\n    isForCompensation?: boolean;\r\n    condition?: string;\r\n}\r\nexport enum ComponentLocation {\r\n    Process = 0,\r\n    Activity = 1\r\n}\r\nexport enum OwnerType {\r\n    Process = 'Process',\r\n    Activity = 'Activity',\r\n    Schema = 'Schema'\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivityComponentUIState } from './activity-component.uistate';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { map } from 'rxjs/operators';\r\nimport { BizComponentEntity, ComponentLocation, OwnerType } from '../../domain/entities/biz-component.entity';\r\nimport { GspComponent } from '@gsp-cmp/common-component';\r\nimport { ActualParameter } from '../../domain/entities/actual-parameter';\r\nimport { Parameter } from '@ecp-caf/common-structure';\r\nimport { ProcessDesignerUIState } from '../../app/process-designer.uistate';\r\nimport { Subject } from 'rxjs';\r\nimport { ProcessDeUtil } from '../../domain/process-de-util';\r\n@Injectable()\r\n\r\nexport class ActivityComponentRepository {\r\n    private defaultProcessComponentIds = ['5863c8a8-e0a7-4137-a8b2-4c05e42b3b73', 'be781ba1-a88b-4bb8-9c88-2e2a27a9226e'];\r\n\r\n    subject: Subject<BizComponentEntity> = new Subject<BizComponentEntity>();\r\n    constructor(\r\n        private uistate: ActivityComponentUIState,\r\n        private util: ProcessDeUtil,\r\n        private http: HttpService,\r\n        private designerState: ProcessDesignerUIState\r\n    ) { }\r\n\r\n    loadComponents(flowFormId: string, bizActId: string) {\r\n        let url = this.util.getBizComponentsWebApi();\r\n        if (bizActId) {\r\n            url += `/query?param=` + encodeURIComponent(`{\"flowFormKey\":\"${flowFormId}\",\"owner\":\"${bizActId}\",\"ownerType\":\"Activity\"}`);\r\n        } else {\r\n            this.uistate.allComponents = [];\r\n            return;\r\n        }\r\n        this.http.get(url).subscribe((data: any) => {\r\n            this.uistate.allComponents = data.filter((c: BizComponentEntity) => c.ownerType === OwnerType.Activity);\r\n        });\r\n    }\r\n    removeComponent(id: string) {\r\n        if (id) {\r\n            const index = this.uistate.components.findIndex(c => c.id === id);\r\n            if (index > -1) {\r\n                this.uistate.components.splice(index, 1);\r\n\r\n                if (this.uistate.components.length > 0) {\r\n                    this.subject.next(this.uistate.components[0]);\r\n                } else {\r\n                    this.uistate.curComponent = null;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    addComponent(cpt: GspComponent) {\r\n        if (cpt) {\r\n            const component = new BizComponentEntity(cpt.name, cpt.id, cpt.operations[0].code);\r\n            component.id = ProcessDeUtil.GenerateElementId();\r\n            component.actualParameters = this.bindParas(cpt);\r\n\r\n            this.uistate.components.push(component);\r\n\r\n            this.subject.next(component);\r\n        }\r\n    }\r\n    private bindParas(component: GspComponent): ActualParameter[] {\r\n        let parameters = [];\r\n\r\n        if (component.operations[0].parameters && component.operations[0].parameters.length > 0) {\r\n            if (this.defaultProcessComponentIds.indexOf(component.id) > -1) {\r\n                parameters = this.assignParameterValue(component.operations[0].parameters);\r\n            } else {\r\n                parameters = component.operations[0].parameters.map(p => ({ code: p.code, name: p.name, value: '' }));\r\n            }\r\n        }\r\n        return parameters;\r\n    }\r\n    private assignParameterValue(params: Parameter[]): ActualParameter[] {\r\n        return params.map(p => {\r\n            if (p.code.indexOf('beId') > -1) {\r\n                const v = this.designerState.formalParameterContext.filter(c => c.key.indexOf('metadataId') > -1)[0].key;\r\n                return { code: p.code, name: p.name, value: `{\"expr\":\"DefaultFunction.GetContextParameter(\\\\\"${v}\\\\\")\"}` };\r\n            } else if (p.code.indexOf('nodeId') > -1) {\r\n                const v = this.designerState.formalParameterContext.filter(c => c.key.indexOf('schemaId') > -1)[0].key;\r\n                return { code: p.code, name: p.name, value: `{\"expr\":\"DefaultFunction.GetContextParameter(\\\\\"${v}\\\\\")\"}` };\r\n            } else if (p.code.indexOf('dataId') > -1) {\r\n                return { code: p.code, name: p.name, value: `{\"expr\":\"DefaultFunction.GetContextParameter(\\\\\"dataId\\\\\")\"}` };\r\n            } else if (p.code.indexOf('procInstId') > -1) {\r\n                return { code: p.code, name: p.name, value: `{\"expr\":\"DefaultFunction.GetContextParameter(\\\\\"procInstId\\\\\")\"}` };\r\n            } else {\r\n                return { code: p.code, name: p.name, value: '' };\r\n            }\r\n        });\r\n    }\r\n\r\n    swapArray(arr: Array<any>, i1: number, i2: number): Array<any> {\r\n        arr[i1] = arr.splice(i2, 1, arr[i1])[0];\r\n        return arr;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivityComponentUIState } from './activity-component.uistate';\r\nimport { ActivityComponentRepository } from './activity-component.repository';\r\nimport { BizComponentEntity } from '../../domain/entities/biz-component.entity';\r\nimport { GspComponent } from '@gsp-cmp/common-component';\r\nimport { MessagerService } from '@farris/ui-messager';\r\n\r\n@Injectable()\r\n\r\nexport class ActivityComponentViewModel {\r\n    constructor(\r\n        private uistate: ActivityComponentUIState,\r\n        private repository: ActivityComponentRepository,\r\n        private messager: MessagerService\r\n    ) { }\r\n\r\n    deleteRow() {\r\n        if (this.uistate.curComponent) {\r\n            if (this.uistate.curComponent.executionTime === 'LOADDATA') {\r\n                this.messager.info('åæ°æä»¶ä¸åè®¸å é¤ï¼è¯·äºè§£ï¼');\r\n            } else {\r\n                this.repository.removeComponent(this.uistate.curComponent.id);\r\n            }\r\n        } else {\r\n            return;\r\n        }\r\n    }\r\n    componentSelect(cpt: GspComponent) {\r\n        if (cpt) {\r\n            this.repository.addComponent(cpt);\r\n        }\r\n    }\r\n\r\n    loadComponents(flowFormId: string, bizActId: string) {\r\n        this.repository.loadComponents(flowFormId, bizActId);\r\n    }\r\n}\r\n","export class ActualParameter {\r\n    constructor(code?: string, name?: string, value?: string) {\r\n        this.code = code;\r\n        this.name = name;\r\n        this.value = value;\r\n    }\r\n    code: string;\r\n    name: string;\r\n    value: string;\r\n    // IsVisible: boolean;\r\n}\r\n","import { Component, OnInit, HostBinding, Output, EventEmitter, TemplateRef, Input, ViewChild, ComponentFactoryResolver, Injector, AfterViewInit } from '@angular/core';\r\nimport { TypeConverter } from '@farris/ui-property-panel';\r\nimport { ActivityComponentRepository } from './activity-component.repository';\r\nimport { ActivityComponentUIState } from './activity-component.uistate';\r\nimport { ActivityComponentViewModel } from './activity-component.viewmodel';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { BizComponentEntity } from '../../domain/entities/biz-component.entity';\r\nimport { ActualParameter } from '../../domain/entities/actual-parameter';\r\nimport { ProcessDesignerUIState } from '../../app/process-designer.uistate';\r\n\r\nimport { ExprEditMode, ExpressionService, InjectedType, VarEntity } from '@gsp-svc/expression';\r\nimport { SelectMetadataRTComponent, Metadata4RefDto, MetadataDto } from '@gsp-lcm/metadatart-selector';\r\nimport { SessionService } from '@ecp-caf/caf-common';\r\nimport { BsModalService } from '@farris/ui-modal';\r\nimport { SelectorResult, CommonComponentUiRTService } from '@gsp-cmp/ccmp-ui';\r\nimport { GspComponent } from '@gsp-cmp/common-component';\r\nimport { DataColumn, DatagridComponent } from '@farris/ui-datagrid';\r\nimport { of } from 'rxjs';\r\nimport { EditorTypes } from '@farris/ui-datagrid-editors';\r\nimport { MessagerService } from '@farris/ui-messager';\r\n\r\n@Component({\r\n  selector: 'app-activity-component',\r\n  templateUrl: './activity-component.component.html',\r\n  styleUrls: ['./activity-component.component.scss'],\r\n  providers: [ActivityComponentRepository, ActivityComponentUIState, ActivityComponentViewModel]\r\n})\r\nexport class ActivityComponentComponent implements OnInit, AfterViewInit {\r\n  @HostBinding('class')\r\n  cls = 'farris-main-area flex-column';\r\n  @Output() closeModal = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n\r\n  @Input() editorParams: any = {};\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n  modalConfig = {\r\n    title: 'æä»¶',\r\n    width: 1000,\r\n    height: 530,\r\n    showButtons: true\r\n  };\r\n  @Input()\r\n  set value(cpts: any[]) {\r\n    if (cpts && cpts.length > 0) {\r\n      for (const cpt of cpts) {\r\n        const bizComponent = new BizComponentEntity(cpt.Name || cpt.name, cpt.MetadataId || cpt.metadataId, cpt.MethodCode || cpt.methodCode);\r\n        bizComponent.executionTime = cpt.Time || cpt.executionTime,\r\n        bizComponent.id = cpt.Id || cpt.id;\r\n        bizComponent.isForCompensation = cpt.isForCompensation;\r\n        bizComponent.actualParameters = [];\r\n        if ((cpt.ActualParameters && cpt.ActualParameters.length > 0) || (cpt.actualParameters && cpt.actualParameters.length > 0)) {\r\n          const actualParameters = cpt.ActualParameters || cpt.actualParameters;\r\n          for (const para of actualParameters) {\r\n            const actualParameter = new ActualParameter(para.Name || para.code, para.Name || para.name, para.Value || para.value );\r\n\r\n            bizComponent.actualParameters.push(actualParameter);\r\n          }\r\n        }\r\n        this.uistate.components.push(bizComponent);\r\n      }\r\n    }\r\n  }\r\n\r\n  @ViewChild('cmplist') cmplist: DatagridComponent;\r\n  @ViewChild('paramlist') paramlist: DatagridComponent;\r\n\r\n\r\n  location: 'activity' | 'process' | 'autoActivity';\r\n  columns = [];\r\n  paramColumns = [];\r\n  constructor(\r\n    public uistate: ActivityComponentUIState,\r\n    public viewModel: ActivityComponentViewModel,\r\n    private formBuilder: FormBuilder,\r\n    private designerState: ProcessDesignerUIState,\r\n    private expr: ExpressionService,\r\n    private resolver: ComponentFactoryResolver,\r\n    private injector: Injector,\r\n    private sessionSrc: SessionService,\r\n    private modalService: BsModalService,\r\n    private componentService: CommonComponentUiRTService,\r\n    private repository: ActivityComponentRepository,\r\n    private message: MessagerService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.location = this.editorParams.location;\r\n    if (this.location === 'activity') {\r\n      this.uistate.executionCollection = this.uistate.activityCollection;\r\n      this.columns = [\r\n        {\r\n          field: 'name', width: 100, title: 'æä»¶åç§°'\r\n        },\r\n        { field: 'metadataId', width: 100, title: 'æä»¶ID' },\r\n        { field: 'methodCode', width: 100, title: 'æä»¶æ¹æ³' },\r\n        {\r\n          field: 'executionTime', width: 100, title: 'æ§è¡æ¶æº',\r\n          editor: {\r\n            type: EditorTypes.COMBOLIST,\r\n            options: { data: this.uistate.executionCollection, valueField: 'value', textField: 'text', idField: 'value', panelHeight: 'auto' }\r\n          },\r\n          formatter: (v, d, i) => {\r\n            if (v) {\r\n              return this.uistate.executionCollection.find(item => item.value === v).text;\r\n            } else {\r\n              return '';\r\n            }\r\n          },\r\n          validators: [\r\n            { type: 'required', messager: 'å¿å¡«' }\r\n          ]\r\n        },\r\n        {\r\n          field: 'isForCompensation', width: 50, title: 'è¡¥å¿æä½',\r\n          editor: { type: EditorTypes.SWITCH, options: {} },\r\n          formatter: { type: 'boolean', options: { trueText: 'æ¯', falseText: 'å¦' } }\r\n        }\r\n      ];\r\n    } else if (this.location === 'autoActivity') {\r\n      this.columns = [\r\n        {\r\n          field: 'name', width: 100, title: 'æä»¶åç§°'\r\n        },\r\n        { field: 'metadataId', width: 100, title: 'æä»¶ID' },\r\n        { field: 'methodCode', width: 100, title: 'æä»¶æ¹æ³' },\r\n        {\r\n          field: 'isForCompensation', width: 50, title: 'è¡¥å¿æä½',\r\n          editor: { type: EditorTypes.SWITCH, options: {} },\r\n          formatter: { type: 'boolean', options: { trueText: 'æ¯', falseText: 'å¦' } }\r\n        }\r\n      ];\r\n    } else {\r\n      this.columns = [\r\n        {\r\n          field: 'name', width: 100, title: 'æä»¶åç§°'\r\n        },\r\n        { field: 'metadataId', width: 100, title: 'æä»¶ID' },\r\n        { field: 'methodCode', width: 100, title: 'æä»¶æ¹æ³' },\r\n        {\r\n          field: 'executionTime', width: 100, title: 'æ§è¡æ¶æº',\r\n          editor: {\r\n            type: EditorTypes.COMBOLIST,\r\n            options: { data: this.uistate.executionCollection, valueField: 'value', textField: 'text', idField: 'value', panelHeight: 'auto' }\r\n          },\r\n          formatter: (v, d, i) => {\r\n            if (v) {\r\n              return this.uistate.executionCollection.find(item => item.value === v).text;\r\n            } else {\r\n              return '';\r\n            }\r\n          },\r\n          validators: [\r\n            { type: 'required', messager: 'å¿å¡«' }\r\n          ]\r\n        }\r\n      ];\r\n    }\r\n    if (this.uistate.components && this.uistate.components.length > 0) {\r\n      this.cmplist.selectRow(this.uistate.components[0].id, true);\r\n    }\r\n\r\n    this.paramColumns = [\r\n      { field: 'code', width: 50, title: 'ç¼å·' },\r\n      { field: 'name', width: 50, title: 'åç§°' },\r\n      {\r\n        field: 'value', width: 100, title: 'åæ°å¼',\r\n        editor: {\r\n          type: 'input-group',\r\n          options: {\r\n            groupText: '<i class=\"f-icon f-icon-lookup\"></i>',\r\n            editable: false,\r\n            clickHandle: (e) => {\r\n              e.formControl.setValue(e.instance.value ? e.instance.value : '');\r\n              this.showExprHelp(e);\r\n            },\r\n            clear: (e) => {\r\n              console.log('clear', e);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    ];\r\n    // éä¸­å½åè¡\r\n    this.repository.subject.subscribe(cmp => {\r\n      this.cmplist.loadData(this.uistate.components);\r\n      if (cmp) {\r\n        this.cmplist.selectRow(cmp.id, true);\r\n      } else {\r\n        this.uistate.curComponent = null;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.uistate.components && this.uistate.components.length > 0) {\r\n      this.cmplist.selectRow(this.uistate.components[0].id, true);\r\n    }\r\n  }\r\n\r\n  deleteRow() {\r\n    this.closeCellEdit();\r\n\r\n    this.viewModel.deleteRow();\r\n  }\r\n\r\n  moveUp() {\r\n    if (!this.uistate.curComponent) {\r\n      this.message.info('å°æªéä¸­æä»¶ï¼');\r\n      return;\r\n    }\r\n    const curCmpId: string = this.uistate.curComponent.id;\r\n    const i = this.uistate.components.findIndex(c => c.id === curCmpId);\r\n    if (i === 0) {\r\n      return;\r\n    }\r\n    this.repository.swapArray(this.uistate.components, i, i - 1);\r\n\r\n    this.cmplist.loadData(this.uistate.components);\r\n    this.cmplist.selectRow(curCmpId, true);\r\n  }\r\n\r\n  moveDown() {\r\n    if (!this.uistate.curComponent) {\r\n      this.message.info('å°æªéä¸­æä»¶ï¼');\r\n      return;\r\n    }\r\n    const curCmpId: string = this.uistate.curComponent.id;\r\n    const i = this.uistate.components.findIndex(c => c.id === curCmpId);\r\n    if (i === this.uistate.components.length - 1) {\r\n      return;\r\n    }\r\n    this.repository.swapArray(this.uistate.components, i, i + 1);\r\n\r\n    this.cmplist.loadData(this.uistate.components);\r\n    this.cmplist.selectRow(curCmpId, true);\r\n  }\r\n\r\n  clickOK() {\r\n    this.closeCellEdit();\r\n\r\n    if (this.validator()) {\r\n      const object = { value: this.uistate.components, parameters: null };\r\n      this.submitModal.emit(object);\r\n    }\r\n  }\r\n\r\n  clickCancel() {\r\n    this.closeModal.emit();\r\n  }\r\n  componentSelect() {\r\n    const compFactory = this.resolver.resolveComponentFactory(SelectMetadataRTComponent);\r\n    const compRef = compFactory.create(this.injector);\r\n    compRef.instance.typeList = 'WebServiceComponent'; // ç®ååªè½æ ¹æ®åæ°æ®ç±»åè¿æ»¤ï¼åç»­æ·»å æ ç­¾è¿æ»¤\r\n    compRef.instance.selectedMetadata.subscribe(($event: Metadata4RefDto) => {\r\n      try {\r\n        const meta: MetadataDto = $event.metadata;\r\n        this.openComponentSelectorNew(meta.id, this.sessionSrc.getUserSessionId());\r\n      } catch {\r\n        console.log('$event', $event);\r\n        throw new Error('è·åè§£ææä»¶åºé' + $event);\r\n      }\r\n    });\r\n\r\n    const modalConfig = {\r\n      title: 'æä»¶éæ©',\r\n      width: 980,\r\n      height: 548,\r\n      showButtons: false\r\n    };\r\n    const dialog = this.modalService.show(compRef, modalConfig);\r\n    compRef.instance.closeModalEmitter.subscribe($event => dialog.close());\r\n  }\r\n  /**\r\n   * åæ°æä»¶å¸®å©new\r\n   */\r\n  openComponentSelectorNew(metadataId: string, sessionId: string) {\r\n    this.componentService.openSelector(metadataId, sessionId).subscribe(\r\n      (selectorResult: SelectorResult) => {\r\n        selectorResult.confirmEvent.subscribe(\r\n          (result: GspComponent) => {\r\n            this.viewModel.componentSelect(result);\r\n          });\r\n      });\r\n  }\r\n  showExprHelp(e: any) {\r\n    if (this.designerState.schemas.length > 0) {\r\n      for (const schema of this.designerState.schemas) {\r\n        this.expr.addSchema('Schema', schema);\r\n      }\r\n      if (this.designerState.schemas[0].entityTypes && this.designerState.schemas[0].entityTypes.length > 0) {\r\n        const entityType = this.designerState.schemas[0].entityTypes[0];\r\n        this.expr.addInjectedEntity(entityType.name, 'Schema',\r\n          entityType.name, InjectedType.EntityType);\r\n      }\r\n    }\r\n    const context = new Array<VarEntity>();\r\n    if (this.designerState.procInstContext.length > 0) {\r\n      for (const variable of this.designerState.procInstContext) {\r\n        context.push(variable);\r\n      }\r\n    }\r\n    if (this.designerState.formalParameterContext.length > 0) {\r\n      for (const variable of this.designerState.formalParameterContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (this.designerState.participantContext.length > 0) {\r\n      for (const variable of this.designerState.participantContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (this.location === 'activity') {\r\n      for (const variable of this.designerState.activityComponentContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (this.designerState.processVariableContext.length > 0) {\r\n      for (const variable of this.designerState.processVariableContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (context.length > 0) {\r\n      for (const v of context) {\r\n        this.expr.addContext(v);\r\n      }\r\n    }\r\n    this.expr.setEditPattern(ExprEditMode.Advanced); // é»è®¤æå¼é«çº§è¡¨è¾¾å¼ç¼è¾å¨\r\n    this.expr.addExpressionText(e.instance.value);\r\n    this.expr.buildExpression().then((expressioninfo: string) => {\r\n      e.formControl.setValue(expressioninfo);\r\n      e.instance.cd.detectChanges();\r\n    });\r\n  }\r\n  selectionChange(data: any) {\r\n    this.uistate.curComponent = data.data;\r\n  }\r\n  paramAfterEdit = (rowIndex: number, rowData: any, column?: DataColumn) => {\r\n    return of(true);\r\n  }\r\n\r\n  private closeCellEdit() {\r\n    this.cmplist.endCellEdit();\r\n    if (this.paramlist) {\r\n      this.paramlist.endCellEdit();\r\n    }\r\n  }\r\n\r\n  private validator(): boolean {\r\n    for (const c of this.uistate.components) {\r\n      if (!c.executionTime && this.location !== 'autoActivity') {\r\n        this.message.warning('æä»¶æ§è¡æ¶æºä¸åè®¸ä¸ºç©ºï¼');\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n}\r\n\r\nexport class ActivityComponentConverter implements TypeConverter {\r\n  constructor() { }\r\n\r\n  convertTo(data: any[]): string {\r\n    if (data && data.length > 0) {\r\n      return 'ï¼å·²è®¾ç½®ï¼';\r\n    } else {\r\n      return 'ï¼æªè®¾ç½®ï¼';\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\n\r\nexport class ExecuteFormsUIState {\r\n    public formTypeCollection = [\r\n        { text: 'æµç¨åµè¡¨å', value: '0' },\r\n        { text: 'è¡¨ååµæµç¨', value: '1' },\r\n    ];\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\n\r\nexport class ExecuteFormsViewModel {\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\n\r\nexport class ExecuteFormsRepository {\r\n\r\n}\r\n","\r\nexport class ExecuteFormModel {\r\n    Id: string;\r\n    Name: string;\r\n    ComponentId: string;\r\n    FormType: string;\r\n    TerminalType: TerminalType;\r\n    ActualParameters: ActualParameter[];\r\n    formFormatId: string;\r\n    formatConfigId: string;\r\n}\r\nexport class ActualParameter {\r\n    Name: string;\r\n    Value: string;\r\n    ValueText?: string;\r\n    Tag?: string;\r\n}\r\nexport enum TerminalType {\r\n    PC = 'PC',\r\n    MOBILE = 'MOBILE',\r\n    ALL = 'ALL'\r\n}\r\n","import { ILookupHttpService, RemoteParams, LookupGridResult } from '@farris/ui-lookup';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class FormFormatService implements ILookupHttpService {\r\n    constructor(\r\n        private http: HttpService,\r\n    ) {\r\n    }\r\n    getData(url: string, params?: RemoteParams): Observable<LookupGridResult> {\r\n        const customData = params.customData;\r\n        const index = params.pageIndex || 1;\r\n        const size = params.pageSize || 20;\r\n        const searchValue = JSON.parse(params.searchValue);\r\n        const terminal = customData.tab === 'web' ? 'PC' : 'Mobile';\r\n        let query = '?param=';\r\n        let filter = `{\"terminal\":\"${terminal}\"`;\r\n        if (searchValue.searchValue) {\r\n            if (searchValue.searchField === '*') {\r\n                filter += `,\"allColumns\":\"${searchValue.searchValue}\"`;\r\n            } else {\r\n                filter += `,\"${searchValue.searchField}\":\"${searchValue.searchValue}\"`;\r\n            }\r\n        }\r\n        filter += '}';\r\n        filter = encodeURIComponent(filter);\r\n        query += (filter + `&pageNum=${index}&pageSize=${size}`);\r\n        url += query;\r\n        return this.http.get(url).pipe(\r\n            map((re: any) => ({\r\n                items: re.content,\r\n                total: re.totalElements,\r\n                pageInfo: {\r\n                    pageIndex: re.pageable.pageNumber + 1,\r\n                    pageSize: re.pageable.pageSize,\r\n                    pageList: [20, 40, 60, 80, 100],\r\n                    enablePager: true\r\n                }\r\n            }))\r\n        );\r\n    }\r\n}\r\n\r\n","export class ExecuteForm { \r\n    id: string;\r\n    code: string;\r\n    name: string;\r\n    appId: string;\r\n    flowFormKey: string;\r\n    formFormatId: string;\r\n    formType: string;\r\n    isDefault: boolean;\r\n    terminal: string;\r\n    actualParameters: Array<FormalParameter>;\r\n    sysInit: number;\r\n    remarks: string;\r\n}\r\n\r\nexport class FormalParameter {\r\n    code: string;\r\n    name: string;\r\n    value: string;\r\n}\r\n","import { Component, OnInit, Injector, ComponentFactoryResolver, ViewChild, TemplateRef } from '@angular/core';\r\nimport { BsModalService } from '@farris/ui-modal';\r\nimport { ProcessDesignerUIState } from '../../../app/process-designer.uistate';\r\nimport { HttpService, SessionService } from '@ecp-caf/caf-common';\r\nimport { RtfAppHelpComponent } from '@gsp-sys/rtf-ui';\r\nimport { RtfApp } from '@gsp-sys/rtf-ui/lib/rtf-app-help/entities/rtf-app';\r\nimport { of, Observable, Subject, from, forkJoin } from 'rxjs';\r\nimport { PickedResult, ServerSideToken, LookupGridComponent } from '@farris/ui-lookup';\r\nimport { FormFormatService } from './form-format.service';\r\nimport { ExecuteFormModel, TerminalType, ActualParameter } from '../entities/execute-form.entity';\r\nimport { DatagridComponent } from '@farris/ui-datagrid';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { ExecuteForm } from '../entities/execute-form';\r\nimport { ProcessDeUtil } from '../../../domain/process-de-util';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'lib-add-execute-form',\r\n  templateUrl: './add-execute-form.component.html',\r\n  styleUrls: ['./add-execute-form.component.scss'],\r\n  providers: [{ provide: ServerSideToken, useClass: FormFormatService }]\r\n})\r\nexport class AddExecuteFormComponent implements OnInit {\r\n\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n  @ViewChild(RtfAppHelpComponent) public appHelper: RtfAppHelpComponent;\r\n  @ViewChild('lookup') public lookUp: LookupGridComponent;\r\n  @ViewChild('grid') private grid: DatagridComponent;\r\n\r\n  submit = new Subject<ExecuteFormModel>();\r\n  cancel = new Subject();\r\n\r\n  tab: 'web' | 'mobile';\r\n\r\n  forms = new Array<ExecuteForm>();\r\n\r\n  // private formTypeCollection = [\r\n  //   { text: 'æµç¨åµè¡¨å', value: '0' },\r\n  //   { text: 'è¡¨ååµæµç¨', value: '1' },\r\n  // ];\r\n\r\n  columns = [\r\n    { field: 'code', width: 100, title: 'ç¼å·' },\r\n    {\r\n      field: 'name', width: 100, title: 'åç§°',\r\n    },\r\n    {\r\n      field: 'tag', width: 80, title: 'åæ®ç±»å',\r\n      formatter: (v, d, i) => {\r\n        if (d.appId) {\r\n          return 'åè½èå';\r\n        } else if (d.formFormatId) {\r\n          return 'è¡¨åæ ¼å¼';\r\n        }\r\n      }\r\n    }\r\n    // {\r\n    //   field: 'formType', width: 80, title: 'èæ¥ç±»å',\r\n    //   formatter: {\r\n    //     type: 'enum',\r\n    //     options: { valueField: 'value', textField: 'text', data: this.formTypeCollection }\r\n    //   },\r\n    // },\r\n  ];\r\n\r\n  // è¡¨åæ ¼å¼æ¾ç¤ºå\r\n  cols = [\r\n    {\r\n      field: 'code', width: 100, title: 'åæ®æ ¼å¼ç¼å·', searchField: 'code'\r\n    }, {\r\n      field: 'name', width: 100, title: 'åæ®æ ¼å¼åç§°', searchField: 'name'\r\n    }\r\n  ];\r\n\r\n  dataUri = '/api/runtime/wf/v1.0/formFormat/page';\r\n  constructor(\r\n    private state: ProcessDesignerUIState,\r\n    private http: HttpService,\r\n    private session: SessionService,\r\n    private message: MessagerService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getAllExecuteForms();\r\n  }\r\n\r\n  clickOK() {\r\n    if (this.grid.selectedRow) {\r\n      const form: ExecuteForm = this.grid.selectedRow.data;\r\n      const model = new ExecuteFormModel();\r\n      model.Id = ProcessDeUtil.GenerateElementId();\r\n      model.Name = form.name;\r\n      model.ComponentId = form.appId;\r\n      model.FormType = form.formType;\r\n      model.formFormatId = form.formFormatId;\r\n      model.TerminalType = this.tab === 'web' ? TerminalType.PC : TerminalType.MOBILE;\r\n      model.ActualParameters = form.actualParameters.map(p => {\r\n        const a = new ActualParameter();\r\n        a.Name = p.code;\r\n        a.Value = p.value;\r\n        return a;\r\n      });\r\n      this.submit.next(model);\r\n    } else {\r\n      this.message.info('å°æªéæ©è¡¨åå®ä¹ï¼');\r\n    }\r\n  }\r\n\r\n  clickCancel() {\r\n    this.cancel.next();\r\n  }\r\n\r\n  selectOtherFormFormat() {\r\n    this.lookUp.showDialog();\r\n  }\r\n\r\n  dictPicking = (arg) => {\r\n    return of({\r\n      showDialog: true, data: {\r\n        tab: this.tab\r\n      }\r\n    });\r\n  }\r\n\r\n  dictPicked = (data: any): Observable<PickedResult> => {\r\n    const model = new ExecuteFormModel();\r\n    model.Id = ProcessDeUtil.GenerateElementId();\r\n    model.Name = data.name;\r\n    model.ComponentId = null;\r\n    model.FormType = '0';\r\n    model.formFormatId = data.id;\r\n    model.TerminalType = this.tab === 'web' ? TerminalType.PC : TerminalType.MOBILE;\r\n    model.ActualParameters = data.urlParameters.map(p => {\r\n      const a = new ActualParameter();\r\n      a.Name = p.code;\r\n      a.Value = p.value;\r\n      return a;\r\n    });\r\n    this.submit.next(model);\r\n    return of({ closeDialog: true });\r\n  }\r\n\r\n  selectOtherFunc() {\r\n    this.appHelper.showHelp(this.session.getUserSessionId());\r\n  }\r\n\r\n  funcSelected(apps: RtfApp[]) {\r\n    if (apps && apps.length > 0) {\r\n      const model = new ExecuteFormModel();\r\n      model.Id = ProcessDeUtil.GenerateElementId();\r\n      model.Name = apps[0].Name;\r\n      model.ComponentId = apps[0].Id;\r\n      model.FormType = '0';\r\n      model.formFormatId = null;\r\n      model.TerminalType = this.tab === 'web' ? TerminalType.PC : TerminalType.MOBILE;\r\n      model.ActualParameters = [];\r\n      if (apps[0].InvokingConfig['entityParams']) {\r\n        const paras = JSON.parse(apps[0].InvokingConfig['entityParams']);\r\n        model.ActualParameters = paras.map(p => ({\r\n          Name: p.name,\r\n          Value: ''\r\n        }));\r\n      }\r\n      setTimeout(() => {\r\n        this.submit.next(model);\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  private getAllExecuteForms() {\r\n    forkJoin(this.getExecuteForms(), this.getFormFormats()).subscribe(re => {\r\n      if (re[0]) {\r\n        this.forms = re[0];\r\n      }\r\n      if (re[1] && re[1].length > 0) {\r\n        const formFormats = re[1];\r\n        for (const format of formFormats) {\r\n          if (this.forms.findIndex(f => f.formFormatId && f.formFormatId === format.id) === -1) {\r\n            const executeForm = new ExecuteForm();\r\n            executeForm.id = ProcessDeUtil.createNM();\r\n            executeForm.flowFormKey = this.state.flowFormInfo.flowForm.id;\r\n            executeForm.appId = null;\r\n            executeForm.code = format.code;\r\n            executeForm.name = format.name;\r\n            executeForm.actualParameters = [];\r\n            executeForm.isDefault = false;\r\n            executeForm.formType = '0';\r\n            executeForm.terminal = 'web';\r\n            executeForm.formFormatId = format.id;\r\n            executeForm.sysInit = 0;\r\n            executeForm.remarks = '';\r\n            if (format.urlParameters && format.urlParameters.length > 0) {\r\n              const actPList = format.urlParameters.map(p => ({\r\n                code: p.code,\r\n                name: p.name,\r\n                value: p.value\r\n              }));\r\n              executeForm.actualParameters = actPList;\r\n            }\r\n            this.forms.push(executeForm);\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  private getExecuteForms(): Observable<any> {\r\n    if (this.state.flowFormInfo.flowForm.id && this.tab) {\r\n      const url = `/api/runtime/wf/v1.0/excuteForm?flowFormKey=${this.state.flowFormInfo.flowForm.id}`;\r\n      return this.http.get(url).pipe(\r\n        map((re: any) => {\r\n          if (this.tab === 'web') {\r\n            return re.filter(f => f.terminal.indexOf('web') > -1);\r\n          } else if (this.tab === 'mobile') {\r\n            return re.filter(f => f.terminal.indexOf('app') > -1);\r\n          }\r\n        })\r\n      );\r\n    } else {\r\n      return from(new Array());\r\n    }\r\n  }\r\n\r\n  private getFormFormats(): Observable<any>  {\r\n    if (this.state.flowFormInfo.flowForm.businessObjectId && this.tab) {\r\n      const terminal = this.tab === 'web' ? 'PC' : 'Mobile';\r\n      let url = `/api/runtime/wf/v1.0/formFormat/query?param=`;\r\n      let param = `{\"bizCategory\":\"${this.state.flowFormInfo.flowForm.businessObjectId}\",\"terminal\":\"${terminal}\"}`;\r\n      param = encodeURIComponent(param);\r\n      url += param;\r\n      return this.http.get(url);\r\n    } else {\r\n      return from(new Array());\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\r\nimport { ExpressionService, InjectedType } from '@gsp-svc/expression';\r\nimport { ProcessDesignerUIState } from '../../../app/process-designer.uistate';\r\nimport { Subject } from 'rxjs';\r\nimport { DatagridComponent } from '@farris/ui-datagrid';\r\n\r\n@Component({\r\n  selector: 'lib-parameter-setting',\r\n  templateUrl: './parameter-setting.component.html',\r\n  styleUrls: ['./parameter-setting.component.scss']\r\n})\r\nexport class ParameterSettingComponent implements OnInit {\r\n\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n  @ViewChild('grid') grid: DatagridComponent;\r\n\r\n  idField: 'Name' | 'code' = 'Name';\r\n\r\n  private _mode: 'bpmn' | 'usual' = 'bpmn';\r\n  set mode(m: 'bpmn' | 'usual') {\r\n    this._mode = m;\r\n    if (m === 'bpmn') {\r\n      this.idField = 'Name';\r\n      this.cols = [\r\n        { field: 'Name', width: 50, title: 'ç¼å·' },\r\n        {\r\n          field: 'Value', width: 100, title: 'åæ°å¼',\r\n          editor: {\r\n            type: 'input-group',\r\n            options: {\r\n              groupText: '<i class=\"f-icon f-icon-lookup\"></i>',\r\n              editable: false,\r\n              clickHandle: (e) => {\r\n                e.formControl.setValue(e.instance.value ? e.instance.value : '');\r\n                this.showExprHelp(e);\r\n              },\r\n              clear: (e) => {\r\n                console.log('clear', e);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      ];\r\n    } else {\r\n      this.idField = 'code';\r\n      this.cols = [\r\n        { field: 'code', width: 50, title: 'ç¼å·' },\r\n        { field: 'name', width: 50, title: 'åç§°' },\r\n        {\r\n          field: 'value', width: 100, title: 'åæ°å¼',\r\n          editor: {\r\n            type: 'input-group',\r\n            options: {\r\n              groupText: '<i class=\"f-icon f-icon-lookup\"></i>',\r\n              editable: false,\r\n              clickHandle: (e) => {\r\n                e.formControl.setValue(e.instance.value ? e.instance.value : '');\r\n                this.showExprHelp(e);\r\n              },\r\n              clear: (e) => {\r\n                console.log('clear', e);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      ];\r\n    }\r\n  }\r\n\r\n  get mode() {\r\n    return this._mode;\r\n  }\r\n  submit = new Subject<any>();\r\n  cancel = new Subject();\r\n  formTypeCollection = [\r\n    { text: 'æµç¨åµè¡¨å', value: '0' },\r\n    { text: 'è¡¨ååµæµç¨', value: '1' },\r\n  ];\r\n\r\n  cols = new Array();\r\n\r\n  parameters = new Array();\r\n\r\n  formType = this.formTypeCollection[0].value;\r\n\r\n  showFormType = false;\r\n\r\n  constructor(\r\n    private expr: ExpressionService,\r\n    private designerState: ProcessDesignerUIState) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  showExprHelp(e: any) {\r\n    if (this.designerState.schemas.length > 0) {\r\n      for (const schema of this.designerState.schemas) {\r\n        this.expr.addSchema('Schema', schema);\r\n      }\r\n      if (this.designerState.schemas[0].entityTypes && this.designerState.schemas[0].entityTypes.length > 0) {\r\n        const entityType = this.designerState.schemas[0].entityTypes[0];\r\n        this.expr.addInjectedEntity(entityType.name, 'Schema',\r\n          entityType.name, InjectedType.EntityType);\r\n      }\r\n    }\r\n    const context = new Array();\r\n    if (this.designerState.procInstContext.length > 0) {\r\n      for (const variable of this.designerState.procInstContext) {\r\n        context.push(variable);\r\n        // this.expr.addContext(variable);\r\n      }\r\n    }\r\n    if (this.designerState.formalParameterContext.length > 0) {\r\n      for (const variable of this.designerState.formalParameterContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n        // this.expr.addContext(variable);\r\n      }\r\n    }\r\n    if (this.designerState.participantContext.length > 0) {\r\n      for (const variable of this.designerState.participantContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n        // this.expr.addContext(variable);\r\n      }\r\n    }\r\n    if (this.designerState.processVariableContext.length > 0) {\r\n      for (const variable of this.designerState.processVariableContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n        // this.expr.addContext(variable);\r\n      }\r\n    }\r\n    if (context.length > 0) {\r\n      for (const v of context) {\r\n        this.expr.addContext(v);\r\n      }\r\n    }\r\n\r\n    this.expr.addExpressionText(e.instance.value);\r\n\r\n    this.expr.buildExpression().then((d: string) => { // ç¼è¾å¨è¿åå¼\r\n      if (d) {\r\n        e.formControl.setValue(d);\r\n        e.instance.cd.detectChanges();\r\n      }\r\n    });\r\n  }\r\n\r\n  clickOK() {\r\n    this.grid.endCellEdit();\r\n    this.submit.next({ parameters: this.parameters, formType: this.formType });\r\n  }\r\n\r\n  clickCancel() {\r\n    this.cancel.next();\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, HostBinding, Output, EventEmitter, Input, ViewChild, TemplateRef, ElementRef, ComponentFactoryResolver, Injector, AfterViewInit, AfterContentInit } from '@angular/core';\r\nimport { TypeConverter } from '@farris/ui-property-panel';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { ExecuteFormsUIState } from './execute-forms.uistate';\r\nimport { ExecuteFormsViewModel } from './execute-forms.viewmodel';\r\nimport { ExecuteFormsRepository } from './execute-forms.repository';\r\nimport { ExecuteFormModel, TerminalType, ActualParameter } from './entities/execute-form.entity';\r\nimport { BsModalService } from '@farris/ui-modal';\r\nimport { AddExecuteFormComponent } from './add-execute-form/add-execute-form.component';\r\nimport { FormConfigContainerComponent } from './form-config-container/form-config-container.component';\r\nimport { ParameterSettingComponent } from './parameter-setting/parameter-setting.component';\r\nimport { Observable, Subject, forkJoin } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-execute-forms',\r\n  templateUrl: './execute-forms.component.html',\r\n  styleUrls: ['./execute-forms.component.css'],\r\n  providers: [ExecuteFormsUIState, ExecuteFormsViewModel, ExecuteFormsRepository]\r\n})\r\nexport class ExecuteFormsComponent implements OnInit, AfterViewInit {\r\n  modalConfig = {\r\n    title: 'è¡¨åå®ä¹',\r\n    width: 794,\r\n    height: 505,\r\n    showButtons: true\r\n  };\r\n\r\n  @HostBinding('class')\r\n  cls = 'farris-main-area flex-column';\r\n  @HostBinding('style.background') style = '#FFF';\r\n  @Output() closeModal = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n\r\n  @Input()\r\n  set value(item: ExecuteFormModel) {\r\n    if (item) {\r\n      const paramArray = new Array<ActualParameter>();\r\n      item.ActualParameters.forEach(a => {\r\n        const para = new ActualParameter();\r\n        para.Name = a.Name;\r\n        para.Value = a.Value;\r\n        paramArray.push(para);\r\n      });\r\n      this.form.ActualParameters = paramArray;\r\n      this.form.Id = item.Id;\r\n      this.form.Name = item.Name;\r\n      this.form.ComponentId = item.ComponentId;\r\n      this.form.formFormatId = item.formFormatId;\r\n      this.form.formatConfigId = item.formatConfigId;\r\n      this.form.FormType = item.FormType;\r\n      this.form.TerminalType = item.TerminalType;\r\n    }\r\n  }\r\n  @Input() editorParams: any = {};\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n  @ViewChild('configContainer') configContainer: FormConfigContainerComponent;\r\n\r\n  @ViewChild('configSection', { read: ElementRef }) configSection: ElementRef<any>;\r\n\r\n  form: ExecuteFormModel;\r\n\r\n  tab: 'web' | 'mobile' = 'web';\r\n\r\n  groupIcon = '<i class=\"f-icon f-icon-lookup\"></i>';\r\n\r\n  cols = [];\r\n\r\n  location: 'userActivity' | 'process' | 'startActivity';\r\n\r\n  showMethodTab = true;\r\n\r\n  // *******************************************************\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    public uistate: ExecuteFormsUIState,\r\n    public viewmodel: ExecuteFormsViewModel,\r\n    private resolver: ComponentFactoryResolver,\r\n    private injector: Injector,\r\n    private modalService: BsModalService\r\n  ) {\r\n    this.form = new ExecuteFormModel();\r\n  }\r\n  ngAfterViewInit(): void {\r\n    // this.editCSS();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.location = this.editorParams.location;\r\n    this.tab = this.editorParams.tab;\r\n    if (this.location === 'userActivity') {\r\n      this.showMethodTab = true;\r\n    } else {\r\n      this.showMethodTab = false;\r\n    }\r\n  }\r\n  clickOK() {\r\n    let data = new ExecuteFormModel();\r\n    this.getForm().subscribe((re: any) => {\r\n      if (!re.result) {\r\n        return;\r\n      }\r\n      data = re.form;\r\n      const object = { value: data, parameters: null };\r\n      this.submitModal.emit(object);\r\n    });\r\n  }\r\n\r\n  clickCancel() {\r\n    this.closeModal.emit();\r\n  }\r\n  // tabChange(data) {\r\n  //   this.tab = data.nextId;\r\n  // }\r\n\r\n  // editCSS() {\r\n  //   this.configSection.nativeElement.querySelector('div.f-section-header').classList.add('mb-0');\r\n  // }\r\n\r\n  private getForm(): Observable<any> {\r\n    if (this.form.ComponentId) {\r\n      return of({ result: true, form: this.form });\r\n    } else if (this.form.formFormatId) {\r\n      return this.configContainer.submit().pipe(\r\n        switchMap((re: any) => {\r\n          if (re.result) {\r\n            this.form.formatConfigId = re.configId;\r\n            return of({ result: true, form: this.form });\r\n          } else {\r\n            return of({ result: false, form: this.form });\r\n          }\r\n        })\r\n      );\r\n    } else {\r\n      return of({ result: true, form: null });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * åæ°è®¾ç½®\r\n   */\r\n  parametersSet() {\r\n    const compFactory = this.resolver.resolveComponentFactory(ParameterSettingComponent);\r\n    const compRef = compFactory.create(this.injector);\r\n    compRef.instance.mode = 'bpmn';\r\n    if (this.tab === 'web') {\r\n      if (this.form.ComponentId) {\r\n        compRef.instance.showFormType = true;\r\n        compRef.instance.formType = this.form.FormType;\r\n      }\r\n      compRef.instance.parameters = [...this.form.ActualParameters.map(p => Object.assign({}, p))];\r\n    } else {\r\n      compRef.instance.parameters = [...this.form.ActualParameters.map(p => Object.assign({}, p))];\r\n    }\r\n\r\n    const modalConfig = {\r\n      title: 'åæ°è®¾ç½®',\r\n      width: 620,\r\n      height: 400,\r\n      showButtons: true,\r\n      buttons: compRef.instance.modalFooter\r\n    };\r\n    const dialog = this.modalService.show(compRef, modalConfig);\r\n\r\n    compRef.instance.submit.subscribe(re => {\r\n      if (this.tab === 'web') {\r\n        this.form.ActualParameters = re.parameters;\r\n        this.form.FormType = re.formType;\r\n      } else {\r\n        this.form.ActualParameters = re.parameters;\r\n      }\r\n      dialog.close();\r\n    });\r\n    compRef.instance.cancel.subscribe(re => {\r\n      dialog.close();\r\n    });\r\n  }\r\n  /**\r\n   * éæ©è¡¨åå®ä¹\r\n   */\r\n  selectExecuteForm() {\r\n    const compFactory = this.resolver.resolveComponentFactory(AddExecuteFormComponent);\r\n    const compRef = compFactory.create(this.injector);\r\n    compRef.instance.tab = this.tab;\r\n\r\n    const modalConfig = {\r\n      title: 'è¡¨åå®ä¹åè¡¨',\r\n      width: 650,\r\n      height: 400,\r\n      showButtons: true,\r\n      buttons: compRef.instance.modalFooter\r\n    };\r\n    const dialog = this.modalService.show(compRef, modalConfig);\r\n    compRef.instance.submit.subscribe((re: ExecuteFormModel) => {\r\n      this.form = re;\r\n      dialog.close();\r\n    });\r\n    compRef.instance.cancel.subscribe(re => {\r\n      dialog.close();\r\n    });\r\n  }\r\n  clear() {\r\n    this.form = new ExecuteFormModel();\r\n  }\r\n}\r\nexport class ExecuteFormsConverter implements TypeConverter {\r\n  constructor() { }\r\n\r\n  convertTo(data): string {\r\n    if (data) {\r\n      return data.Name;\r\n    } else {\r\n      return 'ï¼æªè®¾ç½®ï¼';\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, Output, EventEmitter, Input, ViewChild, TemplateRef } from '@angular/core';\r\nimport { TypeConverter } from '@farris/ui-property-panel';\r\nimport { ExpressionService, InjectedType, ExpressioneditorComponent } from '@gsp-svc/expression';\r\nimport { ProcessDesignerUIState } from '../../app/process-designer.uistate';\r\n\r\n@Component({\r\n  selector: 'app-title-expression',\r\n  templateUrl: './title-expression.component.html',\r\n  styleUrls: ['./title-expression.component.scss']\r\n})\r\nexport class TitleExpressionComponent implements OnInit {\r\n\r\n  @Output() closeModal = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n\r\n  @Input() value: string;\r\n\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n\r\n  @Input() editorParams: any = {};\r\n\r\n  @ViewChild(ExpressioneditorComponent) editor: ExpressioneditorComponent;\r\n\r\n  contextEntities = [];\r\n\r\n  schema: any = {};\r\n  injectName = '';\r\n\r\n  modalConfig = {\r\n    title: 'ä»»å¡æè¿°',\r\n    width: 1140,\r\n    height: 520,\r\n    showButtons: true\r\n  };\r\n\r\n  constructor(\r\n    private expr: ExpressionService,\r\n    public designerState: ProcessDesignerUIState\r\n  ) { \r\n    if (this.designerState.schemas[0]) {\r\n      this.schema = this.designerState.schemas[0];\r\n      if (this.designerState.schemas[0].entityTypes && this.designerState.schemas[0].entityTypes.length > 0) {\r\n        this.injectName = this.designerState.schemas[0].entityTypes[0].name;\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    // this.contextEntities = this.contextEntities.concat(this.designerState.procInstContext)\r\n    //   .concat(this.designerState.formalParameterContext)\r\n    //   .concat(this.designerState.participantContext)\r\n    //   .concat(this.designerState.processVariableContext);\r\n    this.contextEntities = new Array();\r\n    if (this.designerState.procInstContext.length > 0) {\r\n      for (const variable of this.designerState.procInstContext) {\r\n        this.contextEntities = this.contextEntities.concat([variable]);\r\n      }\r\n    }\r\n    if (this.designerState.formalParameterContext.length > 0) {\r\n      for (const variable of this.designerState.formalParameterContext) {\r\n        if (!this.contextEntities.some(c => c.key === variable.key)) {\r\n          this.contextEntities = this.contextEntities.concat([variable]);\r\n        }\r\n      }\r\n    }\r\n    if (this.designerState.participantContext.length > 0) {\r\n      for (const variable of this.designerState.participantContext) {\r\n        if (!this.contextEntities.some(c => c.key === variable.key)) {\r\n          this.contextEntities = this.contextEntities.concat([variable]);\r\n        }\r\n      }\r\n    }\r\n    if (this.designerState.processVariableContext.length > 0) {\r\n      for (const variable of this.designerState.processVariableContext) {\r\n        if (!this.contextEntities.some(c => c.key === variable.key)) {\r\n          this.contextEntities = this.contextEntities.concat([variable]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  clickOK() {\r\n    this.value = this.convertToValue(this.editor.getExpr());\r\n    const object = { value: this.value, parameters: null };\r\n    this.submitModal.emit(object);\r\n  }\r\n\r\n  clickCancel() {\r\n    this.closeModal.emit();\r\n  }\r\n\r\n  private convertToValue(val: string): string {\r\n    if (val) {\r\n      if (val.substring(9, val.length - 2)) {\r\n        return val;\r\n      } else {\r\n        return '';\r\n      }\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n}\r\nexport class TitleExpressionConverter implements TypeConverter {\r\n  constructor() { }\r\n\r\n  convertTo(data: any): string {\r\n    if (data) {\r\n      return data;\r\n    } else {\r\n      return 'ï¼æªè®¾ç½®ï¼';\r\n    }\r\n  }\r\n}\r\n","import { ActualParameter } from '../../execute-forms/entities/execute-form.entity';\r\n\r\nexport class CustomizeAciton {\r\n    id: string;\r\n    code: string;\r\n    name: string;\r\n    terminalType: string;\r\n    // enable: boolean;\r\n    actualParameters: ActualParameter[];\r\n    constructor(id?: string, code?: string, name?: string) {\r\n        this.id = id;\r\n        this.code = code;\r\n        this.name = name;\r\n    }\r\n}\r\n","import { Component, OnInit, ViewChild, TemplateRef, Output, EventEmitter } from '@angular/core';\r\nimport { ProcessDesignerUIState } from '../../../../app/process-designer.uistate';\r\nimport { DatagridComponent } from '@farris/ui-datagrid';\r\nimport { CustomizeAciton } from '../../entities/customize-action.entity';\r\nimport { ActualParameter } from '../../../execute-forms/entities/execute-form.entity';\r\n\r\n@Component({\r\n  selector: 'app-customize-action-list',\r\n  templateUrl: './customize-action-list.component.html',\r\n  styleUrls: ['./customize-action-list.component.scss']\r\n})\r\nexport class CustomizeActionListComponent implements OnInit {\r\n\r\n  @ViewChild('grid') grid: DatagridComponent;\r\n  @ViewChild('footer') footer: TemplateRef<any>;\r\n\r\n  @Output() submit = new EventEmitter<any[]>();\r\n  @Output() cancel = new EventEmitter<any>();\r\n\r\n  customActionList: any[];\r\n\r\n  private terminalList = [\r\n    { value: 'app', text: 'ç§»å¨' },\r\n    { value: 'web', text: 'web' },\r\n    { value: 'web,app', text: 'web,ç§»å¨' }\r\n  ];\r\n\r\n  cols = [\r\n    { field: 'code', width: 100, title: 'ç¼å·' },\r\n    { field: 'name', width: 100, title: 'åç§°' },\r\n    {\r\n      field: 'terminal', width: 100, title: 'éç¨ç»ç«¯',\r\n      formatter: {\r\n        type: 'enum',\r\n        options: { valueField: 'value', textField: 'text', data: this.terminalList }\r\n      }, },\r\n    {\r\n      field: 'isAll', width: 100, title: 'æ¯å¦é»è®¤',\r\n      formatter: { type: 'boolean', options: { trueText: 'æ¯', falseText: 'å¦' } }  }\r\n  ];\r\n  constructor(private designerUIState: ProcessDesignerUIState) {\r\n    this.customActionList = this.designerUIState.flowFormInfo.customizeActions || [];\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n  clickOK() {\r\n    const selections = [];\r\n    const checkeds: any[] = this.grid.checkeds;\r\n    if (checkeds && checkeds.length > 0) {\r\n      checkeds.forEach(action => {\r\n        const item = new CustomizeAciton(action.data.id, action.data.code, action.data.name);\r\n        item.terminalType = action.data.terminal;\r\n        // item.enable = true;\r\n        item.actualParameters = [];\r\n        if (action.data.actualParameters && action.data.actualParameters.length > 0) {\r\n          for (const p of action.data.actualParameters) {\r\n            const param = {\r\n              Name: p.code,\r\n              Value: p.value,\r\n              ValueText: p.name,\r\n              Tag: 'expression'\r\n            } as ActualParameter;\r\n            item.actualParameters.push(param);\r\n          }\r\n        }\r\n        selections.push(item);\r\n      });\r\n    }\r\n    this.submit.emit(selections);\r\n  }\r\n  clickCancel() {\r\n    this.cancel.emit(true);\r\n  }\r\n}\r\n","import { Component, OnInit, HostBinding, Output, EventEmitter, Input, ViewChild, TemplateRef, ComponentFactoryResolver, Injector, AfterViewInit } from '@angular/core';\r\nimport { CustomizeAciton } from './entities/customize-action.entity';\r\nimport { DatagridComponent } from '@farris/ui-datagrid';\r\nimport { EditorTypes } from '@farris/ui-datagrid-editors';\r\nimport { ProcessDesignerUIState } from '../../app/process-designer.uistate';\r\nimport { ExpressionService, InjectedType } from '@gsp-svc/expression';\r\nimport { BsModalService, ModalOptions } from '@farris/ui-modal';\r\nimport { CustomizeActionListComponent } from './views/customize-action-list/customize-action-list.component';\r\nimport { TypeConverter } from '@farris/ui-property-panel';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { ActualParameter } from '../execute-forms/entities/execute-form.entity';\r\n\r\n@Component({\r\n  selector: 'app-customize-action',\r\n  templateUrl: './customize-action.component.html',\r\n  styleUrls: ['./customize-action.component.scss']\r\n})\r\nexport class CustomizeActionComponent implements OnInit, AfterViewInit {\r\n  @HostBinding('class')\r\n  cls = 'farris-main-area flex-column';\r\n  @Output() closeModal = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n\r\n  @Input() editorParams: any = {};\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n  modalConfig = {\r\n    title: 'èªå®ä¹å¨ä½',\r\n    width: 800,\r\n    height: 520,\r\n    showButtons: true\r\n  };\r\n  @Input() set value(data: any[]) {\r\n    if (data && data.length > 0) {\r\n      for (const d of data) {\r\n        const action = new CustomizeAciton(d.id, d.code, d.name);\r\n        action.terminalType = d.terminalType;\r\n        action.actualParameters = [];\r\n        if (d.actualParameters && d.actualParameters.length > 0) {\r\n          for (const a of d.actualParameters) {\r\n            const p = new ActualParameter();\r\n            p.Name = a.Name;\r\n            p.Value = a.Value;\r\n            p.ValueText = a.ValueText;\r\n            p.Tag = a.Tag;\r\n            action.actualParameters.push(p);\r\n          }\r\n        }\r\n        this.actions.push(action);\r\n      }\r\n    }\r\n  }\r\n\r\n  @ViewChild('actionlist') actionlist: DatagridComponent;\r\n  @ViewChild('paramlist') paramlist: DatagridComponent;\r\n\r\n  private terminalList = [\r\n    { value: 'app', text: 'ç§»å¨' },\r\n    { value: 'web', text: 'web' },\r\n    { value: 'web,app', text: 'web,ç§»å¨' }\r\n  ];\r\n  actions: CustomizeAciton[] = [];\r\n  curAction: CustomizeAciton;\r\n  columns = [\r\n    { field: 'code', width: 100, title: 'ç¼å·' },\r\n    { field: 'name', width: 100, title: 'åç§°' },\r\n    {\r\n      field: 'terminalType', width: 100, title: 'éç¨ç»ç«¯',\r\n      formatter: {\r\n        type: 'enum',\r\n        options: { valueField: 'value', textField: 'text', data: this.terminalList }\r\n      },\r\n    },\r\n    // {\r\n    //   field: 'enable', width: 100, title: 'æ¯å¦å¯ç¨',\r\n    //   editor: { type: EditorTypes.SWITCH, options: {} },\r\n    //   formatter: { type: 'boolean', options: { trueText: 'æ¯', falseText: 'å¦' } }\r\n    // }\r\n  ];\r\n  paramColumns = [\r\n    { field: 'Name', width: 50, title: 'ç¼å·' },\r\n    { field: 'ValueText', width: 50, title: 'åç§°' },\r\n    {\r\n      field: 'Value', width: 100, title: 'åæ°å¼',\r\n      editor: {\r\n        type: 'input-group',\r\n        options: {\r\n          groupText: '<i class=\"f-icon f-icon-lookup\"></i>',\r\n          editable: false,\r\n          clickHandle: (e) => {\r\n            e.formControl.setValue(e.instance.value ? e.instance.value : '');\r\n            this.showExprHelp(e);\r\n          },\r\n          clear: (e) => {\r\n            console.log('clear', e);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  ];\r\n  constructor(\r\n    private designerState: ProcessDesignerUIState,\r\n    private expr: ExpressionService,\r\n    private resolver: ComponentFactoryResolver,\r\n    private injector: Injector,\r\n    private modalService: BsModalService,\r\n    private message: MessagerService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n  ngAfterViewInit() {\r\n    this.loadData();\r\n    // this.actionlist.loadData(this.actions);\r\n    // if (this.actions && this.actions.length > 0) {\r\n    //   this.actionlist.selectRow(this.actions[0].id, true);\r\n    // }\r\n  }\r\n  addActions() {\r\n    const compFactory = this.resolver.resolveComponentFactory(CustomizeActionListComponent);\r\n    const compRef = compFactory.create(this.injector);\r\n    const modalConfig: ModalOptions = {\r\n      title: 'èªå®ä¹å¨ä½éæ©',\r\n      width: 800,\r\n      height: 520,\r\n      showButtons: true,\r\n      buttons: compRef.instance.footer\r\n    };\r\n    const dialog = this.modalService.show(compRef, modalConfig);\r\n    compRef.instance.submit.subscribe((data: CustomizeAciton[]) => {\r\n      if (data && data.length > 0) {\r\n        for (const a of data) {\r\n          const index = this.actions.findIndex(act => act.code === a.code);\r\n          if (index > -1) {\r\n            this.actions.splice(index, 1);\r\n          }\r\n          this.actions.push(a);\r\n        }\r\n        this.loadData();\r\n      }\r\n      dialog.close();\r\n    });\r\n    compRef.instance.cancel.subscribe($event => dialog.close());\r\n  }\r\n  delete() {\r\n    this.actionlist.endCellEdit();\r\n    if (this.actionlist.selectedRow && this.actionlist.selectedRow.data) {\r\n      const i = this.actions.findIndex(d => d.code === this.actionlist.selectedRow.data.code);\r\n      this.actions.splice(i, 1);\r\n      this.loadData();\r\n      // this.actionlist.loadData(this.actions);\r\n      // if (this.actions && this.actions.length > 0) {\r\n      //   this.actionlist.selectRow(this.actions[0].id, true);\r\n      // } else {\r\n      //   this.curAction = null;\r\n      // }\r\n    } else {\r\n      this.message.info('è¯·é¦åéä¸­ä¸æ¡éé¡¹ï¼');\r\n    }\r\n  }\r\n\r\n  clickOK() {\r\n    this.actionlist.endCellEdit();\r\n    this.paramlist && this.paramlist.endCellEdit();\r\n\r\n    const object = { value: this.actions, parameters: null };\r\n    this.submitModal.emit(object);\r\n  }\r\n\r\n  clickCancel() {\r\n    this.closeModal.emit();\r\n  }\r\n  loadData() {\r\n    this.actionlist.loadData(this.actions);\r\n    if (this.actions.length > 0 && (!this.actionlist.selectedRow || !this.actionlist.selectedRow.data)) {\r\n      this.actionlist.selectRow(this.actions[0].id, true);\r\n    } else {\r\n      this.curAction = null;\r\n    }\r\n  }\r\n\r\n  selectChanged(data: any) {\r\n    this.curAction = data.data;\r\n  }\r\n\r\n  showExprHelp(e: any) {\r\n    if (this.designerState.schemas.length > 0) {\r\n      for (const schema of this.designerState.schemas) {\r\n        this.expr.addSchema('Schema', schema);\r\n      }\r\n      if (this.designerState.schemas[0].entityTypes && this.designerState.schemas[0].entityTypes.length > 0) {\r\n        const entityType = this.designerState.schemas[0].entityTypes[0];\r\n        this.expr.addInjectedEntity(entityType.name, 'Schema',\r\n          entityType.name, InjectedType.EntityType);\r\n      }\r\n    }\r\n    const context = new Array();\r\n    if (this.designerState.procInstContext.length > 0) {\r\n      for (const variable of this.designerState.procInstContext) {\r\n        context.push(variable);\r\n        // this.expr.addContext(variable);\r\n      }\r\n    }\r\n    if (this.designerState.formalParameterContext.length > 0) {\r\n      for (const variable of this.designerState.formalParameterContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n        // this.expr.addContext(variable);\r\n      }\r\n    }\r\n    if (this.designerState.participantContext.length > 0) {\r\n      for (const variable of this.designerState.participantContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n        // this.expr.addContext(variable);\r\n      }\r\n    }\r\n    if (this.designerState.processVariableContext.length > 0) {\r\n      for (const variable of this.designerState.processVariableContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n        // this.expr.addContext(variable);\r\n      }\r\n    }\r\n    if (context.length > 0) {\r\n      for (const v of context) {\r\n        this.expr.addContext(v);\r\n      }\r\n    }\r\n    // if (e.instance.value) {\r\n    this.expr.addExpressionText(e.instance.value);\r\n    // }\r\n    this.expr.buildExpression().then((expressioninfo: string) => {\r\n      e.formControl.setValue(expressioninfo);\r\n      e.instance.cd.detectChanges();\r\n    });\r\n  }\r\n}\r\n\r\nexport class CustomizeActionConverter implements TypeConverter {\r\n  constructor() { }\r\n\r\n  convertTo(data: any[]): string {\r\n    if (data && data.length > 0) {\r\n      return 'ï¼å·²è®¾ç½®ï¼';\r\n    } else {\r\n      return 'ï¼æªè®¾ç½®ï¼';\r\n    }\r\n  }\r\n}\r\n","import { ProcessDeUtil } from '../../domain/process-de-util';\r\n\r\nexport class ProcessVariable {\r\n    id: string;\r\n    name: string;\r\n    documentation: string;\r\n    basicType: string;\r\n    tag: string;\r\n    value: string;\r\n    valueText: string;\r\n    description: string;\r\n    component: any;\r\n\r\n    constructor() {\r\n        this.id = ProcessDeUtil.GenerateElementId();\r\n        this.basicType = 'String';\r\n    }\r\n}\r\n","import { Component, OnInit, TemplateRef, ViewChild, Input, Output, EventEmitter } from '@angular/core';\r\nimport { VariableSetting } from '../../variable-setting';\r\n\r\n@Component({\r\n  selector: 'lib-constant-edit',\r\n  templateUrl: './constant-edit.component.html',\r\n  styleUrls: ['./constant-edit.component.scss']\r\n})\r\nexport class ConstantEditComponent implements OnInit {\r\n\r\n  @ViewChild('footer') footer: TemplateRef<any>;\r\n\r\n  @Output() closeEmitter = new EventEmitter<any>();\r\n  @Output() submitEmitter = new EventEmitter<string>();\r\n  @Input()\r\n  value: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  clickOK() {\r\n    this.submitEmitter.emit(this.value);\r\n  }\r\n\r\n  clickCancel() {\r\n    this.closeEmitter.emit();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ILookupHttpService, LookupGridResult, RemoteParams } from '@farris/ui-lookup';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ComponentEditLookUpService implements ILookupHttpService {\r\n    constructor(\r\n        private http: HttpService,\r\n    ) {\r\n    }\r\n\r\n    getData(url: string, params?: RemoteParams): Observable<any> {\r\n        const customData = params.customData;\r\n        const index = params.pageIndex || 1;\r\n        const size = params.pageSize || 20;\r\n        const searchValue = params.searchValue;\r\n        if (customData.helpId) {\r\n            let query = `?helpId=${customData.helpId}&pageIndex=${index}&pageSize=${size}`;\r\n            if (searchValue) {\r\n                query += `&searchValue=${searchValue}`;\r\n            }\r\n            url += query;\r\n            return this.http.get(url);\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\n@Injectable()\r\nexport class ComponentEditService {\r\n    constructor(\r\n        private http: HttpService,\r\n    ) {\r\n    }\r\n\r\n    getHelpMetaData(helpId: string, su: string): Observable<any> {\r\n        const url = `/api/runtime/lcm/v1.0/rt-metadatas/${helpId}`;\r\n        return this.http.get(url);\r\n    }\r\n}\r\n","import { ProcessDeUtil } from '../../../../domain/process-de-util';\r\nexport class ComponentEntity {\r\n    Id: string;\r\n    Name: string;\r\n    MetadataId: string;\r\n    ComponentType: string;\r\n    MethodCode: string;\r\n    Execution: string;\r\n    AsyncCallBackType: string;\r\n    Time: string;\r\n    isForCompensation: boolean;\r\n    ActualParameters: Array<ActualParameter>;\r\n    constructor() {\r\n        this.Id = ProcessDeUtil.GenerateElementId();\r\n        this.ActualParameters = new Array();\r\n    }\r\n}\r\nexport class ActualParameter {\r\n    Name: string;\r\n    Value: string;\r\n    ValueText?: string;\r\n    Tag?: string;\r\n    fetchValueMode?: any;\r\n    fetchValueSetting?: any;\r\n}\r\n","import { Component, OnInit, ComponentFactoryResolver, Injector, Input, ViewChild, ElementRef, HostBinding, AfterViewInit, NgZone, TemplateRef, EventEmitter, Output } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { ProcessDesignerUIState } from '../../../../app/process-designer.uistate';\r\nimport { ExpressionService, InjectedType } from '@gsp-svc/expression';\r\nimport { SessionService } from '@ecp-caf/caf-common';\r\nimport { BsModalService } from '@farris/ui-modal';\r\nimport { CommonComponentUiRTService, SelectorResult } from '@gsp-cmp/ccmp-ui';\r\nimport { SelectMetadataRTComponent, Metadata4RefDto, MetadataDto } from '@gsp-lcm/metadatart-selector';\r\nimport { GspComponent } from '@gsp-cmp/common-component';\r\nimport { DataColumn, DatagridComponent } from '@farris/ui-datagrid';\r\nimport { of, forkJoin, Observable } from 'rxjs';\r\nimport { RowEditParam } from '@farris/ui-datagrid/lib/types';\r\nimport { EditorTypes } from '@farris/ui-datagrid-editors';\r\nimport { LookupGridComponent, LookupGridResult, ServerSideToken } from '@farris/ui-lookup';\r\nimport { WebServiceParameter, ParameterFetchValueMode, HelpFetchValueSetting } from '@gsp-cmp/wscmp-models';\r\nimport { ComponentEditLookUpService } from './component-edit-lookup.service';\r\nimport { ComponentEditService } from './component-edit.service';\r\nimport { ComponentEntity, ActualParameter } from './component.entity';\r\nimport { ProcessDeUtil } from '../../../../domain/process-de-util';\r\nimport { MessagerService } from '@farris/ui-messager';\r\n\r\n@Component({\r\n  selector: 'lib-component-edit',\r\n  templateUrl: './component-edit.component.html',\r\n  styleUrls: ['./component-edit.component.scss'],\r\n  providers: [\r\n    ComponentEditService,\r\n    { provide: ServerSideToken, useClass: ComponentEditLookUpService }\r\n  ]\r\n})\r\nexport class ComponentEditComponent implements OnInit, AfterViewInit {\r\n  @HostBinding('class')\r\n  cls = 'farris-main-area flex-column';\r\n\r\n  @ViewChild(DatagridComponent) grid: DatagridComponent;\r\n  @ViewChild(LookupGridComponent) lookup: LookupGridComponent;\r\n\r\n  @ViewChild('footer') footer: TemplateRef<any>;\r\n\r\n  @Output() closeEmitter = new EventEmitter<any>();\r\n  @Output() submitEmitter = new EventEmitter<any>();\r\n\r\n  @ViewChild('inputGroup') inputGroup: ElementRef;\r\n  showClearButton = false;\r\n\r\n  private _component: any = new ComponentEntity();\r\n  @Input()\r\n  set component(cmp: ComponentEntity) {\r\n    if (cmp && cmp.MethodCode) {\r\n      this.service.getHelpMetaData(cmp.MetadataId, '').subscribe(re => {\r\n        const c = JSON.parse(re.content);\r\n        const operation = c.operations.find(o => o.code === cmp.MethodCode);\r\n        if (operation) {\r\n          cmp.ActualParameters = cmp.ActualParameters.map(a => {\r\n            const p = operation.parameters.find(i => i.code === a.Name);\r\n            if (p) {\r\n              return {\r\n                ...a,\r\n                fetchValueMode: p.fetchValueMode,\r\n                fetchValueSetting: p.fetchValueSetting\r\n              };\r\n            } else {\r\n              throw new Error('å½åæä»¶æ¹æ³åæ°ä¸ä¸è´ï¼è¯·æ´æ°ï¼');\r\n            }\r\n          });\r\n          this._component = cmp;\r\n        } else {\r\n          throw new Error('å½åæä»¶å·²ä¸å­å¨æ­¤æ¹æ³ï¼è¯·æ´æ°ï¼');\r\n        }\r\n      });\r\n    } else {\r\n      this._component = new ComponentEntity();\r\n    }\r\n  }\r\n  get component() {\r\n    return this._component;\r\n  }\r\n\r\n  curParameter: ActualParameter;\r\n  columns = [\r\n    { field: 'Name', width: 100, title: 'åæ°å' },\r\n    {\r\n      field: 'Value', width: 100, title: 'åæ°å¼',\r\n      editor: {\r\n        type: 'input-group',\r\n        options: {\r\n          groupText: '<i class=\"f-icon f-icon-lookup\"></i>',\r\n          editable: false,\r\n          clickHandle: (e) => {\r\n            e.formControl.setValue(e.instance.value ? e.instance.value : '');\r\n            this.showExprHelp(e);\r\n          },\r\n          clear: (e) => {\r\n            console.log('clear', e);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  ];\r\n\r\n  helpFields: { idField: string, valueField: string; textField: string } = {\r\n    idField: '',\r\n    valueField: '',\r\n    textField: ''\r\n  };\r\n  dataUri = '/api/runtime/wf/v1.0/dtProcDefs/getHelpData';\r\n  helpId;\r\n  su: string;\r\n  helpCols = [];\r\n  displayType = 'List';\r\n  title = '';\r\n  value: any;\r\n\r\n  cell: any;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private designerState: ProcessDesignerUIState,\r\n    private expr: ExpressionService,\r\n    private resolver: ComponentFactoryResolver,\r\n    private injector: Injector,\r\n    private sessionSrc: SessionService,\r\n    private modalService: BsModalService,\r\n    private componentService: CommonComponentUiRTService,\r\n    private ngZone: NgZone,\r\n    private service: ComponentEditService,\r\n    private util: ProcessDeUtil,\r\n    private message: MessagerService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n  ngAfterViewInit(): void {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      this.inputGroup.nativeElement.addEventListener(\r\n        'mouseenter',\r\n        this.onMouseEnter.bind(this)\r\n      );\r\n      this.inputGroup.nativeElement.addEventListener(\r\n        'mouseleave',\r\n        this.onMouseLeave.bind(this)\r\n      );\r\n    });\r\n  }\r\n\r\n  onMouseEnter(event) {\r\n    this.showClearButton = true;\r\n    if (this.showClearButton) {\r\n      this.toggleClearIcon(event, true);\r\n    }\r\n  }\r\n  onMouseLeave(event) {\r\n    this.showClearButton = false;\r\n    this.toggleClearIcon(event, false);\r\n  }\r\n\r\n  private toggleClearIcon(event: any, isShow = false) {\r\n    const str = isShow ? '' : 'none';\r\n    const clearIcon = event.target.querySelector('.input-group-clear');\r\n    if (clearIcon) {\r\n      clearIcon.style.display = str;\r\n    }\r\n  }\r\n\r\n\r\n  clickOK() {\r\n    this.grid.endCellEdit();\r\n    if (this.validator()) {\r\n      this.submitEmitter.emit(this.component);\r\n    } else {\r\n      this.message.info('å°æªéæ©æä»¶æ¹æ³!');\r\n    }\r\n  }\r\n\r\n  clickCancel() {\r\n    this.closeEmitter.emit();\r\n  }\r\n\r\n  private validator() {\r\n    if (!this.component.MethodCode || !this.component.MetadataId) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  beforeEdit = (param: RowEditParam) => {\r\n    const rowData = param.rowData as any;\r\n    switch (rowData.fetchValueMode) {\r\n      case ParameterFetchValueMode.express:\r\n        param.column.editor = {\r\n          type: 'input-group',\r\n          options: {\r\n            groupText: '<i class=\"f-icon f-icon-lookup\"></i>',\r\n            editable: false,\r\n            clickHandle: (e) => {\r\n              e.formControl.setValue(e.instance.value ? e.instance.value : '');\r\n              this.showExprHelp(e);\r\n            },\r\n            clear: (e) => {\r\n              console.log('clear', e);\r\n            }\r\n          }\r\n        };\r\n        break;\r\n      case ParameterFetchValueMode.none:\r\n        param.column.editor = {\r\n          type: 'input-group',\r\n          options: {\r\n            groupText: '<i class=\"f-icon f-icon-lookup\"></i>',\r\n            editable: false,\r\n            clickHandle: (e) => {\r\n              e.formControl.setValue(e.instance.value ? e.instance.value : '');\r\n              this.showExprHelp(e);\r\n            },\r\n            clear: (e) => {\r\n              console.log('clear', e);\r\n            }\r\n          }\r\n        };\r\n        break;\r\n      case ParameterFetchValueMode.const:\r\n        param.column.editor = { type: EditorTypes.TEXTBOX, options: {} };\r\n        break;\r\n      case ParameterFetchValueMode.enum:\r\n        param.column.editor = { type: EditorTypes.TEXTBOX, options: {} };\r\n        break;\r\n      case ParameterFetchValueMode.help:\r\n        param.column.editor = {\r\n          type: 'input-group',\r\n          options: {\r\n            groupText: '<i class=\"f-icon f-icon-lookup\"></i>',\r\n            editable: false,\r\n            clickHandle: (e) => {\r\n              this.cell = e;\r\n              this.helpId = (rowData.fetchValueSetting as HelpFetchValueSetting).helpId;\r\n              this.su = (rowData.fetchValueSetting as HelpFetchValueSetting).serviceUnit;\r\n              this.getHelpInfo().subscribe(re => {\r\n                console.log(re);\r\n                const meta = re;\r\n                const help = JSON.parse(meta.content) as any;\r\n                this.helpCols = help.dataSource.columns;\r\n                this.displayType = help.displayType;\r\n                this.helpFields = {\r\n                  idField: help.idField,\r\n                  valueField: help.valueField,\r\n                  textField: help.textField\r\n                };\r\n                this.lookup.onClear();\r\n                this.lookup.showDialog();\r\n              }, err => {\r\n                  this.message.error('å¸®å©åæ°æ®ä¸å­å¨ï¼è¯·èç³»ç³»ç»ç®¡çåæ¥çåå ï¼');\r\n              });\r\n            },\r\n            clear: (e) => {\r\n              console.log('clear', e);\r\n            }\r\n          }\r\n        };\r\n        break;\r\n    }\r\n    return of(true);\r\n  }\r\n  afterEdit = (rowIndex: number, rowData: any, column?: DataColumn) => {\r\n    return of(true);\r\n  }\r\n\r\n  clear() {\r\n    this.component = new ComponentEntity();\r\n  }\r\n  selectComponent() {\r\n    const compFactory = this.resolver.resolveComponentFactory(SelectMetadataRTComponent);\r\n    const compRef = compFactory.create(this.injector);\r\n    compRef.instance.typeList = 'WebServiceComponent'; // ç®ååªè½æ ¹æ®åæ°æ®ç±»åè¿æ»¤ï¼åç»­æ·»å æ ç­¾è¿æ»¤\r\n    compRef.instance.selectedMetadata.subscribe(($event: Metadata4RefDto) => {\r\n      try {\r\n        const meta: MetadataDto = $event.metadata;\r\n        this.openComponentSelectorNew(meta.id, this.sessionSrc.getUserSessionId());\r\n      } catch {\r\n        console.log('$event', $event);\r\n        throw new Error('è·åè§£ææä»¶åºé' + $event);\r\n      }\r\n    });\r\n\r\n    const modalConfig = {\r\n      title: 'æä»¶éæ©',\r\n      width: 980,\r\n      height: 548,\r\n      showButtons: false\r\n    };\r\n    const dialog = this.modalService.show(compRef, modalConfig);\r\n    compRef.instance.closeModalEmitter.subscribe($event => dialog.close());\r\n  }\r\n  private openComponentSelectorNew(metadataId: string, sessionId: string) {\r\n    this.componentService.openSelector(metadataId, sessionId).subscribe(\r\n      (selectorResult: SelectorResult) => {\r\n        selectorResult.confirmEvent.subscribe(\r\n          (result: GspComponent) => {\r\n            if (result) {\r\n              this.component.Name = result.name;\r\n              this.component.MetadataId = result.id;\r\n              this.component.MethodCode = result.operations[0].code;\r\n              // this.component.methodName = result.operations[0].name;\r\n              this.component.ActualParameters = [];\r\n\r\n              if (result.operations[0].parameters && result.operations[0].parameters.length > 0) {\r\n                this.component.ActualParameters = result.operations[0].parameters\r\n                  .map((p: WebServiceParameter) => (\r\n                    {\r\n                      Name: p.code, Value: '', Tag: p.fetchValueMode.indexOf('express,none') > -1 ? 'expression' : 'constant',\r\n                      fetchValueMode: p.fetchValueMode,\r\n                      fetchValueSetting: p.fetchValueSetting\r\n                    }));\r\n              }\r\n            }\r\n          });\r\n      });\r\n  }\r\n  showExprHelp(e: any) {\r\n    if (this.designerState.schemas.length > 0) {\r\n      for (const schema of this.designerState.schemas) {\r\n        this.expr.addSchema('Schema', schema);\r\n      }\r\n      if (this.designerState.schemas[0].entityTypes && this.designerState.schemas[0].entityTypes.length > 0) {\r\n        const entityType = this.designerState.schemas[0].entityTypes[0];\r\n        this.expr.addInjectedEntity(entityType.name, 'Schema',\r\n          entityType.name, InjectedType.EntityType);\r\n      }\r\n    }\r\n    const context = new Array();\r\n    if (this.designerState.procInstContext.length > 0) {\r\n      for (const variable of this.designerState.procInstContext) {\r\n        context.push(variable);\r\n        // this.expr.addContext(variable);\r\n      }\r\n    }\r\n    if (this.designerState.formalParameterContext.length > 0) {\r\n      for (const variable of this.designerState.formalParameterContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n        // this.expr.addContext(variable);\r\n      }\r\n    }\r\n    if (this.designerState.participantContext.length > 0) {\r\n      for (const variable of this.designerState.participantContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n        // this.expr.addContext(variable);\r\n      }\r\n    }\r\n    if (this.designerState.processVariableContext.length > 0) {\r\n      for (const variable of this.designerState.processVariableContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n        // this.expr.addContext(variable);\r\n      }\r\n    }\r\n    if (context.length > 0) {\r\n      for (const v of context) {\r\n        this.expr.addContext(v);\r\n      }\r\n    }\r\n    this.expr.addExpressionText(e.instance.value);\r\n    this.expr.buildExpression().then((d: string) => {\r\n        e.formControl.setValue(d);\r\n        e.instance.cd.detectChanges();\r\n    });\r\n  }\r\n\r\n  private getHelpInfo(): Observable<any> {\r\n    return this.service.getHelpMetaData(this.helpId, this.su);\r\n  }\r\n\r\n  dictPicking = () => {\r\n    return of({\r\n      showDialog: true, data: {\r\n        helpId: this.helpId\r\n      }\r\n    });\r\n  }\r\n  dictPicked = (rowData) => {\r\n    if (this.cell) {\r\n      console.log(rowData);\r\n      this.cell.formControl.setValue(this.util.getValue(rowData, this.helpFields.valueField));\r\n      this.cell.instance.cd.detectChanges();\r\n      return of(true);\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, HostBinding, EventEmitter, Output, Input, ViewChild, TemplateRef, Injector, ComponentFactoryResolver } from '@angular/core';\r\nimport { TypeConverter } from '@farris/ui-property-panel';\r\nimport { ProcessVariable } from './process-variable.entity';\r\nimport { EditorTypes } from '@farris/ui-datagrid-editors';\r\nimport { DatagridComponent } from '@farris/ui-datagrid';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { BsModalService } from '@farris/ui-modal';\r\nimport { ConstantEditComponent } from '../variable-setting/views/constant-edit/constant-edit.component';\r\nimport { ProcessDesignerUIState } from '../../app/process-designer.uistate';\r\nimport { ExprEditMode, ExpressionService, InjectedType } from '@gsp-svc/expression';\r\nimport { ComponentEditComponent } from '../variable-setting/views/component-edit/component-edit.component';\r\nimport { RowEditParam, DataColumn } from '@farris/ui-datagrid/lib/types';\r\nimport { of } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'lib-process-variables',\r\n  templateUrl: './process-variables.component.html',\r\n  styleUrls: ['./process-variables.component.scss']\r\n})\r\nexport class ProcessVariablesComponent implements OnInit {\r\n  @HostBinding('class')\r\n  cls = 'farris-main-area flex-column';\r\n\r\n  @Input() variableSetting = false;\r\n  @Output() closeModal = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n  @Output() variableSetEmitter = new EventEmitter<any>();\r\n\r\n  @Input() value: Array<ProcessVariable> = new Array();\r\n  @Input() editorParams: any = {};\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n  @ViewChild('grid') grid: DatagridComponent;\r\n\r\n  private basicTypes = [\r\n    { value: 'String', text: 'å­ç¬¦' },\r\n    { value: 'Integer', text: 'æ´å½¢' },\r\n    { value: 'Decimal', text: 'å°æ°' },\r\n    { value: 'Boolean', text: 'å¸å°' },\r\n    // { value: 'DateTime', text: 'æ¥æ' }\r\n  ];\r\n\r\n  private tags = [\r\n    { value: 'constant', text: 'å¸¸é' },\r\n    { value: 'expression', text: 'è¡¨è¾¾å¼' },\r\n    { value: 'component', text: 'æä»¶' }\r\n  ];\r\n\r\n  columns = [\r\n    {\r\n      field: 'name', width: 80, title: 'åéç¼å·', sortable: true,\r\n      editor: { type: EditorTypes.TEXTBOX, options: {} },\r\n      validators: [\r\n        { type: 'required', messager: 'å¿å¡«' }\r\n      ]\r\n    },\r\n    {\r\n      field: 'documentation', width: 80, title: 'åéåç§°', sortable: true,\r\n      editor: { type: EditorTypes.TEXTBOX, options: {} },\r\n      validators: [\r\n        { type: 'required', messager: 'å¿å¡«' }\r\n      ]\r\n    },\r\n    {\r\n      field: 'basicType', width: 60, title: 'åéç±»å', sortable: true,\r\n      formatter: {\r\n        type: 'enum',\r\n        options: { valueField: 'value', textField: 'text', data: this.basicTypes }\r\n      },\r\n      editor: {\r\n        type: EditorTypes.COMBOLIST,\r\n        options: { valueField: 'value', textField: 'text', data: this.basicTypes, idField: 'value', panelHeight: 'auto', showClear: false }\r\n      },\r\n      validators: [\r\n        { type: 'required', messager: 'å¿å¡«' }\r\n      ]\r\n    }, {\r\n      field: 'description', width: 100, title: 'æè¿°', showTips: true,\r\n      editor: { type: EditorTypes.TEXTBOX, options: {} },\r\n    }, {\r\n      field: 'tag', width: 60, title: 'åå§å¼ç±»å', sortable: true,\r\n      formatter: {\r\n        type: 'enum',\r\n        options: { valueField: 'value', textField: 'text', data: this.tags }\r\n      },\r\n      editor: {\r\n        type: EditorTypes.COMBOLIST,\r\n        options: {\r\n          valueField: 'value', textField: 'text', data: this.tags, idField: 'value', panelHeight: 'auto',\r\n          selectChange: (e) => {\r\n            this.value = this.value.map(v => {\r\n              if (v.id === e.rowId) {\r\n                v.value = null;\r\n                v.valueText = null;\r\n                if (v.component) {\r\n                  v.component = null;\r\n                }\r\n                return v;\r\n              } else {\r\n                return v;\r\n              }\r\n            });\r\n          },\r\n          clear: (e) => {\r\n            this.value = this.value.map(v => {\r\n              if (v.id === e.rowId) {\r\n                v.value = null;\r\n                v.valueText = null;\r\n                if (v.component) {\r\n                  v.component = null;\r\n                }\r\n                return v;\r\n              } else {\r\n                return v;\r\n              }\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }, {\r\n      field: 'valueText', width: 120, title: 'åå§å¼', showTips: true,\r\n      editor: { type: EditorTypes.TEXTBOX, options: {} }\r\n    }\r\n  ];\r\n\r\n  modalConfig = {\r\n    title: 'æµç¨åé',\r\n    width: 1070,\r\n    height: 510,\r\n    showButtons: true\r\n  };\r\n\r\n  constructor(\r\n    private message: MessagerService,\r\n    private resolver: ComponentFactoryResolver,\r\n    private injector: Injector,\r\n    private modalService: BsModalService,\r\n    private uistate: ProcessDesignerUIState,\r\n    private expr: ExpressionService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    if (this.variableSetting) {\r\n      this.columns = this.columns.filter(c => c.field !== 'tag'\r\n        && c.field !== 'valueText' && c.field !== 'description'\r\n      );\r\n    }\r\n  }\r\n\r\n  add() {\r\n    const variable = new ProcessVariable();\r\n    this.value = this.value.concat([variable]);\r\n  }\r\n\r\n  delete() {\r\n    this.grid.endCellEdit();\r\n    const selected = this.grid.selectedRow;\r\n    if (!selected) {\r\n      this.message.info('å°æªéä¸­æµç¨åéï¼');\r\n      return;\r\n    }\r\n    this.value = this.value.filter(v => v.id !== selected.data.id);\r\n  }\r\n\r\n  clickOK() {\r\n    if (this.variableSetting) {\r\n      const selecteds = this.grid.checkeds;\r\n      if (selecteds.length > 0) {\r\n        this.variableSetEmitter.emit(selecteds);\r\n      } else {\r\n        this.message.info('å°æªéä¸­æµç¨åéï¼');\r\n      }\r\n    } else {\r\n      this.grid.endCellEdit();\r\n      if (this.validator()) {\r\n        const object = { value: this.value, parameters: null };\r\n        this.submitModal.emit(object);\r\n      }\r\n    }\r\n  }\r\n\r\n  clickCancel() {\r\n    this.closeModal.emit();\r\n  }\r\n  beforeEdit = (param: RowEditParam) => {\r\n    const rowData = param.rowData as any;\r\n    const column = param.column;\r\n    if (column.field === 'valueText') {\r\n      if (!(rowData as ProcessVariable).tag) {\r\n        return of(false);\r\n      }\r\n      if ((rowData as ProcessVariable).tag === this.tags[0].value) {\r\n        param.column.editor = { type: EditorTypes.TEXTBOX, options: {} };\r\n      } else {\r\n        param.column.editor = {\r\n          type: 'input-group',\r\n          options: {\r\n            groupText: '<i class=\"f-icon f-icon-lookup\"></i>',\r\n            editable: false,\r\n            showClear: false,\r\n            clickHandle: (e) => {\r\n              e.formControl.setValue(e.instance.value ? e.instance.value : '');\r\n              this.valueEdit(e);\r\n            },\r\n            clear: (e) => {\r\n              console.log('clear', e);\r\n            }\r\n          }\r\n        };\r\n      }\r\n    }\r\n    return of(true);\r\n  }\r\n\r\n  endEdit(data: any) {\r\n    if (data.column.field === 'valueText' && data.rowData.tag === this.tags[0].value) {\r\n      data.rowData.value = data.rowData.valueText;\r\n    }\r\n  }\r\n  valueEdit(e: any) {\r\n    const rowdata: ProcessVariable = e.rowData;\r\n    switch (rowdata.tag) {\r\n      case this.tags[0].value:\r\n        this.editConstant(e);\r\n        break;\r\n      case this.tags[1].value:\r\n        this.editExpression(e);\r\n        break;\r\n      case this.tags[2].value:\r\n        this.editComponent(e);\r\n        break;\r\n    }\r\n  }\r\n  private editConstant(e: any) {\r\n    const data: ProcessVariable = e.rowData;\r\n    let dialog: any;\r\n    const compFactory = this.resolver.resolveComponentFactory(ConstantEditComponent);\r\n    const compRef = compFactory.create(this.injector);\r\n    compRef.instance.value = data.value;\r\n    compRef.instance.submitEmitter.subscribe((re: string) => {\r\n      e.formControl.setValue(re);\r\n      e.instance.cd.detectChanges();\r\n      data.value = re;\r\n      dialog.close();\r\n    });\r\n    compRef.instance.closeEmitter.subscribe(re => {\r\n      dialog.close();\r\n    });\r\n    const modalConfig = {\r\n      title: 'å¸¸é',\r\n      width: 340,\r\n      height: 280,\r\n      showButtons: true,\r\n      buttons: compRef.instance.footer\r\n    };\r\n    dialog = this.modalService.show(compRef, modalConfig);\r\n  }\r\n\r\n  private editExpression(e: any) {\r\n    const data: ProcessVariable = e.rowData;\r\n    if (this.uistate.schemas.length > 0) {\r\n      for (const schema of this.uistate.schemas) {\r\n        this.expr.addSchema('Schema', schema);\r\n      }\r\n      if (this.uistate.schemas[0].entityTypes && this.uistate.schemas[0].entityTypes.length > 0) {\r\n        const entityType = this.uistate.schemas[0].entityTypes[0];\r\n        this.expr.addInjectedEntity(entityType.name, 'Schema',\r\n          entityType.name, InjectedType.EntityType);\r\n      }\r\n    }\r\n    const context = new Array();\r\n    if (this.uistate.procInstContext.length > 0) {\r\n      for (const variable of this.uistate.procInstContext) {\r\n        context.push(variable);\r\n      }\r\n    }\r\n    if (this.uistate.formalParameterContext.length > 0) {\r\n      for (const variable of this.uistate.formalParameterContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (this.uistate.participantContext.length > 0) {\r\n      for (const variable of this.uistate.participantContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (this.uistate.processVariableContext.length > 0) {\r\n      for (const variable of this.uistate.processVariableContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (context.length > 0) {\r\n      for (const v of context) {\r\n        this.expr.addContext(v);\r\n      }\r\n    }\r\n    this.expr.setEditPattern(ExprEditMode.Advanced); // è¡¨è¾¾å¼å±ç°æ¨¡å¼ï¼é»è®¤é«çº§ç\r\n    this.expr.addExpressionText(data.value);\r\n    this.expr.buildExpression().then((re: string) => {\r\n      e.formControl.setValue(re);\r\n      e.instance.cd.detectChanges();\r\n      data.value = re;\r\n    });\r\n  }\r\n\r\n  private editComponent(e: any) {\r\n    const data: ProcessVariable = e.rowData;\r\n    let dialog: any;\r\n    const compFactory = this.resolver.resolveComponentFactory(ComponentEditComponent);\r\n    const compRef = compFactory.create(this.injector);\r\n    compRef.instance.component = data.component;\r\n    compRef.instance.submitEmitter.subscribe((re: any) => {\r\n      e.formControl.setValue(re.Name + '-' + re.MethodCode);\r\n      e.instance.cd.detectChanges();\r\n      data.value = re.Id;\r\n      data.component = re;\r\n      dialog.close();\r\n    });\r\n    compRef.instance.closeEmitter.subscribe(re => {\r\n      dialog.close();\r\n    });\r\n    const modalConfig = {\r\n      title: 'æä»¶',\r\n      width: 800,\r\n      height: 515,\r\n      showButtons: true,\r\n      buttons: compRef.instance.footer\r\n    };\r\n    dialog = this.modalService.show(compRef, modalConfig);\r\n  }\r\n\r\n  private validator() {\r\n    for (const item of this.value) {\r\n      if (!item.name) {\r\n        this.message.warning('åéç¼å·ä¸åè®¸ä¸ºç©ºï¼');\r\n        return false;\r\n      }\r\n      if (!item.documentation) {\r\n        this.message.warning('åéåç§°ä¸åè®¸ä¸ºç©ºï¼');\r\n        return false;\r\n      }\r\n      if (!this.IsMatchVariableNameRules(item.name)) {\r\n        this.message.warning('åéç¼å·åªè½åå«å­æ¯ãæ°å­åä¸åçº¿ï¼ä¸ä¸è½ä»¥æ°å­å¼å¤´ï¼');\r\n        return false;\r\n      }\r\n    }\r\n    if (this.value.length > 1) {\r\n      for (let i = 0; i < this.value.length; i++) {\r\n        const code1 = this.value[i].name;\r\n        for (let j = i + 1; j < this.value.length; j++) {\r\n          const code2 = this.value[j].name;\r\n\r\n          if (code1 === code2) {\r\n            this.message.warning(`æµç¨åéç¼å·ä¸åè®¸éå¤ï¼`);\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  private IsMatchVariableNameRules(str: string) {\r\n    const Regx = /^[a-zA-Z_][a-zA-Z_0-9]{0,}/;\r\n    if (Regx.test(str)) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\nexport class ProcessVariablesConverter implements TypeConverter {\r\n  constructor() { }\r\n\r\n  convertTo(data: any[]): string {\r\n    if (data && data.length > 0) {\r\n      return 'ï¼å·²è®¾ç½®ï¼';\r\n    } else {\r\n      return 'ï¼æªè®¾ç½®ï¼';\r\n    }\r\n  }\r\n}\r\n","import { ProcessDeUtil } from '../../domain/process-de-util';\r\n\r\nexport class TimeLimitInfo {\r\n    tag: string;\r\n\r\n    /**\r\n     * æ¯å¦å¯ç¨\r\n     */\r\n    enable: boolean;\r\n\r\n    /**\r\n     * éå®æ¶é¿\r\n     */\r\n    dueTime: string;\r\n\r\n    /**\r\n     * æ¶é´åä½\r\n     */\r\n    timeUnit: string;\r\n\r\n    expireOperations: Array<ExpireOperation>;\r\n\r\n    constructor() {\r\n        this.tag = 'constant';\r\n        this.enable = false;\r\n        this.timeUnit = 'day';\r\n        this.expireOperations = new Array();\r\n    }\r\n}\r\n\r\nexport class ExpireOperation {\r\n    id: string;\r\n    /**\r\n     * æéæ§å¶ç±»å\r\n     */\r\n    durationType: string;\r\n\r\n    /**\r\n     * ä»»å¡æé\r\n     */\r\n    timeDuration: number;\r\n\r\n    /**\r\n     * æ¶é´åä½\r\n     */\r\n    timeUnit: string;\r\n\r\n    /**\r\n     * æä½ç±»ååç§°\r\n     */\r\n    operationTypeName: string;\r\n\r\n    constructor() {\r\n        this.id = ProcessDeUtil.GenerateElementId();\r\n        this.durationType = 'BeforeDuration';\r\n        this.timeDuration = 0;\r\n        this.timeUnit = 'day';\r\n        // é»è®¤æä½ç±»åæ¯åéé¢è­¦æ¶æ¯\r\n        this.operationTypeName = 'SendMessageExpireOperation';\r\n    }\r\n}\r\n\r\n/**\r\n * åéé¢è­¦ä¿¡æ¯æ¹å¼\r\n */\r\nexport class SendMessage extends ExpireOperation{\r\n    /**\r\n     * é¢è­¦ä¿¡æ¯åå®¹\r\n     */\r\n    message: string;\r\n\r\n    /**\r\n     * åéé¢è­¦ä¿¡æ¯ç±»å\r\n     */\r\n    sendType: string;\r\n\r\n    /**\r\n     * é¢è­¦ä¿¡æ¯ä¸»é¢\r\n     */\r\n    subject: string;\r\n\r\n    /**\r\n     * æ¶æ¯æ¥æ¶äºº\r\n     * ç¨æ·IDs\r\n     */\r\n    receiver?: string;\r\n\r\n    /**\r\n     * æ¶æ¯æ¥æ¶äººæ¾ç¤º\r\n     */\r\n    receiverText?: string;\r\n\r\n    /**\r\n     * å¯ç¨å¾ªç¯é¢è­¦\r\n     */\r\n    cycleEnable: boolean;\r\n\r\n    /**\r\n     * å¾ªç¯é¢è­¦æ¶é´é´é\r\n     */\r\n    cycleTime: string;\r\n\r\n    /**\r\n     * å¾ªç¯é¢è­¦æ¶é´é´éåä½\r\n     */\r\n    cycleTimeUnit: string;\r\n\r\n    constructor(location) {\r\n      super();\r\n      this.cycleEnable = false;\r\n      this.cycleTimeUnit = 'day';\r\n      this.receiver = location === 'activity' ? 'workItemParticipant' : 'procInstCreator';\r\n      this.receiverText = location === 'activity' ? 'å½åèç¹åçäºº' : 'æµç¨åèµ·äºº';\r\n      this.subject = 'è¶æ¶é¢è­¦';\r\n      this.message = location === 'activity' ? 'æ¨æä¸æ¡å¾åæ¶æ¯å³å°è¶æ¶ã' : 'æ¨æä¸æ¡æ¶æ¯å³å°è¶æ¶';\r\n    }\r\n}\r\n\r\nexport class AutoHandle extends ExpireOperation {\r\n  /**\r\n   * åçç±»åï¼éè¿é©³åå¦å³ç­ç­\r\n   */\r\n  autoHandleType: string;\r\n\r\n  /**\r\n   * åçæè§\r\n   */\r\n  message: string;\r\n\r\n  constructor(type: string) {\r\n    super();\r\n    this.autoHandleType = type;\r\n    this.message = 'åæ';\r\n  }\r\n}\r\n","import { Component, OnInit, Injector, ViewChild, TemplateRef, Input, Output, EventEmitter } from '@angular/core';\r\nimport {ExpireOperation, SendMessage} from '../time-limit-control.entity';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { ProcessDesignerUIState } from '../../../app/process-designer.uistate';\r\n\r\n@Component({\r\n  selector: 'lib-send-message-operation',\r\n  templateUrl: './send-message-operation.component.html',\r\n  styleUrls: ['./send-message-operation.component.scss']\r\n})\r\nexport class SendMessageOperationComponent implements OnInit {\r\n\r\n  @ViewChild('footer') footer: TemplateRef<any>;\r\n  @Input()\r\n  set value(info: SendMessage) {\r\n    this.operation = Object.assign({}, info);\r\n    if (this.operation.sendType === undefined) {\r\n      const sendMessage = new SendMessage(this.location);\r\n      this.operation.cycleEnable = sendMessage.cycleEnable;\r\n      this.operation.cycleTimeUnit = sendMessage.cycleTimeUnit;\r\n      this.operation.receiver = sendMessage.receiver;\r\n      this.operation.subject = sendMessage.subject;\r\n      this.operation.message = sendMessage.message;\r\n    }\r\n    if (this.operation.receiver && this.operation.receiver.length > 0) {\r\n      let array = this.operation.receiver.split(',');\r\n      if (array.indexOf('workItemParticipant') > -1) {\r\n        this.receiverVari = 'workItemParticipant';\r\n        this.activityReceiverVar += 'workItemParticipant,';\r\n      }\r\n      if (array.indexOf('procInstCreator') > -1) {\r\n        this.receiverVari = 'procInstCreator';\r\n        this.activityReceiverVar += 'procInstCreator,';\r\n      }\r\n      if (array.indexOf('preActExecutors') > -1){\r\n        this.activityReceiverVar += 'preActExecutors,';\r\n      }\r\n      if(this.activityReceiverVar.length > 0){\r\n        this.activityReceiverVar = this.activityReceiverVar.substring(0,this.activityReceiverVar.length-1);\r\n      }\r\n      if (array.length > 0) {\r\n        array = array.filter(a => a !== 'procInstCreator');\r\n        this.bindingData.id = '';\r\n        for (const r of array) {\r\n          this.bindingData.id += r + ',';\r\n        }\r\n        if (this.bindingData.id) {\r\n          this.bindingData.id = this.bindingData.id.substring(0, this.bindingData.id.length - 1);\r\n        }\r\n      }\r\n    }\r\n    if (this.operation.receiverText && this.operation.receiverText.length > 0) {\r\n      let array = this.operation.receiverText.split(',');\r\n      if (array.length > 0) {\r\n        array = array.filter(a => a !== 'æµç¨åèµ·äºº');\r\n        this.bindingData.name = '';\r\n        for (const r of array) {\r\n          this.bindingData.name += r + ',';\r\n        }\r\n        if (this.bindingData.name) {\r\n          this.bindingData.name = this.bindingData.name.substring(0, this.bindingData.name.length - 1);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  get value() {\r\n    return this.operation;\r\n  }\r\n\r\n  // operation: ExpireOperation = new ExpireOperation();\r\n  operation: SendMessage = new SendMessage('activity');\r\n  @Output() closeEmitter = new EventEmitter<any>();\r\n  @Output() submitEmitter = new EventEmitter<ExpireOperation>();\r\n\r\n  typeGroup = this.uistate.messageChannels.map(m => ({ value: m.code, name: m.name }));\r\n\r\n  receiverVariables = [\r\n    { value: 'procInstCreator', name: 'æµç¨åèµ·äºº' }\r\n  ];\r\n  activityReceiverVariables = [\r\n    { value: 'workItemParticipant', name: 'å½åèç¹åçäºº' },\r\n    { value: 'procInstCreator', name: 'æµç¨åèµ·äºº' },\r\n    { value: 'preActExecutors', name: 'ä¸ä¸èç¹åçäºº' }\r\n  ];\r\n\r\n  placeholder = '';\r\n  placeholder2 = '';\r\n\r\n  parser = (val: string | number) => {\r\n    // console.log(val);\r\n    return Number(val);\r\n  }\r\n\r\n  timeUnitCollection = [\r\n    { value: 'day', text: 'å¤©' },\r\n    { value: 'hour', text: 'æ¶' },\r\n    { value: 'minute', text: 'å' }\r\n  ];\r\n\r\n  location: 'activity' | 'process' = 'activity';\r\n\r\n  receiverVari: string;\r\n\r\n  activityReceiverVar: string = '';\r\n\r\n  bindingData: { id?, name?} = {};\r\n\r\n  constructor(\r\n    private injector: Injector,\r\n    private message: MessagerService,\r\n    private uistate: ProcessDesignerUIState\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  clickOK() {\r\n    this.operation.cycleTime += '';\r\n    if (this.location === 'process') {\r\n      this.setReceiver();\r\n    }\r\n    if(this.location === 'activity') {\r\n      this.setActivityReceiver()\r\n    }\r\n    if (this.validator()) {\r\n      this.submitEmitter.emit(this.operation);\r\n    }\r\n  }\r\n\r\n  clickCancel() {\r\n    this.closeEmitter.emit();\r\n  }\r\n\r\n  clear() {\r\n    this.bindingData = {};\r\n  }\r\n\r\n  private setReceiver() {\r\n    let receiver = '';\r\n    let receiverText = '';\r\n    if (this.receiverVari) {\r\n      receiver += this.receiverVari + ',';\r\n      const array = this.receiverVari.split(',');\r\n      if (array.length > 0) {\r\n        for (const a of array) {\r\n          const t = this.receiverVariables.find(v => v.value === a).name;\r\n          receiverText += t + ',';\r\n        }\r\n      }\r\n    }\r\n    if (this.bindingData.id) {\r\n      receiver += this.bindingData.id + ',';\r\n      receiverText += this.bindingData.name + ',';\r\n    }\r\n    if (receiver) {\r\n      receiver = receiver.substring(0, receiver.length - 1);\r\n    }\r\n    if (receiverText) {\r\n      receiverText = receiverText.substring(0, receiverText.length - 1);\r\n    }\r\n    this.operation.receiver = receiver;\r\n    this.operation.receiverText = receiverText;\r\n  }\r\n\r\n  setActivityReceiver(){\r\n    let receiver = '';\r\n    if (this.activityReceiverVar) {\r\n      receiver += this.activityReceiverVar + ',';\r\n    }\r\n    if (receiver) {\r\n      receiver = receiver.substring(0, receiver.length - 1);\r\n    }\r\n    this.operation.receiver = receiver;\r\n  }\r\n  private validator(): boolean {\r\n    if (!this.operation.sendType) {\r\n      this.message.info('åéæ¹å¼ä¸åè®¸ä¸ºç©ºï¼');\r\n      return false;\r\n    }\r\n    if (!this.operation.subject) {\r\n      this.message.info('æ¶æ¯ä¸»é¢ä¸åè®¸ä¸ºç©ºï¼');\r\n      return false;\r\n    }\r\n    if (!this.operation.message) {\r\n      this.message.info('æ¶æ¯åå®¹ä¸åè®¸ä¸ºç©ºï¼');\r\n      return false;\r\n    }\r\n    if (!this.operation.receiver) {\r\n      this.message.info('æ¥æ¶äººä¸åè®¸ä¸ºç©ºï¼');\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, OnInit, Output, TemplateRef, ViewChild } from '@angular/core';\r\nimport { AutoHandle, ExpireOperation } from \"../time-limit-control.entity\";\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { ProcessDesignerUIState } from '../../../app/process-designer.uistate';\r\n\r\n@Component({\r\n  selector: 'lib-auto-handle-operation',\r\n  templateUrl: './auto-handle-operation.component.html',\r\n  styleUrls: ['./auto-handle-operation.component.css']\r\n})\r\nexport class AutoHandleOperationComponent implements OnInit {\r\n\r\n  @ViewChild('footer') footer: TemplateRef<any>;\r\n  @Input()\r\n  set value(info: AutoHandle) {\r\n    this.operation = Object.assign({}, info);\r\n    if (this.operation.autoHandleType === undefined) {\r\n      const autoHandle = new AutoHandle(this.autoHandleType[0].value);\r\n      this.operation.autoHandleType = autoHandle.autoHandleType;\r\n      this.operation.message = autoHandle.message;\r\n    }\r\n  }\r\n\r\n  get value() {\r\n    return this.operation;\r\n  }\r\n\r\n  placeholder = '';\r\n  operation: AutoHandle = new AutoHandle('Pass');\r\n  @Output() submitEmitter = new EventEmitter<ExpireOperation>();\r\n  @Output() closeEmitter = new EventEmitter<any>();\r\n\r\n  autoHandleType = [\r\n    // { value: 'autoPass', text: 'èªå¨éè¿' },\r\n    // { value: 'autoBack', text: 'èªå¨é©³å' }\r\n  ];\r\n\r\n  constructor(\r\n    private message: MessagerService,\r\n    public uiState: ProcessDesignerUIState,\r\n  ) {\r\n    for(const item of this.uiState.propertyData.ApprovalItems) {\r\n      this.autoHandleType.push({value: item.Value,text: item.Text});\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  clickOK() {\r\n    if (this.validator()) {\r\n      this.submitEmitter.emit(this.operation);\r\n    }\r\n  }\r\n\r\n  clickCancel() {\r\n    this.closeEmitter.emit();\r\n  }\r\n\r\n  private validator(): boolean {\r\n    if (!this.operation.message) {\r\n      this.message.info('èªå¨åçæè§ä¸åè®¸ä¸ºç©ºï¼');\r\n      return false;\r\n    }\r\n    if (!this.operation.autoHandleType) {\r\n      this.message.info('èªå¨åçä¸åè®¸ä¸ºç©ºï¼');\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, HostBinding, Output, EventEmitter, Input, ViewChild, TemplateRef, Injector, ComponentFactoryResolver } from '@angular/core';\r\nimport { TypeConverter } from '@farris/ui-property-panel';\r\nimport { BsModalService } from '@farris/ui-modal';\r\nimport { SendMessageOperationComponent } from './send-message-operation/send-message-operation.component';\r\nimport { AutoHandleOperationComponent } from \"./auto-handle-operation/auto-handle-operation.component\";\r\nimport {TimeLimitInfo, ExpireOperation, SendMessage, AutoHandle} from './time-limit-control.entity';\r\nimport { EditorTypes } from '@farris/ui-datagrid-editors';\r\nimport { DatagridComponent } from '@farris/ui-datagrid';\r\nimport { MessagerService } from '@farris/ui-messager';\r\n\r\n@Component({\r\n  selector: 'lib-time-limit-control',\r\n  templateUrl: './time-limit-control.component.html',\r\n  styleUrls: ['./time-limit-control.component.scss']\r\n})\r\nexport class TimeLimitControlComponent implements OnInit {\r\n  @HostBinding('class')\r\n  cls = 'farris-main-area flex-column';\r\n\r\n  @Output() closeModal = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n\r\n\r\n  @Input() set value(v: TimeLimitInfo) {\r\n    if (v) {\r\n      this.timeLimitInfo = v;\r\n    } else {\r\n      this.timeLimitInfo = new TimeLimitInfo();\r\n    }\r\n    // å¼å®¹åå²æ°æ®ä¸­çæä½ç±»å\r\n    for (const operation of this.timeLimitInfo.expireOperations) {\r\n      if (operation.operationTypeName === undefined) {\r\n        operation.operationTypeName = 'SendMessageExpireOperation';\r\n      }\r\n    }\r\n  }\r\n  @Input() editorParams: any = {};\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n  @ViewChild('cell') cell: TemplateRef<any>;\r\n  @ViewChild('grid') grid: DatagridComponent;\r\n\r\n  modalConfig = {\r\n    title: 'è¶æ¶æä½',\r\n    width: 580,\r\n    height: 460,\r\n    showButtons: true\r\n  };\r\n\r\n  timeLimitInfo: TimeLimitInfo = new TimeLimitInfo();\r\n\r\n  tagCollection = [\r\n    { value: 'constant', text: 'åºå®å¼' },\r\n    { value: 'scope', text: 'æ¶é´èå´' }\r\n  ];\r\n\r\n  timeUnitCollection = [\r\n    { value: 'day', text: 'å¤©' },\r\n    { value: 'hour', text: 'æ¶' },\r\n    { value: 'minute', text: 'å' }\r\n  ];\r\n\r\n  durationTypeCollection = [\r\n    { value: 'BeforeDuration', text: 'å°æä¹å' },\r\n    { value: 'OnDuration', text: 'å°ææ¶' },\r\n    { value: 'AfterDuration', text: 'å°æä¹å' }\r\n  ];\r\n\r\n  activityOperationTypeName = [\r\n    { value : 'SendMessageExpireOperation', text: 'è¶æ¶é¢è­¦'},\r\n    { value : 'AutoHandleExpireOperation', text : 'èªå¨åç' }\r\n  ];\r\n\r\n  processOperationTypeName = [\r\n    { value : 'SendMessageExpireOperation', text: 'è¶æ¶é¢è­¦'}\r\n  ];\r\n\r\n  operationTypeName = [];\r\n\r\n  timeScopeCollection = [\r\n    {value:'curDay',name:'å½å¤©'}\r\n  ]\r\n  timeScopeValue = this.timeScopeCollection[0].value\r\n  cols = [];\r\n\r\n  location: 'activity' | 'process' = 'activity';\r\n\r\n  parser = (val: string | number) => {\r\n    // console.log(val);\r\n    return Number(val);\r\n  }\r\n\r\n  durationTypeChange = (data) => {\r\n    if (data && data.value && data.value.value === this.durationTypeCollection[1].value) {\r\n      const operation = this.timeLimitInfo.expireOperations.find(e => e.id === data.rowData.id);\r\n      operation.timeDuration = 0;\r\n    }\r\n  }\r\n  constructor(\r\n    private resolver: ComponentFactoryResolver,\r\n    private injector: Injector,\r\n    private modalService: BsModalService,\r\n    private message: MessagerService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.location = this.editorParams.location;\r\n    if (this.location === 'activity') {\r\n      this.operationTypeName = this.activityOperationTypeName;\r\n    } else {\r\n      this.operationTypeName = this.processOperationTypeName;\r\n    }\r\n    this.cols = [\r\n      {\r\n        field: 'durationType', width: 80, title: 'æéç±»å',\r\n        formatter: {\r\n          type: 'enum',\r\n          options: { valueField: 'value', textField: 'text', data: this.durationTypeCollection }\r\n        },\r\n        editor: {\r\n          type: EditorTypes.COMBOLIST,\r\n          options: {\r\n            valueField: 'value', textField: 'text', data: this.durationTypeCollection, idField: 'value', panelHeight: 'auto',\r\n            valueChange: this.durationTypeChange, showClear: false\r\n          }\r\n        },\r\n        validators: [\r\n          { type: 'required', messager: 'å¿å¡«' }\r\n        ]\r\n      },\r\n      {\r\n        field: 'timeDuration', width: 60, title: 'æ¶é¿',\r\n        editor: {\r\n          type: EditorTypes.NUMBERBOX, options: { min: 0},\r\n        },\r\n        validators: [\r\n          { type: 'required', messager: 'å¿å¡«' }\r\n        ]\r\n      },\r\n      {\r\n        field: 'timeUnit', width: 60, title: 'åä½',\r\n        formatter: {\r\n          type: 'enum',\r\n          options: { valueField: 'value', textField: 'text', data: this.timeUnitCollection }\r\n        },\r\n        editor: {\r\n          type: EditorTypes.COMBOLIST,\r\n          options: { valueField: 'value', textField: 'text', data: this.timeUnitCollection, idField: 'value', panelHeight: 'auto' }\r\n        },\r\n        validators: [\r\n          { type: 'required', messager: 'å¿å¡«' }\r\n        ]\r\n      },\r\n      {\r\n        field: 'operationTypeName', width: 100, title: 'æä½ç±»ååç§°',\r\n        formatter: {\r\n          type: 'enum',\r\n          options: { valueField: 'value', textField: 'text', data: this.operationTypeName }\r\n        },\r\n        editor: {\r\n          type: EditorTypes.COMBOLIST,\r\n          options: { valueField: 'value', textField: 'text', data: this.operationTypeName, idField: 'value', panelHeight: 'auto' }\r\n        },\r\n        validators: [\r\n          { type: 'required', messager: 'å¿å¡«' }\r\n        ]\r\n      },\r\n      {\r\n        field: 'sendType', width: 80, title: 'æä½', template: this.cell,\r\n        validators: [\r\n          { type: 'required', messager: 'å¿å¡«' }\r\n        ]\r\n      }\r\n    ];\r\n  }\r\n\r\n  // beforeEdit = (param: RowEditParam) => {\r\n  //   const rowData = param.rowData as any;\r\n  //   if(rowData.durationType === 'OnDuration'){\r\n  //     if(param.column.field === 'timeUnit'){\r\n  //       rowData.timeUnit = 'day'\r\n  //       param.column.editor = {};\r\n  //     } else if(param.column.field === 'timeDuration'){\r\n  //       rowData.timeDuration = 0;\r\n  //       param.column.editor = {};\r\n  //     } else {\r\n  //       const fieldValue = this.cols.find(col => col.field === param.column.field);\r\n  //       param.column.editor = fieldValue.editor;\r\n  //     }\r\n  //   }\r\n  //   return of(true);\r\n  // }\r\n\r\n  clickOK() {\r\n    this.grid.endCellEdit();\r\n    this.timeLimitInfo.dueTime += '';\r\n    if (this.validator()) {\r\n      const object = { value: this.timeLimitInfo, parameters: null };\r\n      this.submitModal.emit(object);\r\n    }\r\n  }\r\n\r\n  clickCancel() {\r\n    this.closeModal.emit();\r\n  }\r\n\r\n  private validator(): boolean {\r\n    if (this.timeLimitInfo.expireOperations\r\n      && this.timeLimitInfo.expireOperations.length > 0) {\r\n      for (const e of this.timeLimitInfo.expireOperations) {\r\n        if (e.operationTypeName === 'SendMessageExpireOperation') {\r\n          const a = <SendMessage>e;\r\n          if (!a.sendType) {\r\n            this.message.info('è¯·è®¾ç½®è¶æ¶æä½ï¼');\r\n            return false;\r\n          }\r\n        }\r\n        if (e.operationTypeName === 'AutoHandleExpireOperation') {\r\n          const a = <AutoHandle>e;\r\n          if (!a.autoHandleType) {\r\n            this.message.info('è¯·è®¾ç½®èªå¨åçç±»åï¼');\r\n            return false;\r\n          }\r\n          if (!a.message) {\r\n            this.message.info('è¯·è®¾ç½®èªå¨åçæè§ï¼');\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  add() {\r\n    let operation = new ExpireOperation();\r\n    this.timeLimitInfo.expireOperations.push(operation);\r\n    this.grid.loadData(this.timeLimitInfo.expireOperations);\r\n    this.grid.selectRow(operation.id);\r\n  }\r\n\r\n  remove() {\r\n    this.grid.endCellEdit();\r\n    const curItem = this.grid.selectedRow;\r\n    if (!curItem) {\r\n      this.message.info('å°æªéä¸­é¢è­¦æä½ï¼');\r\n      return;\r\n    }\r\n    const i = this.timeLimitInfo.expireOperations.findIndex(a => a.id === curItem.data.id);\r\n    if (i > -1) {\r\n      this.timeLimitInfo.expireOperations.splice(i, 1);\r\n      this.grid.loadData(this.timeLimitInfo.expireOperations);\r\n    }\r\n  }\r\n\r\n  editOperation(ctx: any){\r\n    this.grid.endCellEdit();\r\n    if (ctx.rowData.operationTypeName === 'SendMessageExpireOperation'){\r\n      this.sendMassageOperation(ctx);\r\n    }\r\n    if (ctx.rowData.operationTypeName === 'AutoHandleExpireOperation'){\r\n      this.message.confirm(\"ä¸ä¸èç¹æ¯ç±å½ååçäººææ´¾çè¯ï¼å½åèç¹ä¸æ¯æä»»å¡èªå¨åç\").subscribe(re => re === true ? this.autoHandleOperation(ctx) : null);\r\n    }\r\n  }\r\n  sendMassageOperation(ctx: any) {\r\n    let dialog: any;\r\n    const compFactory = this.resolver.resolveComponentFactory(SendMessageOperationComponent);\r\n    const compRef = compFactory.create(this.injector);\r\n    compRef.instance.location = this.location;\r\n    compRef.instance.value = Object.assign({}, ctx.rowData);\r\n    compRef.instance.submitEmitter.subscribe((re: ExpireOperation) => {\r\n      let operation = this.timeLimitInfo.expireOperations.find(o => o.id === re.id);\r\n      operation = Object.assign(operation, re);\r\n      dialog.close();\r\n    });\r\n    compRef.instance.closeEmitter.subscribe((re: any) => {\r\n      dialog.close();\r\n    });\r\n    const modalConfig = {\r\n      title: 'é¢è­¦æ¶æ¯',\r\n      width: 500,\r\n      height: this.location === 'activity' ? 390 : 460,\r\n      buttons: compRef.instance.footer,\r\n      showButtons: true\r\n    };\r\n    dialog = this.modalService.show(compRef, modalConfig);\r\n  }\r\n\r\n  autoHandleOperation(ctx: any) {\r\n    let dialog: any;\r\n    const compFactory = this.resolver.resolveComponentFactory(AutoHandleOperationComponent);\r\n    const compRef = compFactory.create(this.injector);\r\n    compRef.instance.value = Object.assign({}, ctx.rowData);\r\n    compRef.instance.submitEmitter.subscribe((re: ExpireOperation) => {\r\n      let operation = this.timeLimitInfo.expireOperations.find(o => o.id === re.id);\r\n      operation = Object.assign(operation, re);\r\n      dialog.close();\r\n    });\r\n    compRef.instance.closeEmitter.subscribe((re: any) => {\r\n      dialog.close();\r\n    });\r\n    const modalConfig = {\r\n      title: 'èªå¨åç',\r\n      width: 500,\r\n      height: this.location === 'activity' ? 390 : 460,\r\n      buttons: compRef.instance.footer,\r\n      showButtons: true\r\n    };\r\n    dialog = this.modalService.show(compRef, modalConfig);\r\n  }\r\n\r\n  tagSelectChange(data){\r\n    if(data.data.value === 'constant'){\r\n      this.timeLimitInfo.timeUnit = \"day\";\r\n    }else if(data.data.value === 'scope'){\r\n      this.timeLimitInfo.timeUnit = '';\r\n      this.timeLimitInfo.dueTime = this.timeScopeValue;\r\n    }\r\n  }\r\n  changeTimeScope(data){\r\n    this.timeScopeValue = data;\r\n    this.timeLimitInfo.dueTime = this.timeScopeValue;\r\n  }\r\n}\r\n\r\nexport class TimeLimitControlConverter implements TypeConverter {\r\n  constructor() { }\r\n\r\n  convertTo(data: any): string {\r\n    if (data && data.enable) {\r\n      return 'ï¼å·²è®¾ç½®ï¼';\r\n    } else {\r\n      return 'ï¼æªè®¾ç½®ï¼';\r\n    }\r\n  }\r\n}\r\n","import { ProcessDeUtil } from '../../domain/process-de-util';\r\n\r\nexport class MessageNotice {\r\n    id: string;\r\n    /**\r\n     * æ¶æ¯åå®¹\r\n     */\r\n    content: string;\r\n\r\n    /**\r\n     * æ¶æ¯åéæ¶æº\r\n     */\r\n    sendTime: string;\r\n\r\n    /**\r\n     * æ¶æ¯åéæ¹å¼\r\n     */\r\n    sendType: string;\r\n\r\n    /**\r\n     * æ¶æ¯ä¸»é¢\r\n     */\r\n    subject: string;\r\n\r\n    /**\r\n     * æ¶æ¯æ¥æ¶äºº\r\n     */\r\n    receiver: string;\r\n\r\n    /**\r\n     * æ¶æ¯æ¥æ¶äººæ¾ç¤º\r\n     */\r\n    receiverText: string;\r\n\r\n    constructor() {\r\n        this.id = ProcessDeUtil.GenerateElementId();\r\n        this.subject = 'æ¶æ¯éç¥';\r\n        // this.sendType = 'email';\r\n        this.content = '{\"expr\":\"\\'æ¨æä¸æ¡æ¶æ¯éç¥ã\\'\",\"sexpr\":\"\"}';\r\n    }\r\n}\r\nexport const processSendTime = [\r\n    { value: 'PROCESSINSTANCE_COMPLETED', text: 'æµç¨å®æ' },\r\n    { value: 'PROCESSINSTANCE_ABORTED', text: 'æµç¨ç»æ­¢' },\r\n    { value: 'PROCESSINSTANCE_ROLLBACK', text: 'æµç¨é©³å' }\r\n];\r\n\r\nexport const activitySendTime = [\r\n    { value: 'WORKITEM_CREATED', text: 'ä»»å¡åå»º' },\r\n    { value: 'ACTIVITY_COMPLETED', text: 'æ´»å¨å®æ' },\r\n    { value: 'ACTIVITY_ABORTED', text: 'æ´»å¨ç»æ­¢' },\r\n];\r\n\r\nexport const sendTypes = [\r\n    { value: 'email', name: 'é®ä»¶' },\r\n    { value: 'sms', name: 'ç­ä¿¡' },\r\n    { value: 'cloudplus', name: 'äº+' }\r\n];\r\n\r\n","import { Component, OnInit, Input, ViewChild, TemplateRef, Output, EventEmitter } from '@angular/core';\r\nimport { MessageNotice, activitySendTime, sendTypes, processSendTime } from '../message-notice';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { ProcessDesignerUIState } from '../../../app/process-designer.uistate';\r\nimport { ExpressionService, InjectedType} from \"@gsp-svc/expression\";\r\n\r\n@Component({\r\n  selector: 'lib-message-notice-edit',\r\n  templateUrl: './message-notice-edit.component.html',\r\n  styleUrls: ['./message-notice-edit.component.scss']\r\n})\r\nexport class MessageNoticeEditComponent implements OnInit {\r\n\r\n  groupIcon2 = '<i class=\"f-icon f-icon-lookup\"></i>';\r\n  exprAble = false;\r\n  @ViewChild('footer') footer: TemplateRef<any>;\r\n\r\n  @Output() closeEmitter = new EventEmitter<any>();\r\n  @Output() submitEmitter = new EventEmitter<MessageNotice>();\r\n\r\n  private _location: 'activity' | 'process' | 'messageActivity' = 'activity';\r\n  @Input()\r\n  set location(l: 'activity' | 'process' | 'messageActivity') {\r\n    this._location = l;\r\n    if (this.location !== 'activity') {\r\n      this.receiverVariables = [{ value: 'procInstCreator', name: 'æµç¨åèµ·äºº' }];\r\n    }\r\n  }\r\n\r\n  get location() {\r\n    return this._location;\r\n  }\r\n\r\n  messageNotice = new MessageNotice();\r\n  @Input()\r\n  set value(m: MessageNotice) {\r\n    this.messageNotice = Object.assign({}, m) ;\r\n    if (this.messageNotice.receiver && this.messageNotice.receiver.length > 0) {\r\n      let array = this.messageNotice.receiver.split(',');\r\n      if (array.indexOf('workItemParticipant') > -1) {\r\n        this.receiverVari = 'workItemParticipant';\r\n      } else if (array.indexOf('procInstCreator') > -1) {\r\n        this.receiverVari = 'procInstCreator';\r\n      }\r\n      if (array.length > 0) {\r\n        array = array.filter(a => (a !== 'workItemParticipant' && a !== 'procInstCreator'));\r\n        this.bindingData.id = '';\r\n        for (const r of array) {\r\n          this.bindingData.id += r + ',';\r\n        }\r\n        if (this.bindingData.id) {\r\n          this.bindingData.id = this.bindingData.id.substring(0, this.bindingData.id.length - 1);\r\n        }\r\n      }\r\n    }\r\n    if (this.messageNotice.receiverText && this.messageNotice.receiverText.length > 0) {\r\n      let array = this.messageNotice.receiverText.split(',');\r\n      if (array.length > 0) {\r\n        array = array.filter(a => (a !== 'ä»»å¡åçäºº' && a !== 'æµç¨åèµ·äºº'));\r\n        this.bindingData.name = '';\r\n        for (const r of array) {\r\n          this.bindingData.name += r + ',';\r\n        }\r\n        if (this.bindingData.name) {\r\n          this.bindingData.name = this.bindingData.name.substring(0, this.bindingData.name.length - 1);\r\n        }\r\n      }\r\n    }\r\n    this.exprAble = this.messageNotice.subject.charAt(0) === '{';\r\n  }\r\n\r\n  get value() {\r\n    return this.messageNotice;\r\n  }\r\n\r\n  typeGroup = this.uistate.messageChannels.map(m => ({ value: m.code, name: m.name }));\r\n\r\n  receiverVariables = [\r\n    { value: 'workItemParticipant', name: 'ä»»å¡åçäºº' }\r\n  ];\r\n\r\n  sendTimes = [];\r\n\r\n  receiverVari: string;\r\n\r\n  bindingData: { id?, name?} = {};\r\n  constructor(\r\n    private message: MessagerService,\r\n    private uistate: ProcessDesignerUIState,\r\n    private expr: ExpressionService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    if (this.location === 'activity') {\r\n      this.sendTimes = activitySendTime;\r\n    } else {\r\n      this.sendTimes = processSendTime;\r\n    }\r\n  }\r\n\r\n  clickOK() {\r\n    this.setReceiver();\r\n    if (this.validator()) {\r\n      this.submitEmitter.emit(this.messageNotice);\r\n    }\r\n  }\r\n  clickCancel() {\r\n    this.closeEmitter.emit();\r\n  }\r\n\r\n  sendTimeChange(data: any) {\r\n    if (data.data.value === activitySendTime[0].value) {\r\n      this.receiverVari = 'workItemParticipant';\r\n      this.clear();\r\n    }\r\n  }\r\n  usersSelect(data) {\r\n    console.log(data);\r\n  }\r\n  changeValue(data) {\r\n    console.log(data);\r\n  }\r\n  clear() {\r\n    this.bindingData = {};\r\n  }\r\n  private setReceiver() {\r\n    let receiver = '';\r\n    let receiverText = '';\r\n    if (this.receiverVari) {\r\n      receiver += this.receiverVari + ',';\r\n      const array = this.receiverVari.split(',');\r\n      if (array.length > 0) {\r\n        for (const a of array) {\r\n          const t = this.receiverVariables.find(v => v.value === a).name;\r\n          receiverText += t + ',';\r\n        }\r\n      }\r\n    }\r\n    if (this.bindingData.id) {\r\n      receiver += this.bindingData.id + ',';\r\n      receiverText += this.bindingData.name + ',';\r\n    }\r\n    if (receiver) {\r\n      receiver = receiver.substring(0, receiver.length - 1);\r\n    }\r\n    if (receiverText) {\r\n      receiverText = receiverText.substring(0, receiverText.length - 1);\r\n    }\r\n    this.messageNotice.receiver = receiver;\r\n    this.messageNotice.receiverText = receiverText;\r\n  }\r\n  private validator(): boolean {\r\n    if (!this.messageNotice.sendType) {\r\n      this.message.info('åéæ¹å¼ä¸åè®¸ä¸ºç©ºï¼');\r\n      return false;\r\n    }\r\n    if (this.location !== 'messageActivity' && !this.messageNotice.sendTime) {\r\n      this.message.info('åéæ¶æºä¸åè®¸ä¸ºç©ºï¼');\r\n      return false;\r\n    }\r\n    if (!this.messageNotice.subject) {\r\n      this.message.info('æ¶æ¯ä¸»é¢ä¸åè®¸ä¸ºç©ºï¼');\r\n      return false;\r\n    }\r\n    if (!this.messageNotice.content) {\r\n      this.message.info('æ¶æ¯åå®¹ä¸åè®¸ä¸ºç©ºï¼');\r\n      return false;\r\n    }\r\n    if (!this.messageNotice.receiver) {\r\n      this.message.info('æ¥æ¶äººä¸åè®¸ä¸ºç©ºï¼');\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  titleExpr(data: any){\r\n    this.showTitleHelp(data);\r\n  }\r\n  contentExpr(data: any){\r\n    this.showContentHelp(data);\r\n  }\r\n\r\n  showContentHelp(data: string){\r\n    this.showExpr();\r\n    if (this.messageNotice.content && this.messageNotice.content.length > 0) {\r\n      this.expr.addExpressionText(this.messageNotice.content);\r\n    } else {\r\n      this.expr.addExpressionText('');\r\n    }\r\n    this.expr.buildExpression().then((expressionInfo: string) => {\r\n      this.messageNotice.content = expressionInfo;\r\n    });\r\n  }\r\n\r\n  showTitleHelp(data: string) {\r\n    if(this.messageNotice.subject && this.messageNotice.subject.charAt(0) !== '{'){\r\n      this.messageNotice.subject = '';\r\n    }\r\n    this.showExpr();\r\n    if (this.messageNotice.subject && this.messageNotice.subject.length > 0) {\r\n      this.expr.addExpressionText(this.messageNotice.subject);\r\n    } else {\r\n      this.expr.addExpressionText('');\r\n    }\r\n    this.expr.buildExpression().then((expressionInfo: string) => {\r\n      this.messageNotice.subject = expressionInfo;\r\n    });\r\n  }\r\n  showExpr(){\r\n    if (this.uistate.schemas.length > 0) {\r\n      for (const schema of this.uistate.schemas) {\r\n        // this.expr.addCommonObject(co);\r\n        this.expr.addSchema('Schema', schema);\r\n      }\r\n      if (this.uistate.schemas[0].entityTypes && this.uistate.schemas[0].entityTypes.length > 0) {\r\n        const entityType = this.uistate.schemas[0].entityTypes[0];\r\n        this.expr.addInjectedEntity(entityType.name, 'Schema',\r\n          entityType.name, InjectedType.EntityType);\r\n      }\r\n    }\r\n    const context = new Array();\r\n    if (this.uistate.procInstContext.length > 0) {\r\n      for (const variable of this.uistate.procInstContext) {\r\n        context.push(variable);\r\n        // this.expr.addContext(variable);\r\n      }\r\n    }\r\n    if (this.uistate.processVariableContext.length > 0) {\r\n      for (const variable of this.uistate.processVariableContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n        // this.expr.addContext(variable);\r\n      }\r\n    }\r\n    if (context.length > 0) {\r\n      for (const v of context) {\r\n        this.expr.addContext(v);\r\n      }\r\n    }\r\n  }\r\n  tranExpr(){\r\n    this.messageNotice.subject = '';\r\n  }\r\n}\r\n","import { Component, OnInit, HostBinding, EventEmitter, Output, Input, ViewChild, TemplateRef, ComponentFactoryResolver, Injector } from '@angular/core';\r\nimport { TypeConverter } from '@farris/ui-property-panel';\r\nimport { activitySendTime, MessageNotice, sendTypes, processSendTime } from './message-notice';\r\nimport { BsModalService } from '@farris/ui-modal';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { MessageNoticeEditComponent } from './message-notice-edit/message-notice-edit.component';\r\nimport { DatagridComponent } from '@farris/ui-datagrid';\r\nimport { ProcessDeUtil } from '../../domain/process-de-util';\r\nimport { ProcessDesignerUIState } from '../../app/process-designer.uistate';\r\n\r\n@Component({\r\n  selector: 'lib-message-notice',\r\n  templateUrl: './message-notice.component.html',\r\n  styleUrls: ['./message-notice.component.scss']\r\n})\r\nexport class MessageNoticeComponent implements OnInit {\r\n  @HostBinding('class')\r\n  cls = 'farris-main-area flex-column';\r\n\r\n  @Output() closeModal = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n\r\n  @Input()\r\n  set value(notices: any[]) {\r\n    if (notices && notices.length > 0) {\r\n      this.messageNotices = notices.map(n => ({\r\n        id: ProcessDeUtil.GenerateElementId(),\r\n        content: n.content,\r\n        sendTime: n.sendTime,\r\n        sendType: n.sendType,\r\n        subject: n.subject,\r\n        receiver: n.receiver,\r\n        receiverText: n.receiverText\r\n      }));\r\n    }\r\n  }\r\n  @Input() editorParams: any = {};\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n  @ViewChild('grid') grid: DatagridComponent;\r\n\r\n  modalConfig = {\r\n    title: 'æ¶æ¯éç¥',\r\n    width: 800,\r\n    height: 515,\r\n    showButtons: true\r\n  };\r\n\r\n  messageNotices: Array<MessageNotice> = new Array();\r\n  columns = [];\r\n\r\n  location: 'activity' | 'process' | 'messageActivity' = 'activity';\r\n\r\n  constructor(\r\n    private resolver: ComponentFactoryResolver,\r\n    private injector: Injector,\r\n    private modalService: BsModalService,\r\n    private message: MessagerService,\r\n    private uistate: ProcessDesignerUIState\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.location = this.editorParams.location;\r\n    this.columns = [\r\n      {\r\n        field: 'subject', width: 100, title: 'æ¶æ¯ä¸»é¢',\r\n      }, {\r\n        field: 'content', width: 150, title: 'æ¶æ¯åå®¹', showTips: true,\r\n      }, {\r\n        field: 'sendTime', width: 100, title: 'åéæ¶æº',\r\n        formatter: {\r\n          type: 'enum',\r\n          options: { valueField: 'value', textField: 'text', data: this.location === 'process' ? processSendTime : activitySendTime }\r\n        },\r\n      }, {\r\n        field: 'sendType', width: 100, title: 'åéæ¹å¼',\r\n        formatter: {\r\n          type: 'enum',\r\n          options: { valueField: 'value', textField: 'name', data: this.uistate.messageChannels.map(m => ({ value: m.code, name: m.name })) }\r\n        },\r\n      }, {\r\n        field: 'receiverText', width: 120, title: 'æ¶æ¯æ¥æ¶äºº', showTips: true\r\n      }];\r\n    if (this.location === 'messageActivity') {\r\n      this.columns = this.columns.filter(c => c.field !== 'sendTime');\r\n    }\r\n  }\r\n\r\n  add() {\r\n    let dialog: any;\r\n    const compFactory = this.resolver.resolveComponentFactory(MessageNoticeEditComponent);\r\n    const compRef = compFactory.create(this.injector);\r\n    compRef.instance.location = this.location;\r\n    const messageNotice = new MessageNotice();\r\n    if (this.location === 'activity') {\r\n      messageNotice.sendTime = 'WORKITEM_CREATED';\r\n      messageNotice.receiver = 'workItemParticipant';\r\n      messageNotice.receiverText = 'ä»»å¡åçäºº';\r\n    } else if (this.location === 'process') {\r\n      messageNotice.sendTime = 'PROCESSINSTANCE_COMPLETED';\r\n      messageNotice.receiver = 'procInstCreator';\r\n      messageNotice.receiverText = 'æµç¨åèµ·äºº';\r\n    } else if (this.location === 'messageActivity') {\r\n      messageNotice.receiver = 'procInstCreator';\r\n      messageNotice.receiverText = 'æµç¨åèµ·äºº';\r\n    }\r\n    compRef.instance.value = messageNotice;\r\n    compRef.instance.submitEmitter.subscribe((re: MessageNotice) => {\r\n      this.messageNotices = this.messageNotices.concat([re]);\r\n      dialog.close();\r\n    });\r\n    compRef.instance.closeEmitter.subscribe(re => {\r\n      dialog.close();\r\n    });\r\n    const modalConfig = {\r\n      title: 'æ¶æ¯éç¥',\r\n      width: 490,\r\n      height: this.location === 'messageActivity' ? 450 : 490,\r\n      showButtons: true,\r\n      buttons: compRef.instance.footer\r\n    };\r\n    dialog = this.modalService.show(compRef, modalConfig);\r\n  }\r\n  edit() {\r\n    if (!this.grid.selectedRow) {\r\n      this.message.info('å°æªéä¸­æ¶æ¯éç¥ï¼');\r\n      return;\r\n    }\r\n    let dialog: any;\r\n    const compFactory = this.resolver.resolveComponentFactory(MessageNoticeEditComponent);\r\n    const compRef = compFactory.create(this.injector);\r\n    compRef.instance.location = this.location;\r\n    compRef.instance.value = this.grid.selectedRow.data;\r\n    compRef.instance.submitEmitter.subscribe((re: MessageNotice) => {\r\n      this.messageNotices = this.messageNotices.map(m => {\r\n        if (m.id === re.id) {\r\n          return re;\r\n        }\r\n        return m;\r\n      });\r\n      dialog.close();\r\n    });\r\n    compRef.instance.closeEmitter.subscribe(re => {\r\n      dialog.close();\r\n    });\r\n    const modalConfig = {\r\n      title: 'æ¶æ¯éç¥',\r\n      width: 490,\r\n      height: this.location === 'messageActivity' ? 450 : 490,\r\n      showButtons: true,\r\n      buttons: compRef.instance.footer\r\n    };\r\n    dialog = this.modalService.show(compRef, modalConfig);\r\n  }\r\n  delete() {\r\n    const selected = this.grid.selectedRow;\r\n    if (!selected) {\r\n      this.message.info('å°æªéä¸­æ¶æ¯éç¥ï¼');\r\n      return;\r\n    }\r\n    this.messageNotices = this.messageNotices.filter(m => m.id !== selected.id);\r\n  }\r\n  clickOK() {\r\n    const object = { value: this.messageNotices, parameters: null };\r\n    this.submitModal.emit(object);\r\n  }\r\n  clickCancel() {\r\n    this.closeModal.emit();\r\n  }\r\n}\r\n\r\nexport class MessageNoticeConverter implements TypeConverter {\r\n  constructor() { }\r\n\r\n  convertTo(data: any[]): string {\r\n    if (data && data.length > 0) {\r\n      return 'ï¼å·²è®¾ç½®ï¼';\r\n    } else {\r\n      return 'ï¼æªè®¾ç½®ï¼';\r\n    }\r\n  }\r\n}\r\n","import { Component, Input, OnInit, Output, ViewChild, TemplateRef, EventEmitter } from '@angular/core';\r\nimport { TypeConverter } from '@farris/ui-property-panel';\r\nimport { ProcessDesignerUIState } from '../../app/process-designer.uistate';\r\nimport { ProcExtendProperty } from './extend-property';\r\n\r\n@Component({\r\n  selector: 'lib-extend-property',\r\n  templateUrl: './extend-property.component.html',\r\n  styleUrls: ['./extend-property.component.css']\r\n})\r\nexport class ExtendPropertyComponent implements OnInit {\r\n\r\n  @Output() closeModal = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n\r\n  @Input()\r\n  set value(property: any[]) {\r\n    if (property && property.length > 0) {\r\n      this.procExtendProperty = property.map(p => ({\r\n        id: p.id,\r\n        code: p.code,\r\n        parentId: p.parentId,\r\n        sortOrder: p.sortOrder,\r\n        propertyNote: p.propertyNote,\r\n        propertyTitle: p.propertyTitle,\r\n        propertyLocation: p.propertyLocation,\r\n        propertyType: p.propertyType,\r\n        enumValue: p.enumValue,\r\n        bizDefKey: p.bizDefKey,\r\n        bizCategoryId: p.bizCategoryId,\r\n        startMode: p.startMode,\r\n        value: p.value,\r\n      }));\r\n    }\r\n  }\r\n  modalConfig = {\r\n    title: 'æ©å±å±æ§',\r\n    width: 430,\r\n    height: 370,\r\n    showButtons: true\r\n  };\r\n  procExtendProperty: Array<ProcExtendProperty> = new Array();\r\n  booleanlist = [\r\n    { key: 'æ¯', value: 'true' },\r\n    { key: 'å¦', value: 'false' }\r\n  ];\r\n  extendPropertyList = {\r\n    key: '',\r\n    value: ''\r\n  };\r\n  constructor(private uiState: ProcessDesignerUIState) {\r\n  }\r\n\r\n  setProperty(obj: any) {\r\n    this.uiState.propertyData = obj.propertyData;\r\n    this.uiState.propertyConfig = obj.propertyConfig;\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  clickOK() {\r\n    const value = this.procExtendProperty;\r\n    const object = { value, parameters: null };\r\n    this.submitModal.emit(object);\r\n  }\r\n\r\n  cancel() {\r\n    this.closeModal.emit();\r\n  }\r\n}\r\nexport class ExtendPropertyConverter implements TypeConverter {\r\n\r\n  constructor() { }\r\n\r\n  convertTo(data: any[]): string {\r\n    if (data && data instanceof Array && data.some(item => item.value)) {\r\n      return 'ï¼å·²è®¾ç½®ï¼';\r\n    }\r\n    return 'ï¼æªè®¾ç½®ï¼';\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ProcessDesignerUIState } from './process-designer.uistate';\r\nimport { PropertyEntity, ElementPropertyConfig } from '@farris/ui-property-panel';\r\nimport { ResourceKeys } from '../model/resourceKeys';\r\nimport { EntryFormEditorComponent, FlowFormConverter } from '../views/entryForm/entry-form-editor.component';\r\nimport {\r\n  ActivityComponentComponent,\r\n  ActivityComponentConverter\r\n} from '../views/activity-component/activity-component.component';\r\nimport { ExecuteFormsComponent, ExecuteFormsConverter } from '../views/execute-forms/execute-forms.component';\r\nimport { TitleExpressionComponent, TitleExpressionConverter } from '../views/title-expression/title-expression.component';\r\nimport { CustomizeActionComponent, CustomizeActionConverter } from '../views/customize-action/customize-action.component';\r\nimport {\r\n  ProcessVariablesComponent,\r\n  ProcessVariablesConverter\r\n} from '../views/process-variables/process-variables.component';\r\nimport {\r\n  TimeLimitControlComponent,\r\n  TimeLimitControlConverter\r\n} from '../views/time-limit-control/time-limit-control.component';\r\nimport { MessageNoticeComponent, MessageNoticeConverter } from '../views/message-notice/message-notice.component';\r\nimport { ExtendPropertyComponent, ExtendPropertyConverter } from '../views/extend-property/extend-property.component';\r\n\r\n@Injectable()\r\n\r\nexport class BpmnProcessViewModel {\r\n  constructor(private uiState: ProcessDesignerUIState) {\r\n\r\n  }\r\n\r\n  setProcessProperty(obj: any) {\r\n    // if (obj.propertyData.EntryForm) {\r\n    //     obj.propertyData.EntryForm = this.uiState.flowFormInfo.flowForm;\r\n    // }\r\n    this.uiState.propertyData = obj.propertyData;\r\n    this.uiState.ProcessVariables = this.uiState.propertyData[ResourceKeys.processVariables];\r\n    this.uiState.propertyConfig = this.setProcessConfig(obj.propertyConfig);\r\n  }\r\n\r\n  setProcessConfig(obj: any[]): ElementPropertyConfig[] {\r\n    const propertyConfig: ElementPropertyConfig[] = [];\r\n    if (obj) {\r\n      obj.forEach((element: ElementPropertyConfig) => {\r\n        this.setProcessEntity(element.properties);\r\n        propertyConfig.push(element);\r\n      });\r\n    }\r\n    return propertyConfig;\r\n  }\r\n\r\n  private setProcessEntity(obj: PropertyEntity[]) {\r\n    if (obj.length > 0) {\r\n      obj.forEach((item: PropertyEntity) => {\r\n        switch (item.propertyID) {\r\n          case ResourceKeys.EntryForm: // æµç¨åç±»\r\n            item.editor = EntryFormEditorComponent;\r\n            item.converter = new FlowFormConverter();\r\n            // item.editorParams = {\r\n            //     flowForms: [this.uiState.flowFormInfo.flowForm]\r\n            // };\r\n            break;\r\n          case ResourceKeys.wf_Component:\r\n            item.editor = ActivityComponentComponent;\r\n            item.converter = new ActivityComponentConverter();\r\n            item.editorParams = {\r\n              location: 'process'\r\n            };\r\n            break;\r\n          case ResourceKeys.wf_ExecuteForms_PC:\r\n            item.editor = ExecuteFormsComponent;\r\n            item.converter = new ExecuteFormsConverter();\r\n            item.editorParams = {\r\n              location: 'process',\r\n              tab: 'web'\r\n            };\r\n            break;\r\n          case ResourceKeys.wf_ExecuteForms_Mobile:\r\n            item.editor = ExecuteFormsComponent;\r\n            item.converter = new ExecuteFormsConverter();\r\n            item.editorParams = {\r\n              location: 'process',\r\n              tab: 'mobile'\r\n            };\r\n            break;\r\n          case ResourceKeys.wf_TitleExpression:\r\n            item.editor = TitleExpressionComponent;\r\n            item.converter = new TitleExpressionConverter();\r\n            break;\r\n          case ResourceKeys.allowPreAssign:\r\n            item.iterator = this.uiState.boolIterator;\r\n            break;\r\n          case ResourceKeys.startMode:\r\n            item.iterator = this.uiState.startModeIterator;\r\n            break;\r\n          case ResourceKeys.DisplayTerminal:\r\n            item.iterator = this.uiState.displayTerminal;\r\n            break;\r\n          case ResourceKeys.wf_CustomizeAction:\r\n            item.editor = CustomizeActionComponent;\r\n            item.converter = new CustomizeActionConverter();\r\n            break;\r\n          case ResourceKeys.processVariables:\r\n            item.editor = ProcessVariablesComponent;\r\n            item.converter = new ProcessVariablesConverter();\r\n            break;\r\n          case ResourceKeys.timeLimitControl:\r\n            item.editor = TimeLimitControlComponent;\r\n            item.converter = new TimeLimitControlConverter();\r\n            item.editorParams = {\r\n              location: 'process'\r\n            };\r\n            break;\r\n          case ResourceKeys.messageNotice:\r\n            item.editor = MessageNoticeComponent;\r\n            item.converter = new MessageNoticeConverter();\r\n            item.editorParams = {\r\n              location: 'process'\r\n            };\r\n            break;\r\n          default:\r\n            item.editor = ExtendPropertyComponent;\r\n            item.converter = new ExtendPropertyConverter();\r\n            break;\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n","export class ApprovalItemEntity {\r\n    value: string;\r\n    text: string;\r\n    workFlowAction: string;\r\n    isDefault = false;\r\n    commentNecessary = false;\r\n    certification = false;\r\n    attachmentNecessary = false;\r\n\r\n    constructor(value?: string, text?: string, wfAction?: string) {\r\n        this.value = value;\r\n        this.text = text;\r\n        this.workFlowAction = wfAction;\r\n    }\r\n}\r\n","export class ActionOrganizationScope {\r\n    enable: boolean;\r\n    action: ActionScope;\r\n    scope: OrganizationPotentialOwner;\r\n}\r\nexport class OrganizationPotentialOwner {\r\n    /**\r\n     * ä½ç¨åï¼AssignUser, Transfer, AddSignFront, AddSignBehind\r\n     */\r\n    actionScope: ActionScope;\r\n    /**\r\n     * é¨é¨ï¼DEPARTMENTï¼åä½ï¼UNIT\r\n     */\r\n    organizationLevel: OrganizationLevel;\r\n    /**\r\n     * ç»ç»Idï¼currentDepartment, currentUnit\r\n     */\r\n    organizationId: string;\r\n    /**\r\n     * ç»ç»ç¼å·\r\n     */\r\n    organizationCode: string;\r\n    /**\r\n     * ç»ç»åç§°\r\n     */\r\n    organizationName: string;\r\n    /**\r\n     * åå«ä¸çº§\r\n     */\r\n    includeChildren: boolean;\r\n    /**\r\n     * éåç¶çº§\r\n     */\r\n    parentsUntil: boolean;\r\n    /**\r\n     * variable åéå¼\r\n     * expression è¡¨è¾¾å¼å¼\r\n     * constant å¸¸éå¼\r\n     */\r\n    tag: string;\r\n}\r\nexport enum ActionScope {\r\n    /**\r\n     * ææ´¾\r\n     */\r\n    AssignUser = 'AssignUser',\r\n    /**\r\n     * ç§»äº¤\r\n     */\r\n    Transfer = 'Transfer',\r\n    /**\r\n     * å¾è¯¢\r\n     */\r\n    AddSignFront = 'AddSignFront',\r\n    /**\r\n     * å ç­¾\r\n     */\r\n    AddSignBehind = 'AddSignBehind',\r\n    /**\r\n     * ç¥ä¼\r\n     */\r\n    Notify = \"Notify\",\r\n}\r\nexport enum OrganizationLevel {\r\n    /**\r\n     * é¨é¨\r\n     */\r\n    DEPARTMENT = 'DEPARTMENT',\r\n    /**\r\n     * åä½\r\n     */\r\n    UNIT = 'UNIT',\r\n}\r\n","import { Component, OnInit, Output, Input, ViewChild, EventEmitter, TemplateRef, HostBinding } from '@angular/core';\r\nimport { TypeConverter } from '@farris/ui-property-panel';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { AssignPerformerConfig } from './assign-performer-config.entity';\r\nimport { OrganizationPotentialOwner, ActionScope, OrganizationLevel } from '../organization-potential-owner/actionOrganizationScope';\r\n\r\n@Component({\r\n  selector: 'app-assign-performer-config',\r\n  templateUrl: './assign-performer-config.component.html',\r\n  styleUrls: ['./assign-performer-config.component.css']\r\n})\r\nexport class AssignPerformerConfigComponent implements OnInit {\r\n  @HostBinding('class')\r\n  cls = 'farris-main-area flex-column';\r\n  @Output() closeModal = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n  assingPerformerConfigForm: FormGroup;\r\n  private config: AssignPerformerConfig;\r\n\r\n  @Input()\r\n  set value(v: AssignPerformerConfig) {\r\n    this.assingPerformerConfigForm = new FormGroup({\r\n      multiSelect: new FormControl(v.multiSelect),\r\n      necessary: new FormControl(v.necessary)\r\n    });\r\n    this.operator = v.operator || 'currentUser';\r\n    this.allowGlobalAssign = v.allowGlobalAssign || false;\r\n    if (v.assignScope) {\r\n      this.organizationLevel = v.assignScope.organizationLevel;\r\n      this.includeChildren = v.assignScope.includeChildren;\r\n    }\r\n  }\r\n\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n\r\n  allowGlobalAssign = false;\r\n\r\n  operatorCollection = [\r\n    { text: 'å½ååçäºº', value: 'currentUser' },\r\n    { text: 'æµç¨åèµ·äºº', value: 'procInstCreator' }];\r\n  operator = 'currentUser';\r\n\r\n  organizationLevelCollection = [\r\n    { value: 'GLOBAL', text: 'å¨å', orgId: 'global' },\r\n    { value: 'UNIT', text: 'æ¬åä½', orgId: 'currentUnit' },\r\n    { value: 'DEPARTMENT', text: 'æ¬é¨é¨', orgId: 'currentDepartment' }];\r\n  organizationLevel = this.organizationLevelCollection[0].value;\r\n  includeChildren = false;\r\n\r\n  modalConfig = {\r\n    title: 'ææ´¾è§å',\r\n    width: 450,\r\n    height: 470,\r\n    showButtons: true\r\n  };\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  clickOK() {\r\n    this.config = {\r\n      operator: this.operator,\r\n      multiSelect: this.assingPerformerConfigForm.get('multiSelect').value,\r\n      necessary: this.assingPerformerConfigForm.get('necessary').value,\r\n      allowGlobalAssign: this.allowGlobalAssign\r\n    };\r\n    if (this.allowGlobalAssign && this.organizationLevel !== this.organizationLevelCollection[0].value) {\r\n      const potential = new OrganizationPotentialOwner();\r\n      potential.actionScope = ActionScope.AssignUser;\r\n      potential.organizationLevel = this.organizationLevel as OrganizationLevel;\r\n      potential.organizationId = this.organizationLevelCollection.find(o => o.value === this.organizationLevel).orgId;\r\n      potential.organizationName = this.organizationLevelCollection.find(o => o.value === this.organizationLevel).text;\r\n      potential.includeChildren = this.includeChildren;\r\n      potential.tag = 'variable';\r\n      this.config.assignScope = potential;\r\n    }\r\n    const object = { value: this.config, parameters: null };\r\n    this.submitModal.emit(object);\r\n  }\r\n\r\n  clickCancel() {\r\n    this.closeModal.emit();\r\n  }\r\n\r\n  valueChange(event: any) {\r\n    switch (event.value) {\r\n      case this.organizationLevelCollection[0].value:\r\n        this.includeChildren = false;\r\n        break;\r\n      case this.organizationLevelCollection[1].value:\r\n        this.includeChildren = true;\r\n        break;\r\n      case this.organizationLevelCollection[2].value:\r\n        this.includeChildren = false;\r\n        break;\r\n    }\r\n  }\r\n}\r\nexport class AssignConfigConverter implements TypeConverter {\r\n  constructor() { }\r\n\r\n  convertTo(data): string {\r\n    return 'ï¼å·²è®¾ç½®ï¼';\r\n  }\r\n}\r\n","export class SignRuleEntity {\r\n    id: string;\r\n    conclusionValue: string;\r\n    conclusionName: string;\r\n    calculateType?: string; // è®¡ç®æ¹å¼\r\n    conditionValue?: string; // æ»¡è¶³æææ¡ä»¶å¼\r\n    waitAllVotes?: boolean; // æ¯å¦ç­å¾ææéç¥¨\r\n    completionCondition: string;\r\n}\r\n","import { Component, OnInit, HostBinding, Output, EventEmitter, Input, ViewChild, TemplateRef } from '@angular/core';\r\nimport { TypeConverter } from '@farris/ui-property-panel';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { SignRuleEntity } from './entites/sign-rule.entity';\r\nimport { DialogComponent } from '@farris/ui-dialog';\r\nimport { ExprEditMode, ExpressionService, VarEntity } from '@gsp-svc/expression';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { ProcessDesignerUIState } from '../../app/process-designer.uistate';\r\nimport { DataColumn, DatagridComponent } from '@farris/ui-datagrid';\r\nimport { ProcessDeUtil } from '../../domain/process-de-util';\r\nimport { EditorTypes } from '@farris/ui-datagrid-editors';\r\nimport { of } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-sign-rule',\r\n  templateUrl: './sign-rule.component.html',\r\n  styleUrls: ['./sign-rule.component.css']\r\n})\r\nexport class SignRuleComponent implements OnInit {\r\n  @HostBinding('class')\r\n  cls = 'farris-main-area flex-column';\r\n  @Output() closeModal = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n\r\n\r\n  @Input()\r\n  set value(rules: any[]) {\r\n    if (rules && rules.length > 0) {\r\n      for (const rule of rules) {\r\n        const val = new SignRuleEntity();\r\n        val.id = ProcessDeUtil.GenerateElementId();\r\n        val.conclusionValue = rule.ConclusionValue;\r\n        val.conclusionName = rule.ConclusionName;\r\n        val.calculateType = rule.CalculateType ? rule.CalculateType : 'null';\r\n        val.conditionValue = rule.ConditionValue ? rule.ConditionValue : 0;\r\n        val.waitAllVotes = rule.WaitAllVotes ? rule.WaitAllVotes : false;\r\n        val.completionCondition = rule.CompletionCondition ? rule.CompletionCondition._value : null;\r\n        this.data.push(val);\r\n      }\r\n    } else { // å¦ææ¨¡åä¸æ²¡æä¼ç­¾è§åï¼èªå¨å¸¦å¥ææçå®¡æ¹éé¡¹\r\n      this.deleteRow();\r\n    }\r\n  }\r\n  @Input() editorParams: any = {};\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n  @ViewChild('approvalTable') apvlItemsGrid: DatagridComponent;\r\n  @ViewChild('approvalItemDialog') apvlItemDialog: DialogComponent;\r\n  @ViewChild('grid') grid: DatagridComponent;\r\n\r\n  modalConfig = {\r\n    title: 'ä¼ç­¾è§å',\r\n    width: 800,\r\n    height: 520,\r\n    showButtons: true\r\n  };\r\n  data: SignRuleEntity[] = [];\r\n  calculationMethods: any[] = [\r\n    { text: 'ææ°é', value: 'byNumber' },\r\n    { text: 'ææ¯ä¾(%)', value: 'byProportion' },\r\n    { text: 'èªå®ä¹æ¡ä»¶', value: 'null' },\r\n  ];\r\n  counterSignVariables: VarEntity[] = [];\r\n  /******* å®¡æ¹é¡¹å¸®å©åæ° *********************************************************/\r\n  approvalCols = [{ title: 'ç¼å·', field: 'value', width: 80 },\r\n  { title: 'åç§°', field: 'text', width: 90 }];\r\n  approvalItems: any[] = [];\r\n/*********************************** */\r\n  columns = [\r\n    { field: 'conclusionName', width: 25, title: 'ç»è®ºåç§°' },\r\n    { field: 'conclusionValue', width: 25, title: 'ç»è®ºå¼' },\r\n    { field: 'calculateType', width: 40, title: 'è®¡ç®æ¹å¼',\r\n      formatter: {type: 'enum',options: { valueField: 'value', textField: 'text', data: this.calculationMethods }},\r\n      editor: {type: EditorTypes.COMBOLIST,options: { valueField: 'value', textField: 'text', data: this.calculationMethods, idField: 'value', panelHeight: 'auto' }}\r\n    },\r\n    { field: 'conditionValue', width: 25, title: 'æ¡ä»¶å¼',\r\n      editor: { type: EditorTypes.NUMBERBOX, options: {} },\r\n      formatter:{type: 'number', options: { precision: 0, min: 0 } }\r\n    },\r\n    { field: 'waitAllVotes', width: 35, title: 'ç­å¾å¨ååç»',\r\n      editor: { type: EditorTypes.SWITCH, options: {} },\r\n      formatter: { type: 'boolean', options: { trueText: 'æ¯', falseText: 'å¦' }}\r\n    },\r\n    { field: 'completionCondition', width: 50, title: 'èªå®ä¹æ¡ä»¶',\r\n      editor: {\r\n        type: 'input-group',\r\n        options: {\r\n          groupText: '<i class=\"f-icon f-icon-lookup\"></i>',\r\n          editable: false,\r\n          clickHandle: (e) => {\r\n            e.formControl.setValue(e.instance.value ? e.instance.value : '');\r\n            this.editConditon(e);\r\n          },\r\n          clear: (e) => {\r\n            console.log('clear', e);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  ];\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private message: MessagerService,\r\n    private exprService: ExpressionService,\r\n    private designerUIState: ProcessDesignerUIState,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.counterSignVariables = this.designerUIState.counterSignVariables || [];\r\n    this.approvalItems = this.designerUIState.approvalItems || [];\r\n  }\r\n  // éç½®å¨ä½\r\n  deleteRow() {\r\n    this.data = [];\r\n    const ruleItems = this.designerUIState.approvalItems || [];\r\n    if (ruleItems && ruleItems.length > 0) {\r\n      for (const ruleItem of ruleItems) {\r\n        const val = new SignRuleEntity();\r\n        if (ruleItem.value === 'Pass') {\r\n          val.id = ProcessDeUtil.GenerateElementId();\r\n          val.conclusionValue = ruleItem.value;\r\n          val.conclusionName = ruleItem.text;\r\n          val.calculateType = 'byProportion';\r\n          val.conditionValue = '100';\r\n          val.waitAllVotes = true;\r\n        } else if (ruleItem.value === 'Back') {\r\n          val.id = ProcessDeUtil.GenerateElementId();\r\n          val.conclusionValue = ruleItem.value;\r\n          val.conclusionName = ruleItem.text;\r\n          val.calculateType = 'byNumber';\r\n          val.conditionValue = '1';\r\n          val.waitAllVotes = true;\r\n        } else {\r\n          val.id = ProcessDeUtil.GenerateElementId();\r\n          val.conclusionValue = ruleItem.value;\r\n          val.conclusionName = ruleItem.text;\r\n          val.calculateType = 'null';\r\n          val.conditionValue = '0';\r\n          val.waitAllVotes = true;\r\n        }\r\n        this.data.push(val);\r\n      }\r\n    }\r\n  }\r\n\r\n  clickOK() {\r\n    this.grid.endCellEdit();\r\n    if (this.data.length === 0) {\r\n      this.message.warning('å®æç­ç¥ä¸ºä¼ç­¾æ¶ï¼ä¼ç­¾è§åä¸åè®¸ä¸ºç©ºï¼è¯·äºè§£ï¼');\r\n    } else {\r\n      const object = { value: this.data, parameters: null };\r\n      this.submitModal.emit(object);\r\n    }\r\n  }\r\n\r\n  clickCancel() {\r\n    this.closeModal.emit();\r\n  }\r\n\r\n  editConditon(e: any) {\r\n    if (this.counterSignVariables && this.counterSignVariables.length > 0) {\r\n      for (const variable of this.counterSignVariables) {\r\n        this.exprService.addContext(variable);\r\n      }\r\n    }\r\n    this.exprService.setEditPattern(ExprEditMode.Advanced); // è¡¨è¾¾å¼å±ç°æ¨¡å¼ï¼é»è®¤é«çº§çï¼ä¼ç­¾è§åéè¦ä¸ä¸æåéï¼\r\n    this.exprService.addExpressionText(e.instance.value);\r\n    this.exprService.buildExpression().then((cond: string) => {\r\n      e.formControl.setValue(cond);\r\n      e.instance.cd.detectChanges();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * éä¸­å®¡æ¹é¡¹\r\n   */\r\n  approvalSelect() {\r\n    const selections: any[] = this.apvlItemsGrid.checkeds;\r\n    if (selections && selections.length > 0) {\r\n      for (const selection of selections) {\r\n        const signRule = new SignRuleEntity();\r\n        signRule.id = ProcessDeUtil.GenerateElementId();\r\n        signRule.conclusionValue = selection.data.value;\r\n        signRule.conclusionName = selection.data.text;\r\n        this.data.push(signRule);\r\n      }\r\n      this.grid.loadData(this.data);\r\n      this.apvlItemDialog.close();\r\n    } else {\r\n      this.message.info('è¯·é¦åéä¸­ä¸æ¡å®¡æ¹é¡¹ï¼');\r\n    }\r\n  }\r\n\r\n\r\n  preValue: SignRuleEntity;\r\n  curValue: SignRuleEntity;\r\n/**\r\n * ç»æç¼è¾åäºä»¶\r\n */\r\n  afterEdit = (rowIndex: number, rowData: any, column?: DataColumn) => {\r\n    this.preValue = JSON.parse(JSON.stringify(rowData));\r\n    return of(true);\r\n  }\r\n\r\n  endEdit(e: any) {\r\n    this.curValue = e.rowData;\r\n    // èªå®ä¹ä¼ç­¾è§ååé¢ç½®ä¼ç­¾è§åäºæ¥\r\n    if(this.preValue.completionCondition !== this.curValue.completionCondition) {\r\n      this.data[e.rowIndex].calculateType = 'null',\r\n      this.data[e.rowIndex].conditionValue = '0';\r\n      this.data[e.rowIndex].waitAllVotes = false;\r\n    } else if (this.preValue.calculateType !== this.curValue.calculateType ||\r\n      this.preValue.conditionValue !== this.curValue.conditionValue ||\r\n      this.preValue.waitAllVotes !== this.curValue.waitAllVotes) {\r\n        this.data[e.rowIndex].completionCondition = null;\r\n    }\r\n\r\n    if(e.column.field === 'conditionValue' && this.data[e.rowIndex].calculateType === 'byProportion'\r\n    && Number.parseInt(e.value) > 100) {\r\n      this.message.info('æ¡ä»¶å¼æå¤§å¼æ¯100');\r\n      this.data[e.rowIndex].conditionValue = '100';\r\n    } else if (e.column.field === 'conditionValue' && Number.parseInt(e.value) < 0) {\r\n      this.message.info('æ¡ä»¶å¼æå°å¼æ¯0');\r\n      this.data[e.rowIndex].conditionValue = '0';\r\n    } else if ((e.column.field === 'calculateType' || e.column.field === 'conditionValue') && (this.data[e.rowIndex].calculateType === 'oneVote' ||\r\n    this.data[e.rowIndex].calculateType === 'fullVote') && Number.parseInt(this.data[e.rowIndex].conditionValue) !== 0) {\r\n      this.message.info('ç»è®ºæ§è¡æ¹å¼ä¸ºå¨ç¥¨æä¸ç¥¨æ¶ä¸éè¦æ¡ä»¶å¼');\r\n      this.data[e.rowIndex].conditionValue = '0';\r\n    } else if (e.column.field === 'calculateType' && this.data[e.rowIndex].calculateType === 'byProportion' &&\r\n    Number.parseInt(this.data[e.rowIndex].conditionValue) > 100) {\r\n      this.message.info('æ¡ä»¶å¼æå¤§å¼æ¯100');\r\n      this.data[e.rowIndex].conditionValue = '100';\r\n      }\r\n  }\r\n}\r\n\r\nexport class SignRuleConverter implements TypeConverter {\r\n  constructor() { }\r\n\r\n  convertTo(data: any[]): string {\r\n    if (data && data.length > 0) {\r\n      return 'ï¼å·²è®¾ç½®ï¼';\r\n    } else {\r\n      return 'ï¼æªè®¾ç½®ï¼';\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, HostBinding, Output, EventEmitter, Input, ViewChild, TemplateRef } from '@angular/core';\r\nimport { TypeConverter } from '@farris/ui-property-panel';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { DataTableComponent } from '@farris/ui-datatable';\r\nimport { DialogComponent } from '@farris/ui-dialog';\r\nimport { ApprovalItemEntity } from './entities/approval-item.entity';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { map } from 'rxjs/operators';\r\nimport { ProcessDesignerUIState } from '../../app/process-designer.uistate';\r\nimport { EditorTypes } from '@farris/ui-datagrid-editors';\r\nimport { DatagridComponent } from '@farris/ui-datagrid';\r\nimport { ProcessDeUtil } from '../../domain/process-de-util';\r\n\r\n@Component({\r\n  selector: 'app-approvel-items',\r\n  templateUrl: './approvel-items.component.html',\r\n  styleUrls: ['./approvel-items.component.css']\r\n})\r\nexport class ApprovelItemsComponent implements OnInit {\r\n  @HostBinding('class')\r\n  cls = 'farris-main-area flex-column';\r\n\r\n  @Output() closeModal = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n\r\n  @Input()\r\n  set value(items: any[]) {\r\n    if (items && items.length > 0) {\r\n      for (const item of items) {\r\n        const approval = new ApprovalItemEntity();\r\n        approval.value = item.Value;\r\n        approval.text = item.Text;\r\n        approval.workFlowAction = item.WorkFlowAction;\r\n        approval.isDefault = item.IsDefault;\r\n\r\n        if (item.commentNecessary === null || item.commentNecessary === undefined) {\r\n          approval.commentNecessary = (item.Value === 'Back' ? true : false);\r\n        } else {\r\n          approval.commentNecessary = item.commentNecessary;\r\n        }\r\n\r\n        approval.certification = item.certification ? item.certification : false;\r\n        approval.attachmentNecessary = item.attachmentNecessary ? item.attachmentNecessary : false;\r\n        this.data.push(approval);\r\n      }\r\n    }\r\n  }\r\n\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n  @ViewChild('actionsTable') actionsTable: DatagridComponent;\r\n  @ViewChild('actionsDialog') actionsDialog: DialogComponent;\r\n  @ViewChild('grid') grid: DatagridComponent;\r\n\r\n  modalConfig = {\r\n    title: 'å®¡æ¹éé¡¹',\r\n    width: 880,\r\n    height: 515,\r\n    showButtons: true\r\n  };\r\n\r\n  workFlowActions: any[] = [\r\n    { text: 'æ­£å', value: 'Forward' },\r\n    { text: 'åå', value: 'Backward' },\r\n    { text: 'ç»æ­¢', value: 'Abort' }];\r\n\r\n  columns = [\r\n    {\r\n      field: 'value', width: 80, title: 'ç¼å·',\r\n    },\r\n    { field: 'text', width: 80, title: 'åç§°' },\r\n    {\r\n      field: 'workFlowAction', width: 80, title: 'æµè½¬æ¹å',\r\n      formatter: {\r\n        type: 'enum',\r\n        options: { valueField: 'value', textField: 'text', data: this.workFlowActions}\r\n      },\r\n      editor: {\r\n        type: EditorTypes.COMBOLIST,\r\n        options: { valueField: 'value', textField: 'text', data: this.workFlowActions, idField: 'value', panelHeight: 'auto' }\r\n      },\r\n      validators: [\r\n        { type: 'required', messager: 'å¿å¡«' }\r\n      ]\r\n    },\r\n    {\r\n      field: 'isDefault', width: 60, title: 'é»è®¤',\r\n      editor: {\r\n        type: EditorTypes.SWITCH,\r\n        options: {}\r\n      },\r\n      formatter: { type: 'boolean', options: { trueText: 'æ¯', falseText: 'å¦' } },\r\n      validators: [\r\n        { type: 'required', messager: 'å¿å¡«' }\r\n      ]\r\n    },\r\n    {\r\n      field: 'commentNecessary', width: 60, title: 'æè§å¿å¡«',\r\n      editor: {\r\n        type: EditorTypes.SWITCH,\r\n        options: {}\r\n      },\r\n      formatter: { type: 'boolean', options: { trueText: 'æ¯', falseText: 'å¦' } },\r\n      validators: [\r\n        { type: 'required', messager: 'å¿å¡«' }\r\n      ]\r\n    },\r\n    {\r\n      field: 'attachmentNecessary', width: 60, title: 'éä»¶ä¸ä¼ ',\r\n      editor: {\r\n        type: EditorTypes.SWITCH,\r\n        options: {}\r\n      },\r\n      formatter: { type: 'boolean', options: { trueText: 'æ¯', falseText: 'å¦' } },\r\n      validators: [\r\n        { type: 'required', messager: 'å¿å¡«' }\r\n      ]\r\n    },\r\n    {\r\n      field: 'certification', width: 60, title: 'æ°å­ç­¾å',\r\n      editor: {\r\n        type: EditorTypes.SWITCH,\r\n        options: {}\r\n      },\r\n      formatter: { type: 'boolean', options: { trueText: 'æ¯', falseText: 'å¦' } },\r\n      validators: [\r\n        { type: 'required', messager: 'å¿å¡«' }\r\n      ]\r\n    }\r\n  ];\r\n\r\n  data: ApprovalItemEntity[] = [];\r\n\r\n  // å®¡æ¹å¨ä½\r\n  actions: any[];\r\n  actionsCols = [\r\n    { title: 'ç¼å·', field: 'code', width: 80 },\r\n    { title: 'åç§°', field: 'name', width: 90 }];\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private message: MessagerService,\r\n    private util: ProcessDeUtil,\r\n    private http: HttpService,\r\n    private uiState: ProcessDesignerUIState\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getActionsList();\r\n  }\r\n\r\n  clickOK() {\r\n    this.grid.endCellEdit();\r\n    if (this.validator()) {\r\n      const object = { value: this.data, parameters: null };\r\n      this.submitModal.emit(object);\r\n    }\r\n  }\r\n\r\n  clickCancel() {\r\n    this.closeModal.emit();\r\n  }\r\n\r\n  private validator(): boolean {\r\n    if (this.data.findIndex(d => !d.workFlowAction) > -1) {\r\n      this.message.warning('å®¡æ¹é¡¹æµè½¬æ¹åä¸åè®¸ä¸ºç©ºï¼è¯·ä¿®æ¹ï¼');\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  selectChanged(data: any) { }\r\n\r\n  deleteRow() {\r\n    this.grid.endCellEdit();\r\n    if (this.grid.selectedRow && this.grid.selectedRow.data) {\r\n      const i = this.data.findIndex(d => d.value === this.grid.selectedRow.data.value);\r\n      this.data.splice(i, 1);\r\n      this.grid.loadData(this.data);\r\n    } else {\r\n      this.message.info('è¯·é¦åéä¸­ä¸æ¡éé¡¹ï¼');\r\n    }\r\n  }\r\n\r\n  private getActionsList() {\r\n    let url = this.util.getApprovalActionWebApi() + '?';\r\n    if (this.uiState.bizActivityId) {\r\n      url += `bizActivityId=${this.uiState.bizActivityId}`;\r\n    } else {\r\n      url += `bizActivityId=`;\r\n    }\r\n\r\n    this.http.get(url).subscribe((data: any) => {\r\n        data = data.filter(a => this.actionValidate(a));\r\n        this.actions = data;\r\n      });\r\n  }\r\n\r\n  actionsSelect() {\r\n    const selections: any[] = this.actionsTable.checkeds;\r\n    if (selections && selections.length > 0) {\r\n      selections.forEach(action => {\r\n        const item = new ApprovalItemEntity(action.data.code, action.data.name, action.data.workFlowAction);\r\n        const index = this.data.findIndex(act => act.value === action.data.code);\r\n        if (index > -1) {\r\n          this.data.splice(index, 1);\r\n        }\r\n        this.data.push(item);\r\n      });\r\n      this.grid.loadData(this.data);\r\n    }\r\n    this.actionsDialog.close();\r\n  }\r\n\r\n  private actionValidate(action: any) {\r\n    const arr = ['ViewBizLog', 'ViewFlowChart', 'AssignUser', 'Claim', 'Unclaim', 'Retrieve', 'Resubmit', 'Obsolete', 'Transfer', 'AddSignFront', 'ViewExecuteForm'];\r\n    return arr.indexOf(action.code.trim()) === -1;\r\n  }\r\n}\r\n\r\nexport class ApprovelItemsConverter implements TypeConverter {\r\n  constructor() { }\r\n\r\n  convertTo(data: any[]): string {\r\n    if (data && data.length > 0) {\r\n      return 'ï¼å·²è®¾ç½®ï¼';\r\n    } else {\r\n      return 'ï¼æªè®¾ç½®ï¼';\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, Output, Input, EventEmitter, ViewChild, TemplateRef } from '@angular/core';\r\nimport { ExpressionService, ExpressioneditorComponent, ComputeRuleEditorComponent, ExprEditMode } from '@gsp-svc/expression';\r\nimport { ProcessDesignerUIState } from '../../app/process-designer.uistate';\r\nimport { TypeConverter } from '@farris/ui-property-panel';\r\n\r\n@Component({\r\n  selector: 'app-expression-editor',\r\n  templateUrl: './expression-editor.component.html',\r\n  styleUrls: ['./expression-editor.component.css'],\r\n})\r\nexport class ExpressionEditorComponent implements OnInit {\r\n  @Output() closeModal = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n\r\n  @Input() value: string;\r\n\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n\r\n  @Input() editorParams: any = {};\r\n\r\n  @ViewChild(ExpressioneditorComponent) editor: ExpressioneditorComponent;\r\n  @ViewChild('compute') compute: ComputeRuleEditorComponent;\r\n\r\n  contextEntities = [];\r\n\r\n  schema: any = {};\r\n  injectName = '';\r\n  modalConfig = {\r\n    title: 'æ¡ä»¶ç¼è¾',\r\n    width: 1140,\r\n    height: 520,\r\n    showButtons: true\r\n  };\r\n\r\n  constructor(\r\n    private expr: ExpressionService,\r\n    public designerState: ProcessDesignerUIState\r\n  ) {\r\n    if (this.designerState.schemas[0]) {\r\n      this.schema = this.designerState.schemas[0];\r\n      if (this.designerState.schemas[0].entityTypes && this.designerState.schemas[0].entityTypes.length > 0) {\r\n        this.injectName = this.designerState.schemas[0].entityTypes[0].name;\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.contextEntities = new Array();\r\n    if (this.designerState.procInstContext.length > 0) {\r\n      for (const variable of this.designerState.procInstContext) {\r\n        this.contextEntities = this.contextEntities.concat([variable]);\r\n      }\r\n    }\r\n    if (this.designerState.formalParameterContext.length > 0) {\r\n      for (const variable of this.designerState.formalParameterContext) {\r\n        if (!this.contextEntities.some(c => c.key === variable.key)) {\r\n          this.contextEntities = this.contextEntities.concat([variable]);\r\n        }\r\n      }\r\n    }\r\n    if (this.designerState.participantContext.length > 0) {\r\n      for (const variable of this.designerState.participantContext) {\r\n        if (!this.contextEntities.some(c => c.key === variable.key)) {\r\n          this.contextEntities = this.contextEntities.concat([variable]);\r\n        }\r\n      }\r\n    }\r\n    if (this.designerState.activityComponentContext.length > 0) {\r\n      for (const variable of this.designerState.activityComponentContext) {\r\n        if (!this.contextEntities.some(c => c.key === variable.key)) {\r\n          this.contextEntities = this.contextEntities.concat([variable]);\r\n        }\r\n      }\r\n    }\r\n    if (this.designerState.processVariableContext.length > 0) {\r\n      for (const variable of this.designerState.processVariableContext) {\r\n        if (!this.contextEntities.some(c => c.key === variable.key)) {\r\n          this.contextEntities = this.contextEntities.concat([variable]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  clickOK() {\r\n    const result = this.compute.getExpr();\r\n    this.value = this.convertToValue(result.text);\r\n    const object = { value: this.value, parameters: null };\r\n    this.submitModal.emit(object);\r\n  }\r\n\r\n  /**\r\n   * åæ¢è¡¨è¾¾å¼ç±»åï¼ç®æè¡¨è¾¾å¼<--->é«çº§è¡¨è¾¾å¼ï¼\r\n   */\r\n  changeType() {\r\n    this.compute.changeType();\r\n  }\r\n\r\n  clickCancel() {\r\n    this.closeModal.emit();\r\n  }\r\n\r\n  private convertToValue(val: string): string {\r\n    if (val) {\r\n      if (val.substring(9, val.length - 2)) {\r\n        return val;\r\n      } else {\r\n        return '';\r\n      }\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n}\r\nexport class ExpressionEditorConverter implements TypeConverter {\r\n  constructor() { }\r\n\r\n  convertTo(data: any): string {\r\n    if (data) {\r\n      return data;\r\n    } else {\r\n      return 'ï¼æªè®¾ç½®ï¼';\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, HostBinding, Output, EventEmitter, Input, ViewChild, TemplateRef } from '@angular/core';\r\nimport { TypeConverter } from '@farris/ui-property-panel';\r\nimport { ProcessDesignerUIState } from '../../app/process-designer.uistate';\r\nimport { DialogComponent } from '@farris/ui-dialog';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { DatagridComponent } from '@farris/ui-datagrid';\r\nimport { LookupGridComponent, PickedResult } from '@farris/ui-lookup';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-jump-scope',\r\n  templateUrl: './jump-scope.component.html',\r\n  styleUrls: ['./jump-scope.component.css']\r\n})\r\nexport class JumpScopeComponent implements OnInit {\r\n  @HostBinding('class')\r\n  cls = 'farris-main-area flex-column';\r\n\r\n  @Output() closeModal = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n\r\n  @Input()\r\n  set value(data: any) {\r\n    if (data) {\r\n      this.category = data.Category;\r\n      this.defaultType = data.DefaultType;\r\n      // åå°DefaultActivityçèç¹Idï¼éååºNameç»å®å°radiogroupä¸å»ï¼defaultactyï¼\r\n      const acty: string = data.DefaultActivity;\r\n      if (acty != null) {\r\n        for (const act of this.uistate.allActList) {\r\n          if (act.Id === acty) {\r\n            this.defaultacty = act.Name;\r\n          }\r\n        }\r\n      }\r\n      // åå°DestinationActivitiesçèç¹Idï¼éååºIdåNameç»å®å°radiogroupä¸å»ï¼actisï¼\r\n      const strs: string[] = data.DestinationActivities;\r\n      if (strs && strs.length > 0) {\r\n        for (const str of strs) {\r\n          const name = this.uistate.userActList.filter(act => act.Id === str)[0].Name;\r\n          // const acti = { Id: str, Name: name };\r\n          this.actis.push(name);\r\n        }\r\n      }\r\n    } else {\r\n      this.category = 'OutConnectNode';\r\n      this.defaultType = 'FirstNode';\r\n    }\r\n  }\r\n\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n  modalConfig = {\r\n    title: 'ç®æ èç¹éé¡¹',\r\n    width: 520,\r\n    height: 460,\r\n    showButtons: true\r\n  };\r\n  // æ´»å¨èç¹è¡¨ä¿¡æ¯============================================\r\n  @ViewChild('allActisTable') allActisTable: DatagridComponent;\r\n  @ViewChild('allActisDialog') allActisDialog: DialogComponent;\r\n  @ViewChild('actTable') actTable: DatagridComponent;\r\n  @ViewChild('lookup') lookup: LookupGridComponent;\r\n\r\n  cols = [\r\n    { title: 'åç§°', field: 'Name', width: 60, searchField: 'Name' },\r\n    { title: 'ID', field: 'Id', width: 90, searchField: 'Id' }];\r\n  // ==========================================================\r\n  actis = [];\r\n  fullActis = [];\r\n  defaultacty = '';\r\n  categoryListItems = [\r\n    { value: 'OutConnectNode', name: 'æµç¨å¾è¿çº¿èç¹'},\r\n    { value: 'Global', name: 'æµç¨åææèç¹'},\r\n    { value: 'AfterNodes', name: 'ææåç»§èç¹'},\r\n    { value: 'SpecifiedSet', name: 'æµç¨å¾è¿çº¿èç¹+éå èç¹' }];\r\n  category = '';\r\n  defaultType = '';\r\n  defaultTypeListItems = [\r\n    { value: 'FirstNode', name: 'æ¡ä»¶ä¸ºtrueçè¿çº¿èç¹ï¼å½æå¤æ¡æ¶é»è®¤éä¸­é¦æ¡'},\r\n    { value: 'NullNode', name: 'é»è®¤ä¸ºç©ºï¼æ¯æ¬¡é½æå¨éæ©'},\r\n    { value: 'SpecifyNode', name: 'æå®é»è®¤èç¹' }];\r\n  defaultActivity = '';\r\n  pageInfo = {\r\n    pageIndex: 1,\r\n    pageList: [10, 20, 30, 50],\r\n    pageSize: 20\r\n  };\r\n  outConnectNode: true;\r\n  total: number;\r\n  constructor(\r\n    public uistate: ProcessDesignerUIState,\r\n    private message: MessagerService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  clickOK() {\r\n    if (this.validator()) {\r\n      let value;\r\n      const list = [];\r\n      // éæ°æå¼è®¾ç½®çé¢ï¼æ²¡æè¿è¡èç¹éç½®çæåµï¼DefaultActivityï¼\r\n      if ( this.defaultActivity === '' && this.defaultacty !== '') {\r\n        for (const defAct of this.uistate.allActList) {\r\n          if (defAct.Name === this.defaultacty) {\r\n            this.defaultActivity = defAct.Id;\r\n          }\r\n        }\r\n      }\r\n      // éæ°æå¼è®¾ç½®çé¢ï¼æ²¡æè¿è¡èç¹éç½®çæåµï¼DestinationActivitiesï¼\r\n      if (this.fullActis.length === 0 && this.actis.length > 0) {\r\n        for (const act of this.actis) {\r\n          for (const allAct of this.uistate.userActList) {\r\n            if (act === allAct.Name) {\r\n              list.push(allAct.Id);\r\n            }\r\n          }\r\n        }\r\n      } else if (this.category === 'SpecifiedSet' && this.fullActis && this.fullActis.length > 0) {\r\n        // éå èç¹çidä¼ ç»æ¨¡åä¸çDestinationActivities\r\n        this.fullActis.forEach(act => list.push(act.Id));\r\n      }\r\n      value = {\r\n        Category: this.category,\r\n        DefaultType: this.defaultType,\r\n        DefaultActivity: this.defaultActivity,\r\n        DestinationActivities: list,\r\n      };\r\n      const object = { value, parameters: null };\r\n      this.submitModal.emit(object);\r\n    }\r\n  }\r\n\r\n  clickCancel() {\r\n    this.closeModal.emit();\r\n  }\r\n\r\n  private validator(): boolean {\r\n    if (!this.category) {\r\n      this.message.warning('å°æªè®¾ç½®ç®æ èç¹éé¡¹ï¼è¯·äºè§£ï¼');\r\n      return false;\r\n    }\r\n    // if (this.category === 'SpecifiedSet' && Object.prototype.isPrototypeOf(this.actis)) {\r\n    //   this.message.info('å°æªéæ©éå èç¹ï¼è¯·äºè§£ï¼');\r\n    //   return false;\r\n    // }\r\n    if (this.defaultType === 'SpecifyNode' && this.defaultacty === '') {\r\n      this.message.warning('å°æªæå®é»è®¤èç¹ï¼è¯·äºè§£ï¼');\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  actisSelect = (rowData): Observable<PickedResult> => {\r\n    // éå èç¹çå¸®å©åäºä»¶ï¼æéä¸­çæ°æ®èµç»fullActisï¼æ­¤å¤å¤ççç®çæ¯ä¸ºäºæ¾ç¤ºNameåæ¶åIdå¼ï¼\r\n    // console.log(rowData);\r\n    this.fullActis = rowData;\r\n    return of({\r\n      closeDialog: true\r\n    });\r\n  }\r\n\r\n  defaultActivitySelect = (rowData): Observable<PickedResult> => {\r\n    // é»è®¤èç¹çå¸®å©åäºä»¶ï¼æéä¸­çidèµç»defaultActivityï¼æ­¤å¤å¤ççç®çæ¯ä¸ºäºæ¾ç¤ºNameåæ¶åIdå¼ï¼\r\n    this.defaultActivity = rowData.Id;\r\n    return of({\r\n      closeDialog: true\r\n    });\r\n  }\r\n\r\n  deleteRow() {\r\n    if (this.actTable.selectedRow && this.actTable.selectedRow.data) {\r\n      const i = this.actis.findIndex(d => d.id === this.actTable.selectedRow.data.id);\r\n      this.actis.splice(i, 1);\r\n      this.actTable.loadData(this.actis);\r\n    } else {\r\n      this.message.info('è¯·é¦åéä¸­ä¸æ¡éé¡¹ï¼');\r\n    }\r\n  }\r\n}\r\nexport class JumpScopeConverter implements TypeConverter {\r\n  constructor() { }\r\n\r\n  convertTo(data: any): string {\r\n    if (data) {\r\n      return 'ï¼å·²è®¾ç½®ï¼';\r\n    }\r\n    return 'ï¼æªè®¾ç½®ï¼';\r\n  }\r\n}\r\n\r\n","import { Component, OnInit, HostBinding, Output, EventEmitter, Input, ViewChild, TemplateRef, AfterViewInit } from '@angular/core';\r\nimport { TypeConverter } from '@farris/ui-property-panel';\r\nimport { ProcessDesignerUIState } from '../../app/process-designer.uistate';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { Observable, of } from 'rxjs';\r\nimport { PickedResult, LookupGridComponent } from '@farris/ui-lookup';\r\nimport { THROW_IF_NOT_FOUND } from '@angular/core/src/di/injector';\r\n\r\n@Component({\r\n  selector: 'procDesigner-backward-rule',\r\n  templateUrl: './backward-rule.component.html',\r\n  styleUrls: ['./backward-rule.component.scss']\r\n})\r\nexport class BackwardRuleComponent implements OnInit, AfterViewInit {\r\n  @HostBinding('class')\r\n  cls = 'farris-main-area flex-column';\r\n  @Input() editorParams: any = {};\r\n  @Input()\r\n  set value(data: any) {\r\n    if (data) {\r\n      this.selectAbleChecked = data.SelectTargetAble;\r\n      this.waitReturnChecked = data.WaitReturn;\r\n      this.dynamicBackWardRuleAbleChecked = data.DynamicBackWardRuleAble;\r\n      if (!data.TargetRef) {\r\n        this.targetRef = 'Empty';\r\n      } else {\r\n        this.targetRef = data.TargetRef;\r\n      }\r\n      const act = this.listItems.find(item => item.Id === this.targetRef);\r\n      if (act) {\r\n        this.displayText = act.Name;\r\n      } else {\r\n        this.displayText = '';\r\n        setTimeout(() => {\r\n          this.message.warning('é©³åæ´»å¨èç¹å·²ä¸å­å¨ï¼è¯·éæ°ç¼è¾');\r\n        }, 500);\r\n      }\r\n    }\r\n  }\r\n  @Input() nodeType: 'UserActivity' | 'CallActivitySubProcess' = 'UserActivity';\r\n\r\n  @Output() closeModal = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n  @ViewChild('hlp') hlp: LookupGridComponent;\r\n  modalConfig = {\r\n    title: 'é©³åè§å',\r\n    width: 430,\r\n    height: 370,\r\n    showButtons: true\r\n  };\r\n  displayText: string;\r\n  listItems = [\r\n    { Id: 'InitialActityId', Name: 'å¼å§èç¹' },\r\n    { Id: 'PrecursorActivityId', Name: 'åç½®èç¹' },\r\n    { Id: 'Empty', Name: 'ç©º' }\r\n  ];\r\n\r\n  items = [];\r\n\r\n  columns = [\r\n    { title: 'åç§°', field: 'Name', width: 100, searchField: 'Name' },\r\n    { title: 'æ è¯', field: 'Id', width: 100, searchField: 'Id' },\r\n  ];\r\n  selectAbleChecked = false;\r\n  waitReturnChecked = false;\r\n  dynamicBackWardRuleAbleChecked = false;\r\n  targetRef = this.listItems[0].Id;\r\n\r\n  pageInfo = {\r\n    pageIndex: 1,\r\n    pageList: [10, 20, 30, 50],\r\n    pageSize: 20\r\n  };\r\n\r\n  total: number;\r\n\r\n  constructor(\r\n    private uiState: ProcessDesignerUIState,\r\n    private message: MessagerService\r\n  ) {\r\n    this.listItems = this.listItems.concat(this.uiState.userActList);\r\n    this.items = this.listItems;\r\n    this.total = this.listItems.length;\r\n    }\r\n\r\n  ngOnInit() {\r\n    this.nodeType = this.editorParams.nodeType;\r\n    if (this.nodeType !== 'UserActivity') {\r\n      this.listItems = this.listItems.filter(i => i.Id !== 'Empty');\r\n      this.items = this.listItems;\r\n      this.total = this.listItems.length;\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n  }\r\n\r\n  selectAbleClick() {\r\n    if (this.uiState.propertyData.ClrTypeID === 'wf.UserActivity'\r\n      && this.uiState.propertyData.CompleteStrategy !== this.uiState.completeIterator[0].key\r\n      && this.selectAbleChecked === true) {\r\n      this.message.info('ä¼ç­¾ç­ç¥ä¸ï¼ä¸åè®¸âå¨æéæ©é©³åçº§æ¬¡â!', () => {\r\n        this.selectAbleChecked = false;\r\n      });\r\n    }\r\n  }\r\n  waitReturnClick() {\r\n    this.waitReturnChecked = !this.waitReturnChecked;\r\n  }\r\n  dynamicBackWardRuleAbleClick() {\r\n    this.dynamicBackWardRuleAbleChecked = !this.dynamicBackWardRuleAbleChecked;\r\n  }\r\n  dictPicked = (arg: any): Observable<PickedResult> => {\r\n    this.targetRef = arg.Id;\r\n    this.displayText = arg.Name;\r\n    return of({ closeDialog: true });\r\n  }\r\n  clickOK() {\r\n    const backWardRule = {\r\n      TargetRef: this.getTargetRef(),\r\n      SelectTargetAble: this.selectAbleChecked,\r\n      WaitReturn: this.waitReturnChecked,\r\n      DynamicBackWardRuleAble: this.dynamicBackWardRuleAbleChecked,\r\n    };\r\n    const object = { value: backWardRule, parameters: null };\r\n    this.submitModal.emit(object);\r\n  }\r\n\r\n  clickCancel() {\r\n    this.closeModal.emit();\r\n  }\r\n\r\n  pagerChanged(arg: any) {\r\n    this.pageInfo.pageIndex = arg.pageIndex;\r\n    this.pageInfo.pageSize = arg.pageSize;\r\n    const search = {\r\n      field: arg.searchValue.searchField,\r\n      value: arg.searchValue.searchValue\r\n    };\r\n    this.load(search);\r\n  }\r\n\r\n  pageSizeChange(arg: any) {\r\n    console.log(arg);\r\n    this.pageInfo.pageIndex = arg.pageIndex;\r\n    this.pageInfo.pageSize = arg.pageSize;\r\n    const search = {\r\n      field: arg.searchValue.searchField,\r\n      value: arg.searchValue.searchValue\r\n    };\r\n    this.load(search);\r\n  }\r\n  search(arg: any) {\r\n    this.pageInfo.pageIndex = arg.pageInfo.pageIndex;\r\n    this.pageInfo.pageSize = arg.pageInfo.pageSize;\r\n    const search = arg.search;\r\n\r\n    this.load(search);\r\n  }\r\n\r\n  load(search?: { field: string, value: string}) {\r\n    const start = (this.pageInfo.pageIndex - 1) * this.pageInfo.pageSize;\r\n    const end = start + this.pageInfo.pageSize;\r\n    let items = [];\r\n    if (search) {\r\n      if (search.field === '*') {\r\n        items = this.listItems.filter(i => i.Name.indexOf(search.value) > -1 || i.Id.indexOf(search.value) > -1);\r\n      } else {\r\n        items = this.listItems.filter(f => f[search.field].indexOf(search.value) > -1);\r\n      }\r\n    } else {\r\n      items = this.listItems;\r\n    }\r\n    this.total = items.length;\r\n    this.items = items; // .slice(start, end);\r\n    this.hlp.componentRef.instance.loadData({\r\n      // total: this.total,\r\n      // pageSize: this.pageInfo.pageSize,\r\n      // pageIndex: this.pageInfo.pageIndex,\r\n      data: this.items\r\n    });\r\n  }\r\n  private getTargetRef() {\r\n    if (this.targetRef === 'Empty') {\r\n      return '';\r\n    } else {\r\n      return this.targetRef;\r\n    }\r\n  }\r\n}\r\nexport class BackwardRuleConverter implements TypeConverter {\r\n  constructor() { }\r\n\r\n  convertTo(data: any): string {\r\n    if (data) {\r\n      return 'ï¼å·²è®¾ç½®ï¼';\r\n    }\r\n    return 'ï¼æªè®¾ç½®ï¼';\r\n  }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { PerformerEntity } from './entities/performer.entity';\r\nimport { BizComponentEntity } from '../../domain/entities/biz-component.entity';\r\nimport { ReportingLineDataEntity } from './views/reporting-line/reporting-line-data.entity';\r\nimport { PerformerInfo } from './entities/performer-info.entity';\r\nimport { PerformerDescription } from './entities/performer-description';\r\n\r\n@Injectable()\r\nexport class PerformerUIState {\r\n    performersList: PerformerDescription[] = [];\r\n    curPerformer: any;\r\n    typeCollection = [\r\n        { text: 'ç¨æ·', value: 'wf.UserParticipant' },\r\n        { text: 'å²ä½', value: 'wf.PositionParticipant' },\r\n        { text: 'æä»¶åä¸è', value: 'wf.ComponentParticipant' },\r\n        { text: 'æ±æ¥å³ç³»', value: 'wf.ReportingLineParticipant'},\r\n        { text: 'ç©éµ', value: 'wf.MatrixParticipant'}\r\n    ];\r\n\r\n    performerInfo: PerformerInfo = { performers: [], components: [], reportingLines: [], matrixParticipants: [], options: null };\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class PerformerRepository {\r\n\r\n}\r\n","import { Injectable, Injector, ComponentFactoryResolver } from '@angular/core';\r\nimport { PerformerEditComponent } from './views/performer-edit/performer-edit.component';\r\nimport { BsModalService } from '@farris/ui-modal';\r\n\r\n@Injectable()\r\nexport class PerformerViewModel {\r\n    constructor(\r\n        private resolver: ComponentFactoryResolver,\r\n        private injector: Injector,\r\n        private modalService: BsModalService\r\n    ) { }\r\n}\r\n","import { ProcessDeUtil } from '../../../domain/process-de-util';\r\n\r\nexport class PerformerEntity {\r\n    constructor(id?: string, name?: string, type?: string) {\r\n        this.id = '_' + ProcessDeUtil.GenerateElementId();\r\n        this.performerId = id;\r\n        this.performerName = name;\r\n        this.type = type;\r\n    }\r\n    id: string;\r\n    performerId: string;\r\n    performerName: string;\r\n    type: string;\r\n    orgId?: string;\r\n    orgName?: string;\r\n    orgType?: string;\r\n    condition?: string;\r\n    tag?: string;\r\n}\r\n","import { PerformerEntity } from './performer.entity';\r\n\r\nexport class UserPerformerEntity extends PerformerEntity {\r\n  userType: string; // åºå®ç¨æ·è¿æ¯åéåä¸è\r\n  constructor(id?: string, name?: string, type?: string) {\r\n    super(id,name,type);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/observable';\r\nimport { map } from 'rxjs/operators';\r\nimport { ReplaySubject } from 'rxjs/ReplaySubject';\r\n\r\n@Injectable()\r\nexport class PerformerConfigService {\r\n    private lookupConfig = new ReplaySubject<any>();\r\n    constructor(private http: HttpClient) {\r\n        this.http.get('/platform/runtime/wf/web/wf-proc-designer/assets/config/performerlookupconfig.json').subscribe((data) => {\r\n            this.lookupConfig.next(data);\r\n        });\r\n    }\r\n\r\n    getLookupConfig(): Observable<any> {\r\n        return this.lookupConfig.asObservable();\r\n    }\r\n}\r\n","import { Component, OnInit, HostBinding, ViewChild, Injector, NgZone, AfterViewInit, ElementRef } from '@angular/core';\r\nimport { SysFarrisLookupComponent } from '@gsp-sys/sysmgr-ui';\r\nimport { ProcessDesignerUIState } from '../../../../app/process-designer.uistate';\r\nimport { ExprEditMode, ExpressionService, InjectedType } from '@gsp-svc/expression';\r\nimport { UserPerformerEntity } from '../../entities/user-performer.entity';\r\nimport { PerformerConfigService } from '../../performer-config.service';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport {MessagerService} from \"@farris/ui-messager\";\r\n\r\ndeclare var System: any;\r\n@Component({\r\n  selector: 'app-user-performer',\r\n  templateUrl: './user-performer.component.html',\r\n  styleUrls: ['./user-performer.component.scss']\r\n})\r\nexport class UserPerformerComponent implements OnInit, AfterViewInit {\r\n  @HostBinding('class')\r\n  cls = 'd-flex flex-fill h-100';\r\n\r\n  @ViewChild(SysFarrisLookupComponent) userHelp: SysFarrisLookupComponent;\r\n\r\n  @ViewChild('inputGroup') inputGroup: ElementRef;\r\n  showClearButton = false;\r\n\r\n  bindingData: { id?, name?} = {};\r\n\r\n  userTypeCollection = [\r\n    { text: 'åºå®ç¨æ·', value: 'user' },\r\n    { text: 'åéåä¸è', value: 'variable' }\r\n  ];\r\n  userType = this.userTypeCollection[0].value;\r\n  variableOrgTypes = [\r\n    { name: 'ç³»ç»ç¨æ·', value: 'Sys' },\r\n    { name: 'è¡æ¿äººå', value: 'Administrative_organization' }\r\n  ];\r\n  curOrgType = this.variableOrgTypes[0].value;\r\n  hasAdminOrg = false;\r\n  userTypeButtonNeedShow = false; // ç¨æ·ç±»ååéæé®æ¯å¦éè¦æ¾ç¤º\r\n\r\n  condition: string;\r\n  users: UserPerformerEntity[] = [];\r\n  constructor(\r\n    private designerUIState: ProcessDesignerUIState,\r\n    private expr: ExpressionService,\r\n    private injector: Injector,\r\n    private lookupConfig: PerformerConfigService,\r\n    private ngZone: NgZone,\r\n    private http?: HttpService,\r\n    private message?: MessagerService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    let url = '/api/runtime/wf/v1.0/reportingOrgType/hasAdminOrg';\r\n    this.http.get(url).subscribe((data: any) => {\r\n      this.hasAdminOrg = data;\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      this.inputGroup.nativeElement.addEventListener(\r\n        'mouseenter',\r\n        this.onMouseEnter.bind(this)\r\n      );\r\n      this.inputGroup.nativeElement.addEventListener(\r\n        'mouseleave',\r\n        this.onMouseLeave.bind(this)\r\n      );\r\n    });\r\n  }\r\n\r\n  onMouseEnter(event) {\r\n    this.showClearButton = true;\r\n    if (this.showClearButton) {\r\n      this.toggleClearIcon(event, true);\r\n    }\r\n  }\r\n  onMouseLeave(event) {\r\n    this.showClearButton = false;\r\n    this.toggleClearIcon(event, false);\r\n  }\r\n  private toggleClearIcon(event: any, isShow = false) {\r\n    const str = isShow ? '' : 'none';\r\n    const clearIcon = event.target.querySelector('.input-group-clear');\r\n    if (clearIcon) {\r\n      clearIcon.style.display = str;\r\n    }\r\n  }\r\n  userTypeChange(data) {\r\n    // åæ¢ç±»åæ¶ï¼æ¸ç©ºusers\r\n    this.users = [];\r\n    // åæ¢ç±»åæ¶ï¼äººåç±»åèªå¨åæ¢æç³»ç»ç¨æ·\r\n    this.orgTypeChange('Sys');\r\n    // æè¡æ¿å¸®å©å¹¶ä¸åæ¢å°åéåä¸èææ¾ç¤º\r\n    this.userTypeButtonNeedShow = this.hasAdminOrg && data.data.value === 'variable';\r\n  }\r\n  clear(data: any) {\r\n    this.bindingData = {};\r\n    this.users = [];\r\n    this.variableOrgTypes = [\r\n      { name: 'ç³»ç»ç¨æ·', value: 'Sys' },\r\n      { name: 'è¡æ¿äººå', value: 'Administrative_organization' }\r\n    ];\r\n  }\r\n  selectUsers(data: any) {\r\n    // åºå®ç¨æ·\r\n    if (this.userType === this.userTypeCollection[0].value) {\r\n      this.lookupConfig.getLookupConfig().subscribe(re => {\r\n        // é¡¹ç®éç½®äºèªå·±çå¸®å©æ¶\r\n        if (re.user && re.user.impl) {\r\n          System.import(re.user.impl)\r\n            .then((moduleFactorys: any) => {\r\n              const moduleFactory: any = Object.values(moduleFactorys)[0];\r\n              const moduleRef = moduleFactory.create(this.injector);\r\n              moduleRef.instance.showHelp().subscribe(data => {\r\n                if (data && data.length > 0) {\r\n                  this.users = data.map(u => {\r\n                    const user = new UserPerformerEntity(u.id, u.name, 'wf.UserParticipant');\r\n                    user.orgId = u.orgId;\r\n                    user.orgName = u.orgName;\r\n                    user.userType = this.userTypeCollection[0].value;\r\n                    return user;\r\n                  });\r\n                }\r\n              });\r\n            });\r\n        } else { // å è½½é»è®¤å¸®å©\r\n          this.userHelp.showHelp();\r\n        }\r\n      });\r\n    } else {\r\n      this.showExprHelp();\r\n    }\r\n  }\r\n  editConditon() {\r\n    if (this.designerUIState.schemas.length > 0) {\r\n      for (const schema of this.designerUIState.schemas) {\r\n        this.expr.addSchema('Schema', schema);\r\n      }\r\n      if (this.designerUIState.schemas[0].entityTypes && this.designerUIState.schemas[0].entityTypes.length > 0) {\r\n        const entityType = this.designerUIState.schemas[0].entityTypes[0];\r\n        this.expr.addInjectedEntity(entityType.name, 'Schema',\r\n          entityType.name, InjectedType.EntityType);\r\n      }\r\n    }\r\n    const context = new Array();\r\n    if (this.designerUIState.procInstContext.length > 0) {\r\n      for (const variable of this.designerUIState.procInstContext) {\r\n        context.push(variable);\r\n      }\r\n    }\r\n    if (this.designerUIState.formalParameterContext.length > 0) {\r\n      for (const variable of this.designerUIState.formalParameterContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (this.designerUIState.participantContext.length > 0) {\r\n      for (const variable of this.designerUIState.participantContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (this.designerUIState.processVariableContext.length > 0) {\r\n      for (const variable of this.designerUIState.processVariableContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (this.designerUIState.activityComponentContext.length > 0) {\r\n      for (const variable of this.designerUIState.activityComponentContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (context.length > 0) {\r\n      for (const v of context) {\r\n        this.expr.addContext(v);\r\n      }\r\n    }\r\n    this.expr.setEditPattern(ExprEditMode.Conditional); // è¡¨è¾¾å¼å±ç°æ¨¡å¼ï¼é»è®¤ç®æç\r\n    this.expr.addExpressionText(this.condition);\r\n    this.expr.buildExpression().then((expressioninfo: string) => {\r\n      this.condition = expressioninfo;\r\n    });\r\n  }\r\n  usersSelect(data: any[]) {\r\n    this.users = data.map(u => {\r\n      const user = new UserPerformerEntity(u.id, u.name, 'wf.UserParticipant');\r\n      user.orgId = u.sysOrgId;\r\n      user.orgName = u.sysOrgName;\r\n      user.userType = this.userTypeCollection[0].value;\r\n\r\n      return user;\r\n    });\r\n  }\r\n  showExprHelp() {\r\n    if (this.designerUIState.schemas.length > 0) {\r\n      for (const schema of this.designerUIState.schemas) {\r\n        this.expr.addSchema('Schema', schema);\r\n      }\r\n      if (this.designerUIState.schemas[0].entityTypes && this.designerUIState.schemas[0].entityTypes.length > 0) {\r\n        const entityType = this.designerUIState.schemas[0].entityTypes[0];\r\n        this.expr.addInjectedEntity(entityType.name, 'Schema',\r\n          entityType.name, InjectedType.EntityType);\r\n      }\r\n    }\r\n    const context = new Array();\r\n    if (this.designerUIState.participantContext.length > 0) {\r\n      for (const variable of this.designerUIState.participantContext) {\r\n        context.push(variable);\r\n      }\r\n    }\r\n    if (this.designerUIState.processVariableContext.length > 0) {\r\n      for (const variable of this.designerUIState.processVariableContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (context.length > 0) {\r\n      for (const v of context) {\r\n        this.expr.addContext(v);\r\n      }\r\n    }\r\n    if (this.users.length > 0) {\r\n      this.expr.addExpressionText(this.users[0].performerId);\r\n    } else {\r\n      this.expr.addExpressionText('');\r\n    }\r\n    this.expr.buildExpression().then((expressioninfo: string) => {\r\n      const user = new UserPerformerEntity(expressioninfo, '', 'wf.UserParticipant');\r\n      user.tag = 'expression';\r\n      user.performerName = this.variableParticipantName(expressioninfo);\r\n      user.userType = this.userTypeCollection[1].value;\r\n      if(this.variableParticipantName(expressioninfo) === ''){\r\n        this.message.error('è¡æ¿äººåç±»åä¸è½ä½¿ç¨ä¸ä¸æåé');\r\n        this.users = [];\r\n      }else{\r\n        this.users = [user];\r\n      }\r\n      if(user.performerId.indexOf(\"GetContextParameter\") >= 0){ // æ ¹æ®è¡¨è¾¾å¼ä¸­çå½æ°åå¤æ­æ¯å¦ä½¿ç¨çæ¯ä¸ä¸æåé\r\n        this.variableOrgTypes = [\r\n          { name: 'ç³»ç»ç¨æ·', value: 'Sys' }\r\n        ];\r\n      } else {\r\n        this.variableOrgTypes = [\r\n          { name: 'ç³»ç»ç¨æ·', value: 'Sys' },\r\n          { name: 'è¡æ¿äººå', value: 'Administrative_organization' }\r\n        ];\r\n      }\r\n    });\r\n  }\r\n  getPerformers() {\r\n    this.users.map(user => {\r\n      if (user.orgId === undefined) {\r\n        user.orgType = this.curOrgType;\r\n        return user;\r\n      }\r\n    });\r\n    if (this.condition) {\r\n      this.users = this.users.map(user => {\r\n        user.condition = this.condition;\r\n        return user;\r\n      });\r\n    }\r\n    return this.users;\r\n  }\r\n  private variableParticipantName(expr: string): string {\r\n    for (const c of this.designerUIState.participantContext) {\r\n      if (expr.indexOf(c.key) > -1) {\r\n        if(this.curOrgType !== 'Sys'){ // è¡æ¿äººåç±»åä¸åè®¸ä½¿ç¨ä¸ä¸æåé\r\n          return '';\r\n        }\r\n        return c.name;\r\n      }\r\n    }\r\n    for (const c of this.designerUIState.processVariableContext) {\r\n      if (expr.indexOf(c.key) > -1) {\r\n        return c.name;\r\n      }\r\n    }\r\n    return 'ä¸å¡å­æ®µ';\r\n  }\r\n  orgTypeChange(data: any) {\r\n    if (data === 'Sys') {\r\n      this.curOrgType = this.variableOrgTypes[0].value;\r\n    } else {\r\n        this.curOrgType = this.variableOrgTypes[1].value;\r\n    }\r\n  }\r\n}\r\n","import { PerformerEntity } from './performer.entity';\r\n\r\nexport class PositionPerformerEntity extends PerformerEntity {\r\n    positionType: string;\r\n    constructor() {\r\n        super();\r\n    }\r\n}\r\n","import { Component, OnInit, HostBinding, ViewChild, ElementRef, NgZone, AfterViewInit } from '@angular/core';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { SysFarrisLookupComponent } from '@gsp-sys/sysmgr-ui';\r\nimport { ProcessDesignerUIState } from '../../../../app/process-designer.uistate';\r\nimport { ExprEditMode, ExpressionService, InjectedType } from '@gsp-svc/expression';\r\nimport { PositionPerformerEntity } from '../../entities/position-performer.entity';\r\n\r\n@Component({\r\n  selector: 'app-position-performer',\r\n  templateUrl: './position-performer.component.html',\r\n  styleUrls: ['./position-performer.component.scss']\r\n})\r\nexport class PositionPerformerComponent implements OnInit, AfterViewInit {\r\n  @HostBinding('class')\r\n  cls = 'd-flex flex-fill h-100';\r\n  @ViewChild(SysFarrisLookupComponent) posiHelp: SysFarrisLookupComponent;\r\n\r\n  @ViewChild('inputGroup') inputGroup: ElementRef;\r\n  showClearButton = false;\r\n\r\n  groupIcon = '<i class=\"f-icon f-icon-lookup\"></i>';\r\n\r\n  positionTypes = [\r\n    { value: '0', text: 'ç»ç»å²' },\r\n    { value: '1', text: 'éç¨å²' }\r\n  ];\r\n\r\n  condition: string;\r\n\r\n  filter = { };\r\n  position: PositionPerformerEntity = new PositionPerformerEntity();\r\n  constructor(\r\n    private http: HttpService,\r\n    public designerUIState: ProcessDesignerUIState,\r\n    private expr: ExpressionService,\r\n    private ngZone: NgZone,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      this.inputGroup.nativeElement.addEventListener(\r\n        'mouseenter',\r\n        this.onMouseEnter.bind(this)\r\n      );\r\n      this.inputGroup.nativeElement.addEventListener(\r\n        'mouseleave',\r\n        this.onMouseLeave.bind(this)\r\n      );\r\n    });\r\n  }\r\n\r\n  onMouseEnter(event) {\r\n    this.showClearButton = true;\r\n    if (this.showClearButton) {\r\n      this.toggleClearIcon(event, true);\r\n    }\r\n  }\r\n  onMouseLeave(event) {\r\n    this.showClearButton = false;\r\n    this.toggleClearIcon(event, false);\r\n  }\r\n  private toggleClearIcon(event: any, isShow = false) {\r\n    const str = isShow ? '' : 'none';\r\n    const clearIcon = event.target.querySelector('.input-group-clear');\r\n    if (clearIcon) {\r\n      clearIcon.style.display = str;\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    this.position.performerId = null;\r\n    this.position.performerName = null;\r\n  }\r\n\r\n  positionTypeChange(data) {\r\n    if (data.value === '0') {\r\n      this.filter = { positionType: 0 };\r\n    } else {\r\n      this.filter = { positionType: 1 };\r\n    }\r\n    this.clear();\r\n    this.position.orgType = null;\r\n    this.position.orgId = null;\r\n  }\r\n\r\n  selectOrganition() {\r\n    if (this.position.positionType === '1') {\r\n      if (this.designerUIState.schemas.length > 0) {\r\n        for (const schema of this.designerUIState.schemas) {\r\n          this.expr.addSchema('Schema', schema);\r\n        }\r\n        if (this.designerUIState.schemas[0].entityTypes && this.designerUIState.schemas[0].entityTypes.length > 0) {\r\n          const entityType = this.designerUIState.schemas[0].entityTypes[0];\r\n          this.expr.addInjectedEntity(entityType.name, 'Schema',\r\n            entityType.name, InjectedType.EntityType);\r\n        }\r\n      }\r\n      this.expr.addExpressionText(this.position.orgId);\r\n      this.expr.buildExpression().then((expr: string) => {\r\n        this.position.orgId = expr;\r\n      });\r\n    }\r\n  }\r\n  selectPosition() {\r\n    this.posiHelp.showHelp();\r\n  }\r\n  editCondition() {\r\n    if (this.designerUIState.schemas.length > 0) {\r\n      for (const schema of this.designerUIState.schemas) {\r\n        this.expr.addSchema('Schema', schema);\r\n      }\r\n      if (this.designerUIState.schemas[0].entityTypes && this.designerUIState.schemas[0].entityTypes.length > 0) {\r\n        const entityType = this.designerUIState.schemas[0].entityTypes[0];\r\n        this.expr.addInjectedEntity(entityType.name, 'Schema',\r\n          entityType.name, InjectedType.EntityType);\r\n      }\r\n    }\r\n    const context = new Array();\r\n    if (this.designerUIState.procInstContext.length > 0) {\r\n      for (const variable of this.designerUIState.procInstContext) {\r\n        context.push(variable);\r\n      }\r\n    }\r\n    if (this.designerUIState.formalParameterContext.length > 0) {\r\n      for (const variable of this.designerUIState.formalParameterContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (this.designerUIState.participantContext.length > 0) {\r\n      for (const variable of this.designerUIState.participantContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (this.designerUIState.processVariableContext.length > 0) {\r\n      for (const variable of this.designerUIState.processVariableContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (this.designerUIState.activityComponentContext.length > 0) {\r\n      for (const variable of this.designerUIState.activityComponentContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (context.length > 0) {\r\n      for (const v of context) {\r\n        this.expr.addContext(v);\r\n      }\r\n    }\r\n    this.expr.setEditPattern(ExprEditMode.Conditional); // è¡¨è¾¾å¼å±ç°æ¨¡å¼ï¼é»è®¤ç®æç\r\n    this.expr.addExpressionText(this.position.condition);\r\n    this.expr.buildExpression().then((expressioninfo: string) => {\r\n      this.position.condition = expressioninfo;\r\n    });\r\n  }\r\n\r\n  orgTypeChange(re: any) {\r\n    this.position.orgType = re.data.value;\r\n  }\r\n  clearOrgType() {\r\n    this.position.orgType = null;\r\n  }\r\n  positionsSelect(data) {\r\n    if (data) {\r\n      this.position.performerId = data.id;\r\n      this.position.performerName = data.name;\r\n      this.position.type = 'wf.PositionParticipant';\r\n      if (!this.position.positionType) {\r\n        this.position.positionType = data.posType + '';\r\n        this.filter = {\r\n          positionType: data.posType\r\n        };\r\n      }\r\n    }\r\n  }\r\n  getPerformers() {\r\n    return this.position;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class ComponentPerformerService {\r\n    constructor(private http: HttpService) {\r\n\r\n    }\r\n    getLookUpData(helpId: string, su: string, pageIndex: number, pageSiza: number, search?: any): Observable<any> {\r\n        let url = `/api/runtime/wf/v1.0/dtProcDefs/getHelpData?helpId=${helpId}&pageIndex=${pageIndex}&pageSize=${pageSiza}`;\r\n        if (search) {\r\n            url += `&searchValue=${JSON.stringify(search)}`;\r\n        }\r\n        return this.http.get(url);\r\n    }\r\n    getHelpMetaData(helpId: string, su: string): Observable<any> {\r\n        const url = `/api/runtime/lcm/v1.0/rt-metadatas/${helpId}`;\r\n        return this.http.get(url);\r\n    }\r\n}\r\n","import { ProcessDeUtil } from '../../../../domain/process-de-util';\r\n\r\nexport class ComponentPerformer {\r\n    constructor() {\r\n        this.id = ProcessDeUtil.GenerateElementId();\r\n    }\r\n    id: string;\r\n    name: string;\r\n    metadataId: string;\r\n    methodCode: string;\r\n    methodName: string;\r\n    actualParameters: Array<ActualParameter>;\r\n    condition: string;\r\n}\r\n\r\nexport class ActualParameter {\r\n    code: string;\r\n    value: string;\r\n    valueText: string;\r\n    tag: string;\r\n    fetchValueMode?: any;\r\n    fetchValueSetting?: any;\r\n}\r\n","import { Component, OnInit, ComponentFactoryResolver, Injector, Input, ViewChild, ElementRef, HostBinding, AfterViewInit, NgZone } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { ProcessDesignerUIState } from '../../../../app/process-designer.uistate';\r\nimport { ExpressionService, InjectedType, ExprEditMode } from '@gsp-svc/expression';\r\nimport { SessionService } from '@ecp-caf/caf-common';\r\nimport { BsModalService } from '@farris/ui-modal';\r\nimport { CommonComponentUiRTService, SelectorResult } from '@gsp-cmp/ccmp-ui';\r\nimport { SelectMetadataRTComponent, Metadata4RefDto, MetadataDto } from '@gsp-lcm/metadatart-selector';\r\nimport { GspComponent } from '@gsp-cmp/common-component';\r\nimport { DataColumn, DatagridComponent } from '@farris/ui-datagrid';\r\nimport { of, forkJoin } from 'rxjs';\r\nimport { RowEditParam } from '@farris/ui-datagrid/lib/types';\r\nimport { EditorTypes } from '@farris/ui-datagrid-editors';\r\nimport { LookupGridComponent } from '@farris/ui-lookup';\r\nimport { ComponentPerformerService } from './component-performer.service';\r\nimport { WebServiceParameter, ParameterFetchValueMode, HelpFetchValueSetting } from '@gsp-cmp/wscmp-models';\r\nimport { ComponentPerformer, ActualParameter } from './component-performer.entity';\r\nimport { ProcessDeUtil } from '../../../../domain/process-de-util';\r\n\r\n@Component({\r\n  selector: 'app-component-performer',\r\n  templateUrl: './component-performer.component.html',\r\n  styleUrls: ['./component-performer.component.scss'],\r\n  providers: [ComponentPerformerService]\r\n})\r\nexport class ComponentPerformerComponent implements OnInit, AfterViewInit {\r\n  @HostBinding('class')\r\n  cls = 'farris-main-area flex-column';\r\n\r\n  private componentPerformer: ComponentPerformer;\r\n  @ViewChild(DatagridComponent) grid: DatagridComponent;\r\n  @ViewChild(LookupGridComponent) lookup: LookupGridComponent;\r\n\r\n  @ViewChild('inputGroup') inputGroup: ElementRef;\r\n  showClearButton = false;\r\n\r\n\r\n  @Input()\r\n  set component(cmp: ComponentPerformer) {\r\n    if (cmp && cmp.methodCode) {\r\n      this.service.getHelpMetaData(cmp.metadataId, '').subscribe(re => {\r\n        const c = JSON.parse(re.content);\r\n        const operation = c.operations.find(o => o.code === cmp.methodCode);\r\n        if (operation) {\r\n          cmp.actualParameters = cmp.actualParameters.map(a => {\r\n            const p = operation.parameters.find(i => i.code === a.code);\r\n            if (p) {\r\n              return {\r\n                code: a.code,\r\n                name: p.name,\r\n                value: a.value,\r\n                valueText: a.valueText ? a.valueText : a.value,\r\n                description: p.description,\r\n                tag: a.tag,\r\n                fetchValueMode: p.fetchValueMode,\r\n                fetchValueSetting: p.fetchValueSetting\r\n              };\r\n            } else {\r\n              throw new Error('å½åæä»¶æ¹æ³åæ°ä¸ä¸è´ï¼è¯·æ´æ°ï¼');\r\n            }\r\n          });\r\n          this.componentPerformer = cmp;\r\n        } else {\r\n          throw new Error('å½åæä»¶å·²ä¸å­å¨æ­¤æ¹æ³ï¼è¯·æ´æ°ï¼');\r\n        }\r\n      });\r\n    } else {\r\n      this.componentPerformer = new ComponentPerformer();\r\n    }\r\n  }\r\n  get component() {\r\n    return this.componentPerformer;\r\n  }\r\n\r\n  curParameter: ActualParameter;\r\n  columns = [\r\n    { field: 'code', width: 60, title: 'ç¼å·' },\r\n    { field: 'name', width: 60, title: 'åç§°' },\r\n    { field: 'description', width: 60, title: 'æè¿°', showTips: true },\r\n    {\r\n      field: 'valueText', width: 100, title: 'åæ°å¼',\r\n      editor: {\r\n        type: 'input-group',\r\n        options: {\r\n          groupText: '<i class=\"f-icon f-icon-lookup\"></i>',\r\n          editable: false,\r\n          clickHandle: (e) => {\r\n            e.formControl.setValue(e.instance.value ? e.instance.value : '');\r\n            this.showExprHelp(e);\r\n          },\r\n          clear: (e) => {\r\n            // æ¸çvalueTextï¼ä¹åºè¯¥æ¸çvalue\r\n            e.rowData.value = '';\r\n            for (const p of this.component.actualParameters) {\r\n              if (p.code === e.rowId) {\r\n                p.value = '';\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  ];\r\n  helpInfo = {\r\n    helpId: '',\r\n    su: '',\r\n    columns: [],\r\n    displayType: 'List',\r\n    items: [],\r\n    pageInfo: {\r\n      pageIndex: 1,\r\n      pageList: [10, 20, 30, 50],\r\n      pageSize: 20\r\n    },\r\n    search: { category: 'search'},\r\n    title: 'å¸®å©',\r\n    total: 100,\r\n    fieldInfo: {\r\n      idField: 'id',\r\n      textField: 'name',\r\n      valueField: 'id'\r\n    }\r\n  };\r\n  cell: any;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private designerState: ProcessDesignerUIState,\r\n    private expr: ExpressionService,\r\n    private resolver: ComponentFactoryResolver,\r\n    private injector: Injector,\r\n    private sessionSrc: SessionService,\r\n    private modalService: BsModalService,\r\n    private componentService: CommonComponentUiRTService,\r\n    private ngZone: NgZone,\r\n    private service: ComponentPerformerService,\r\n    private util: ProcessDeUtil\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n  ngAfterViewInit(): void {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      this.inputGroup.nativeElement.addEventListener(\r\n        'mouseenter',\r\n        this.onMouseEnter.bind(this)\r\n      );\r\n      this.inputGroup.nativeElement.addEventListener(\r\n        'mouseleave',\r\n        this.onMouseLeave.bind(this)\r\n      );\r\n    });\r\n  }\r\n\r\n  onMouseEnter(event) {\r\n    this.showClearButton = true;\r\n    if (this.showClearButton) {\r\n      this.toggleClearIcon(event, true);\r\n    }\r\n  }\r\n  onMouseLeave(event) {\r\n    this.showClearButton = false;\r\n    this.toggleClearIcon(event, false);\r\n  }\r\n  private toggleClearIcon(event: any, isShow = false) {\r\n    const str = isShow ? '' : 'none';\r\n    const clearIcon = event.target.querySelector('.input-group-clear');\r\n    if (clearIcon) {\r\n      clearIcon.style.display = str;\r\n    }\r\n  }\r\n\r\n  selectChanged(event) {\r\n    this.curParameter = event.data;\r\n  }\r\n  beforeEdit = (param: RowEditParam) => {\r\n    const rowData = param.rowData as any;\r\n    this.curParameter = rowData;\r\n    switch (rowData.fetchValueMode) {\r\n      case ParameterFetchValueMode.express:\r\n        param.column.editor = {\r\n          type: 'input-group',\r\n          options: {\r\n            groupText: '<i class=\"f-icon f-icon-lookup\"></i>',\r\n            editable: false,\r\n            clickHandle: (e) => {\r\n              e.formControl.setValue(e.instance.value ? e.instance.value : '');\r\n              this.showExprHelp(e);\r\n            },\r\n            clear: (e) => {\r\n              // æ¸çvalueTextï¼ä¹åºè¯¥æ¸çvalue\r\n              e.rowData.value = '';\r\n              for (const p of this.component.actualParameters) {\r\n                if (p.code === e.rowId) {\r\n                  p.value = '';\r\n                }\r\n              }\r\n            }\r\n          }\r\n        };\r\n        break;\r\n      case ParameterFetchValueMode.none:\r\n        param.column.editor = {\r\n          type: 'input-group',\r\n          options: {\r\n            groupText: '<i class=\"f-icon f-icon-lookup\"></i>',\r\n            editable: false,\r\n            clickHandle: (e) => {\r\n              e.formControl.setValue(e.instance.value ? e.instance.value : '');\r\n              this.showExprHelp(e);\r\n            },\r\n            clear: (e) => {\r\n              // æ¸çvalueTextï¼ä¹åºè¯¥æ¸çvalue\r\n              e.rowData.value = '';\r\n              for (const p of this.component.actualParameters) {\r\n                if (p.code === e.rowId) {\r\n                  p.value = '';\r\n                }\r\n              }\r\n            }\r\n          }\r\n        };\r\n        break;\r\n      case ParameterFetchValueMode.const:\r\n        param.column.editor = { type: EditorTypes.TEXTBOX, options: {} };\r\n        break;\r\n      case ParameterFetchValueMode.enum:\r\n        param.column.editor = { type: EditorTypes.TEXTBOX, options: {} };\r\n        break;\r\n      case ParameterFetchValueMode.help:\r\n        param.column.editor = {\r\n          type: 'input-group',\r\n          options: {\r\n            groupText: '<i class=\"f-icon f-icon-lookup\"></i>',\r\n            editable: false,\r\n            clickHandle: (e) => {\r\n              this.cell = e;\r\n              this.helpInfo.helpId = (rowData.fetchValueSetting as HelpFetchValueSetting).helpId;\r\n              this.helpInfo.su = (rowData.fetchValueSetting as HelpFetchValueSetting).serviceUnit;\r\n              this.helpInfo.pageInfo = {\r\n                pageIndex: 1,\r\n                pageList: [10, 20, 30, 50],\r\n                pageSize: 20\r\n              };\r\n              this.helpInfo.search = { category: 'search' };\r\n              this.getHelpInfo();\r\n            },\r\n            clear: (e) => {\r\n              // æ¸çvalueTextï¼ä¹åºè¯¥æ¸çvalue\r\n              e.rowData.value = '';\r\n              for (const p of this.component.actualParameters) {\r\n                if (p.code === e.rowId) {\r\n                  p.value = '';\r\n                }\r\n              }\r\n            }\r\n          }\r\n        };\r\n        break;\r\n    }\r\n    return of(true);\r\n  }\r\n  afterEdit = (rowIndex: number, rowData: any, column?: DataColumn) => {\r\n    return of(true);\r\n  }\r\n\r\n  endEdit(e: any) {\r\n    // ææ¬æ¡ç¼è¾åæ¶ä¿®æ¹value\r\n    if (e.rowData.fetchValueMode === ParameterFetchValueMode.const || e.rowData.fetchValueMode === ParameterFetchValueMode.enum) {\r\n      this.component.actualParameters[e.rowIndex].value = this.component.actualParameters[e.rowIndex].valueText;\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    this.componentPerformer.name = '';\r\n    this.componentPerformer.metadataId = '';\r\n    this.componentPerformer.methodCode = '';\r\n    this.componentPerformer.methodName = '';\r\n    this.componentPerformer.condition = '';\r\n    this.componentPerformer.actualParameters = new Array();\r\n  }\r\n\r\n  selectComponent() {\r\n    const compFactory = this.resolver.resolveComponentFactory(SelectMetadataRTComponent);\r\n    const compRef = compFactory.create(this.injector);\r\n    compRef.instance.typeList = 'WebServiceComponent'; // ç®ååªè½æ ¹æ®åæ°æ®ç±»åè¿æ»¤ï¼åç»­æ·»å æ ç­¾è¿æ»¤\r\n    compRef.instance.selectedMetadata.subscribe(($event: Metadata4RefDto) => {\r\n      try {\r\n        const meta: MetadataDto = $event.metadata;\r\n        this.openComponentSelectorNew(meta.id, this.sessionSrc.getUserSessionId());\r\n      } catch {\r\n        console.log('$event', $event);\r\n        throw new Error('è·åè§£ææä»¶åºé' + $event);\r\n      }\r\n    });\r\n\r\n    const modalConfig = {\r\n      title: 'æä»¶éæ©',\r\n      width: 980,\r\n      height: 548,\r\n      showButtons: false\r\n    };\r\n    const dialog = this.modalService.show(compRef, modalConfig);\r\n    compRef.instance.closeModalEmitter.subscribe($event => dialog.close());\r\n  }\r\n  private openComponentSelectorNew(metadataId: string, sessionId: string) {\r\n    this.componentService.openSelector(metadataId, sessionId).subscribe(\r\n      (selectorResult: SelectorResult) => {\r\n        selectorResult.confirmEvent.subscribe(\r\n          (result: GspComponent) => {\r\n            if (result) {\r\n              this.component.name = result.name;\r\n              this.component.metadataId = result.id;\r\n              this.component.methodCode = result.operations[0].code;\r\n              this.component.methodName = result.operations[0].name;\r\n              this.component.actualParameters = [];\r\n\r\n              if (result.operations[0].parameters && result.operations[0].parameters.length > 0) {\r\n                this.component.actualParameters = result.operations[0].parameters\r\n                  .map((p: WebServiceParameter) => (\r\n                    {\r\n                      code: p.code,\r\n                      name: p.name,\r\n                      value: '',\r\n                      valueText: '',\r\n                      description: p.description,\r\n                      fetchValueMode: p.fetchValueMode,\r\n                      fetchValueSetting: p.fetchValueSetting\r\n                    }) as any);\r\n              }\r\n            }\r\n          });\r\n      });\r\n  }\r\n  showExprHelp(e: any) {\r\n    if (this.designerState.schemas.length > 0) {\r\n      for (const schema of this.designerState.schemas) {\r\n        this.expr.addSchema('Schema', schema);\r\n      }\r\n      if (this.designerState.schemas[0].entityTypes && this.designerState.schemas[0].entityTypes.length > 0) {\r\n        const entityType = this.designerState.schemas[0].entityTypes[0];\r\n        this.expr.addInjectedEntity(entityType.name, 'Schema',\r\n          entityType.name, InjectedType.EntityType);\r\n      }\r\n    }\r\n    const context = new Array();\r\n    if (this.designerState.procInstContext.length > 0) {\r\n      for (const variable of this.designerState.procInstContext) {\r\n        context.push(variable);\r\n      }\r\n    }\r\n    if (this.designerState.formalParameterContext.length > 0) {\r\n      for (const variable of this.designerState.formalParameterContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (this.designerState.participantContext.length > 0) {\r\n      for (const variable of this.designerState.participantContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (this.designerState.processVariableContext.length > 0) {\r\n      for (const variable of this.designerState.processVariableContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (context.length > 0) {\r\n      for (const v of context) {\r\n        this.expr.addContext(v);\r\n      }\r\n    }\r\n    this.expr.setEditPattern(ExprEditMode.Advanced); // é»è®¤æå¼é«çº§è¡¨è¾¾å¼ç¼è¾å¨\r\n    this.expr.addExpressionText(e.instance.value);\r\n    this.expr.buildExpression().then((d: string) => {\r\n      if (d) {\r\n        e.formControl.setValue(d);\r\n        e.instance.cd.detectChanges();\r\n        e.rowData.value = d;\r\n        for (const p of this.component.actualParameters) {\r\n          if (p.code === e.rowId) {\r\n            p.value = d;\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  getPerformers() {\r\n    this.grid.endCellEdit();\r\n    console.log(this.component);\r\n    return this.component;\r\n  }\r\n\r\n  private getHelpInfo() {\r\n    forkJoin(this.service.getHelpMetaData(this.helpInfo.helpId, this.helpInfo.su),\r\n      this.service.getLookUpData(this.helpInfo.helpId, this.helpInfo.su,\r\n        this.helpInfo.pageInfo.pageIndex, this.helpInfo.pageInfo.pageSize, this.helpInfo.search)).subscribe(re => {\r\n        if (re[0]) {\r\n          const meta = re[0];\r\n          const help = JSON.parse(meta.content) as any;\r\n          this.helpInfo.columns = help.dataSource.columns;\r\n          this.helpInfo.displayType = help.displayType;\r\n          this.helpInfo.fieldInfo = {\r\n            idField: help.idField,\r\n            valueField: help.valueField,\r\n            textField: help.textField\r\n          };\r\n        } else {\r\n          throw new Error('å¸®å©åæ°æ®ä¸å­å¨ï¼');\r\n        }\r\n        if (re[1]) {\r\n          const helpData = re[1];\r\n          this.helpInfo.items = helpData.items;\r\n          this.helpInfo.title = helpData.title;\r\n          this.helpInfo.total = helpData.total;\r\n          this.lookup.showDialog();\r\n        } else {\r\n          throw new Error('è·åå¸®å©æ°æ®æºå¤±è´¥ï¼');\r\n        }\r\n      });\r\n  }\r\n\r\n  dictPicked = (rowData) => {\r\n    if (this.cell) {\r\n      this.cell.formControl.setValue(this.util.getValue(rowData, this.helpInfo.fieldInfo.textField));\r\n      this.cell.instance.cd.detectChanges();\r\n      this.cell.rowData.value = this.util.getValue(rowData, this.helpInfo.fieldInfo.valueField);\r\n      for (const p of this.component.actualParameters) {\r\n        if (p.code === this.cell.rowId) {\r\n          p.value = this.util.getValue(rowData, this.helpInfo.fieldInfo.valueField);\r\n        }\r\n      }\r\n      return of(true);\r\n    }\r\n  }\r\n  pagerChanged(data: any) {\r\n    if (data) {\r\n      this.helpInfo.pageInfo.pageIndex = data.pageIndex;\r\n      this.helpInfo.pageInfo.pageSize = data.pageSize;\r\n      this.service.getLookUpData(this.helpInfo.helpId, this.helpInfo.su,\r\n        this.helpInfo.pageInfo.pageIndex, this.helpInfo.pageInfo.pageSize, this.helpInfo.search)\r\n        .subscribe(re => {\r\n          this.helpInfo.items = re.items;\r\n          this.helpInfo.title = re.title;\r\n          this.helpInfo.total = re.total;\r\n          this.lookup.loadData(re);\r\n        });\r\n    }\r\n  }\r\n  search(data) {\r\n    console.log(data);\r\n    this.helpInfo.search = { category: 'search' };\r\n    if (data) {\r\n      const searchInfo = {\r\n        searchField: data.field || data.search.field,\r\n        searchValue: data.value || data.search.value\r\n      };\r\n      this.helpInfo.search = Object.assign(this.helpInfo.search, searchInfo);\r\n      this.service.getLookUpData(this.helpInfo.helpId, this.helpInfo.su,\r\n        this.helpInfo.pageInfo.pageIndex, this.helpInfo.pageInfo.pageSize, this.helpInfo.search)\r\n        .subscribe(re => {\r\n          this.helpInfo.items = re.items;\r\n          this.helpInfo.title = re.title;\r\n          this.helpInfo.total = re.total;\r\n          this.lookup.loadData(re);\r\n        });\r\n    }\r\n  }\r\n}\r\n","import { ProcessDeUtil } from '../../../../domain/process-de-util';\r\nimport {PerformerEntity} from \"../../entities/performer.entity\";\r\nexport enum ReportingRank {\r\n    DirectSuperior = 'DirectSuperior',\r\n    HigherSuperior = 'HigherSuperior'\r\n}\r\nexport class ReportingLineDataEntity extends PerformerEntity {\r\n  constructor(id?: string, name?: string, type?: string) {\r\n    super(id,name,type);\r\n  }\r\n  reportingLineDefId: string;\r\n  reportingLineDefName: string;\r\n  refOrgId: string;\r\n  refOrgName: string;\r\n  refUserId: string;\r\n  refEmployeeId: string;\r\n  dimension: string;\r\n  condition: string;\r\n  reportingReferObject: string;\r\n}\r\n\r\n","import { ILookupHttpService, RemoteParams, LookupGridResult } from '@farris/ui-lookup';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class WfReportDefHelpService implements ILookupHttpService {\r\n\r\n  constructor(\r\n    private http: HttpService\r\n  ) {\r\n  }\r\n\r\n  getData(url: string, params?: RemoteParams): Observable<LookupGridResult> {\r\n    const customData = params.customData;\r\n    const index = params.pageIndex || 1;\r\n    const size = params.pageSize || 20;\r\n    const searchValue = JSON.parse(params.searchValue);\r\n    if (searchValue.searchValue || customData.filter) {\r\n      let query = '{';\r\n      if (searchValue.searchValue) {\r\n        if (searchValue.searchField === '*') {\r\n          query += `\"codeOrNameLike\":\"${searchValue.searchValue}\",`;\r\n        } else {\r\n          query += `\"${searchValue.searchField}\":\"${searchValue.searchValue}\",`;\r\n        }\r\n      }\r\n      if (customData.filter) {\r\n        const keys = Object.keys(customData.filter);\r\n        if (keys && keys.length > 0) {\r\n          for (const key of keys) {\r\n            if (customData.filter[key]) {\r\n              query += `\"${key}\":\"${customData.filter[key]}\",`;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      if (query.substr(query.length - 1, 1) === ',') {\r\n        query = query.substring(0, query.length - 1);\r\n      }\r\n      query += '}';\r\n      query = encodeURIComponent(query);\r\n      query += `&pageIndex=${index}&pageSize=${size}`;\r\n      url += '?pageFilter=' + query;\r\n    } else {\r\n      url += `?pageIndex=${index}&pageSize=${size}`;\r\n    }\r\n    return this.http.get(url).pipe(\r\n      map((re: any) => ({\r\n        items: re.content,\r\n        total: re.totalElements,\r\n        pageInfo: {\r\n          pageIndex: re.pageable.pageNumber + 1,\r\n          pageSize: re.pageable.pageSize,\r\n          pageList: [20, 40, 60, 80, 100],\r\n          enablePager: true\r\n        }\r\n      }))\r\n    );\r\n  }\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, ViewChild } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { PickedResult, LookupGridComponent, ServerSideToken } from '@farris/ui-lookup';\r\nimport { WfReportDefHelpService } from './wf-report-def-help.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-wf-report-def-help',\r\n  template: `\r\n    <farris-lookup-grid #lookup\r\n      [disabled]=\"disabled\"\r\n      [editable]=\"false\"\r\n      [bindingData]=\"bindingData\"\r\n      [(ngModel)]=\"displayTxt\"\r\n      [columns]=\"columns\"\r\n      [singleSelect]=\"singleSelect\"\r\n      [title]=\"title\"\r\n      [displayType]=\"'List'\"\r\n      [uri]=\"dataUri\"\r\n      [idField]=\"'id'\"\r\n      [pageIndex]=\"pageIndex\"\r\n      [pageSize]=\"pageSize\"\r\n      [pagination]=\"pagination\"\r\n      [valueField]=\"'id'\"\r\n      [textField]=\"'name'\"\r\n      (clear)=\"afterClear($event)\"\r\n      [dialogWidth]=\"width\"\r\n      [dictPicking]=\"beforeOpen\"\r\n      [dictPicked]=\"dictPicked\">\r\n    </farris-lookup-grid>\r\n  `,\r\n  styles: [],\r\n  providers: [{ provide: ServerSideToken, useClass: WfReportDefHelpService }]\r\n})\r\nexport class WfReportDefHelpComponent implements OnInit {\r\n  /** æ é¢ */\r\n  @Input() title: string;\r\n  /** å®½åº¦ */\r\n  @Input() width = 550;\r\n  /** åæ°æº */\r\n  @Input() sourceType: 'matrixField';\r\n  /** åªè¯» */\r\n  @Input() disabled = false;\r\n  /** æ¯å¦åé */\r\n  @Input() singleSelect = true;\r\n  /** æ¯å¦åé¡µï¼é»è®¤true */\r\n  @Input() pagination = true;\r\n  /** é¦æ¬¡å è½½ç¬¬å é¡µï¼é»è®¤1 */\r\n  @Input() pageIndex = 1;\r\n  /** æ¯é¡µå è½½æ°ï¼é»è®¤20 */\r\n  @Input() pageSize = 20;\r\n  /** ç»å®å°å¸®å©ä¸çæ°æ®ï¼åå§æ¾ç¤ºå¼ç¨ */\r\n  @Input() displayTxt: string;\r\n  /** å­å¨å¸®å©éæ©çå¯¹è±¡ */\r\n  @Input() bindingData: { id: string, name: string };\r\n  /** è¿æ»¤æ¡ä»¶ */\r\n  @Input() filter: any = {};\r\n\r\n  // @Input() beforeClose: (selectData: any) => Observable<PickedResult>;\r\n  /** å¸®å©éæ©åäºä»¶ */\r\n  @Output() afterConfirm: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output() dialogClosed: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output() clear: EventEmitter<any> = new EventEmitter<any>();\r\n  dataUri: string;\r\n  columns: any[] = [];\r\n\r\n  @ViewChild('lookup') public lookUp: LookupGridComponent;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.columns = [\r\n      { title: 'ç¼å·', field: 'code', width: '80', searchField: 'code', },\r\n      { title: 'åç§°', field: 'name', width: '100', searchField: 'name', }\r\n    ];\r\n    // this.dataUri = this.uiState.dataUri;\r\n    this.dataUri = '/api/runtime/wf/v1.0/reportingLineDefinitions/query';\r\n    // å¿é¡»è¦æï¼å¦ååå§éä¸­ä¸èµ·ä½ç¨\r\n    this.lookUp.mapFields = { id: 'id', name: 'name' };\r\n  }\r\n\r\n  afterClear(arg: any) {\r\n    this.clear.next(arg);\r\n  }\r\n\r\n  /** å¸®å©åäºä»¶,å¼ºè¡ä¼ éè¿æ»¤æ¡ä»¶ */\r\n  beforeOpen = (arg) => {\r\n    // æè¿æ»¤æ°æ®åå½åçæ°æ®ä¼ éå°serviceå±\r\n    return of({\r\n      showDialog: true, data: {\r\n        filter: this.filter\r\n      }\r\n    });\r\n  }\r\n  dictPicked = (arg: any): Observable<PickedResult> => {\r\n    this.afterConfirm.next(arg);\r\n    return of({ closeDialog: true });\r\n  }\r\n\r\n\r\n  /** æå¨æ¾ç¤ºå¸®å© */\r\n  public showHelp() {\r\n    this.lookUp.showDialog();\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild, HostBinding, ElementRef, NgZone, Input } from '@angular/core';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { ReportingLineDefinitionEntity } from './reporting-line-definition.entity';\r\nimport { ReportingLineDataEntity } from './reporting-line-data.entity';\r\nimport { reportingLineDimensionEntity } from './reporting-line-dimension.entity';\r\nimport { of } from 'rxjs';\r\nimport { ProcessDesignerUIState } from '../../../../app/process-designer.uistate';\r\nimport { ExprEditMode, ExpressionService, InjectedType } from '@gsp-svc/expression';\r\nimport { LookupGridComponent } from '@farris/ui-lookup';\r\nimport { SysFarrisTreeHelpComponent } from \"@gsp-sys/sysmgr-ui\";\r\nimport { PerformerEntity } from \"../../entities/performer.entity\";\r\nimport { WfReportDefHelpComponent } from \"./service/wf-report-def-help.component\";\r\ndeclare var System: any;\r\n\r\n@Component({\r\n  selector: 'app-reporting-line',\r\n  templateUrl: './reporting-line.component.html',\r\n  styleUrls: ['./reporting-line.component.scss']\r\n})\r\nexport class ReportingLineComponent implements OnInit {\r\n  @HostBinding('class')\r\n  cls = 'd-flex flex-fill h-100';\r\n  treeFilter = '';\r\n  display: string = 'none';\r\n  typeReadOnly = false;\r\n  groupIcon2 = '<i class=\"f-icon f-icon-lookup\"></i>';\r\n  defName = '';\r\n\r\n  /**\r\n   * æ±æ¥å³ç³»æ°æ®\r\n   */\r\n  reportingLineDataEntity: ReportingLineDataEntity = new ReportingLineDataEntity();\r\n\r\n  /**\r\n   * æ±æ¥å³ç³»å®ä¹åè¡¨\r\n   */\r\n  reportingLineDefinitionList: ReportingLineDefinitionEntity[] = [];\r\n  reportingLineDefinition: any;\r\n\r\n  reportingLineDimension: reportingLineDimensionEntity[] = [];\r\n  @ViewChild(WfReportDefHelpComponent) reportingLineDefHelp: WfReportDefHelpComponent;\r\n\r\n  @Input()\r\n  set setReportingLineDataEntity(dataEntity: ReportingLineDataEntity) {\r\n    this.defName = dataEntity.reportingLineDefName;\r\n    this.reportingLineDataEntity = dataEntity;\r\n    const defUrl = '/api/runtime/wf/v1.0/reportingLineDefinitions/' + dataEntity.reportingLineDefId;\r\n    this.http.get(defUrl).subscribe((re: any) => {\r\n      this.reportingLineDefinition = re;\r\n      this.designerUIState.dimensions = [\r\n        { value: 'higherSuperior', text: 'é´æ¥ä¸çº§' }\r\n      ];\r\n      // å¼å®¹åå²æ°æ®\r\n      if (JSON.parse(this.reportingLineDefinition.dimensions)[0].code !== 'directSuperior') {\r\n        const di = {\r\n          value: 'directSuperior',\r\n          text: 'ç´æ¥ä¸çº§'\r\n        };\r\n        this.designerUIState.dimensions.push(di);\r\n      }\r\n      for (const dimension of JSON.parse(this.reportingLineDefinition.dimensions)) {\r\n        const di = {\r\n          value: dimension.code,\r\n          text: dimension.name\r\n        };\r\n        this.designerUIState.dimensions.push(di);\r\n      }\r\n    });\r\n    this.users = [dataEntity];\r\n    if (dataEntity.refUserId) {\r\n      this.users[0].performerName = this.variableParticipantName(dataEntity.refUserId);\r\n      this.curReportingRefer = this.reportingReferObjects[1].value;\r\n      this.display = 'block';\r\n    } else if (dataEntity.refEmployeeId) {\r\n      this.users[0].performerName = dataEntity.refEmployeeId;\r\n      this.curReportingRefer = this.reportingReferObjects[2].value;\r\n      this.display = 'block';\r\n    } else {\r\n      this.curReportingRefer = this.reportingReferObjects[0].value;\r\n    }\r\n    if (dataEntity.reportingLineDefId) {\r\n      this.typeReadOnly = true;\r\n    }\r\n  }\r\n\r\n  @ViewChild(LookupGridComponent) lookup: LookupGridComponent;\r\n  @ViewChild(SysFarrisTreeHelpComponent) orgHelp: SysFarrisTreeHelpComponent;\r\n  @ViewChild('inputGroup') inputGroup: ElementRef;\r\n  @ViewChild('inputGroup1') inputGroup1: ElementRef;\r\n  showClearButton = false;\r\n  condition: string;\r\n  items: ReportingLineDefinitionEntity[] = [];\r\n  users: PerformerEntity[] = [];\r\n  departments: PerformerEntity[] = [];\r\n  pageIndex = 1;\r\n  pageSize = 20;\r\n  pageList = [10, 20, 30, 50, 100];\r\n  total = 0;\r\n\r\n  /**\r\n   * æ±æ¥ç±»åæ¾ç¤ºå\r\n   */\r\n  columns = [\r\n    { title: 'ç¼å·', field: 'code', width: 100 },\r\n    { title: 'åç§°', field: 'name', width: 100 }\r\n  ];\r\n\r\n  /**\r\n   *  åä¸èåè¡¨æ±æ¥å³ç³»æ¾ç¤ºå­æ®µ\r\n   */\r\n  reportingReferObjects = [\r\n    { name: 'ç»ç»', value: 'dept' },\r\n    { name: 'ç³»ç»ç¨æ·', value: 'sysUser' },\r\n    { name: 'åå·¥', value: 'employee' }\r\n  ];\r\n  curReportingRefer = this.reportingReferObjects[0].value;\r\n\r\n\r\n  constructor(\r\n    private http: HttpService,\r\n    public designerUIState: ProcessDesignerUIState,\r\n    private expr: ExpressionService,\r\n    private ngZone: NgZone,\r\n  ) {\r\n    this.getReportingLineType();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  /**\r\n   * è·åæ±æ¥å³ç³»ç±»å\r\n   */\r\n  getReportingLineType() {\r\n    const url = '/api/runtime/wf/v1.0/reportingLineDefinitions';\r\n    this.http.get(url).subscribe((re: any) => {\r\n      this.reportingLineDefinitionList = re;\r\n      this.items = this.reportingLineDefinitionList.slice(0, this.pageSize);\r\n      this.total = this.reportingLineDefinitionList.length;\r\n    });\r\n  }\r\n\r\n  onclear() {\r\n    this.reportingLineDataEntity = new ReportingLineDataEntity();\r\n  }\r\n\r\n  // åç§ç±»åæ¹å\r\n  referObjectChange(data: any) {\r\n    if (data === 'dept') {\r\n      this.display = 'none';\r\n      this.curReportingRefer = this.reportingReferObjects[0].value;\r\n      this.reportingLineDataEntity.refUserId = null;\r\n      this.reportingLineDataEntity.refEmployeeId = null;\r\n    } else if (data === 'sysUser') {\r\n      this.display = 'block';\r\n      this.curReportingRefer = this.reportingReferObjects[1].value;\r\n      this.reportingLineDataEntity.refOrgId = null;\r\n      this.reportingLineDataEntity.refOrgName = null;\r\n      this.reportingLineDataEntity.refEmployeeId = null;\r\n    } else { // åå·¥çæåµ\r\n      this.display = 'block';\r\n      this.curReportingRefer = this.reportingReferObjects[2].value;\r\n      this.reportingLineDataEntity.refOrgId = null;\r\n      this.reportingLineDataEntity.refOrgName = null;\r\n      this.reportingLineDataEntity.refUserId = null;\r\n    }\r\n    // åç§å¯¹è±¡åæ¢æ¶ï¼æ¸ç©ºuserådepartment\r\n    this.users = [];\r\n    this.departments = [];\r\n  }\r\n\r\n  /**\r\n   * åç§ç¨æ·æ¹å\r\n   */\r\n  referUserChange(data: any) {\r\n    console.log(data);\r\n  }\r\n\r\n  /**\r\n   * ç»´åº¦æ¹å\r\n   */\r\n  reportingDimensionChange(data: any) {\r\n  }\r\n\r\n  /**\r\n   * ç»ç»å¸®å©éå®å\r\n   */\r\n  orgSelected(org: any) { // ç»ç»å¸®å©éå®å\r\n    this.reportingLineDataEntity.refOrgId = org.id;\r\n    this.reportingLineDataEntity.refOrgName = org.name;\r\n  }\r\n\r\n  /**\r\n   * ç¼è¾æ¡ä»¶\r\n   */\r\n  editCondition() {\r\n    if (this.designerUIState.schemas.length > 0) {\r\n      for (const schema of this.designerUIState.schemas) {\r\n        this.expr.addSchema('Schema', schema);\r\n      }\r\n      if (this.designerUIState.schemas[0].entityTypes && this.designerUIState.schemas[0].entityTypes.length > 0) {\r\n        const entityType = this.designerUIState.schemas[0].entityTypes[0];\r\n        this.expr.addInjectedEntity(entityType.name, 'Schema',\r\n          entityType.name, InjectedType.EntityType);\r\n      }\r\n    }\r\n    const context = new Array();\r\n    if (this.designerUIState.procInstContext.length > 0) {\r\n      for (const variable of this.designerUIState.procInstContext) {\r\n        context.push(variable);\r\n      }\r\n    }\r\n    if (this.designerUIState.formalParameterContext.length > 0) {\r\n      for (const variable of this.designerUIState.formalParameterContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (this.designerUIState.participantContext.length > 0) {\r\n      for (const variable of this.designerUIState.participantContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (this.designerUIState.processVariableContext.length > 0) {\r\n      for (const variable of this.designerUIState.processVariableContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (this.designerUIState.activityComponentContext.length > 0) {\r\n      for (const variable of this.designerUIState.activityComponentContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (context.length > 0) {\r\n      for (const v of context) {\r\n        this.expr.addContext(v);\r\n      }\r\n    }\r\n    this.expr.setEditPattern(ExprEditMode.Conditional); // è¡¨è¾¾å¼å±ç°æ¨¡å¼ï¼é»è®¤ç®æç\r\n    this.expr.addExpressionText(this.reportingLineDataEntity.condition); // this.reportingLineDataEntity.condition\r\n    this.expr.buildExpression().then((expressioninfo: string) => {\r\n      this.reportingLineDataEntity.condition = expressioninfo;\r\n    });\r\n  }\r\n\r\n  getReportingTypes(value?: string) {\r\n    const start = (this.pageIndex - 1) * this.pageSize;\r\n    const end = start + this.pageSize;\r\n    let items = [];\r\n    if (value) {\r\n      items = this.reportingLineDefinitionList.filter(f => f.name.indexOf(value) > -1 || f.code.indexOf(value) > -1);\r\n    } else {\r\n      items = this.reportingLineDefinitionList;\r\n    }\r\n    this.total = items.length;\r\n    this.items = items.slice(start, end);\r\n    this.lookup.componentRef.instance.loadData({\r\n      total: this.total,\r\n      pageSize: this.pageSize,\r\n      pageIndex: this.pageIndex,\r\n      data: this.items\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      this.inputGroup.nativeElement.addEventListener(\r\n        'mouseenter',\r\n        this.onMouseEnter.bind(this)\r\n      );\r\n      this.inputGroup.nativeElement.addEventListener(\r\n        'mouseleave',\r\n        this.onMouseLeave.bind(this)\r\n      );\r\n      this.inputGroup1.nativeElement.addEventListener(\r\n        'mouseenter',\r\n        this.onMouseEnter.bind(this)\r\n      );\r\n      this.inputGroup1.nativeElement.addEventListener(\r\n        'mouseleave',\r\n        this.onMouseLeave.bind(this)\r\n      );\r\n    });\r\n  }\r\n  onMouseEnter(event) {\r\n    this.showClearButton = true;\r\n    if (this.showClearButton) {\r\n      this.toggleClearIcon(event, true);\r\n    }\r\n  }\r\n  onMouseLeave(event) {\r\n    this.showClearButton = false;\r\n    this.toggleClearIcon(event, false);\r\n  }\r\n  private toggleClearIcon(event: any, isShow = false) {\r\n    const str = isShow ? '' : 'none';\r\n    const clearIcon = event.target.querySelector('.input-group-clear');\r\n    if (clearIcon) {\r\n      clearIcon.style.display = str;\r\n    }\r\n  }\r\n\r\n  clear(data: any) {\r\n    this.reportingLineDataEntity.refOrgId = '';\r\n    this.reportingLineDataEntity.refOrgName = '';\r\n  }\r\n  clearUser() {\r\n    this.users = [];\r\n    this.reportingLineDataEntity.refUserId = '';\r\n    this.reportingLineDataEntity.refEmployeeId = '';\r\n  }\r\n  clearOrg() {\r\n    this.departments = [];\r\n    this.reportingLineDataEntity.refOrgId = '';\r\n  }\r\n\r\n  selectOrg(data: string) {\r\n    this.showExprHelp(data);\r\n  }\r\n\r\n  selectUsers(data: string) {\r\n    this.showExprHelp(data);\r\n  }\r\n  showExprHelp(data: string) {\r\n    this.expr.setEditPattern(ExprEditMode.Advanced); // è¡¨è¾¾å¼å±ç°æ¨¡å¼ï¼é»è®¤é«çº§\r\n    if (this.designerUIState.schemas.length > 0) {\r\n      for (const schema of this.designerUIState.schemas) {\r\n        this.expr.addSchema('Schema', schema);\r\n      }\r\n      if (this.designerUIState.schemas[0].entityTypes && this.designerUIState.schemas[0].entityTypes.length > 0) {\r\n        const entityType = this.designerUIState.schemas[0].entityTypes[0];\r\n        this.expr.addInjectedEntity(entityType.name, 'Schema',\r\n          entityType.name, InjectedType.EntityType);\r\n      }\r\n    }\r\n    const context = new Array();\r\n    if (this.designerUIState.participantContext.length > 0) {\r\n      for (const variable of this.designerUIState.participantContext) {\r\n        context.push(variable);\r\n      }\r\n    }\r\n    if (this.designerUIState.processVariableContext.length > 0) {\r\n      for (const variable of this.designerUIState.processVariableContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (context.length > 0) {\r\n      for (const v of context) {\r\n        this.expr.addContext(v);\r\n      }\r\n    }\r\n    if (data === 'sysUser') {\r\n      if (this.reportingLineDataEntity.refUserId && this.reportingLineDataEntity.refUserId.length > 0) {\r\n        this.expr.addExpressionText(this.reportingLineDataEntity.refUserId);\r\n      } else {\r\n        this.expr.addExpressionText('');\r\n      }\r\n    } else if (data === 'org') {\r\n      if (this.reportingLineDataEntity.refOrgId && this.reportingLineDataEntity.refOrgId.length > 0) {\r\n        this.expr.addExpressionText(this.reportingLineDataEntity.refOrgId);\r\n      } else {\r\n        this.expr.addExpressionText('');\r\n      }\r\n    } else { // åå·¥åå¶ä»æ±æ¥å¯¹è±¡ç±»å\r\n      if (this.reportingLineDataEntity.refEmployeeId && this.reportingLineDataEntity.refEmployeeId.length > 0) {\r\n        this.expr.addExpressionText(this.reportingLineDataEntity.refEmployeeId);\r\n      } else {\r\n        this.expr.addExpressionText('');\r\n      }\r\n    }\r\n    this.expr.buildExpression().then((expressionInfo: string) => {\r\n      if (data === 'sysUser') {\r\n        const user = new PerformerEntity(expressionInfo, '', 'wf.ReportingLineParticipant'); // wf.UserParticipant\r\n        user.tag = 'expression';\r\n        user.performerName = this.variableParticipantName(expressionInfo);\r\n        this.reportingLineDataEntity.refUserId = user.performerId;\r\n        this.reportingLineDataEntity.tag = user.tag;\r\n        this.reportingLineDataEntity.performerName = user.performerName;\r\n        this.users = [this.reportingLineDataEntity];\r\n      } else if (data === 'org') {\r\n        const dept = new PerformerEntity(expressionInfo, '', 'wf.ReportingLineParticipant');\r\n        dept.tag = 'expression';\r\n        this.reportingLineDataEntity.refOrgName = expressionInfo;\r\n        this.reportingLineDataEntity.refOrgId = expressionInfo;\r\n        this.departments = [this.reportingLineDataEntity];\r\n      } else {\r\n        const employee = new PerformerEntity(expressionInfo, '', 'wf.ReportingLineParticipant');\r\n        employee.performerName = expressionInfo;\r\n        employee.tag = 'expression';\r\n        this.reportingLineDataEntity.refEmployeeId = expressionInfo;\r\n        this.reportingLineDataEntity.performerName = employee.performerName;\r\n        this.users = [this.reportingLineDataEntity];\r\n      }\r\n    });\r\n  }\r\n  private variableParticipantName(expr: string): string {\r\n    for (const c of this.designerUIState.participantContext) {\r\n      if (expr.indexOf(c.key) > -1) {\r\n        return c.name;\r\n      }\r\n    }\r\n    for (const c of this.designerUIState.processVariableContext) {\r\n      if (expr.indexOf(c.key) > -1) {\r\n        return c.name;\r\n      }\r\n    }\r\n    return 'ä¸å¡å­æ®µ';\r\n  }\r\n\r\n  defChanged() {\r\n    System.import('/platform/runtime/wf/web/wf-reporting-data/reportingLineDefHelp.js?v=20210903').then(() => {\r\n      (window as any).gspWfReportingLineDef.ReportingLineDefHelpUtil.getReportingLineHelp().then(data => {\r\n        this.defSelected(data);\r\n      });\r\n    });\r\n  }\r\n\r\n  defSelected(data) {\r\n    this.defName = data.name;\r\n    this.reportingLineDataEntity.reportingLineDefId = data.id;\r\n    this.reportingLineDataEntity.reportingLineDefName = data.name;\r\n\r\n    this.reportingLineDimension = JSON.parse(data.dimensions);\r\n    this.designerUIState.dimensions = [\r\n      { value: 'higherSuperior', text: 'é´æ¥ä¸çº§' }\r\n    ];\r\n    // å¼å®¹åå²æ°æ®\r\n    if (this.reportingLineDimension[0].code !== 'directSuperior') {\r\n      const di = {\r\n        value: 'directSuperior',\r\n        text: 'ç´æ¥ä¸çº§'\r\n      }\r\n      this.designerUIState.dimensions.push(di);\r\n    }\r\n    for (const dimension of this.reportingLineDimension) {\r\n      const di = {\r\n        value: dimension.code,\r\n        text: dimension.name\r\n      };\r\n      this.designerUIState.dimensions.push(di);\r\n    }\r\n    // å®ä¹åæ¢åï¼é»è®¤æ¯åç§ç»ç»\r\n    this.curReportingRefer = this.reportingReferObjects[0].value;\r\n    return of(true);\r\n  }\r\n\r\n  getPerformers() {\r\n    this.reportingLineDataEntity.type = 'wf.ReportingLineParticipant';\r\n    this.reportingLineDataEntity.reportingReferObject = this.curReportingRefer;\r\n    return this.reportingLineDataEntity;\r\n  }\r\n}\r\n","import { MatrixFieldInfoEntity } from \"./matrix-field-info.entity\";\r\n\r\nexport class MatrixDefInfoEntity {\r\n  id: string;\r\n  code: string;\r\n  name: string;\r\n  conditionField: MatrixFieldInfoEntity[];\r\n  dataField: MatrixFieldInfoEntity[];\r\n}\r\n","import { PerformerEntity } from \"../../../entities/performer.entity\";\r\n\r\nexport class MatrixDataInfoEntity extends PerformerEntity {\r\n\r\n  constructor(id?: string, name?: string, type?: string) {\r\n    super(id,name,type);\r\n  }\r\n\r\n  id: string; // ç¨äºåç«¯åå¯ä¸æ è¯\r\n  matrixDefId: string; // ç¨äºå­å¨å­æ®µid\r\n  matrixDefName: string;\r\n  conditionField1: string;\r\n  conditionFieldText1: string;\r\n  conditionField2: string;\r\n  conditionFieldText2: string;\r\n  conditionField3: string;\r\n  conditionFieldText3: string;\r\n  dataFieldAlias: string;\r\n  condition: string;\r\n}\r\n","import { Component, OnInit, HostBinding, ViewChild, TemplateRef, Injector } from '@angular/core';\r\nimport { DatagridComponent } from '@farris/ui-datagrid';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { MessagerService } from '@farris/ui-messager';\r\n\r\n@Component({\r\n  selector: 'app-enum-list',\r\n  templateUrl: './enum-list.component.html',\r\n  styleUrls: ['./enum-list.component.scss']\r\n})\r\nexport class EnumListComponent implements OnInit {\r\n\r\n  @HostBinding('class')\r\n  cls = 'farris-main-area flex-column';\r\n\r\n  columns = [\r\n    { field: 'key', width: 100, title: 'é®' },\r\n    { field: 'value', width: 100, title: 'å¼'}];\r\n  @ViewChild('dg') dg: DatagridComponent;\r\n  @ViewChild('buttons') btnRef: TemplateRef<any>;\r\n\r\n  confirm = new Subject<any>();\r\n  closeModalEmitter = new Subject<any>();\r\n\r\n  /**\r\n   * æ¾ç¤ºå¼\r\n   */\r\n  data = new Array();\r\n\r\n  selectedIds = new Array();\r\n\r\n  constructor(\r\n    private messageService: MessagerService,\r\n    private injector: Injector\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  /**\r\n   * å è½½æ¾ç¤ºæ°æ®\r\n   */\r\n  load(enumValues) {\r\n    this.data = [...enumValues];\r\n  }\r\n\r\n  /**\r\n   * ç¡®è®¤\r\n   */\r\n  onConfirm(): void {\r\n    if (this.selectedIds.length === 0 ) {\r\n      this.messageService.warning('å°æªéä¸­æä¸¾å¼');\r\n    }\r\n    const enumValues = this.data.filter(d => this.selectedIds.findIndex(id => id === d.key) > -1);\r\n    this.confirm.next(enumValues);\r\n    this.closeModalEmitter.next();\r\n  }\r\n\r\n  /**\r\n   * åæ¶\r\n   */\r\n  cancel(): void {\r\n    this.closeModalEmitter.next();\r\n  }\r\n\r\n}\r\n","import { Component, ComponentFactoryResolver, HostBinding, Injector, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { MatrixDefInfoEntity } from './entitis/matrix-def-info.entity';\r\nimport { MatrixDataInfoEntity } from './entitis/matrix-data-info.entity';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { Observable, of } from 'rxjs';\r\nimport { ExprEditMode, ExpressionService, InjectedType } from '@gsp-svc/expression';\r\nimport { ProcessDesignerUIState } from '../../../../app/process-designer.uistate';\r\nimport { LookupGridComponent, PickedResult, ServerSideToken } from '@farris/ui-lookup';\r\nimport { BsModalService } from '@farris/ui-modal';\r\nimport { EnumListComponent } from './enum-list/enum-list.component';\r\nimport { MatrixFieldInfoEntity } from './entitis/matrix-field-info.entity';\r\nimport { LookupDataService } from '@farris/lookup-config';\r\nimport { PerformerEntity } from '../../entities/performer.entity';\r\n\r\n@Component({\r\n  selector: 'app-matrix-performer',\r\n  templateUrl: './matrix-performer.component.html',\r\n  styleUrls: ['./matrix-performer.component.scss'],\r\n  providers: [\r\n    { provide: ServerSideToken, useClass: LookupDataService }\r\n  ]\r\n})\r\nexport class MatrixPerformerComponent implements OnInit {\r\n  @HostBinding('class')\r\n  cls = 'd-flex flex-fill h-100';\r\n  display: string = 'none';\r\n  typeReadOnly = false;\r\n  items: MatrixDefInfoEntity[] = [];\r\n  pageIndex = 1;\r\n  pageSize = 20;\r\n  pageList = [10, 20, 30, 50, 100];\r\n  total = 0;\r\n  groupIcon2 = '<i class=\"f-icon f-icon-lookup\"></i>';\r\n\r\n  // å¸®å©ç¸å³\r\n  index: number;\r\n  fieldId = '';\r\n  value: any;\r\n  helpId;\r\n  /**\r\n   * ç©éµå®ä¹æ¾ç¤ºå\r\n   */\r\n  columns = [\r\n    { title: 'ç¼å·', field: 'code', width: 100 },\r\n    { title: 'åç§°', field: 'name', width: 100 }\r\n  ];\r\n  users: PerformerEntity[] = [];\r\n\r\n  dataFieldAndValues = []; // { text: 'é¨é¨', value: 'department' },\r\n  curDataFieldValue = '';\r\n\r\n  matrixDefEntityList: MatrixDefInfoEntity[] = [];\r\n  curMatrixDefEntity: MatrixDefInfoEntity = new MatrixDefInfoEntity();\r\n  curMatrixDataEntity: MatrixDataInfoEntity = new MatrixDataInfoEntity();\r\n\r\n  conditionFields: MatrixFieldInfoEntity[] = [];\r\n  exprGroup = [\r\n    { name: 'å¸®å©', value: 'help' }\r\n  ];\r\n  /**\r\n   * æ¡ä»¶å­æ®µæ¯å¦å¯ç¨è¡¨è¾¾å¼\r\n   */\r\n  condition1: string;\r\n  condition1ExprAble = true;\r\n  condition2: string;\r\n  condition2ExprAble = true;\r\n  condition3: string;\r\n  condition3ExprAble = true;\r\n  /**\r\n   * ç¼è¾å¨é¡µé¢æ¾ç¤ºæå­ï¼é²èæµæ·è´é®é¢ï¼å¯¹äºæ¡ä»¶å­æ®µçå¼åæ¾ç¤ºæå­é½ä¸è¦å¨å½åå®ä½ä¸­è¿è¡ä¿®æ¹åªæç¹å»ç¡®å®æ¶ï¼æå°å¶ä¿å­è³å½åå®ä½å¹¶è¿åï¼\r\n   */\r\n  condition1Text = '';\r\n  condition1Value = '';\r\n  condition2Text = '';\r\n  condition2Value = '';\r\n  condition3Text = '';\r\n  condition3Value = '';\r\n\r\n  @Input()\r\n  set setMatrixDataEntity(dataEntity: MatrixDataInfoEntity) {\r\n    this.curMatrixDataEntity = dataEntity;\r\n    const url = '/api/runtime/wf/v1.0/matrixDefinition/' + dataEntity.matrixDefId;\r\n    this.http.get(url).subscribe((re: any) => {\r\n      this.curMatrixDefEntity = re;\r\n      this.setFields();\r\n      this.curDataFieldValue = dataEntity.dataFieldAlias;\r\n    })\r\n    if (dataEntity.matrixDefId) {\r\n      this.typeReadOnly = true;\r\n    }\r\n\r\n    if (!this.curMatrixDataEntity.conditionField1) {\r\n      this.condition1 = 'expr';\r\n      this.condition1ExprAble = true;\r\n    } else if (this.curMatrixDataEntity.conditionField1.charAt(0) === '{') {\r\n      this.condition1 = 'expr';\r\n      this.condition1ExprAble = true;\r\n    } else {\r\n      this.condition1 = 'help';\r\n      this.condition1ExprAble = false;\r\n    }\r\n\r\n    if (!this.curMatrixDataEntity.conditionField2) {\r\n      this.condition2 = 'expr';\r\n      this.condition2ExprAble = true;\r\n    } else if (this.curMatrixDataEntity.conditionField2.charAt(0) === '{') {\r\n      this.condition2 = 'expr';\r\n      this.condition2ExprAble = true;\r\n    } else {\r\n      this.condition2 = 'help';\r\n      this.condition2ExprAble = false;\r\n    }\r\n\r\n    if (!this.curMatrixDataEntity.conditionField3) {\r\n      this.condition3 = 'expr';\r\n      this.condition3ExprAble = true;\r\n    } else if (this.curMatrixDataEntity.conditionField3.charAt(0) === '{') {\r\n      this.condition3 = 'expr';\r\n      this.condition3ExprAble = true;\r\n    } else {\r\n      this.condition3 = 'help';\r\n      this.condition3ExprAble = false;\r\n    }\r\n\r\n    this.condition1Text = this.curMatrixDataEntity.conditionFieldText1 ? this.curMatrixDataEntity.conditionFieldText1 : '';\r\n    this.condition1Value = this.curMatrixDataEntity.conditionField1 ? this.curMatrixDataEntity.conditionField1 : '';\r\n    this.condition2Text = this.curMatrixDataEntity.conditionFieldText2 ? this.curMatrixDataEntity.conditionFieldText2 : '';\r\n    this.condition2Value = this.curMatrixDataEntity.conditionField2 ? this.curMatrixDataEntity.conditionField2 : '';\r\n    this.condition3Text = this.curMatrixDataEntity.conditionFieldText3 ? this.curMatrixDataEntity.conditionFieldText3 : '';\r\n    this.condition3Value = this.curMatrixDataEntity.conditionField3 ? this.curMatrixDataEntity.conditionField3 : '';\r\n  }\r\n\r\n\r\n  @ViewChild('lookup') public lookUp: LookupGridComponent;\r\n\r\n  constructor(\r\n    private http: HttpService,\r\n    public designerUIState: ProcessDesignerUIState,\r\n    private expr: ExpressionService,\r\n    private modalService: BsModalService,\r\n    private resolver: ComponentFactoryResolver,\r\n    private injector: Injector,\r\n  ) {\r\n    this.getMatrixLineType();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  /**\r\n   * è·åç©éµå®ä¹\r\n   */\r\n  getMatrixLineType() {\r\n    const url = '/api/runtime/wf/v1.0/matrixDefinition';\r\n    this.http.get(url).subscribe((re: any) => {\r\n      this.matrixDefEntityList = re;\r\n      this.items = this.matrixDefEntityList.slice(0, this.pageSize);\r\n      this.total = this.matrixDefEntityList.length;\r\n    });\r\n  }\r\n\r\n  private setFields() {\r\n    this.conditionFields = [];\r\n    this.dataFieldAndValues = [];\r\n    // åå¯¹æ¡ä»¶å­æ®µæç§æåºå·è¿è¡æåº\r\n    this.curMatrixDefEntity.conditionField.sort((a, b) => {\r\n      return a.sortOrder - b.sortOrder;\r\n    });\r\n    // å°æåºåçæ¡ä»¶æ¾å¥æ¡ä»¶å­æ®µæ°ç»ä¸­\r\n    for (const condition of this.curMatrixDefEntity.conditionField) {\r\n      this.conditionFields.push(condition);\r\n    }\r\n    // åå¯¹æ°æ®å­æ®µæç§æåºå·è¿è¡æåº\r\n    this.curMatrixDefEntity.dataField.sort((a, b) => {\r\n      return a.sortOrder - b.sortOrder;\r\n    });\r\n    // å¡«åæ°æ®å­æ®µçä¸æåè¡¨\r\n    for (const data of this.curMatrixDefEntity.dataField) {\r\n      const temp = {\r\n        text: data.alias,\r\n        value: data.alias\r\n      };\r\n      this.dataFieldAndValues.push(temp);\r\n    }\r\n  }\r\n\r\n  dictPicked = (rowData) => { // éå®ç©éµå®ä¹åæ§è¡\r\n    // åå°å½åç»å®çæ°æ®æ¸ç©º\r\n    this.curMatrixDataEntity = new MatrixDataInfoEntity();\r\n    this.curDataFieldValue = '';\r\n    this.curMatrixDefEntity = rowData;\r\n    this.curMatrixDataEntity.matrixDefId = rowData.id;\r\n    this.curMatrixDataEntity.matrixDefName = rowData.name;\r\n    this.setFields();\r\n    return of(true);\r\n  }\r\n\r\n  onClear() {\r\n    this.curMatrixDataEntity = new MatrixDataInfoEntity();\r\n  }\r\n\r\n  /**\r\n   * ç¼è¾æ¡ä»¶\r\n   */\r\n  editCondition() {\r\n    if (this.designerUIState.schemas.length > 0) {\r\n      for (const schema of this.designerUIState.schemas) {\r\n        this.expr.addSchema('Schema', schema);\r\n      }\r\n      if (this.designerUIState.schemas[0].entityTypes && this.designerUIState.schemas[0].entityTypes.length > 0) {\r\n        const entityType = this.designerUIState.schemas[0].entityTypes[0];\r\n        this.expr.addInjectedEntity(entityType.name, 'Schema',\r\n          entityType.name, InjectedType.EntityType);\r\n      }\r\n    }\r\n    const context = new Array();\r\n    if (this.designerUIState.procInstContext.length > 0) {\r\n      for (const variable of this.designerUIState.procInstContext) {\r\n        context.push(variable);\r\n      }\r\n    }\r\n    if (this.designerUIState.formalParameterContext.length > 0) {\r\n      for (const variable of this.designerUIState.formalParameterContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (this.designerUIState.participantContext.length > 0) {\r\n      for (const variable of this.designerUIState.participantContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (this.designerUIState.processVariableContext.length > 0) {\r\n      for (const variable of this.designerUIState.processVariableContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (context.length > 0) {\r\n      for (const v of context) {\r\n        this.expr.addContext(v);\r\n      }\r\n    }\r\n    this.expr.setEditPattern(ExprEditMode.Conditional); // è¡¨è¾¾å¼å±ç°æ¨¡å¼ï¼é»è®¤ç®æç\r\n    this.expr.addExpressionText(this.curMatrixDataEntity.condition); // this.reportingLineDataEntity.condition\r\n    this.expr.buildExpression().then((expressioninfo: string) => {\r\n      this.curMatrixDataEntity.condition = expressioninfo;\r\n    });\r\n  }\r\n\r\n  onHelpSearch(data, index, id) { // æå¼å¸®å©\r\n    this.index = index;\r\n    this.fieldId = id;\r\n    this.helpId = this.curMatrixDefEntity.conditionField[this.index].smartHelp;\r\n    this.lookUp.onClear();\r\n    this.lookUp.showDialog();\r\n  }\r\n\r\n  openEnumValue(index, id) {\r\n    this.index = index;\r\n    this.fieldId = id;\r\n    this.showEnumList(JSON.parse(this.curMatrixDefEntity.conditionField[this.index].enumList));\r\n  }\r\n\r\n  private showEnumList(enumList: any[]) {\r\n    const compFactory = this.resolver.resolveComponentFactory(EnumListComponent);\r\n    const compRef = compFactory.create(this.injector);\r\n    const modalConfig = {\r\n      title: 'æä¸¾éæ©',\r\n      width: 650,\r\n      height: 450,\r\n      showButtons: true,\r\n      buttons: compRef.instance.btnRef,\r\n    };\r\n    if (enumList && enumList.length > 0) {\r\n      compRef.instance.load(enumList);\r\n    }\r\n    compRef.instance.confirm.subscribe((re: any[]) => { // ç¹å»ç¡®å®\r\n      if (this.index === 0) {\r\n        this.condition1Text = re[0].value;\r\n        this.condition1Value = re[0].value;\r\n      } else if (this.index === 1) {\r\n        this.condition2Text = re[0].value;\r\n        this.condition2Value = re[0].value;\r\n      } else if (this.index === 2) {\r\n        this.condition3Text = re[0].value;\r\n        this.condition3Value = re[0].value;\r\n      }\r\n    });\r\n    const dialog = this.modalService.show(compRef, modalConfig);\r\n    compRef.instance.closeModalEmitter.subscribe(() => {\r\n      dialog.close();\r\n    });\r\n  }\r\n\r\n  dataFieldChange(data) {\r\n    this.curMatrixDataEntity.dataFieldAlias = data.data.value;\r\n  }\r\n\r\n  selectedDataHandler(data) {\r\n    if (this.index === 0) {\r\n      this.condition1Text = data.name;\r\n      this.condition1Value = data.id;\r\n    } else if (this.index === 1) {\r\n      this.condition2Text = data.name;\r\n      this.condition2Value = data.id;\r\n    } else if (this.index === 2) {\r\n      this.condition3Text = data.name;\r\n      this.condition3Value = data.id;\r\n    }\r\n  }\r\n\r\n  getPerformers() {\r\n    this.curMatrixDataEntity.type = 'wf.MatrixParticipant';\r\n    this.curMatrixDataEntity.conditionFieldText1 = this.condition1Text;\r\n    this.curMatrixDataEntity.conditionField1 = this.condition1Text === '' ? '' : this.condition1Value;\r\n    this.curMatrixDataEntity.conditionFieldText2 = this.condition2Text;\r\n    this.curMatrixDataEntity.conditionField2 = this.condition2Text === '' ? '' : this.condition2Value;\r\n    this.curMatrixDataEntity.conditionFieldText3 = this.condition3Text;\r\n    this.curMatrixDataEntity.conditionField3 = this.condition3Text === '' ? '' : this.condition3Value;\r\n    return this.curMatrixDataEntity;\r\n  }\r\n\r\n  dictHelpPicked = (data: any): Observable<PickedResult> => {\r\n    this.value = null;\r\n    return of({ closeDialog: true });\r\n  }\r\n\r\n  /**\r\n   * æå¼è¡¨è¾¾å¼ç¼è¾å¨\r\n   * @param data ç¼è¾ç¬¬å ä¸ªæ¡ä»¶å­æ®µï¼å¼ä¸ºï¼condition1ï¼condition2ï¼condition3ï¼\r\n   */\r\n  showExprHelp(data: string) {\r\n    if (this.designerUIState.schemas.length > 0) {\r\n      for (const schema of this.designerUIState.schemas) {\r\n        // this.expr.addCommonObject(co);\r\n        this.expr.addSchema('Schema', schema);\r\n      }\r\n      if (this.designerUIState.schemas[0].entityTypes && this.designerUIState.schemas[0].entityTypes.length > 0) {\r\n        const entityType = this.designerUIState.schemas[0].entityTypes[0];\r\n        this.expr.addInjectedEntity(entityType.name, 'Schema',\r\n          entityType.name, InjectedType.EntityType);\r\n      }\r\n    }\r\n    const context = new Array();\r\n    if (this.designerUIState.participantContext.length > 0) {\r\n      for (const variable of this.designerUIState.participantContext) {\r\n        context.push(variable);\r\n        // this.expr.addContext(variable);\r\n      }\r\n    }\r\n    if (this.designerUIState.processVariableContext.length > 0) {\r\n      for (const variable of this.designerUIState.processVariableContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n        // this.expr.addContext(variable);\r\n      }\r\n    }\r\n    if (context.length > 0) {\r\n      for (const v of context) {\r\n        this.expr.addContext(v);\r\n      }\r\n    }\r\n    if (data === 'condition1') {\r\n      if (this.curMatrixDataEntity.conditionField1) {\r\n        this.expr.addExpressionText(this.curMatrixDataEntity.conditionField1);\r\n      } else {\r\n        this.expr.addExpressionText('');\r\n      }\r\n    } else if (data === 'condition2') {\r\n      if (this.curMatrixDataEntity.conditionField2) {\r\n        this.expr.addExpressionText(this.curMatrixDataEntity.conditionField2);\r\n      } else {\r\n        this.expr.addExpressionText('');\r\n      }\r\n    } else if (data === 'condition3') {\r\n      if (this.curMatrixDataEntity.conditionField3) {\r\n        this.expr.addExpressionText(this.curMatrixDataEntity.conditionField3);\r\n      } else {\r\n        this.expr.addExpressionText('');\r\n      }\r\n    }\r\n    this.expr.buildExpression().then((expressionInfo: string) => {\r\n      if (data === 'condition1') {\r\n        this.condition1Text = expressionInfo;\r\n        this.condition1Value = expressionInfo;\r\n      } else if (data === 'condition2') {\r\n        this.condition2Text = expressionInfo;\r\n        this.condition2Value = expressionInfo;\r\n      } else {\r\n        this.condition3Text = expressionInfo;\r\n        this.condition3Value = expressionInfo;\r\n      }\r\n    });\r\n  }\r\n  condition1Expr(data) {\r\n    this.showExprHelp(data);\r\n  }\r\n  condition1ExprClick() {\r\n    this.condition1ExprAble = !this.condition1ExprAble;\r\n    this.condition1Text = '';\r\n    this.condition1Value = '';\r\n  }\r\n  condition2Expr(data) {\r\n    this.showExprHelp(data);\r\n  }\r\n  condition2ExprClick() {\r\n    this.condition2ExprAble = !this.condition2ExprAble;\r\n    this.condition2Text = '';\r\n    this.condition2Value = '';\r\n  }\r\n  condition3Expr(data) {\r\n    this.showExprHelp(data);\r\n  }\r\n  condition3ExprClick() {\r\n    this.condition3ExprAble = !this.condition3ExprAble;\r\n    this.condition3Text = '';\r\n    this.condition3Value = '';\r\n  }\r\n}\r\n","import {Component, OnInit, HostBinding, ViewChild, Input, AfterViewInit} from '@angular/core';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { UserPerformerComponent } from '../user-performer/user-performer.component';\r\nimport { PositionPerformerComponent } from '../position-performer/position-performer.component';\r\nimport { ComponentPerformerComponent } from '../component-performer/component-performer.component';\r\nimport { BizComponentEntity } from '../../../../domain/entities/biz-component.entity';\r\nimport { ReportingLineComponent } from '../reporting-line/reporting-line.component';\r\nimport { MatrixPerformerComponent } from '../matrix-performer/matrix-performer.component';\r\nimport {HttpService} from \"@ecp-caf/caf-common\";\r\n\r\n@Component({\r\n  selector: 'app-performer-edit',\r\n  templateUrl: './performer-edit.component.html',\r\n  styleUrls: ['./performer-edit.component.scss']\r\n})\r\nexport class PerformerEditComponent implements OnInit, AfterViewInit {\r\n  @HostBinding('class')\r\n  cls = 'farris-main-area flex-column';\r\n  component: BizComponentEntity;\r\n  performer: { type: string, value: any };\r\n\r\n  tab = 'user';\r\n  @Input() display = true;\r\n\r\n  @ViewChild(UserPerformerComponent) usersCmp: UserPerformerComponent;\r\n  @ViewChild(PositionPerformerComponent) posiCmp: PositionPerformerComponent;\r\n  @ViewChild(ComponentPerformerComponent) cmpCmp: ComponentPerformerComponent;\r\n  @ViewChild(ReportingLineComponent) reportingLineCmp: ReportingLineComponent;\r\n  @ViewChild(MatrixPerformerComponent) matrixCmp: MatrixPerformerComponent;\r\n\r\n\r\n\r\n  constructor(private http?: HttpService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.performer) {\r\n      switch (this.performer.type) {\r\n        case 'wf.UserParticipant':\r\n          this.tab = 'user';\r\n          this.usersCmp.users = [];\r\n          this.usersCmp.users.push(this.performer.value);\r\n          // èèå°å¼å®¹åå²æ°æ®ï¼ææ¶ä¸ä½¿ç¨ç¨æ·åä¸èå®ä½ç±»ä¸­çuserTypeå±æ§\r\n          if(this.performer.value.performerId && this.performer.value.performerId.charAt(0) === '{'){\r\n            let url = '/api/runtime/wf/v1.0/reportingOrgType/hasAdminOrg';\r\n            this.http.get(url).subscribe((data: any) => {\r\n              this.usersCmp.userTypeButtonNeedShow = data;\r\n              this.usersCmp.userType = 'variable';\r\n              this.usersCmp.curOrgType = this.performer.value.orgType === 'Sys' ? 'Sys' : 'Administrative_organization';\r\n              this.usersCmp.condition = this.performer.value.condition;\r\n              // æ ¹æ®è¡¨è¾¾å¼ä¸­çå½æ°åå¤æ­æ¯å¦ä½¿ç¨çæ¯ä¸ä¸æåé\r\n              const isContextVariable = this.performer.value.performerId.indexOf(\"GetContextParameter\") >= 0;\r\n              this.usersCmp.variableOrgTypes = isContextVariable ? [\r\n                { name: 'ç³»ç»ç¨æ·', value: 'Sys' }\r\n                ] : [\r\n                { name: 'ç³»ç»ç¨æ·', value: 'Sys' },\r\n                { name: 'è¡æ¿äººå', value: 'Administrative_organization' }\r\n              ];\r\n            })\r\n          }else{\r\n            this.usersCmp.userType = 'user';\r\n            this.usersCmp.condition = this.performer.value.condition;\r\n          }\r\n          break;\r\n        case 'wf.PositionParticipant':\r\n          this.tab = 'position';\r\n          this.posiCmp.position = Object.assign({}, this.performer.value);\r\n          if (this.posiCmp.position.positionType === '0') {\r\n            this.posiCmp.filter = { positionType: 0 };\r\n          } else {\r\n            this.posiCmp.filter = { positionType: 1 };\r\n          }\r\n          break;\r\n        case 'wf.ReportingLineParticipant':\r\n          this.tab = 'report';\r\n          this.reportingLineCmp.setReportingLineDataEntity = this.performer.value;\r\n          break;\r\n        case 'wf.ComponentParticipant':\r\n          this.tab = 'component';\r\n          this.cmpCmp.component = this.performer.value;\r\n          break;\r\n        case 'wf.MatrixParticipant':\r\n          this.tab = 'matrix';\r\n          this.cmpCmp.component = this.performer.value;\r\n          this.matrixCmp.setMatrixDataEntity = this.performer.value;\r\n      }\r\n    }\r\n  }\r\n  getPerformers() {\r\n    const users = this.usersCmp.getPerformers();\r\n    const position = this.posiCmp.getPerformers();\r\n    const component = this.cmpCmp.getPerformers();\r\n    const reportingLine = this.reportingLineCmp.getPerformers();\r\n    const matrix = this.matrixCmp.getPerformers();\r\n\r\n    // let performers = [];\r\n    let positionPerformers = []; // åªåå«å²ä½åä¸è\r\n    let userPerformers = []; // ç¨æ·åä¸è\r\n\r\n    if (users && users.length > 0) {\r\n      userPerformers = userPerformers.concat(users);\r\n    }\r\n    if (position && position.performerId) {\r\n      positionPerformers.push(position);\r\n    }\r\n    return { userPerformers, positionPerformers, component, reportingLine, matrix};\r\n  }\r\n}\r\n","import { Component, OnInit, HostBinding, Input, NgZone, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { PerformerOptions } from '../../entities/performer-options';\r\nimport { ProcessDesignerUIState } from '../../../../app/process-designer.uistate';\r\nimport { ExpressionService, InjectedType } from '@gsp-svc/expression';\r\nimport { MessagerService } from '@farris/ui-messager';\r\n\r\n@Component({\r\n  selector: 'app-performer-options',\r\n  templateUrl: './performer-options.component.html',\r\n  styleUrls: ['./performer-options.component.scss']\r\n})\r\nexport class PerformerOptionsComponent implements OnInit, AfterViewInit {\r\n  @HostBinding('class')\r\n  cls = 'farris-main-area flex-column';\r\n\r\n  @Input()\r\n  set options(options: PerformerOptions) {\r\n    if (options) {\r\n      this.exclusionPerformers = options.ExclusionPerformers;\r\n      this.noPerformerStrategy = options.NoPerformerStrategy;\r\n      this.historicFirst = options.HistoricFirst;\r\n      this.automaticPerformers = options.automaticPerformers;\r\n    }\r\n  }\r\n\r\n  @Input()\r\n  set exclusionPerformers(e: string | Array<string>) {\r\n    if (e) {\r\n      if (typeof e === 'string') {\r\n        this.excludeProcInstCreator = e.indexOf('procInstCreator') > -1;\r\n        this.excludePreActExecutors = e.indexOf('preActExecutors') > -1;\r\n      } else {\r\n        this.excludeProcInstCreator = e.findIndex(i => i === 'procInstCreator') > -1;\r\n        this.excludePreActExecutors = e.findIndex(i => i === 'preActExecutors') > -1;\r\n        this.excludeAllPassExecutors = e.findIndex(i => i === 'allPassExecutors') > -1;\r\n\r\n        this.excludeExprPerformer = e.find(i => i.indexOf('expr') > -1);\r\n      }\r\n    }\r\n  }\r\n\r\n  set automaticPerformers(e: Array<string>) {\r\n    if (e && e.length > 0) {\r\n      this.autoProcInstCreator = e.findIndex(i => i === 'procInstCreator') > -1;\r\n      this.autoPreActExecutors = e.findIndex(i => i === 'preActExecutors') > -1;\r\n      this.autoAllPassExecutors = e.findIndex(i => i === 'allPassExecutors') > -1;\r\n    }\r\n\r\n  }\r\n\r\n  @ViewChild('inputGroup') inputGroup: ElementRef;\r\n  showClearButton = false;\r\n\r\n  historicFirst = false;\r\n\r\n  excludeExprPerformer: string;\r\n\r\n\r\n  excludeProcInstCreator = false;\r\n  excludePreActExecutors = false;\r\n  excludeAllPassExecutors = false;\r\n\r\n  autoProcInstCreator = false;\r\n  autoPreActExecutors = false;\r\n  autoAllPassExecutors = false;\r\n\r\n  noPerformerStrategyList = [\r\n    { text: 'åä¸æµè½¬', value: 'leave' },\r\n    { text: 'å¼å¸¸æç¤º', value: 'throwException' }];\r\n\r\n  exclusionPerformersOptions = [\r\n    { value: 'procInstCreator', name: 'æµç¨åèµ·äºº' },\r\n    { value: 'preActExecutors', name: 'ä¸ä¸èç¹åçäºº' },\r\n    { value: 'allPassExecutors', name: 'ææå·²åçäººå' }\r\n  ];\r\n\r\n  noPerformerStrategy: string = this.noPerformerStrategyList[0].value;\r\n\r\n  constructor(\r\n    private ngZone: NgZone,\r\n    private designerState: ProcessDesignerUIState,\r\n    private expr: ExpressionService,\r\n    private message: MessagerService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      this.inputGroup.nativeElement.addEventListener(\r\n        'mouseenter',\r\n        this.onMouseEnter.bind(this)\r\n      );\r\n      this.inputGroup.nativeElement.addEventListener(\r\n        'mouseleave',\r\n        this.onMouseLeave.bind(this)\r\n      );\r\n    });\r\n  }\r\n\r\n  onMouseEnter(event) {\r\n    this.showClearButton = true;\r\n    if (this.showClearButton) {\r\n      this.toggleClearIcon(event, true);\r\n    }\r\n  }\r\n  onMouseLeave(event) {\r\n    this.showClearButton = false;\r\n    this.toggleClearIcon(event, false);\r\n  }\r\n  private toggleClearIcon(event: any, isShow = false) {\r\n    const str = isShow ? '' : 'none';\r\n    const clearIcon = event.target.querySelector('.input-group-clear');\r\n    if (clearIcon) {\r\n      clearIcon.style.display = str;\r\n    }\r\n  }\r\n\r\n  excludeProcInstCreatorClick(event: any) {\r\n    // this.excludeProcInstCreator = !this.excludeProcInstCreator;\r\n    if (this.excludeProcInstCreator && this.autoProcInstCreator) {\r\n      this.autoProcInstCreator = false;\r\n    }\r\n  }\r\n\r\n  excludePreActExecutorsClick(event: any) {\r\n    // this.excludePreActExecutors = !this.excludePreActExecutors;\r\n    if (this.autoAllPassExecutors === true && this.excludePreActExecutors === true) {\r\n      this.message.info('ææå·²åçäººåå·²è®¾ç½®èªå¨å®¡æ¹ï¼ä¸ä¸ªèç¹å·²åçäººåé»è®¤ä¸åè®¸æé¤ï¼', () => {\r\n        this.excludePreActExecutors = false;\r\n      });\r\n      return;\r\n    }\r\n    if (this.excludePreActExecutors && this.autoPreActExecutors) {\r\n      this.autoPreActExecutors = false;\r\n    }\r\n  }\r\n\r\n  excludeAllPassExecutorsClick(event: any) {\r\n    // this.excludeAllPassExecutors = !this.excludeAllPassExecutors;\r\n    if (this.excludeAllPassExecutors) {\r\n      if (this.autoPreActExecutors) {\r\n        this.autoPreActExecutors = false;\r\n      }\r\n      if (this.autoAllPassExecutors) {\r\n        this.autoAllPassExecutors = false;\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  autoProcInstCreatorClick(event: any) {\r\n    // if (this.designerState.propertyData.CompleteStrategy !== this.designerState.completeIterator[0].key\r\n    //   && this.autoProcInstCreator === true ) {\r\n    //   this.message.info('ãå®æç­ç¥ãä¸ºãä¼ç­¾ãæ¶ï¼ä¸åè®¸è®¾ç½®èªå¨å®¡æ¹ï¼è¯·äºè§£ï¼', () => {\r\n    //     this.autoProcInstCreator = false;\r\n    //   });\r\n    //   return;\r\n    // }\r\n    if (this.designerState.propertyData.AssignStrategy === this.designerState.assignIterator[2].key\r\n      && this.autoProcInstCreator === true ) {\r\n      this.message.info('ãåéç­ç¥ãä¸ºãé¢ç¨ãæ¶ï¼ä¸åè®¸è®¾ç½®èªå¨å®¡æ¹ï¼è¯·äºè§£ï¼', () => {\r\n        this.autoProcInstCreator = false;\r\n      });\r\n      return;\r\n    }\r\n    // this.autoProcInstCreator = !this.autoProcInstCreator;\r\n    if (this.autoProcInstCreator && this.excludeProcInstCreator) {\r\n      this.excludeProcInstCreator = false;\r\n    }\r\n  }\r\n\r\n  autoPreActExecutorsClick(event: any) {\r\n    // if (this.designerState.propertyData.CompleteStrategy !== this.designerState.completeIterator[0].key\r\n    //   && this.autoPreActExecutors === true) {\r\n    //   this.message.info('ãå®æç­ç¥ãä¸ºãä¼ç­¾ãæ¶ï¼ä¸åè®¸è®¾ç½®èªå¨å®¡æ¹ï¼è¯·äºè§£ï¼', () => {\r\n    //     this.autoPreActExecutors = false;\r\n    //   });\r\n    //   return;\r\n    // }\r\n    if (this.designerState.propertyData.AssignStrategy === this.designerState.assignIterator[2].key\r\n      && this.autoPreActExecutors === true) {\r\n      this.message.info('ãåéç­ç¥ãä¸ºãé¢ç¨ãæ¶ï¼ä¸åè®¸è®¾ç½®èªå¨å®¡æ¹ï¼è¯·äºè§£ï¼', () => {\r\n        this.autoPreActExecutors = false;\r\n      });\r\n      return;\r\n    }\r\n    if (this.excludeAllPassExecutors === true && this.autoPreActExecutors === true) {\r\n      this.message.info('ææå·²åçäººåå·²è®¾ç½®ä¸åè®¸å®¡æ¹ï¼æä»¥ä¸ä¸ªèç¹å·²åçäººåé»è®¤ä¸åè®¸èªå¨å®¡æ¹ï¼', () => {\r\n        this.autoPreActExecutors = false;\r\n      });\r\n      return;\r\n    }\r\n    // this.autoPreActExecutors = !this.autoPreActExecutors;\r\n    if (this.autoPreActExecutors && this.excludePreActExecutors) {\r\n      this.excludePreActExecutors = false;\r\n    }\r\n  }\r\n\r\n  autoAllPassExecutorsClick(event: any) {\r\n    // if (this.designerState.propertyData.CompleteStrategy !== this.designerState.completeIterator[0].key\r\n    //   && this.autoAllPassExecutors === true) {\r\n    //   this.message.info('ãå®æç­ç¥ãä¸ºãä¼ç­¾ãæ¶ï¼ä¸åè®¸è®¾ç½®èªå¨å®¡æ¹ï¼è¯·äºè§£ï¼', () => {\r\n    //     this.autoAllPassExecutors = false;\r\n    //   });\r\n    //   return;\r\n    // }\r\n    if (this.designerState.propertyData.AssignStrategy === this.designerState.assignIterator[2].key\r\n      && this.autoAllPassExecutors === true) {\r\n      this.message.info('ãåéç­ç¥ãä¸ºãé¢ç¨ãæ¶ï¼ä¸åè®¸è®¾ç½®èªå¨å®¡æ¹ï¼è¯·äºè§£ï¼', () => {\r\n        this.autoAllPassExecutors = false;\r\n      });\r\n      return;\r\n    }\r\n    // this.autoAllPassExecutors = !this.autoAllPassExecutors;\r\n    if (this.autoAllPassExecutors) {\r\n      if (this.excludeAllPassExecutors) {\r\n        this.excludeAllPassExecutors = false;\r\n      }\r\n      if (this.excludePreActExecutors) {\r\n        this.excludePreActExecutors = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  getPerformerOptions(): PerformerOptions {\r\n    return {\r\n      ExclusionPerformers: this.getExclusionPerformers(),\r\n      NoPerformerStrategy: this.noPerformerStrategy,\r\n      HistoricFirst: this.historicFirst,\r\n      automaticPerformers: this.getAutoPerformers()\r\n    };\r\n  }\r\n  private getExclusionPerformers(): string[] {\r\n    const exclusionPerf: Array<string> = [];\r\n    if (this.excludeProcInstCreator) {\r\n      exclusionPerf.push('procInstCreator');\r\n    }\r\n    if (this.excludePreActExecutors) {\r\n      exclusionPerf.push('preActExecutors');\r\n    }\r\n    if (this.excludeAllPassExecutors) {\r\n      exclusionPerf.push('allPassExecutors');\r\n    }\r\n    if (this.excludeExprPerformer) {\r\n      exclusionPerf.push(this.excludeExprPerformer);\r\n    }\r\n\r\n    return exclusionPerf;\r\n  }\r\n\r\n  private getAutoPerformers(): Array<string> {\r\n    const autoPerf: Array<string> = new Array();\r\n    if (this.autoProcInstCreator) {\r\n      autoPerf.push('procInstCreator');\r\n    }\r\n    if (this.autoPreActExecutors) {\r\n      autoPerf.push('preActExecutors');\r\n    }\r\n    if (this.autoAllPassExecutors) {\r\n      autoPerf.push('allPassExecutors');\r\n    }\r\n\r\n    return autoPerf;\r\n  }\r\n\r\n  openExprEditor() {\r\n    if (this.designerState.schemas.length > 0) {\r\n      for (const schema of this.designerState.schemas) {\r\n        this.expr.addSchema('Schema', schema);\r\n      }\r\n      if (this.designerState.schemas[0].entityTypes && this.designerState.schemas[0].entityTypes.length > 0) {\r\n        const entityType = this.designerState.schemas[0].entityTypes[0];\r\n        this.expr.addInjectedEntity(entityType.name, 'Schema',\r\n          entityType.name, InjectedType.EntityType);\r\n      }\r\n    }\r\n    const context = new Array();\r\n    if (this.designerState.procInstContext.length > 0) {\r\n      for (const variable of this.designerState.procInstContext) {\r\n        context.push(variable);\r\n        // this.expr.addContext(variable);\r\n      }\r\n    }\r\n    if (this.designerState.formalParameterContext.length > 0) {\r\n      for (const variable of this.designerState.formalParameterContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n        // this.expr.addContext(variable);\r\n      }\r\n    }\r\n    if (this.designerState.participantContext.length > 0) {\r\n      for (const variable of this.designerState.participantContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n        // this.expr.addContext(variable);\r\n      }\r\n    }\r\n    if (this.designerState.processVariableContext.length > 0) {\r\n      for (const variable of this.designerState.processVariableContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n        // this.expr.addContext(variable);\r\n      }\r\n    }\r\n    if (context.length > 0) {\r\n      for (const v of context) {\r\n        this.expr.addContext(v);\r\n      }\r\n    }\r\n    // if (this.excludeExprPerformer) {\r\n    this.expr.addExpressionText(this.excludeExprPerformer);\r\n    // }\r\n    this.expr.buildExpression().then((d: string) => {\r\n      this.excludeExprPerformer = d;\r\n    });\r\n  }\r\n\r\n  clear() {\r\n    this.excludeExprPerformer = '';\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, HostBinding, Output, EventEmitter, Input, ViewChild, TemplateRef, ComponentFactoryResolver, Injector, ComponentRef } from '@angular/core';\r\nimport { TypeConverter } from '@farris/ui-property-panel';\r\nimport { PerformerUIState } from './performer.uistate';\r\nimport { PerformerRepository } from './performer.repository';\r\nimport { PerformerViewModel } from './performer.viewmodel';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { BsModalService, BsModalRef } from '@farris/ui-modal';\r\nimport { PerformerEditComponent } from './views/performer-edit/performer-edit.component';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { PerformerOptionsComponent } from './views/performer-options/performer-options.component';\r\nimport { DialogComponent } from '@farris/ui-dialog';\r\nimport { PerformerEntity } from './entities/performer.entity';\r\nimport { ProcessDesignerUIState } from '../../app/process-designer.uistate';\r\nimport { ExpressionService, InjectedType, ExprEditMode } from '@gsp-svc/expression';\r\nimport { ReportingLineDataEntity } from './views/reporting-line/reporting-line-data.entity';\r\nimport { PerformerInfo } from './entities/performer-info.entity';\r\nimport { DataColumn, DatagridComponent } from '@farris/ui-datagrid';\r\nimport { Observable, of} from 'rxjs';\r\nimport { PositionPerformerEntity } from './entities/position-performer.entity';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { ComponentPerformer } from './views/component-performer/component-performer.entity';\r\nimport {MatrixDataInfoEntity} from './views/matrix-performer/entitis/matrix-data-info.entity';\r\n\r\n@Component({\r\n  selector: 'app-performer',\r\n  templateUrl: './performer.component.html',\r\n  styleUrls: ['./performer.component.scss'],\r\n  providers: [PerformerViewModel, PerformerRepository, PerformerUIState]\r\n})\r\nexport class PerformerComponent implements OnInit {\r\n  @HostBinding('class')\r\n  cls = 'farris-main-area flex-column';\r\n\r\n  display = true; // æ§å¶ç©éµåä¸èæ¯å¦æ¾ç¤º\r\n\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n  @ViewChild('editFooter') editFooter: TemplateRef<any>;\r\n  @ViewChild(PerformerOptionsComponent) options: PerformerOptionsComponent;\r\n  @ViewChild('participantOptions') optionsDialog: DialogComponent;\r\n  @ViewChild(DatagridComponent) grid: DatagridComponent;\r\n\r\n  @Output() closeModal = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n\r\n  @Input()\r\n  set value(partInfo: PerformerInfo) {\r\n    if (partInfo.performers && partInfo.performers.length > 0) {\r\n      this.uistate.performerInfo.performers = partInfo.performers;\r\n      this.uistate.performersList = this.uistate.performersList.concat(partInfo.performers as any[]);\r\n      this.uistate.performersList.map(performer => performer.description = this.performerDescription(performer as any));\r\n    }\r\n    if (partInfo.components && partInfo.components.length > 0) {\r\n      this.uistate.performerInfo.components = partInfo.components;\r\n      partInfo.components.forEach(cmp => {\r\n        this.uistate.performersList.push({\r\n          id: cmp.id,\r\n          type: 'wf.ComponentParticipant',\r\n          performerName: cmp.name,\r\n          description: this.componentDescription(cmp),\r\n          condition: cmp.condition\r\n        });\r\n      });\r\n    }\r\n    if (partInfo.reportingLines && partInfo.reportingLines.length > 0) {\r\n      this.uistate.performerInfo.reportingLines = partInfo.reportingLines;\r\n      partInfo.reportingLines.forEach(r => {\r\n        this.uistate.performersList.push({\r\n          id: r.id,\r\n          type: 'wf.ReportingLineParticipant',\r\n          performerName: r.reportingLineDefName + '-' + r.dimension,\r\n          description: this.reportingLineDescription(r),\r\n          condition: r.condition\r\n        });\r\n      });\r\n    }\r\n    if (partInfo.matrixParticipants && partInfo.matrixParticipants.length > 0) {\r\n      this.uistate.performerInfo.matrixParticipants = partInfo.matrixParticipants;\r\n      partInfo.matrixParticipants.forEach(r => {\r\n        this.uistate.performersList.push({\r\n          id: r.id,\r\n          type: 'wf.MatrixParticipant',\r\n          performerName: r.matrixDefName + '-' + r.dataFieldAlias,\r\n          description: this.matrixDescription(r),\r\n          condition: r.condition\r\n        });\r\n      });\r\n    }\r\n    if (partInfo.options) {\r\n      this.uistate.performerInfo.options = partInfo.options;\r\n    }\r\n  }\r\n\r\n  @Input() editorParams = {};\r\n\r\n  editDialog: BsModalRef;\r\n  compRef: ComponentRef<PerformerEditComponent>;\r\n  isClose = true;\r\n\r\n  modalConfig = {\r\n    title: 'åä¸è',\r\n    width: 800,\r\n    height: 515,\r\n    showButtons: true\r\n  };\r\n  columns = [\r\n    {\r\n      field: 'type', width: 50, title: 'ç±»å',\r\n      formatter: {\r\n        type: 'enum',\r\n        options: { valueField: 'value', textField: 'text', data: this.uistate.typeCollection }\r\n      }\r\n     },\r\n    { field: 'performerName', width: 50, title: 'åç§°' },\r\n    { field: 'description', width: 100, title: 'æè¿°', showTips: true },\r\n    {\r\n      field: 'condition', width: 60, title: 'å¯ç¨æ¡ä»¶', showTips: true,\r\n      editor: {\r\n        type: 'input-group',\r\n        options: {\r\n          groupText: '<i class=\"f-icon f-icon-lookup\"></i>',\r\n          editable: false,\r\n          clickHandle: (e) => {\r\n            e.formControl.setValue(e.instance.value ? e.instance.value : '');\r\n            this.editConditon(e);\r\n          },\r\n          clear: (e) => {\r\n            if (e.rowData.type === 'wf.ComponentParticipant') {\r\n              const i = this.uistate.performerInfo.components.findIndex(item => item.id === e.rowData.id);\r\n              this.uistate.performerInfo.components[i].condition = '';\r\n            } else if (e.rowData.type === 'wf.ReportingLineParticipant') {\r\n              const i = this.uistate.performerInfo.reportingLines.findIndex(item => item.id === e.rowData.id);\r\n              this.uistate.performerInfo.reportingLines[i].condition = '';\r\n            } else if (e.rowData.type === 'wf.MatrixParticipant') {\r\n              const i = this.uistate.performerInfo.matrixParticipants.findIndex(item => item.id === e.rowData.id);\r\n              this.uistate.performerInfo.matrixParticipants[i].condition = '';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  ];\r\n\r\n  curPerformer: any;\r\n  editState = 'new'; // ç¼è¾ç¶æï¼ç¨äºåºåæ¯æ°å¢è¿æ¯ç¼è¾  new | edit\r\n\r\n  constructor(\r\n    public viewModel: PerformerViewModel,\r\n    public uistate: PerformerUIState,\r\n    private formBuilder: FormBuilder,\r\n    private resolver: ComponentFactoryResolver,\r\n    private injector: Injector,\r\n    private modalService: BsModalService,\r\n    private message: MessagerService,\r\n    private designerUIState: ProcessDesignerUIState,\r\n    private expr: ExpressionService,\r\n    private http: HttpService,\r\n  ) {\r\n    this.GetOrganizationType();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getMatrixConfig().subscribe(re => {\r\n      if (re && re.currentValue === 'false') {\r\n        this.display = false;\r\n      }\r\n    });\r\n  }\r\n  add() {\r\n    this.editState = 'new';\r\n    const compFactory = this.resolver.resolveComponentFactory(PerformerEditComponent);\r\n    this.compRef = compFactory.create(this.injector);\r\n    this.compRef.instance.display = this.display;\r\n\r\n    const modalConfig = {\r\n      title: 'åä¸èéæ©',\r\n      width: 800,\r\n      height: 515,\r\n      buttons: this.editFooter,\r\n      showButtons: true\r\n    };\r\n    this.editDialog = this.modalService.show(this.compRef, modalConfig);\r\n  }\r\n  edit() {\r\n    this.editState = 'edit'\r\n    if (this.uistate.curPerformer) {\r\n      const modalConfig = {\r\n        title: 'åä¸èéæ©',\r\n        width: 800,\r\n        height: 515,\r\n        buttons: this.editFooter,\r\n        showButtons: true\r\n      };\r\n      const compFactory = this.resolver.resolveComponentFactory(PerformerEditComponent);\r\n      this.compRef = compFactory.create(this.injector);\r\n      switch (this.uistate.curPerformer.type) {\r\n        case 'wf.PositionParticipant':\r\n          this.compRef.instance.performer = {\r\n            type: 'wf.PositionParticipant',\r\n            value: this.uistate.performerInfo.performers.find(p => p.id === this.uistate.curPerformer.id)\r\n          };\r\n          break;\r\n        case 'wf.UserParticipant':\r\n          this.compRef.instance.performer = {\r\n            type: 'wf.UserParticipant',\r\n            value: this.uistate.performerInfo.performers.find(p => p.id === this.uistate.curPerformer.id)\r\n          }\r\n          break;\r\n        case 'wf.ReportingLineParticipant':\r\n          const reportingLine = this.uistate.performerInfo.reportingLines.find(r => {\r\n            return r.id === this.uistate.curPerformer.id;\r\n          })\r\n          this.compRef.instance.performer = {\r\n            type: 'wf.ReportingLineParticipant',\r\n            value: reportingLine\r\n          };\r\n          const url = '/api/runtime/wf/v1.0/reportingLineDefinitions/' + reportingLine.reportingLineDefId;\r\n          this.http.get(url).subscribe((res: any) => {\r\n            if (!res) {\r\n              this.message.error('è¯¥æ¡æ±æ¥å³ç³»æ°æ®çå®ä¹å·²å é¤ï¼è¯¥æ¡æ°æ®å°å é¤')\r\n              this.remove();\r\n            } else {\r\n              this.editDialog = this.modalService.show(this.compRef, modalConfig);\r\n            }\r\n          });\r\n          break;\r\n        case 'wf.MatrixParticipant':\r\n          const matrix = this.uistate.performerInfo.matrixParticipants.find(r => {\r\n            return r.id === this.uistate.curPerformer.id;\r\n          })\r\n          this.compRef.instance.performer = {\r\n            type: 'wf.MatrixParticipant',\r\n            value: matrix\r\n          };\r\n          const urlMatrix = '/api/runtime/wf/v1.0/matrixDefinition/' + matrix.matrixDefId;\r\n          this.http.get(urlMatrix).subscribe((res: any) => {\r\n            if (!res) {\r\n              this.message.error('è¯¥æ¡ç©éµæ°æ®çå®ä¹å·²å é¤ï¼è¯¥æ¡æ°æ®å°å é¤')\r\n              this.remove();\r\n            } else {\r\n              this.editDialog = this.modalService.show(this.compRef, modalConfig);\r\n            }\r\n          });\r\n          break;\r\n        case 'wf.ComponentParticipant':\r\n          this.compRef.instance.performer = {\r\n            type: 'wf.ComponentParticipant',\r\n            value: this.uistate.performerInfo.components.find(c => {\r\n              return c.id === this.uistate.curPerformer.id;\r\n            })\r\n          };\r\n          break;\r\n      }\r\n      if(this.uistate.curPerformer.type !== 'wf.ReportingLineParticipant' &&\r\n        this.uistate.curPerformer.type !== 'wf.MatrixParticipant'){ // æ±æ¥å³ç³»åç©éµåç¬å¤ç\r\n        this.editDialog = this.modalService.show(this.compRef, modalConfig);\r\n      }\r\n    }\r\n  }\r\n  remove() {\r\n    if (this.grid.selectedRow) {\r\n      this.grid.endCellEdit();\r\n      if (this.grid.selectedRow.data.type === 'wf.ComponentParticipant') {\r\n        const i = this.uistate.performerInfo.components.findIndex(item => item.id === this.grid.selectedRow.data.id);\r\n        this.uistate.performerInfo.components.splice(i, 1);\r\n      } else if (this.grid.selectedRow.data.type === 'wf.ReportingLineParticipant') {\r\n        const i = this.uistate.performerInfo.reportingLines.findIndex(item => item.id === this.grid.selectedRow.data.id);\r\n        this.uistate.performerInfo.reportingLines.splice(i, 1);\r\n      } else if (this.grid.selectedRow.data.type === 'wf.MatrixParticipant') {\r\n        const i = this.uistate.performerInfo.matrixParticipants.findIndex(item => item.id === this.grid.selectedRow.data.id);\r\n        this.uistate.performerInfo.matrixParticipants.splice(i, 1);\r\n      } else {\r\n        const i = this.uistate.performerInfo.performers.findIndex(item => item.id === this.grid.selectedRow.data.id);\r\n        this.uistate.performerInfo.performers.splice(i, 1);\r\n      }\r\n      const index = this.uistate.performersList.findIndex(p => p.id === this.grid.selectedRow.data.id);\r\n      this.uistate.performersList.splice(index, 1);\r\n\r\n      this.grid.loadData(this.uistate.performersList);\r\n    } else {\r\n      this.message.info('è¯·åéä¸­ä¸æ¡åä¸èä¿¡æ¯ï¼');\r\n    }\r\n  }\r\n  clear() {\r\n    this.uistate.performerInfo.performers = [];\r\n    this.uistate.performerInfo.components = [];\r\n    this.uistate.performerInfo.reportingLines = [];\r\n    this.uistate.performerInfo.matrixParticipants = [];\r\n    this.uistate.performersList = [];\r\n    this.grid.loadData(this.uistate.performersList);\r\n  }\r\n  clickOK() {\r\n    this.grid.endCellEdit();\r\n    const object = {\r\n      value: this.uistate.performerInfo, parameters: null\r\n    };\r\n    this.submitModal.emit(object);\r\n  }\r\n  clickCancel() {\r\n    this.closeModal.emit();\r\n  }\r\n  editOK() {\r\n    if (this.compRef) {\r\n      const re = this.compRef.instance.getPerformers();\r\n      if (re.userPerformers && re.userPerformers.length > 0) {\r\n        re.userPerformers.forEach(p => {\r\n          const i = this.uistate.performerInfo.performers.findIndex(a => (a.id === p.id || a.performerId === p.performerId));\r\n          if (i > -1) {\r\n            const id = this.uistate.performerInfo.performers[i].id;\r\n            this.uistate.performerInfo.performers[i] = p;\r\n            const index = this.uistate.performersList.findIndex(a => a.id === id);\r\n            this.uistate.performersList[index] = p;\r\n          } else {\r\n            if (this.editState === 'edit') {\r\n              this.remove();\r\n            }\r\n            this.uistate.performerInfo.performers.push(p);\r\n            this.uistate.performersList = this.uistate.performersList.concat([p]);\r\n          }\r\n        });\r\n        this.uistate.performersList\r\n          .filter(p => p.type === this.uistate.typeCollection[0].value || p.type === this.uistate.typeCollection[1].value )\r\n          .map(performer => performer.description =\r\n            this.performerDescription(performer as any));\r\n      }\r\n      if (re.positionPerformers && re.positionPerformers.length > 0) {\r\n        re.positionPerformers.forEach(p => {\r\n\r\n          // (1)idä¸è´ï¼ä¸ºç¼è¾å²ä½ï¼ï¼2ï¼performidä¸è´ï¼æ°å¢çç¨æ·ï¼å²ä½å·²å­å¨\r\n          const i = this.uistate.performerInfo.performers.findIndex(a => (a.id === p.id || a.performerId === p.performerId));\r\n          if (i > -1) {\r\n            const id = this.uistate.performerInfo.performers[i].id;\r\n            this.uistate.performerInfo.performers[i] = p;\r\n            const index = this.uistate.performersList.findIndex(a => a.id === id);\r\n            this.uistate.performersList[index] = p;\r\n          } else {\r\n            this.uistate.performerInfo.performers.push(p);\r\n            this.uistate.performersList = this.uistate.performersList.concat([p]);\r\n          }\r\n        });\r\n        this.uistate.performersList\r\n          .filter(p => p.type === this.uistate.typeCollection[0].value || p.type === this.uistate.typeCollection[1].value )\r\n          .map(performer => performer.description =\r\n            this.performerDescription(performer as any));\r\n      }\r\n      if (re.component && re.component.metadataId && re.component.methodCode) {\r\n        const i = this.uistate.performerInfo.components.findIndex(a => a.id === re.component.id);\r\n        if (i > -1) {\r\n          this.uistate.performerInfo.components[i] = re.component;\r\n          const index = this.uistate.performersList.findIndex(a => a.id === re.component.id);\r\n          this.uistate.performersList[index] = {\r\n            id: re.component.id,\r\n            type: 'wf.ComponentParticipant',\r\n            performerName: re.component.name,\r\n            description: this.componentDescription(re.component),\r\n            condition: re.component.condition\r\n          };\r\n        } else {\r\n          this.uistate.performerInfo.components.push(re.component);\r\n          this.uistate.performersList.push({\r\n            id: re.component.id,\r\n            type: 'wf.ComponentParticipant',\r\n            performerName: re.component.name,\r\n            description: this.componentDescription(re.component),\r\n            condition: ''\r\n          });\r\n        }\r\n      }\r\n      if (re.reportingLine && re.reportingLine.reportingLineDefId && re.reportingLine.dimension) {\r\n        if(re.reportingLine.reportingReferObject === 'dept' && !re.reportingLine.refOrgId){\r\n          this.isClose = false;\r\n          this.message.info('âé¨é¨âæ±æ¥å³ç³»ç±»åä¸ï¼åç§äººæå¨é¨é¨ä¸è½ä¸ºç©º');\r\n        } else if (re.reportingLine.reportingReferObject !== 'dept' && !re.reportingLine.refUserId && !re.reportingLine.refEmployeeId) { // ç¨æ·åå¶ä»äººåæ±æ¥å¯¹è±¡ç±»åï¼åç§ç¨æ·ååç§åå·¥ä¸è½å¨é¨ä¸ºç©º\r\n          this.isClose = false;\r\n          this.message.info('âç¨æ·âæ±æ¥å³ç³»ç±»åä¸ï¼åç§äººä¸è½ä¸ºç©º');\r\n        } else {\r\n          this.isClose = true;\r\n          this.addReportingLineData(re);\r\n        }\r\n      }\r\n      if (re.matrix && re.matrix.matrixDefId) {\r\n        if(!re.matrix.conditionField1 && !re.matrix.conditionField2 && !re.matrix.conditionField3){\r\n          this.isClose = false;\r\n          this.message.info('æ¡ä»¶å­æ®µè³å°è¦å­å¨ä¸ä¸ª');\r\n        } else if(!re.matrix.dataFieldAlias){\r\n          this.isClose = false;\r\n          this.message.info('æ°æ®å­æ®µä¸è½ä¸ºç©º');\r\n        } else {\r\n          this.isClose = true;\r\n          this.addMatrixData(re);\r\n        }\r\n      }\r\n      this.grid.loadData(this.uistate.performersList);\r\n    }\r\n    if (this.editDialog && this.isClose) {\r\n      this.editDialog.close();\r\n    }\r\n  }\r\n  private addReportingLineData(re: any){\r\n    const i = this.uistate.performerInfo.reportingLines.findIndex(a => a.id === re.reportingLine.id);\r\n    if (i > -1) {\r\n      this.uistate.performerInfo.reportingLines[i] = re.reportingLine;\r\n      const index = this.uistate.performersList.findIndex(a => a.id === re.reportingLine.id);\r\n      this.uistate.performersList[index] = {\r\n        id: re.reportingLine.id,\r\n        type: 'wf.ReportingLineParticipant',\r\n        performerName: re.reportingLine.reportingLineDefName + '-' + re.reportingLine.dimension,\r\n        description: this.reportingLineDescription(re.reportingLine),\r\n        condition: re.reportingLine.condition\r\n      };\r\n    } else {\r\n      for(const reportingLineData of this.uistate.performerInfo.reportingLines){\r\n        if(reportingLineData.reportingLineDefId === re.reportingLine.definitionId &&\r\n          reportingLineData.dimension === re.reportingLine.dimension &&\r\n          reportingLineData.refUserId === re.reportingLine.referUserId &&\r\n          reportingLineData.refEmployeeId === re.reportingLine.refEmployeeId &&\r\n          reportingLineData.refOrgId === re.reportingLine.referDeptId\r\n        ){\r\n          this.message.error('è¯¥æ±æ¥å³ç³»å·²ç»è¿è¡è¿éç½®');\r\n          return;\r\n        }\r\n      }\r\n      this.uistate.performerInfo.reportingLines.push(re.reportingLine);\r\n      this.uistate.performersList.push({\r\n        id: re.reportingLine.id,\r\n        type: 'wf.ReportingLineParticipant',\r\n        performerName: re.reportingLine.reportingLineDefName + '-' + re.reportingLine.dimension,\r\n        description: this.reportingLineDescription(re.reportingLine),\r\n        condition: re.reportingLine.condition\r\n      });\r\n    }\r\n  }\r\n  private addMatrixData(re: any){\r\n    const i = this.uistate.performerInfo.matrixParticipants.findIndex(a => a.id === re.matrix.id);\r\n    if (i > -1) {\r\n      this.uistate.performerInfo.matrixParticipants[i] = re.matrix;\r\n      const index = this.uistate.performersList.findIndex(a => a.id === re.matrix.id);\r\n      this.uistate.performersList[index] = {\r\n        id: re.matrix.id,\r\n        type: 'wf.MatrixParticipant',\r\n        performerName: re.matrix.matrixDefName + '-' + re.matrix.dataFieldAlias,\r\n        description: this.matrixDescription(re.matrix),\r\n        condition: re.matrix.condition\r\n      };\r\n    } else {\r\n      for(const matrixData of this.uistate.performerInfo.matrixParticipants){\r\n        if(matrixData.matrixDefId === re.matrix.matrixDefId &&\r\n          matrixData.conditionField1 === re.matrix.conditionField1 &&\r\n          matrixData.conditionField2 === re.matrix.conditionField2 &&\r\n          matrixData.conditionField3 === re.matrix.conditionField3 &&\r\n          matrixData.dataFieldAlias === re.matrix.dataFieldAlias\r\n        ){\r\n          this.message.error('è¯¥ç©éµå·²ç»è¿è¡è¿éç½®');\r\n          return;\r\n        }\r\n      }\r\n      this.uistate.performerInfo.matrixParticipants.push(re.matrix);\r\n      this.uistate.performersList.push({\r\n        id: re.matrix.id,\r\n        type: 'wf.MatrixParticipant',\r\n        performerName: re.matrix.matrixDefName + '-' + re.matrix.dataFieldAlias,\r\n        description: this.matrixDescription(re.matrix),\r\n        condition: re.matrix.condition\r\n      });\r\n    }\r\n  }\r\n  editCancel() {\r\n    if (this.editDialog) {\r\n      this.editDialog.close();\r\n    }\r\n  }\r\n  participantOptionsSet() {\r\n    this.uistate.performerInfo.options = this.options.getPerformerOptions();\r\n    this.optionsDialog.close();\r\n  }\r\n\r\n  private performerDescription(performer: PerformerEntity) {\r\n    if (performer.type === 'wf.UserParticipant') {\r\n      if (performer.tag === 'expression') {\r\n        return performer.performerId;\r\n      } else {\r\n        if (performer.orgName) {\r\n          return `é¨é¨ï¼${performer.orgName}`;\r\n        } else {\r\n          return '';\r\n        }\r\n      }\r\n    } else if (performer.type === 'wf.PositionParticipant') {\r\n      if ((performer as PositionPerformerEntity).positionType === '1') {\r\n        if (performer.orgId) {\r\n          return `å²ä½ç±»åï¼éç¨å²ä½ï¼é¨é¨ï¼${performer.orgId}`;\r\n        } else {\r\n          return `å²ä½ç±»åï¼éç¨å²ä½`;\r\n        }\r\n      } else if ((performer as PositionPerformerEntity).positionType === '0') {\r\n        return 'å²ä½ç±»åï¼ç»ç»å²ä½';\r\n      }\r\n    }\r\n  }\r\n  private componentDescription(component: ComponentPerformer) {\r\n    let des = `æä»¶ï¼${component.name},åæ°ï¼{`;\r\n    if (component.actualParameters && component.actualParameters.length > 0) {\r\n      component.actualParameters.forEach(p => {\r\n        des += `${p.code}ï¼${p.value}ï¼`;\r\n      });\r\n      des = des.substring(0, des.length - 1);\r\n    }\r\n    des += '}';\r\n    return des;\r\n  }\r\n  private reportingLineDescription(reportingLine: ReportingLineDataEntity) {\r\n    let description = '';\r\n    if(reportingLine.refUserId){\r\n      description += `åç§äººï¼${reportingLine.refUserId}`;\r\n    }\r\n    if(reportingLine.refEmployeeId){\r\n      description += `åç§äººï¼${reportingLine.refEmployeeId}`;\r\n    }\r\n    if(reportingLine.refOrgId){\r\n      if(reportingLine.refUserId){\r\n        description += `ï¼`;\r\n      }\r\n      if(reportingLine.refEmployeeId){\r\n        description += `ï¼`;\r\n      }\r\n      description += `åç§ç»ç»ï¼${reportingLine.refOrgId}`;\r\n    }\r\n    return description;\r\n  }\r\n  private matrixDescription(matrix: MatrixDataInfoEntity) {\r\n    let description = '';\r\n    if(matrix.conditionField1){\r\n      description += `æ¡ä»¶1ï¼${matrix.conditionFieldText1}ï¼`;\r\n    }\r\n    if(matrix.conditionField2){\r\n      description += `æ¡ä»¶2ï¼${matrix.conditionFieldText2}ï¼`;\r\n    }\r\n    if(matrix.conditionField3){\r\n      description += `æ¡ä»¶3ï¼${matrix.conditionFieldText3}ï¼`;\r\n    }\r\n    if(matrix.dataFieldAlias){\r\n      description += `æ°æ®ï¼${matrix.dataFieldAlias}ï¼`;\r\n    }\r\n    return description.slice(0, description.length - 1);\r\n  }\r\n\r\n  editConditon(e: any) {\r\n    if (this.designerUIState.schemas.length > 0) {\r\n      for (const schema of this.designerUIState.schemas) {\r\n        this.expr.addSchema('Schema', schema);\r\n      }\r\n      if (this.designerUIState.schemas[0].entityTypes && this.designerUIState.schemas[0].entityTypes.length > 0) {\r\n        const entityType = this.designerUIState.schemas[0].entityTypes[0];\r\n        this.expr.addInjectedEntity(entityType.name, 'Schema',\r\n          entityType.name, InjectedType.EntityType);\r\n      }\r\n    }\r\n    const context = new Array();\r\n    if (this.designerUIState.procInstContext.length > 0) {\r\n      for (const variable of this.designerUIState.procInstContext) {\r\n        context.push(variable);\r\n      }\r\n    }\r\n    if (this.designerUIState.formalParameterContext.length > 0) {\r\n      for (const variable of this.designerUIState.formalParameterContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (this.designerUIState.participantContext.length > 0) {\r\n      for (const variable of this.designerUIState.participantContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (this.designerUIState.processVariableContext.length > 0) {\r\n      for (const variable of this.designerUIState.processVariableContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (this.designerUIState.activityComponentContext.length > 0) {\r\n      for (const variable of this.designerUIState.activityComponentContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (context.length > 0) {\r\n      for (const v of context) {\r\n        this.expr.addContext(v);\r\n      }\r\n    }\r\n    this.expr.addExpressionText(e.instance.value);\r\n    this.expr.setEditPattern(ExprEditMode.Conditional); // é»è®¤æå¼ç®æè¡¨è¾¾å¼ç¼è¾å¨\r\n    this.expr.buildExpression().then((cond: string) => {\r\n      if (this.grid.selectedRow.data.type === 'wf.ComponentParticipant') {\r\n        this.uistate.performerInfo.components.find(c => c.id === this.grid.selectedRow.data.id).condition = cond;\r\n      } else if (this.grid.selectedRow.data.type === 'wf.ReportingLineParticipant') {\r\n        this.uistate.performerInfo.reportingLines.find(c => c.id === this.grid.selectedRow.data.id).condition = cond;\r\n      } else if (this.grid.selectedRow.data.type === 'wf.MatrixParticipant'){\r\n        this.uistate.performerInfo.matrixParticipants.find(c => c.id === this.grid.selectedRow.data.id).condition = cond;\r\n      } else {\r\n        this.uistate.performerInfo.performers.find(p => p.id === this.grid.selectedRow.data.id).condition = cond;\r\n      }\r\n      e.formControl.setValue(cond);\r\n      e.instance.cd.detectChanges();\r\n    });\r\n  }\r\n\r\n  afterEdit = (rowIndex: number, rowData: any, column?: DataColumn) => {\r\n    return of(true);\r\n  }\r\n\r\n  selectChanged(data: any) {\r\n    this.uistate.curPerformer = data.data;\r\n  }\r\n\r\n  private GetOrganizationType() {\r\n    const url = '/api/runtime/sys/v1.0/authfields/globalauthfields';\r\n    this.http.get(url)\r\n      .subscribe((data: any) => this.designerUIState.orgTypeCollection = data.map(d => ({ value: d.id, text: d.name })));\r\n  }\r\n\r\n  private getMatrixConfig(): Observable<any> {\r\n    const url = `/api/runtime/wf/v1.0/generalConfig/Is_EnableMatrix`;\r\n    return this.http.get(url);\r\n  }\r\n}\r\nexport class PerformerConverter implements TypeConverter {\r\n  constructor() { }\r\n\r\n  convertTo(data: any): string {\r\n    if ((data.performers && data.performers.length > 0)\r\n      || (data.components && data.components.length > 0)\r\n      || (data.reportingLines && data.reportingLines.length > 0)\r\n      || (data.matrixParticipants && data.matrixParticipants.length > 0)\r\n    ) {\r\n      return 'ï¼å·²è®¾ç½®ï¼';\r\n    } else {\r\n      return 'ï¼æªè®¾ç½®ï¼';\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, HostBinding, Output, EventEmitter, Input, ViewChild, TemplateRef } from '@angular/core';\r\nimport { TypeConverter } from '@farris/ui-property-panel';\r\nimport { ActionOrganizationScope, ActionScope, OrganizationPotentialOwner, OrganizationLevel } from './actionOrganizationScope';\r\n\r\n@Component({\r\n  selector: 'app-organization-potential-owner',\r\n  templateUrl: './organization-potential-owner.component.html',\r\n  styleUrls: ['./organization-potential-owner.component.scss']\r\n})\r\nexport class OrganizationPotentialOwnerComponent implements OnInit {\r\n  @HostBinding('class')\r\n  cls = 'farris-main-area flex-column';\r\n\r\n  @Output() closeModal = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n\r\n  @Input()\r\n  set value(v: ActionOrganizationScope) {\r\n    this.action = v.action;\r\n    if (this.action === this.actionCollection[2].value) {\r\n      if (v.enable === null || v.enable === undefined) {\r\n        this.enable = true;\r\n      } else {\r\n        this.enable = v.enable;\r\n      }\r\n    } else {\r\n      this.enable = v.enable;\r\n    }\r\n    if (v.scope) {\r\n      this.organizationLevel = v.scope.organizationLevel;\r\n      this.includeChildren = v.scope.includeChildren;\r\n    }\r\n  }\r\n\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n  modalConfig = {\r\n    title: 'éé¡¹è®¾ç½®',\r\n    width: 425,\r\n    height: 360,\r\n    showButtons: true\r\n  };\r\n  organizationLevelCollection = [{\r\n    value: 'GLOBAL',\r\n    text: 'å¨å',\r\n    orgId: 'global',\r\n  }, {\r\n    value: 'UNIT',\r\n    text: 'æ¬åä½',\r\n    orgId: 'currentUnit'\r\n  }, {\r\n    value: 'DEPARTMENT',\r\n    text: 'æ¬é¨é¨',\r\n    orgId: 'currentDepartment'\r\n    }];\r\n  actionCollection = [{\r\n      value: ActionScope.AddSignBehind, name: 'å ç­¾'\r\n  }, {\r\n      value: ActionScope.AddSignFront, name: 'å¾è¯¢'\r\n  }, {\r\n      value: ActionScope.Transfer, name: 'ç§»äº¤'\r\n  }, {\r\n    value: ActionScope.Notify, name: 'ç¥ä¼'\r\n}];\r\n  enable = false;\r\n  organizationLevel = this.organizationLevelCollection[0].value;\r\n  action = this.actionCollection[0].value;\r\n  includeChildren = false;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  clickOK() {\r\n    const scope = new ActionOrganizationScope();\r\n    scope.enable = this.enable;\r\n    scope.action = this.action;\r\n    if (scope.enable && this.organizationLevel !== this.organizationLevelCollection[0].value) {\r\n      const potential = new OrganizationPotentialOwner();\r\n      potential.actionScope = this.action;\r\n      potential.organizationLevel = this.organizationLevel as OrganizationLevel;\r\n      potential.organizationId = this.organizationLevelCollection.find(o => o.value === this.organizationLevel).orgId;\r\n      potential.organizationName = this.organizationLevelCollection.find(o => o.value === this.organizationLevel).text;\r\n      potential.includeChildren = this.includeChildren;\r\n      potential.tag = 'variable';\r\n      scope.scope = potential;\r\n    }\r\n    const object = { value: scope, parameters: null };\r\n    this.submitModal.emit(object);\r\n  }\r\n  clickCancel() {\r\n    this.closeModal.emit();\r\n  }\r\n  valueChange(event: any) {\r\n    switch (event.value) {\r\n      case this.organizationLevelCollection[0].value:\r\n        this.includeChildren = false;\r\n        break;\r\n      case this.organizationLevelCollection[1].value:\r\n        this.includeChildren = true;\r\n        break;\r\n      case this.organizationLevelCollection[2].value:\r\n        this.includeChildren = false;\r\n        break;\r\n    }\r\n  }\r\n  actionName = () => {\r\n    return this.actionCollection.find(a => a.value === this.action).name;\r\n  }\r\n}\r\nexport class OrganizationPotentialOwnerConverter implements TypeConverter {\r\n  constructor() { }\r\n\r\n  convertTo(data: ActionOrganizationScope): string {\r\n    if (data.action === ActionScope.Transfer && (data.enable === null || data.enable === undefined)) {\r\n      return 'ï¼å·²è®¾ç½®ï¼';\r\n    } else {\r\n      if (data.enable) {\r\n          return 'ï¼å·²è®¾ç½®ï¼';\r\n      } else {\r\n        return 'ï¼æªè®¾ç½®ï¼';\r\n      }\r\n    }\r\n  }\r\n}\r\n","export class AnonymousSet { \r\n    isAnonymity = false;\r\n    anonymous = 'å®¡æ¹äºº';\r\n}\r\n","import { Component, OnInit, HostBinding, EventEmitter, Output, Input, ViewChild, TemplateRef, Inject, Injector } from '@angular/core';\r\nimport { TypeConverter } from '@farris/ui-property-panel';\r\nimport { AnonymousSet } from './anonymous-set.entity';\r\n\r\n@Component({\r\n  selector: 'lib-anonymous-set',\r\n  templateUrl: './anonymous-set.component.html',\r\n  styleUrls: ['./anonymous-set.component.scss']\r\n})\r\nexport class AnonymousSetComponent implements OnInit {\r\n  @HostBinding('class')\r\n  cls = 'farris-main-area flex-column';\r\n\r\n  @Output() closeModal = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n\r\n  @Input() set value(data: AnonymousSet) {\r\n    this.anonymousSet.isAnonymity = data.isAnonymity || false;\r\n    this.anonymousSet.anonymous = data.anonymous || 'å®¡æ¹äºº';\r\n  }\r\n\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n\r\n  anonymousSet: AnonymousSet = new AnonymousSet();\r\n  modalConfig = {\r\n    title: 'å¿åéé¡¹',\r\n    width: 450,\r\n    height: 360,\r\n    showButtons: true\r\n  };\r\n  constructor(\r\n    private injector: Injector\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n  clickOK() {\r\n    const object = { value: this.anonymousSet, parameters: null };\r\n    this.submitModal.emit(object);\r\n  }\r\n\r\n  clickCancel() {\r\n    this.closeModal.emit();\r\n  }\r\n}\r\n\r\nexport class AnonymousSetConverter implements TypeConverter {\r\n  constructor() { }\r\n\r\n  convertTo(data: any): string {\r\n    if (data && data.isAnonymity) {\r\n      return 'ï¼å·²è®¾ç½®ï¼';\r\n    } else {\r\n      return 'ï¼æªè®¾ç½®ï¼';\r\n    }\r\n  }\r\n}\r\n","export class VariableSetting {\r\n    /**\r\n     * åéId\r\n     */\r\n    // variableId: string;\r\n    /**\r\n     * åéç¼å·\r\n     */\r\n    variableCode: string;\r\n    /**\r\n     * åéåç§°\r\n     */\r\n    variableName: string;\r\n    /**\r\n     * èªå®ä¹æ ç­¾ï¼èµå¼æ¹å¼\r\n     * expression è¯­ä¹åè¡¨è¾¾å¼\r\n     * constant å¸¸é\r\n     * component æä»¶\r\n     */\r\n    tag: string;\r\n\r\n    /**\r\n     * åéæ§è¡æ¶æº\r\n     * ACTIVITY_STARTED æ´»å¨å¼å§\r\n     * ACTIVITY_COMPLETED æ´»å¨å®æ\r\n     */\r\n    executionTime: string;\r\n\r\n    /**\r\n     * åéå¼\r\n     */\r\n    value: string;\r\n\r\n    valueText: string;\r\n\r\n    /**\r\n     * æä»¶\r\n     */\r\n    component: any;\r\n}\r\n","import { Component, OnInit, HostBinding, Output, EventEmitter, Input, ViewChild, TemplateRef, Injector, ComponentFactoryResolver } from '@angular/core';\r\nimport { DatagridComponent } from '@farris/ui-datagrid';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { TypeConverter } from '@farris/ui-property-panel';\r\nimport { BsModalService } from '@farris/ui-modal';\r\nimport { ProcessVariablesComponent } from '../process-variables/process-variables.component';\r\nimport { ProcessDesignerUIState } from '../../app/process-designer.uistate';\r\nimport { VariableSetting } from './variable-setting';\r\nimport { EditorTypes } from '@farris/ui-datagrid-editors';\r\nimport { ExprEditMode, ExpressionService, InjectedType } from '@gsp-svc/expression';\r\nimport { ComponentEditComponent } from './views/component-edit/component-edit.component';\r\nimport { RowEditParam } from '@farris/ui-datagrid/lib/types';\r\nimport { of } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'lib-variable-setting',\r\n  templateUrl: './variable-setting.component.html',\r\n  styleUrls: ['./variable-setting.component.scss']\r\n})\r\nexport class VariableSettingComponent implements OnInit {\r\n  @HostBinding('class')\r\n  cls = 'farris-main-area flex-column';\r\n  @Output() closeModal = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n\r\n  @Input() value: Array<VariableSetting> = new Array();\r\n  @Input() editorParams: any = {};\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n  @ViewChild('grid') grid: DatagridComponent;\r\n  @ViewChild('cell') cell: TemplateRef<any>;\r\n\r\n  columns = [];\r\n\r\n  private tags = [\r\n    { value: 'constant', text: 'å¸¸é' },\r\n    { value: 'expression', text: 'è¡¨è¾¾å¼' },\r\n    { value: 'component', text: 'æä»¶' }\r\n  ];\r\n\r\n  private opportunities = [\r\n    { value: 'ACTIVITY_STARTED', text: 'æ´»å¨å¼å§' },\r\n    { value: 'ACTIVITY_COMPLETED', text: 'æ´»å¨ç»æ' }\r\n  ];\r\n\r\n  modalConfig = {\r\n    title: 'åéè®¾ç½®',\r\n    width: 780,\r\n    height: 460,\r\n    showButtons: true\r\n  };\r\n\r\n  constructor(\r\n    private resolver: ComponentFactoryResolver,\r\n    private injector: Injector,\r\n    private modalService: BsModalService,\r\n    private message: MessagerService,\r\n    private uistate: ProcessDesignerUIState,\r\n    private expr: ExpressionService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.columns = [\r\n      {\r\n        field: 'variableCode', width: 90, title: 'åéç¼å·', sortable: true,\r\n        validators: [\r\n          { type: 'required', messager: 'å¿å¡«' }\r\n        ]\r\n      },\r\n      {\r\n        field: 'variableName', width: 90, title: 'åéåç§°', sortable: true,\r\n        validators: [\r\n          { type: 'required', messager: 'å¿å¡«' }\r\n        ]\r\n      }, {\r\n        field: 'tag', width: 60, title: 'å¼ç±»å', sortable: true,\r\n        formatter: {\r\n          type: 'enum',\r\n          options: { valueField: 'value', textField: 'text', data: this.tags }\r\n        },\r\n        editor: {\r\n          type: EditorTypes.COMBOLIST,\r\n          options: {\r\n            valueField: 'value', textField: 'text', data: this.tags, idField: 'value', panelHeight: 'auto', showClear: false,\r\n            selectChange: (e) => {\r\n              this.value = this.value.map(v => {\r\n                if (v.variableCode === e.rowId) {\r\n                  v.value = null;\r\n                  v.valueText = null;\r\n                  if (v.component) {\r\n                    v.component = null;\r\n                  }\r\n                  return v;\r\n                } else {\r\n                  return v;\r\n                }\r\n              });\r\n            }\r\n          }\r\n        },\r\n        validators: [\r\n          { type: 'required', messager: 'å¿å¡«' }\r\n        ]\r\n      }, {\r\n        field: 'executionTime', width: 80, title: 'æ§è¡æ¶æº', sortable: true,\r\n        formatter: {\r\n          type: 'enum',\r\n          options: { valueField: 'value', textField: 'text', data: this.opportunities }\r\n        },\r\n        editor: {\r\n          type: EditorTypes.COMBOLIST,\r\n          options: {\r\n            valueField: 'value', textField: 'text', data: this.opportunities, idField: 'value', panelHeight: 'auto', showClear: false,\r\n          }\r\n        },\r\n        validators: [\r\n          { type: 'required', messager: 'å¿å¡«' }\r\n        ],\r\n      },\r\n      {\r\n        field: 'valueText', width: 150, title: 'åéå¼', showTips: true,\r\n        editor: { type: EditorTypes.TEXTBOX, options: {} },\r\n        validators: [\r\n          { type: 'required', messager: 'å¿å¡«' }\r\n        ]\r\n      }\r\n    ];\r\n  }\r\n\r\n  add() {\r\n    let dialog: any;\r\n    const compFactory = this.resolver.resolveComponentFactory(ProcessVariablesComponent);\r\n    const compRef = compFactory.create(this.injector);\r\n    compRef.instance.variableSetting = true;\r\n    compRef.instance.value = this.uistate.ProcessVariables;\r\n    compRef.instance.variableSetEmitter.subscribe((re: any[]) => {\r\n      for (const v of re) {\r\n        const variableSet = new VariableSetting();\r\n        variableSet.variableCode = v.data.name;\r\n        variableSet.variableName = v.data.documentation;\r\n        variableSet.tag = v.data.tag || this.tags[0].value;\r\n        variableSet.executionTime = v.data.executionTime || this.opportunities[0].value;\r\n        if (this.value.findIndex(i => i.variableCode === variableSet.variableCode) === -1) {\r\n          this.value = this.value.concat([variableSet]);\r\n        }\r\n      }\r\n      dialog.close();\r\n    });\r\n    compRef.instance.closeModal.subscribe(re => {\r\n      dialog.close();\r\n    });\r\n    const modalConfig = {\r\n      title: 'æµç¨åé',\r\n      width: 660,\r\n      height: 460,\r\n      showButtons: true,\r\n      buttons: compRef.instance.modalFooter\r\n    };\r\n    dialog = this.modalService.show(compRef, modalConfig);\r\n  }\r\n\r\n  delete() {\r\n    this.grid.endCellEdit();\r\n    const selected = this.grid.selectedRow;\r\n    if (!selected) {\r\n      this.message.info('å°æªéä¸­åéï¼');\r\n      return;\r\n    }\r\n    this.value = this.value.filter(v => v.variableCode !== selected.data.variableCode);\r\n  }\r\n\r\n  clickOK() {\r\n    this.grid.endCellEdit();\r\n    if (this.validator()) {\r\n      const object = { value: this.value, parameters: null };\r\n      this.submitModal.emit(object);\r\n    }\r\n  }\r\n\r\n  clickCancel() {\r\n    this.closeModal.emit();\r\n  }\r\n\r\n  validator() {\r\n    for (const item of this.value) {\r\n      if (!item.value) {\r\n        this.message.warning('åéå¼ä¸åè®¸ä¸ºç©ºï¼');\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  beforeEdit = (param: RowEditParam) => {\r\n    const rowData = param.rowData as any;\r\n    const column = param.column;\r\n    if (column.field === 'valueText') {\r\n      if ((rowData as VariableSetting).tag === this.tags[0].value) {\r\n        param.column.editor = { type: EditorTypes.TEXTBOX, options: {} };\r\n      } else {\r\n        param.column.editor = {\r\n          type: 'input-group',\r\n          options: {\r\n            groupText: '<i class=\"f-icon f-icon-lookup\"></i>',\r\n            editable: false,\r\n            showClear: false,\r\n            clickHandle: (e) => {\r\n              e.formControl.setValue(e.instance.value ? e.instance.value : '');\r\n              this.valueEdit(e);\r\n            },\r\n            clear: (e) => {\r\n              console.log('clear', e);\r\n            }\r\n          }\r\n        };\r\n      }\r\n    }\r\n    return of(true);\r\n  }\r\n\r\n  endEdit(data: any) {\r\n    if (data.column.field === 'valueText' && data.rowData.tag === this.tags[0].value) {\r\n      data.rowData.value = data.rowData.valueText;\r\n    }\r\n  }\r\n\r\n  valueEdit(e: any) {\r\n    const rowdata: VariableSetting = e.rowData;\r\n    switch (rowdata.tag) {\r\n      case this.tags[1].value:\r\n        this.editExpression(e);\r\n        break;\r\n      case this.tags[2].value:\r\n        this.editComponent(e);\r\n        break;\r\n    }\r\n  }\r\n\r\n  private editExpression(e: any) {\r\n    const data: VariableSetting = e.rowData;\r\n    if (this.uistate.schemas.length > 0) {\r\n      for (const schema of this.uistate.schemas) {\r\n        this.expr.addSchema('Schema', schema);\r\n      }\r\n      if (this.uistate.schemas[0].entityTypes && this.uistate.schemas[0].entityTypes.length > 0) {\r\n        const entityType = this.uistate.schemas[0].entityTypes[0];\r\n        this.expr.addInjectedEntity(entityType.name, 'Schema',\r\n          entityType.name, InjectedType.EntityType);\r\n      }\r\n    }\r\n    const context = new Array();\r\n    if (this.uistate.procInstContext.length > 0) {\r\n      for (const variable of this.uistate.procInstContext) {\r\n        context.push(variable);\r\n      }\r\n    }\r\n    if (this.uistate.formalParameterContext.length > 0) {\r\n      for (const variable of this.uistate.formalParameterContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (this.uistate.participantContext.length > 0) {\r\n      for (const variable of this.uistate.participantContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (this.uistate.processVariableContext.length > 0) {\r\n      for (const variable of this.uistate.processVariableContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (context.length > 0) {\r\n      for (const v of context) {\r\n        this.expr.addContext(v);\r\n      }\r\n    }\r\n    this.expr.setEditPattern(ExprEditMode.Advanced); // è¡¨è¾¾å¼å±ç°æ¨¡å¼ï¼é»è®¤é«çº§ç\r\n    this.expr.addExpressionText(data.value);\r\n    this.expr.buildExpression().then((re: string) => {\r\n      e.formControl.setValue(re);\r\n      e.instance.cd.detectChanges();\r\n      data.value = re;\r\n    });\r\n  }\r\n\r\n  private editComponent(e: any) {\r\n    const data: VariableSetting = e.rowData;\r\n    let dialog: any;\r\n    const compFactory = this.resolver.resolveComponentFactory(ComponentEditComponent);\r\n    const compRef = compFactory.create(this.injector);\r\n    compRef.instance.component = data.component;\r\n    compRef.instance.submitEmitter.subscribe((re: any) => {\r\n      e.formControl.setValue(re.Name + '-' + re.MethodCode);\r\n      e.instance.cd.detectChanges();\r\n      data.value = re.Id;\r\n      data.component = re;\r\n      dialog.close();\r\n    });\r\n    compRef.instance.closeEmitter.subscribe(re => {\r\n      dialog.close();\r\n    });\r\n    const modalConfig = {\r\n      title: 'æä»¶',\r\n      width: 800,\r\n      height: 515,\r\n      showButtons: true,\r\n      buttons: compRef.instance.footer\r\n    };\r\n    dialog = this.modalService.show(compRef, modalConfig);\r\n  }\r\n}\r\n\r\nexport class VariableSettingConverter implements TypeConverter {\r\n  constructor() { }\r\n\r\n  convertTo(data: any[]): string {\r\n    if (data && data.length > 0) {\r\n      return 'ï¼å·²è®¾ç½®ï¼';\r\n    } else {\r\n      return 'ï¼æªè®¾ç½®ï¼';\r\n    }\r\n  }\r\n}\r\n","import { ApprovalPivot } from './approval-pivot';\r\n\r\nexport class ApprovalPivotConfig {\r\n    constructor() {\r\n        this.enable = false;\r\n        this.title = 'å®¡æ¹è¦ç¹';\r\n        this.approvalPivots = new Array();\r\n    }\r\n    title: string;\r\n    enable: boolean;\r\n    approvalPivots: Array<ApprovalPivot>;\r\n}\r\n","import { ProcessDeUtil } from '../../domain/process-de-util';\r\n\r\nexport class ApprovalPivot {\r\n    constructor() {\r\n        this.id = ProcessDeUtil.GenerateElementId();\r\n        this.type = 'REMIND';\r\n    }\r\n    id: string;\r\n    type: string;\r\n    condition: string;\r\n    title: string;\r\n    description: string;\r\n}\r\n","import { Component, OnInit, ViewChild, TemplateRef, HostBinding, Output, EventEmitter, Input } from '@angular/core';\r\nimport { TypeConverter } from '@farris/ui-property-panel';\r\nimport { DatagridComponent } from '@farris/ui-datagrid';\r\nimport { ApprovalPivotConfig } from './approval-pivot-config';\r\nimport { EditorTypes } from '@farris/ui-datagrid-editors';\r\nimport { ProcessDesignerUIState } from '../../app/process-designer.uistate';\r\nimport { ExpressionService, InjectedType, ExprEditMode } from '@gsp-svc/expression';\r\nimport { ApprovalPivot } from './approval-pivot';\r\nimport { MessagerService } from '@farris/ui-messager';\r\n\r\n@Component({\r\n  selector: 'lib-approval-pivot',\r\n  templateUrl: './approval-pivot.component.html',\r\n  styleUrls: ['./approval-pivot.component.scss']\r\n})\r\nexport class ApprovalPivotComponent implements OnInit {\r\n  @HostBinding('class')\r\n  cls = 'farris-main-area flex-column';\r\n\r\n  @Output() closeModal = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n  @ViewChild('grid') grid: DatagridComponent;\r\n\r\n  @Input()\r\n  set value(data: any) {\r\n    if (data) {\r\n      this.config.enable = data.enable;\r\n      this.config.title = data.title;\r\n      if (data.approvalPivots && data.approvalPivots.length > 0) {\r\n        for (const a of data.approvalPivots) {\r\n          const approvalPivot = new ApprovalPivot();\r\n          approvalPivot.type = a.type;\r\n          approvalPivot.title = a.title;\r\n          approvalPivot.description = a.description;\r\n          if (a.condition) {\r\n            if (typeof (a.condition) === 'string') {\r\n              approvalPivot.condition = a.condition;\r\n            } else {\r\n              approvalPivot.condition = a.condition._value;\r\n            }\r\n          }\r\n\r\n\r\n          this.config.approvalPivots = this.config.approvalPivots.concat([approvalPivot]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  config = new ApprovalPivotConfig();\r\n\r\n  typeList = [\r\n    { value: 'REMIND', text: 'æå­æç¤º' }];\r\n\r\n  columns = [\r\n    {\r\n      field: 'type', width: 80, title: 'ç±»å',\r\n      formatter: {\r\n        type: 'enum',\r\n        options: { valueField: 'value', textField: 'text', data: this.typeList }\r\n      },\r\n      editor: {\r\n        type: EditorTypes.COMBOLIST,\r\n        options: { valueField: 'value', textField: 'text', data: this.typeList, idField: 'value', panelHeight: 'auto', enableClear: false }\r\n      },\r\n      validators: [\r\n        { type: 'required', messager: 'å¿å¡«' }\r\n      ]\r\n    },\r\n    {\r\n      field: 'condition', width: 120, title: 'æ¡ä»¶', showTips: true,\r\n      editor: {\r\n        type: 'input-group',\r\n        options: {\r\n          groupText: '<i class=\"f-icon f-icon-lookup\"></i>',\r\n          editable: false,\r\n          clickHandle: (e) => {\r\n            e.formControl.setValue(e.instance.value ? e.instance.value : '');\r\n            this.editConditon(e);\r\n          },\r\n          clear: (e) => {\r\n            console.log('clear', e);\r\n          }\r\n        }\r\n      }\r\n    },\r\n    {\r\n      field: 'title', width: 80, title: 'æ¾ç¤ºåç§°',\r\n      editor: { type: EditorTypes.TEXTBOX, options: {} }\r\n    }, {\r\n      field: 'description', width: 100, title: 'è¯¦ç»è¯´æ', showTips: true,\r\n      editor: { type: EditorTypes.TEXTBOX, options: {} }\r\n    }\r\n  ];\r\n\r\n  modalConfig = {\r\n    title: 'å®¡æ¹è¦ç¹',\r\n    width: 800,\r\n    height: 480,\r\n    showButtons: true\r\n  };\r\n\r\n\r\n  constructor(\r\n    private designerUIState: ProcessDesignerUIState,\r\n    private expr: ExpressionService,\r\n    private message: MessagerService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  add() {\r\n    const approvalPivot = new ApprovalPivot();\r\n    this.config.approvalPivots = this.config.approvalPivots.concat([approvalPivot]);\r\n  }\r\n\r\n  delete() {\r\n    const selectedRow = this.grid.selectedRow;\r\n    if (!selectedRow) {\r\n      this.message.info('å°æªéä¸­å®¡æ¹è¦ç¹ï¼');\r\n      return;\r\n    }\r\n    this.config.approvalPivots = this.config.approvalPivots.filter(a => a.id !== selectedRow.id);\r\n  }\r\n\r\n  clickOK() {\r\n    if (!this.config.title && this.config.enable) {\r\n      this.message.info('å°æªå¡«åæ¾ç¤ºæ é¢ï¼');\r\n      return;\r\n    }\r\n    this.grid.endCellEdit();\r\n    if (this.validator()) {\r\n      const object = { value: this.config, parameters: null };\r\n      this.submitModal.emit(object);\r\n    }\r\n  }\r\n\r\n  clickCancel() {\r\n    this.closeModal.emit();\r\n  }\r\n\r\n  private validator() {\r\n    return true;\r\n  }\r\n\r\n\r\n  editConditon(e: any) {\r\n    if (this.designerUIState.schemas.length > 0) {\r\n      for (const schema of this.designerUIState.schemas) {\r\n        this.expr.addSchema('Schema', schema);\r\n      }\r\n      if (this.designerUIState.schemas[0].entityTypes && this.designerUIState.schemas[0].entityTypes.length > 0) {\r\n        const entityType = this.designerUIState.schemas[0].entityTypes[0];\r\n        this.expr.addInjectedEntity(entityType.name, 'Schema',\r\n          entityType.name, InjectedType.EntityType);\r\n      }\r\n    }\r\n\r\n    const context = new Array();\r\n    if (this.designerUIState.procInstContext.length > 0) {\r\n      for (const variable of this.designerUIState.procInstContext) {\r\n        context.push(variable);\r\n      }\r\n    }\r\n    if (this.designerUIState.formalParameterContext.length > 0) {\r\n      for (const variable of this.designerUIState.formalParameterContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (this.designerUIState.participantContext.length > 0) {\r\n      for (const variable of this.designerUIState.participantContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (this.designerUIState.processVariableContext.length > 0) {\r\n      for (const variable of this.designerUIState.processVariableContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (this.designerUIState.activityComponentContext.length > 0) {\r\n      for (const variable of this.designerUIState.activityComponentContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (context.length > 0) {\r\n      for (const v of context) {\r\n        this.expr.addContext(v);\r\n      }\r\n    }\r\n\r\n    this.expr.addExpressionText(e.instance.value);\r\n    this.expr.setEditPattern(ExprEditMode.Conditional);\r\n    this.expr.buildExpression().then((cond: string) => {\r\n      e.formControl.setValue(cond);\r\n      e.instance.cd.detectChanges();\r\n    });\r\n  }\r\n}\r\n\r\nexport class ApprovalPivotConverter implements TypeConverter {\r\n  constructor() { }\r\n\r\n  convertTo(data: any): string {\r\n    if (data && data.enable) {\r\n      return 'ï¼å·²è®¾ç½®ï¼';\r\n    } else {\r\n      return 'ï¼æªè®¾ç½®ï¼';\r\n    }\r\n  }\r\n}\r\n","export class UrgeHandleRule {\r\n  constructor() {\r\n    this.urgeHandleAble = false;\r\n    this.earlyTime = 0;\r\n    this.intervalTime = 0;\r\n    this.urgeMessageSubject = \"{\\\"expr\\\":\\\"'å¬åå®¡æ¹ï¼' + DefaultFunction.GetContextParameter(\\\\\\\"bizDefName\\\\\\\")\\\",\\\"sexpr\\\":\\\"\\\"}\";\r\n    this.urgeMessageContent = \"{\\\"expr\\\":\\\"'è¯·æ¨å°½å¿«å®¡æ¹' + DefaultFunction.GetContextParameter(\\\\\\\"procInstCreatorName\\\\\\\") + 'ç' + DefaultFunction.GetContextParameter(\\\\\\\"bizDefName\\\\\\\") + 'ã'\\\",\\\"sexpr\\\":\\\"\\\"}\";\r\n    this.addReminder = false;\r\n    this.subjectEditable = true;\r\n    this.contentEditable = true;\r\n  }\r\n\r\n  urgeHandleAble: boolean;\r\n  sendType: string;\r\n  earlyTime: number;\r\n  intervalTime: number;\r\n  urgeMessageSubject: string;\r\n  urgeMessageContent: string;\r\n  // æ¯å¦æ·»å å¬åäººä¿¡æ¯\r\n  addReminder: boolean;\r\n  subjectEditable: boolean;\r\n  contentEditable: boolean;\r\n}\r\n","import { Component, OnInit, Output, EventEmitter, ViewChild, TemplateRef, Input } from '@angular/core';\r\nimport { TypeConverter } from '@farris/ui-property-panel';\r\nimport { UrgeHandleRule } from './urge-handle-rule';\r\nimport { ProcessDesignerUIState } from '../../app/process-designer.uistate';\r\nimport {ExpressionService, InjectedType} from '@gsp-svc/expression';\r\nimport { MessagerService } from '@farris/ui-messager';\r\n\r\n@Component({\r\n  selector: 'lib-urge-handle-rule',\r\n  templateUrl: './urge-handle-rule.component.html',\r\n  styleUrls: ['./urge-handle-rule.component.scss']\r\n})\r\nexport class UrgeHandleRuleComponent implements OnInit {\r\n\r\n  groupIcon2 = '<i class=\"f-icon f-icon-lookup\"></i>';\r\n  @Output() closeModal = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n\r\n  @Input()\r\n  set value(data: any) {\r\n    if (!data) {\r\n      this.urgeHandleRule.urgeHandleAble = true;\r\n      this.urgeHandleRule.sendType = 'cloudplus,inmail';\r\n    } else {\r\n      this.urgeHandleRule = data;\r\n    }\r\n  }\r\n\r\n  urgeHandleRule: UrgeHandleRule = new UrgeHandleRule();\r\n\r\n\r\n  typeGroup = this.designerUIState.messageChannels.map(m => ({ value: m.code, name: m.name }));\r\n\r\n  modalConfig = {\r\n    title: 'å¬å',\r\n    width: 500,\r\n    height: 445,\r\n    showButtons: true\r\n  };\r\n\r\n  constructor(\r\n    private designerUIState: ProcessDesignerUIState,\r\n    private expr: ExpressionService,\r\n    private message: MessagerService) {}\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  clickOK() {\r\n    if (this.validator()) {\r\n      const object = { value: this.urgeHandleRule, parameters: null };\r\n      this.submitModal.emit(object);\r\n    }\r\n  }\r\n\r\n  clickCancel() {\r\n    this.closeModal.emit();\r\n  }\r\n\r\n  private validator() {\r\n    if (!this.urgeHandleRule.urgeHandleAble) {\r\n      return true;\r\n    }\r\n    if (!this.urgeHandleRule.sendType) {\r\n      this.message.info('å°æªéæ©åéæ¹å¼ï¼');\r\n      return false;\r\n    }\r\n    if (!this.urgeHandleRule.urgeMessageSubject) {\r\n      this.message.info('å°æªéç½®æ¶æ¯ä¸»é¢ï¼');\r\n      return false;\r\n    }\r\n    if (!this.urgeHandleRule.urgeMessageContent) {\r\n      this.message.info('å°æªéæ©æ¶æ¯åå®¹ï¼');\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  parser = (val: string | number) => {\r\n    return Number(val);\r\n  }\r\n\r\n  titleExpr(data: any){\r\n    this.showTitleHelp(data);\r\n  }\r\n\r\n  contentExpr(data: any){\r\n    this.showContentHelp(data);\r\n  }\r\n\r\n  showTitleHelp(data: string) {\r\n    this.showExpr();\r\n    if (this.urgeHandleRule.urgeMessageSubject && this.urgeHandleRule.urgeMessageSubject.length > 0) {\r\n      this.expr.addExpressionText(this.urgeHandleRule.urgeMessageSubject);\r\n    } else {\r\n      this.expr.addExpressionText('');\r\n    }\r\n    this.expr.buildExpression().then((expressionInfo: string) => {\r\n      this.urgeHandleRule.urgeMessageSubject = expressionInfo;\r\n    });\r\n  }\r\n\r\n  showContentHelp(data: string){\r\n    this.showExpr();\r\n    if (this.urgeHandleRule.urgeMessageContent && this.urgeHandleRule.urgeMessageContent.length > 0) {\r\n      this.expr.addExpressionText(this.urgeHandleRule.urgeMessageContent);\r\n    } else {\r\n      this.expr.addExpressionText('');\r\n    }\r\n    this.expr.buildExpression().then((expressionInfo: string) => {\r\n      this.urgeHandleRule.urgeMessageContent = expressionInfo;\r\n    });\r\n  }\r\n\r\n  showExpr(){\r\n    if (this.designerUIState.schemas.length > 0) {\r\n      for (const schema of this.designerUIState.schemas) {\r\n        // this.expr.addCommonObject(co);\r\n        this.expr.addSchema('Schema', schema);\r\n      }\r\n      if (this.designerUIState.schemas[0].entityTypes && this.designerUIState.schemas[0].entityTypes.length > 0) {\r\n        const entityType = this.designerUIState.schemas[0].entityTypes[0];\r\n        this.expr.addInjectedEntity(entityType.name, 'Schema',\r\n          entityType.name, InjectedType.EntityType);\r\n      }\r\n    }\r\n    const context = new Array();\r\n    if (this.designerUIState.urgeContext.length > 0) {\r\n      for (const variable of this.designerUIState.urgeContext) {\r\n        context.push(variable);\r\n        // this.expr.addContext(variable);\r\n      }\r\n    }\r\n    if (this.designerUIState.processVariableContext.length > 0) {\r\n      for (const variable of this.designerUIState.processVariableContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n        // this.expr.addContext(variable);\r\n      }\r\n    }\r\n    if (context.length > 0) {\r\n      for (const v of context) {\r\n        this.expr.addContext(v);\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport class UrgeHandleRuleConverter implements TypeConverter {\r\n  constructor() { }\r\n\r\n  convertTo(data: any): string {\r\n    if (!data) {\r\n      return 'ï¼å·²è®¾ç½®ï¼';\r\n    } else if (data.urgeHandleAble) {\r\n      return 'ï¼å·²è®¾ç½®ï¼';\r\n    } else {\r\n      return 'ï¼æªè®¾ç½®ï¼';\r\n    }\r\n  }\r\n}\r\n","import { Injectable, Injector, ComponentFactoryResolver } from '@angular/core';\r\nimport { ProcessDesignerUIState } from './process-designer.uistate';\r\nimport { ApprovalItemEntity } from '../views/approvel-items/entities/approval-item.entity';\r\nimport { PropertyEntity } from '@farris/ui-property-panel';\r\nimport { ElementPropertyConfig, KeyMap } from '@farris/ui-property-panel';\r\nimport { ResourceKeys } from '../model/resourceKeys';\r\nimport { AssignPerformerConfigComponent, AssignConfigConverter } from '../views/assign-performer-config/assign-performer-config.component';\r\nimport { SignRuleComponent, SignRuleConverter } from '../views/sign-rule/sign-rule.component';\r\nimport { ApprovelItemsComponent, ApprovelItemsConverter } from '../views/approvel-items/approvel-items.component';\r\nimport { ExpressionEditorComponent, ExpressionEditorConverter } from '../views/expressionEditor/expression-editor.component';\r\nimport { ExecuteFormsComponent, ExecuteFormsConverter } from '../views/execute-forms/execute-forms.component';\r\nimport { JumpScopeComponent, JumpScopeConverter } from '../views/jump-scope/jump-scope.component';\r\nimport { VarEntity } from '@gsp-svc/expression';\r\nimport { BackwardRuleComponent, BackwardRuleConverter } from '../views/backward-rule/backward-rule.component';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { BackWardRule } from '../views/backward-rule/backward-rule.entity';\r\nimport { ActivityComponentComponent, ActivityComponentConverter } from '../views/activity-component/activity-component.component';\r\nimport { PerformerComponent, PerformerConverter } from '../views/performer/performer.component';\r\nimport { TitleExpressionComponent, TitleExpressionConverter } from '../views/title-expression/title-expression.component';\r\nimport { BsModalService, ModalOptions } from '@farris/ui-modal';\r\nimport { OrganizationPotentialOwnerComponent, OrganizationPotentialOwnerConverter } from '../views/organization-potential-owner/organization-potential-owner.component';\r\nimport { CustomizeActionComponent, CustomizeActionConverter } from '../views/customize-action/customize-action.component';\r\nimport { TimeLimitControlComponent, TimeLimitControlConverter } from '../views/time-limit-control/time-limit-control.component';\r\nimport { AnonymousSetComponent, AnonymousSetConverter } from '../views/anonymous-set/anonymous-set.component';\r\nimport { VariableSettingComponent, VariableSettingConverter } from '../views/variable-setting/variable-setting.component';\r\nimport { MessageNoticeComponent, MessageNoticeConverter } from '../views/message-notice/message-notice.component';\r\nimport { ApprovalPivotComponent, ApprovalPivotConverter } from '../views/approval-pivot/approval-pivot.component';\r\nimport { UrgeHandleRuleComponent, UrgeHandleRuleConverter } from '../views/urge-handle-rule/urge-handle-rule.component';\r\nimport { ExtendPropertyComponent, ExtendPropertyConverter } from '../views/extend-property/extend-property.component';\r\n\r\n@Injectable()\r\n\r\nexport class WFFlowElementsViewModel {\r\n\r\n  constructor(\r\n    private uiState: ProcessDesignerUIState,\r\n    private message: MessagerService,\r\n    private injector: Injector,\r\n    private modalService: BsModalService,\r\n    private resolver: ComponentFactoryResolver\r\n  ) {\r\n\r\n  }\r\n\r\n  /**\r\n   * è®¾ç½®æµç¨åç´ å±æ§æ¡\r\n   * @param obj\r\n   */\r\n  setFlowElementProperty(obj: any) {\r\n    this.uiState.propertyData = obj.propertyData;\r\n    this.uiState.propertyConfig = this.setFlowEleConfig(obj.propertyConfig);\r\n  }\r\n\r\n  private setFlowEleConfig(obj: any[]): ElementPropertyConfig[] {\r\n    const propertyConfig: ElementPropertyConfig[] = [];\r\n    if (obj) {\r\n      obj.forEach((element: ElementPropertyConfig) => {\r\n        this.setFlowEleEntity(element.properties);\r\n        propertyConfig.push(element);\r\n      });\r\n    }\r\n    return propertyConfig;\r\n  }\r\n\r\n  private setFlowEleEntity(obj: PropertyEntity[]) {\r\n    if (obj && obj.length > 0) {\r\n      obj.forEach((item: PropertyEntity) => {\r\n        switch (item.propertyID) {\r\n          case ResourceKeys.ConditionExpression:                  // æ¡ä»¶è¡¨è¾¾å¼\r\n            item.editor = ExpressionEditorComponent;\r\n            item.converter = new ExpressionEditorConverter();\r\n            item.editorParams = {};\r\n            break;\r\n          case ResourceKeys.wf_ExecuteForms_PC:                         // å¼å§æ´»å¨çè¡¨åæä»¶\r\n            item.editor = ExecuteFormsComponent;\r\n            item.converter = new ExecuteFormsConverter();\r\n            item.editorParams = {\r\n              location: 'startActivity',\r\n              tab: 'web'\r\n            };\r\n            break;\r\n          case ResourceKeys.wf_ExecuteForms_Mobile:                         // å¼å§æ´»å¨çè¡¨åæä»¶\r\n            item.editor = ExecuteFormsComponent;\r\n            item.converter = new ExecuteFormsConverter();\r\n            item.editorParams = {\r\n              location: 'startActivity',\r\n              tab: 'mobile'\r\n            };\r\n            break;\r\n          case ResourceKeys.sendBackedTask:                         // å¼å§æ´»å¨çåéé©³åä»»å¡\r\n            item.iterator = this.uiState.boolIterator;\r\n            break;\r\n          case ResourceKeys.SelectTargetAble: // åè®¸è·³è½¬\r\n            item.iterator = this.uiState.boolIterator;\r\n            break;\r\n          case ResourceKeys.JumpScope: // è·³è½¬è§å\r\n            item.editor = JumpScopeComponent;\r\n            item.converter = new JumpScopeConverter();\r\n            break;\r\n          case ResourceKeys.Default:                              // é»è®¤åæ¯\r\n            item.iterator = this.uiState.boolIterator;\r\n            break;\r\n          default:\r\n            item.editor = ExtendPropertyComponent;\r\n            item.converter = new ExtendPropertyConverter();\r\n            break;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * è®¾ç½®å®¡æ¹æ´»å¨èç¹çå±æ§æ¡\r\n   * @param obj\r\n   */\r\n  setUserActivityProperty(obj: any) {\r\n    if (obj.propertyData.ApprovalItems) {\r\n      this.buildApprovalItems(obj.propertyData.ApprovalItems);\r\n      this.buildCounterSignVariables(obj.propertyData.ApprovalItems);\r\n      this.buildSignRules(obj.propertyData.SignRule); // è®¾ç½®ä¼ç­¾è§åçç»è®ºåç§°\r\n    }\r\n    this.uiState.propertyData = obj.propertyData;\r\n    this.uiState.bizActivityId = obj.propertyData.BizActivityID;\r\n    this.uiState.propertyConfig = this.setUserActConfig(obj.propertyConfig);\r\n  }\r\n\r\n  private setUserActConfig(obj: any[]): ElementPropertyConfig[] {\r\n    const propertyConfig: ElementPropertyConfig[] = [];\r\n    if (obj) {\r\n      obj.forEach((element: ElementPropertyConfig) => {\r\n        this.setUserActEntity(element.properties);\r\n        propertyConfig.push(element);\r\n      });\r\n    }\r\n    return propertyConfig;\r\n  }\r\n\r\n  private setUserActEntity(obj: PropertyEntity[]) {\r\n    if (obj && obj.length > 0) {\r\n      obj.forEach((item: PropertyEntity) => {\r\n        switch (item.propertyID) {\r\n          case ResourceKeys.ParticipantSchemes: // åä¸è\r\n            item.editor = PerformerComponent;\r\n            item.converter = new PerformerConverter();\r\n            break;\r\n          case ResourceKeys.wf_ExecuteForms_PC: // è¡¨åå®ä¹\r\n            item.editor = ExecuteFormsComponent;\r\n            item.converter = new ExecuteFormsConverter();\r\n            item.editorParams = {\r\n              location: 'userActivity',\r\n              tab: 'web'\r\n            };\r\n            break;\r\n          case ResourceKeys.wf_ExecuteForms_Mobile: // è¡¨åå®ä¹\r\n            item.editor = ExecuteFormsComponent;\r\n            item.converter = new ExecuteFormsConverter();\r\n            item.editorParams = {\r\n              location: 'userActivity',\r\n              tab: 'mobile'\r\n            };\r\n            break;\r\n          case ResourceKeys.AssignStrategy: // åéç­ç¥\r\n            item.iterator = this.uiState.assignIterator;\r\n            break;\r\n          case ResourceKeys.OperatorConfig: // ææ´¾è§å\r\n            item.editor = AssignPerformerConfigComponent;\r\n            item.converter = new AssignConfigConverter();\r\n            break;\r\n          case ResourceKeys.CompleteStrategy: // å®æç­ç¥\r\n            if (this.uiState.propertyData.AssignStrategy === this.uiState.assignIterator[2].key) {\r\n              item.iterator = this.uiState.completeIterator4Claim; // åéç­ç¥ä¸ºé¢ç¨æ¶ï¼å®æç­ç¥åªè½æ¯æ¢å æ¨¡å¼\r\n            } else {\r\n              item.iterator = this.uiState.completeIterator;\r\n            }\r\n            break;\r\n          case ResourceKeys.SignRule: // ä¼ç­¾è§å\r\n            item.editor = SignRuleComponent;\r\n            item.converter = new SignRuleConverter();\r\n            item.editorParams = {\r\n              variables: this.uiState.counterSignVariables,\r\n              approvalItems: this.uiState.approvalItems\r\n            };\r\n            break;\r\n          case ResourceKeys.ApprovalItems: // å®¡æ¹é¡¹\r\n            item.editor = ApprovelItemsComponent;\r\n            item.converter = new ApprovelItemsConverter();\r\n            break;\r\n          case ResourceKeys.Retrievable: // åè®¸åå\r\n            item.iterator = this.uiState.boolIterator;\r\n            break;\r\n          case ResourceKeys.AddSignFrontAble: // åè®¸å¾è¯¢\r\n            item.editor = OrganizationPotentialOwnerComponent;\r\n            item.converter = new OrganizationPotentialOwnerConverter();\r\n            break;\r\n          case ResourceKeys.AddSignBehindAble: // åè®¸å ç­¾\r\n            item.editor = OrganizationPotentialOwnerComponent;\r\n            item.converter = new OrganizationPotentialOwnerConverter();\r\n            break;\r\n          case ResourceKeys.NotifyAble: // åè®¸ç¥ä¼\r\n            item.editor = OrganizationPotentialOwnerComponent;\r\n            item.converter = new OrganizationPotentialOwnerConverter();\r\n            break;\r\n          case ResourceKeys.transferScope: // ç§»äº¤èå´\r\n            item.editor = OrganizationPotentialOwnerComponent;\r\n            item.converter = new OrganizationPotentialOwnerConverter();\r\n            break;\r\n          case ResourceKeys.SelectBranch:  // åè®¸æå®åç»­åæ¯\r\n            item.iterator = this.uiState.boolIterator;\r\n            break;\r\n          case ResourceKeys.SelectTargetAble: // åè®¸è·³è½¬\r\n            if (this.uiState.propertyData.CompleteStrategy\r\n              && this.uiState.propertyData.CompleteStrategy !== this.uiState.completeIterator[0].key) {\r\n              item.iterator = this.uiState.noJump4Sign;\r\n            } else {\r\n              item.iterator = this.uiState.boolIterator;\r\n            }\r\n            break;\r\n          case ResourceKeys.JumpScope: // è·³è½¬è§å\r\n            item.editor = JumpScopeComponent;\r\n            item.converter = new JumpScopeConverter();\r\n            break;\r\n          case ResourceKeys.BackWardRule: // é©³åè§å\r\n            item.editor = BackwardRuleComponent;\r\n            item.converter = new BackwardRuleConverter();\r\n            item.editorParams = {\r\n              nodeType: 'UserActivity'\r\n            };\r\n            break;\r\n          case ResourceKeys.wf_TitleExpression:\r\n            item.editor = TitleExpressionComponent;\r\n            item.converter = new TitleExpressionConverter();\r\n            break;\r\n          case ResourceKeys.Tools: // æ´»å¨æä»¶\r\n            item.editor = ActivityComponentComponent;\r\n            item.converter = new ActivityComponentConverter();\r\n            item.editorParams = {\r\n              location: 'activity'\r\n            };\r\n            break;\r\n          case ResourceKeys.wf_CustomizeAction: // æ´»å¨æä»¶\r\n            item.editor = CustomizeActionComponent;\r\n            item.converter = new CustomizeActionConverter();\r\n            break;\r\n          case ResourceKeys.timeLimitControl: // è¶æ¶é¢è­¦\r\n            item.editor = TimeLimitControlComponent;\r\n            item.converter = new TimeLimitControlConverter();\r\n            item.editorParams = {\r\n              location: 'activity'\r\n            };\r\n            break;\r\n          case ResourceKeys.anonymousSet: // å¿åè®¾ç½®\r\n            item.editor = AnonymousSetComponent;\r\n            item.converter = new AnonymousSetConverter();\r\n            break;\r\n          case ResourceKeys.variableSettings: // åéè®¾ç½®\r\n            item.editor = VariableSettingComponent;\r\n            item.converter = new VariableSettingConverter();\r\n            break;\r\n          case ResourceKeys.messageNotice: // æ¶æ¯éç¥\r\n            item.editor = MessageNoticeComponent;\r\n            item.converter = new MessageNoticeConverter();\r\n            item.editorParams = {\r\n              location: 'activity'\r\n            };\r\n            break;\r\n          case ResourceKeys.approvalPivotConfig: // å®¡æ¹è¦ç¹\r\n            item.editor = ApprovalPivotComponent;\r\n            item.converter = new ApprovalPivotConverter();\r\n            break;\r\n          case ResourceKeys.DisplayTerminal: // æ¾ç¤ºç»ç«¯\r\n            item.iterator = this.uiState.displayTerminal;\r\n            break;\r\n          case ResourceKeys.urgeHandleRule: // æ¾ç¤ºç»ç«¯\r\n            item.editor = UrgeHandleRuleComponent;\r\n            item.converter = new UrgeHandleRuleConverter();\r\n            break;\r\n          default:\r\n            item.editor = ExtendPropertyComponent;\r\n            item.converter = new ExtendPropertyConverter();\r\n            break;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * åå»ºä¼ç­¾è§ååé\r\n   */\r\n  buildCounterSignVariables(conclusions: any[]) {\r\n    this.uiState.counterSignVariables = [];\r\n    this.uiState.counterSignVariables = this.uiState.counterSignVariables.concat([{\r\n      key: 'nrOfInstances',\r\n      name: 'æ»ä»»å¡æ°',\r\n      description: 'æ»ä»»å¡æ°'\r\n    }, {\r\n      key: 'nrOfCompletedInstances',\r\n      name: 'å·²å®æä»»å¡æ°',\r\n      description: 'å·²å®æä»»å¡æ°'\r\n    }\r\n    ]);\r\n    if (conclusions && conclusions.length > 0) {\r\n      for (const conclusion of conclusions) {\r\n        const variable = new VarEntity();\r\n        variable.key = `nrOf${conclusion.Value}`;\r\n        variable.name = `${conclusion.Text}_ä»»å¡æ°`;\r\n        variable.description = `${conclusion.Text}_ä»»å¡æ°`;\r\n        this.uiState.counterSignVariables.push(variable);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * åå»ºèªå®ä¹é¡¹\r\n   * @param conclusions\r\n   */\r\n  buildApprovalItems(conclusions: any[]) {\r\n    this.uiState.approvalItems = [];\r\n    if (conclusions && conclusions.length > 0) {\r\n      for (const item of conclusions) {\r\n        const conclusion = new ApprovalItemEntity();\r\n        conclusion.value = item.Value;\r\n        conclusion.text = item.Text;\r\n        conclusion.workFlowAction = item.WorkFlowAction;\r\n        conclusion.isDefault = item.IsDefault;\r\n        this.uiState.approvalItems.push(conclusion);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * ä¼ç­¾è§åç»å®å®¡æ¹é¡¹åç§°\r\n   * @param signRules ä¼ç­¾è§å\r\n   */\r\n  private buildSignRules(signRules: any[]) {\r\n    if (signRules && signRules.length > 0) {\r\n      for (const signRule of signRules) {\r\n        const approvalItem: ApprovalItemEntity = this.uiState.approvalItems.find(item => item.value === signRule.ConclusionValue);\r\n        // if (!approvalItem) {\r\n        //     this.message.info('å®¡æ¹é¡¹åçæ¹åï¼è¯·è°æ´ä¼ç­¾è§åï¼');\r\n        // }\r\n        if (approvalItem) {\r\n          signRule.ConclusionName = approvalItem.text;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, ViewChild, TemplateRef } from '@angular/core';\r\nimport { TreeTableComponent } from '@farris/ui-treetable';\r\nimport { of } from 'rxjs';\r\nimport { LookupGridComponent } from '@farris/ui-lookup';\r\n\r\n@Component({\r\n  selector: 'app-save-as-edit',\r\n  templateUrl: './save-as-edit.component.html',\r\n  styleUrls: ['./save-as-edit.component.scss']\r\n})\r\nexport class SaveAsEditComponent implements OnInit {\r\n\r\n  @ViewChild('buttonRef') btnRef: TemplateRef<any>;\r\n\r\n  @Input()\r\n  procName: string;\r\n  @Input()\r\n  procKey: string;\r\n\r\n  @ViewChild('lookup') public lookUp: LookupGridComponent;\r\n\r\n  @Output() submit = new EventEmitter<any>();\r\n  @Output() cancel = new EventEmitter<any>();\r\n\r\n  accessLevel = 'public';\r\n  organization;\r\n  organizationName;\r\n\r\n  isAdministratorConfig = false;\r\n\r\n  private _organizations: any[];\r\n  set organizations(data: any[]) {\r\n    this._organizations = data;\r\n    if (this._organizations && this._organizations.length > 0) {\r\n      this.items = this.makeTreeByParent(this._organizations, 'parentId', 'id');\r\n    } else {\r\n      this.items = new Array();\r\n    }\r\n  }\r\n  get organizations() {\r\n    return this._organizations;\r\n  }\r\n  items = new Array();\r\n\r\n  accessLevelCollection = [\r\n    { value: 'public', text: 'å¬æ'},\r\n    { value: 'private', text: 'ç§æ' }\r\n  ];\r\n\r\n  columns = [\r\n    { title: 'ç¼å·', field: 'code', width: '100', searchField: 'code' },\r\n    { title: 'åç§°', field: 'name', width: '100', searchField: 'name' },\r\n  ];\r\n\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {\r\n  }\r\n  saveAsOK() {\r\n    if (this.validator()) {\r\n      this.submit.next({\r\n        procName: this.procName,\r\n        accessLevel: this.accessLevel,\r\n        organization: this.organization,\r\n        organizationName: this.organizationName\r\n      });\r\n    }\r\n  }\r\n  saveAsCancel() {\r\n    this.cancel.emit();\r\n  }\r\n\r\n  validator() {\r\n    return true;\r\n  }\r\n\r\n  search(data: any) {\r\n    const tt = this.lookUp.componentRef.instance as TreeTableComponent;\r\n    tt.searchHandle.search(data.field, data.value, 'client');\r\n    // if (data.field === '*') {\r\n    //   this.organizations = this.organizations.filter(o => o.code.indexOf(data.value) > -1 || o.name.indexOf(data.value) > -1);\r\n    // } else {\r\n    //   this.organizations = this.organizations.filter(o => o[data.field].indexOf(data.value) > -1);\r\n    // }\r\n  }\r\n\r\n  dictPicked = (data: any) => {\r\n    this.organizationName = data.name;\r\n    this.organization = data.id;\r\n    return of(true);\r\n  }\r\n\r\n  /** æç§parentç æé æ  */\r\n  private makeTreeByParent(datas: any[], parentField: string, keyField: string): any[] {\r\n    // ä¸ç´ç²ç©ºï¼æèæ²æä¸ç´ç\r\n    const pathLayerOnes = datas.filter(x => {\r\n      if (!x[parentField]) {\r\n        return true;\r\n      }\r\n      const p = datas.find(parent => parent[keyField] === x[parentField]);\r\n      if (!p) {\r\n        return true;\r\n      }\r\n    });\r\n    const treedata = [];\r\n    pathLayerOnes.forEach(x => {\r\n      const entity: any = {};\r\n      entity.data = x;\r\n      entity.children = [];\r\n      treedata.push(entity);\r\n      // this.root = x['id'];\r\n    });\r\n    treedata.forEach(item => {\r\n      this.findChildrenByParent(item, datas, parentField, keyField);\r\n    }\r\n    );\r\n    return treedata;\r\n  }\r\n\r\n  /** æ¾å°å­èç¹ */\r\n  private findChildrenByParent(parent: any, datas: any[], parentField: string, keyField: string) {\r\n    const childList = datas.filter(childitem => {\r\n      if (childitem[parentField] === parent.data[keyField]) {\r\n        return true;\r\n      }\r\n    });\r\n    if (childList && childList.length > 0) {\r\n      childList.forEach(child => {\r\n        const childEntity: any = {};\r\n        childEntity.data = child;\r\n        childEntity.children = [];\r\n        parent.children.push(childEntity);\r\n        this.findChildrenByParent(childEntity, datas, parentField, keyField);\r\n      });\r\n    }\r\n  }\r\n}\r\n","export enum BillSourceType {\r\n    InheritParent = 'SameWithParent',\r\n    VariablesExpression = 'VariablesExpression',\r\n    AutoCreation = 'AutoGenerateDownBill',\r\n}","export enum SubProcessType {\r\n    Dynamic = \"Dynamic\",\r\n    Specified = \"Specified\",\r\n}","import { BillSourceType } from \"./BillSourceType\";\r\nimport { SubProcessType } from \"./SubProcessType\";\r\n\r\nexport class CallActivitySubProcess {\r\n    calledBizDefKey: string;\r\n    calledBizDefName: string;\r\n    calledElement: string;\r\n    calledElementName: string;\r\n    bizDataId: string;\r\n    inheritVariables: boolean;\r\n    inheritBizDataId: boolean;\r\n    useAutoCreationData: boolean;\r\n    aifProcessCode: string;\r\n    aifProcessName: string;\r\n    subProcessType: SubProcessType = SubProcessType.Specified;\r\n    billSourceType: BillSourceType = BillSourceType.InheritParent;\r\n}\r\n","export class BifMonitorConstant {\r\n    static readonly bifMonitorAppId: string = \"BillIntegrationFrameworkRT\";\r\n    static readonly bifManagerAppEntrance: string = \"bif-manager\";\r\n    \r\n    static readonly bifDiagnostorFuncId: string = \"BifDiagnostor\";\r\n    static readonly bifManagerFuncId: string = \"BifManager\";\r\n}\r\n\r\n","export enum BifMetadataType {\r\n    BifCreationProcess = \"BifCreationProcess\",\r\n    BifWritebackProcess = \"BifWritebackProcess\",\r\n}","import { JsonConvertableImpl, BpmnModelJsonHelper } from '@edp-bif/common-api';\r\nimport { BifMetadataType } from './BifMetadataType';\r\nimport { IShowEntity } from './IShowEntity';\r\n\r\nexport abstract class AbstractShowEntity extends JsonConvertableImpl implements IShowEntity {\r\n    id: string;\r\n    code: string;\r\n    name: string;\r\n    upBillVoName: string;\r\n    downBillVoName: string;\r\n    bifMetadataType: BifMetadataType;\r\n    lastModifiedTime: Date;\r\n    parentId: string;\r\n    sysInit: boolean = false;\r\n    originId: string;\r\n    rootId: string;\r\n\r\n    protected ResetBeforeLoadFrom(): void {\r\n        super.ResetBeforeLoadFrom();\r\n\r\n        this.id = null;\r\n        this.code = null;\r\n        this.name = null;\r\n        this.upBillVoName = null;\r\n        this.downBillVoName = null;\r\n        this.parentId = null;\r\n        this.bifMetadataType = null;\r\n        this.lastModifiedTime = null;\r\n        this.sysInit = false;\r\n        this.originId = null;\r\n        this.rootId = null;\r\n    }\r\n\r\n    public ConvertToJsonObject(): {} {\r\n        let obj = super.ConvertToJsonObject();\r\n\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"id\", this.id);\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"code\", this.code);\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"name\", this.name);\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"upBillVoName\", this.upBillVoName);\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"downBillVoName\", this.downBillVoName);\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"parentId\", this.parentId);\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"bifMetadataType\", this.bifMetadataType);\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"lastModifiedTime\", this.lastModifiedTime);\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"sysInit\", this.sysInit);\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"originId\", this.originId);\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"rootId\", this.rootId);\r\n\r\n        return obj;\r\n    }\r\n\r\n    public LoadFromJsonObject(obj: {}): void {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.id = BpmnModelJsonHelper.GetAttributeValueAsString(obj, \"id\");\r\n        this.code = BpmnModelJsonHelper.GetAttributeValueAsString(obj, \"code\");\r\n        this.name = BpmnModelJsonHelper.GetAttributeValueAsString(obj, \"name\");\r\n        this.upBillVoName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, \"upBillVoName\");\r\n        this.downBillVoName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, \"downBillVoName\");\r\n        this.parentId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, \"parentId\");\r\n        this.bifMetadataType = BifMetadataType[BpmnModelJsonHelper.GetAttributeValueAsString(obj, \"bifMetadataType\")];\r\n        this.lastModifiedTime = BpmnModelJsonHelper.GetAttributeValueAsDateTime(obj, \"lastModifiedTime\");\r\n        this.sysInit = BpmnModelJsonHelper.GetAttributeValueAsBoolean(obj, \"sysInit\");\r\n        this.originId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, \"originId\");\r\n        this.rootId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, \"rootId\");\r\n    }\r\n}","import { BpmnModelJsonHelper } from '@edp-bif/common-api';\r\nimport { IRtShowEntity } from './IRtShowEntity';\r\nimport { AbstractShowEntity } from './AbstractShowEntity';\r\n\r\nexport class RtShowEntity extends AbstractShowEntity implements IRtShowEntity {\r\n    isEnabled: boolean;\r\n\r\n    protected ResetBeforeLoadFrom(): void {\r\n        super.ResetBeforeLoadFrom();\r\n\r\n        this.isEnabled = false;\r\n    }\r\n\r\n    public ConvertToJsonObject(): {} {\r\n        let obj = super.ConvertToJsonObject();\r\n\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"isEnabled\", this.isEnabled);\r\n\r\n        return obj;\r\n    }\r\n\r\n    public LoadFromJsonObject(obj: {}): void {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.isEnabled = BpmnModelJsonHelper.GetAttributeValueAsBoolean(obj, \"isEnabled\");\r\n    }\r\n}","import { BpmnModelJsonHelper } from '@edp-bif/common-api';\r\nimport { RtShowEntity } from './RtShowEntity';\r\n\r\nexport class RtShowEntitiesWithCustomization extends RtShowEntity {\r\n    isEnabled: boolean;\r\n    customizationEntities: Array<RtShowEntitiesWithCustomization> = new Array();\r\n\r\n    protected ResetBeforeLoadFrom(): void {\r\n        super.ResetBeforeLoadFrom();\r\n\r\n        this.isEnabled = false;\r\n        this.customizationEntities.length = 0;\r\n    }\r\n\r\n    public ConvertToJsonObject(): {} {\r\n        let obj = super.ConvertToJsonObject();\r\n\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"isEnabled\", this.isEnabled);\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"customizationEntities\", this.customizationEntities);\r\n\r\n        return obj;\r\n    }\r\n\r\n    public LoadFromJsonObject(obj: {}): void {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.isEnabled = BpmnModelJsonHelper.GetAttributeValueAsBoolean(obj, \"isEnabled\");\r\n        this.customizationEntities = BpmnModelJsonHelper.GetAttributeValueAsList(obj, \"customizationEntities\", RtShowEntitiesWithCustomization);\r\n    }\r\n\r\n    protected getTClass() {\r\n        return RtShowEntitiesWithCustomization;\r\n    }\r\n}","import { JsonConvertableImpl, BpmnModelJsonHelper } from '@edp-bif/common-api';\r\nimport { RtShowEntitiesWithCustomization } from './RtShowEntitiesWithCustomization';\r\n\r\nexport class RtBillProcessListResult extends JsonConvertableImpl {\r\n    totalCount: number;\r\n    pageCount: number;\r\n    pageIndex: number;\r\n    pageSize: number;\r\n\r\n    entities: Array<RtShowEntitiesWithCustomization> = new Array();\r\n\r\n    protected ResetBeforeLoadFrom(): void {\r\n        super.ResetBeforeLoadFrom();\r\n\r\n        this.totalCount = 0;\r\n        this.pageCount = 0;\r\n        this.pageIndex = 0;\r\n        this.pageSize = 0;\r\n        this.entities.length = 0;\r\n    }\r\n\r\n    public ConvertToJsonObject(): {} {\r\n        let obj = super.ConvertToJsonObject();\r\n\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"totalCount\", this.totalCount);\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"pageCount\", this.pageCount);\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"pageIndex\", this.pageIndex);\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"pageSize\", this.pageSize);\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"entities\", this.entities);\r\n\r\n        return obj;\r\n    }\r\n\r\n    public LoadFromJsonObject(obj: {}): void {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.totalCount = BpmnModelJsonHelper.GetAttributeValueAsNumber(obj, \"totalCount\");\r\n        this.pageCount = BpmnModelJsonHelper.GetAttributeValueAsNumber(obj, \"pageCount\");\r\n        this.pageIndex = BpmnModelJsonHelper.GetAttributeValueAsNumber(obj, \"pageIndex\");\r\n        this.pageSize = BpmnModelJsonHelper.GetAttributeValueAsNumber(obj, \"pageSize\");\r\n        this.entities = BpmnModelJsonHelper.GetAttributeValueAsList(obj, \"entities\", RtShowEntitiesWithCustomization);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { AppOptions, FrameworkService, AppService } from '@gsp-sys/rtf-common';\r\nimport { IRtShowEntity } from '../entity/IRtShowEntity';\r\nimport { BifMonitorConstant } from '../entity/BifMonitorConstant';\r\nimport { ProcessFilterConditionArgs } from '../entity/ProcessFilterConditionArgs';\r\nimport { RtBillProcessListResult } from '../entity/RtBillProcessListResult';\r\nimport { RtShowEntity } from '../entity/RtShowEntity';\r\n\r\n@Injectable()\r\nexport class ProcessListHelpService {\r\n    private readonly baseUrl = \"/api/runtime/aif/v1.0/rtbillprocess\";\r\n\r\n    constructor(\r\n        private appService: AppService,\r\n        private frameworkService: FrameworkService,\r\n        private httpService: HttpService,\r\n    ) {\r\n    }\r\n\r\n    public openBifManagerApp(entity: IRtShowEntity) {\r\n        const map = new Map();\r\n        map.set(\"id\", entity.id);\r\n        map.set(\"type\", entity.bifMetadataType);\r\n        map.set(\"srcFuncId\", BifMonitorConstant.bifDiagnostorFuncId);\r\n        const opt: AppOptions = {\r\n            funcId: BifMonitorConstant.bifManagerFuncId,\r\n            appId: BifMonitorConstant.bifMonitorAppId,\r\n            appEntrance: BifMonitorConstant.bifManagerAppEntrance,\r\n            appType: \"menu\",\r\n            entityParams: {},\r\n            queryStringParams: map,\r\n            tabId: entity.id,\r\n            tabName: entity.name\r\n        };\r\n        this.frameworkService.openMenu(opt);\r\n    }\r\n\r\n    public getDatagridData(args: ProcessFilterConditionArgs): Observable<RtBillProcessListResult> {\r\n        const body = args.ConvertToJson();\r\n        let data$: Observable<any> = null;\r\n        //æä¸å¡ç§ç±»åæ°æ¶ä¸åé¡µ\r\n        if (args.bizType != null) {\r\n            data$ = this.httpService.post(`${this.baseUrl}/getpatch`, body);\r\n            return data$.pipe(\r\n                map(\r\n                    (res: any) => {\r\n                        const listRes = new RtBillProcessListResult();\r\n                        listRes.entities = res.map(elt => {\r\n                            const e = new RtShowEntity();\r\n                            e.LoadFromJsonObject(elt);\r\n                            return e;\r\n                        });\r\n                        return listRes;\r\n                    }\r\n                )\r\n            );\r\n        } else {\r\n            data$ = this.httpService.post(`${this.baseUrl}/getpagedpatch`, body);\r\n            return data$.pipe(\r\n                map(\r\n                    (res: any) => {\r\n                        const listRes = new RtBillProcessListResult();\r\n                        listRes.LoadFromJsonObject(res);\r\n                        return listRes;\r\n                    }\r\n                )\r\n            );\r\n        }\r\n    }\r\n}","import { BpmnModelJsonHelper, JsonConvertableImpl, TextValue } from '@edp-bif/common-api';\r\n\r\nexport class ProcessFilterConditionArgs extends JsonConvertableImpl {\r\n    name: TextValue;\r\n    upBillVoId: TextValue;\r\n    downBillVoId: TextValue;\r\n    isEnabled: TextValue;\r\n    billProcessType: TextValue;\r\n    sysInit: TextValue;\r\n    bizType: TextValue;\r\n    orderByCode: TextValue;\r\n    orderByName: TextValue;\r\n    OrderByLastModifiedTime: TextValue;\r\n    pageSize: number;\r\n    pageIndex: number;\r\n\r\n    protected ResetBeforeLoadFrom(): void {\r\n        super.ResetBeforeLoadFrom();\r\n\r\n        this.name = null;\r\n        this.upBillVoId = null;\r\n        this.downBillVoId = null;\r\n        this.isEnabled = null;\r\n        this.billProcessType = null;\r\n        this.sysInit = null;\r\n        this.bizType = null;\r\n        this.orderByCode = null;\r\n        this.orderByName = null;\r\n        this.OrderByLastModifiedTime = null;\r\n        this.pageSize = 0;\r\n        this.pageIndex = 0;\r\n    }\r\n\r\n    public ConvertToJsonObject(): {} {\r\n        let obj = super.ConvertToJsonObject();\r\n\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"name\", this.name);\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"upBillVoId\", this.upBillVoId);\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"downBillVoId\", this.downBillVoId);\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"isEnabled\", this.isEnabled);\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"billProcessType\", this.billProcessType);\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"sysInit\", this.sysInit);\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"bizType\", this.bizType);\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"orderByCode\", this.orderByCode);\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"orderByName\", this.orderByName);\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"OrderByLastModifiedTime\", this.OrderByLastModifiedTime);\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"pageSize\", this.pageSize);\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"pageIndex\", this.pageIndex);\r\n\r\n        return obj;\r\n    }\r\n\r\n    public LoadFromJsonObject(obj: {}): void {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.name = BpmnModelJsonHelper.GetAttributeValueAsJsonSerializable(obj, \"name\", TextValue);\r\n        this.upBillVoId = BpmnModelJsonHelper.GetAttributeValueAsJsonSerializable(obj, \"upBillVoId\", TextValue);\r\n        this.downBillVoId = BpmnModelJsonHelper.GetAttributeValueAsJsonSerializable(obj, \"downBillVoId\", TextValue);\r\n        this.isEnabled = BpmnModelJsonHelper.GetAttributeValueAsJsonSerializable(obj, \"isEnabled\", TextValue);\r\n        this.billProcessType = BpmnModelJsonHelper.GetAttributeValueAsJsonSerializable(obj, \"billProcessType\", TextValue);\r\n        this.sysInit = BpmnModelJsonHelper.GetAttributeValueAsJsonSerializable(obj, \"sysInit\", TextValue);\r\n        this.bizType = BpmnModelJsonHelper.GetAttributeValueAsJsonSerializable(obj, \"bizType\", TextValue);\r\n        this.orderByCode = BpmnModelJsonHelper.GetAttributeValueAsJsonSerializable(obj, \"orderByCode\", TextValue);\r\n        this.orderByName = BpmnModelJsonHelper.GetAttributeValueAsJsonSerializable(obj, \"orderByName\", TextValue);\r\n        this.OrderByLastModifiedTime = BpmnModelJsonHelper.GetAttributeValueAsJsonSerializable(obj, \"OrderByLastModifiedTime\", TextValue);\r\n        this.pageSize = BpmnModelJsonHelper.GetAttributeValueAsNumber(obj, \"pageSize\");\r\n        this.pageIndex = BpmnModelJsonHelper.GetAttributeValueAsNumber(obj, \"pageIndex\");\r\n    }\r\n}\r\n","export enum OrderByDirection {\r\n    Asc = \"Asc\",\r\n    Desc = \"Desc\",\r\n}","import { Pipe, PipeTransform, Inject, LOCALE_ID, InjectionToken } from '@angular/core';\r\n\r\nexport const BIF_LANG_RESOURCES = new InjectionToken(\"BIF_LANG_RESOURCES\");\r\n\r\n@Pipe({ name: 'aifLocale' })\r\nexport class AifLocalePipe implements PipeTransform {\r\n    private readonly defaultLang: string = \"zh-CHS\";\r\n    private langCode: string;\r\n    private lang: {};\r\n    private resources;\r\n    constructor(\r\n        @Inject(LOCALE_ID) localeId: string,\r\n        @Inject(BIF_LANG_RESOURCES) resources: any,\r\n    ) {\r\n        this.langCode = localeId || this.defaultLang;\r\n        this.resources = resources || {};\r\n        this.lang = resources[this.langCode] || resources[this.defaultLang] || {};\r\n    }\r\n    transform(name: string): any {\r\n        return this.lang[name] || name;\r\n    }\r\n\r\n    instant(name: string): any {\r\n        return this.transform(name);\r\n    }\r\n}\r\n\r\n","import { Component, OnInit, ViewChild, TemplateRef, EventEmitter, Inject, LOCALE_ID, Output, Input } from '@angular/core';\r\nimport { FarrisSectionComponent } from '@farris/ui-section';\r\nimport { ProcessListHelpService } from '../../services/process-list-help.service';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { NotifyService } from '@farris/ui-notify';\r\nimport { BsModalService, BsModalRef } from '@farris/ui-modal';\r\nimport { FrameworkService } from '@gsp-sys/rtf-common';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LoadingService } from '@farris/ui-loading';\r\nimport { Observable, of } from 'rxjs';\r\nimport { switchMap, catchError } from 'rxjs/operators';\r\nimport { IRtProcQueryParam } from '../../entity/IProcQueryParam';\r\nimport { BifMetadataType } from '../../entity/BifMetadataType';\r\nimport { ProcessFilterConditionArgs } from '../../entity/ProcessFilterConditionArgs';\r\nimport { TextValue } from '@edp-bif/common-api';\r\nimport { OrderByDirection } from '../../entity/OrderByDirection';\r\nimport { DatagridComponent } from '@farris/ui-datagrid';\r\nimport { RtBillProcessListResult } from '../../entity/RtBillProcessListResult';\r\nimport { AifLocalePipe } from '../../../aif-ui-common/pipe/aif-ui-common-locale.pipe';\r\n\r\n@Component({\r\n  selector: 'app-process-list-help',\r\n  templateUrl: './process-list-help.component.html',\r\n  styleUrls: ['./process-list-help.component.css']\r\n})\r\nexport class ProcessListHelpComponent implements OnInit {\r\n  @Output() closeModal = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n\r\n  @Input()\r\n  set value(data: any) {\r\n    if (data) {\r\n      this.processCode = data;\r\n    }\r\n  }\r\n\r\n  @Input() editorParams: {\r\n    bizTypeId?: string\r\n  } = {};\r\n\r\n  private processCode: string;\r\n  modalConfig = {\r\n    title: 'çåæµç¨éæ©',\r\n    width: 1250,\r\n    height: 500,\r\n    showButtons: true\r\n  };\r\n\r\n  procEmitter = new EventEmitter<any>();\r\n  queryParam: IRtProcQueryParam;\r\n\r\n  @ViewChild(\"tt\")\r\n  tt: DatagridComponent;\r\n  ttIdField: string = \"id\";\r\n  ttData: any[] = [];\r\n  ttColumns: any[] = [];\r\n  cascadeCheck = false;\r\n  cascadeDown = false;\r\n  cascadeUp = false;\r\n\r\n  @ViewChild('nameCellTemp')\r\n  nameCellTemp: TemplateRef<any>;\r\n\r\n  @ViewChild('iconSelectFooter')\r\n  modalFooter: TemplateRef<any>;\r\n\r\n  modalRef: BsModalRef;\r\n\r\n  readonly defaultPageSize: number = 30;\r\n  pageList = [this.defaultPageSize, 50, 100, 200, 500];\r\n\r\n  constructor(\r\n    private procHelpService: ProcessListHelpService,\r\n    private messager: MessagerService,\r\n    private notify: NotifyService,\r\n    private modalService: BsModalService,\r\n    private frameworkService: FrameworkService,\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private loading: LoadingService,\r\n    @Inject(LOCALE_ID) localeId: string,\r\n    private localePipe: AifLocalePipe,\r\n  ) {\r\n    this.queryParam = this.createDefaultQueryParam();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.configTtColumns();\r\n    if (this.editorParams && this.editorParams.bizTypeId) {\r\n      this.queryParam.filterArgs.bizType = new TextValue();\r\n      this.queryParam.filterArgs.bizType.value = this.editorParams.bizTypeId;\r\n      this.queryParam.filterArgs.bizType.hasValue = true;\r\n    }\r\n    this.loadItems(this.queryParam.filterArgs).subscribe(() => {\r\n      setTimeout(() => {\r\n        if (this.ttData && this.ttData.length > 0) {\r\n          const proc = this.processCode != null ? this.ttData.find((it) => it.code == this.processCode) : this.ttData[0];\r\n          proc && this.tt.selectRow(proc.id);\r\n        }\r\n      }, 300);\r\n    });\r\n  }\r\n\r\n  clickOk(evt?) {\r\n    if (this.tt.selectedRow == null) {\r\n      this.notify.warning(this.localePipe.transform(\"pleaseSelectOneItemOnly\"));\r\n      return;\r\n    }\r\n    this.procEmitter.emit(this.tt.selectedRow.data);\r\n    const object = { value: this.tt.selectedRow.data.code, parameters: null };\r\n    this.submitModal.emit(object);\r\n    this.modalRef && this.modalRef.close();\r\n  }\r\n\r\n  clickCancel(evt?) {\r\n    this.procEmitter.complete();\r\n    this.closeModal.emit();\r\n    this.modalRef && this.modalRef.close();\r\n  }\r\n\r\n  onSearch(param: any) {\r\n    this.queryParam = param;\r\n    console.log(this.queryParam);\r\n    this.loadItems(this.queryParam.filterArgs).subscribe(\r\n      () => {\r\n        this.tt.clearCheckeds();\r\n        this.tt.clearSelections();\r\n      }\r\n    );\r\n  }\r\n\r\n  clickNameCell(ctx) {\r\n    this.procHelpService.openBifManagerApp(ctx.rowData);\r\n  }\r\n\r\n  /**\r\n * åæåºåäºä»¶\r\n */\r\n  beforeSortColumn = (field: string, order: string) => {\r\n    let cols: string[] = field.split(\",\");\r\n    let orders: string[] = order.split(\",\");\r\n\r\n    //éç½®æåºæ¡ä»¶\r\n    this.queryParam.filterArgs.orderByCode = null;\r\n    this.queryParam.filterArgs.orderByName = null;\r\n    this.queryParam.filterArgs.OrderByLastModifiedTime = null;\r\n    //ä¾æ¬¡æ·»å æåºæ¡ä»¶\r\n    for (let i = 0; i < cols.length; i++) {\r\n      let orderBy = null;\r\n      if (orders[i] == \"asc\") {\r\n        orderBy = new TextValue();\r\n        orderBy.hasValue = true;\r\n        orderBy.value = OrderByDirection.Asc;\r\n      } else if (orders[i] == \"desc\") {\r\n        orderBy = new TextValue();\r\n        orderBy.hasValue = true;\r\n        orderBy.value = OrderByDirection.Desc;\r\n      }\r\n\r\n      if (cols[i] == \"code\") {\r\n        this.queryParam.filterArgs.orderByCode = orderBy;\r\n      } else if (cols[i] == \"name\") {\r\n        this.queryParam.filterArgs.orderByName = orderBy;\r\n      } else if (cols[i] == \"lastModifiedTime\") {\r\n        this.queryParam.filterArgs.OrderByLastModifiedTime = orderBy;\r\n      }\r\n    }\r\n\r\n    return this.loadItems(this.queryParam.filterArgs);\r\n  };\r\n\r\n  /**\r\n   * åæåºåäºä»¶\r\n   */\r\n  columnSorted(val) {\r\n    console.log(val);\r\n  }\r\n\r\n  onPageSizeChanged($event: { pageIndex: number, pageSize: number }) {\r\n    console.log('PageSize Changed:', $event);\r\n    let checkedIds = this.tt.checkeds.map(r => r.data.id);\r\n\r\n    this.queryParam.filterArgs.pageSize = $event.pageSize;\r\n    this.loadItems(this.queryParam.filterArgs).subscribe(\r\n      () => {\r\n        setTimeout(() => {\r\n          this.tt.checkRows(checkedIds);\r\n        }, 0);\r\n      }\r\n    );\r\n  }\r\n\r\n  onPageChanged($event: { pageIndex: number, pageSize: number }) {\r\n    console.log('PageNumber Changed:', $event);\r\n    let checkedIds = this.tt.checkeds.map(r => r.data.id);\r\n\r\n    this.queryParam.filterArgs.pageIndex = $event.pageIndex - 1;\r\n    this.queryParam.filterArgs.pageSize = $event.pageSize;\r\n    this.loadItems(this.queryParam.filterArgs).subscribe(\r\n      () => {\r\n        setTimeout(() => {\r\n          this.tt.checkRows(checkedIds);\r\n        }, 0);\r\n      }\r\n    );\r\n  }\r\n\r\n  pageChangeHandler($event) {\r\n    console.log($event);\r\n  }\r\n\r\n  pageSizeChangeHandler($event) {\r\n    console.log($event);\r\n  }\r\n\r\n  private loadItems(args: ProcessFilterConditionArgs): Observable<any> {\r\n    const loadingComp = this.loading.show({ message: this.localePipe.transform(\"loading\") });\r\n    return this.procHelpService.getDatagridData(args).pipe(\r\n      switchMap(\r\n        (listRes: RtBillProcessListResult) => {\r\n          this.ttData = [...listRes.entities];\r\n          //æ´æ°åé¡µä¿¡æ¯\r\n          this.tt.setPageIndex(listRes.pageIndex + 1);\r\n          this.tt.total = listRes.totalCount;\r\n          this.tt.pageSize = listRes.pageSize;\r\n          // this.page.setCurrentPage(this.paginationId, listRes.pageIndex + 1);\r\n          // this.page.setItemsPerPage(this.paginationId, listRes.pageSize);\r\n          // this.page.setTotalItems(this.paginationId, listRes.totalCount);\r\n\r\n          loadingComp.close();\r\n          return of(listRes);\r\n        }\r\n      ),\r\n      catchError(\r\n        (err) => {\r\n          loadingComp.close();\r\n          setTimeout(() => {\r\n            //todo ç¡®å®å¼å¸¸ç»æ, ç®åéç¨å¼å®¹åå¼æ¹å¼\r\n            this.messager.error(err.error == null ? err.message : (err.error.Message || err.error.message || err.message));\r\n          }, 300);\r\n          throw err;\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  private configTtColumns() {\r\n    this.ttColumns = [\r\n      // {\r\n      //   field: \"isEnabled\", title: this.localePipe.transform(\"enabledState\"), width: 100, sortable: false,\r\n      //   formatter: (value: boolean, rowData, rowIndex) => {\r\n      //     if (value == true) {\r\n      //       return this.localePipe.transform(\"enabled\");\r\n      //     } else if (value == false) {\r\n      //       return this.localePipe.transform(\"disabled\");\r\n      //     } else {\r\n      //       return \"-\";\r\n      //     }\r\n      //   }\r\n      // },\r\n      { field: \"code\", title: this.localePipe.transform(\"code\"), width: 120, sortable: true },\r\n      {\r\n        field: \"name\", title: this.localePipe.transform(\"name\"), width: 250, sortable: true,\r\n        template: this.nameCellTemp,\r\n      },\r\n      { field: \"upBillVoName\", title: this.localePipe.transform(\"upBill\"), width: 120, sortable: true },\r\n      { field: \"downBillVoName\", title: this.localePipe.transform(\"downBill\"), width: 120, sortable: true },\r\n      // {\r\n      //   field: \"bifMetadataType\", title: this.localePipe.transform(\"processType\"), width: 120, sortable: false,\r\n      //   formatter: (value: BifMetadataType, rowData, rowIndex) => {\r\n      //     if (value == BifMetadataType.BifCreationProcess) {\r\n      //       return this.localePipe.transform(\"creation\");\r\n      //     } else if (value == BifMetadataType.BifWritebackProcess) {\r\n      //       return this.localePipe.transform(\"writeback\");\r\n      //     } else {\r\n      //       return \"-\";\r\n      //     }\r\n      //   }\r\n      // },\r\n      // {\r\n      //   field: \"sysInit\", title: this.localePipe.transform(\"sysInit\"), width: 80, sortable: false,\r\n      //   formatter: (value: boolean, rowData, rowIndex) => {\r\n      //     if (value == true) {\r\n      //       return this.localePipe.transform(\"yes\");\r\n      //     } else if (value == false) {\r\n      //       return this.localePipe.transform(\"no\");\r\n      //     } else {\r\n      //       return \"-\";\r\n      //     }\r\n      //   }\r\n      // },\r\n      // {\r\n      //   field: null, title: this.localePipe.transform(\"isExtendProcess\"), width: 80, sortable: false,\r\n      //   formatter: (value: boolean, rowData, rowIndex) => {\r\n      //     if (rowData.parentId == null) {\r\n      //       return this.localePipe.transform(\"no\");\r\n      //     } else {\r\n      //       return this.localePipe.transform(\"yes\");\r\n      //     }\r\n      //   }\r\n      // },\r\n      // { field: \"businessType\", title: this.translateService.instant(\"businessType\"), width: 120 },\r\n      // { field: \"creator\", title: this.translateService.instant(\"creator\"), width: 120 },\r\n      // { field: \"createdTime\", title: this.translateService.instant(\"createdTime\"), width: 120 },\r\n      // { field: \"lastModifier\", title: this.translateService.instant(\"lastModifier\"), width: 120 },\r\n      // {\r\n      //   field: \"lastModifiedTime\", title: this.localePipe.transform(\"lastModifiedTime\"), width: 120, sortable: true,\r\n      //   formatter: {\r\n      //     type: 'datetime',\r\n      //     options: {\r\n      //       format: 'YYYY-MM-DD HH:mm:ss'\r\n      //     }\r\n      //   },\r\n      // },\r\n    ];\r\n  }\r\n\r\n  private createDefaultQueryParam() {\r\n    const queryParam = {\r\n      filterArgs: new ProcessFilterConditionArgs(),\r\n      filterArgsExt: {}\r\n    };\r\n\r\n    queryParam.filterArgs.pageSize = this.defaultPageSize;\r\n    queryParam.filterArgs.pageIndex = 0;\r\n    queryParam.filterArgs.OrderByLastModifiedTime = new TextValue();\r\n    queryParam.filterArgs.OrderByLastModifiedTime.value = OrderByDirection.Desc;\r\n    queryParam.filterArgs.OrderByLastModifiedTime.hasValue = true;\r\n    queryParam.filterArgs.billProcessType = new TextValue();\r\n    queryParam.filterArgs.billProcessType.value = BifMetadataType.BifCreationProcess;\r\n    queryParam.filterArgs.billProcessType.hasValue = true;\r\n    queryParam.filterArgs.isEnabled = new TextValue();\r\n    queryParam.filterArgs.isEnabled.value = \"true\";\r\n    queryParam.filterArgs.isEnabled.hasValue = true;\r\n\r\n\r\n    return queryParam;\r\n  }\r\n}\r\n","import { Component, OnInit, HostBinding, Input, Output, EventEmitter, ViewChild, TemplateRef, ComponentFactoryResolver, Injector } from '@angular/core';\r\nimport { TypeConverter } from '@farris/ui-property-panel';\r\nimport { CallActivitySubProcess } from '../call-activity-sub-process/call-activity-sub-process.entity';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { ProcessDeUtil } from '../../domain/process-de-util';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { Observable } from 'rxjs';\r\nimport { ProcessDesignerUIState } from '../../app/process-designer.uistate';\r\nimport { ExpressionService, InjectedType } from '@gsp-svc/expression';\r\nimport { ComboListComponent } from '@farris/ui-combo-list';\r\nimport { FarrisRadioGroupComponent } from '@farris/ui-forms';\r\nimport { IRtShowEntity } from '../../aif-process-list-help/entity/IRtShowEntity';\r\nimport { ProcessListHelpComponent } from '../../aif-process-list-help/components/process-list-help/process-list-help.component';\r\nimport { NotifyService } from '@farris/ui-notify';\r\nimport { BsModalService } from '@farris/ui-modal';\r\nimport { SubProcessType } from '../call-activity-sub-process/SubProcessType';\r\nimport { BillSourceType } from '../call-activity-sub-process/BillSourceType';\r\n\r\n@Component({\r\n  selector: 'lib-call-activity-sub-process2',\r\n  templateUrl: './call-activity-sub-process2.component.html',\r\n})\r\nexport class CallActivitySubProcess2Component implements OnInit {\r\n  @HostBinding('class')\r\n  cls = 'farris-main-area flex-column';\r\n\r\n  @Input() editorParams: {\r\n    bizTypeId?: string\r\n  } = {};\r\n\r\n  @Input() set value(v: CallActivitySubProcess) {\r\n    if (v) {\r\n      this.callActivitySubProcess = v;\r\n      // ä¸ºå­æµç¨ç±»åèµå¼\r\n      if (this.callActivitySubProcess.calledElement == null || this.callActivitySubProcess.calledElement == \"\") {\r\n        if (this.callActivitySubProcess.calledBizDefKey == null || this.callActivitySubProcess.calledBizDefKey == \"\") {\r\n          this.callActivitySubProcess.subProcessType = SubProcessType.Specified;\r\n        } else {\r\n          this.callActivitySubProcess.subProcessType = SubProcessType.Dynamic;\r\n        }\r\n      } else {\r\n        this.callActivitySubProcess.subProcessType = SubProcessType.Specified;\r\n      }\r\n      // ä¸ºåæ®æ¥æºç±»åèµå¼\r\n      if (this.callActivitySubProcess.inheritBizDataId === true) {\r\n        this.callActivitySubProcess.billSourceType = BillSourceType.InheritParent;\r\n      } else if (this.callActivitySubProcess.inheritBizDataId === false && this.callActivitySubProcess.useAutoCreationData === false) {\r\n        this.callActivitySubProcess.billSourceType = BillSourceType.VariablesExpression;\r\n      } else if (this.callActivitySubProcess.inheritBizDataId === false && this.callActivitySubProcess.useAutoCreationData === true) {\r\n        this.callActivitySubProcess.billSourceType = BillSourceType.AutoCreation;\r\n      }\r\n      this.getProcessDefKey(this.callActivitySubProcess.calledElement);\r\n      this.getFlowForm(this.callActivitySubProcess.calledBizDefKey);\r\n      this.getAifProcessName(this.callActivitySubProcess.aifProcessCode);\r\n    }\r\n  }\r\n  @Output() closeModal = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n  modalConfig = {\r\n    title: 'å­æµç¨è®¾ç½®',\r\n    width: 480,\r\n    height: 400,\r\n    showButtons: true\r\n  };\r\n\r\n  callActivitySubProcess: CallActivitySubProcess = new CallActivitySubProcess();\r\n\r\n  groupIcon = '<i class=\"f-icon f-icon-lookup\"></i>';\r\n\r\n  readonly subProcessType = SubProcessType;\r\n  readonly billSourceType = BillSourceType;\r\n  // @ViewChild(\"comboProcessType\")\r\n  // comboProcessType: ComboListComponent;\r\n  // comboProcessTypeIdField = \"value\";\r\n  // comboProcessTypeValueField = \"value\";\r\n  // comboProcessTypeTextField = \"text\";\r\n  // comboProcessTypeData = [\r\n  //   { value: \"Specified\", text: \"æå®å­æµç¨\" },\r\n  //   { value: \"Dynamic\", text: \"å¨æå­æµç¨\" },\r\n  // ];\r\n\r\n  // @ViewChild(\"comboBillSource\")\r\n  // comboBillSource: ComboListComponent;\r\n  // comboBillSourceIdField = \"value\";\r\n  // comboBillSourceValueField = \"value\";\r\n  // comboBillSourceTextField = \"text\";\r\n  // comboBillSourceData = [\r\n  //   { value: BillSourceType.InheritParent, text: 'ä¸ç¶æµç¨ç¸å' },\r\n  //   { value: BillSourceType.AutoCreation, text: 'èªå¨çæä¸æ¸¸åæ®' },\r\n  //   { value: BillSourceType.VariablesExpression, text: 'åéè¡¨è¾¾å¼' },\r\n  // ];\r\n\r\n  @ViewChild(\"radioGroupProcessType\")\r\n  radioGroupProcessType: FarrisRadioGroupComponent;\r\n  radioGroupProcessTypeData = [\r\n    { value: \"Specified\", name: \"æå®å­æµç¨\" },\r\n    { value: \"Dynamic\", name: \"å¨æå­æµç¨\" },\r\n  ];\r\n\r\n  @ViewChild(\"radioGroupBillSource\")\r\n  radioGroupBillSource: FarrisRadioGroupComponent;\r\n  radioGroupBillSourceData = [\r\n    { value: BillSourceType.InheritParent, name: 'ä¸ç¶æµç¨ç¸å' },\r\n    { value: BillSourceType.AutoCreation, name: 'èªå¨çæä¸æ¸¸åæ®' },\r\n    { value: BillSourceType.VariablesExpression, name: 'åéè¡¨è¾¾å¼' },\r\n  ];\r\n\r\n  constructor(\r\n    private notify: NotifyService,\r\n    private modalService: BsModalService,\r\n    private message: MessagerService,\r\n    private util: ProcessDeUtil,\r\n    private http: HttpService,\r\n    private designerState: ProcessDesignerUIState,\r\n    private expr: ExpressionService,\r\n    private cfr: ComponentFactoryResolver,\r\n    private inj: Injector,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n\r\n  clickOK() {\r\n    if (this.validator()) {\r\n      const object = { value: this.callActivitySubProcess, parameters: null };\r\n      this.submitModal.emit(object);\r\n    }\r\n  }\r\n\r\n  clickCancel() {\r\n    this.closeModal.emit();\r\n  }\r\n\r\n  processConfirm(args: any) {\r\n    if (args) {\r\n      this.callActivitySubProcess.calledElement = args.id;\r\n      this.callActivitySubProcess.calledElementName = args.name;\r\n    }\r\n  }\r\n\r\n  processTypeChange(val) {\r\n    console.log(val);\r\n    if (val == SubProcessType.Specified) {\r\n      this.callActivitySubProcess.calledBizDefKey = null;\r\n      this.callActivitySubProcess.calledBizDefName = null;\r\n    } else if (val == SubProcessType.Dynamic) {\r\n      this.callActivitySubProcess.calledElement = null;\r\n      this.callActivitySubProcess.calledElementName = null;\r\n    }\r\n  }\r\n\r\n  billSourceChange(val) {\r\n    console.log(val);\r\n    if (val == BillSourceType.InheritParent) {\r\n      this.callActivitySubProcess.inheritBizDataId = true;\r\n      this.callActivitySubProcess.useAutoCreationData = false;\r\n    } else if (val == BillSourceType.AutoCreation) {\r\n      this.callActivitySubProcess.inheritBizDataId = false;\r\n      this.callActivitySubProcess.useAutoCreationData = true;\r\n    } else if (val == BillSourceType.VariablesExpression) {\r\n      this.callActivitySubProcess.inheritBizDataId = false;\r\n      this.callActivitySubProcess.useAutoCreationData = false;\r\n    }\r\n  }\r\n\r\n  selectProcess() {\r\n    this.openProcHelp().subscribe(\r\n      (rte: IRtShowEntity) => {\r\n        if (rte == null) {\r\n          this.notify.warning(\"è¯·éä¸­ä¸æ¡çåæµç¨\");\r\n          return;\r\n        }\r\n        this.callActivitySubProcess.aifProcessCode = rte.code;\r\n        this.callActivitySubProcess.aifProcessName = rte.name;\r\n      }\r\n    );\r\n  }\r\n\r\n  clearProcess() {\r\n    this.callActivitySubProcess.aifProcessCode = null;\r\n    this.callActivitySubProcess.aifProcessName = null;\r\n  }\r\n\r\n  openProcHelp() {\r\n    const cmpF = this.cfr.resolveComponentFactory(ProcessListHelpComponent);\r\n    const cmpR = cmpF.create(this.inj, []);\r\n    cmpR.instance.editorParams = this.editorParams;\r\n    const modalRef = this.modalService.show(cmpR, {\r\n      title: \"çåæµç¨\",\r\n      width: 1250,\r\n      height: 500,\r\n      resizable: true,\r\n      buttons: [\r\n        {\r\n          text: \"ç¡®å®\",\r\n          cls: \"btn btn-primary\",\r\n          handle: (evt) => {\r\n            cmpR.instance.clickOk(evt);\r\n            modalRef.close();\r\n          }\r\n        },\r\n        {\r\n          text: \"åæ¶\",\r\n          cls: \"btn btn-secondary\",\r\n          handle: (evt) => {\r\n            cmpR.instance.clickCancel(evt);\r\n            modalRef.close();\r\n          }\r\n        }\r\n      ],\r\n      closed: () => {\r\n        modalRef.dialog.destroy();\r\n      }\r\n    });\r\n    cmpR.instance.modalRef = modalRef;\r\n\r\n    return cmpR.instance.procEmitter.asObservable();\r\n  }\r\n\r\n  clearProcessDef(args: any) {\r\n    this.callActivitySubProcess.calledElement = '';\r\n    this.callActivitySubProcess.calledElementName = '';\r\n  }\r\n\r\n  flowFormConfirm(args: any) {\r\n    if (args) {\r\n      this.callActivitySubProcess.calledBizDefKey = args.id;\r\n      this.callActivitySubProcess.calledBizDefName = args.name;\r\n    }\r\n  }\r\n  clearFlowForm(args: any) {\r\n    this.callActivitySubProcess.calledBizDefKey = '';\r\n    this.callActivitySubProcess.calledBizDefName = '';\r\n  }\r\n\r\n  setBizDataId() {\r\n    this.showExprHelp();\r\n  }\r\n\r\n  private showExprHelp() {\r\n    if (this.designerState.schemas.length > 0) {\r\n      for (const schema of this.designerState.schemas) {\r\n        this.expr.addSchema('Schema', schema);\r\n      }\r\n      if (this.designerState.schemas[0].entityTypes && this.designerState.schemas[0].entityTypes.length > 0) {\r\n        const entityType = this.designerState.schemas[0].entityTypes[0];\r\n        this.expr.addInjectedEntity(entityType.name, 'Schema',\r\n          entityType.name, InjectedType.EntityType);\r\n      }\r\n    }\r\n    const context = new Array();\r\n    if (this.designerState.procInstContext.length > 0) {\r\n      for (const variable of this.designerState.procInstContext) {\r\n        context.push(variable);\r\n        // this.expr.addContext(variable);\r\n      }\r\n    }\r\n    if (this.designerState.formalParameterContext.length > 0) {\r\n      for (const variable of this.designerState.formalParameterContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n        // this.expr.addContext(variable);\r\n      }\r\n    }\r\n    if (this.designerState.participantContext.length > 0) {\r\n      for (const variable of this.designerState.participantContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n        // this.expr.addContext(variable);\r\n      }\r\n    }\r\n    if (this.designerState.processVariableContext.length > 0) {\r\n      for (const variable of this.designerState.processVariableContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n        // this.expr.addContext(variable);\r\n      }\r\n    }\r\n    if (context.length > 0) {\r\n      for (const v of context) {\r\n        this.expr.addContext(v);\r\n      }\r\n    }\r\n    this.expr.addExpressionText(this.callActivitySubProcess.bizDataId);\r\n    this.expr.buildExpression().then((expressioninfo: string) => {\r\n      this.callActivitySubProcess.bizDataId = expressioninfo;\r\n    });\r\n  }\r\n\r\n  valueChange(bool: boolean) {\r\n    if (bool) {\r\n      this.callActivitySubProcess.bizDataId = null;\r\n    }\r\n  }\r\n\r\n  private validator(): boolean {\r\n    if (!this.callActivitySubProcess.inheritBizDataId && !this.callActivitySubProcess.useAutoCreationData && !this.callActivitySubProcess.bizDataId) {\r\n      this.message.warning('å½å­æµç¨ä¸ç¶æµç¨åæ®ä¸ä¸è´æ¶ï¼è¯·è®¾ç½®å­æµç¨åæ®åç ï¼');\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  private getProcessDefKey(key: string) {\r\n    let url = this.util.getProcDefKeyWebApi();\r\n    if (key) {\r\n      url += `/${key}`;\r\n      this.http.get(url).subscribe((re: any) => {\r\n        this.callActivitySubProcess.calledElementName = re.name;\r\n      });\r\n    }\r\n  }\r\n  private getFlowForm(id: string) {\r\n    let url = this.util.getFlowFormWebApi();\r\n    if (id) {\r\n      url += `/${id}`;\r\n      this.http.get(url).subscribe((re: any) => {\r\n        this.callActivitySubProcess.calledBizDefName = re.name;\r\n      });\r\n    }\r\n  }\r\n\r\n  getAifProcessName(code: string) {\r\n    if (code != null && code != \"\") {\r\n      this.http.request(\"GET\", `/api/runtime/aif/v1.0/rtbillcreationprocess/getname/${code}`, { responseType: 'text' }).subscribe(\r\n        (res: any) => {\r\n          this.callActivitySubProcess.aifProcessName = res;\r\n        },\r\n        (err) => {\r\n          setTimeout(() => {\r\n            //todo ç¡®å®å¼å¸¸ç»æ, ç®åéç¨å¼å®¹åå¼æ¹å¼\r\n            this.message.error(err.error == null ? err.message : (err.error.Message || err.error.message || err.message));\r\n          }, 300);\r\n          throw err;\r\n        });\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport class CallActivitySubProcess2Converter implements TypeConverter {\r\n  constructor() { }\r\n\r\n  convertTo(data: any): string {\r\n    if (data && (data.calledBizDefKey || data.calledElement)) {\r\n      return 'ï¼å·²è®¾ç½®ï¼';\r\n    }\r\n    return 'ï¼æªè®¾ç½®ï¼';\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ProcessDesignerUIState } from './process-designer.uistate';\r\nimport { ElementPropertyConfig, PropertyEntity } from '@farris/ui-property-panel';\r\nimport { ResourceKeys } from '../model/resourceKeys';\r\nimport { CallActivitySubProcessComponent, CallActivitySubProcessConverter } from '../views/call-activity-sub-process/call-activity-sub-process.component';\r\nimport { BackwardRuleComponent, BackwardRuleConverter } from '../views/backward-rule/backward-rule.component';\r\nimport { VariableSettingComponent, VariableSettingConverter } from '../views/variable-setting/variable-setting.component';\r\nimport { CallActivitySubProcess2Component, CallActivitySubProcess2Converter } from '../views/call-activity-sub-process2/call-activity-sub-process2.component';\r\n\r\n@Injectable()\r\n\r\nexport class SubProcessViewModel {\r\n    constructor(private uiState: ProcessDesignerUIState) {\r\n\r\n    }\r\n    setProperty(obj: any) {\r\n        this.uiState.propertyData = obj.propertyData;\r\n        this.uiState.propertyConfig = this.setConfig(obj.propertyConfig);\r\n    }\r\n\r\n    private setConfig(obj: any[]): ElementPropertyConfig[] {\r\n        const propertyConfig: ElementPropertyConfig[] = [];\r\n        if (obj) {\r\n            obj.forEach((element: ElementPropertyConfig) => {\r\n                this.setEntity(element.properties);\r\n                propertyConfig.push(element);\r\n            });\r\n        }\r\n        return propertyConfig;\r\n    }\r\n    private setEntity(obj: PropertyEntity[]) {\r\n        if (obj && obj.length > 0) {\r\n            obj.forEach((item: PropertyEntity) => {\r\n                switch (item.propertyID) {\r\n                    case ResourceKeys.callActivitySubProcess: // åä¸è\r\n                        // item.editor = CallActivitySubProcessComponent;\r\n                        // item.converter = new CallActivitySubProcessConverter();\r\n                        item.editor = CallActivitySubProcess2Component;\r\n                        item.converter = new CallActivitySubProcess2Converter();\r\n                        item.editorParams = {\r\n                            bizTypeId: this.uiState.flowFormInfo.flowForm.businessObjectId,\r\n                        };\r\n                        break;\r\n                    case ResourceKeys.BackWardRule:\r\n                        item.editor = BackwardRuleComponent;\r\n                        item.converter = new BackwardRuleConverter();\r\n                        item.editorParams = {\r\n                            nodeType: 'CallActivitySubProcess'\r\n                        };\r\n                        break;\r\n                    case ResourceKeys.variableSettings: // åéè®¾ç½®\r\n                        item.editor = VariableSettingComponent;\r\n                        item.converter = new VariableSettingConverter();\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ProcessDesignerUIState } from './process-designer.uistate';\r\nimport { ElementPropertyConfig, PropertyEntity } from '@farris/ui-property-panel';\r\nimport { ResourceKeys } from '../model/resourceKeys';\r\nimport { ActivityComponentComponent, ActivityComponentConverter } from '../views/activity-component/activity-component.component';\r\nimport { VariableSettingComponent, VariableSettingConverter } from '../views/variable-setting/variable-setting.component';\r\n\r\n@Injectable()\r\n\r\nexport class AutoActivityAdapter {\r\n    constructor(private uiState: ProcessDesignerUIState) {\r\n\r\n    }\r\n    setProperty(obj: any) {\r\n        this.uiState.propertyData = obj.propertyData;\r\n        this.uiState.propertyConfig = this.setConfig(obj.propertyConfig);\r\n    }\r\n\r\n    private setConfig(obj: any[]): ElementPropertyConfig[] {\r\n        const propertyConfig: ElementPropertyConfig[] = [];\r\n        if (obj) {\r\n            obj.forEach((element: ElementPropertyConfig) => {\r\n                this.setEntity(element.properties);\r\n                propertyConfig.push(element);\r\n            });\r\n        }\r\n        return propertyConfig;\r\n    }\r\n    private setEntity(obj: PropertyEntity[]) {\r\n        if (obj && obj.length > 0) {\r\n            obj.forEach((item: PropertyEntity) => {\r\n                switch (item.propertyID) {\r\n                    case ResourceKeys.Tools: // åä¸è\r\n                        item.editor = ActivityComponentComponent;\r\n                        item.converter = new ActivityComponentConverter();\r\n                        item.editorParams = {\r\n                            location: 'autoActivity'\r\n                        };\r\n                        break;\r\n                    case ResourceKeys.variableSettings: // åéè®¾ç½®\r\n                        item.editor = VariableSettingComponent;\r\n                        item.converter = new VariableSettingConverter();\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n","\r\nexport class EventDefinition {\r\n    Id: string;\r\n    name: string;\r\n    triggerAction = 'Pass';\r\n    Async = false;\r\n    SignalRef: string;\r\n    constructor() { }\r\n}\r\n","import { Component, OnInit, HostBinding, Output, EventEmitter, Input, ViewChild, TemplateRef, Injector } from '@angular/core';\r\nimport { DatagridComponent } from '@farris/ui-datagrid';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { ProcessDeUtil } from '../../domain/process-de-util';\r\nimport { EventDefinition } from './event-definition.entity';\r\nimport { EditorTypes } from '@farris/ui-datagrid-editors';\r\nimport { TypeConverter } from '@farris/ui-property-panel';\r\n\r\n@Component({\r\n  selector: 'lib-event-definition',\r\n  templateUrl: './event-definition.component.html',\r\n  styleUrls: ['./event-definition.component.scss']\r\n})\r\nexport class EventDefinitionComponent implements OnInit {\r\n  @HostBinding('class')\r\n  cls = 'farris-main-area flex-column';\r\n\r\n  @Output() closeModal = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n\r\n  @Input()\r\n  set value(items: any[]) {\r\n    if (items && items.length > 0) {\r\n      for (const item of items) {\r\n        const event = new EventDefinition();\r\n        event.Id = item.Id;\r\n        event.name = item.name;\r\n        event.triggerAction = item.triggerAction;\r\n        event.Async = item.Async;\r\n        event.SignalRef = item.SignalRef;\r\n        this.data.push(event);\r\n      }\r\n    }\r\n  }\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n  @ViewChild('grid') grid: DatagridComponent;\r\n\r\n  modalConfig = {\r\n    title: 'ä¿¡å·å®ä¹',\r\n    width: 560,\r\n    height: 420,\r\n    showButtons: true\r\n  };\r\n\r\n  triggerActionCollection: any[] = [\r\n    { text: 'æ­£å', value: 'Pass' },\r\n    { text: 'åå', value: 'Back' },\r\n    { text: 'ç»æ­¢', value: 'Abort' }];\r\n\r\n  columns = new Array();\r\n  data = new Array<EventDefinition>();\r\n\r\n  constructor(\r\n    private message: MessagerService,\r\n    private util: ProcessDeUtil,\r\n    private injector: Injector\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.columns = [{\r\n      field: 'SignalRef', width: 100, title: 'ä¿¡å·ç¼å·',\r\n      editor: { type: EditorTypes.TEXTBOX, options: {} },\r\n      validators: [\r\n        { type: 'required', messager: 'å¿å¡«' }\r\n      ]\r\n    },\r\n    {\r\n      field: 'name', width: 100, title: 'ä¿¡å·åç§°',\r\n      editor: { type: EditorTypes.TEXTBOX, options: {} },\r\n      validators: [\r\n        { type: 'required', messager: 'å¿å¡«' }\r\n      ]\r\n    },\r\n    {\r\n      field: 'triggerAction', width: 100, title: 'æµè½¬æ¹å',\r\n      formatter: {\r\n        type: 'enum',\r\n        options: { valueField: 'value', textField: 'text', data: this.triggerActionCollection }\r\n      },\r\n      editor: {\r\n        type: EditorTypes.COMBOLIST,\r\n        options: { valueField: 'value', textField: 'text', data: this.triggerActionCollection, idField: 'value', panelHeight: 'auto', showClear: false }\r\n      },\r\n      validators: [\r\n        { type: 'required', messager: 'å¿å¡«' }\r\n      ]\r\n    }];\r\n  }\r\n  add() {\r\n    const event = new EventDefinition();\r\n    event.Id = ProcessDeUtil.GenerateElementId();\r\n    this.data.push(event);\r\n    this.grid.loadData(this.data);\r\n  }\r\n  delete() {\r\n    this.grid.endCellEdit();\r\n    if (this.grid.selectedRow && this.grid.selectedRow.data) {\r\n      const i = this.data.findIndex(d => d.Id === this.grid.selectedRow.data.Id);\r\n      this.data.splice(i, 1);\r\n      this.grid.loadData(this.data);\r\n    } else {\r\n      this.message.info('å°æªéä¸­ä¸æ¡è§¦åäºä»¶ï¼');\r\n    }\r\n  }\r\n\r\n  clickOK() {\r\n    this.grid.endCellEdit();\r\n    if (this.validator()) {\r\n      const object = { value: this.data, parameters: null };\r\n      this.submitModal.emit(object);\r\n    }\r\n\r\n  }\r\n\r\n  clickCancel() {\r\n    this.closeModal.emit();\r\n  }\r\n\r\n  private validator(): boolean {\r\n    if (this.data.length === 0) {\r\n      this.message.info('è³å°éè¦ä¸ä¸ªä¿¡å·å®ä¹ï¼è¯·äºè§£ï¼');\r\n      return false;\r\n    } else {\r\n      for (const d of this.data) {\r\n        if (!d.SignalRef) {\r\n          this.message.info('ä¿¡å·ç¼å·ä¸åè®¸ä¸ºç©ºï¼');\r\n          return false;\r\n        } else if (!d.name) {\r\n          this.message.info('ä¿¡å·åç§°ä¸åè®¸ä¸ºç©ºï¼');\r\n          return false;\r\n        }\r\n      }\r\n      if (this.data.length > 1) {\r\n        for (let i = 0; i < this.data.length; i++) {\r\n          const code1 = this.data[i].SignalRef;\r\n          for (let j = i + 1; j < this.data.length; j++) {\r\n            const code2 = this.data[j].SignalRef;\r\n\r\n            if (code1 === code2) {\r\n              this.message.warning(`ä¿¡å·ç¼å·ä¸åè®¸éå¤ï¼`);\r\n              return false;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n}\r\n\r\nexport class EventDefinitionConverter implements TypeConverter {\r\n  constructor() { }\r\n\r\n  convertTo(data: any[]): string {\r\n    if (data && data.length > 0) {\r\n      return 'ï¼å·²è®¾ç½®ï¼';\r\n    } else {\r\n      return 'ï¼æªè®¾ç½®ï¼';\r\n    }\r\n  }\r\n}\r\n","import { ProcessDesignerUIState } from './process-designer.uistate';\r\nimport { Injectable, Injector } from '@angular/core';\r\nimport { ElementPropertyConfig, PropertyEntity } from '@farris/ui-property-panel';\r\nimport { ResourceKeys } from '../model/resourceKeys';\r\nimport { BackwardRuleComponent, BackwardRuleConverter } from '../views/backward-rule/backward-rule.component';\r\nimport { EventDefinitionComponent, EventDefinitionConverter } from '../views/event-definition/event-definition.component';\r\nimport { VariableSettingComponent, VariableSettingConverter } from '../views/variable-setting/variable-setting.component';\r\n\r\n@Injectable()\r\n\r\nexport class CatchEventAdapter {\r\n    constructor(\r\n        private uiState: ProcessDesignerUIState,\r\n        private injector: Injector\r\n    ) { }\r\n    setProperty(obj: any) {\r\n        this.uiState.propertyData = obj.propertyData;\r\n        this.uiState.propertyConfig = this.setConfig(obj.propertyConfig);\r\n    }\r\n\r\n    private setConfig(obj: any[]): ElementPropertyConfig[] {\r\n        const propertyConfig: ElementPropertyConfig[] = [];\r\n        if (obj) {\r\n            obj.forEach((element: ElementPropertyConfig) => {\r\n                this.setEntity(element.properties);\r\n                propertyConfig.push(element);\r\n            });\r\n        }\r\n        return propertyConfig;\r\n    }\r\n    private setEntity(obj: PropertyEntity[]) {\r\n        if (obj && obj.length > 0) {\r\n            obj.forEach((item: PropertyEntity) => {\r\n                switch (item.propertyID) {\r\n                    case ResourceKeys.BackWardRule:\r\n                        item.editor = BackwardRuleComponent;\r\n                        item.converter = new BackwardRuleConverter();\r\n                        item.editorParams = {\r\n                            nodeType: 'CallActivitySubProcess'\r\n                        };\r\n                        break;\r\n                    case ResourceKeys.eventDefinitions:\r\n                        item.editor = EventDefinitionComponent;\r\n                        item.converter = new EventDefinitionConverter();\r\n                        break;\r\n                    case ResourceKeys.variableSettings: // åéè®¾ç½®\r\n                        item.editor = VariableSettingComponent;\r\n                        item.converter = new VariableSettingConverter();\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ProcessDesignerUIState } from './process-designer.uistate';\r\nimport { ElementPropertyConfig, PropertyEntity } from '@farris/ui-property-panel';\r\nimport { ResourceKeys } from '../model/resourceKeys';\r\nimport { MessageNoticeComponent, MessageNoticeConverter } from '../views/message-notice/message-notice.component';\r\nimport { VariableSettingComponent, VariableSettingConverter } from '../views/variable-setting/variable-setting.component';\r\n\r\n@Injectable()\r\n\r\nexport class MessageActivityAdapter {\r\n    constructor(private uiState: ProcessDesignerUIState) {\r\n\r\n    }\r\n    setProperty(obj: any) {\r\n        this.uiState.propertyData = obj.propertyData;\r\n        this.uiState.propertyConfig = this.setConfig(obj.propertyConfig);\r\n    }\r\n\r\n    private setConfig(obj: any[]): ElementPropertyConfig[] {\r\n        const propertyConfig: ElementPropertyConfig[] = [];\r\n        if (obj) {\r\n            obj.forEach((element: ElementPropertyConfig) => {\r\n                this.setEntity(element.properties);\r\n                propertyConfig.push(element);\r\n            });\r\n        }\r\n        return propertyConfig;\r\n    }\r\n    private setEntity(obj: PropertyEntity[]) {\r\n        if (obj && obj.length > 0) {\r\n            obj.forEach((item: PropertyEntity) => {\r\n                switch (item.propertyID) {\r\n                    case ResourceKeys.messageNotice: // åä¸è\r\n                        item.editor = MessageNoticeComponent;\r\n                        item.converter = new MessageNoticeConverter();\r\n                        item.editorParams = {\r\n                            location: 'messageActivity'\r\n                        };\r\n                        break;\r\n                    case ResourceKeys.variableSettings: // åéè®¾ç½®\r\n                        item.editor = VariableSettingComponent;\r\n                        item.converter = new VariableSettingConverter();\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n","export class ProcessInfo {\r\n    /**\r\n     * ä¸å¡æ´»å¨ID\r\n     */\r\n    bizObjId: string;\r\n    /**\r\n     * Key\r\n     */\r\n    processKey: string;\r\n    /**\r\n     * æµç¨åç§°\r\n     */\r\n    processName: string;\r\n    /**\r\n     * æµç¨ç¼å·\r\n     */\r\n    processCode: string;\r\n    /**\r\n     * æµç¨åç±»ID\r\n     */\r\n    flowFormId: string;\r\n    /**\r\n     * æµç¨åç±»åç§°\r\n     */\r\n    flowFormName: string;\r\n    /**\r\n     * æµç¨ç±»å\r\n     */\r\n    startMode?: string;\r\n    /**\r\n     * æµç¨ç»ç»\r\n     */\r\n    procOrg?: ProcessOrganization;\r\n    /**\r\n     * è®¿é®çº§å«\r\n     */\r\n    accessLevel?: string;\r\n}\r\n\r\n\r\nexport class ProcessOrganization {\r\n    orgName: string;\r\n    orgId: string;\r\n}\r\n","export class AuditProcessDefInfo {\r\n    auditId: AuditEvent;\r\n    success: boolean;\r\n    processDefKey: string;\r\n}\r\n\r\nexport enum AuditEvent {\r\n    WF_ProcessDef_SaveDT = 'WF_ProcessDef_SaveDT',\r\n    WF_ProcessDef_SaveRT = 'WF_ProcessDef_SaveRT',\r\n    WF_ProcessDef_Deploy = 'WF_ProcessDef_Deploy',\r\n    WF_ProcessDef_Import = 'WF_ProcessDef_Import',\r\n    WF_ProcessDef_Export = 'WF_ProcessDef_Export',\r\n    WF_ProcessDef_SyncDT = 'WF_ProcessDef_SyncDT'\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ProcessDesignerUIState } from './process-designer.uistate';\r\nimport { ElementPropertyConfig, PropertyEntity } from '@farris/ui-property-panel';\r\nimport { ResourceKeys } from '../model/resourceKeys';\r\nimport { MessageNoticeComponent, MessageNoticeConverter } from '../views/message-notice/message-notice.component';\r\nimport { PerformerComponent, PerformerConverter } from '../views/performer/performer.component';\r\nimport { ExecuteFormsComponent, ExecuteFormsConverter } from '../views/execute-forms/execute-forms.component';\r\nimport { ExtendPropertyComponent, ExtendPropertyConverter } from '../views/extend-property/extend-property.component';\r\n\r\n@Injectable()\r\nexport class NotifyActivityAdapter {\r\n    constructor(private uiState: ProcessDesignerUIState) {\r\n\r\n    }\r\n    setProperty(obj: any) {\r\n        this.uiState.propertyData = obj.propertyData;\r\n        this.uiState.propertyConfig = this.setConfig(obj.propertyConfig);\r\n    }\r\n\r\n    private setConfig(obj: any[]): ElementPropertyConfig[] {\r\n        const propertyConfig: ElementPropertyConfig[] = [];\r\n        if (obj) {\r\n            obj.forEach((element: ElementPropertyConfig) => {\r\n                this.setEntity(element.properties);\r\n                propertyConfig.push(element);\r\n            });\r\n        }\r\n        return propertyConfig;\r\n    }\r\n    private setEntity(obj: PropertyEntity[]) {\r\n        if (obj && obj.length > 0) {\r\n            obj.forEach((item: PropertyEntity) => {\r\n                switch (item.propertyID) {\r\n                    case ResourceKeys.ParticipantSchemes: // åä¸è\r\n                        item.editor = PerformerComponent;\r\n                        item.converter = new PerformerConverter();\r\n                        break;\r\n                    case ResourceKeys.wf_ExecuteForms_PC: // è¡¨åå®ä¹\r\n                        item.editor = ExecuteFormsComponent;\r\n                        item.converter = new ExecuteFormsConverter();\r\n                        item.editorParams = {\r\n                            location: 'notifyActivity',\r\n                            tab: 'web'\r\n                        };\r\n                        break;\r\n                    case ResourceKeys.wf_ExecuteForms_Mobile: // è¡¨åå®ä¹\r\n                        item.editor = ExecuteFormsComponent;\r\n                        item.converter = new ExecuteFormsConverter();\r\n                        item.editorParams = {\r\n                            location: 'notifyActivity',\r\n                            tab: 'mobile'\r\n                        };\r\n                        break;\r\n                    case ResourceKeys.messageNotice: // æ¶æ¯éç¥\r\n                        item.editor = MessageNoticeComponent;\r\n                        item.converter = new MessageNoticeConverter();\r\n                        item.editorParams = {\r\n                            location: 'activity'\r\n                        };\r\n                        break;\r\n                    default:\r\n                        item.editor = ExtendPropertyComponent;\r\n                        item.converter = new ExtendPropertyConverter();\r\n                        break;\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n","import { TypeConverter } from \"@farris/ui-property-panel\";\r\n\r\nexport class AifCreationBillProcessConverter implements TypeConverter {\r\n    constructor() { }\r\n\r\n    convertTo(data): string {\r\n        if (data) {\r\n            return data.name || data.code || 'ï¼å·²è®¾ç½®ï¼';\r\n        } else {\r\n            return 'ï¼æªè®¾ç½®ï¼';\r\n        }\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { ProcessDesignerUIState } from './process-designer.uistate';\r\nimport { ElementPropertyConfig, PropertyEntity } from '@farris/ui-property-panel';\r\nimport { ResourceKeys } from '../model/resourceKeys';\r\nimport { ProcessListHelpComponent } from '../aif-process-list-help/components/process-list-help/process-list-help.component';\r\nimport { AifCreationBillProcessConverter } from '../aif-process-list-help/AifCreationBillProcessConverter';\r\n\r\n@Injectable()\r\nexport class AifCreationBillActivityAdapter {\r\n    constructor(private uiState: ProcessDesignerUIState) {\r\n\r\n    }\r\n    setProperty(obj: any) {\r\n        this.uiState.propertyData = obj.propertyData;\r\n        this.uiState.propertyConfig = this.setConfig(obj.propertyConfig);\r\n    }\r\n\r\n    private setConfig(obj: any[]): ElementPropertyConfig[] {\r\n        const propertyConfig: ElementPropertyConfig[] = [];\r\n        if (obj) {\r\n            obj.forEach((element: ElementPropertyConfig) => {\r\n                this.setEntity(element.properties);\r\n                propertyConfig.push(element);\r\n            });\r\n        }\r\n        return propertyConfig;\r\n    }\r\n    private setEntity(obj: PropertyEntity[]) {\r\n        if (obj && obj.length > 0) {\r\n            obj.forEach((item: PropertyEntity) => {\r\n                switch (item.propertyID) {\r\n                    case ResourceKeys.aifProcessCode: // åæ®æµç¼å·\r\n                        item.editor = ProcessListHelpComponent;\r\n                        item.converter = new AifCreationBillProcessConverter();\r\n                        item.editorParams = {\r\n                            bizTypeId: this.uiState.flowFormInfo.flowForm.businessObjectId\r\n                        };\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n","import { Injectable, Injector, ComponentFactoryResolver } from '@angular/core';\r\nimport { ProcessDesignerUIState } from './process-designer.uistate';\r\nimport { ProcessDesignerDataService } from '../domain/process-designer.dataservice';\r\nimport { forkJoin } from 'rxjs/observable/forkJoin';\r\nimport { Observable } from 'rxjs/observable';\r\nimport { ProcessClrTypeID } from '../model/process-clrtypeId';\r\nimport { BpmnProcessViewModel } from './bpmn-process.viewmodel';\r\nimport { WFFlowElementsViewModel } from './wf-flowElements.viewModel';\r\nimport { NotifyService, NotifyOptions } from '@farris/ui-notify';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { map, switchMap } from 'rxjs/operators';\r\nimport { FlowFormInfo } from '../domain/entities/flowform-info';\r\nimport { of, Subject, from } from 'rxjs';\r\nimport { BsModalService } from '@farris/ui-modal';\r\nimport { SaveAsEditComponent } from '../views/save-as-edit/save-as-edit.component';\r\nimport { ProcessDeUtil } from '../domain/process-de-util';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { SubProcessViewModel } from './sub-process.viewmodel';\r\nimport { AutoActivityAdapter } from './auto-activity.adapter';\r\nimport { CatchEventAdapter } from './catch-event.adapter';\r\nimport { MessageActivityAdapter } from './message-activity.adapter';\r\nimport { AuditEvent, AuditProcessDefInfo } from '../domain/entities/audit-processDef-info';\r\nimport { RTProcessInfo } from '../model/rt-process-info';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { ProcessInfo } from '../model/process-info';\r\nimport { NotifyActivityAdapter } from './notify-activity.adapter';\r\nimport { FlowFormEntity } from '../domain/entities/flowform.entity';\r\nimport { AifCreationBillActivityAdapter } from './aif-creation-bill-activity.adapter';\r\n\r\n\r\n@Injectable()\r\n\r\nexport class ProcessDesignerViewModel {\r\n\r\n    constructor(\r\n        public uiState: ProcessDesignerUIState,\r\n        private service: ProcessDesignerDataService,\r\n        private util: ProcessDeUtil,\r\n        private notify: NotifyService,\r\n        private message: MessagerService,\r\n        private process: BpmnProcessViewModel,\r\n        private activity: WFFlowElementsViewModel,\r\n        private subProcess: SubProcessViewModel,\r\n        private autoActAdapter: AutoActivityAdapter,\r\n        private catchEventAdapter: CatchEventAdapter,\r\n        private messageActAdapter: MessageActivityAdapter,\r\n        private notifyActAdapter: NotifyActivityAdapter,\r\n        private creationActAdapter: AifCreationBillActivityAdapter,\r\n        private modalService: BsModalService,\r\n        private injector: Injector,\r\n        private resolver: ComponentFactoryResolver,\r\n        private http: HttpService\r\n    ) { }\r\n\r\n    // åå§å è½½æµç¨å±æ§\r\n    initProcessProperty(obj: any) {\r\n        const pptData = obj.propertyData;\r\n        const ffId = pptData.EntryForm;\r\n        if (ffId) {\r\n            pptData.EntryForm = this.uiState.flowFormInfo.flowForm;\r\n            this.uiState.propertyConfig = this.process.setProcessConfig(obj.propertyConfig);\r\n            this.uiState.propertyData = pptData;\r\n        } else {\r\n            this.uiState.propertyConfig = this.process.setProcessConfig(obj.propertyConfig);\r\n            this.uiState.propertyData = pptData;\r\n        }\r\n    }\r\n    setProperty(obj: any) {\r\n        // æ´æ°å±æ§æ¡æ°æ®ä¸éç½®\r\n        const propertyData = obj.propertyData;\r\n        switch (propertyData.ClrTypeID) {\r\n            case ProcessClrTypeID.process:\r\n                this.process.setProcessProperty(obj);\r\n                break;\r\n            case ProcessClrTypeID.userActivity:\r\n                this.activity.setUserActivityProperty(obj);\r\n                break;\r\n            case ProcessClrTypeID.subProcess:\r\n                this.subProcess.setProperty(obj);\r\n                break;\r\n            case ProcessClrTypeID.autoActivity:\r\n                this.autoActAdapter.setProperty(obj);\r\n                break;\r\n            case ProcessClrTypeID.catchEvent:\r\n                this.catchEventAdapter.setProperty(obj);\r\n                break;\r\n            case ProcessClrTypeID.operationActivity:\r\n                this.activity.setUserActivityProperty(obj);\r\n                break;\r\n            case ProcessClrTypeID.messageActivity:\r\n                this.messageActAdapter.setProperty(obj);\r\n                break;\r\n            case ProcessClrTypeID.notifyActivity:\r\n                this.notifyActAdapter.setProperty(obj);\r\n                break;\r\n                case ProcessClrTypeID.aifCreationBillActivity:\r\n                    this.creationActAdapter.setProperty(obj);\r\n                    break;\r\n            default:\r\n                this.activity.setFlowElementProperty(obj);\r\n                break;\r\n        }\r\n    }\r\n    public updateSchemas() {\r\n        this.uiState.schemas = [];\r\n        if (this.uiState.flowFormInfo.formalParameters && this.uiState.flowFormInfo.formalParameters.length > 0) {\r\n            const schemaParams = this.uiState.flowFormInfo.formalParameters.filter(p => p.dataType === 'CDTSchema' && p.schemaMetadataId);\r\n            forkJoin(schemaParams.map(para => {\r\n                return this.service.getBusinessEntitybyId(para.schemaMetadataId);\r\n            })).subscribe(data => {\r\n                if (data && data.length > 0) {\r\n                    data.forEach((d: any) => {\r\n                        this.uiState.schemas.push(d);\r\n                    });\r\n                }\r\n            }, err => {\r\n                this.uiState.schemas = [];\r\n            });\r\n        } else {\r\n            this.uiState.schemas = [];\r\n        }\r\n    }\r\n\r\n    public getFlowFormInfoById(formId: string): Observable<FlowFormInfo> {\r\n        const $flowform = new Subject<FlowFormInfo>();\r\n        if (formId) {\r\n            forkJoin(this.service.GetFlowFormbyId(formId),\r\n                this.service.getParametersbyFlowFormKey(formId).pipe(\r\n                    map((params: any[]) => {\r\n                        this.setFormParamCxt(params);\r\n                        return params;\r\n                    })\r\n                ),\r\n                this.service.getComponentsbyFlowformkey(formId),\r\n                this.service.getExecuteFormbyFlowFormKey(formId),\r\n                this.service.getBizActivities(formId),\r\n                this.service.getCustomizeActions(formId)\r\n            ).subscribe((re: any[]) => {\r\n                const flowform = new FlowFormInfo();\r\n                flowform.flowForm = re[0];\r\n                flowform.formalParameters = re[1];\r\n                flowform.bizComponents = re[2].filter(cmp => cmp.ownerType !== 'Activity');\r\n                flowform.excuteForms = re[3];\r\n                flowform.bizActivities = re[4];\r\n                flowform.customizeActions = re[5];\r\n                this.uiState.flowFormInfo = flowform;\r\n                // this.updateCOs();\r\n                this.updateSchemas();\r\n                $flowform.next(flowform);\r\n            });\r\n        }\r\n        return $flowform.asObservable();\r\n    }\r\n\r\n    public getFormFormatsByBizCategory(): Observable<any> {\r\n        if (this.uiState.flowFormInfo.flowForm.businessObjectId) {\r\n            let url = `/api/runtime/wf/v1.0/formFormat/query?param=`;\r\n            let param = `{\"bizCategory\":\"${this.uiState.flowFormInfo.flowForm.businessObjectId}\"}`;\r\n            param = encodeURIComponent(param);\r\n            url += param;\r\n            return this.http.get(url);\r\n        } else {\r\n            return from(new Array());\r\n        }\r\n    }\r\n    /**\r\n     * ä¿å­æµç¨\r\n     * @param content æµç¨ä¸ä¸æ\r\n     */\r\n    saveProcess(content: string, processInfo: ProcessInfo, state: number): Observable<any> {\r\n        return this.service.saveProcess(content, processInfo, state);\r\n    }\r\n    /**\r\n     * åå¸æµç¨\r\n     * @param content æµç¨ä¸ä¸æ\r\n     */\r\n    deployProcess(content: string): Observable<any> {\r\n        return this.service.deployProcess(content);\r\n    }\r\n\r\n    auditProcessDef(auditId: AuditEvent, success: boolean, key: string) {\r\n        const info = new AuditProcessDefInfo();\r\n        info.auditId = auditId;\r\n        info.success = success;\r\n        info.processDefKey = key;\r\n\r\n        this.service.auditProcessDef(info);\r\n    }\r\n\r\n    /**\r\n     * ä¿å­è¿è¡æ¶æµç¨\r\n     * @param content æµç¨ä¸ä¸æ\r\n     */\r\n    saveRTProcess(content: string, procDefId: string): Observable<any> {\r\n        return this.service.saveRTProcess(content, procDefId);\r\n    }\r\n\r\n    saveAsProcess(process: any, processInfo: ProcessInfo) {\r\n        const compFactory = this.resolver.resolveComponentFactory(SaveAsEditComponent);\r\n        const compRef = compFactory.create(this.injector);\r\n        compRef.instance.procKey = process.DefaultProcess.Key;\r\n        compRef.instance.procName = process.DefaultProcess.Name + '_å¯æ¬';\r\n        compRef.instance.isAdministratorConfig = this.uiState.isAdministratorConfig;\r\n        compRef.instance.organizations = this.uiState.organizations;\r\n        compRef.instance.accessLevel = processInfo.accessLevel;\r\n        compRef.instance.organization = processInfo.procOrg.orgId;\r\n        compRef.instance.organizationName = processInfo.procOrg.orgName;\r\n        const modalOptions = {\r\n            title: 'å¦å­ä¸º',\r\n            width: 450, height: 400,\r\n            buttons: compRef.instance.btnRef,\r\n            showButtons: true\r\n        };\r\n        const dlg = this.modalService.show(compRef, modalOptions);\r\n        compRef.instance.submit.subscribe((re: any) => {\r\n            process.DefaultProcess.Name = re.procName;\r\n            const procInfo = new ProcessInfo();\r\n            procInfo.accessLevel = re.accessLevel;\r\n            procInfo.procOrg = {\r\n                orgId: re.organization,\r\n                orgName: re.organizationName\r\n            };\r\n            this.saveProcess(JSON.stringify(process), procInfo, 1).subscribe(r => {\r\n                this.notify.success({\r\n                    title: 'ç³»ç»æç¤º', msg: 'å¦å­ä¸ºæå', timeout: 3000\r\n                } as NotifyOptions);\r\n            }, err => {\r\n                this.notify.error({\r\n                    title: 'ç³»ç»æç¤º', msg: 'å¦å­ä¸ºå¤±è´¥ï¼è¯·æ£æ¥æµç¨æ¯å¦æ­£ç¡®ï¼', timeout: 3000\r\n                } as NotifyOptions);\r\n            });\r\n            dlg.close();\r\n        });\r\n        compRef.instance.cancel.subscribe(r => {\r\n            dlg.close();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * åæ­¥è®¾è®¡å¨æ¶æµç¨å®ä¹\r\n     */\r\n    syncDtProcess(content: string, rtProcessInfo: RTProcessInfo) {\r\n        if (content) {\r\n            const process = JSON.parse(content);\r\n            this.message.question('æ¯å¦å°å½åçæ¬æµç¨å®ä¹åæ­¥å°è®¾è®¡æ¶æµç¨å®ä¹åï¼', () => {\r\n                this.service.syncDtProcess(content, rtProcessInfo).subscribe((data) => {\r\n                    this.notify.success({\r\n                        title: 'ç³»ç»æç¤º', msg: 'åæ­¥æå', timeout: 3000\r\n                    } as NotifyOptions);\r\n                    this.auditProcessDef(AuditEvent.WF_ProcessDef_SyncDT, true, process.DefaultProcess.Key);\r\n                },\r\n                    (error: HttpErrorResponse) => {\r\n                        this.notify.error({\r\n                            title: 'ç³»ç»æç¤º', msg: 'åæ­¥å¤±è´¥ï¼è¯·èç³»ç®¡çåæ¥çåå ï¼', timeout: 3000\r\n                        } as NotifyOptions);\r\n                        this.auditProcessDef(AuditEvent.WF_ProcessDef_SyncDT, false, process.DefaultProcess.Key);\r\n                    });\r\n            });\r\n        }\r\n    }\r\n\r\n    beforeCompleteStrategyChange(data: any, processInfo: RTProcessInfo): Observable<boolean> {\r\n        const url = `/api/runtime/wf/v1.0/processInstances/runtimeActivityInstances?procDefId=${processInfo.rtProcDefId}&activityDefinitionId=${data.Id}`;\r\n        return this.http.get(url).pipe(\r\n            switchMap((re: any) => {\r\n                if (re && re.length > 0) {\r\n                    this.message.info('å½åèç¹å­å¨è¿è¡ä¸­çæ´»å¨å®ä¾ï¼ä¸åè®¸è°æ´å®æç­ç¥ï¼è¯·äºè§£ï¼');\r\n                    return of(false);\r\n                } else {\r\n                    return of(true);\r\n                }\r\n            })\r\n        );\r\n    }\r\n\r\n    public getProcessCategory(procCategoryId: string): Observable<FlowFormEntity> {\r\n        return this.service.GetFlowFormbyId(procCategoryId);\r\n    }\r\n\r\n    private setFormParamCxt(params: any[]) {\r\n        this.uiState.formalParameterContext = [];\r\n        if (params && params.length > 0) {\r\n            params.forEach(param => {\r\n                if (param.dataType === 'CDTSchema') {\r\n                    const formalParameterContext = [{\r\n                        key: `schemaId_${param.code}`,\r\n                        name: `schemaId_${param.name}`,\r\n                        description: `schemaId_${param.name}`\r\n                    }, {\r\n                        key: `metadataId_${param.code}`,\r\n                        name: `metadataId_${param.name}`,\r\n                        description: `metadataId_${param.name}`\r\n                    }];\r\n                    this.uiState.formalParameterContext = this.uiState.formalParameterContext.concat(formalParameterContext);\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n","import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'lib-note',\r\n  templateUrl: './note.component.html',\r\n  styleUrls: ['./note.component.scss']\r\n})\r\nexport class NoteComponent implements OnInit {\r\n\r\n  @ViewChild('footer') footer: TemplateRef<any>;\r\n\r\n  record: string;\r\n\r\n  submit = new Subject<string>();\r\n  cancel = new Subject<any>();\r\n\r\n  placeholder = 'è¯·è¾å¥æµç¨åæ´è®°å½';\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n\r\n  clickOK() {\r\n    this.submit.next(this.record);\r\n  }\r\n\r\n  clickCancel() {\r\n    this.cancel.next();\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Input, ViewChild, ElementRef, Injector, ComponentFactoryResolver, HostBinding, Output, EventEmitter } from '@angular/core';\r\nimport { ProcessTime } from './model/process-time';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { ProcessDesignerUIState } from './app/process-designer.uistate';\r\nimport { ResourceKeys } from './model/resourceKeys';\r\nimport { FlowFormInfo } from './domain/entities/flowform-info';\r\nimport { ProcessDesignerViewModel } from './app/process-designer.viewmodel';\r\nimport { BizComponentEntity } from './domain/entities/biz-component.entity';\r\nimport { ExecuteFormModel, TerminalType } from './views/execute-forms/entities/execute-form.entity';\r\nimport { ExcuteFormEntity } from './domain/entities/excute-form.entity';\r\nimport { ModalOptions, BsModalService } from '@farris/ui-modal';\r\nimport { BackWardRule } from './views/backward-rule/backward-rule.entity';\r\nimport { ProcessDesignerDataService } from './domain/process-designer.dataservice';\r\nimport { LoadingService } from '@farris/ui-loading';\r\nimport { NotifyService, NotifyOptions } from '@farris/ui-notify';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { WFFlowElementsViewModel } from './app/wf-flowElements.viewModel';\r\nimport { PostMessageData } from './model/postMessageData';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { PropertyPanelComponent } from '@farris/ui-property-panel';\r\nimport { SignRuleComponent } from './views/sign-rule/sign-rule.component';\r\nimport { ProcessInfo } from './model/process-info';\r\nimport { RTProcessInfo } from './model/rt-process-info';\r\nimport { Observable, of, forkJoin } from 'rxjs';\r\nimport { AuditEvent } from './domain/entities/audit-processDef-info';\r\nimport { NoteComponent } from './views/note/note.component';\r\nimport { ProcessDeUtil } from './domain/process-de-util';\r\nimport { FlowFormEntity } from './domain/entities/flowform.entity';\r\n\r\n\r\n@Component({\r\n  selector: 'wf-process-editor',\r\n  template: `\r\n  <div class=\"f-utils-flex-column h-100 m-2\">\r\n    <div class=\"flex-auto d-flex flex-fill flex-row\" style=\"position:relative; overflow: hidden\">\r\n      <div class=\"flex-grow-1\">\r\n        <div *ngIf=\"src\" class=\"h-100\">\r\n          <iframe #iframe class=\"bpmn-designer\" [src]=\"src\" frameborder=\"0\">\r\n          </iframe>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <app-property-panel #propertyPanel [(propertyConfig)]=\"uiState.propertyConfig\" [(propertyData)]=\"uiState.propertyData\"\r\n          width=\"235\" showCloseBtn=\"false\"></app-property-panel>\r\n      </div>\r\n    </div>\r\n  </div>`,\r\n  styles: [`\r\n    .bpmn-designer {\r\n      height: 100%;\r\n      min-height: 400px;\r\n      width: 100%;\r\n    }`\r\n  ]\r\n})\r\n\r\nexport class WfProcessEditorComponent implements OnInit {\r\n\r\n  /**\r\n   * æ¶æ¯çå¬å¤çæ¹æ³\r\n   */\r\n  private static func = null;\r\n\r\n  src: any;\r\n\r\n  private flag = true;\r\n\r\n  @HostBinding('class')\r\n  cls = 'farris-main-area flex-column';\r\n\r\n  private _time: ProcessTime;\r\n  @Input()\r\n  set time(t: ProcessTime) {\r\n    this._time = t;\r\n  }\r\n  get time(): ProcessTime {\r\n    return this._time;\r\n  }\r\n\r\n  @Input()\r\n  processInfo: ProcessInfo;\r\n\r\n  @Input()\r\n  rtProcessInfo: RTProcessInfo;\r\n\r\n  @Input()\r\n  action: 'view' | 'edit' = 'edit';\r\n\r\n  @Input()\r\n  mode: 'general' | 'simplify' = 'general';\r\n\r\n  @Output() close = new EventEmitter<any>();\r\n\r\n  @ViewChild('propertyPanel')\r\n  propertyPanel: PropertyPanelComponent;\r\n\r\n  @ViewChild('iframe')\r\n  iframe: ElementRef;\r\n\r\n  constructor(\r\n    private sanitizer: DomSanitizer,\r\n    public uiState: ProcessDesignerUIState,\r\n    private viewModel: ProcessDesignerViewModel,\r\n    private service: ProcessDesignerDataService,\r\n    private loadService: LoadingService,\r\n    private notify: NotifyService,\r\n    private message: MessagerService,\r\n    private activity: WFFlowElementsViewModel,\r\n    private injector: Injector,\r\n    private modalService: BsModalService,\r\n    private resolver: ComponentFactoryResolver,\r\n  ) {\r\n    // å¦æå­å¨æ¶æ¯çå¬ï¼åå æ\r\n    if (WfProcessEditorComponent.func) {\r\n      window.removeEventListener('message', WfProcessEditorComponent.func, false);\r\n    }\r\n    this.addMessageListener();\r\n    this.uiState.getAdministratorInfo();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getSrc();\r\n    this.uiState.initUIState();\r\n    this.showLoading();\r\n    this.updateProperty();\r\n    // è·åæ¶æ¯åè¡¨\r\n    this.uiState.getMessageChannels();\r\n  }\r\n\r\n  private getSrc() {\r\n    let processCategoryId: string;\r\n    if (this._time === ProcessTime.rt) {\r\n      processCategoryId = this.rtProcessInfo.flowFormId;\r\n    } else {\r\n      processCategoryId = this.processInfo.flowFormId;\r\n    }\r\n    this.viewModel.getProcessCategory(processCategoryId).subscribe((procCategory: FlowFormEntity) => {\r\n      this.src = '/platform/runtime/wf/web/designer/index.html';\r\n      if (this._time === ProcessTime.rt) {\r\n        this.src = this.src + '?time=rt';\r\n      } else {\r\n        this.src = this.src + `?time=dt`;\r\n        if(procCategory){\r\n          this.src = this.src + `&bizCategoryId=${procCategory.businessObjectId}`;\r\n        }\r\n      }\r\n      if (this.action === 'view') {\r\n        this.src = this.src + '&action=view';\r\n      } else {\r\n        this.src = this.src + '&action=edit';\r\n      }\r\n      if (this.mode === 'general') {\r\n        this.src = this.src + '&mode=general';\r\n      } else {\r\n        this.src = this.src + '&mode=simplify';\r\n      }\r\n      this.src = this.sanitizer.bypassSecurityTrustResourceUrl(this.src);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * æ·»å äºä»¶çå¬\r\n   */\r\n  private addMessageListener() {\r\n    window.addEventListener('message', this.eventHandler, false);\r\n    WfProcessEditorComponent.func = this.eventHandler;\r\n  }\r\n\r\n  /**\r\n   * çå¬äºä»¶å¤ç\r\n   */\r\n  eventHandler = (event) => {\r\n    const postData = event.data as PostMessageData;\r\n    if (this.uiState.POST_MESSAGE_TARGET.search(event.origin) > -1) {\r\n      switch (postData.action) {\r\n        case ResourceKeys.wf_initProperty:\r\n          if (this.flag) {\r\n            this.flag = false;\r\n            this.closeLoading();\r\n          }\r\n          this.viewModel.initProcessProperty(postData.data);\r\n          break;\r\n        case ResourceKeys.wf_save:\r\n          this.uiState.content = postData.data;\r\n          this.showLoading();\r\n          this.save();\r\n          break;\r\n        case ResourceKeys.wf_deploy:\r\n          this.uiState.content = postData.data;\r\n          this.showLoading();\r\n          this.viewModel.deployProcess(this.uiState.content).subscribe((data) => {\r\n            this.closeLoading();\r\n            this.viewModel.saveProcess(this.uiState.content, this.processInfo, 0).subscribe((r) => { });\r\n            this.notify.success({\r\n              title: 'ç³»ç»æç¤º', msg: 'åå¸æå', timeout: 3000\r\n            } as NotifyOptions);\r\n            const process = JSON.parse(this.uiState.content);\r\n            this.viewModel.auditProcessDef(AuditEvent.WF_ProcessDef_Deploy, true, process.DefaultProcess.Key);\r\n          },\r\n            (error: HttpErrorResponse) => {\r\n              this.closeLoading();\r\n              this.notify.error({\r\n                title: 'ç³»ç»æç¤º', msg: 'åå¸å¤±è´¥ï¼è¯·æ£æ¥æµç¨æ¯å¦æ­£ç¡®ï¼', timeout: 3000\r\n              } as NotifyOptions);\r\n              const process = JSON.parse(this.uiState.content);\r\n              this.viewModel.auditProcessDef(AuditEvent.WF_ProcessDef_Deploy, false, process.DefaultProcess.Key);\r\n            });\r\n          break;\r\n        case ResourceKeys.wf_saveAs:\r\n          const prcoess = postData.data;\r\n          this.viewModel.saveAsProcess(prcoess, this.processInfo);\r\n          break;\r\n        case ResourceKeys.wf_sync:\r\n          const content = postData.data;\r\n          this.viewModel.syncDtProcess(content, this.rtProcessInfo);\r\n          break;\r\n        case ResourceKeys.wf_note:\r\n          this.note(postData.data);\r\n          break;\r\n        case ResourceKeys.wf_closeDesigner:\r\n          this.close.emit();\r\n          break;\r\n        case ResourceKeys.getActivities: // è·åæ´»å¨èç¹ä¿¡æ¯\r\n          this.uiState.getUserActList(postData.data);\r\n          break;\r\n        case ResourceKeys.getEndEvents: // è·åææç»æèç¹ä¿¡æ¯\r\n          this.uiState.getEndEventList(postData.data);\r\n          break;\r\n        case 'loaded':\r\n          this.openProcContent();\r\n          break;\r\n        case ResourceKeys.wf_showTip:\r\n          this.showTip(postData.data);\r\n          break;\r\n        default:\r\n          this.viewModel.setProperty(postData.data);\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  private updateProperty(): boolean {\r\n    this.propertyPanel.propertyChanged.subscribe((data: any) => {\r\n      this.updateChangeProperty(data);\r\n    });\r\n    this.propertyPanel.submitModal.subscribe((data: any) => {\r\n      this.updateChangeProperty(data.changeObject);\r\n    });\r\n\r\n    return false; // é²æ­¢åæ³¡\r\n  }\r\n\r\n  /**\r\n   * æ´æ°å±æ§\r\n   */\r\n  private updateChangeProperty(data): any {\r\n    data.Id = this.uiState.propertyData.Id;\r\n    switch (data.propertyID) {\r\n      case ResourceKeys.EntryForm:\r\n        this.bindEntryFormInfo(data);\r\n        break;\r\n      case ResourceKeys.ApprovalItems:\r\n        this.sendMessage(ResourceKeys.updateProperty, JSON.stringify(data));\r\n        this.activity.buildCounterSignVariables(data.propertyValue);\r\n        break;\r\n      case ResourceKeys.CompleteStrategy:\r\n        this.beforeCompleteStrategyChange(data).subscribe(b => {\r\n          if (b) {\r\n            this.sendMessage(ResourceKeys.updateProperty, JSON.stringify(data));\r\n            this.completeStrategyChanged(data.propertyValue);\r\n          } else { // å·æ°å±æ§æ¡\r\n            this.sendMessage(ResourceKeys.refresh, JSON.stringify(data));\r\n          }\r\n        });\r\n        break;\r\n      case ResourceKeys.SignRule:\r\n        this.sendMessage(ResourceKeys.updateProperty, JSON.stringify(data));\r\n        break;\r\n      default:\r\n        this.sendMessage(ResourceKeys.updateProperty, JSON.stringify(data));\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * ç»å®æµç¨åç±»çåæ°åè¡¨ï¼æµç¨æä»¶ï¼è¡¨åèµå¼\r\n   * @param data\r\n   */\r\n  private bindEntryFormInfo(data) {\r\n    const flowformId: string = data.propertyValue.id;\r\n    if (flowformId) {\r\n      this.viewModel.getFlowFormInfoById(flowformId).subscribe((info: FlowFormInfo) => {\r\n        data.flowForm = info.flowForm;\r\n        data.formalParameters = info.formalParameters;\r\n        data.processBizComponnets = info.bizComponents;\r\n        data.executeForms = [];\r\n        info.excuteForms.forEach(form => {\r\n          if (form.isDefault) {\r\n            const executeForms = this.ConvertExecuteForm(form);\r\n            data.executeForms = data.executeForms.concat(executeForms); // æµç¨ç»å®é»è®¤åæ®\r\n          }\r\n        });\r\n        data.customizeActions = info.customizeActions.filter(a => a.isAll === true).map(a => ({\r\n          id: a.id, code: a.code, name: a.name, terminalType: a.terminal,\r\n          actualParameters: a.actualParameters.map(p => ({\r\n            Name: p.code, Value: p.value, ValueText: p.name, Tag: 'expression'\r\n          }))\r\n        }));\r\n        this.sendMessage(ResourceKeys.loadBizActivity, info.bizActivities || []);\r\n        this.sendMessage(ResourceKeys.updateProperty, JSON.stringify(data));\r\n      });\r\n    }\r\n  }\r\n\r\n  private note(record: string) {\r\n    const compFactory = this.resolver.resolveComponentFactory(NoteComponent);\r\n    const compRef = compFactory.create(this.injector);\r\n\r\n    compRef.instance.record = record;\r\n\r\n    const modalConfig: ModalOptions = {\r\n      title: 'æµç¨åæ´è®°å½',\r\n      width: 800,\r\n      height: 520,\r\n      showButtons: true,\r\n      buttons: compRef.instance.footer\r\n    };\r\n    const dialog = this.modalService.show(compRef, modalConfig);\r\n    compRef.instance.cancel.subscribe($event => dialog.close());\r\n    compRef.instance.submit.subscribe((data: string) => {\r\n      this.sendMessage(ResourceKeys.wf_note, data);\r\n      dialog.close();\r\n    });\r\n  }\r\n\r\n  private openProcContent() {\r\n    if (this.time === ProcessTime.dt) {\r\n      if (this.processInfo) {\r\n        if (this.processInfo.processKey === ResourceKeys.new && this.processInfo.flowFormId) {\r\n          this.openNewProcess(this.processInfo.flowFormId);\r\n        } else {\r\n          // TODOï¼é¦åè·åæµç¨åç±»ä¿¡æ¯ï¼ç¡®ä¿æµç¨åç±»åæµç¨æä»¶è·åå°ï¼ä¼ç¨å¾®å½±åè®¾è®¡å¨æå¼éåº¦ï¼\r\n          this.viewModel.getFlowFormInfoById(this.processInfo.flowFormId).subscribe((info: FlowFormInfo) => {\r\n            this.sendMessage(ResourceKeys.loadBizActivity, info.bizActivities || []);\r\n            this.getProcContent(this.processInfo.processKey).subscribe(re => {\r\n              this.uiState.content = this.checkModelContent(JSON.stringify(re));\r\n              this.sendMessage(ResourceKeys.open, {\r\n                content: this.uiState.content\r\n              });\r\n            });\r\n          });\r\n        }\r\n      } else {\r\n        throw new Error('ä¸å­å¨è®¾è®¡æ¶æµç¨ä¿¡æ¯ï¼è¯·åèµå¼ï¼');\r\n      }\r\n    } else if (this.time === ProcessTime.rt) {\r\n      if (this.rtProcessInfo) {\r\n        this.viewModel.getFlowFormInfoById(this.rtProcessInfo.flowFormId).subscribe((info: FlowFormInfo) => {\r\n          this.sendMessage(ResourceKeys.loadBizActivity, info.bizActivities || []);\r\n          this.getProcContent(this.rtProcessInfo.rtProcDefId).subscribe(re => {\r\n            this.uiState.content = this.checkModelContent(JSON.stringify(re));\r\n            this.sendMessage(ResourceKeys.open, {\r\n              content: this.uiState.content\r\n            });\r\n          });\r\n        });\r\n      } else {\r\n        throw new Error('ä¸å­å¨è¿è¡æ¶æµç¨ä¿¡æ¯ï¼è¯·åèµå¼ï¼');\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * æ°å¢æµç¨ï¼åºäºæµç¨åç±»è·ååæ°åè¡¨ï¼æä»¶åè¡¨å\r\n   * @param ffId æµç¨åç±»ID\r\n   */\r\n  private openNewProcess(ffId: string) {\r\n    this.viewModel.getFlowFormInfoById(ffId)\r\n      .subscribe((info: FlowFormInfo) => {\r\n        const processBizComponnets: BizComponentEntity[] = info.bizComponents;\r\n        const customizeActions = info.customizeActions.filter(a => a.isAll === true).map(a => ({\r\n          id: a.id, code: a.code, name: a.name, terminalType: a.terminal,\r\n          actualParameters: a.actualParameters.map(p => ({\r\n            Name: p.code, Value: p.value, ValueText: p.name, Tag: 'expression'\r\n          }))\r\n        }));\r\n        let executeForms: ExecuteFormModel[] = [];\r\n        info.excuteForms.forEach(form => {\r\n          if (form.isDefault) {\r\n            const forms = this.ConvertExecuteForm(form);\r\n            executeForms = executeForms.concat(forms); // æµç¨ç»å®é»è®¤åæ®\r\n          }\r\n        });\r\n        // å¦æä¸å­å¨è¡¨åå®ä¹ï¼éè¦å»è¡¨åæ ¼å¼åè¡¨åä¸ä¸\r\n        if (executeForms.length === 0\r\n          || executeForms.findIndex(e => e.TerminalType === TerminalType.PC) === -1\r\n          || executeForms.findIndex(e => e.TerminalType === TerminalType.MOBILE) === -1) {\r\n          this.viewModel.getFormFormatsByBizCategory().subscribe((formFormats: any[]) => {\r\n            if (formFormats && formFormats.length > 0) {\r\n              if (executeForms.findIndex(e => e.TerminalType === TerminalType.PC) === -1) {\r\n                const formFormat = formFormats.filter(f => f.terminal === 'PC' && f.status === 0)[0];\r\n                if (formFormat) {\r\n                  executeForms.push(this.formFormat2ExecuteForm(formFormat));\r\n                }\r\n              }\r\n              if (executeForms.findIndex(e => e.TerminalType === TerminalType.MOBILE) === -1) {\r\n                const formFormat = formFormats.filter(f => f.terminal === 'Mobile' && f.status === 0)[0];\r\n                if (formFormat) {\r\n                  executeForms.push(this.formFormat2ExecuteForm(formFormat));\r\n                }\r\n              }\r\n            }\r\n            this.sendMessage(ResourceKeys.loadBizActivity, info.bizActivities || []);\r\n            this.sendMessage(ResourceKeys.new, {\r\n              name: this.processInfo.processName,\r\n              bizObjId: this.processInfo.bizObjId,\r\n              ffId,\r\n              ffName: this.processInfo.flowFormName,\r\n              startMode: this.processInfo.startMode,\r\n              formalParameters: info.formalParameters,\r\n              processBizComponnets,\r\n              executeForms,\r\n              customizeActions,\r\n              processDescription: info.flowForm.processDescription\r\n            });\r\n          });\r\n        } else {\r\n          this.sendMessage(ResourceKeys.loadBizActivity, info.bizActivities || []);\r\n          this.sendMessage(ResourceKeys.new, {\r\n            name: this.processInfo.processName,\r\n            bizObjId: this.processInfo.bizObjId,\r\n            ffId,\r\n            ffName: this.processInfo.flowFormName,\r\n            startMode: this.processInfo.startMode,\r\n            formalParameters: info.formalParameters,\r\n            processBizComponnets,\r\n            executeForms,\r\n            customizeActions,\r\n            processDescription: info.flowForm.processDescription\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  // åå­é¡µé¢åéæ¶æ¯\r\n  private sendMessage(action: string, data: any): void {\r\n    const iframeWindow = this.iframe.nativeElement.contentWindow;\r\n    const message = this.wrapMessage(action, data);\r\n    iframeWindow.postMessage(message, this.uiState.POST_MESSAGE_TARGET);\r\n  }\r\n\r\n  // åè£æ¶æ¯åå®¹\r\n  private wrapMessage(action: string, data: any) {\r\n    return {\r\n      action,\r\n      data\r\n    };\r\n  }\r\n\r\n  private showTip(data: any) {\r\n    if (data.type === 'message') {\r\n      switch (data.level) {\r\n        case 'warning':\r\n          this.message.warning(data.message);\r\n          break;\r\n        case 'error':\r\n          this.message.error(data.message);\r\n          break;\r\n        default:\r\n          this.message.info(data.message);\r\n          break;\r\n      }\r\n    } else if (data.type === 'notify') {\r\n      switch (data.level) {\r\n        case 'warning':\r\n          this.notify.warning(data.message);\r\n          break;\r\n        case 'error':\r\n          this.notify.error(data.message);\r\n          break;\r\n        default:\r\n          this.notify.info(data.message);\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * è·åæµç¨ä¸ä¸æ\r\n   * @param id æµç¨å®ä¹IDï¼è®¾è®¡æ¶ä½¿ç¨æµç¨å®ä¹Keyï¼è¿è¡æ¶ä½¿ç¨æµç¨å®ä¹IDï¼\r\n   */\r\n  getProcContent(id: string): Observable<any> {\r\n    if (id) {\r\n      if (this.time === ProcessTime.dt) {\r\n        return this.service.getProcContentbyKey(id);\r\n      } else if (this.time === ProcessTime.rt) {\r\n        return this.service.getRTProcContentbyId(id);\r\n      } else {\r\n        throw new Error('è®¾è®¡å¨è¿è¡æ¶æºéè¯¯ï¼');\r\n      }\r\n    }\r\n  }\r\n\r\n  private save() {\r\n    const process = JSON.parse(this.uiState.content);\r\n    // this.uiState.content = this.checkModelContent(this.uiState.content);\r\n    this.saveHttp().subscribe((data) => {\r\n      this.closeLoading();\r\n      this.notify.success({\r\n        title: 'ç³»ç»æç¤º', msg: 'ä¿å­æå', timeout: 3000\r\n      } as NotifyOptions);\r\n      if (this.time === ProcessTime.dt) {\r\n        this.viewModel.auditProcessDef(AuditEvent.WF_ProcessDef_SaveDT, true, process.DefaultProcess.Key);\r\n      } else if (this.time === ProcessTime.rt) {\r\n        this.viewModel.auditProcessDef(AuditEvent.WF_ProcessDef_SaveRT, true, process.DefaultProcess.Key);\r\n      }\r\n    },\r\n      (error: HttpErrorResponse) => {\r\n        this.closeLoading();\r\n        this.notify.error({\r\n          title: 'ç³»ç»æç¤º', msg: 'ä¿å­å¤±è´¥ï¼è¯·æ£æ¥æµç¨æ¯å¦æ­£ç¡®ï¼', timeout: 3000\r\n        } as NotifyOptions);\r\n        if (this.time === ProcessTime.dt) {\r\n          this.viewModel.auditProcessDef(AuditEvent.WF_ProcessDef_SaveDT, false, process.DefaultProcess.Key);\r\n        } else if (this.time === ProcessTime.rt) {\r\n          this.viewModel.auditProcessDef(AuditEvent.WF_ProcessDef_SaveRT, false, process.DefaultProcess.Key);\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * ä¿å­æµç¨å®ä¹ï¼è®¾è®¡æ¶+è¿è¡æ¶ï¼\r\n   */\r\n  private saveHttp(): Observable<any> {\r\n    if (this.uiState.content) {\r\n      if (this.time === ProcessTime.dt) {\r\n        return this.viewModel.saveProcess(this.uiState.content, this.processInfo, 1);\r\n      } else if (this.time === ProcessTime.rt) {\r\n        return this.viewModel.saveRTProcess(this.uiState.content, this.rtProcessInfo.rtProcDefId);\r\n      } else {\r\n        throw new Error('è®¾è®¡å¨è¿è¡æ¶æºéè¯¯ï¼');\r\n      }\r\n    }\r\n  }\r\n\r\n  showLoading() {\r\n    this.loadService.show({ container: 'body', message: '', type: 1 });\r\n  }\r\n  closeLoading() {\r\n    this.loadService.close();\r\n  }\r\n\r\n  private ConvertExecuteForm(form: ExcuteFormEntity): ExecuteFormModel[] {\r\n    const executeForms = new Array();\r\n    if (form.terminal === 'web,app') {\r\n      const webForm = new ExecuteFormModel();\r\n      webForm.ComponentId = form.appId;\r\n      webForm.formFormatId = form.formFormatId;\r\n      webForm.FormType = form.formType;\r\n      webForm.Name = form.name;\r\n      webForm.TerminalType = TerminalType.PC;\r\n      if (form.actualParameters && form.actualParameters.length > 0) {\r\n        webForm.ActualParameters = form.actualParameters.map(p => ({\r\n          Name: p.code,\r\n          Value: p.value\r\n        }));\r\n      }\r\n      executeForms.push(webForm);\r\n      const appForm = new ExecuteFormModel();\r\n      appForm.ComponentId = form.appId;\r\n      appForm.formFormatId = form.formFormatId;\r\n      appForm.FormType = form.formType;\r\n      appForm.Name = form.name;\r\n      appForm.TerminalType = TerminalType.MOBILE;\r\n      if (form.actualParameters && form.actualParameters.length > 0) {\r\n        appForm.ActualParameters = form.actualParameters.map(p => ({\r\n          Name: p.code,\r\n          Value: p.value\r\n        }));\r\n      }\r\n      executeForms.push(appForm);\r\n    } else {\r\n      const executeForm = new ExecuteFormModel();\r\n      executeForm.ComponentId = form.appId;\r\n      executeForm.formFormatId = form.formFormatId;\r\n      executeForm.FormType = form.formType;\r\n      executeForm.Name = form.name;\r\n      switch (form.terminal) {\r\n        case 'web':\r\n          executeForm.TerminalType = TerminalType.PC;\r\n          break;\r\n        case 'app':\r\n          executeForm.TerminalType = TerminalType.MOBILE;\r\n          break;\r\n      }\r\n      if (form.actualParameters && form.actualParameters.length > 0) {\r\n        executeForm.ActualParameters = form.actualParameters.map(p => ({\r\n          Name: p.code,\r\n          Value: p.value\r\n        }));\r\n      }\r\n      executeForms.push(executeForm);\r\n    }\r\n    return executeForms;\r\n  }\r\n  private formFormat2ExecuteForm(formformat): ExecuteFormModel {\r\n    const form = new ExecuteFormModel();\r\n    form.Id = ProcessDeUtil.GenerateElementId();\r\n    form.ComponentId = null;\r\n    form.formFormatId = formformat.id;\r\n    form.FormType = '0';\r\n    form.Name = formformat.name;\r\n    switch (formformat.terminal) {\r\n      case 'PC':\r\n        form.TerminalType = TerminalType.PC;\r\n        break;\r\n      case 'Mobile':\r\n        form.TerminalType = TerminalType.MOBILE;\r\n        break;\r\n    }\r\n    if (formformat.urlParameters && formformat.urlParameters.length > 0) {\r\n      form.ActualParameters = formformat.urlParameters.map(p => ({\r\n        Name: p.code,\r\n        Value: p.value\r\n      }));\r\n    }\r\n    return form;\r\n  }\r\n\r\n  private completeStrategyChanged(strategy: string) {\r\n\r\n    if (strategy !== this.uiState.completeIterator[0].key) {\r\n\r\n      // åä¸èå­å¨èªå¨å®¡æ¹çæåµä¸ï¼ä¸åè®¸ä¿®æ¹å®æç­ç¥ä¸ºä¼ç­¾è§å\r\n      // if (this.uiState.propertyData.ParticipantSchemes\r\n      //   && this.uiState.propertyData.ParticipantSchemes.options\r\n      //   && this.uiState.propertyData.ParticipantSchemes.options.automaticPerformers\r\n      //   && this.uiState.propertyData.ParticipantSchemes.options.automaticPerformers.length > 0) {\r\n      //   return;\r\n      // } else {\r\n        // ä¼ç­¾è§åä¸å­å¨ï¼å³ç±æ¢å æ¨¡å¼ï¼åä¸ºä¼ç­¾æ¶\r\n        if (!this.uiState.propertyData.SignRule) {\r\n          // ä¼ç­¾æ¯èªå¨å¼¹åºä¼ç­¾è§åç¼è¾\r\n          const compFactory = this.resolver.resolveComponentFactory(SignRuleComponent);\r\n          const compRef = compFactory.create(this.injector);\r\n\r\n          compRef.instance.value = [];\r\n          // compRef.instance.counterSignVariables = this.uiState.counterSignVariables || [];\r\n          // compRef.instance.approvalItems = this.uiState.approvalItems || [];\r\n\r\n          const modalConfig: ModalOptions = Object.assign(compRef.instance.modalConfig,\r\n            { buttons: compRef.instance.modalFooter });\r\n          const dialog = this.modalService.show(compRef, modalConfig);\r\n          compRef.instance.closeModal.subscribe($event => dialog.close());\r\n          compRef.instance.submitModal.subscribe((data: any) => {\r\n            this.updateChangeProperty({\r\n              categoryId: 'performerProperty',\r\n              propertyID: ResourceKeys.SignRule,\r\n              propertyValue: data.value\r\n            });\r\n            dialog.close();\r\n          });\r\n        }\r\n        // ä¼ç­¾è§åä¸ï¼é©³åè§åçº¦æ\r\n        if ((this.uiState.propertyData.BackWardRule as BackWardRule).SelectTargetAble === true) {\r\n          setTimeout(() => {\r\n            this.message.warning('ä¼ç­¾ç­ç¥ä¸,âé©³åè§åâä¸åè®¸âå¨æéæ©é©³åçº§æ¬¡âï¼è¯·ä¿®æ¹ï¼');\r\n          }, 500);\r\n        }\r\n      // }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * å®æç­ç¥è°æ´æ ¡éª\r\n   */\r\n  private beforeCompleteStrategyChange(data: any): Observable<boolean> {\r\n    if (this.time === ProcessTime.rt) {\r\n      return this.viewModel.beforeCompleteStrategyChange(data, this.rtProcessInfo);\r\n    } else {\r\n      return of(true);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * ä¿å­ï¼åå¸ï¼å¦å­ï¼åæ­¥æä½æ¶\r\n   * æ ¡éªæ¨¡åçæµç¨åç±»IDä¸åè¡¨å­å¨æ¯å¦ä¸è´ï¼ä¸ä¸è´æ¶ï¼ä»¥åè¡¨ä¸ºå\r\n   */\r\n  private checkModelContent(content: string): string {\r\n    const process = JSON.parse(content);\r\n    const modelBizDefKey = process.DefaultProcess.extensionElements.find(e => e.ClrTypeID === 'wf.ProcessHeader').BizDefKey;\r\n    if (this.time === ProcessTime.dt) {\r\n      if (modelBizDefKey === this.processInfo.flowFormId) {\r\n        return content;\r\n      } else {\r\n        process.DefaultProcess.extensionElements.find(e => e.ClrTypeID === 'wf.ProcessHeader').BizDefKey = this.processInfo.flowFormId;\r\n        process.DefaultProcess.extensionElements.find(e => e.ClrTypeID === 'wf.ProcessHeader').BizDefName = this.uiState.flowFormInfo.flowForm.name;\r\n        return JSON.stringify(process);\r\n      }\r\n    } else if (this.time === ProcessTime.rt) {\r\n      if (modelBizDefKey === this.rtProcessInfo.flowFormId) {\r\n        return content;\r\n      } else {\r\n        process.DefaultProcess.extensionElements.find(e => e.ClrTypeID === 'wf.ProcessHeader').BizDefKey = this.rtProcessInfo.flowFormId;\r\n        process.DefaultProcess.extensionElements.find(e => e.ClrTypeID === 'wf.ProcessHeader').BizDefName = this.uiState.flowFormInfo.flowForm.name;\r\n        return JSON.stringify(process);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({name: 'jumpScopePipe'})\r\nexport class JumpScopePipe implements PipeTransform {\r\n    transform(value: any[], nodeId: string): any[] {\r\n        return value.filter(item => item.Id !== nodeId);\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { PerformerEntity } from '../../entities/performer.entity';\r\n\r\n@Pipe({ name: 'usersName' })\r\nexport class UsersNamePipe implements PipeTransform {\r\n    constructor() { }\r\n    transform(users: PerformerEntity[], defaultVal = ''): string {\r\n        let r = '';\r\n        users.forEach(u => {\r\n            r += u.performerName + 'ï¼';\r\n        });\r\n        if (r) {\r\n            r = r.substring(0, r.length - 1);\r\n        }\r\n        return r ? r : defaultVal;\r\n    }\r\n}\r\n","import { Provider } from '@angular/core';\r\nimport { ProcessDesignerUIState } from './app/process-designer.uistate';\r\nimport { ProcessDesignerViewModel } from './app/process-designer.viewmodel';\r\nimport { ProcessDesignerDataService } from './domain/process-designer.dataservice';\r\nimport { BpmnProcessViewModel } from './app/bpmn-process.viewmodel';\r\nimport { WFFlowElementsViewModel } from './app/wf-flowElements.viewModel';\r\nimport { SubProcessViewModel } from './app/sub-process.viewmodel';\r\nimport { AutoActivityAdapter } from './app/auto-activity.adapter';\r\nimport { CatchEventAdapter } from './app/catch-event.adapter';\r\nimport { MessageActivityAdapter } from './app/message-activity.adapter';\r\nimport { NotifyActivityAdapter } from './app/notify-activity.adapter';\r\nimport { AifCreationBillActivityAdapter } from './app/aif-creation-bill-activity.adapter';\r\n\r\nconst PROCESS_DESIGNER_APP_PROVIDERS: Provider[] = [\r\n    ProcessDesignerUIState,\r\n    ProcessDesignerViewModel,\r\n    BpmnProcessViewModel,\r\n    WFFlowElementsViewModel,\r\n    SubProcessViewModel,\r\n    AutoActivityAdapter,\r\n    CatchEventAdapter,\r\n    MessageActivityAdapter,\r\n    NotifyActivityAdapter,\r\n    AifCreationBillActivityAdapter,\r\n];\r\nexport {\r\n    ProcessDesignerUIState,\r\n    ProcessDesignerViewModel,\r\n    BpmnProcessViewModel,\r\n    WFFlowElementsViewModel,\r\n    SubProcessViewModel,\r\n    AutoActivityAdapter,\r\n    CatchEventAdapter,\r\n    MessageActivityAdapter,\r\n    NotifyActivityAdapter,\r\n    AifCreationBillActivityAdapter,\r\n    PROCESS_DESIGNER_APP_PROVIDERS,\r\n};\r\nconst PROCESS_DESIGNER_DOMAIN_PROVIDERS: Provider[] = [\r\n    ProcessDesignerDataService\r\n];\r\nexport {\r\n    ProcessDesignerDataService,\r\n    PROCESS_DESIGNER_DOMAIN_PROVIDERS\r\n};\r\nconst PROCESS_DESIGNER_PART_PROVIDERS: Provider[] = [\r\n];\r\nexport {\r\n    PROCESS_DESIGNER_PART_PROVIDERS\r\n};\r\n","import { Component, OnInit, HostBinding, Input, Output, EventEmitter, ViewChild, TemplateRef } from '@angular/core';\r\nimport { TypeConverter } from '@farris/ui-property-panel';\r\nimport { CallActivitySubProcess } from './call-activity-sub-process.entity';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { ProcessDeUtil } from '../../domain/process-de-util';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { Observable } from 'rxjs';\r\nimport { ProcessDesignerUIState } from '../../app/process-designer.uistate';\r\nimport { ExpressionService, InjectedType } from '@gsp-svc/expression';\r\n\r\n@Component({\r\n  selector: 'lib-call-activity-sub-process',\r\n  templateUrl: './call-activity-sub-process.component.html',\r\n  styleUrls: ['./call-activity-sub-process.component.scss']\r\n})\r\nexport class CallActivitySubProcessComponent implements OnInit {\r\n  @HostBinding('class')\r\n  cls = 'farris-main-area flex-column';\r\n\r\n  @Input() set value(v: CallActivitySubProcess) {\r\n    if (v) {\r\n      this.callActivitySubProcess = v;\r\n      this.getProcessDefKey(this.callActivitySubProcess.calledElement);\r\n      this.getFlowForm(this.callActivitySubProcess.calledBizDefKey);\r\n    }\r\n  }\r\n  @Output() closeModal = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n  modalConfig = {\r\n    title: 'å­æµç¨éé¡¹',\r\n    width: 480,\r\n    height: 360,\r\n    showButtons: true\r\n  };\r\n\r\n  callActivitySubProcess: CallActivitySubProcess = new CallActivitySubProcess();\r\n\r\n  groupIcon = '<i class=\"f-icon f-icon-lookup\"></i>';\r\n  constructor(\r\n    private message: MessagerService,\r\n    private util: ProcessDeUtil,\r\n    private http: HttpService,\r\n    private designerState: ProcessDesignerUIState,\r\n    private expr: ExpressionService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n\r\n  clickOK() {\r\n    if (this.validator()) {\r\n      const object = { value: this.callActivitySubProcess, parameters: null };\r\n      this.submitModal.emit(object);\r\n    }\r\n  }\r\n\r\n  clickCancel() {\r\n    this.closeModal.emit();\r\n  }\r\n\r\n  processConfirm(args: any) {\r\n    if (args) {\r\n      this.callActivitySubProcess.calledElement = args.id;\r\n      this.callActivitySubProcess.calledElementName = args.name;\r\n    }\r\n  }\r\n  clearProcessDef(args: any) {\r\n    this.callActivitySubProcess.calledElement = '';\r\n    this.callActivitySubProcess.calledElementName = '';\r\n  }\r\n\r\n  flowFormConfirm(args: any) {\r\n    if (args) {\r\n      this.callActivitySubProcess.calledBizDefKey = args.id;\r\n      this.callActivitySubProcess.calledBizDefName = args.name;\r\n    }\r\n  }\r\n  clearFlowForm(args: any) {\r\n    this.callActivitySubProcess.calledBizDefKey = '';\r\n    this.callActivitySubProcess.calledBizDefName = '';\r\n  }\r\n\r\n  setBizDataId() {\r\n    this.showExprHelp();\r\n  }\r\n\r\n  private showExprHelp() {\r\n    if (this.designerState.schemas.length > 0) {\r\n      for (const schema of this.designerState.schemas) {\r\n        this.expr.addSchema('Schema', schema);\r\n      }\r\n      if (this.designerState.schemas[0].entityTypes && this.designerState.schemas[0].entityTypes.length > 0) {\r\n        const entityType = this.designerState.schemas[0].entityTypes[0];\r\n        this.expr.addInjectedEntity(entityType.name, 'Schema',\r\n          entityType.name, InjectedType.EntityType);\r\n      }\r\n    }\r\n    const context = new Array();\r\n    if (this.designerState.procInstContext.length > 0) {\r\n      for (const variable of this.designerState.procInstContext) {\r\n        context.push(variable);\r\n        // this.expr.addContext(variable);\r\n      }\r\n    }\r\n    if (this.designerState.formalParameterContext.length > 0) {\r\n      for (const variable of this.designerState.formalParameterContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n        // this.expr.addContext(variable);\r\n      }\r\n    }\r\n    if (this.designerState.participantContext.length > 0) {\r\n      for (const variable of this.designerState.participantContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n        // this.expr.addContext(variable);\r\n      }\r\n    }\r\n    if (this.designerState.processVariableContext.length > 0) {\r\n      for (const variable of this.designerState.processVariableContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n        // this.expr.addContext(variable);\r\n      }\r\n    }\r\n    if (context.length > 0) {\r\n      for (const v of context) {\r\n        this.expr.addContext(v);\r\n      }\r\n    }\r\n    this.expr.addExpressionText(this.callActivitySubProcess.bizDataId);\r\n    this.expr.buildExpression().then((expressioninfo: string) => {\r\n      this.callActivitySubProcess.bizDataId = expressioninfo;\r\n    });\r\n  }\r\n\r\n  valueChange(bool: boolean) {\r\n    if (bool) {\r\n      this.callActivitySubProcess.bizDataId = null;\r\n    }\r\n  }\r\n\r\n  private validator(): boolean {\r\n    if (!this.callActivitySubProcess.inheritBizDataId && !this.callActivitySubProcess.bizDataId) {\r\n      this.message.warning('å½å­æµç¨ä¸ç¶æµç¨åæ®ä¸ä¸è´æ¶ï¼è¯·è®¾ç½®å­æµç¨åæ®åç ï¼');\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  private getProcessDefKey(key: string){\r\n    let url = this.util.getProcDefKeyWebApi();\r\n    if (key) {\r\n      url += `/${key}`;\r\n      this.http.get(url).subscribe((re: any) => {\r\n        this.callActivitySubProcess.calledElementName = re.name;\r\n      });\r\n    }\r\n  }\r\n  private getFlowForm(id: string) {\r\n    let url = this.util.getFlowFormWebApi();\r\n    if (id) {\r\n      url += `/${id}`;\r\n      this.http.get(url).subscribe((re: any) => {\r\n        this.callActivitySubProcess.calledBizDefName = re.name;\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport class CallActivitySubProcessConverter implements TypeConverter {\r\n  constructor() { }\r\n\r\n  convertTo(data: any): string {\r\n    if (data && (data.calledBizDefKey || data.calledElement)) {\r\n      return 'ï¼å·²è®¾ç½®ï¼';\r\n    }\r\n    return 'ï¼æªè®¾ç½®ï¼';\r\n  }\r\n}\r\n","export class FormFormat {\r\n    id: string;\r\n    code: string;\r\n    name: string;\r\n    bizCategory: string;\r\n    formUrl: string;\r\n    urlType: string;\r\n    formatType: string;\r\n    status: number;\r\n    urlParameters: Array<FormatParameter>;\r\n    formButtons: Array<FormButton>;\r\n    formFields: Array<FormFieldData>;\r\n}\r\n\r\nexport class FormFieldData {\r\n    data: FormField;\r\n    expanded: boolean;\r\n    leaf: boolean;\r\n    children: Array<FormFieldData>;\r\n}\r\n\r\nexport class FormatParameter {\r\n    code: string;\r\n    name: string;\r\n    value: string;\r\n}\r\n\r\nexport class FormButton {\r\n    id: string;\r\n    buttonId: string;\r\n    buttonName: string;\r\n    buttonState: string;\r\n    description: string;\r\n    sortOrder: number;\r\n    formFormatId: string;\r\n}\r\n\r\nexport class FormField {\r\n    id: string;\r\n    fieldId: string;\r\n    fieldName: string;\r\n    fieldState: string;\r\n    description: string;\r\n    sortOrder: number;\r\n    formFormatId: string;\r\n}\r\n","import { ProcessDeUtil } from '../../../domain/process-de-util';\r\nimport { FormMethodConfig } from './form-method-config';\r\n\r\nexport class FormFormatConfig {\r\n    constructor() {\r\n        this.id = ProcessDeUtil.createNM();\r\n        this.formMethodConfigs = new Array();\r\n    }\r\n    id: string;\r\n    code: string;\r\n    name: string;\r\n    formFormatId: string;\r\n    description: string;\r\n    formButtonConfigs: Array<FormButtonConfig>;\r\n    formFieldConfigs: Array<FormFieldConfig>;\r\n    formMethodConfigs: Array<FormMethodConfig>;\r\n}\r\n\r\nexport class FormButtonConfig {\r\n    buttonId: string;\r\n    buttonState: string;\r\n}\r\n\r\nexport class FormFieldConfig {\r\n    fieldId: string;\r\n    fieldState: string;\r\n}\r\n","import { ProcessDeUtil } from '../../../domain/process-de-util';\r\n\r\nexport const workFlowActions: any[] = [\r\n    { text: 'æ­£å', value: 'Forward' },\r\n    { text: 'åå', value: 'Backward' },\r\n    { text: 'ç»æ­¢', value: 'Abort' }\r\n];\r\nexport const executionTime = [\r\n    { text: 'æµè½¬å', value: 'Pre' },\r\n    { text: 'æµè½¬å', value: 'Post' }\r\n];\r\n\r\nexport class FormMethodConfig {\r\n    constructor() {\r\n        this.id = ProcessDeUtil.createNM();\r\n        this.workFlowAction = workFlowActions[0].value;\r\n        this.executionTime = executionTime[0].value;\r\n        this.sortOrder = 1;\r\n    }\r\n    id: string;\r\n    formFormatConfigId: string;\r\n    workFlowAction: string;\r\n    method: string;\r\n    executionTime: string;\r\n    sortOrder: number;\r\n    methodParameters: Array<any>;\r\n}\r\n\r\n\r\n","import { Component, OnInit, Input, ViewChild, TemplateRef, ComponentFactoryResolver, Injector } from '@angular/core';\r\nimport { EditorTypes } from '@farris/ui-datagrid-editors';\r\nimport { workFlowActions, executionTime, FormMethodConfig } from '../entities/form-method-config';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { FormMethod } from '../entities/form-method';\r\nimport { DialogComponent } from '@farris/ui-dialog';\r\nimport { DatagridComponent } from '@farris/ui-datagrid';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { BsModalService } from '@farris/ui-modal';\r\nimport { ParameterSettingComponent } from '../parameter-setting/parameter-setting.component';\r\n\r\n@Component({\r\n  selector: 'lib-form-operation-config',\r\n  templateUrl: './form-operation-config.component.html',\r\n  styleUrls: ['./form-operation-config.component.scss']\r\n})\r\nexport class FormOperationConfigComponent implements OnInit {\r\n  private _fromFormatId: string;\r\n  @Input()\r\n  set formFormatId(v: string) {\r\n    this._fromFormatId = v;\r\n    if (this._fromFormatId) {\r\n      this.getFormMethods();\r\n    }\r\n  }\r\n  get formFormatId() {\r\n    return this._fromFormatId;\r\n  }\r\n\r\n  @Input() formFormatConfigId: string;\r\n  @Input() operations = new Array<FormMethodConfig>();\r\n\r\n  @ViewChild('methodsDialog') methodsDialog: DialogComponent;\r\n  @ViewChild('grid') grid: DatagridComponent;\r\n  @ViewChild('methodGrid') methodGrid: DatagridComponent;\r\n  @ViewChild('cell') cell: TemplateRef<any>;\r\n\r\n  cols = new Array();\r\n\r\n  methodCols = [\r\n    { field: 'method', width: 100, title: 'æ¹æ³æ è¯', showTips: true },\r\n    { field: 'methodName', width: 80, title: 'æ¹æ³åç§°', showTips: true },\r\n    { field: 'description', width: 120, title: 'æè¿°', showTips: true }\r\n  ];\r\n  e: any;\r\n\r\n  formMethods = new Array<FormMethod>();\r\n  state: 'add' | 'edit' = 'add';\r\n\r\n  constructor(\r\n    private http: HttpService,\r\n    private message: MessagerService,\r\n    private resolver: ComponentFactoryResolver,\r\n    private injector: Injector,\r\n    private modalService: BsModalService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.cols = [\r\n    {\r\n      field: 'workFlowAction', width: 80, title: 'æµè½¬æ¹å',\r\n      formatter: {\r\n        type: 'enum',\r\n        options: { valueField: 'value', textField: 'text', data: workFlowActions }\r\n      },\r\n      editor: {\r\n        type: EditorTypes.COMBOLIST,\r\n        options: { valueField: 'value', textField: 'text', data: workFlowActions, idField: 'value', panelHeight: 'auto', enableClear: false }\r\n      },\r\n      validators: [\r\n        { type: 'required', messager: 'å¿å¡«' }\r\n      ]\r\n    }, {\r\n      field: 'method', width: 100, title: 'è¡¨åæä½',\r\n      editor: {\r\n        type: 'input-group',\r\n        options: {\r\n          groupText: '<i class=\"f-icon f-icon-lookup\"></i>',\r\n          editable: false,\r\n          clickHandle: (e) => {\r\n            e.formControl.setValue(e.instance.value ? e.instance.value : '');\r\n            this.e = e;\r\n            this.methodsDialog.show();\r\n            this.state = 'edit';\r\n          },\r\n          clear: (e) => {\r\n            console.log('clear', e);\r\n          }\r\n        }\r\n      },\r\n      formatter: (v, d, i) => {\r\n        if (v) {\r\n          const m = this.formMethods.find(item => item.method === v);\r\n          if (m) {\r\n            return m.methodName;\r\n          } else {\r\n            return '';\r\n          }\r\n        } else {\r\n          return '';\r\n        }\r\n      },\r\n      validators: [\r\n        { type: 'required', messager: 'å¿å¡«' }\r\n      ]\r\n    },\r\n    {\r\n      field: 'executionTime', width: 80, title: 'æ§è¡æ¶æº',\r\n      formatter: {\r\n        type: 'enum',\r\n        options: { valueField: 'value', textField: 'text', data: executionTime }\r\n      },\r\n      editor: {\r\n        type: EditorTypes.COMBOLIST,\r\n        options: { valueField: 'value', textField: 'text', data: executionTime, idField: 'value', panelHeight: 'auto', enableClear: false }\r\n      },\r\n      validators: [\r\n        { type: 'required', messager: 'å¿å¡«' }\r\n      ]\r\n    },\r\n    {\r\n      field: 'sortOrder', width: 60, title: 'æ§è¡é¡ºåº',\r\n      editor: {\r\n        type: EditorTypes.NUMBERBOX, options: {\r\n        }\r\n      },\r\n      formatter: { type: 'number', options: { precision: 0 } },\r\n      validators: [\r\n        { type: 'required', messager: 'å¿å¡«' }\r\n      ]\r\n    },\r\n    {\r\n      field: 'methodParameters', width: 80, title: 'åæ°',\r\n      template: this.cell,\r\n      halign: 'center', align: 'center'\r\n    }\r\n  ];\r\n  }\r\n\r\n  add() {\r\n    this.methodsDialog.show();\r\n    this.state = 'add';\r\n  }\r\n\r\n  delete() {\r\n    if (this.grid.selectedRow) {\r\n      this.operations = this.operations.filter(o => o.id !== this.grid.selectedRow.id);\r\n    } else {\r\n      this.message.info('å°æªéä¸­è¡¨åæä½éç½®ï¼');\r\n    }\r\n  }\r\n\r\n  editParam(ctx: any) {\r\n    const compFactory = this.resolver.resolveComponentFactory(ParameterSettingComponent);\r\n    const compRef = compFactory.create(this.injector);\r\n    compRef.instance.mode = 'usual';\r\n    compRef.instance.showFormType = false;\r\n    if (ctx.rowData.methodParameters) {\r\n      compRef.instance.parameters = [...ctx.rowData.methodParameters.map(p => Object.assign({}, p))];\r\n    } else {\r\n      compRef.instance.parameters = new Array();\r\n    }\r\n\r\n    const modalConfig = {\r\n      title: 'åæ°è®¾ç½®',\r\n      width: 620,\r\n      height: 400,\r\n      showButtons: true,\r\n      buttons: compRef.instance.modalFooter\r\n    };\r\n    const dialog = this.modalService.show(compRef, modalConfig);\r\n\r\n    compRef.instance.submit.subscribe(re => {\r\n      for (const o of this.operations) {\r\n        if (o.id === ctx.rowData.id) {\r\n          o.methodParameters = re.parameters;\r\n        }\r\n      }\r\n      dialog.close();\r\n    });\r\n    compRef.instance.cancel.subscribe(re => {\r\n      dialog.close();\r\n    });\r\n  }\r\n\r\n  methodSelected() {\r\n    if (this.methodGrid.selectedRow) {\r\n      const data = this.methodGrid.selectedRow.data;\r\n      if (this.state === 'edit') {\r\n        if (this.e) {\r\n          this.e.formControl.setValue(data.method);\r\n          this.e.instance.cd.detectChanges();\r\n          for (const o of this.operations) {\r\n            if (o.id === data.id) {\r\n              o.method = data.method;\r\n              o.sortOrder = data.sortOrder;\r\n              o.methodParameters = data.methodParameters;\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        const operation = new FormMethodConfig();\r\n        operation.formFormatConfigId = this.formFormatConfigId;\r\n        operation.method = data.method;\r\n        operation.sortOrder = data.sortOrder;\r\n        operation.methodParameters = data.methodParameters;\r\n        this.operations = this.operations.concat([operation]);\r\n      }\r\n      this.methodsDialog.close();\r\n    } else {\r\n      this.message.info('å°æªéä¸­è¡¨åæä½ï¼');\r\n    }\r\n  }\r\n\r\n  validator(): boolean {\r\n    this.grid.endCellEdit();\r\n    for (const o of this.operations) {\r\n      if (!o.method) {\r\n        this.message.info('å°æªéæ©è¡¨åæä½ï¼');\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  private getFormMethods() {\r\n    if (this.formFormatId) {\r\n      const url = `/api/runtime/wf/v1.0/formOperation?formFormatId=${this.formFormatId}`;\r\n      this.http.get(url).subscribe((re: any) => {\r\n        if (re) {\r\n          this.formMethods = re;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, TemplateRef, ViewChild, HostBinding, Input } from '@angular/core';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { IFormFormatConfigComponent } from \"@gsp-wf/biz-process-api\";\r\nimport { Observable, of, forkJoin, Subject } from 'rxjs';\r\nimport { FormFormat, FormFieldData, FormField } from '../entities/form-format';\r\nimport { FormFormatConfig, FormButtonConfig, FormFieldConfig } from '../entities/form-format-config';\r\nimport { DatagridComponent } from '@farris/ui-datagrid';\r\nimport { ProcessDeUtil } from '../../../domain/process-de-util';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { NotifyService } from '@farris/ui-notify';\r\nimport { PickedResult, ServerSideToken, LookupGridComponent } from '@farris/ui-lookup';\r\nimport { switchMap, catchError } from 'rxjs/operators';\r\nimport { FormOperationConfigComponent } from '../form-operation-config/form-operation-config.component';\r\nimport { TreeTableComponent } from '@farris/ui-treetable';\r\n\r\n@Component({\r\n  selector: 'lib-form-format-config',\r\n  templateUrl: './form-format-config.component.html',\r\n  styleUrls: ['./form-format-config.component.scss']\r\n})\r\nexport class FormFormatConfigComponent implements OnInit, IFormFormatConfigComponent {\r\n\r\n  @ViewChild('btnEnable') btnEnable: TemplateRef<any>;\r\n  @ViewChild('btnDisabled') btnDisabled: TemplateRef<any>;\r\n  @ViewChild('btnHidden') btnHidden: TemplateRef<any>;\r\n  @ViewChild('fieldEditable') fieldEditable: TemplateRef<any>;\r\n  @ViewChild('fieldReadonly') fieldReadonly: TemplateRef<any>;\r\n  @ViewChild('fieldHidden') fieldHidden: TemplateRef<any>;\r\n  @ViewChild('fieldRequired') fieldRequired: TemplateRef<any>;\r\n\r\n  @ViewChild('btnGrid') btnGrid: DatagridComponent;\r\n  @ViewChild('fieldTree') fieldTree: TreeTableComponent;\r\n  @ViewChild(FormOperationConfigComponent) operationConfig: FormOperationConfigComponent;\r\n\r\n  config: FormFormatConfig = new FormFormatConfig();\r\n  formFormat: FormFormat = new FormFormat();\r\n\r\n  state: 'new' | 'edit' = 'edit';\r\n\r\n  @Input() showMethodTab = true;\r\n\r\n  private _formFormatId: string;\r\n  set formFormatId(v: string) {\r\n    this._formFormatId = v;\r\n    this.config.formFormatId = v;\r\n  }\r\n\r\n  get formFormatId() {\r\n    return this._formFormatId;\r\n  }\r\n\r\n  private _formatConfigId: string;\r\n  set formatConfigId(v: string) {\r\n    this._formatConfigId = v;\r\n    if (!v) {\r\n      this.state = 'new';\r\n    }\r\n  }\r\n  get formatConfigId() {\r\n    return this._formatConfigId;\r\n  }\r\n\r\n  buttonCols = [];\r\n  buttonConfigs = new Array();\r\n\r\n  fieldCols = [];\r\n  fieldConfigs = new Array();\r\n\r\n  formatFieldList: Array<FormField> = new Array();\r\n\r\n  constructor(\r\n    private http: HttpService,\r\n    private message: MessagerService,\r\n    private notify: NotifyService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.buttonCols = [\r\n      { field: 'buttonName', width: 100, title: 'æé®åç§°' },\r\n      // { field: 'buttonId', width: 100, title: 'æé®æ è¯' },\r\n      {\r\n        title: 'æ¯å¦å¯ç¨',\r\n        field: 'enable',\r\n        width: 80,\r\n        template: this.btnEnable,\r\n        align: 'center',\r\n        hAlign: 'center'\r\n      },\r\n      {\r\n        title: 'æ¯å¦ç¦ç¨',\r\n        field: 'disabled',\r\n        width: 80,\r\n        template: this.btnDisabled,\r\n        align: 'center',\r\n        hAlign: 'center'\r\n      },\r\n      {\r\n        title: 'æ¯å¦éè',\r\n        field: 'hidden',\r\n        width: 80,\r\n        template: this.btnHidden,\r\n        align: 'center',\r\n        hAlign: 'center'\r\n      }];\r\n    this.fieldCols = [\r\n      { field: 'fieldName', width: 100, title: 'å­æ®µåç§°' },\r\n      // { field: 'fieldId', width: 100, title: 'å­æ®µæ è¯' },\r\n      {\r\n        title: 'æ¯å¦å¯å',\r\n        field: 'editable',\r\n        width: 80,\r\n        template: this.fieldEditable,\r\n        align: 'center',\r\n        hAlign: 'center'\r\n      },\r\n      {\r\n        title: 'æ¯å¦åªè¯»',\r\n        field: 'readonly',\r\n        width: 80,\r\n        template: this.fieldReadonly,\r\n        align: 'center',\r\n        hAlign: 'center'\r\n      },\r\n      {\r\n        title: 'æ¯å¦éè',\r\n        field: 'hidden',\r\n        width: 80,\r\n        template: this.fieldHidden,\r\n        align: 'center',\r\n        hAlign: 'center'\r\n      },\r\n      {\r\n        title: 'æ¯å¦å¿å¡«',\r\n        field: 'required',\r\n        width: 80,\r\n        template: this.fieldRequired,\r\n        align: 'center',\r\n        hAlign: 'center'\r\n      }];\r\n    this.getConfig();\r\n  }\r\n\r\n  submit(): Observable<any> {\r\n    if (this.validator()) {\r\n      this.setBtnAndFieldConfigs();\r\n      if (this.state === 'new' &&\r\n        this.config.formButtonConfigs.length === 0 &&\r\n        this.config.formFieldConfigs.length === 0 &&\r\n        this.operationConfig.operations.length === 0\r\n      ) {\r\n        return of({ result: true, configId: null });\r\n      } else {\r\n        return this.saveConfig(this.config).pipe(\r\n          switchMap(re => {\r\n            return of({ result: true, configId: this.config.id });\r\n          }),\r\n          catchError(re => {\r\n            this.message.error('ä¿å­éç½®å¤±è´¥ï¼è¯·èç³»ç®¡çåæ¥çåå ï¼');\r\n            return of({ result: false, configId: this.config.id });\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      return of({ result: false, configId: null });\r\n    }\r\n  }\r\n\r\n  btnConfigChange(bool: boolean, field: string, id: string) {\r\n    if (bool) {\r\n      for (const b of this.buttonConfigs) {\r\n        if (b.id === id) {\r\n          switch (field) {\r\n            case 'enable':\r\n              b.enable = bool;\r\n              b.disabled = false;\r\n              b.hidden = false;\r\n              break;\r\n            case 'disabled':\r\n              b.disabled = bool;\r\n              b.enable = false;\r\n              b.hidden = false;\r\n              break;\r\n            case 'hidden':\r\n              b.hidden = bool;\r\n              b.disabled = false;\r\n              b.enable = false;\r\n              break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  btnBatchOperate(operation: string) {\r\n    const checkeds = this.btnGrid.checkedRows;\r\n    if (checkeds && checkeds.length > 0) {\r\n      for (const c of checkeds) {\r\n        this.btnConfigChange(true, operation, c.id);\r\n      }\r\n    }\r\n  }\r\n\r\n  btnBatchReset() {\r\n    const checkeds = this.btnGrid.checkedRows;\r\n    if (checkeds && checkeds.length > 0) {\r\n      for (const c of checkeds) {\r\n        const button = this.formFormat.formButtons.find(b => b.id === c.id);\r\n        for (const b of this.buttonConfigs) {\r\n          if (b.id === c.id) {\r\n            b.enable = button.buttonState === 'Enable' ? true : false;\r\n            b.disabled = button.buttonState === 'Disabled' ? true : false;\r\n            b.hidden = button.buttonState === 'Hidden' ? true : false;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  fieldConfigChange(bool: boolean, field: string, id: string) {\r\n    if (bool) {\r\n      this.fieldSwitchChange(this.fieldConfigs, field, id);\r\n    }\r\n  }\r\n  private fieldSwitchChange(fieldConfigs: Array<any>, field: string, id: string) {\r\n    if (fieldConfigs.length > 0) {\r\n      for (const f of fieldConfigs) {\r\n        if (f.data.id === id) {\r\n          switch (field) {\r\n            case 'editable':\r\n              f.data.editable = true;\r\n              f.data.readonly = false;\r\n              f.data.hidden = false;\r\n              f.data.required = false;\r\n              break;\r\n            case 'readonly':\r\n              f.data.editable = false;\r\n              f.data.readonly = true;\r\n              f.data.hidden = false;\r\n              f.data.required = false;\r\n              break;\r\n            case 'hidden':\r\n              f.data.editable = false;\r\n              f.data.readonly = false;\r\n              f.data.hidden = true;\r\n              f.data.required = false;\r\n              break;\r\n            case 'required':\r\n              f.data.editable = false;\r\n              f.data.readonly = false;\r\n              f.data.hidden = false;\r\n              f.data.required = true;\r\n              break;\r\n          }\r\n          return;\r\n        } else {\r\n          if (f.children && f.children.length > 0) {\r\n            this.fieldSwitchChange(f.children, field, id);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  fieldBatchOperate(operation: string) {\r\n    const checkeds = this.fieldTree.checkeds;\r\n    if (checkeds && checkeds.length > 0) {\r\n      for (const c of checkeds) {\r\n        this.fieldConfigChange(true, operation, c.data.id);\r\n      }\r\n    }\r\n  }\r\n\r\n  fieldBatchReset() {\r\n    const checkeds = this.fieldTree.checkeds;\r\n    if (checkeds && checkeds.length > 0) {\r\n      for (const c of checkeds) {\r\n        const field = this.formatFieldList.find(f => f.id === c.data.id);\r\n        this.resetFieldConfig(this.fieldConfigs, c.data.id, field);\r\n      }\r\n    }\r\n  }\r\n  resetFieldConfig(fieldConfigs: Array<any>, id: string, field: FormField) {\r\n    if (fieldConfigs.length > 0) {\r\n      for (const f of fieldConfigs) {\r\n        if (f.leaf === true && f.data.id === id) {\r\n          f.data.editable = field.fieldState === 'Editable' ? true : false;\r\n          f.data.readonly = field.fieldState === 'Readonly' ? true : false;\r\n          f.data.hidden = field.fieldState === 'Hidden' ? true : false;\r\n          f.data.required = field.fieldState === 'Required' ? true : false;\r\n          return;\r\n        } else {\r\n          if (f.children && f.children.length > 0) {\r\n            this.resetFieldConfig(f.children, id, field);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private validator(): boolean {\r\n    return this.operationConfig.validator();\r\n  }\r\n\r\n\r\n  private setBtnAndFieldConfigs() {\r\n    this.config.formButtonConfigs = new Array<FormButtonConfig>();\r\n    for (const btn of this.buttonConfigs) {\r\n      const button = this.formFormat.formButtons.find(b => b.buttonId === btn.buttonId);\r\n      const btnConfig = new FormButtonConfig();\r\n      btnConfig.buttonId = btn.buttonId;\r\n      if (btn.enable) {\r\n        btnConfig.buttonState = 'Enable';\r\n      } else if (btn.disabled) {\r\n        btnConfig.buttonState = 'Disabled';\r\n      } else if (btn.hidden) {\r\n        btnConfig.buttonState = 'Hidden';\r\n      } else {\r\n        continue;\r\n      }\r\n      if (!button.buttonState && btnConfig.buttonState) {\r\n        this.config.formButtonConfigs.push(btnConfig);\r\n      }\r\n      if (button.buttonState && button.buttonState !== btnConfig.buttonState) {\r\n        this.config.formButtonConfigs.push(btnConfig);\r\n      }\r\n    }\r\n    this.config.formFieldConfigs = new Array<FormFieldConfig>();\r\n    this.getFieldConfigs(this.fieldConfigs);\r\n\r\n    this.config.formMethodConfigs = this.operationConfig.operations || new Array();\r\n  }\r\n\r\n  private getFieldConfigs(fieldConfigs: Array<any>) {\r\n    if (fieldConfigs && fieldConfigs.length > 0) {\r\n      for (const f of fieldConfigs) {\r\n        if (f.children && f.children.length > 0) {\r\n          this.getFieldConfigs(f.children);\r\n        }\r\n        if (f.leaf === false) {\r\n          continue;\r\n        }\r\n        const field = this.formatFieldList.find(fd => fd.fieldId === f.data.fieldId);\r\n        const fieldConfig = new FormFieldConfig();\r\n        fieldConfig.fieldId = f.data.fieldId;\r\n        if (f.data.editable) {\r\n          fieldConfig.fieldState = 'Editable';\r\n        } else if (f.data.readonly) {\r\n          fieldConfig.fieldState = 'Readonly';\r\n        } else if (f.data.hidden) {\r\n          fieldConfig.fieldState = 'Hidden';\r\n        } else if (f.data.required) {\r\n          fieldConfig.fieldState = 'Required';\r\n        } else {\r\n          continue;\r\n        }\r\n\r\n        if (!field.fieldState && fieldConfig.fieldState) {\r\n          this.config.formFieldConfigs.push(fieldConfig);\r\n        }\r\n\r\n        if (field.fieldState && field.fieldState !== fieldConfig.fieldState) {\r\n          this.config.formFieldConfigs.push(fieldConfig);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private getConfig() {\r\n    if (this.formFormatId) {\r\n      forkJoin(this.getFormFormat(), this.getFormFormatConfig()).subscribe((re: any[]) => {\r\n        const formFormat = re[0] as FormFormat;\r\n        if (formFormat) {\r\n          this.formFormat = this.convertFormFormat(formFormat);\r\n        }\r\n        const config = re[1] as FormFormatConfig;\r\n        if (config) {\r\n          this.config = config;\r\n        }\r\n        if (this.formFormat.formButtons) {\r\n          this.buttonConfigs = this.formFormat.formButtons.map(b => Object.assign({}, b, {\r\n            enable: b.buttonState === 'Enable' ? true : false,\r\n            disabled: b.buttonState === 'Disabled' ? true : false,\r\n            hidden: b.buttonState === 'Hidden' ? true : false\r\n          }));\r\n          let btnConfigs = new Array<FormButtonConfig>();\r\n          if (config && config.formButtonConfigs) {\r\n            btnConfigs = config.formButtonConfigs;\r\n          }\r\n          for (const b of btnConfigs) {\r\n            for (const btn of this.buttonConfigs) {\r\n              if (btn.buttonId === b.buttonId) {\r\n                switch (b.buttonState) {\r\n                  case 'Enable':\r\n                    btn.enable = true;\r\n                    btn.disabled = false;\r\n                    btn.hidden = false;\r\n                    break;\r\n                  case 'Disabled':\r\n                    btn.enable = false;\r\n                    btn.disabled = true;\r\n                    btn.hidden = false;\r\n                    break;\r\n                  case 'Hidden':\r\n                    btn.enable = false;\r\n                    btn.disabled = false;\r\n                    btn.hidden = true;\r\n                    break;\r\n                }\r\n                break;\r\n              }\r\n            }\r\n          }\r\n        }\r\n        if (this.formFormat.formFields) {\r\n          this.fieldConfigs = [...this.formFormat.formFields];\r\n          this.orgFieldConfigs(this.fieldConfigs);\r\n          let configs = new Array<FormFieldConfig>();\r\n          if (config && config.formFieldConfigs) {\r\n            configs = config.formFieldConfigs;\r\n          }\r\n          for (const f of configs) {\r\n            this.setFieldConfig(this.fieldConfigs, f);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private orgFieldConfigs(formFields: Array<FormFieldData>) {\r\n    if (formFields.length > 0) {\r\n      for (const d of formFields) {\r\n        d.data = Object.assign({}, d.data, {\r\n          editable: d.data.fieldState === 'Editable' ? true : false,\r\n          readonly: d.data.fieldState === 'Readonly' ? true : false,\r\n          hidden: d.data.fieldState === 'Hidden' ? true : false,\r\n          required: d.data.fieldState === 'Required' ? true : false\r\n        });\r\n        if (d.children && d.children) {\r\n          this.orgFieldConfigs(d.children);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private setFieldConfig(fieldConfigs: Array<any>, config: FormFieldConfig) {\r\n    if (fieldConfigs.length > 0) {\r\n      for (const f of fieldConfigs) {\r\n        if (f.data.fieldId === config.fieldId) {\r\n          switch (config.fieldState) {\r\n            case 'Editable':\r\n              f.data.editable = true;\r\n              f.data.readonly = false;\r\n              f.data.hidden = false;\r\n              f.data.required = false;\r\n              break;\r\n            case 'Readonly':\r\n              f.data.editable = false;\r\n              f.data.readonly = true;\r\n              f.data.hidden = false;\r\n              f.data.required = false;\r\n              break;\r\n            case 'Hidden':\r\n              f.data.editable = false;\r\n              f.data.readonly = false;\r\n              f.data.hidden = true;\r\n              f.data.required = false;\r\n              break;\r\n            case 'Required':\r\n              f.data.editable = false;\r\n              f.data.readonly = false;\r\n              f.data.hidden = false;\r\n              f.data.required = true;\r\n              break;\r\n          }\r\n          return;\r\n        } else {\r\n          if (f.children && f.children.length > 0) {\r\n            this.setFieldConfig(f.children, config);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private saveConfig(config: FormFormatConfig): Observable<any> {\r\n    const url = '/api/runtime/wf/v1.0/formFormatConfig';\r\n    return this.http.post(url, config);\r\n  }\r\n\r\n  private getFormFormat(): Observable<any> {\r\n    if (this.formFormatId) {\r\n      let url = `/api/runtime/wf/v1.0/formFormat/${this.formFormatId}`;\r\n      url = encodeURI(url);\r\n      return this.http.get(url);\r\n    } else {\r\n      return of(null);\r\n    }\r\n  }\r\n\r\n  private getFormFormatConfig(): Observable<any> {\r\n    if (this.formatConfigId) {\r\n      let url = `/api/runtime/wf/v1.0/formFormatConfig/${this.formatConfigId}`;\r\n      url = encodeURI(url);\r\n      return this.http.get(url);\r\n    } else {\r\n      return of(null);\r\n    }\r\n  }\r\n\r\n  private convertFormFormat(formFormat: FormFormat): FormFormat {\r\n    if (!formFormat.status) {\r\n      formFormat.status = 0;\r\n    }\r\n    this.convertformFields(formFormat.formFields);\r\n    this.getFormatFieldList(formFormat.formFields, this.formatFieldList);\r\n    return formFormat;\r\n  }\r\n\r\n  private convertformFields(formFields: Array<FormFieldData>) {\r\n    if (formFields.length > 0) {\r\n      for (const d of formFields) {\r\n        if (typeof(d.leaf) !== 'boolean' && (d.leaf == null || d.leaf === undefined)) {\r\n          d.leaf = true;\r\n        }\r\n        if (d.children && d.children) {\r\n          this.orgFieldConfigs(d.children);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private getFormatFieldList(formFields: Array<FormFieldData>, array: Array<FormField>) {\r\n    if (formFields.length > 0) {\r\n      for (const d of formFields) {\r\n        array.push(d.data);\r\n        if (d.children && d.children) {\r\n          this.getFormatFieldList(d.children, array);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private getFormatField(formFields: Array<FormFieldData>, fieldId: string): FormFieldData {\r\n    for (const f of formFields) {\r\n      if (f.data.fieldId === fieldId) {\r\n        return f;\r\n      }\r\n      if (f.children && f.children.length > 0) {\r\n        return this.getFormatField(f.children, fieldId);\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, ViewChild, ViewContainerRef, Injector, ComponentFactoryResolver, ComponentRef, TemplateRef, Input, SimpleChanges, OnChanges } from '@angular/core';\r\nimport { IFormFormatConfigComponent } from '@gsp-wf/biz-process-api';\r\nimport { FormFormatConfigComponent } from '../form-format-config/form-format-config.component';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { FormFormatType } from '../entities/form-format-type';\r\n\r\ndeclare var System: any;\r\n\r\n@Component({\r\n  selector: 'lib-form-config-container',\r\n  templateUrl: './form-config-container.component.html',\r\n  styleUrls: ['./form-config-container.component.css']\r\n})\r\nexport class FormConfigContainerComponent implements OnInit, OnChanges {\r\n\r\n  private componentRef: ComponentRef<any>;\r\n  @ViewChild('container', { read: ViewContainerRef }) container: ViewContainerRef;\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n\r\n  @Input()\r\n  formFormatId: string;\r\n  @Input()\r\n  formatConfigId: string;\r\n\r\n  @Input() showMethodTab = true;\r\n  constructor(\r\n    private injector: Injector,\r\n    private cfr: ComponentFactoryResolver,\r\n    private http: HttpService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    // this.showComponentRef();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes['formFormatId'] && changes['formFormatId'].currentValue) {\r\n      this.showComponentRef();\r\n    } else { // åè½èåæ¶\r\n      this.componentRef = this.createWFComponentRef();\r\n      this.componentRef.instance.formFormatId = null;\r\n      this.componentRef.instance.formatConfigId = null;\r\n      this.componentRef.instance.showMethodTab = this.showMethodTab;\r\n      this.container.clear();\r\n      this.container.insert(this.componentRef.hostView);\r\n    }\r\n  }\r\n\r\n  submit(): Observable<any> {\r\n    return this.componentRef.instance.submit();\r\n  }\r\n\r\n  private showComponentRef() {\r\n    this.componentRef = this.createWFComponentRef();\r\n    this.componentRef.instance.formFormatId = this.formFormatId;\r\n    this.componentRef.instance.formatConfigId = this.formatConfigId;\r\n    this.componentRef.instance.showMethodTab = this.showMethodTab;\r\n    this.container.clear();\r\n    this.container.insert(this.componentRef.hostView);\r\n    // if (this.formFormatId) {\r\n      // this.getFormFormatType().subscribe((re: FormFormatType) => {\r\n        // if (re.code === 'wf') {\r\n\r\n        // } else {\r\n        //   System.import(re.customImpl)\r\n        //     .then((moduleFactorys: any) => {\r\n        //       const moduleFactory: any = Object.values(moduleFactorys)[0];\r\n        //       const moduleRef = moduleFactory.create(this.injector);\r\n        //       this.componentRef = moduleRef.instance.createCustomComponentRef(this.injector);\r\n        //       this.componentRef.instance.formFormatId = this.formFormatId;\r\n        //       this.componentRef.instance.formatConfigId = this.formatConfigId;\r\n        //       this.componentRef.instance.showMethodTab = this.showMethodTab;\r\n        //       this.container.clear();\r\n        //       this.container.insert(this.componentRef.hostView);\r\n        //     });\r\n        // }\r\n      // });\r\n    // }\r\n  }\r\n\r\n  private createWFComponentRef(): ComponentRef<IFormFormatConfigComponent> {\r\n    const cmpF = this.cfr.resolveComponentFactory(FormFormatConfigComponent);\r\n    const cmpR = cmpF.create(this.injector);\r\n    return cmpR;\r\n  }\r\n\r\n  private getFormFormatType(): Observable<any> {\r\n    if (this.formFormatId) {\r\n      const url = `/api/runtime/wf/v1.0/formFormatType/formFormat?formFormat=${this.formFormatId}`;\r\n      return this.http.get(url);\r\n    }\r\n  }\r\n\r\n}\r\n","export enum VOTemplateType {\r\n    /**æ¥èªäºBEçVO */\r\n    FromBE,\r\n    /**æ¥èªäºVOçVOï¼å³VOä»£ç */\r\n    FromVO,\r\n    /**æ²¡ææ¥æºçVOï¼å³èæVO */\r\n    FromNone,\r\n}","import { GSPBusinessEntity } from '@gsp-bef/gsp-be-metadata';\r\nimport { GSPViewModel } from '@gsp-bef/gsp-vo-metadata';\r\nimport { CommonModelUtil } from '@gsp-bef/gsp-cm-metadata';\r\nimport { VOTemplateType } from '../entity/VOTemplateType';\r\n\r\nexport class CommonModelTypeHelper {\r\n    public static getCommonModelType(cm: GSPBusinessEntity | GSPViewModel): string {\r\n        let type = CommonModelUtil.GetGeneratedConfigID(cm as any);\r\n        type = \"com.\" + type;\r\n        return type;\r\n    }\r\n\r\n    /**\r\n     * å¤æ­VOæ¥æºäºBEè¿æ¯VOæèå®å¨èæ\r\n     * @param gspViewModel\r\n     */\r\n    public static judgeVoTemplateType(gspViewModel: GSPViewModel): VOTemplateType {\r\n        if (gspViewModel.IsVirtual === true) {\r\n            if (gspViewModel.TemplateVoInfo && gspViewModel.TemplateVoInfo.TemplateVoId != null) {\r\n                return VOTemplateType.FromVO;\r\n            } else {\r\n                return VOTemplateType.FromNone\r\n            }\r\n        } else {\r\n            return VOTemplateType.FromBE;\r\n        }\r\n    }\r\n}\r\n","import { Component, OnInit, Output, EventEmitter, ViewChild, Input, Injector, ComponentFactoryResolver, Inject, LOCALE_ID } from '@angular/core';\r\nimport { ComboListComponent } from '@farris/ui-combo-list';\r\nimport { ProcessListHelpService } from '../../services/process-list-help.service';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { NotifyService } from '@farris/ui-notify';\r\nimport { GSPMetadataRTService, SelectMetadataRTComponent, Metadata4RefDto } from '@gsp-lcm/metadatart-selector';\r\nimport { BsModalService } from '@farris/ui-modal';\r\nimport { GSPViewModel } from '@gsp-bef/gsp-vo-metadata';\r\nimport { IRtProcQueryParam } from '../../entity/IProcQueryParam';\r\nimport { TextValue } from '@edp-bif/common-api';\r\nimport { BifMetadataType } from '../../entity/BifMetadataType';\r\nimport { CommonModelTypeHelper } from '../../utils/common-model-type-helper';\r\nimport { VOTemplateType } from '../../entity/VOTemplateType';\r\nimport { AifLocalePipe } from '../../../aif-ui-common/pipe/aif-ui-common-locale.pipe';\r\n\r\n@Component({\r\n  selector: 'app-proc-help-query-solution',\r\n  templateUrl: './proc-help-query-solution.component.html',\r\n  styleUrls: ['./proc-help-query-solution.component.css'],\r\n})\r\nexport class ProcHelpQuerySolutionComponent implements OnInit {\r\n  readonly groupIcon = '<i class=\"f-icon f-icon-lookup\"></i>';\r\n\r\n  @Input(\"queryParam\")\r\n  queryParam: IRtProcQueryParam;\r\n  @Output(\"queryParamChange\")\r\n  queryParamChange = new EventEmitter<IRtProcQueryParam>();\r\n\r\n  @Output(\"onSearch\")\r\n  onSearchEmitter = new EventEmitter();\r\n\r\n  //æµç¨ç±»åéç½®\r\n  @ViewChild(\"comboProcessType\")\r\n  comboProcessType: ComboListComponent;\r\n  comboProcessTypeIdField = \"value\";\r\n  comboProcessTypeValueField = \"value\";\r\n  comboProcessTypeTextField = \"text\";\r\n  comboProcessTypeData = [\r\n    { value: \"\", text: this.localePipe.transform(\"all\") },\r\n    { value: BifMetadataType.BifCreationProcess, text: this.localePipe.transform(\"creation\") },\r\n    { value: BifMetadataType.BifWritebackProcess, text: this.localePipe.transform(\"writeback\") },\r\n  ];\r\n\r\n  //å¯ç¨ç¶æéç½®\r\n  @ViewChild(\"comboEnabledState\")\r\n  comboEnabledState: ComboListComponent;\r\n  comboEnabledStateIdField = \"value\";\r\n  comboEnabledStateValueField = \"value\";\r\n  comboEnabledStateTextField = \"text\";\r\n  comboEnabledStateData = [\r\n    { value: \"\", text: this.localePipe.transform(\"all\") },\r\n    { value: \"true\", text: this.localePipe.transform(\"enabled\") },\r\n    { value: \"false\", text: this.localePipe.transform(\"disabled\") },\r\n  ];\r\n\r\n  //ç³»ç»é¢ç½®éç½®\r\n  @ViewChild(\"comboSysInit\")\r\n  comboSysInit: ComboListComponent;\r\n  comboSysInitIdField = \"value\";\r\n  comboSysInitValueField = \"value\";\r\n  comboSysInitTextField = \"text\";\r\n  comboSysInitData = [\r\n    { value: \"\", text: this.localePipe.transform(\"all\") },\r\n    { value: \"true\", text: this.localePipe.transform(\"yes\") },\r\n    { value: \"false\", text: this.localePipe.transform(\"no\") },\r\n  ];\r\n\r\n  constructor(\r\n    private procHelpService: ProcessListHelpService,\r\n    private messager: MessagerService,\r\n    private notify: NotifyService,\r\n    private metadataService: GSPMetadataRTService,\r\n    private modalService: BsModalService,\r\n    private injector: Injector,\r\n    private resolver: ComponentFactoryResolver,\r\n    private localePipe: AifLocalePipe,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  processNameChange(name: string) {\r\n    this.queryParam.filterArgs.name = new TextValue();\r\n    this.queryParam.filterArgs.name.hasValue = true;\r\n    this.queryParam.filterArgs.name.value = name;\r\n    this.queryParam.filterArgsExt.name = name;\r\n  }\r\n\r\n  processTypeChange({ selections }) {\r\n    const item = selections[0];\r\n    this.queryParam.filterArgs.billProcessType = new TextValue();\r\n    if (item != null) {\r\n      if (item.value != \"\") {\r\n        this.queryParam.filterArgs.billProcessType.hasValue = true;\r\n      }\r\n      this.queryParam.filterArgs.billProcessType.value = item.value;\r\n    }\r\n  }\r\n\r\n  enabledStateChange({ selections }) {\r\n    const item = selections[0];\r\n    this.queryParam.filterArgs.isEnabled = new TextValue();\r\n    if (item != null) {\r\n      if (item.value != \"\") {\r\n        this.queryParam.filterArgs.isEnabled.hasValue = true;\r\n      }\r\n      this.queryParam.filterArgs.isEnabled.value = String(item.value);\r\n    }\r\n  }\r\n\r\n  sysInitChange({ selections }) {\r\n    const item = selections[0];\r\n    this.queryParam.filterArgs.sysInit = new TextValue();\r\n    if (item != null) {\r\n      if (item.value != \"\") {\r\n        this.queryParam.filterArgs.sysInit.hasValue = true;\r\n      }\r\n      this.queryParam.filterArgs.sysInit.value = String(item.value);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * æå¼ä¸æ¸¸åæ®VOéæ©å¨\r\n   */\r\n  selectUpBill() {\r\n    const compFactory = this.resolver.resolveComponentFactory(SelectMetadataRTComponent);\r\n    const compRef = compFactory.create(this.injector);\r\n    compRef.instance.typeList = \"GSPViewModel\";\r\n\r\n    compRef.instance.selectedMetadata.subscribe(\r\n      (metadata4RefDto: Metadata4RefDto) => {\r\n        this.clearUpBill();\r\n        let upVODto = metadata4RefDto.metadata;\r\n        let upVO: GSPViewModel = JSON.parse(upVODto.content);\r\n\r\n        switch (CommonModelTypeHelper.judgeVoTemplateType(upVO)) {\r\n          //éä»£çVO\r\n          case VOTemplateType.FromBE:\r\n            {\r\n              this.queryParam.filterArgs.upBillVoId = new TextValue();\r\n              this.queryParam.filterArgs.upBillVoId.hasValue = true;\r\n              this.queryParam.filterArgs.upBillVoId.value = upVO.ID;\r\n              this.queryParam.filterArgsExt.upBillVoName = upVO.MainObject.Name;\r\n            }\r\n            break;\r\n          default:\r\n            this.notify.error(this.localePipe.transform(\"pleaseSelectNonVirtualVO\"));\r\n            break;\r\n        };\r\n      },\r\n      (err) => {\r\n        console.error(err);\r\n        //todo ç¡®å®å¼å¸¸ç»æ, ç®åéç¨å¼å®¹åå¼æ¹å¼\r\n        this.messager.error(err.error == null ? err.message : (err.error.Message || err.error.message || err.message));\r\n        this.clearUpBill();\r\n      }\r\n    );\r\n\r\n    const modalConfig = {\r\n      title: this.localePipe.transform(\"billSelector\"),\r\n      width: 930,\r\n      height: 573,\r\n      showButtons: false\r\n    };\r\n    const dialog = this.modalService.show(compRef, modalConfig);\r\n    compRef.instance.closeModalEmitter.subscribe($event => dialog.close());\r\n  }\r\n\r\n  /**\r\n   * æå¼ä¸æ¸¸åæ®VOéæ©å¨\r\n   */\r\n  selectDownBill() {\r\n    const compFactory = this.resolver.resolveComponentFactory(SelectMetadataRTComponent);\r\n    const compRef = compFactory.create(this.injector);\r\n    compRef.instance.typeList = \"GSPViewModel\";\r\n\r\n    compRef.instance.selectedMetadata.subscribe(\r\n      (metadata4RefDto: Metadata4RefDto) => {\r\n        this.clearDownBill();\r\n        let downVODto = metadata4RefDto.metadata;\r\n        let downVO: GSPViewModel = JSON.parse(downVODto.content);\r\n\r\n        switch (CommonModelTypeHelper.judgeVoTemplateType(downVO)) {\r\n          //éä»£çVO\r\n          case VOTemplateType.FromBE:\r\n            {\r\n              this.queryParam.filterArgs.downBillVoId = new TextValue();\r\n              this.queryParam.filterArgs.downBillVoId.hasValue = true;\r\n              this.queryParam.filterArgs.downBillVoId.value = downVO.ID;\r\n              this.queryParam.filterArgsExt.downBillVoName = downVO.MainObject.Name;\r\n            }\r\n            break;\r\n          default:\r\n            this.notify.error(this.localePipe.transform(\"pleaseSelectNonVirtualVO\"));\r\n            break;\r\n        };\r\n      },\r\n      (err) => {\r\n        console.error(err);\r\n        //todo ç¡®å®å¼å¸¸ç»æ, ç®åéç¨å¼å®¹åå¼æ¹å¼\r\n        this.messager.error(err.error == null ? err.message : (err.error.Message || err.error.message || err.message));\r\n        this.clearUpBill();\r\n      }\r\n    );\r\n\r\n    const modalConfig = {\r\n      title: this.localePipe.transform(\"billSelector\"),\r\n      width: 930,\r\n      height: 573,\r\n      showButtons: false\r\n    };\r\n    const dialog = this.modalService.show(compRef, modalConfig);\r\n    compRef.instance.closeModalEmitter.subscribe($event => dialog.close());\r\n  }\r\n\r\n  /**\r\n   * æ¸é¤æµç¨åç§°\r\n   */\r\n  clearProcessName() {\r\n    delete this.queryParam.filterArgs.name;\r\n    this.queryParam.filterArgsExt.name = null;\r\n  }\r\n\r\n  /**\r\n   * æ¸é¤éä¸­çæµç¨ç±»å\r\n   */\r\n  clearProcessType() {\r\n    delete this.queryParam.filterArgs.billProcessType;\r\n  }\r\n\r\n  /**\r\n   * æ¸é¤éä¸­çä¸æ¸¸åæ®ä¿¡æ¯\r\n   */\r\n  clearUpBill() {\r\n    delete this.queryParam.filterArgs.upBillVoId;\r\n    this.queryParam.filterArgsExt.upBillVoName = null;\r\n  }\r\n\r\n  /**\r\n   * æ¸é¤éä¸­çä¸æ¸¸åæ®ä¿¡æ¯\r\n   */\r\n  clearDownBill() {\r\n    delete this.queryParam.filterArgs.downBillVoId;\r\n    this.queryParam.filterArgsExt.downBillVoName = null;\r\n  }\r\n\r\n  /**\r\n   * æ¸é¤éä¸­çå¯ç¨ç¶æ\r\n   */\r\n  clearIsEnabled() {\r\n    delete this.queryParam.filterArgs.isEnabled;\r\n  }\r\n\r\n  /**\r\n   * æ¸é¤éä¸­çåå¸ç¶æ\r\n   */\r\n  clearIsPublished() {\r\n    // delete this.queryParam.filterArgs.isPublished;\r\n  }\r\n\r\n  /**\r\n   * æ¸é¤éä¸­çåå¸ç¶æ\r\n   */\r\n  clearSysInit() {\r\n    delete this.queryParam.filterArgs.sysInit;\r\n  }\r\n\r\n  /**\r\n   * ç¹å»ç­éæé®\r\n   */\r\n  clickBtnFilter() {\r\n    this.queryParam.filterArgs.pageIndex = 0;\r\n    this.onSearchEmitter.emit(this.queryParam);\r\n  }\r\n\r\n  /**\r\n   * ç¹å»æ¸ç©ºæé®\r\n   */\r\n  clickBtnClear() {\r\n    //éç½®ä¸ææ¡\r\n    this.comboProcessType.onClear();\r\n    this.comboProcessTypeData = this.comboProcessTypeData.map(item => ({ ...item }));\r\n\r\n    this.comboEnabledState.onClear();\r\n    this.comboEnabledStateData = this.comboEnabledStateData.map(item => ({ ...item }));\r\n\r\n    this.comboSysInit.onClear();\r\n    this.comboSysInitData = this.comboSysInitData.map(item => ({ ...item }));\r\n\r\n    // this.comboPublishedState.onClear();\r\n    // this.comboPublishedStateData = this.comboPublishedStateData.map(item => ({ ...item }));\r\n\r\n    //éç½®æ¥è¯¢åæ°\r\n    // const queryParam = {\r\n    //   filterArgs: new ProcessFilterConditionArgs(),\r\n    //   filterArgsExt: {}\r\n    // };\r\n    // queryParam.filterArgs.LoadFromJsonObject(this.queryParam.filterArgs.ConvertToJsonObject());\r\n    const queryParam = this.queryParam;\r\n    queryParam.filterArgsExt = {};\r\n\r\n    queryParam.filterArgs.isEnabled = null;\r\n    queryParam.filterArgs.billProcessType = null;\r\n    queryParam.filterArgs.upBillVoId = null;\r\n    queryParam.filterArgs.downBillVoId = null;\r\n    queryParam.filterArgs.sysInit = null;\r\n\r\n    // queryParam.filterArgs.pageSize = this.queryParam.filterArgs.pageSize;\r\n    // queryParam.filterArgs.pageIndex = this.queryParam.filterArgs.pageIndex;\r\n    // queryParam.filterArgs.orderByCode = this.queryParam.filterArgs.orderByCode;\r\n    // queryParam.filterArgs.orderByName = this.queryParam.filterArgs.orderByName;\r\n    // queryParam.filterArgs.OrderByLastModifiedTime = this.queryParam.filterArgs.OrderByLastModifiedTime;\r\n\r\n    this.queryParam = queryParam;\r\n  }\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { AifLocalePipe } from \"./pipe/aif-ui-common-locale.pipe\";\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AifLocalePipe\r\n    ],\r\n    exports: [\r\n        AifLocalePipe\r\n    ]\r\n})\r\nexport class AifUiCommonModule { }","export const BILL_TRACKER_LANG_RESOURCES = {\r\n    \"zh-CHS\": {\r\n        \"code\": \"ç¼å·\",\r\n        \"name\": \"åç§°\",\r\n        \"lastModifiedTime\": \"æåä¿®æ¹æ¶é´\",\r\n        \"upBill\": \"ä¸æ¸¸åæ®\",\r\n        \"downBill\": \"ä¸æ¸¸åæ®\",\r\n        \"processName\": \"æµç¨åç§°\",\r\n        \"processType\": \"æµç¨ç±»å\",\r\n        \"creation\": \"çå\",\r\n        \"writeback\": \"åå\",\r\n        \"enabledState\": \"å¯ç¨ç¶æ\",\r\n        \"sysInit\": \"ç³»ç»é¢ç½®\",\r\n        \"filter\": \"ç­é\",\r\n        \"all\": \"å¨é¨\",\r\n        \"enabled\": \"å·²å¯ç¨\",\r\n        \"disabled\": \"å·²ç¦ç¨\",\r\n        \"yes\": \"æ¯\",\r\n        \"no\": \"å¦\",\r\n        \"billSelector\": \"åæ®éæ©\",\r\n        \"querySolution\": \"ç­éæ¹æ¡\",\r\n        \"collapse\": \"æ¶èµ·\",\r\n        \"expand\": \"å±å¼\",\r\n        \"loading\": \"å è½½ä¸­\",\r\n        \"pleaseSelectNonVirtualVO\": \"è¯·éæ©éèæVO\",\r\n        \"pleaseSelectOneItemOnly\": \"è¯·éä¸­ä¸æ¡æ°æ®\",\r\n        \"isExtendProcess\": \"æ©å±æµç¨\",\r\n    },\r\n    \"en\": {\r\n        \"code\": \"Code\",\r\n        \"name\": \"Name\",\r\n        \"lastModifiedTime\": \"Last Modified Time\",\r\n        \"upBill\": \"Upstream Bill\",\r\n        \"downBill\": \"Downstream Bill\",\r\n        \"processName\": \"Process Name\",\r\n        \"processType\": \"Process Type\",\r\n        \"creation\": \"Creation\",\r\n        \"writeback\": \"Writeback\",\r\n        \"enabledState\": \"Enabled State\",\r\n        \"sysInit\": \"System Init\",\r\n        \"filter\": \"Filter\",\r\n        \"all\": \"All\",\r\n        \"enabled\": \"Enabled\",\r\n        \"disabled\": \"Disabled\",\r\n        \"yes\": \"Yes\",\r\n        \"no\": \"No\",\r\n        \"billSelector\": \"Bill Selector\",\r\n        \"querySolution\": \"Query Solution\",\r\n        \"collapse\": \"Collapse\",\r\n        \"expand\": \"Expand\",\r\n        \"loading\": \"Loading...\",\r\n        \"pleaseSelectNonVirtualVO\": \"Please select non-virtual VO\",\r\n        \"pleaseSelectOneItemOnly\": \"Please select only one item\",\r\n        \"isExtendProcess\": \"Extend Process\",\r\n    },\r\n    \"zh-CHT\": {\r\n        \"code\": \"ç·¨è\",\r\n        \"name\": \"åç¨±\",\r\n        \"lastModifiedTime\": \"æå¾ä¿®æ¹æé\",\r\n        \"upBill\": \"ä¸éå®æ\",\r\n        \"downBill\": \"ä¸éå®æ\",\r\n        \"processName\": \"æµç¨åç¨±\",\r\n        \"processType\": \"æµç¨é¡å\",\r\n        \"creation\": \"çå®\",\r\n        \"writeback\": \"åå¯«\",\r\n        \"enabledState\": \"åç¨çæ\",\r\n        \"sysInit\": \"ç³»çµ±é ç½®\",\r\n        \"filter\": \"ç¯©é¸\",\r\n        \"all\": \"å¨é¨\",\r\n        \"enabled\": \"å·²åç¨\",\r\n        \"disabled\": \"å·²ç¦ç¨\",\r\n        \"yes\": \"æ¯\",\r\n        \"no\": \"å¦\",\r\n        \"billSelector\": \"å®æé¸æ\",\r\n        \"querySolution\": \"ç¯©é¸æ¹æ¡\",\r\n        \"collapse\": \"æ¶èµ·\",\r\n        \"expand\": \"å±é\",\r\n        \"loading\": \"å è¼ä¸­\",\r\n        \"pleaseSelectNonVirtualVO\": \"è«é¸æéèæ¬VO\",\r\n        \"pleaseSelectOneItemOnly\": \"è«é¸ä¸­å£¹æ¢æ¸æ\",\r\n        \"isExtendProcess\": \"æ´å±æµç¨\",\r\n    }\r\n};","import { NgModule, LOCALE_ID } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { CacheService, SessionService, HttpService } from '@ecp-caf/caf-common';\r\nimport { FrmEventBus, FuncsService, AppService, FrameworkService } from '@gsp-sys/rtf-common';\r\nimport { BusinessObjectRtService } from '@gsp-lcm/bo-rt-service';\r\nimport { MetadataRTSelectModule, GSPMetadataRTServiceModule, GSPMetadataRTService } from '@gsp-lcm/metadatart-selector';\r\nimport { FResponseToolbarModule } from '@farris/ui-response-toolbar';\r\nimport { ListFilterModule } from '@farris/ui-list-filter';\r\nimport { AngularDraggableModule } from '@farris/ui-draggable';\r\nimport { FarrisCommonModule } from '@farris/ui-common';\r\nimport { FarrisFormsModule } from '@farris/ui-forms';\r\nimport { FarrisSectionModule } from '@farris/ui-section';\r\nimport { DatagridEditorsModule, EditorProviders } from '@farris/ui-datagrid-editors';\r\nimport { DatagridModule } from '@farris/ui-datagrid';\r\nimport { ComboListModule } from '@farris/ui-combo-list';\r\nimport { InputGroupModule } from '@farris/ui-input-group';\r\nimport { FarrisDialogModule } from '@farris/ui-dialog';\r\nimport { SwitchModule } from '@farris/ui-switch';\r\nimport { FarrisTabsModule } from '@farris/ui-tabs';\r\nimport { LookupModule } from '@farris/ui-lookup';\r\nimport { LoadingModule, LoadingService } from '@farris/ui-loading';\r\nimport { NotifyModule } from '@farris/ui-notify';\r\nimport { MessagerModule } from '@farris/ui-messager';\r\nimport { ModalModule } from '@farris/ui-modal';\r\n\r\nimport { ProcessListHelpComponent } from './components/process-list-help/process-list-help.component';\r\nimport { ProcHelpQuerySolutionComponent } from './components/proc-help-query-solution/proc-help-query-solution.component';\r\nimport { ProcessListHelpService } from './services/process-list-help.service';\r\nimport { AifUiCommonModule } from '../aif-ui-common/aif-ui-common.module';\r\nimport { AifLocalePipe, BIF_LANG_RESOURCES } from '../aif-ui-common/pipe/aif-ui-common-locale.pipe';\r\nimport { BILL_TRACKER_LANG_RESOURCES } from './i18n/lang.resource';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        HttpClientModule,\r\n        MetadataRTSelectModule,\r\n        GSPMetadataRTServiceModule.forRoot(\"\"),\r\n        FResponseToolbarModule,\r\n        ListFilterModule,\r\n        AngularDraggableModule,\r\n        FarrisCommonModule.forRoot(),\r\n        FarrisFormsModule,\r\n        FarrisSectionModule,\r\n        DatagridEditorsModule,\r\n        DatagridModule.forRoot([\r\n            ...EditorProviders\r\n        ]),\r\n        ComboListModule,\r\n        InputGroupModule,\r\n        FarrisDialogModule,\r\n        SwitchModule,\r\n        FarrisTabsModule,\r\n        LookupModule,\r\n        LoadingModule.forRoot({\r\n            message: 'Loading...'\r\n        }),\r\n        NotifyModule.forRoot(),\r\n        MessagerModule.forRoot({\r\n            width: 550,\r\n            height: 450\r\n        }),\r\n        ModalModule.forRoot(),\r\n        AifUiCommonModule,\r\n    ],\r\n    providers: [\r\n        CacheService,\r\n        SessionService,\r\n        HttpService,\r\n        FrmEventBus,\r\n        FuncsService,\r\n        LoadingService,\r\n        AppService,\r\n        FrameworkService,\r\n        { provide: LOCALE_ID, useValue: localStorage.getItem('languageCode') || 'zh-CHS' },\r\n        GSPMetadataRTService,\r\n        BusinessObjectRtService,\r\n        ProcessListHelpService,\r\n        { provide: BIF_LANG_RESOURCES, useValue: BILL_TRACKER_LANG_RESOURCES },\r\n        AifLocalePipe,\r\n    ],\r\n    declarations: [\r\n        ProcessListHelpComponent,\r\n        ProcHelpQuerySolutionComponent,\r\n    ],\r\n    entryComponents: [\r\n        ProcessListHelpComponent,\r\n        ProcHelpQuerySolutionComponent,\r\n    ]\r\n})\r\nexport class ProcessListHelpModule {\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { WfProcessEditorComponent } from './wf-process-editor.component';\r\nimport { PerformerConfigService } from './views/performer/performer-config.service';\r\nimport { EntryFormEditorComponent } from './views/entryForm/entry-form-editor.component';\r\nimport { ExpressionEditorComponent } from './views/expressionEditor/expression-editor.component';\r\nimport { AssignPerformerConfigComponent } from './views/assign-performer-config/assign-performer-config.component';\r\nimport { SignRuleComponent } from './views/sign-rule/sign-rule.component';\r\nimport { ApprovelItemsComponent } from './views/approvel-items/approvel-items.component';\r\nimport { ExecuteFormsComponent } from './views/execute-forms/execute-forms.component';\r\nimport { JumpScopeComponent } from './views/jump-scope/jump-scope.component';\r\nimport { BackwardRuleComponent } from './views/backward-rule/backward-rule.component';\r\nimport { ActivityComponentComponent } from './views/activity-component/activity-component.component';\r\nimport { PerformerComponent } from './views/performer/performer.component';\r\nimport { PerformerEditComponent } from './views/performer/views/performer-edit/performer-edit.component';\r\nimport { UserPerformerComponent } from './views/performer/views/user-performer/user-performer.component';\r\nimport { ComponentPerformerComponent } from './views/performer/views/component-performer/component-performer.component';\r\nimport { PositionPerformerComponent } from './views/performer/views/position-performer/position-performer.component';\r\nimport { PerformerOptionsComponent } from './views/performer/views/performer-options/performer-options.component';\r\nimport { ReportingLineComponent } from './views/performer/views/reporting-line/reporting-line.component';\r\nimport { TitleExpressionComponent } from './views/title-expression/title-expression.component';\r\nimport { SaveAsEditComponent } from './views/save-as-edit/save-as-edit.component';\r\nimport { OrganizationPotentialOwnerComponent } from './views/organization-potential-owner/organization-potential-owner.component';\r\nimport { CustomizeActionComponent } from './views/customize-action/customize-action.component';\r\nimport { CustomizeActionListComponent } from './views/customize-action/views/customize-action-list/customize-action-list.component';\r\nimport { JumpScopePipe } from './views/jump-scope/jump-scope.pipe';\r\nimport { UsersNamePipe } from './views/performer/views/user-performer/users-name.pipe';\r\nimport { PROCESS_DESIGNER_APP_PROVIDERS, PROCESS_DESIGNER_DOMAIN_PROVIDERS, PROCESS_DESIGNER_PART_PROVIDERS } from './index';\r\n\r\nimport { SessionService, HttpService } from '@ecp-caf/caf-common';\r\nimport { ExpressionService, ExpressionModule } from '@gsp-svc/expression';\r\nimport { CommonComponentUiRTService, CommonComponentUiModule } from '@gsp-cmp/ccmp-ui';\r\nimport { SelectMetadataRTComponent, GSPMetadataRTServiceModule, MetadataRTSelectModule } from '@gsp-lcm/metadatart-selector';\r\nimport { SysManagerUIModule } from '@gsp-sys/sysmgr-ui';\r\nimport { RtfAppHelpModule } from '@gsp-sys/rtf-ui';\r\n\r\nimport { TreeTableModule } from '@farris/ui-treetable';\r\nimport { PropertyPanelModule } from '@farris/ui-property-panel';\r\nimport { DataTableModule } from '@farris/ui-datatable';\r\nimport { LayoutModule } from '@farris/ui-layout';\r\nimport { NotifyModule } from '@farris/ui-notify';\r\nimport { FarrisDialogModule } from '@farris/ui-dialog';\r\nimport { SplitterModule } from '@farris/ui-splitter';\r\nimport { InputGroupModule } from '@farris/ui-input-group';\r\nimport { LookupModule } from '@farris/ui-lookup';\r\nimport { FlexLayoutModule } from '@farris/ui-flex-layout';\r\nimport { FarrisPanelModule } from '@farris/ui-panel';\r\nimport { FarrisResponsiveModule } from '@farris/ui-responsive';\r\nimport { FarrisTabsModule } from '@farris/ui-tabs';\r\nimport { LoadingModule } from '@farris/ui-loading';\r\nimport { MessagerModule } from '@farris/ui-messager';\r\nimport { ModalModule } from '@farris/ui-modal';\r\nimport { PopoverModule } from '@farris/ui-popover';\r\nimport { PaginationModule } from '@farris/ui-pagination';\r\nimport { FarrisDropdownModule } from '@farris/ui-dropdown';\r\nimport { DatagridEditorsModule, EditorProviders } from '@farris/ui-datagrid-editors';\r\nimport { DatagridModule } from '@farris/ui-datagrid';\r\nimport { ComboListModule } from '@farris/ui-combo-list';\r\nimport { FarrisFormsModule } from '@farris/ui-forms';\r\nimport { SwitchModule } from '@farris/ui-switch';\r\nimport { WizardModule } from '@farris/ui-wizard';\r\nimport { FarrisSectionModule } from '@farris/ui-section';\r\nimport { PerfectScrollbarModule } from '@farris/ui-perfect-scrollbar';\r\nimport { ProcessDeUtil } from './domain/process-de-util';\r\nimport { CallActivitySubProcessComponent } from './views/call-activity-sub-process/call-activity-sub-process.component';\r\nimport { WfBizprocessLookupModule } from '@gsp-wf/wf-bizprocess-lookup';\r\nimport { TimeLimitControlComponent } from './views/time-limit-control/time-limit-control.component';\r\nimport { SendMessageOperationComponent } from './views/time-limit-control/send-message-operation/send-message-operation.component';\r\nimport { NumberSpinnerModule } from '@farris/ui-number-spinner';\r\nimport { EventDefinitionComponent } from './views/event-definition/event-definition.component';\r\nimport { AnonymousSetComponent } from './views/anonymous-set/anonymous-set.component';\r\nimport { ProcessVariablesComponent } from './views/process-variables/process-variables.component';\r\nimport { VariableSettingComponent } from './views/variable-setting/variable-setting.component';\r\nimport { ConstantEditComponent } from './views/variable-setting/views/constant-edit/constant-edit.component';\r\nimport { ComponentEditComponent } from './views/variable-setting/views/component-edit/component-edit.component';\r\nimport { MessageNoticeComponent } from './views/message-notice/message-notice.component';\r\nimport { MessageNoticeEditComponent } from './views/message-notice/message-notice-edit/message-notice-edit.component';\r\nimport { AddExecuteFormComponent } from './views/execute-forms/add-execute-form/add-execute-form.component';\r\nimport { FormFormatConfigComponent } from './views/execute-forms/form-format-config/form-format-config.component';\r\nimport { FormConfigContainerComponent } from './views/execute-forms/form-config-container/form-config-container.component';\r\nimport { FarrisButtonModule } from '@farris/ui-button';\r\nimport { ParameterSettingComponent } from './views/execute-forms/parameter-setting/parameter-setting.component';\r\nimport { FormOperationConfigComponent } from './views/execute-forms/form-operation-config/form-operation-config.component';\r\nimport { NoteComponent } from './views/note/note.component';\r\nimport { ApprovalPivotComponent } from './views/approval-pivot/approval-pivot.component';\r\nimport { WfReportDefHelpComponent } from './views/performer/views/reporting-line/service/wf-report-def-help.component';\r\nimport { WfReportDefHelpService } from './views/performer/views/reporting-line/service/wf-report-def-help.service';\r\nimport { UrgeHandleRuleComponent } from './views/urge-handle-rule/urge-handle-rule.component';\r\n\r\nimport { MatrixPerformerComponent } from './views/performer/views/matrix-performer/matrix-performer.component';\r\nimport { EnumListComponent } from './views/performer/views/matrix-performer/enum-list/enum-list.component';\r\nimport { AutoHandleOperationComponent } from './views/time-limit-control/auto-handle-operation/auto-handle-operation.component';\r\nimport { ProcessListHelpModule } from './aif-process-list-help/process-list-help.module';\r\nimport { ProcessListHelpComponent } from './aif-process-list-help/components/process-list-help/process-list-help.component';\r\nimport { ExtendPropertyComponent } from './views/extend-property/extend-property.component';\r\nimport { CallActivitySubProcess2Component } from './views/call-activity-sub-process2/call-activity-sub-process2.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    WfProcessEditorComponent,\r\n    EntryFormEditorComponent,\r\n    ExpressionEditorComponent,\r\n    AssignPerformerConfigComponent,\r\n    SignRuleComponent,\r\n    ApprovelItemsComponent,\r\n    ExecuteFormsComponent,\r\n    JumpScopeComponent,\r\n    BackwardRuleComponent,\r\n    JumpScopePipe,\r\n    ActivityComponentComponent,\r\n    PerformerComponent,\r\n    PerformerEditComponent,\r\n    UserPerformerComponent,\r\n    ComponentPerformerComponent,\r\n    PositionPerformerComponent,\r\n    PerformerOptionsComponent,\r\n    UsersNamePipe,\r\n    ReportingLineComponent,\r\n    TitleExpressionComponent,\r\n    SaveAsEditComponent,\r\n    OrganizationPotentialOwnerComponent,\r\n    CustomizeActionComponent,\r\n    CustomizeActionListComponent,\r\n    CallActivitySubProcessComponent,\r\n    TimeLimitControlComponent,\r\n    SendMessageOperationComponent,\r\n    EventDefinitionComponent,\r\n    AnonymousSetComponent,\r\n    ProcessVariablesComponent,\r\n    VariableSettingComponent,\r\n    ConstantEditComponent,\r\n    ComponentEditComponent,\r\n    MessageNoticeComponent,\r\n    MessageNoticeEditComponent,\r\n    AddExecuteFormComponent,\r\n    FormFormatConfigComponent,\r\n    FormConfigContainerComponent,\r\n    ParameterSettingComponent,\r\n    FormOperationConfigComponent,\r\n    NoteComponent,\r\n    ApprovalPivotComponent,\r\n    WfReportDefHelpComponent,\r\n    UrgeHandleRuleComponent,\r\n    NoteComponent,\r\n    MatrixPerformerComponent,\r\n    EnumListComponent,\r\n    AutoHandleOperationComponent,\r\n    ExtendPropertyComponent,\r\n    CallActivitySubProcess2Component,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    SysManagerUIModule,\r\n    RtfAppHelpModule,\r\n    CommonComponentUiModule,\r\n    GSPMetadataRTServiceModule.forRoot(''),\r\n    MetadataRTSelectModule,\r\n    TreeTableModule,\r\n    DataTableModule,\r\n    LayoutModule,\r\n    NotifyModule,\r\n    FarrisDialogModule,\r\n    SplitterModule,\r\n    InputGroupModule,\r\n    LookupModule,\r\n    FlexLayoutModule,\r\n    FarrisPanelModule,\r\n    FarrisResponsiveModule,\r\n    ExpressionModule,\r\n    PropertyPanelModule,\r\n    FarrisTabsModule,\r\n    LoadingModule.forRoot({\r\n      message: 'å è½½ä¸­...'\r\n    }),\r\n    MessagerModule.forRoot({\r\n      width: 500\r\n    }),\r\n    ModalModule,\r\n    PopoverModule,\r\n    PaginationModule,\r\n    FarrisDropdownModule,\r\n    DatagridEditorsModule,\r\n    DatagridModule.forRoot([\r\n      ...EditorProviders\r\n    ]),\r\n    ComboListModule,\r\n    WizardModule,\r\n    FarrisFormsModule,\r\n    SwitchModule,\r\n    WfBizprocessLookupModule,\r\n    NumberSpinnerModule,\r\n    PerfectScrollbarModule,\r\n    FarrisSectionModule,\r\n    FarrisButtonModule,\r\n    ProcessListHelpModule,\r\n  ],\r\n  providers: [\r\n    SessionService,\r\n    HttpService,\r\n    ExpressionService,\r\n    CommonComponentUiRTService,\r\n    PROCESS_DESIGNER_APP_PROVIDERS,\r\n    PROCESS_DESIGNER_DOMAIN_PROVIDERS,\r\n    PROCESS_DESIGNER_PART_PROVIDERS,\r\n    PerformerConfigService,\r\n    ProcessDeUtil,\r\n    WfReportDefHelpService\r\n  ],\r\n  exports: [WfProcessEditorComponent],\r\n  entryComponents: [\r\n    EntryFormEditorComponent,\r\n    ExpressionEditorComponent,\r\n    AssignPerformerConfigComponent,\r\n    SignRuleComponent,\r\n    ApprovelItemsComponent,\r\n    ExecuteFormsComponent,\r\n    JumpScopeComponent,\r\n    BackwardRuleComponent,\r\n    ActivityComponentComponent,\r\n    SelectMetadataRTComponent,\r\n    PerformerComponent,\r\n    PerformerEditComponent,\r\n    UserPerformerComponent,\r\n    ComponentPerformerComponent,\r\n    PositionPerformerComponent,\r\n    PerformerOptionsComponent,\r\n    ReportingLineComponent,\r\n    TitleExpressionComponent,\r\n    SaveAsEditComponent,\r\n    OrganizationPotentialOwnerComponent,\r\n    CustomizeActionComponent,\r\n    CustomizeActionListComponent,\r\n    CallActivitySubProcessComponent,\r\n    TimeLimitControlComponent,\r\n    SendMessageOperationComponent,\r\n    EventDefinitionComponent,\r\n    AnonymousSetComponent,\r\n    ProcessVariablesComponent,\r\n    VariableSettingComponent,\r\n    ConstantEditComponent,\r\n    ComponentEditComponent,\r\n    MessageNoticeComponent,\r\n    MessageNoticeEditComponent,\r\n    AddExecuteFormComponent,\r\n    FormFormatConfigComponent,\r\n    FormConfigContainerComponent,\r\n    ParameterSettingComponent,\r\n    FormOperationConfigComponent,\r\n    NoteComponent,\r\n    ApprovalPivotComponent,\r\n    UrgeHandleRuleComponent,\r\n    NoteComponent,\r\n    MatrixPerformerComponent,\r\n    EnumListComponent,\r\n    AutoHandleOperationComponent,\r\n    ProcessListHelpComponent,\r\n    ExtendPropertyComponent,\r\n    CallActivitySubProcess2Component,\r\n  ],\r\n})\r\nexport class WfProcessEditorModule { }\r\n","import { ProcessOrganization } from './process-info';\r\n\r\nexport class RTProcessInfo {\r\n    rtProcDefId: string;\r\n    flowFormId: string;\r\n    /**\r\n     * æµç¨ç»ç»\r\n     */\r\n    procOrg?: ProcessOrganization;\r\n    /**\r\n     * è®¿é®çº§å«\r\n     */\r\n    accessLevel?: string;\r\n}\r\n"]}