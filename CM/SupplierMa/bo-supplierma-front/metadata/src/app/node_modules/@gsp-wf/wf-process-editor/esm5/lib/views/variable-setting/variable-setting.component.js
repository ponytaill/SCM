/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, HostBinding, Output, EventEmitter, Input, ViewChild, TemplateRef, Injector, ComponentFactoryResolver } from '@angular/core';
import { DatagridComponent } from '@farris/ui-datagrid';
import { MessagerService } from '@farris/ui-messager';
import { BsModalService } from '@farris/ui-modal';
import { ProcessVariablesComponent } from '../process-variables/process-variables.component';
import { ProcessDesignerUIState } from '../../app/process-designer.uistate';
import { VariableSetting } from './variable-setting';
import { EditorTypes } from '@farris/ui-datagrid-editors';
import { ExprEditMode, ExpressionService, InjectedType } from '@gsp-svc/expression';
import { ComponentEditComponent } from './views/component-edit/component-edit.component';
import { of } from 'rxjs';
var VariableSettingComponent = /** @class */ (function () {
    function VariableSettingComponent(resolver, injector, modalService, message, uistate, expr) {
        var _this = this;
        this.resolver = resolver;
        this.injector = injector;
        this.modalService = modalService;
        this.message = message;
        this.uistate = uistate;
        this.expr = expr;
        this.cls = 'farris-main-area flex-column';
        this.closeModal = new EventEmitter();
        this.submitModal = new EventEmitter();
        this.value = new Array();
        this.editorParams = {};
        this.columns = [];
        this.tags = [
            { value: 'constant', text: '常量' },
            { value: 'expression', text: '表达式' },
            { value: 'component', text: '构件' }
        ];
        this.opportunities = [
            { value: 'ACTIVITY_STARTED', text: '活动开始' },
            { value: 'ACTIVITY_COMPLETED', text: '活动结束' }
        ];
        this.modalConfig = {
            title: '变量设置',
            width: 780,
            height: 460,
            showButtons: true
        };
        this.beforeEdit = (/**
         * @param {?} param
         * @return {?}
         */
        function (param) {
            /** @type {?} */
            var rowData = (/** @type {?} */ (param.rowData));
            /** @type {?} */
            var column = param.column;
            if (column.field === 'valueText') {
                if (((/** @type {?} */ (rowData))).tag === _this.tags[0].value) {
                    param.column.editor = { type: EditorTypes.TEXTBOX, options: {} };
                }
                else {
                    param.column.editor = {
                        type: 'input-group',
                        options: {
                            groupText: '<i class="f-icon f-icon-lookup"></i>',
                            editable: false,
                            showClear: false,
                            clickHandle: (/**
                             * @param {?} e
                             * @return {?}
                             */
                            function (e) {
                                e.formControl.setValue(e.instance.value ? e.instance.value : '');
                                _this.valueEdit(e);
                            }),
                            clear: (/**
                             * @param {?} e
                             * @return {?}
                             */
                            function (e) {
                                console.log('clear', e);
                            })
                        }
                    };
                }
            }
            return of(true);
        });
    }
    /**
     * @return {?}
     */
    VariableSettingComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.columns = [
            {
                field: 'variableCode', width: 90, title: '变量编号', sortable: true,
                validators: [
                    { type: 'required', messager: '必填' }
                ]
            },
            {
                field: 'variableName', width: 90, title: '变量名称', sortable: true,
                validators: [
                    { type: 'required', messager: '必填' }
                ]
            }, {
                field: 'tag', width: 60, title: '值类型', sortable: true,
                formatter: {
                    type: 'enum',
                    options: { valueField: 'value', textField: 'text', data: this.tags }
                },
                editor: {
                    type: EditorTypes.COMBOLIST,
                    options: {
                        valueField: 'value', textField: 'text', data: this.tags, idField: 'value', panelHeight: 'auto', showClear: false,
                        selectChange: (/**
                         * @param {?} e
                         * @return {?}
                         */
                        function (e) {
                            _this.value = _this.value.map((/**
                             * @param {?} v
                             * @return {?}
                             */
                            function (v) {
                                if (v.variableCode === e.rowId) {
                                    v.value = null;
                                    v.valueText = null;
                                    if (v.component) {
                                        v.component = null;
                                    }
                                    return v;
                                }
                                else {
                                    return v;
                                }
                            }));
                        })
                    }
                },
                validators: [
                    { type: 'required', messager: '必填' }
                ]
            }, {
                field: 'executionTime', width: 80, title: '执行时机', sortable: true,
                formatter: {
                    type: 'enum',
                    options: { valueField: 'value', textField: 'text', data: this.opportunities }
                },
                editor: {
                    type: EditorTypes.COMBOLIST,
                    options: {
                        valueField: 'value', textField: 'text', data: this.opportunities, idField: 'value', panelHeight: 'auto', showClear: false,
                    }
                },
                validators: [
                    { type: 'required', messager: '必填' }
                ],
            },
            {
                field: 'valueText', width: 150, title: '变量值', showTips: true,
                editor: { type: EditorTypes.TEXTBOX, options: {} },
                validators: [
                    { type: 'required', messager: '必填' }
                ]
            }
        ];
    };
    /**
     * @return {?}
     */
    VariableSettingComponent.prototype.add = /**
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var dialog;
        /** @type {?} */
        var compFactory = this.resolver.resolveComponentFactory(ProcessVariablesComponent);
        /** @type {?} */
        var compRef = compFactory.create(this.injector);
        compRef.instance.variableSetting = true;
        compRef.instance.value = this.uistate.ProcessVariables;
        compRef.instance.variableSetEmitter.subscribe((/**
         * @param {?} re
         * @return {?}
         */
        function (re) {
            var e_1, _a;
            var _loop_1 = function (v) {
                /** @type {?} */
                var variableSet = new VariableSetting();
                variableSet.variableCode = v.data.name;
                variableSet.variableName = v.data.documentation;
                variableSet.tag = v.data.tag || _this.tags[0].value;
                variableSet.executionTime = v.data.executionTime || _this.opportunities[0].value;
                if (_this.value.findIndex((/**
                 * @param {?} i
                 * @return {?}
                 */
                function (i) { return i.variableCode === variableSet.variableCode; })) === -1) {
                    _this.value = _this.value.concat([variableSet]);
                }
            };
            try {
                for (var re_1 = tslib_1.__values(re), re_1_1 = re_1.next(); !re_1_1.done; re_1_1 = re_1.next()) {
                    var v = re_1_1.value;
                    _loop_1(v);
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (re_1_1 && !re_1_1.done && (_a = re_1.return)) _a.call(re_1);
                }
                finally { if (e_1) throw e_1.error; }
            }
            dialog.close();
        }));
        compRef.instance.closeModal.subscribe((/**
         * @param {?} re
         * @return {?}
         */
        function (re) {
            dialog.close();
        }));
        /** @type {?} */
        var modalConfig = {
            title: '流程变量',
            width: 660,
            height: 460,
            showButtons: true,
            buttons: compRef.instance.modalFooter
        };
        dialog = this.modalService.show(compRef, modalConfig);
    };
    /**
     * @return {?}
     */
    VariableSettingComponent.prototype.delete = /**
     * @return {?}
     */
    function () {
        this.grid.endCellEdit();
        /** @type {?} */
        var selected = this.grid.selectedRow;
        if (!selected) {
            this.message.info('尚未选中变量！');
            return;
        }
        this.value = this.value.filter((/**
         * @param {?} v
         * @return {?}
         */
        function (v) { return v.variableCode !== selected.data.variableCode; }));
    };
    /**
     * @return {?}
     */
    VariableSettingComponent.prototype.clickOK = /**
     * @return {?}
     */
    function () {
        this.grid.endCellEdit();
        if (this.validator()) {
            /** @type {?} */
            var object = { value: this.value, parameters: null };
            this.submitModal.emit(object);
        }
    };
    /**
     * @return {?}
     */
    VariableSettingComponent.prototype.clickCancel = /**
     * @return {?}
     */
    function () {
        this.closeModal.emit();
    };
    /**
     * @return {?}
     */
    VariableSettingComponent.prototype.validator = /**
     * @return {?}
     */
    function () {
        var e_2, _a;
        try {
            for (var _b = tslib_1.__values(this.value), _c = _b.next(); !_c.done; _c = _b.next()) {
                var item = _c.value;
                if (!item.value) {
                    this.message.warning('变量值不允许为空！');
                    return false;
                }
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_2) throw e_2.error; }
        }
        return true;
    };
    /**
     * @param {?} data
     * @return {?}
     */
    VariableSettingComponent.prototype.endEdit = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        if (data.column.field === 'valueText' && data.rowData.tag === this.tags[0].value) {
            data.rowData.value = data.rowData.valueText;
        }
    };
    /**
     * @param {?} e
     * @return {?}
     */
    VariableSettingComponent.prototype.valueEdit = /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
        /** @type {?} */
        var rowdata = e.rowData;
        switch (rowdata.tag) {
            case this.tags[1].value:
                this.editExpression(e);
                break;
            case this.tags[2].value:
                this.editComponent(e);
                break;
        }
    };
    /**
     * @private
     * @param {?} e
     * @return {?}
     */
    VariableSettingComponent.prototype.editExpression = /**
     * @private
     * @param {?} e
     * @return {?}
     */
    function (e) {
        var e_3, _a, e_4, _b, e_5, _c, e_6, _d, e_7, _e, e_8, _f;
        /** @type {?} */
        var data = e.rowData;
        if (this.uistate.schemas.length > 0) {
            try {
                for (var _g = tslib_1.__values(this.uistate.schemas), _h = _g.next(); !_h.done; _h = _g.next()) {
                    var schema = _h.value;
                    this.expr.addSchema('Schema', schema);
                }
            }
            catch (e_3_1) { e_3 = { error: e_3_1 }; }
            finally {
                try {
                    if (_h && !_h.done && (_a = _g.return)) _a.call(_g);
                }
                finally { if (e_3) throw e_3.error; }
            }
            if (this.uistate.schemas[0].entityTypes && this.uistate.schemas[0].entityTypes.length > 0) {
                /** @type {?} */
                var entityType = this.uistate.schemas[0].entityTypes[0];
                this.expr.addInjectedEntity(entityType.name, 'Schema', entityType.name, InjectedType.EntityType);
            }
        }
        /** @type {?} */
        var context = new Array();
        if (this.uistate.procInstContext.length > 0) {
            try {
                for (var _j = tslib_1.__values(this.uistate.procInstContext), _k = _j.next(); !_k.done; _k = _j.next()) {
                    var variable = _k.value;
                    context.push(variable);
                }
            }
            catch (e_4_1) { e_4 = { error: e_4_1 }; }
            finally {
                try {
                    if (_k && !_k.done && (_b = _j.return)) _b.call(_j);
                }
                finally { if (e_4) throw e_4.error; }
            }
        }
        if (this.uistate.formalParameterContext.length > 0) {
            var _loop_2 = function (variable) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) { return c.key === variable.key; }))) {
                    context.push(variable);
                }
            };
            try {
                for (var _l = tslib_1.__values(this.uistate.formalParameterContext), _m = _l.next(); !_m.done; _m = _l.next()) {
                    var variable = _m.value;
                    _loop_2(variable);
                }
            }
            catch (e_5_1) { e_5 = { error: e_5_1 }; }
            finally {
                try {
                    if (_m && !_m.done && (_c = _l.return)) _c.call(_l);
                }
                finally { if (e_5) throw e_5.error; }
            }
        }
        if (this.uistate.participantContext.length > 0) {
            var _loop_3 = function (variable) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) { return c.key === variable.key; }))) {
                    context.push(variable);
                }
            };
            try {
                for (var _o = tslib_1.__values(this.uistate.participantContext), _p = _o.next(); !_p.done; _p = _o.next()) {
                    var variable = _p.value;
                    _loop_3(variable);
                }
            }
            catch (e_6_1) { e_6 = { error: e_6_1 }; }
            finally {
                try {
                    if (_p && !_p.done && (_d = _o.return)) _d.call(_o);
                }
                finally { if (e_6) throw e_6.error; }
            }
        }
        if (this.uistate.processVariableContext.length > 0) {
            var _loop_4 = function (variable) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) { return c.key === variable.key; }))) {
                    context.push(variable);
                }
            };
            try {
                for (var _q = tslib_1.__values(this.uistate.processVariableContext), _r = _q.next(); !_r.done; _r = _q.next()) {
                    var variable = _r.value;
                    _loop_4(variable);
                }
            }
            catch (e_7_1) { e_7 = { error: e_7_1 }; }
            finally {
                try {
                    if (_r && !_r.done && (_e = _q.return)) _e.call(_q);
                }
                finally { if (e_7) throw e_7.error; }
            }
        }
        if (context.length > 0) {
            try {
                for (var context_1 = tslib_1.__values(context), context_1_1 = context_1.next(); !context_1_1.done; context_1_1 = context_1.next()) {
                    var v = context_1_1.value;
                    this.expr.addContext(v);
                }
            }
            catch (e_8_1) { e_8 = { error: e_8_1 }; }
            finally {
                try {
                    if (context_1_1 && !context_1_1.done && (_f = context_1.return)) _f.call(context_1);
                }
                finally { if (e_8) throw e_8.error; }
            }
        }
        this.expr.setEditPattern(ExprEditMode.Advanced); // 表达式展现模式：默认高级版
        this.expr.addExpressionText(data.value);
        this.expr.buildExpression().then((/**
         * @param {?} re
         * @return {?}
         */
        function (re) {
            e.formControl.setValue(re);
            e.instance.cd.detectChanges();
            data.value = re;
        }));
    };
    /**
     * @private
     * @param {?} e
     * @return {?}
     */
    VariableSettingComponent.prototype.editComponent = /**
     * @private
     * @param {?} e
     * @return {?}
     */
    function (e) {
        /** @type {?} */
        var data = e.rowData;
        /** @type {?} */
        var dialog;
        /** @type {?} */
        var compFactory = this.resolver.resolveComponentFactory(ComponentEditComponent);
        /** @type {?} */
        var compRef = compFactory.create(this.injector);
        compRef.instance.component = data.component;
        compRef.instance.submitEmitter.subscribe((/**
         * @param {?} re
         * @return {?}
         */
        function (re) {
            e.formControl.setValue(re.Name + '-' + re.MethodCode);
            e.instance.cd.detectChanges();
            data.value = re.Id;
            data.component = re;
            dialog.close();
        }));
        compRef.instance.closeEmitter.subscribe((/**
         * @param {?} re
         * @return {?}
         */
        function (re) {
            dialog.close();
        }));
        /** @type {?} */
        var modalConfig = {
            title: '构件',
            width: 800,
            height: 515,
            showButtons: true,
            buttons: compRef.instance.footer
        };
        dialog = this.modalService.show(compRef, modalConfig);
    };
    VariableSettingComponent.decorators = [
        { type: Component, args: [{
                    selector: 'lib-variable-setting',
                    template: "<div class=\"f-page\">\r\n  <div class=\"f-page-header\">\r\n    <nav class=\"f-page-header-base\">\r\n      <div class=\"f-title\">\r\n        <span class=\"f-title-icon f-text-orna-bill\">\r\n          <i class=\"f-icon f-icon-page-title-administer\"></i>\r\n        </span>\r\n        <h4 class=\"f-title-text\">\u5217\u8868</h4>\r\n      </div>\r\n      <div class=\"btn-toolbar btn-group-lg\">\r\n        <button class=\"btn btn-primary mr-2\" (click)=\"add()\">\u65B0\u589E</button>\r\n        <button class=\"btn btn-secondary\" (click)=\"delete()\">\u5220\u9664</button>\r\n      </div>\r\n    </nav>\r\n  </div>\r\n  <div class=\"f-page-main f-utils-fill-flex-column h-100\">\r\n    <div class=\"f-utils-fill-flex-column farris-overflow-y-auto h-100\">\r\n      <farris-datagrid #grid [data]=\"value\" [columns]=\"columns\" [idField]=\"'variableCode'\" [fit]=\"true\" [fitColumns]=\"true\"\r\n        [editable]=\"true\" [editMode]=\"'cell'\" [pagination]=\"false\" [showCheckbox]=\"false\" [multiSelect]=\"false\"\r\n        [showLineNumber]=\"true\" [lineNumberTitle]=\"'\u5E8F\u53F7'\" [lineNumberWidth]=\"50\" [striped]=\"true\"\r\n        (endEdit)=\"endEdit($event)\" [beforeEdit]=\"beforeEdit\">\r\n      </farris-datagrid>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #iconSelectFooter>\r\n  <button type=\"button\" class=\"btn btn-primary btn-sm px-3 mx-2\" (click)=\"clickOK()\">\u786E\u5B9A</button>\r\n  <button type=\"button\" class=\"btn btn-secondary btn-sm px-3 mx-2\" (click)=\"clickCancel()\">\u53D6\u6D88</button>\r\n</ng-template>\r\n\r\n<ng-template #cell let-ctx>\r\n  <span (click)=\"valueEdit(ctx)\" class=\"link\"> {{ ctx.rowData.value?'\uFF08\u5DF2\u8BBE\u7F6E\uFF09': '\uFF08\u672A\u8BBE\u7F6E\uFF09' }}</span>\r\n</ng-template>",
                    styles: [".link{color:#1206bb;font-size:14px}.link:hover{color:#5d478b;font-size:14px}"]
                }] }
    ];
    /** @nocollapse */
    VariableSettingComponent.ctorParameters = function () { return [
        { type: ComponentFactoryResolver },
        { type: Injector },
        { type: BsModalService },
        { type: MessagerService },
        { type: ProcessDesignerUIState },
        { type: ExpressionService }
    ]; };
    VariableSettingComponent.propDecorators = {
        cls: [{ type: HostBinding, args: ['class',] }],
        closeModal: [{ type: Output }],
        submitModal: [{ type: Output }],
        value: [{ type: Input }],
        editorParams: [{ type: Input }],
        modalFooter: [{ type: ViewChild, args: ['iconSelectFooter',] }],
        grid: [{ type: ViewChild, args: ['grid',] }],
        cell: [{ type: ViewChild, args: ['cell',] }]
    };
    return VariableSettingComponent;
}());
export { VariableSettingComponent };
if (false) {
    /** @type {?} */
    VariableSettingComponent.prototype.cls;
    /** @type {?} */
    VariableSettingComponent.prototype.closeModal;
    /** @type {?} */
    VariableSettingComponent.prototype.submitModal;
    /** @type {?} */
    VariableSettingComponent.prototype.value;
    /** @type {?} */
    VariableSettingComponent.prototype.editorParams;
    /** @type {?} */
    VariableSettingComponent.prototype.modalFooter;
    /** @type {?} */
    VariableSettingComponent.prototype.grid;
    /** @type {?} */
    VariableSettingComponent.prototype.cell;
    /** @type {?} */
    VariableSettingComponent.prototype.columns;
    /**
     * @type {?}
     * @private
     */
    VariableSettingComponent.prototype.tags;
    /**
     * @type {?}
     * @private
     */
    VariableSettingComponent.prototype.opportunities;
    /** @type {?} */
    VariableSettingComponent.prototype.modalConfig;
    /** @type {?} */
    VariableSettingComponent.prototype.beforeEdit;
    /**
     * @type {?}
     * @private
     */
    VariableSettingComponent.prototype.resolver;
    /**
     * @type {?}
     * @private
     */
    VariableSettingComponent.prototype.injector;
    /**
     * @type {?}
     * @private
     */
    VariableSettingComponent.prototype.modalService;
    /**
     * @type {?}
     * @private
     */
    VariableSettingComponent.prototype.message;
    /**
     * @type {?}
     * @private
     */
    VariableSettingComponent.prototype.uistate;
    /**
     * @type {?}
     * @private
     */
    VariableSettingComponent.prototype.expr;
}
var VariableSettingConverter = /** @class */ (function () {
    function VariableSettingConverter() {
    }
    /**
     * @param {?} data
     * @return {?}
     */
    VariableSettingConverter.prototype.convertTo = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        if (data && data.length > 0) {
            return '（已设置）';
        }
        else {
            return '（未设置）';
        }
    };
    return VariableSettingConverter;
}());
export { VariableSettingConverter };
//# sourceMappingURL=data:application/json;base64,