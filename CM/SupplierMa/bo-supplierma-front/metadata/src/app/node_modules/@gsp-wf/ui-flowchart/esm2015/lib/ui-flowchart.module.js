/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { UIFlowchartComponent } from './task-flowchart/task-flowchart.component';
import { CommonModule } from '@angular/common';
import { HttpService } from '@ecp-caf/caf-common';
import { UiFlowchartService } from './services/ui-flowchart.service';
import { WFFlowchartService } from './wf-flowchart.service';
import { MessagerModule } from '@farris/ui-messager';
import { FarrisDialogModule } from '@farris/ui-dialog';
import { TranslatePipe } from './services/translate.pipe';
import { LayoutModule } from '@farris/ui-layout';
import { FarrisSectionModule } from '@farris/ui-section';
import { WfApprovalLogsModule } from '@gsp-wf/wf-approval-logs';
import { ComboListModule } from '@farris/ui-combo-list';
import { ReactiveFormsModule, FormsModule } from '@angular/forms';
import { FDropdownDirectiveTypeModule } from '@farris/ui-dropdown';
import { DatagridModule } from '@farris/ui-datagrid';
import { NotifyModule } from '@farris/ui-notify';
export class UiFlowchartModule {
}
UiFlowchartModule.decorators = [
    { type: NgModule, args: [{
                declarations: [
                    UIFlowchartComponent,
                    TranslatePipe
                ],
                imports: [
                    LayoutModule,
                    CommonModule,
                    FarrisDialogModule,
                    MessagerModule.forRoot({
                        width: 500
                    }),
                    FarrisSectionModule,
                    WfApprovalLogsModule,
                    ComboListModule,
                    ReactiveFormsModule,
                    FormsModule,
                    FDropdownDirectiveTypeModule,
                    DatagridModule,
                    NotifyModule
                ],
                exports: [UIFlowchartComponent],
                providers: [
                    HttpService,
                    UiFlowchartService,
                    WFFlowchartService,
                ],
                entryComponents: [
                    UIFlowchartComponent
                ]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidWktZmxvd2NoYXJ0Lm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc3Atd2YvdWktZmxvd2NoYXJ0LyIsInNvdXJjZXMiOlsibGliL3VpLWZsb3djaGFydC5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sMkNBQTJDLENBQUM7QUFDakYsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUNsRCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUNyRSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUM1RCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDckQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDdkQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQzFELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNqRCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUN6RCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUNoRSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDeEQsT0FBTyxFQUFFLG1CQUFtQixFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ2xFLE9BQU8sRUFBRSw0QkFBNEIsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ25FLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUNyRCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFnQ2pELE1BQU0sT0FBTyxpQkFBaUI7OztZQTlCN0IsUUFBUSxTQUFDO2dCQUNSLFlBQVksRUFBRTtvQkFDWixvQkFBb0I7b0JBQ3BCLGFBQWE7aUJBQUM7Z0JBQ2hCLE9BQU8sRUFBRTtvQkFDUCxZQUFZO29CQUNaLFlBQVk7b0JBQ1osa0JBQWtCO29CQUNsQixjQUFjLENBQUMsT0FBTyxDQUFDO3dCQUNyQixLQUFLLEVBQUUsR0FBRztxQkFDWCxDQUFDO29CQUNGLG1CQUFtQjtvQkFDbkIsb0JBQW9CO29CQUNwQixlQUFlO29CQUNmLG1CQUFtQjtvQkFDbkIsV0FBVztvQkFDWCw0QkFBNEI7b0JBQzVCLGNBQWM7b0JBQ2QsWUFBWTtpQkFDYjtnQkFDRCxPQUFPLEVBQUUsQ0FBQyxvQkFBb0IsQ0FBQztnQkFDL0IsU0FBUyxFQUFFO29CQUNULFdBQVc7b0JBQ1gsa0JBQWtCO29CQUNsQixrQkFBa0I7aUJBQ25CO2dCQUNELGVBQWUsRUFBRTtvQkFDZixvQkFBb0I7aUJBQ3JCO2FBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBVSUZsb3djaGFydENvbXBvbmVudCB9IGZyb20gJy4vdGFzay1mbG93Y2hhcnQvdGFzay1mbG93Y2hhcnQuY29tcG9uZW50JztcclxuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcclxuaW1wb3J0IHsgSHR0cFNlcnZpY2UgfSBmcm9tICdAZWNwLWNhZi9jYWYtY29tbW9uJztcclxuaW1wb3J0IHsgVWlGbG93Y2hhcnRTZXJ2aWNlIH0gZnJvbSAnLi9zZXJ2aWNlcy91aS1mbG93Y2hhcnQuc2VydmljZSc7XHJcbmltcG9ydCB7IFdGRmxvd2NoYXJ0U2VydmljZSB9IGZyb20gJy4vd2YtZmxvd2NoYXJ0LnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBNZXNzYWdlck1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktbWVzc2FnZXInO1xyXG5pbXBvcnQgeyBGYXJyaXNEaWFsb2dNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWRpYWxvZyc7XHJcbmltcG9ydCB7IFRyYW5zbGF0ZVBpcGUgfSBmcm9tICcuL3NlcnZpY2VzL3RyYW5zbGF0ZS5waXBlJztcclxuaW1wb3J0IHsgTGF5b3V0TW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1sYXlvdXQnO1xyXG5pbXBvcnQgeyBGYXJyaXNTZWN0aW9uTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1zZWN0aW9uJztcclxuaW1wb3J0IHsgV2ZBcHByb3ZhbExvZ3NNb2R1bGUgfSBmcm9tICdAZ3NwLXdmL3dmLWFwcHJvdmFsLWxvZ3MnO1xyXG5pbXBvcnQgeyBDb21ib0xpc3RNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWNvbWJvLWxpc3QnO1xyXG5pbXBvcnQgeyBSZWFjdGl2ZUZvcm1zTW9kdWxlLCBGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcclxuaW1wb3J0IHsgRkRyb3Bkb3duRGlyZWN0aXZlVHlwZU1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktZHJvcGRvd24nO1xyXG5pbXBvcnQgeyBEYXRhZ3JpZE1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktZGF0YWdyaWQnO1xyXG5pbXBvcnQgeyBOb3RpZnlNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLW5vdGlmeSc7XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGRlY2xhcmF0aW9uczogW1xyXG4gICAgVUlGbG93Y2hhcnRDb21wb25lbnQsXHJcbiAgICBUcmFuc2xhdGVQaXBlXSxcclxuICBpbXBvcnRzOiBbXHJcbiAgICBMYXlvdXRNb2R1bGUsXHJcbiAgICBDb21tb25Nb2R1bGUsXHJcbiAgICBGYXJyaXNEaWFsb2dNb2R1bGUsXHJcbiAgICBNZXNzYWdlck1vZHVsZS5mb3JSb290KHtcclxuICAgICAgd2lkdGg6IDUwMFxyXG4gICAgfSksXHJcbiAgICBGYXJyaXNTZWN0aW9uTW9kdWxlLFxyXG4gICAgV2ZBcHByb3ZhbExvZ3NNb2R1bGUsXHJcbiAgICBDb21ib0xpc3RNb2R1bGUsXHJcbiAgICBSZWFjdGl2ZUZvcm1zTW9kdWxlLFxyXG4gICAgRm9ybXNNb2R1bGUsXHJcbiAgICBGRHJvcGRvd25EaXJlY3RpdmVUeXBlTW9kdWxlLFxyXG4gICAgRGF0YWdyaWRNb2R1bGUsXHJcbiAgICBOb3RpZnlNb2R1bGVcclxuICBdLFxyXG4gIGV4cG9ydHM6IFtVSUZsb3djaGFydENvbXBvbmVudF0sXHJcbiAgcHJvdmlkZXJzOiBbXHJcbiAgICBIdHRwU2VydmljZSxcclxuICAgIFVpRmxvd2NoYXJ0U2VydmljZSxcclxuICAgIFdGRmxvd2NoYXJ0U2VydmljZSxcclxuICBdLFxyXG4gIGVudHJ5Q29tcG9uZW50czogW1xyXG4gICAgVUlGbG93Y2hhcnRDb21wb25lbnRcclxuICBdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBVaUZsb3djaGFydE1vZHVsZSB7IH1cclxuIl19