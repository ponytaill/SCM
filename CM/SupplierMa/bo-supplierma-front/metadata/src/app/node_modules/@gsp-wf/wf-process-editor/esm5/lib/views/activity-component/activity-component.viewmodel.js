/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { ActivityComponentUIState } from './activity-component.uistate';
import { ActivityComponentRepository } from './activity-component.repository';
import { MessagerService } from '@farris/ui-messager';
var ActivityComponentViewModel = /** @class */ (function () {
    function ActivityComponentViewModel(uistate, repository, messager) {
        this.uistate = uistate;
        this.repository = repository;
        this.messager = messager;
    }
    /**
     * @return {?}
     */
    ActivityComponentViewModel.prototype.deleteRow = /**
     * @return {?}
     */
    function () {
        if (this.uistate.curComponent) {
            if (this.uistate.curComponent.executionTime === 'LOADDATA') {
                this.messager.info('取数构件不允许删除，请了解！');
            }
            else {
                this.repository.removeComponent(this.uistate.curComponent.id);
            }
        }
        else {
            return;
        }
    };
    /**
     * @param {?} cpt
     * @return {?}
     */
    ActivityComponentViewModel.prototype.componentSelect = /**
     * @param {?} cpt
     * @return {?}
     */
    function (cpt) {
        if (cpt) {
            this.repository.addComponent(cpt);
        }
    };
    /**
     * @param {?} flowFormId
     * @param {?} bizActId
     * @return {?}
     */
    ActivityComponentViewModel.prototype.loadComponents = /**
     * @param {?} flowFormId
     * @param {?} bizActId
     * @return {?}
     */
    function (flowFormId, bizActId) {
        this.repository.loadComponents(flowFormId, bizActId);
    };
    ActivityComponentViewModel.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    ActivityComponentViewModel.ctorParameters = function () { return [
        { type: ActivityComponentUIState },
        { type: ActivityComponentRepository },
        { type: MessagerService }
    ]; };
    return ActivityComponentViewModel;
}());
export { ActivityComponentViewModel };
if (false) {
    /**
     * @type {?}
     * @private
     */
    ActivityComponentViewModel.prototype.uistate;
    /**
     * @type {?}
     * @private
     */
    ActivityComponentViewModel.prototype.repository;
    /**
     * @type {?}
     * @private
     */
    ActivityComponentViewModel.prototype.messager;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWN0aXZpdHktY29tcG9uZW50LnZpZXdtb2RlbC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc3Atd2Yvd2YtcHJvY2Vzcy1lZGl0b3IvIiwic291cmNlcyI6WyJsaWIvdmlld3MvYWN0aXZpdHktY29tcG9uZW50L2FjdGl2aXR5LWNvbXBvbmVudC52aWV3bW9kZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDeEUsT0FBTyxFQUFFLDJCQUEyQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFHOUUsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBRXREO0lBR0ksb0NBQ1ksT0FBaUMsRUFDakMsVUFBdUMsRUFDdkMsUUFBeUI7UUFGekIsWUFBTyxHQUFQLE9BQU8sQ0FBMEI7UUFDakMsZUFBVSxHQUFWLFVBQVUsQ0FBNkI7UUFDdkMsYUFBUSxHQUFSLFFBQVEsQ0FBaUI7SUFDakMsQ0FBQzs7OztJQUVMLDhDQUFTOzs7SUFBVDtRQUNJLElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQyxZQUFZLEVBQUU7WUFDM0IsSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxhQUFhLEtBQUssVUFBVSxFQUFFO2dCQUN4RCxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO2FBQ3hDO2lCQUFNO2dCQUNILElBQUksQ0FBQyxVQUFVLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLEVBQUUsQ0FBQyxDQUFDO2FBQ2pFO1NBQ0o7YUFBTTtZQUNILE9BQU87U0FDVjtJQUNMLENBQUM7Ozs7O0lBQ0Qsb0RBQWU7Ozs7SUFBZixVQUFnQixHQUFpQjtRQUM3QixJQUFJLEdBQUcsRUFBRTtZQUNMLElBQUksQ0FBQyxVQUFVLENBQUMsWUFBWSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1NBQ3JDO0lBQ0wsQ0FBQzs7Ozs7O0lBRUQsbURBQWM7Ozs7O0lBQWQsVUFBZSxVQUFrQixFQUFFLFFBQWdCO1FBQy9DLElBQUksQ0FBQyxVQUFVLENBQUMsY0FBYyxDQUFDLFVBQVUsRUFBRSxRQUFRLENBQUMsQ0FBQztJQUN6RCxDQUFDOztnQkE1QkosVUFBVTs7OztnQkFORix3QkFBd0I7Z0JBQ3hCLDJCQUEyQjtnQkFHM0IsZUFBZTs7SUErQnhCLGlDQUFDO0NBQUEsQUE3QkQsSUE2QkM7U0EzQlksMEJBQTBCOzs7Ozs7SUFFL0IsNkNBQXlDOzs7OztJQUN6QyxnREFBK0M7Ozs7O0lBQy9DLDhDQUFpQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQWN0aXZpdHlDb21wb25lbnRVSVN0YXRlIH0gZnJvbSAnLi9hY3Rpdml0eS1jb21wb25lbnQudWlzdGF0ZSc7XHJcbmltcG9ydCB7IEFjdGl2aXR5Q29tcG9uZW50UmVwb3NpdG9yeSB9IGZyb20gJy4vYWN0aXZpdHktY29tcG9uZW50LnJlcG9zaXRvcnknO1xyXG5pbXBvcnQgeyBCaXpDb21wb25lbnRFbnRpdHkgfSBmcm9tICcuLi8uLi9kb21haW4vZW50aXRpZXMvYml6LWNvbXBvbmVudC5lbnRpdHknO1xyXG5pbXBvcnQgeyBHc3BDb21wb25lbnQgfSBmcm9tICdAZ3NwLWNtcC9jb21tb24tY29tcG9uZW50JztcclxuaW1wb3J0IHsgTWVzc2FnZXJTZXJ2aWNlIH0gZnJvbSAnQGZhcnJpcy91aS1tZXNzYWdlcic7XHJcblxyXG5ASW5qZWN0YWJsZSgpXHJcblxyXG5leHBvcnQgY2xhc3MgQWN0aXZpdHlDb21wb25lbnRWaWV3TW9kZWwge1xyXG4gICAgY29uc3RydWN0b3IoXHJcbiAgICAgICAgcHJpdmF0ZSB1aXN0YXRlOiBBY3Rpdml0eUNvbXBvbmVudFVJU3RhdGUsXHJcbiAgICAgICAgcHJpdmF0ZSByZXBvc2l0b3J5OiBBY3Rpdml0eUNvbXBvbmVudFJlcG9zaXRvcnksXHJcbiAgICAgICAgcHJpdmF0ZSBtZXNzYWdlcjogTWVzc2FnZXJTZXJ2aWNlXHJcbiAgICApIHsgfVxyXG5cclxuICAgIGRlbGV0ZVJvdygpIHtcclxuICAgICAgICBpZiAodGhpcy51aXN0YXRlLmN1ckNvbXBvbmVudCkge1xyXG4gICAgICAgICAgICBpZiAodGhpcy51aXN0YXRlLmN1ckNvbXBvbmVudC5leGVjdXRpb25UaW1lID09PSAnTE9BRERBVEEnKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLm1lc3NhZ2VyLmluZm8oJ+WPluaVsOaehOS7tuS4jeWFgeiuuOWIoOmZpO+8jOivt+S6huino++8gScpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5yZXBvc2l0b3J5LnJlbW92ZUNvbXBvbmVudCh0aGlzLnVpc3RhdGUuY3VyQ29tcG9uZW50LmlkKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBjb21wb25lbnRTZWxlY3QoY3B0OiBHc3BDb21wb25lbnQpIHtcclxuICAgICAgICBpZiAoY3B0KSB7XHJcbiAgICAgICAgICAgIHRoaXMucmVwb3NpdG9yeS5hZGRDb21wb25lbnQoY3B0KTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgbG9hZENvbXBvbmVudHMoZmxvd0Zvcm1JZDogc3RyaW5nLCBiaXpBY3RJZDogc3RyaW5nKSB7XHJcbiAgICAgICAgdGhpcy5yZXBvc2l0b3J5LmxvYWRDb21wb25lbnRzKGZsb3dGb3JtSWQsIGJpekFjdElkKTtcclxuICAgIH1cclxufVxyXG4iXX0=