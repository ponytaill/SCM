import { ParseUtil } from './parse_util';
/**
 * 数据变量解析
 */
var DataVariableParser = /** @class */ (function () {
    function DataVariableParser() {
    }
    /**
     * 解析变量
     * @param expression 表达式
     * @param context 上下文
     */
    DataVariableParser.prototype.parse = function (expression, context) {
        var _this = this;
        var appContext = ParseUtil.getAppContext(context);
        var paths = this.extractPaths(expression);
        // 1、单个的表达式：直接求值
        if (paths.length === 1 && expression === "{DATA~" + paths[0] + "}") {
            return this.getValue(paths[0], appContext);
        }
        // 2、其他情况：字符串替换
        paths.forEach(function (path) {
            var searchValue = "{DATA~" + path + "}";
            var replaceValue = _this.getValue(path, appContext);
            expression = expression.replace(searchValue, replaceValue);
        });
        return expression;
    };
    /**
     * 提取路径
     */
    DataVariableParser.prototype.extractPaths = function (expression) {
        var paths = [];
        // 查找所有的uiState变量字符串
        var DATA_PATTERN_G = /\{DATA~(\S+?)\}/g;
        var dataVariables = expression.match(DATA_PATTERN_G);
        if (dataVariables === null) {
            return [];
        }
        // 提取后边的路径
        var DATA_PATTERN = /\{DATA~(\S+?)\}/;
        dataVariables.forEach(function (dataVariable) {
            var pathMatches = dataVariable.match(DATA_PATTERN);
            if (pathMatches != null && pathMatches.length === 2) {
                paths.push(pathMatches[1]);
            }
        });
        return paths;
    };
    /**
     * 获取值
     * @param path 路径：/
     */
    DataVariableParser.prototype.getValue = function (path, appContext) {
        var parts = path.split('/').filter(function (part) {
            return part !== '';
        });
        var frameContext = appContext.viewModelContextManager.getContextById(parts[0]);
        if (!frameContext) {
            throw new Error(path + "\u4E0D\u6B63\u786E\uFF0C\u8BF7\u68C0\u67E5\uFF01");
        }
        var bindingData = frameContext.bindingData;
        if (!bindingData) {
            throw new Error(path + "\u4E0D\u6B63\u786E\uFF0C\u8BF7\u68C0\u67E5\uFF01");
        }
        return bindingData.getValue(parts.slice(1));
    };
    return DataVariableParser;
}());
export { DataVariableParser };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YV92YXJpYWJsZV9wYXJzZXIuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL21vYmlsZS1kZXZraXQvIiwic291cmNlcyI6WyJsaWIvdmFyaWFibGUvZGF0YV92YXJpYWJsZV9wYXJzZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBTUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGNBQWMsQ0FBQztBQUV6Qzs7R0FFRztBQUNIO0lBQUE7SUF3RUEsQ0FBQztJQXRFQzs7OztPQUlHO0lBQ0gsa0NBQUssR0FBTCxVQUFNLFVBQWtCLEVBQUUsT0FBWTtRQUF0QyxpQkFpQkM7UUFoQkMsSUFBTSxVQUFVLEdBQUcsU0FBUyxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUNwRCxJQUFNLEtBQUssR0FBYSxJQUFJLENBQUMsWUFBWSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBRXRELGdCQUFnQjtRQUNoQixJQUFJLEtBQUssQ0FBQyxNQUFNLEtBQUssQ0FBQyxJQUFJLFVBQVUsS0FBSyxXQUFTLEtBQUssQ0FBQyxDQUFDLENBQUMsTUFBRyxFQUFFO1lBQzdELE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUUsVUFBVSxDQUFDLENBQUM7U0FDNUM7UUFFRCxlQUFlO1FBQ2YsS0FBSyxDQUFDLE9BQU8sQ0FBRSxVQUFDLElBQVk7WUFDMUIsSUFBTSxXQUFXLEdBQUcsV0FBUyxJQUFJLE1BQUcsQ0FBQztZQUNyQyxJQUFNLFlBQVksR0FBRyxLQUFJLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRSxVQUFVLENBQUMsQ0FBQztZQUNyRCxVQUFVLEdBQUcsVUFBVSxDQUFDLE9BQU8sQ0FBQyxXQUFXLEVBQUUsWUFBWSxDQUFDLENBQUM7UUFDN0QsQ0FBQyxDQUFDLENBQUM7UUFFSCxPQUFRLFVBQVUsQ0FBQztJQUNyQixDQUFDO0lBRUQ7O09BRUc7SUFDSyx5Q0FBWSxHQUFwQixVQUFxQixVQUFrQjtRQUNyQyxJQUFNLEtBQUssR0FBYyxFQUFFLENBQUM7UUFFNUIsb0JBQW9CO1FBQ3BCLElBQU0sY0FBYyxHQUFHLGtCQUFrQixDQUFDO1FBQzFDLElBQU0sYUFBYSxHQUFHLFVBQVUsQ0FBQyxLQUFLLENBQUMsY0FBYyxDQUFDLENBQUM7UUFDdkQsSUFBSSxhQUFhLEtBQUssSUFBSSxFQUFFO1lBQzFCLE9BQU8sRUFBRSxDQUFDO1NBQ1g7UUFFRCxVQUFVO1FBQ1YsSUFBTSxZQUFZLEdBQUcsaUJBQWlCLENBQUM7UUFDdkMsYUFBYSxDQUFDLE9BQU8sQ0FBRSxVQUFBLFlBQVk7WUFDakMsSUFBTSxXQUFXLEdBQUcsWUFBWSxDQUFDLEtBQUssQ0FBQyxZQUFZLENBQUMsQ0FBQztZQUNyRCxJQUFJLFdBQVcsSUFBSSxJQUFJLElBQUksV0FBVyxDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUU7Z0JBQ25ELEtBQUssQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7YUFDNUI7UUFDSCxDQUFDLENBQUMsQ0FBQztRQUNILE9BQU8sS0FBSyxDQUFDO0lBQ2YsQ0FBQztJQUVEOzs7T0FHRztJQUNLLHFDQUFRLEdBQWhCLFVBQWlCLElBQVksRUFBRSxVQUFzQjtRQUNuRCxJQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxVQUFDLElBQVk7WUFDaEQsT0FBTyxJQUFJLEtBQUssRUFBRSxDQUFDO1FBQ3JCLENBQUMsQ0FBQyxDQUFDO1FBRUgsSUFBTSxZQUFZLEdBQUcsVUFBVSxDQUFDLHVCQUF1QixDQUFDLGNBQWMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNqRixJQUFJLENBQUMsWUFBWSxFQUFFO1lBQ2pCLE1BQU0sSUFBSSxLQUFLLENBQUksSUFBSSxxREFBVSxDQUFDLENBQUM7U0FDcEM7UUFFRCxJQUFNLFdBQVcsR0FBSSxZQUFZLENBQUMsV0FBVyxDQUFDO1FBQzlDLElBQUksQ0FBQyxXQUFXLEVBQUU7WUFDaEIsTUFBTSxJQUFJLEtBQUssQ0FBSSxJQUFJLHFEQUFVLENBQUMsQ0FBQztTQUNwQztRQUNELE9BQU8sV0FBVyxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDOUMsQ0FBQztJQUdILHlCQUFDO0FBQUQsQ0FBQyxBQXhFRCxJQXdFQztBQUVELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIOaVsOaNrua6kOWPmOmHj+ino+aekFxyXG4gKiBAYXV0aG9yIFdpdHQgPGppd3RAaW5zcHVyLmNvbT5cclxuICovXHJcbmltcG9ydCB7IEFwcENvbnRleHQgfSBmcm9tICcuLi9hcHAvaW5kZXgnO1xyXG5pbXBvcnQgeyBWYXJpYWJsZVBhcnNlciB9IGZyb20gJy4vdmFyaWFibGVfcGFyc2VyJztcclxuaW1wb3J0IHsgUGFyc2VVdGlsIH0gZnJvbSAnLi9wYXJzZV91dGlsJztcclxuXHJcbi8qKlxyXG4gKiDmlbDmja7lj5jph4/op6PmnpBcclxuICovXHJcbmNsYXNzIERhdGFWYXJpYWJsZVBhcnNlciBpbXBsZW1lbnRzIFZhcmlhYmxlUGFyc2VyIHtcclxuXHJcbiAgLyoqXHJcbiAgICog6Kej5p6Q5Y+Y6YePXHJcbiAgICogQHBhcmFtIGV4cHJlc3Npb24g6KGo6L6+5byPXHJcbiAgICogQHBhcmFtIGNvbnRleHQg5LiK5LiL5paHXHJcbiAgICovXHJcbiAgcGFyc2UoZXhwcmVzc2lvbjogc3RyaW5nLCBjb250ZXh0OiBhbnkpOiBhbnkge1xyXG4gICAgY29uc3QgYXBwQ29udGV4dCA9IFBhcnNlVXRpbC5nZXRBcHBDb250ZXh0KGNvbnRleHQpO1xyXG4gICAgY29uc3QgcGF0aHM6IHN0cmluZ1tdID0gdGhpcy5leHRyYWN0UGF0aHMoZXhwcmVzc2lvbik7XHJcblxyXG4gICAgLy8gMeOAgeWNleS4queahOihqOi+vuW8j++8muebtOaOpeaxguWAvFxyXG4gICAgaWYgKHBhdGhzLmxlbmd0aCA9PT0gMSAmJiBleHByZXNzaW9uID09PSBge0RBVEF+JHtwYXRoc1swXX19YCkge1xyXG4gICAgICByZXR1cm4gdGhpcy5nZXRWYWx1ZShwYXRoc1swXSwgYXBwQ29udGV4dCk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gMuOAgeWFtuS7luaDheWGte+8muWtl+espuS4suabv+aNolxyXG4gICAgcGF0aHMuZm9yRWFjaCggKHBhdGg6IHN0cmluZykgPT4ge1xyXG4gICAgICBjb25zdCBzZWFyY2hWYWx1ZSA9IGB7REFUQX4ke3BhdGh9fWA7XHJcbiAgICAgIGNvbnN0IHJlcGxhY2VWYWx1ZSA9IHRoaXMuZ2V0VmFsdWUocGF0aCwgYXBwQ29udGV4dCk7XHJcbiAgICAgIGV4cHJlc3Npb24gPSBleHByZXNzaW9uLnJlcGxhY2Uoc2VhcmNoVmFsdWUsIHJlcGxhY2VWYWx1ZSk7XHJcbiAgICB9KTtcclxuXHJcbiAgICByZXR1cm4gIGV4cHJlc3Npb247XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDmj5Dlj5bot6/lvoRcclxuICAgKi9cclxuICBwcml2YXRlIGV4dHJhY3RQYXRocyhleHByZXNzaW9uOiBzdHJpbmcpIHtcclxuICAgIGNvbnN0IHBhdGhzOiBzdHJpbmdbXSAgPSBbXTtcclxuXHJcbiAgICAvLyDmn6Xmib7miYDmnInnmoR1aVN0YXRl5Y+Y6YeP5a2X56ym5LiyXHJcbiAgICBjb25zdCBEQVRBX1BBVFRFUk5fRyA9IC9cXHtEQVRBfihcXFMrPylcXH0vZztcclxuICAgIGNvbnN0IGRhdGFWYXJpYWJsZXMgPSBleHByZXNzaW9uLm1hdGNoKERBVEFfUEFUVEVSTl9HKTtcclxuICAgIGlmIChkYXRhVmFyaWFibGVzID09PSBudWxsKSB7XHJcbiAgICAgIHJldHVybiBbXTtcclxuICAgIH1cclxuXHJcbiAgICAvLyDmj5Dlj5blkI7ovrnnmoTot6/lvoRcclxuICAgIGNvbnN0IERBVEFfUEFUVEVSTiA9IC9cXHtEQVRBfihcXFMrPylcXH0vO1xyXG4gICAgZGF0YVZhcmlhYmxlcy5mb3JFYWNoKCBkYXRhVmFyaWFibGUgPT4gIHtcclxuICAgICAgY29uc3QgcGF0aE1hdGNoZXMgPSBkYXRhVmFyaWFibGUubWF0Y2goREFUQV9QQVRURVJOKTtcclxuICAgICAgaWYgKHBhdGhNYXRjaGVzICE9IG51bGwgJiYgcGF0aE1hdGNoZXMubGVuZ3RoID09PSAyKSB7XHJcbiAgICAgICAgcGF0aHMucHVzaChwYXRoTWF0Y2hlc1sxXSk7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gICAgcmV0dXJuIHBhdGhzO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog6I635Y+W5YC8XHJcbiAgICogQHBhcmFtIHBhdGgg6Lev5b6E77yaL1xyXG4gICAqL1xyXG4gIHByaXZhdGUgZ2V0VmFsdWUocGF0aDogc3RyaW5nLCBhcHBDb250ZXh0OiBBcHBDb250ZXh0KTogYW55IHtcclxuICAgIGNvbnN0IHBhcnRzID0gcGF0aC5zcGxpdCgnLycpLmZpbHRlcigocGFydDogc3RyaW5nKSA9PiB7XHJcbiAgICAgIHJldHVybiBwYXJ0ICE9PSAnJztcclxuICAgIH0pO1xyXG5cclxuICAgIGNvbnN0IGZyYW1lQ29udGV4dCA9IGFwcENvbnRleHQudmlld01vZGVsQ29udGV4dE1hbmFnZXIuZ2V0Q29udGV4dEJ5SWQocGFydHNbMF0pO1xyXG4gICAgaWYgKCFmcmFtZUNvbnRleHQpIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKGAke3BhdGh95LiN5q2j56Gu77yM6K+35qOA5p+l77yBYCk7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgYmluZGluZ0RhdGEgID0gZnJhbWVDb250ZXh0LmJpbmRpbmdEYXRhO1xyXG4gICAgaWYgKCFiaW5kaW5nRGF0YSkge1xyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYCR7cGF0aH3kuI3mraPnoa7vvIzor7fmo4Dmn6XvvIFgKTtcclxuICAgIH1cclxuICAgIHJldHVybiBiaW5kaW5nRGF0YS5nZXRWYWx1ZShwYXJ0cy5zbGljZSgxKSk7XHJcbiAgfVxyXG5cclxuXHJcbn1cclxuXHJcbmV4cG9ydCB7IERhdGFWYXJpYWJsZVBhcnNlciB9O1xyXG4iXX0=