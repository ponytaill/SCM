/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*
 * @Author: 疯狂秀才(lucas huang)
 * @Date: 2018-11-23 08:33:56
 * @LastEditors: 疯狂秀才(Lucas Huang)
 * @LastEditTime: 2019-10-17 16:21:33
 * @Company: Inspur
 * @Version: v0.0.1
 */
import { SortEditorComponent } from './sort-editor.component';
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { MessagerModule } from '@farris/ui-messager';
import { FarrisDialogModule } from '@farris/ui-dialog';
import { PerfectScrollbarModule } from '@farris/ui-perfect-scrollbar';
import { LookupModule } from '@farris/ui-lookup';
import { SorterComponent } from './sort.component';
import { LocaleModule } from '@farris/ui-locale';
import { FarrisCommonModule } from '@farris/ui-common';
import { ComboLookupModule } from '@farris/ui-combo-lookup';
export class SorterModule {
}
SorterModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule,
                    FormsModule,
                    MessagerModule.forRoot(),
                    PerfectScrollbarModule,
                    FarrisDialogModule,
                    LookupModule,
                    FarrisCommonModule,
                    ComboLookupModule,
                    LocaleModule
                ],
                declarations: [
                    SortEditorComponent,
                    SorterComponent
                ],
                exports: [
                    SorterComponent,
                    SortEditorComponent
                ],
                entryComponents: [
                    SortEditorComponent
                ]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic29ydC5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL3VpLXNvcnQtZWRpdG9yLyIsInNvdXJjZXMiOlsibGliL3NvcnQubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQVVBLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQzlELE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM3QyxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDckQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDdkQsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDdEUsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBRWpELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUNuRCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDakQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDdkQsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUEwQjVELE1BQU0sT0FBTyxZQUFZOzs7WUF4QnhCLFFBQVEsU0FBQztnQkFDTixPQUFPLEVBQUU7b0JBQ0wsWUFBWTtvQkFDWixXQUFXO29CQUNYLGNBQWMsQ0FBQyxPQUFPLEVBQUU7b0JBQ3hCLHNCQUFzQjtvQkFDdEIsa0JBQWtCO29CQUNsQixZQUFZO29CQUNaLGtCQUFrQjtvQkFDbEIsaUJBQWlCO29CQUNqQixZQUFZO2lCQUNmO2dCQUNELFlBQVksRUFBRTtvQkFDVixtQkFBbUI7b0JBQ25CLGVBQWU7aUJBQ2xCO2dCQUNELE9BQU8sRUFBRTtvQkFDTCxlQUFlO29CQUNmLG1CQUFtQjtpQkFDdEI7Z0JBQ0QsZUFBZSxFQUFFO29CQUNiLG1CQUFtQjtpQkFDdEI7YUFDSiIsInNvdXJjZXNDb250ZW50IjpbIlxyXG4vKlxyXG4gKiBAQXV0aG9yOiDnlq/ni4Lnp4DmiY0obHVjYXMgaHVhbmcpXHJcbiAqIEBEYXRlOiAyMDE4LTExLTIzIDA4OjMzOjU2XHJcbiAqIEBMYXN0RWRpdG9yczog55av54uC56eA5omNKEx1Y2FzIEh1YW5nKVxyXG4gKiBATGFzdEVkaXRUaW1lOiAyMDE5LTEwLTE3IDE2OjIxOjMzXHJcbiAqIEBDb21wYW55OiBJbnNwdXJcclxuICogQFZlcnNpb246IHYwLjAuMVxyXG4gKi9cclxuXHJcbmltcG9ydCB7IFNvcnRFZGl0b3JDb21wb25lbnQgfSBmcm9tICcuL3NvcnQtZWRpdG9yLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XHJcbmltcG9ydCB7IEZvcm1zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xyXG5pbXBvcnQgeyBNZXNzYWdlck1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktbWVzc2FnZXInO1xyXG5pbXBvcnQgeyBGYXJyaXNEaWFsb2dNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWRpYWxvZyc7XHJcbmltcG9ydCB7IFBlcmZlY3RTY3JvbGxiYXJNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLXBlcmZlY3Qtc2Nyb2xsYmFyJztcclxuaW1wb3J0IHsgTG9va3VwTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1sb29rdXAnO1xyXG5cclxuaW1wb3J0IHsgU29ydGVyQ29tcG9uZW50IH0gZnJvbSAnLi9zb3J0LmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IExvY2FsZU1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktbG9jYWxlJztcclxuaW1wb3J0IHsgRmFycmlzQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1jb21tb24nO1xyXG5pbXBvcnQgeyBDb21ib0xvb2t1cE1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktY29tYm8tbG9va3VwJztcclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgICBpbXBvcnRzOiBbXHJcbiAgICAgICAgQ29tbW9uTW9kdWxlLFxyXG4gICAgICAgIEZvcm1zTW9kdWxlLFxyXG4gICAgICAgIE1lc3NhZ2VyTW9kdWxlLmZvclJvb3QoKSxcclxuICAgICAgICBQZXJmZWN0U2Nyb2xsYmFyTW9kdWxlLFxyXG4gICAgICAgIEZhcnJpc0RpYWxvZ01vZHVsZSxcclxuICAgICAgICBMb29rdXBNb2R1bGUsXHJcbiAgICAgICAgRmFycmlzQ29tbW9uTW9kdWxlLFxyXG4gICAgICAgIENvbWJvTG9va3VwTW9kdWxlLFxyXG4gICAgICAgIExvY2FsZU1vZHVsZVxyXG4gICAgXSxcclxuICAgIGRlY2xhcmF0aW9uczogW1xyXG4gICAgICAgIFNvcnRFZGl0b3JDb21wb25lbnQsXHJcbiAgICAgICAgU29ydGVyQ29tcG9uZW50XHJcbiAgICBdLFxyXG4gICAgZXhwb3J0czogW1xyXG4gICAgICAgIFNvcnRlckNvbXBvbmVudCxcclxuICAgICAgICBTb3J0RWRpdG9yQ29tcG9uZW50XHJcbiAgICBdLFxyXG4gICAgZW50cnlDb21wb25lbnRzOiBbXHJcbiAgICAgICAgU29ydEVkaXRvckNvbXBvbmVudFxyXG4gICAgXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgU29ydGVyTW9kdWxlIHt9XHJcbiJdfQ==