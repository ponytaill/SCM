/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgZone, ChangeDetectionStrategy, } from "@angular/core";
import { ChangeDetectorRef, } from "@angular/core";
import { Component, Input, Output, EventEmitter, ViewChild, ElementRef, } from "@angular/core";
import { Subject } from "rxjs";
import { IdService, OverLayHiddenService } from "@farris/ui-common";
/**
 * @return {?}
 */
function hideBtnMenu() {
    /** @type {?} */
    var ddm = document.querySelector(".f-btn-group-dropdown-menu.show");
    if (ddm) {
        ddm.className = ddm.className.replace("show", "");
    }
}
/**
 * @param {?} e
 * @return {?}
 */
function hideButtonMenu(e) {
    if (!e.target) {
        return;
    }
    /** @type {?} */
    var classList = Array.from(e.target.classList || []);
    if (e.target.nodeName !== "LI" && !e.target.closest('li.dropdown-item') && !classList.includes("dropdown-item")) {
        hideBtnMenu();
    }
}
var FarrisButtonGroupComponent = /** @class */ (function () {
    function FarrisButtonGroupComponent(changeRef, ngZone) {
        this.changeRef = changeRef;
        this.ngZone = ngZone;
        // 是否自动纠正位置
        this.autoRectify = true;
        // 计算方向的真正placement
        this.realPlacement = "bottom-right";
        // 重新计算后的placement
        this.rectifyPlacement = "bottom-right";
        /* 显示的按钮数量  默认为2 */
        this.count = 2;
        /* 按钮大小 */
        this.size = "small";
        /* 按钮样式 */
        this.type = "primary";
        /* 按钮展示位置 */
        this._placement = "bottom";
        /* menu size */
        /**
         * 2021.06.12 废弃，因为使用者不知道在中英文情况下，下拉面板的宽度和高度
         */
        this.width = 120;
        this.height = 250;
        this._menuWidth = 0;
        this._menuHeight = 0;
        /* 下拉按钮 触发事件 */
        this.changeState = new EventEmitter();
        /* 下拉菜单项点击事件 */
        this.change = new EventEmitter();
        this.click = new EventEmitter();
        /* 触发下拉按钮面板区域之外的事件 */
        this.clickMenuOut = new EventEmitter();
        /**
         * 2021.06.12 废弃，因为当autoSize为true的时候，按钮显示不出来。
         */
        this.autoSize = false;
        /* 下拉面板显示 */
        this.show = false;
        this.setPosition$ = new Subject();
        this.btnmenuid = 'btn-menu-';
        this.previous = 0;
    }
    Object.defineProperty(FarrisButtonGroupComponent.prototype, "placement", {
        get: /**
         * @return {?}
         */
        function () {
            return this._placement;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (!value) {
                return;
            }
            if (value !== this._placement) {
                this.realPlacement = this.getRealPlacement(value);
                this._placement = value;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FarrisButtonGroupComponent.prototype, "flatButtons", {
        /* 显示出来的按钮组 */
        get: /* 显示出来的按钮组 */
        /**
         * @return {?}
         */
        function () {
            return this.data && this.data.slice(0, this.count);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FarrisButtonGroupComponent.prototype, "dpButtons", {
        get: /**
         * @return {?}
         */
        function () {
            // this.height = this.dpButtons.length * 35;
            return this.data && this.data.slice(this.count);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @private
     * @return {?}
     */
    FarrisButtonGroupComponent.prototype.btnmenuId = /**
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var idSer = new IdService();
        this.btnmenuid += idSer.guid();
        this.overLayService = new OverLayHiddenService();
    };
    /**
     * @return {?}
     */
    FarrisButtonGroupComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.btnmenuId();
    };
    /**
     * @param {?} simpleChanges
     * @return {?}
     */
    FarrisButtonGroupComponent.prototype.ngOnChanges = /**
     * @param {?} simpleChanges
     * @return {?}
     */
    function (simpleChanges) {
        if (simpleChanges["data"]) {
            // this.flatButtons = this.data.slice(0, this.count);
            // this.dpButtons = this.data.slice(this.count);
            // this.height = this.dpButtons.length * 35;
        }
    };
    /**
     * @return {?}
     */
    FarrisButtonGroupComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () { };
    /**
     * @return {?}
     */
    FarrisButtonGroupComponent.prototype.ngAfterViewChecked = /**
     * @return {?}
     */
    function () {
        if (this.show) {
            // const { height, width } = this.dpMenu.nativeElement.getBoundingClientRect();
            this.setPosition(this.event);
            // this.setPosition$.subscribe(res => this.setPosition(res, width, height));
        }
    };
    /**
     * @param {?} e
     * @return {?}
     */
    FarrisButtonGroupComponent.prototype.clickEvent = /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
        var _this = this;
        e.stopPropagation();
        this.show = !(this.show && this.dpMenu.nativeElement.className.indexOf('show') > -1);
        // body添加面板
        if (this.show) {
            /** 移除现有的下拉展示菜单 */
            hideBtnMenu();
            this.appendBody();
            // this.setPosition(e);
            // this.setPosition$.next(e);
            // 注册鼠标滚轮，点击事件，用于隐藏Panel
            this.overLayService.registerMouseEvent(this.dpBtn.nativeElement, (/**
             * @param {?} e
             * @return {?}
             */
            function (e) {
                hideButtonMenu(e);
            }));
            this.event = e;
            // 绑定相应的事件
            this.ngZone.runOutsideAngular((/**
             * @return {?}
             */
            function () {
                _this.bindMenuMouseenter();
                _this.bindiMenuMouseleave();
                // this.bindDocClick();
                _this.mouseNotEnterLeave();
            }));
        }
        // 面板显示 脏值检测
        this.changeRef.detectChanges();
        this.changeRef.markForCheck();
        // this.changeState.emit({ originEvent: e, show: this.show });
        this.changeState.emit(this.show);
    };
    /* 按钮触发事件 */
    /* 按钮触发事件 */
    /**
     * @param {?} e
     * @param {?} btn
     * @return {?}
     */
    FarrisButtonGroupComponent.prototype.toggle = /* 按钮触发事件 */
    /**
     * @param {?} e
     * @param {?} btn
     * @return {?}
     */
    function (e, btn) {
        e.stopPropagation();
        if (btn.disabled)
            return;
        this.show = false;
        // this.unbindDocClick();
        // 关闭下拉按钮面板  脏值检测
        this.changeRef.detectChanges();
        this.changeRef.markForCheck();
        this.change.emit(btn.id);
        this.click.emit(btn);
        this.overLayService.destory(this.dpBtn.nativeElement);
    };
    // 下拉按钮显示到body中  可改变面板方向
    // 下拉按钮显示到body中  可改变面板方向
    /**
     * @return {?}
     */
    FarrisButtonGroupComponent.prototype.appendBody = 
    // 下拉按钮显示到body中  可改变面板方向
    /**
     * @return {?}
     */
    function () {
        if (this.dpMenu.nativeElement && !document.querySelector('body>#' + this.btnmenuid)) {
            // 添加到body  便于全部显示
            document.body.appendChild(this.dpMenu.nativeElement);
        }
        this.dpMenu.nativeElement.className = this.dpMenu.nativeElement.className + ' show';
    };
    /**
     * @return {?}
     */
    FarrisButtonGroupComponent.prototype.removeMenuPanel = /**
     * @return {?}
     */
    function () {
        if (this.dpMenu.nativeElement && document.querySelector('body>#' + this.btnmenuid)) {
            this.dpMenu.nativeElement.remove();
        }
    };
    /**
     * 当下拉超出边界时  转换方向,
     * 并未处理，边界不够下拉展示的情况
     * @param btnSize
     */
    /**
     * 当下拉超出边界时  转换方向,
     * 并未处理，边界不够下拉展示的情况
     * @param {?} btnSize
     * @return {?}
     */
    FarrisButtonGroupComponent.prototype.changePlacement = /**
     * 当下拉超出边界时  转换方向,
     * 并未处理，边界不够下拉展示的情况
     * @param {?} btnSize
     * @return {?}
     */
    function (btnSize) {
        if (!this.autoRectify) {
            return;
        }
        /** @type {?} */
        var referPosition = this.getReferencePosition();
        /** @type {?} */
        var newPlacement = this.realPlacement;
        if (newPlacement.indexOf("bottom") > -1) {
            if (this._menuHeight > referPosition.bottom - btnSize.bottom) {
                newPlacement = newPlacement.replace("bottom", "top");
            }
        }
        else if (newPlacement.indexOf("top") > -1) {
            if (this._menuHeight > btnSize.top - referPosition.top) {
                newPlacement = newPlacement.replace("top", "bottom");
            }
        }
        if (newPlacement.indexOf("left") > -1) {
            if (this._menuWidth > btnSize.left - referPosition.left) {
                newPlacement = newPlacement.replace("left", "right");
            }
        }
        else if (newPlacement.indexOf("right") > -1) {
            if (this._menuWidth > referPosition.right - btnSize.right) {
                newPlacement = newPlacement.replace("right", "left");
            }
        }
        this.rectifyPlacement = newPlacement;
    };
    /**
     * 确认参照的边界
     */
    /**
     * 确认参照的边界
     * @private
     * @return {?}
     */
    FarrisButtonGroupComponent.prototype.getReferencePosition = /**
     * 确认参照的边界
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var rRight = document.documentElement.clientWidth;
        /** @type {?} */
        var rBottom = document.documentElement.clientHeight;
        /** @type {?} */
        var rTop = 0;
        /** @type {?} */
        var rLeft = 0;
        // 横向参照
        if (this.rectifyReferenceH) {
            rRight = this.rectifyReferenceH.getBoundingClientRect().right;
            rLeft = this.rectifyReferenceH.getBoundingClientRect().left;
        }
        // 纵向参照
        if (this.rectifyReferenceV) {
            rBottom = this.rectifyReferenceV.getBoundingClientRect().bottom;
            rTop = this.rectifyReferenceV.getBoundingClientRect().top;
        }
        return { top: rTop, left: rLeft, right: rRight, bottom: rBottom };
    };
    /**
     * 变化对应的class
     * @param position
     */
    /**
     * 变化对应的class
     * @param {?} position
     * @return {?}
     */
    FarrisButtonGroupComponent.prototype._getClsName = /**
     * 变化对应的class
     * @param {?} position
     * @return {?}
     */
    function (position) {
        /** @type {?} */
        var className = "";
        switch (position) {
            case "top-right":
            case "top":
                // 朝上，朝上-朝右
                className = "dropup";
                break;
            case "top-left":
                // 朝上-朝左
                className = "dropup-left";
                break;
            case "left-bottom":
            case "left":
                // 横向——朝左——朝下
                className = "dropleft";
                break;
            case "left-top":
                // 横向——朝左——朝上
                className = "dropleft-up";
                break;
            case "right-bottom":
            case "right":
                // 横向——朝右——朝下
                className = "dropright";
                break;
            case "right-top":
                // 横向——朝右——朝上
                className = "dropright-up";
                break;
            case "bottom-left":
                // 朝下——朝左
                className = "dropdown-left";
                break;
            case "bottom-right":
                className = "dropdown";
                break;
            default:
                // 朝下，朝下——朝右
                className = "dropdown";
        }
        return className;
    };
    /**
     * @private
     * @param {?} pment
     * @return {?}
     */
    FarrisButtonGroupComponent.prototype.getRealPlacement = /**
     * @private
     * @param {?} pment
     * @return {?}
     */
    function (pment) {
        /** @type {?} */
        var result = "bottom-right";
        switch (pment) {
            case "top":
                result = "top-right";
                break;
            case "left":
                result = "left-bottom";
                break;
            case "right":
                result = "right-bottom";
                break;
            case "bottom":
                result = "bottom-right";
                break;
            default:
                result = pment;
        }
        return result;
    };
    /*
     * 计算的位置区分忒细化
     */
    /*
         * 计算的位置区分忒细化
         */
    /**
     * @private
     * @param {?} btnSize
     * @return {?}
     */
    FarrisButtonGroupComponent.prototype.changePosition = /*
         * 计算的位置区分忒细化
         */
    /**
     * @private
     * @param {?} btnSize
     * @return {?}
     */
    function (btnSize) {
        /** @type {?} */
        var rplacement = "";
        if (this.autoRectify) {
            rplacement = this.rectifyPlacement;
        }
        else {
            rplacement = this.realPlacement;
        }
        /** @type {?} */
        var styleTop = 0;
        /** @type {?} */
        var styleLeft = 0;
        if (rplacement.indexOf("top") > -1) {
            styleTop = btnSize.top - this._menuHeight;
        }
        else if (rplacement.indexOf("bottom") > -1) {
            styleTop = btnSize.bottom;
        }
        if (rplacement.indexOf("right") > -1) {
            styleLeft = btnSize.right;
        }
        else if (rplacement.indexOf("left") > -1) {
            styleLeft = btnSize.left - this._menuWidth;
        }
        // 开头
        if (rplacement.indexOf("-top") > -1) {
            styleTop = styleTop - btnSize.height;
        }
        else if (rplacement.indexOf("-bottom") > -1) {
            styleTop = styleTop + btnSize.height;
        }
        this.dpMenu.nativeElement.style.top = styleTop + "px";
        this.dpMenu.nativeElement.style.left = styleLeft + "px";
    };
    /* 绑定下拉面板鼠标进入事件 */
    /* 绑定下拉面板鼠标进入事件 */
    /**
     * @return {?}
     */
    FarrisButtonGroupComponent.prototype.bindMenuMouseenter = /* 绑定下拉面板鼠标进入事件 */
    /**
     * @return {?}
     */
    function () {
        this.unbindMenuMouseenter();
        this.mouseenterEvent = this.changeFlagToTrue.bind(this);
        this.dpMenu.nativeElement.addEventListener("mouseenter", this.mouseenterEvent);
    };
    /* 绑定下拉面板鼠标离开事件  */
    /* 绑定下拉面板鼠标离开事件  */
    /**
     * @return {?}
     */
    FarrisButtonGroupComponent.prototype.bindiMenuMouseleave = /* 绑定下拉面板鼠标离开事件  */
    /**
     * @return {?}
     */
    function () {
        this.unbindiMenuMouseleave();
        this.mouseleaveEvent = this.mouseLeave.bind(this);
        this.dpMenu.nativeElement.addEventListener("mouseleave", this.mouseleaveEvent);
    };
    /* 绑定点击面板区域之外触发的事件 */
    // bindDocClick() {
    //   this.documentClickEvent = this.clickDoc.bind(this);
    //   document.addEventListener('click', this.documentClickEvent);
    // }
    /* 解绑事件 */
    /* 绑定点击面板区域之外触发的事件 */
    // bindDocClick() {
    //   this.documentClickEvent = this.clickDoc.bind(this);
    //   document.addEventListener('click', this.documentClickEvent);
    // }
    /* 解绑事件 */
    /**
     * @return {?}
     */
    FarrisButtonGroupComponent.prototype.unbindMenuMouseenter = /* 绑定点击面板区域之外触发的事件 */
    // bindDocClick() {
    //   this.documentClickEvent = this.clickDoc.bind(this);
    //   document.addEventListener('click', this.documentClickEvent);
    // }
    /* 解绑事件 */
    /**
     * @return {?}
     */
    function () {
        if (this.mouseenterEvent) {
            this.dpMenu.nativeElement.removeEventListener("mouseenter", this.mouseenterEvent);
        }
    };
    /**
     * @return {?}
     */
    FarrisButtonGroupComponent.prototype.unbindiMenuMouseleave = /**
     * @return {?}
     */
    function () {
        if (this.mouseleaveEvent) {
            this.dpMenu.nativeElement.removeEventListener("mouseleave", this.mouseleaveEvent);
        }
    };
    // unbindDocClick() {
    //   if (this.documentClickEvent) {
    //     document.removeEventListener('click', this.documentClickEvent);
    //   }
    // }
    /* flag true */
    // unbindDocClick() {
    //   if (this.documentClickEvent) {
    //     document.removeEventListener('click', this.documentClickEvent);
    //   }
    // }
    /* flag true */
    /**
     * @return {?}
     */
    FarrisButtonGroupComponent.prototype.changeFlagToTrue = 
    // unbindDocClick() {
    //   if (this.documentClickEvent) {
    //     document.removeEventListener('click', this.documentClickEvent);
    //   }
    // }
    /* flag true */
    /**
     * @return {?}
     */
    function () {
        this.dpFlag = true;
    };
    /* flag false */
    /* flag false */
    /**
     * @return {?}
     */
    FarrisButtonGroupComponent.prototype.changeFlagToFalse = /* flag false */
    /**
     * @return {?}
     */
    function () {
        this.dpFlag = false;
    };
    /* 鼠标离开时  关闭menu */
    /* 鼠标离开时  关闭menu */
    /**
     * @return {?}
     */
    FarrisButtonGroupComponent.prototype.mouseLeave = /* 鼠标离开时  关闭menu */
    /**
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.dpFlag) {
            this.changeFlagToFalse();
            // this.unbindDocClick();
            this.unbindiMenuMouseleave();
            this.unbindMenuMouseenter();
            this.close();
            if (this.setTimeObj) {
                this.ngZone.runOutsideAngular((/**
                 * @return {?}
                 */
                function () {
                    clearTimeout(_this.setTimeObj);
                }));
            }
        }
    };
    /* 鼠标没有进入到面板  一段时间后面板自动消失 */
    /* 鼠标没有进入到面板  一段时间后面板自动消失 */
    /**
     * @return {?}
     */
    FarrisButtonGroupComponent.prototype.mouseNotEnterLeave = /* 鼠标没有进入到面板  一段时间后面板自动消失 */
    /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.ngZone.runOutsideAngular((/**
         * @return {?}
         */
        function () {
            if (_this.setTimeObj) {
                clearTimeout(_this.setTimeObj);
            }
            _this.setTimeObj = setTimeout((/**
             * @return {?}
             */
            function () {
                if (!_this.dpFlag) {
                    _this.changeFlagToFalse();
                    // this.unbindDocClick();
                    _this.unbindiMenuMouseleave();
                    _this.unbindMenuMouseenter();
                    _this.close();
                    if (_this.setTimeObj) {
                        clearTimeout(_this.setTimeObj);
                    }
                }
            }), 2000);
        }));
    };
    /* 关闭下拉面板 */
    /* 关闭下拉面板 */
    /**
     * @return {?}
     */
    FarrisButtonGroupComponent.prototype.close = /* 关闭下拉面板 */
    /**
     * @return {?}
     */
    function () {
        this.show = false;
        // 关闭下拉按钮面板  脏值检测
        if (!this.changeRef["destroyed"]) {
            this.changeRef.detectChanges();
            this.changeRef.markForCheck();
        }
        this.dpBtn.nativeElement.blur();
        this.overLayService.destory(this.dpBtn.nativeElement);
    };
    /* 动态指定menu在body中的位置 */
    /* 动态指定menu在body中的位置 */
    /**
     * @private
     * @param {?} e
     * @return {?}
     */
    FarrisButtonGroupComponent.prototype.setPosition = /* 动态指定menu在body中的位置 */
    /**
     * @private
     * @param {?} e
     * @return {?}
     */
    function (e) {
        // 下拉按钮
        /** @type {?} */
        var btnSize = this.dpBtn.nativeElement.getBoundingClientRect();
        // 下拉面板
        /** @type {?} */
        var menuRect = this.dpMenu.nativeElement.getBoundingClientRect();
        this._menuHeight = menuRect.height;
        this._menuWidth = menuRect.width;
        // 如果要自动纠正方向
        if (this.autoRectify) {
            this.changePlacement(btnSize);
        }
        this.changePosition(btnSize);
    };
    /**
     * @return {?}
     */
    FarrisButtonGroupComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        // this.removeMenuPanel();
        if (this.dpBtn && this.dpBtn.nativeElement) {
            this.overLayService.destory(this.dpBtn.nativeElement);
        }
        this.overLayService = null;
    };
    FarrisButtonGroupComponent.decorators = [
        { type: Component, args: [{
                    selector: "farris-button-group",
                    template: "<div class=\"f-btn-group\">\r\n    <div [class]=\"(size==='large'?'btn-group-lg':'btn-group-sm')+' btn-group f-btn-group-links'\">\r\n        <ng-container *ngFor=\"let btn of flatButtons\">\r\n            <ng-container *ngIf=\"btn.icon\">\r\n                <button [id]=\"btn.id\" class=\"btn btn-link btn-icontext\" [disabled]=\"btn.disabled\" (click)=\"toggle($event,btn)\">\r\n                    <i class=\"f-icon\"  [ngClass]=\"btn.icon\"></i>\r\n                </button>\r\n            </ng-container>\r\n            <ng-container *ngIf=\"!btn.icon\">\r\n            <button [id]=\"btn.id\"\r\n                [class]=\"'btn '+(btn.type?'btn-'+btn.type:'btn-link')+' '+ (btn.type && btn.type !== 'link' ? 'f-btn-ml' :'')\"\r\n                [disabled]=\"btn.disabled\" (click)=\"toggle($event,btn)\">\r\n                {{btn.text}}\r\n            </button> \r\n            </ng-container>\r\n        </ng-container>\r\n    </div>\r\n    <ng-container *ngIf=\"dpButtons.length\">\r\n        <div class=\"btn-group f-btn-group-dropdown\">\r\n            <button #dpBtn type=\"button\" class=\"f-btn-dropdown\" (click)=\"clickEvent($event)\">\r\n                <span class=\"f-icon f-icon-lookup\"></span>\r\n            </button>\r\n            <div #dpMenu class=\"dropdown-menu f-btn-group-dropdown-menu\" [class.show]=\"show\"  style=\"position:fixed;\" id=\"{{btnmenuid}}\">\r\n                <ng-container *ngFor=\"let dpBtn of dpButtons\">\r\n                    <div class=\"dropdown-divider\" *ngIf=\"dpBtn.divider\"></div>\r\n                    <li [id]=\"dpBtn.id\" class=\"dropdown-item\" [class.disabled]=\"dpBtn.disabled\"\r\n                        (click)=\"toggle($event,dpBtn)\">\r\n                        <ng-container *ngIf=\"dpBtn.icon\">\r\n                            <i class=\"f-icon dropdown-item-icon\" [ngClass]=\"dpBtn.icon\"></i>\r\n                        </ng-container>\r\n                        <span>{{dpBtn.text}}</span>\r\n                    </li>\r\n                </ng-container>\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n</div>",
                    changeDetection: ChangeDetectionStrategy.OnPush
                }] }
    ];
    /** @nocollapse */
    FarrisButtonGroupComponent.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: NgZone }
    ]; };
    FarrisButtonGroupComponent.propDecorators = {
        dpBtn: [{ type: ViewChild, args: ["dpBtn",] }],
        dpMenu: [{ type: ViewChild, args: ["dpMenu",] }],
        rectifyReferenceH: [{ type: Input }],
        rectifyReferenceV: [{ type: Input }],
        autoRectify: [{ type: Input }],
        data: [{ type: Input }],
        count: [{ type: Input }],
        size: [{ type: Input }],
        type: [{ type: Input }],
        placement: [{ type: Input }],
        width: [{ type: Input }],
        height: [{ type: Input }],
        changeState: [{ type: Output }],
        change: [{ type: Output }],
        click: [{ type: Output }],
        clickMenuOut: [{ type: Output }],
        autoSize: [{ type: Input }]
    };
    return FarrisButtonGroupComponent;
}());
export { FarrisButtonGroupComponent };
if (false) {
    /** @type {?} */
    FarrisButtonGroupComponent.prototype.dpBtn;
    /** @type {?} */
    FarrisButtonGroupComponent.prototype.dpMenu;
    /** @type {?} */
    FarrisButtonGroupComponent.prototype.rectifyReferenceH;
    /** @type {?} */
    FarrisButtonGroupComponent.prototype.rectifyReferenceV;
    /** @type {?} */
    FarrisButtonGroupComponent.prototype.autoRectify;
    /**
     * @type {?}
     * @private
     */
    FarrisButtonGroupComponent.prototype.realPlacement;
    /** @type {?} */
    FarrisButtonGroupComponent.prototype.rectifyPlacement;
    /** @type {?} */
    FarrisButtonGroupComponent.prototype.data;
    /** @type {?} */
    FarrisButtonGroupComponent.prototype.count;
    /** @type {?} */
    FarrisButtonGroupComponent.prototype.size;
    /** @type {?} */
    FarrisButtonGroupComponent.prototype.type;
    /**
     * @type {?}
     * @private
     */
    FarrisButtonGroupComponent.prototype._placement;
    /**
     * 2021.06.12 废弃，因为使用者不知道在中英文情况下，下拉面板的宽度和高度
     * @type {?}
     */
    FarrisButtonGroupComponent.prototype.width;
    /** @type {?} */
    FarrisButtonGroupComponent.prototype.height;
    /**
     * @type {?}
     * @private
     */
    FarrisButtonGroupComponent.prototype._menuWidth;
    /**
     * @type {?}
     * @private
     */
    FarrisButtonGroupComponent.prototype._menuHeight;
    /** @type {?} */
    FarrisButtonGroupComponent.prototype.changeState;
    /** @type {?} */
    FarrisButtonGroupComponent.prototype.change;
    /** @type {?} */
    FarrisButtonGroupComponent.prototype.click;
    /** @type {?} */
    FarrisButtonGroupComponent.prototype.clickMenuOut;
    /**
     * 2021.06.12 废弃，因为当autoSize为true的时候，按钮显示不出来。
     * @type {?}
     */
    FarrisButtonGroupComponent.prototype.autoSize;
    /** @type {?} */
    FarrisButtonGroupComponent.prototype.show;
    /** @type {?} */
    FarrisButtonGroupComponent.prototype.setPosition$;
    /** @type {?} */
    FarrisButtonGroupComponent.prototype.event;
    /** @type {?} */
    FarrisButtonGroupComponent.prototype.dpFlag;
    /** @type {?} */
    FarrisButtonGroupComponent.prototype.mouseenterEvent;
    /** @type {?} */
    FarrisButtonGroupComponent.prototype.mouseleaveEvent;
    /** @type {?} */
    FarrisButtonGroupComponent.prototype.documentClickEvent;
    /** @type {?} */
    FarrisButtonGroupComponent.prototype.btnSize;
    /** @type {?} */
    FarrisButtonGroupComponent.prototype.setTimeObj;
    /** @type {?} */
    FarrisButtonGroupComponent.prototype.btnmenuid;
    /**
     * @type {?}
     * @private
     */
    FarrisButtonGroupComponent.prototype.previous;
    /** @type {?} */
    FarrisButtonGroupComponent.prototype.overLayService;
    /**
     * @type {?}
     * @private
     */
    FarrisButtonGroupComponent.prototype.changeRef;
    /**
     * @type {?}
     * @private
     */
    FarrisButtonGroupComponent.prototype.ngZone;
}
//# sourceMappingURL=data:application/json;base64,