/**
 * @fileoverview added by tsickle
 * Generated from: lib/tab-org-mid/unselectdatagrid.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, EventEmitter, Output, ViewChild, TemplateRef, Optional } from '@angular/core';
import { ApiLocalService } from '../../utils/api-service';
import { DatagridComponent } from '@farris/ui-datagrid';
import * as _ from 'lodash-es';
import { FavoritesTool } from '../../utils/favorites.tool';
import { noDataImg } from '../../assets/resource';
import { DataLoadingService } from '../../utils/loading-service';
import { FilterPosition } from '../../utils/user.type';
import { switchMap, tap } from 'rxjs/operators';
var UnSelectDatagridComponent = /** @class */ (function () {
    function UnSelectDatagridComponent(apiService, favoritesTool) {
        this.apiService = apiService;
        this.favoritesTool = favoritesTool;
        this.idField = 'userId';
        this.items = [];
        this.orgId = '';
        this.userIds = '';
        this.unSelectedUserIds = '';
        this.enablePagination = true;
        this.selectionsChange = new EventEmitter();
        this.searchResultChange = new EventEmitter();
        this.selections = [];
        this.cloneUserIds = '';
        this.cloneSelections = [];
        this.pEnableChildHierarchy = true;
        this.pIncludeCurrentUser = true;
        this.favoritesList = [];
        this.noDataImg = noDataImg;
        this.allChecked = false;
        this.itemsBackup = [];
        this.allIndexId = 'allIndexId';
        // 是否显示用户编号
        this.showUserCode = true;
        this.showPagesPanel = false;
        this.pageList = [10, 20, 50, 100, 200, 500, 1000, 2000, 5000];
        this.filterPersonWithPositionUrl = '/api/runtime/sys/v1.0/users/getPositionsByFilter';
        this.filterPositionArr = [];
        this.filterPositionId = null;
        this.isEmptyFilterPosition = false;
        this.allIndexId = Math.random().toString(16).substring(3, 10);
    }
    Object.defineProperty(UnSelectDatagridComponent.prototype, "enableChildHierarchy", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this.pEnableChildHierarchy = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UnSelectDatagridComponent.prototype, "includeCurrentUser", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this.pIncludeCurrentUser = value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    UnSelectDatagridComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var title = '';
        if (this.multiSelect) {
            title = '全选';
        }
        this.columns = [
            {
                field: 'name', template: this.opCell, title: title, width: '150'
            }
        ];
        if (this.favoritesTool) {
            this.favoritesTool.favoritesSubject.subscribe((/**
             * @param {?} data
             * @return {?}
             */
            function (data) {
                _this.favoritesList = data;
                _this.unSelectedListLoad();
            }));
        }
    };
    /**
     * @return {?}
     */
    UnSelectDatagridComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        // this.pageChangeCheck();
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    UnSelectDatagridComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        if (changes.includeCurrentUser && typeof changes.includeCurrentUser.currentValue === 'boolean'
            && !changes.includeCurrentUser.firstChange) {
            this.assembleDataByOrgId();
        }
        if (changes.enableChildHierarchy && typeof changes.enableChildHierarchy.currentValue === 'boolean'
            && !changes.enableChildHierarchy.firstChange) {
            this.assembleDataByOrgId();
        }
    };
    /**
     * @private
     * @return {?}
     */
    UnSelectDatagridComponent.prototype.emitSelections = /**
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var emitObj = {
            selections: this.selections,
            token: 'unDatagrid'
        };
        this.selectionsChange.emit(emitObj);
    };
    /**
     * @return {?}
     */
    UnSelectDatagridComponent.prototype.restoreSelections = /**
     * @return {?}
     */
    function () {
        this.selections = _.cloneDeep(this.cloneSelections);
        // this.emitSelections();
        this.toggleChecked();
    };
    // 人员展示翻页触发查询（！）
    // 人员展示翻页触发查询（！）
    /**
     * @param {?} size
     * @return {?}
     */
    UnSelectDatagridComponent.prototype.switchPage = 
    // 人员展示翻页触发查询（！）
    /**
     * @param {?} size
     * @return {?}
     */
    function (size) {
        this.pageIndex = size.pageIndex;
        this.pageSize = size.pageSize;
        if (this.searchPage) {
            this.assembleDataBySearch();
        }
        else {
            this.assembleDataByOrgId();
        }
    };
    /**
     * @param {?} e
     * @param {?} item
     * @return {?}
     */
    UnSelectDatagridComponent.prototype.toggleFavorites = /**
     * @param {?} e
     * @param {?} item
     * @return {?}
     */
    function (e, item) {
        this.favoritesTool.toggleFavorites(e, item);
    };
    /**
     * @return {?}
     */
    UnSelectDatagridComponent.prototype.assembleDataBySearch = /**
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var requestParam = {
            pageSize: this.pageSize,
            pageIndex: this.pageIndex,
            withAllOrg: this.pEnableChildHierarchy ? 1 : 0,
            notGetStopUser: !this.includeStopUser,
            notGetCurrentUser: !this.pIncludeCurrentUser,
            orderField: this.orderField,
            userTypeMode: this.userTypeMode,
            filterId: this.filterId
        };
        // 全局搜索or局部
        if (!this.globalSearch) {
            requestParam.orgId = this.orgId;
        }
        this.apiService.getPersonnelBySearch(this.absUserOrgUrl, this.absOrgType, this.searchText, requestParam).subscribe((/**
         * @param {?} res
         * @return {?}
         */
        function (res) {
            /** @type {?} */
            var rcResData = res ? res.data : [];
            _this.unSelectedList = rcResData;
            _this.pageTotalAll = res.totalCount;
            _this.pageTotal = Math.ceil(_this.pageTotalAll / _this.pageSize);
            if (_this.pageTotal === 0) {
                _this.pageTotal = 1;
            }
            _this.unSelectedListLoad();
            _this.searchResultChange.emit(true);
        }));
    };
    /**
     * @return {?}
     */
    UnSelectDatagridComponent.prototype.assembleDataByOrgId = /**
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var orgIds = '';
        if (!this.orgId) {
            return;
        }
        if (this.dataLoadingService) {
            this.dataLoadingService.show(this.loadingServiceMessage);
        }
        orgIds = this.orgId === '*' ? '' : this.orgId;
        /** @type {?} */
        var requestParam = {
            withAllOrg: this.pEnableChildHierarchy ? 1 : 0,
            notGetStopUser: !this.includeStopUser,
            notGetCurrentUser: !this.pIncludeCurrentUser,
            orderField: this.orderField,
            userTypeMode: this.userTypeMode,
            filterId: this.filterId
        };
        if (this.enablePagination) {
            requestParam.pageSize = this.pageSize;
            requestParam.pageIndex = this.pageIndex;
        }
        // 通过岗位进行人员的二次过滤
        if (this.filterPositionId) {
            requestParam.posId = this.filterPositionId;
        }
        if (this.withPermission) {
            requestParam.withPermission = true;
            requestParam.authOp = 'UserManage';
        }
        // 根据组织加载人员
        this.apiService.getPersonnelByOrgId(this.absUserOrgUrl, this.absOrgType, orgIds, requestParam).subscribe((/**
         * @param {?} res
         * @return {?}
         */
        function (res) {
            /** @type {?} */
            var rcResData = res ? res.data : [];
            _this.unSelectedList = rcResData;
            _this.pageTotalAll = res.totalCount;
            _this.pageTotal = Math.ceil(_this.pageTotalAll / _this.pageSize);
            if (_this.pageTotal === 0) {
                _this.pageTotal = 1;
            }
            _this.unSelectedListLoad();
            if (_this.dataLoadingService) {
                _this.dataLoadingService.hide();
            }
        }));
    };
    /**
     * @param {?} size
     * @return {?}
     */
    UnSelectDatagridComponent.prototype.assembleDataByOrgIdAndGetFilterPosition = /**
     * @param {?} size
     * @return {?}
     */
    function (size) {
        var _this = this;
        if (!this.orgId || this.orgId == '*') {
            return;
        }
        if (this.dataLoadingService) {
            this.dataLoadingService.show(this.loadingServiceMessage);
        }
        this.pageIndex = size.pageIndex;
        this.pageSize = size.pageSize;
        this.filterPositionArr = [];
        this.filterPositionId = null;
        /** @type {?} */
        var filterRequestParam = {
            withAllOrg: true,
            getUserInfo: false,
            notGetStopUser: !this.includeStopUser,
            notGetCurrentUser: !this.pIncludeCurrentUser,
            orderField: this.orderField,
            userTypeMode: this.userTypeMode,
            filterId: this.filterId,
            orgId: this.orgId,
        };
        // 首先获取当前组织下所有成员所属的岗位
        /** @type {?} */
        var getFilterPosition$ = this.apiService.getFilterPosition(this.filterPersonWithPositionUrl, this.absOrgType, filterRequestParam);
        /** @type {?} */
        var requestParam = {
            withAllOrg: this.pEnableChildHierarchy ? 1 : 0,
            notGetStopUser: !this.includeStopUser,
            notGetCurrentUser: !this.pIncludeCurrentUser,
            orderField: this.orderField,
            userTypeMode: this.userTypeMode,
            filterId: this.filterId
        };
        if (this.enablePagination) {
            requestParam.pageSize = this.pageSize;
            requestParam.pageIndex = this.pageIndex;
        }
        if (this.withPermission) {
            requestParam.withPermission = true;
            requestParam.authOp = 'UserManage';
        }
        // 然后获取当前组织下的所有成员
        /** @type {?} */
        var getPersonnel$ = this.apiService.getPersonnelByOrgId(this.absUserOrgUrl, this.absOrgType, this.orgId, requestParam);
        getFilterPosition$.pipe(switchMap((/**
         * @param {?} resData
         * @return {?}
         */
        function (resData) {
            if (resData && resData.length > 0) {
                _this.isEmptyFilterPosition = false;
                /** @type {?} */
                var filterPosition_1;
                _this.filterPositionArr = ((/** @type {?} */ (resData))).map((/**
                 * @param {?} data
                 * @return {?}
                 */
                function (data) {
                    filterPosition_1 = new FilterPosition;
                    filterPosition_1.id = data['id'];
                    filterPosition_1.code = data['code'];
                    filterPosition_1.name = data['name'];
                    return filterPosition_1;
                }));
            }
            else {
                _this.isEmptyFilterPosition = true;
            }
            return getPersonnel$.pipe(tap((/**
             * @param {?} res
             * @return {?}
             */
            function (res) {
                /** @type {?} */
                var rcResData = res ? res.data : [];
                _this.unSelectedList = rcResData;
                _this.pageTotalAll = res.totalCount;
                _this.pageTotal = Math.ceil(_this.pageTotalAll / _this.pageSize);
                if (_this.pageTotal === 0) {
                    _this.pageTotal = 1;
                }
                _this.unSelectedListLoad();
                if (_this.dataLoadingService) {
                    _this.dataLoadingService.hide();
                }
            }), (/**
             * @param {?} error
             * @return {?}
             */
            function (error) {
                if (_this.dataLoadingService) {
                    _this.dataLoadingService.hide();
                }
                throw new Error(_this.filterPositionErrorInfo);
            })));
        }))).subscribe();
    };
    /**
     * datagrid用于数据展示
     */
    /**
     * datagrid用于数据展示
     * @param {?=} initLoad
     * @return {?}
     */
    UnSelectDatagridComponent.prototype.unSelectedListLoad = /**
     * datagrid用于数据展示
     * @param {?=} initLoad
     * @return {?}
     */
    function (initLoad) {
        var _this = this;
        if (initLoad === void 0) { initLoad = false; }
        this.items = [];
        this.unSelectedList.forEach((/**
         * @param {?} res
         * @return {?}
         */
        function (res) {
            // const indexId = Math.random().toString(16).substring(2);
            // const item = {
            //     abbreviation: res.abbreviation,
            //     code: res.code,
            //     defaultOrgId: res.defaultOrgId,
            //     defaultOrgPath: res.defaultOrgPath,
            //     ext1: res.ext1,
            //     ext2: res.ext2,
            //     fullPathName: res.fullPathName,
            //     name: res.name,
            //     orgTypeId: res.orgTypeId,
            //     secLevel: res.secLevel,
            //     sortOrder: res.sortOrder,
            //     state: res.state,
            //     su: res.su,
            //     userId: res.userId,
            //     orgAllPath: res.orgAllPath,
            //     inFavorites: false,
            //     type: 'people',
            //     checked: false,
            //     indexId
            // };
            /** @type {?} */
            var item = _.cloneDeep(res);
            item.checked = false;
            item.inFavorites = false;
            item.indexId = Math.random().toString(16).substring(2);
            if (_this._isInArray(res[_this.idField], _this.idField, _this.selections) !== -1) {
                item.checked = true;
            }
            if (_this._isInArray(res[_this.idField], _this.idField, _this.favoritesList) !== -1) {
                item.inFavorites = true;
            }
            item.displayName = !!_this.showUserCode ? ('[' + item.code + ']' + item.name) : item.name;
            _this.items.push(item);
            _this.itemsBackup.push(item);
        }));
        this.toggleChecked();
        this.items = this.items.slice();
        this.cdRef ? this.cdRef.detectChanges() : null;
    };
    /**
     * @return {?}
     */
    UnSelectDatagridComponent.prototype.toggleAll = /**
     * @return {?}
     */
    function () {
        if (!this.allChecked) {
            this.checkAll();
        }
        else {
            this.unCheckAll();
        }
        this.emitSelections();
    };
    /**
     * @param {?} data
     * @return {?}
     */
    UnSelectDatagridComponent.prototype.toggleOne = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        if (data.checked) {
            this.unSelectLine(data);
        }
        else {
            this.selectLine(data);
        }
        this.emitSelections();
    };
    /**
     * 全选后处理
     * @param dataArr 全选的值
     */
    /**
     * 全选后处理
     * @return {?}
     */
    UnSelectDatagridComponent.prototype.checkAll = /**
     * 全选后处理
     * @return {?}
     */
    function () {
        var _this = this;
        this.items.forEach((/**
         * @param {?} item
         * @return {?}
         */
        function (item) {
            _this._insertOneIntoSelections(item);
            item.checked = true;
        }));
    };
    /**
     * 全部取消
     * @param dataArr 取消的数据
     * @returns void
     */
    /**
     * 全部取消
     * @return {?} void
     */
    UnSelectDatagridComponent.prototype.unCheckAll = /**
     * 全部取消
     * @return {?} void
     */
    function () {
        var _this = this;
        this.items.forEach((/**
         * @param {?} item
         * @return {?}
         */
        function (item) {
            _this.selections.forEach((/**
             * @param {?} selection
             * @param {?} index
             * @return {?}
             */
            function (selection, index) {
                if (item[_this.idField] === selection[_this.idField]) {
                    _this.selections.splice(index, 1);
                }
            }));
            item.checked = false;
        }));
    };
    /**
    * 当前行选中
    * @param data 当前行的数据（）
    */
    /**
     * 当前行选中
     * @param {?} data 当前行的数据（）
     * @return {?}
     */
    UnSelectDatagridComponent.prototype.selectLine = /**
     * 当前行选中
     * @param {?} data 当前行的数据（）
     * @return {?}
     */
    function (data) {
        if (this.multiSelect) {
            this._insertOneIntoSelections(data);
        }
        else {
            this.userIds = '';
            this.selections = [];
            this.items.forEach((/**
             * @param {?} item
             * @return {?}
             */
            function (item) {
                if (item.checked) {
                    item.checked = false;
                }
            }));
            this._insertOneIntoSelections(data);
        }
        if (this.isAllChecked()) {
            this.allChecked = true;
        }
    };
    /**
     * 单选取消选中
     * @param data 取消选中行
     */
    /**
     * 单选取消选中
     * @param {?} data 取消选中行
     * @return {?}
     */
    UnSelectDatagridComponent.prototype.unSelectLine = /**
     * 单选取消选中
     * @param {?} data 取消选中行
     * @return {?}
     */
    function (data) {
        /** @type {?} */
        var index = this._isInArray(data[this.idField], this.idField, this.selections);
        if (index > -1) {
            this.selections.splice(index, 1);
        }
        if (this.allChecked) {
            this.allChecked = false;
        }
    };
    /**
     *  取消选中
     * @param $event 取消勾选的数据
     */
    /**
     *  取消选中
     * @param {?} $event 取消勾选的数据
     * @return {?}
     */
    UnSelectDatagridComponent.prototype.cancelSelections = /**
     *  取消选中
     * @param {?} $event 取消勾选的数据
     * @return {?}
     */
    function ($event) {
        var _this = this;
        if (this.items.findIndex((/**
         * @param {?} item
         * @return {?}
         */
        function (item) { return item[_this.idField] === $event.id; })) === -1) {
            return;
        }
        this.items.forEach((/**
         * @param {?} item
         * @return {?}
         */
        function (item) {
            if (item[_this.idField] === $event.id) {
                item.checked = false;
            }
        }));
        this.selections.forEach((/**
         * @param {?} selection
         * @param {?} index
         * @return {?}
         */
        function (selection, index) {
            if ($event.id === selection[_this.idField]) {
                _this.selections.splice(index, 1);
            }
        }));
        this.allChecked = false;
    };
    /**
     * 全部取消勾选
     */
    /**
     * 全部取消勾选
     * @return {?}
     */
    UnSelectDatagridComponent.prototype.clearCheckeds = /**
     * 全部取消勾选
     * @return {?}
     */
    function () {
        this.items.forEach((/**
         * @param {?} item
         * @return {?}
         */
        function (item) {
            item.checked = false;
        }));
        this.allChecked = false;
        this.selections = [];
    };
    /**
     * @return {?}
     */
    UnSelectDatagridComponent.prototype.clearUserIds = /**
     * @return {?}
     */
    function () {
        this.userIds = '';
    };
    /**
     * 选中并插入当前行数据到右侧
     * @param data 当前行的数据
     * @param collection 暂存当前数据的集合
     */
    /**
     * 选中并插入当前行数据到右侧
     * @param {?} data 当前行的数据
     * @return {?}
     */
    UnSelectDatagridComponent.prototype._insertOneIntoSelections = /**
     * 选中并插入当前行数据到右侧
     * @param {?} data 当前行的数据
     * @return {?}
     */
    function (data) {
        // 如果当前数据已经移入右侧数据，则返回。
        if (this._isInArray(data[this.idField], this.idField, this.selections) > -1) {
            return;
        }
        this.selections.push(data);
        this.selections = this.selections.slice();
    };
    /**
     * 判断是否在内
     * @param value value
     * @param field field
     * @param array array
     * @returns 位置索引
     */
    /**
     * 判断是否在内
     * @param {?} value value
     * @param {?} field field
     * @param {?} array array
     * @return {?} 位置索引
     */
    UnSelectDatagridComponent.prototype._isInArray = /**
     * 判断是否在内
     * @param {?} value value
     * @param {?} field field
     * @param {?} array array
     * @return {?} 位置索引
     */
    function (value, field, array) {
        if (!field || !value) {
            throw new Error(this.validElementsInfo);
        }
        return array.findIndex((/**
         * @param {?} item
         * @return {?}
         */
        function (item) { return value === item[field]; }));
    };
    /**
     * 翻页检查：人员展示区的勾选状态与已选人员区是否对应
     */
    /**
     * 翻页检查：人员展示区的勾选状态与已选人员区是否对应
     * @return {?}
     */
    UnSelectDatagridComponent.prototype.toggleChecked = /**
     * 翻页检查：人员展示区的勾选状态与已选人员区是否对应
     * @return {?}
     */
    function () {
        var _this = this;
        this.items.forEach((/**
         * @param {?} item
         * @return {?}
         */
        function (item) {
            if (_this._isInArray(item[_this.idField], _this.idField, _this.selections) > -1) {
                item.checked = true;
            }
            else {
                item.checked = false;
            }
        }));
        if (this.isAllChecked()) {
            this.allChecked = true;
        }
        else {
            this.allChecked = false;
        }
    };
    /**
     * @private
     * @return {?}
     */
    UnSelectDatagridComponent.prototype.isAllChecked = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var count = 0;
        /** @type {?} */
        var allChecked = false;
        this.items.forEach((/**
         * @param {?} item
         * @return {?}
         */
        function (item) {
            _this.selections.forEach((/**
             * @param {?} selection
             * @return {?}
             */
            function (selection) {
                if (item[_this.idField] === selection[_this.idField]) {
                    count += 1;
                }
            }));
        }));
        if (this.items.length === count && count > 0) {
            allChecked = true;
        }
        return allChecked;
    };
    /**
     * @param {?} index
     * @param {?} item
     * @return {?}
     */
    UnSelectDatagridComponent.prototype.trackByFn = /**
     * @param {?} index
     * @param {?} item
     * @return {?}
     */
    function (index, item) {
        return item.userId;
    };
    /**
     * @param {?} dir
     * @param {?} num
     * @return {?}
     */
    UnSelectDatagridComponent.prototype.turnOverPage = /**
     * @param {?} dir
     * @param {?} num
     * @return {?}
     */
    function (dir, num) {
        if ((dir === 'pre' && this.pageIndex === 1) || (dir === 'next' && this.pageIndex === this.pageTotal)) {
            return;
        }
        this.pageIndex = this.pageIndex + num;
        this.switchPage({
            pageIndex: this.pageIndex,
            pageSize: this.pageSize,
        });
    };
    /**
     * @param {?} inputEl
     * @param {?} maxNumber
     * @return {?}
     */
    UnSelectDatagridComponent.prototype.beforePageIndexChange = /**
     * @param {?} inputEl
     * @param {?} maxNumber
     * @return {?}
     */
    function (inputEl, maxNumber) {
        /** @type {?} */
        var target = (/** @type {?} */ (inputEl.target));
        /** @type {?} */
        var currentPageNumber = Number(target.value);
        if (currentPageNumber > maxNumber) {
            target.value = maxNumber;
        }
        else {
            if (currentPageNumber < 1) {
                target.value = 1;
            }
        }
        this.pageIndex = Number(target.value);
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    UnSelectDatagridComponent.prototype.onMouseEnter = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        this.showPagesPanel = true;
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    UnSelectDatagridComponent.prototype.onMouseLeave = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        this.showPagesPanel = false;
    };
    /**
     * @param {?} $event
     * @param {?} num
     * @return {?}
     */
    UnSelectDatagridComponent.prototype.changePageSizeHandler = /**
     * @param {?} $event
     * @param {?} num
     * @return {?}
     */
    function ($event, num) {
        $event.stopPropagation();
        if (num == this.pageSize) {
            return;
        }
        this.showPagesPanel = false;
        this.pageSize = num;
        this.switchPage({
            pageIndex: 1,
            pageSize: this.pageSize,
        });
    };
    UnSelectDatagridComponent.decorators = [
        { type: Component, args: [{
                    selector: 'lib-unselect',
                    template: "<ng-template #unSelectDatagrid [ngIf]=\"false\"></ng-template>\r\n<ng-template #opCell [ngIf]=\"false\"></ng-template>\r\n<!-- \u517C\u5BB9\u4FDD\u7559 -->\r\n\r\n<div class=\"candidate\">\r\n    <div class=\"candidate-title\">\r\n        <div class=\"custom-control custom-checkbox mb-2\" *ngIf=\"multiSelect && items.length > 0\">\r\n            <input class=\"custom-control-input\" [id]=\"allIndexId\" type=\"checkbox\" [(ngModel)]=\"allChecked\">\r\n            <label class=\"custom-control-label\" [for]=\"allIndexId\" (click)=\"toggleAll()\">{{'personnelSelector.tabCommon.checkAll' | locale}}</label>\r\n        </div>\r\n        <div>&nbsp;</div>\r\n    </div>\r\n    <perfect-scrollbar *ngIf=\"items.length!==0\">\r\n        <div class=\"candidate-content\">\r\n            <div *ngFor=\"let data of items; let i = index;trackBy: trackByFn\" class=\"s-selectedPerson\">\r\n                <div class=\"custom-control custom-checkbox\">\r\n                    <input class=\"custom-control-input\" [(ngModel)]=\"data.checked\" [id]=\"data.indexId\" type=\"checkbox\">\r\n                    <label class=\"custom-control-label\" [for]=\"data.indexId\" (click)=\"toggleOne(data)\">\r\n                        <div style=\"display: flex; height: 32px; margin: -21px 0 0 24px;\">\r\n                            <farris-avatar [avatarWidth]=\"32\" [avatarHeight]=\"32\" [cover]=\"data.ext1\" [readonly]=\"true\">\r\n                            </farris-avatar>\r\n                            <div style=\"margin-left: 11px; margin-top: -1px; padding-right: 10px; overflow: hidden;\">\r\n                                <p class=\"candidate-content-title\" title=\"{{data.displayName}}\">\r\n                                    {{data.displayName}}</p>\r\n                                <p class=\"candidate-content-orgpath\" title=\"{{data.orgAllPath}}\">\r\n                                    {{data.orgAllPath}}</p>\r\n                            </div>\r\n                        </div>\r\n                    </label>\r\n                </div>\r\n                <span class=\"f-icon f-icon-star\" *ngIf=\"enableFavorites\" [class.default-light-color]=\"data.inFavorites\"\r\n                    [class.default-dark-color]=\"!data.inFavorites\" (click)=\"toggleFavorites($event, data)\"></span>\r\n            </div>\r\n\r\n        </div>\r\n    </perfect-scrollbar>\r\n    <div class=\"pagination-container\" *ngIf=\"items.length!==0\">\r\n        <ul class=\"ngx-pagination pagination pager-viewmode-simple\">\r\n            <li class=\"pagination-pagelist\" style=\"padding: 0;\" *ngIf=\"showPageList\">\r\n                <div class=\"dropup dropdown-right pg-pagelist\"\r\n                    [ngClass]=\"{'show': showPagesPanel}\"\r\n                    (mouseenter)=\"onMouseEnter($event)\" (mouseleave)=\"onMouseLeave($event)\">\r\n                    <div class=\"pg-pagelist-info\">\r\n                        <span class=\"pagelist-text\">{{'pagination.pagelist.firstText' | locale}}</span><b\r\n                            class=\"cur-pagesize\">{{ pageSize }}</b><span\r\n                            class=\"pagelist-text\">{{'pagination.pagelist.lastText' | locale}}</span><i\r\n                            class=\"f-icon f-icon-dropdown\"></i>\r\n                    </div>\r\n                    <div class=\"dropdown-menu\" [ngClass]=\"{'show': showPagesPanel}\" style=\"margin-bottom: -1px;\">\r\n                        <li class=\"dropdown-item\" [ngClass]=\"{'active':num == pageSize}\"\r\n                            *ngFor=\"let num of pageList\" (click)=\"changePageSizeHandler($event, num)\">\r\n                            <span>{{ num }}</span>\r\n                        </li>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n            <li class=\"page-item d-flex flex-fill\"></li>\r\n            <li class=\"page-item\" [class.disabled]=\"pageIndex === 1\" (click)=\"turnOverPage('pre', -1)\">\r\n                <span class=\"page-link border-0\">\r\n                    <span class=\"f-icon f-page-pre\"></span>\r\n                </span>\r\n            </li>\r\n            <li class=\"page-item\">\r\n                <input id=\"farris-datagrid-gotopagenumber\" min=\"1\" type=\"number\" max=\"{{pageTotal}}\"\r\n                    [(ngModel)]=\"pageIndex\" style=\"width: 38px;\" (keyup.enter)=\"switchPage({pageIndex: pageIndex, pageSize: pageSize})\"\r\n                    (input)=\"beforePageIndexChange($event, pageTotal)\">\r\n            </li>\r\n            <li class=\"page-item page-separator\" style=\"margin-left: 10px\"> / </li>\r\n            <li class=\"page-item page-total\" style=\"margin-left: 5px\">\r\n                <span style=\"font-size: 16px; font-weight: 600;\"> {{pageTotal}}</span>\r\n            </li>\r\n            <li class=\"page-item\" [class.disabled]=\"pageIndex === pageTotal\" (click)=\"turnOverPage('next', 1)\">\r\n                <a class=\"page-link border-0\">\r\n                    <span class=\"f-icon f-page-next\"></span>\r\n                </a>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n    <div *ngIf=\"items.length===0\" [ngStyle]=\"{'background-image': noDataImg}\" class=\"fp-candidate-nodata\">\r\n        {{'personnelSelector.tabCommon.noUserData' | locale}}</div>\r\n</div>",
                    styles: [":host{display:-webkit-box;display:flex;height:100%;-webkit-box-flex:1;flex:1;overflow:hidden;position:static}.candidate{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;width:100%}.candidate .fp-candidate-nodata{width:100px;height:100px;text-align:center;background-repeat:no-repeat;background-size:contain;margin:110px auto 0;color:#b4bccc;padding-top:110px}.candidate .group_blank_15{width:100%;height:15px}.candidate .candidate-content{clear:both}.candidate .s-selectedPerson:first-child{margin-top:0}.candidate .s-selectedPerson{min-width:240px;float:left;width:calc(100% - 6px);position:relative;height:40px;padding:5px 12px;margin:0 3px 1px}.candidate .s-selectedPerson:hover{background:#eef5ff;border-radius:5px}.candidate .f-icon{font-size:14px}.candidate .s-selectedPerson .f-icon-star{position:absolute;top:13px;right:12px;font-size:14px}.candidate .s-selectedPerson .default-light-color{color:#f7b500}.candidate .s-selectedPerson .default-dark-color{color:#d8dce6}.candidate .candidate-content-title{margin:0;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;font-size:13px}.candidate .candidate-content-orgpath{margin:0;font-size:12px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;color:#c7ccd7}.candidate .candidate-title{-webkit-box-pack:justify;justify-content:space-between;height:35px;margin-bottom:18px}.candidate .candidate-title .custom-control{margin:10px 0 0 15px;line-height:35px}.candidate .s-selectedPerson .custom-control-label::before{top:7px}.candidate .candidate-title .title-clearall{margin:5px 15px 0 0;color:#2a87ff;cursor:pointer;line-height:35px}.candidate .candidate-title div{line-height:35px;margin:5px 10px 0 0;color:#2a87ff;cursor:pointer}.candidate .saved-group{position:absolute;width:111px;height:26px;line-height:26px;background:#eaedf2;border-radius:5px;text-align:center;font-size:13px;bottom:10px;left:13px;z-index:999;color:#909ba2;cursor:pointer}.candidate .saved-group:hover{color:#2a87ff;background:#eaf4ff}.candidate .saved-group:hover .f-icon{color:#2a87ff}.candidate .saved-group .f-icon{color:#909ba2;margin-right:5px;cursor:pointer;font-size:14px}.s-group-dialog-container{height:520px;width:600px;position:fixed;left:50%;top:50%;margin:-260px 0 0 -300px;background:#fff;padding:15px 20px;border-radius:10px;display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;z-index:9999}.s-group-dialog-container .s-personnel-group-footer{margin-top:15px}.s-help-bg{background:rgb(0 0 0 / 15%);position:fixed;left:0;top:0;right:0;bottom:0;z-index:9997}.s-group-dialog-container .s-personnel-group-title{font-size:17px;line-height:24px;color:#2d2f33;font-weight:600}.s-group-dialog-container .s-personnel-group-title .f-icon{float:right;font-size:20px;color:#878d99;margin-top:3px;cursor:pointer}.s-group-dialog-container .s-personnel-group-footer .fr{float:right;height:32px}"]
                }] }
    ];
    /** @nocollapse */
    UnSelectDatagridComponent.ctorParameters = function () { return [
        { type: ApiLocalService },
        { type: FavoritesTool, decorators: [{ type: Optional }] }
    ]; };
    UnSelectDatagridComponent.propDecorators = {
        unSelectDatagrid: [{ type: ViewChild, args: ['unSelectDatagrid',] }],
        opCell: [{ type: ViewChild, args: ['opCell',] }],
        idField: [{ type: Input }],
        items: [{ type: Input }],
        absUserOrgUrl: [{ type: Input }],
        absOrgType: [{ type: Input }],
        pageIndex: [{ type: Input }],
        pageSize: [{ type: Input }],
        pageTotalAll: [{ type: Input }],
        multiSelect: [{ type: Input }],
        noSelectToRight: [{ type: Input }],
        searchText: [{ type: Input }],
        unSelectedList: [{ type: Input }],
        pageTotal: [{ type: Input }],
        enableChildHierarchy: [{ type: Input }],
        orgId: [{ type: Input }],
        userIds: [{ type: Input }],
        unSelectedUserIds: [{ type: Input }],
        includeStopUser: [{ type: Input }],
        searchPage: [{ type: Input }],
        includeCurrentUser: [{ type: Input }],
        enablePagination: [{ type: Input }],
        enableFavorites: [{ type: Input }],
        busNum: [{ type: Input }],
        orderField: [{ type: Input }],
        userTypeMode: [{ type: Input }],
        globalSearch: [{ type: Input }],
        showPageList: [{ type: Input }],
        dataLoadingService: [{ type: Input }],
        validElementsInfo: [{ type: Input }],
        filterPositionErrorInfo: [{ type: Input }],
        withPermission: [{ type: Input }],
        selectionsChange: [{ type: Output }],
        searchResultChange: [{ type: Output }]
    };
    return UnSelectDatagridComponent;
}());
export { UnSelectDatagridComponent };
if (false) {
    /** @type {?} */
    UnSelectDatagridComponent.prototype.unSelectDatagrid;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.opCell;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.idField;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.items;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.absUserOrgUrl;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.absOrgType;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.pageIndex;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.pageSize;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.pageTotalAll;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.multiSelect;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.noSelectToRight;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.searchText;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.unSelectedList;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.pageTotal;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.orgId;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.userIds;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.unSelectedUserIds;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.includeStopUser;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.searchPage;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.enablePagination;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.enableFavorites;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.busNum;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.orderField;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.userTypeMode;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.globalSearch;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.showPageList;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.dataLoadingService;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.validElementsInfo;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.filterPositionErrorInfo;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.withPermission;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.selectionsChange;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.searchResultChange;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.columns;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.selections;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.cloneUserIds;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.cloneSelections;
    /**
     * @type {?}
     * @private
     */
    UnSelectDatagridComponent.prototype.pEnableChildHierarchy;
    /**
     * @type {?}
     * @private
     */
    UnSelectDatagridComponent.prototype.pIncludeCurrentUser;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.favoritesList;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.noDataImg;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.allChecked;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.itemsBackup;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.allIndexId;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.filterId;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.showUserCode;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.cdRef;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.showPagesPanel;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.pageList;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.loadingServiceMessage;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.filterPersonWithPositionUrl;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.filterPositionArr;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.filterPositionId;
    /** @type {?} */
    UnSelectDatagridComponent.prototype.isEmptyFilterPosition;
    /**
     * @type {?}
     * @private
     */
    UnSelectDatagridComponent.prototype.apiService;
    /**
     * @type {?}
     * @private
     */
    UnSelectDatagridComponent.prototype.favoritesTool;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidW5zZWxlY3RkYXRhZ3JpZC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL3VpLXBlcnNvbm5lbC1zZWxlY3Rvci8iLCJzb3VyY2VzIjpbImxpYi90YWItb3JnLW1pZC91bnNlbGVjdGRhdGFncmlkLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFDSCxTQUFTLEVBQUUsS0FBSyxFQUFFLFlBQVksRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUF5QixXQUFXLEVBQzNELFFBQVEsRUFDckMsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQzFELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3hELE9BQU8sS0FBSyxDQUFDLE1BQU0sV0FBVyxDQUFDO0FBQy9CLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUMzRCxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDbEQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDakUsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxTQUFTLEVBQUUsR0FBRyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFaEQ7SUF3RUksbUNBQ1ksVUFBMkIsRUFDZixhQUE0QjtRQUR4QyxlQUFVLEdBQVYsVUFBVSxDQUFpQjtRQUNmLGtCQUFhLEdBQWIsYUFBYSxDQUFlO1FBaEUzQyxZQUFPLEdBQVcsUUFBUSxDQUFDO1FBQzNCLFVBQUssR0FBRyxFQUFFLENBQUM7UUFjWCxVQUFLLEdBQUcsRUFBRSxDQUFDO1FBQ1gsWUFBTyxHQUFHLEVBQUUsQ0FBQztRQUNiLHNCQUFpQixHQUFHLEVBQUUsQ0FBQztRQU12QixxQkFBZ0IsR0FBRyxJQUFJLENBQUM7UUFXdkIscUJB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SUFDdEIsc0RBQWdDOztJQUNoQyxvREFBa0M7O0lBQ2xDLCtDQUE2Qjs7SUFJN0IscURBQWlDOztJQUNqQyxvREFBa0M7O0lBQ2xDLDJDQUF3Qjs7SUFDeEIsK0NBQTRCOztJQUM1QixpREFBOEI7O0lBQzlCLGlEQUErQjs7SUFDL0IsaURBQStCOztJQUMvQix1REFBZ0Q7O0lBQ2hELHNEQUFtQzs7SUFDbkMsNERBQXlDOztJQUN6QyxtREFBaUM7O0lBQ2pDLHFEQUFxRDs7SUFDckQsdURBQTJEOztJQUUzRCw0Q0FBYTs7SUFDYiwrQ0FBdUI7O0lBRXZCLGlEQUFrQjs7SUFDbEIsb0RBQXFCOzs7OztJQUVyQiwwREFBcUM7Ozs7O0lBQ3JDLHdEQUFtQzs7SUFDbkMsa0RBQW1COztJQUNuQiw4Q0FBc0I7O0lBQ3RCLCtDQUFtQjs7SUFDbkIsZ0RBQWlCOztJQUNqQiwrQ0FBMEI7O0lBQzFCLDZDQUFpQjs7SUFFakIsaURBQW9COztJQUNwQiwwQ0FBeUI7O0lBQ3pCLG1EQUFnQzs7SUFDaEMsNkNBQXlEOztJQUN6RCwwREFBOEI7O0lBQzlCLGdFQUF5Rjs7SUFDekYsc0RBQThDOztJQUM5QyxxREFBZ0M7O0lBQ2hDLDBEQUF1Qzs7Ozs7SUFHbkMsK0NBQW1DOzs7OztJQUNuQyxrREFBZ0QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xyXG4gICAgQ29tcG9uZW50LCBJbnB1dCwgRXZlbnRFbWl0dGVyLCBPdXRwdXQsIFZpZXdDaGlsZCwgT25Jbml0LCBBZnRlclZpZXdJbml0LCBUZW1wbGF0ZVJlZixcclxuICAgIFNpbXBsZUNoYW5nZXMsIE9uQ2hhbmdlcywgT3B0aW9uYWwsIENoYW5nZURldGVjdG9yUmVmXHJcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEFwaUxvY2FsU2VydmljZSB9IGZyb20gJy4uLy4uL3V0aWxzL2FwaS1zZXJ2aWNlJztcclxuaW1wb3J0IHsgRGF0YWdyaWRDb21wb25lbnQgfSBmcm9tICdAZmFycmlzL3VpLWRhdGFncmlkJztcclxuaW1wb3J0ICogYXMgXyBmcm9tICdsb2Rhc2gtZXMnO1xyXG5pbXBvcnQgeyBGYXZvcml0ZXNUb29sIH0gZnJvbSAnLi4vLi4vdXRpbHMvZmF2b3JpdGVzLnRvb2wnO1xyXG5pbXBvcnQgeyBub0RhdGFJbWcgfSBmcm9tICcuLi8uLi9hc3NldHMvcmVzb3VyY2UnO1xyXG5pbXBvcnQgeyBEYXRhTG9hZGluZ1NlcnZpY2UgfSBmcm9tICcuLi8uLi91dGlscy9sb2FkaW5nLXNlcnZpY2UnO1xyXG5pbXBvcnQgeyBGaWx0ZXJQb3NpdGlvbiB9IGZyb20gJy4uLy4uL3V0aWxzL3VzZXIudHlwZSc7XHJcbmltcG9ydCB7IHN3aXRjaE1hcCwgdGFwIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgICBzZWxlY3RvcjogJ2xpYi11bnNlbGVjdCcsXHJcbiAgICB0ZW1wbGF0ZVVybDogJy4vdW5zZWxlY3RkYXRhZ3JpZC5jb21wb25lbnQuaHRtbCcsXHJcbiAgICBzdHlsZVVybHM6IFsnLi91bnNlbGVjdGRhdGFncmlkLmNvbXBvbmVudC5jc3MnXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgVW5TZWxlY3REYXRhZ3JpZENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgQWZ0ZXJWaWV3SW5pdCwgT25DaGFuZ2VzIHtcclxuXHJcbiAgICBAVmlld0NoaWxkKCd1blNlbGVjdERhdGFncmlkJykgdW5TZWxlY3REYXRhZ3JpZDogRGF0YWdyaWRDb21wb25lbnQ7XHJcbiAgICBAVmlld0NoaWxkKCdvcENlbGwnKSBvcENlbGw6IFRlbXBsYXRlUmVmPGFueT47XHJcblxyXG4gICAgQElucHV0KCkgaWRGaWVsZDogc3RyaW5nID0gJ3VzZXJJZCc7XHJcbiAgICBASW5wdXQoKSBpdGVtcyA9IFtdO1xyXG4gICAgQElucHV0KCkgYWJzVXNlck9yZ1VybDogYW55O1xyXG4gICAgQElucHV0KCkgYWJzT3JnVHlwZTogYW55O1xyXG4gICAgQElucHV0KCkgcGFnZUluZGV4OiBhbnk7XHJcbiAgICBASW5wdXQoKSBwYWdlU2l6ZTogYW55O1xyXG4gICAgQElucHV0KCkgcGFnZVRvdGFsQWxsOiBhbnk7XHJcbiAgICBASW5wdXQoKSBtdWx0aVNlbGVjdDogYW55O1xyXG4gICAgQElucHV0KCkgbm9TZWxlY3RUb1JpZ2h0OiBhbnk7XHJcbiAgICBASW5wdXQoKSBzZWFyY2hUZXh0OiBhbnk7XHJcbiAgICBASW5wdXQoKSB1blNlbGVjdGVkTGlzdDogYW55O1xyXG4gICAgQElucHV0KCkgcGFnZVRvdGFsOiBhbnk7XHJcbiAgICBASW5wdXQoKSBzZXQgZW5hYmxlQ2hpbGRIaWVyYXJjaHkodmFsdWU6IGJvb2xlYW4pIHtcclxuICAgICAgICB0aGlzLnBFbmFibGVDaGlsZEhpZXJhcmNoeSA9IHZhbHVlO1xyXG4gICAgfVxyXG4gICAgQElucHV0KCkgb3JnSWQgPSAnJztcclxuICAgIEBJbnB1dCgpIHVzZXJJZHMgPSAnJztcclxuICAgIEBJbnB1dCgpIHVuU2VsZWN0ZWRVc2VySWRzID0gJyc7XHJcbiAgICBASW5wdXQoKSBpbmNsdWRlU3RvcFVzZXI6IGJvb2xlYW47XHJcbiAgICBASW5wdXQoKSBzZWFyY2hQYWdlOiBib29sZWFuO1xyXG4gICAgQElucHV0KCkgc2V0IGluY2x1ZGVDdXJyZW50VXNlcih2YWx1ZTogYm9vbGVhbikge1xyXG4gICAgICAgIHRoaXMucEluY2x1ZGVDdXJyZW50VXNlciA9IHZhbHVlO1xyXG4gICAgfVxyXG4gICAgQElucHV0KCkgZW5hYmxlUGFnaW5hdGlvbiA9IHRydWU7XHJcbiAgICBASW5wdXQoKSBlbmFibGVGYXZvcml0ZXM6IGJvb2xlYW47XHJcbiAgICBASW5wdXQoKSBidXNOdW06IHN0cmluZztcclxuICAgIEBJbnB1dCgpIG9yZGVyRmllbGQ6IHN0cmluZztcclxuICAgIEBJbnB1dCgpIHVzZXJUeXBlTW9kZTogc3RyaW5nO1xyXG4gICAgQElucHV0KCkgZ2xvYmFsU2VhcmNoOiBib29sZWFuO1xyXG4gICAgQElucHV0KCkgc2hvd1BhZ2VMaXN0OiBib29sZWFuO1xyXG4gICAgQElucHV0KCkgZGF0YUxvYWRpbmdTZXJ2aWNlOiBEYXRhTG9hZGluZ1NlcnZpY2U7XHJcbiAgICBASW5wdXQoKSB2YWxpZEVsZW1lbnRzSW5mbzogc3RyaW5nO1xyXG4gICAgQElucHV0KCkgZmlsdGVyUG9zaXRpb25FcnJvckluZm86IHN0cmluZztcclxuICAgIEBJbnB1dCgpIHdpdGhQZXJtaXNzaW9uOiBib29sZWFuO1xyXG4gICAgQE91dHB1dCgpIHNlbGVjdGlvbnNDaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcclxuICAgIEBPdXRwdXQoKSBzZWFyY2hSZXN1bHRDaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyPGJvb2xlYW4+KCk7XHJcblxyXG4gICAgY29sdW1uczogYW55O1xyXG4gICAgc2VsZWN0aW9uczogYW55W10gPSBbXTtcclxuXHJcbiAgICBjbG9uZVVzZXJJZHMgPSAnJztcclxuICAgIGNsb25lU2VsZWN0aW9ucyA9IFtdO1xyXG5cclxuICAgIHByaXZhdGUgcEVuYWJsZUNoaWxkSGllcmFyY2h5ID0gdHJ1ZTtcclxuICAgIHByaXZhdGUgcEluY2x1ZGVDdXJyZW50VXNlciA9IHRydWU7XHJcbiAgICBmYXZvcml0ZXNMaXN0ID0gW107XHJcbiAgICBub0RhdGFJbWcgPSBub0RhdGFJbWc7XHJcbiAgICBhbGxDaGVja2VkID0gZmFsc2U7XHJcbiAgICBpdGVtc0JhY2t1cCA9IFtdO1xyXG4gICAgYWxsSW5kZXhJZCA9ICdhbGxJbmRleElkJztcclxuICAgIGZpbHRlcklkOiBzdHJpbmc7XHJcbiAgICAvLyDmmK/lkKbmmL7npLrnlKjmiLfnvJblj7dcclxuICAgIHNob3dVc2VyQ29kZSA9IHRydWU7XHJcbiAgICBjZFJlZjogQ2hhbmdlRGV0ZWN0b3JSZWY7XHJcbiAgICBzaG93UGFnZXNQYW5lbDogYm9vbGVhbiA9IGZhbHNlO1xyXG4gICAgcGFnZUxpc3QgPSBbMTAsIDIwLCA1MCwgMTAwLCAyMDAsIDUwMCwgMTAwMCwgMjAwMCwgNTAwMF07XHJcbiAgICBsb2FkaW5nU2VydmljZU1lc3NhZ2U6IHN0cmluZztcclxuICAgIGZpbHRlclBlcnNvbldpdGhQb3NpdGlvblVybDogc3RyaW5nID0gJy9hcGkvcnVudGltZS9zeXMvdjEuMC91c2Vycy9nZXRQb3NpdGlvbnNCeUZpbHRlcic7XHJcbiAgICBmaWx0ZXJQb3NpdGlvbkFycjogQXJyYXk8RmlsdGVyUG9zaXRpb24+ID0gW107XHJcbiAgICBmaWx0ZXJQb3NpdGlvbklkOiBzdHJpbmcgPSBudWxsO1xyXG4gICAgaXNFbXB0eUZpbHRlclBvc2l0aW9uOiBib29sZWFuID0gZmFsc2U7XHJcblxyXG4gICAgY29uc3RydWN0b3IoXHJcbiAgICAgICAgcHJpdmF0ZSBhcGlTZXJ2aWNlOiBBcGlMb2NhbFNlcnZpY2UsXHJcbiAgICAgICAgQE9wdGlvbmFsKCkgcHJpdmF0ZSBmYXZvcml0ZXNUb29sOiBGYXZvcml0ZXNUb29sXHJcbiAgICApIHtcclxuICAgICAgICB0aGlzLmFsbEluZGV4SWQgPSBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDE2KS5zdWJzdHJpbmcoMywgMTApO1xyXG4gICAgfVxyXG5cclxuICAgIG5nT25Jbml0KCk6IHZvaWQge1xyXG4gICAgICAgIGxldCB0aXRsZSA9ICcnO1xyXG4gICAgICAgIGlmICh0aGlzLm11bHRpU2VsZWN0KSB7XHJcbiAgICAgICAgICAgIHRpdGxlID0gJ+WFqOmAiSc7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuY29sdW1ucyA9IFtcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgZmllbGQ6ICduYW1lJywgdGVtcGxhdGU6IHRoaXMub3BDZWxsLCB0aXRsZSwgd2lkdGg6ICcxNTAnXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICBdO1xyXG4gICAgICAgIGlmICh0aGlzLmZhdm9yaXRlc1Rvb2wpIHtcclxuICAgICAgICAgICAgdGhpcy5mYXZvcml0ZXNUb29sLmZhdm9yaXRlc1N1YmplY3Quc3Vic2NyaWJlKGRhdGEgPT4ge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5mYXZvcml0ZXNMaXN0ID0gZGF0YTtcclxuICAgICAgICAgICAgICAgIHRoaXMudW5TZWxlY3RlZExpc3RMb2FkKCk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZCB7XHJcbiAgICAgICAgLy8gdGhpcy5wYWdlQ2hhbmdlQ2hlY2soKTtcclxuICAgIH1cclxuXHJcbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZCB7XHJcbiAgICAgICAgaWYgKGNoYW5nZXMuaW5jbHVkZUN1cnJlbnRVc2VyICYmIHR5cGVvZiBjaGFuZ2VzLmluY2x1ZGVDdXJyZW50VXNlci5jdXJyZW50VmFsdWUgPT09ICdib29sZWFuJ1xyXG4gICAgICAgICAgICAmJiAhY2hhbmdlcy5pbmNsdWRlQ3VycmVudFVzZXIuZmlyc3RDaGFuZ2UpIHtcclxuICAgICAgICAgICAgdGhpcy5hc3NlbWJsZURhdGFCeU9yZ0lkKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChjaGFuZ2VzLmVuYWJsZUNoaWxkSGllcmFyY2h5ICYmIHR5cGVvZiBjaGFuZ2VzLmVuYWJsZUNoaWxkSGllcmFyY2h5LmN1cnJlbnRWYWx1ZSA9PT0gJ2Jvb2xlYW4nXHJcbiAgICAgICAgICAgICYmICFjaGFuZ2VzLmVuYWJsZUNoaWxkSGllcmFyY2h5LmZpcnN0Q2hhbmdlKSB7XHJcbiAgICAgICAgICAgIHRoaXMuYXNzZW1ibGVEYXRhQnlPcmdJZCgpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIGVtaXRTZWxlY3Rpb25zKCkge1xyXG4gICAgICAgIGNvbnN0IGVtaXRPYmogPSB7XHJcbiAgICAgICAgICAgIHNlbGVjdGlvbnM6IHRoaXMuc2VsZWN0aW9ucyxcclxuICAgICAgICAgICAgdG9rZW46ICd1bkRhdGFncmlkJ1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5zZWxlY3Rpb25zQ2hhbmdlLmVtaXQoZW1pdE9iaik7XHJcbiAgICB9XHJcblxyXG4gICAgcmVzdG9yZVNlbGVjdGlvbnMoKSB7XHJcbiAgICAgICAgdGhpcy5zZWxlY3Rpb25zID0gXy5jbG9uZURlZXAodGhpcy5jbG9uZVNlbGVjdGlvbnMpO1xyXG4gICAgICAgIC8vIHRoaXMuZW1pdFNlbGVjdGlvbnMoKTtcclxuICAgICAgICB0aGlzLnRvZ2dsZUNoZWNrZWQoKTtcclxuICAgIH1cclxuXHJcbiAgICAvLyDkurrlkZjlsZXnpLrnv7vpobXop6blj5Hmn6Xor6LvvIjvvIHvvIlcclxuICAgIHN3aXRjaFBhZ2Uoc2l6ZSkge1xyXG4gICAgICAgIHRoaXMucGFnZUluZGV4ID0gc2l6ZS5wYWdlSW5kZXg7XHJcbiAgICAgICAgdGhpcy5wYWdlU2l6ZSA9IHNpemUucGFnZVNpemU7XHJcbiAgICAgICAgaWYgKHRoaXMuc2VhcmNoUGFnZSkge1xyXG4gICAgICAgICAgICB0aGlzLmFzc2VtYmxlRGF0YUJ5U2VhcmNoKCk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5hc3NlbWJsZURhdGFCeU9yZ0lkKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHRvZ2dsZUZhdm9yaXRlcyhlOiBhbnksIGl0ZW06IGFueSkge1xyXG4gICAgICAgIHRoaXMuZmF2b3JpdGVzVG9vbC50b2dnbGVGYXZvcml0ZXMoZSwgaXRlbSk7XHJcbiAgICB9XHJcblxyXG4gICAgYXNzZW1ibGVEYXRhQnlTZWFyY2goKSB7XHJcbiAgICAgICAgY29uc3QgcmVxdWVzdFBhcmFtOiBhbnkgPSB7XHJcbiAgICAgICAgICAgIHBhZ2VTaXplOiB0aGlzLnBhZ2VTaXplLFxyXG4gICAgICAgICAgICBwYWdlSW5kZXg6IHRoaXMucGFnZUluZGV4LFxyXG4gICAgICAgICAgICB3aXRoQWxsT3JnOiB0aGlzLnBFbmFibGVDaGlsZEhpZXJhcmNoeSA/IDEgOiAwLFxyXG4gICAgICAgICAgICBub3RHZXRTdG9wVXNlcjogIXRoaXMuaW5jbHVkZVN0b3BVc2VyLFxyXG4gICAgICAgICAgICBub3RHZXRDdXJyZW50VXNlcjogIXRoaXMucEluY2x1ZGVDdXJyZW50VXNlcixcclxuICAgICAgICAgICAgb3JkZXJGaWVsZDogdGhpcy5vcmRlckZpZWxkLFxyXG4gICAgICAgICAgICB1c2VyVHlwZU1vZGU6IHRoaXMudXNlclR5cGVNb2RlLFxyXG4gICAgICAgICAgICBmaWx0ZXJJZDogdGhpcy5maWx0ZXJJZFxyXG4gICAgICAgIH07XHJcbiAgICAgICAgLy8g5YWo5bGA5pCc57Sib3LlsYDpg6hcclxuICAgICAgICBpZiAoIXRoaXMuZ2xvYmFsU2VhcmNoKSB7XHJcbiAgICAgICAgICAgIHJlcXVlc3RQYXJhbS5vcmdJZCA9IHRoaXMub3JnSWQ7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuYXBpU2VydmljZS5nZXRQZXJzb25uZWxCeVNlYXJjaCh0aGlzLmFic1VzZXJPcmdVcmwsIHRoaXMuYWJzT3JnVHlwZSwgdGhpcy5zZWFyY2hUZXh0LFxyXG4gICAgICAgICAgICByZXF1ZXN0UGFyYW0pLnN1YnNjcmliZSgocmVzOiBhbnkpID0+IHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IHJjUmVzRGF0YSA9IHJlcyA/IHJlcy5kYXRhIDogW107XHJcbiAgICAgICAgICAgICAgICB0aGlzLnVuU2VsZWN0ZWRMaXN0ID0gcmNSZXNEYXRhO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5wYWdlVG90YWxBbGwgPSByZXMudG90YWxDb3VudDtcclxuICAgICAgICAgICAgICAgIHRoaXMucGFnZVRvdGFsID0gTWF0aC5jZWlsKHRoaXMucGFnZVRvdGFsQWxsIC8gdGhpcy5wYWdlU2l6ZSk7XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5wYWdlVG90YWwgPT09IDApIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnBhZ2VUb3RhbCA9IDE7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB0aGlzLnVuU2VsZWN0ZWRMaXN0TG9hZCgpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zZWFyY2hSZXN1bHRDaGFuZ2UuZW1pdCh0cnVlKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgYXNzZW1ibGVEYXRhQnlPcmdJZCgpIHtcclxuICAgICAgICBsZXQgb3JnSWRzID0gJyc7XHJcbiAgICAgICAgaWYgKCF0aGlzLm9yZ0lkKSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYodGhpcy5kYXRhTG9hZGluZ1NlcnZpY2UpIHtcclxuICAgICAgICAgICAgdGhpcy5kYXRhTG9hZGluZ1NlcnZpY2Uuc2hvdyh0aGlzLmxvYWRpbmdTZXJ2aWNlTWVzc2FnZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIG9yZ0lkcyA9IHRoaXMub3JnSWQgPT09ICcqJyA/ICcnIDogdGhpcy5vcmdJZDtcclxuICAgICAgICBjb25zdCByZXF1ZXN0UGFyYW06IGFueSA9IHtcclxuICAgICAgICAgICAgd2l0aEFsbE9yZzogdGhpcy5wRW5hYmxlQ2hpbGRIaWVyYXJjaHkgPyAxIDogMCxcclxuICAgICAgICAgICAgbm90R2V0U3RvcFVzZXI6ICF0aGlzLmluY2x1ZGVTdG9wVXNlcixcclxuICAgICAgICAgICAgbm90R2V0Q3VycmVudFVzZXI6ICF0aGlzLnBJbmNsdWRlQ3VycmVudFVzZXIsXHJcbiAgICAgICAgICAgIG9yZGVyRmllbGQ6IHRoaXMub3JkZXJGaWVsZCxcclxuICAgICAgICAgICAgdXNlclR5cGVNb2RlOiB0aGlzLnVzZXJUeXBlTW9kZSxcclxuICAgICAgICAgICAgZmlsdGVySWQ6IHRoaXMuZmlsdGVySWRcclxuICAgICAgICB9O1xyXG4gICAgICAgIGlmICh0aGlzLmVuYWJsZVBhZ2luYXRpb24pIHtcclxuICAgICAgICAgICAgcmVxdWVzdFBhcmFtLnBhZ2VTaXplID0gdGhpcy5wYWdlU2l6ZTtcclxuICAgICAgICAgICAgcmVxdWVzdFBhcmFtLnBhZ2VJbmRleCA9IHRoaXMucGFnZUluZGV4O1xyXG4gICAgICAgIH1cclxuICAgICAgICAvLyDpgJrov4flspfkvY3ov5vooYzkurrlkZjnmoTkuozmrKHov4fmu6RcclxuICAgICAgICBpZih0aGlzLmZpbHRlclBvc2l0aW9uSWQpIHtcclxuICAgICAgICAgICAgcmVxdWVzdFBhcmFtLnBvc0lkID0gdGhpcy5maWx0ZXJQb3NpdGlvbklkO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZih0aGlzLndpdGhQZXJtaXNzaW9uKSB7XHJcbiAgICAgICAgICAgIHJlcXVlc3RQYXJhbS53aXRoUGVybWlzc2lvbiA9IHRydWU7XHJcbiAgICAgICAgICAgIHJlcXVlc3RQYXJhbS5hdXRoT3AgPSAnVXNlck1hbmFnZSc7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIOagueaNrue7hOe7h+WKoOi9veS6uuWRmFxyXG4gICAgICAgIHRoaXMuYXBpU2VydmljZS5nZXRQZXJzb25uZWxCeU9yZ0lkKHRoaXMuYWJzVXNlck9yZ1VybCwgdGhpcy5hYnNPcmdUeXBlLCBvcmdJZHMsIHJlcXVlc3RQYXJhbSkuc3Vic2NyaWJlKChyZXM6IGFueSkgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCByY1Jlc0RhdGEgPSByZXMgPyByZXMuZGF0YSA6IFtdO1xyXG4gICAgICAgICAgICB0aGlzLnVuU2VsZWN0ZWRMaXN0ID0gcmNSZXNEYXRhO1xyXG4gICAgICAgICAgICB0aGlzLnBhZ2VUb3RhbEFsbCA9IHJlcy50b3RhbENvdW50O1xyXG4gICAgICAgICAgICB0aGlzLnBhZ2VUb3RhbCA9IE1hdGguY2VpbCh0aGlzLnBhZ2VUb3RhbEFsbCAvIHRoaXMucGFnZVNpemUpO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5wYWdlVG90YWwgPT09IDApIHtcclxuICAgICAgICAgICAgICAgIHRoaXMucGFnZVRvdGFsID0gMTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLnVuU2VsZWN0ZWRMaXN0TG9hZCgpO1xyXG4gICAgICAgICAgICBpZih0aGlzLmRhdGFMb2FkaW5nU2VydmljZSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5kYXRhTG9hZGluZ1NlcnZpY2UuaGlkZSgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgYXNzZW1ibGVEYXRhQnlPcmdJZEFuZEdldEZpbHRlclBvc2l0aW9uKHNpemU6IGFueSkge1xyXG4gICAgICAgIGlmKCF0aGlzLm9yZ0lkIHx8IHRoaXMub3JnSWQgPT0gJyonKSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYodGhpcy5kYXRhTG9hZGluZ1NlcnZpY2UpIHtcclxuICAgICAgICAgICAgdGhpcy5kYXRhTG9hZGluZ1NlcnZpY2Uuc2hvdyh0aGlzLmxvYWRpbmdTZXJ2aWNlTWVzc2FnZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMucGFnZUluZGV4ID0gc2l6ZS5wYWdlSW5kZXg7XHJcbiAgICAgICAgdGhpcy5wYWdlU2l6ZSA9IHNpemUucGFnZVNpemU7XHJcbiAgICAgICAgdGhpcy5maWx0ZXJQb3NpdGlvbkFyciA9IFtdO1xyXG4gICAgICAgIHRoaXMuZmlsdGVyUG9zaXRpb25JZCA9IG51bGw7XHJcblxyXG4gICAgICAgIGNvbnN0IGZpbHRlclJlcXVlc3RQYXJhbTogYW55ID0ge1xyXG4gICAgICAgICAgICB3aXRoQWxsT3JnOiB0cnVlLFxyXG4gICAgICAgICAgICBnZXRVc2VySW5mbzogZmFsc2UsXHJcbiAgICAgICAgICAgIG5vdEdldFN0b3BVc2VyOiAhdGhpcy5pbmNsdWRlU3RvcFVzZXIsXHJcbiAgICAgICAgICAgIG5vdEdldEN1cnJlbnRVc2VyOiAhdGhpcy5wSW5jbHVkZUN1cnJlbnRVc2VyLFxyXG4gICAgICAgICAgICBvcmRlckZpZWxkOiB0aGlzLm9yZGVyRmllbGQsXHJcbiAgICAgICAgICAgIHVzZXJUeXBlTW9kZTogdGhpcy51c2VyVHlwZU1vZGUsXHJcbiAgICAgICAgICAgIGZpbHRlcklkOiB0aGlzLmZpbHRlcklkLFxyXG4gICAgICAgICAgICBvcmdJZDogdGhpcy5vcmdJZCxcclxuICAgICAgICB9O1xyXG4gICAgICAgIC8vIOmmluWFiOiOt+WPluW9k+WJjee7hOe7h+S4i+aJgOacieaIkOWRmOaJgOWxnueahOWyl+S9jVxyXG4gICAgICAgIGNvbnN0IGdldEZpbHRlclBvc2l0aW9uJCA9IHRoaXMuYXBpU2VydmljZS5nZXRGaWx0ZXJQb3NpdGlvbih0aGlzLmZpbHRlclBlcnNvbldpdGhQb3NpdGlvblVybCwgdGhpcy5hYnNPcmdUeXBlLCBmaWx0ZXJSZXF1ZXN0UGFyYW0pO1xyXG5cclxuICAgICAgICBjb25zdCByZXF1ZXN0UGFyYW06IGFueSA9IHtcclxuICAgICAgICAgICAgd2l0aEFsbE9yZzogdGhpcy5wRW5hYmxlQ2hpbGRIaWVyYXJjaHkgPyAxIDogMCxcclxuICAgICAgICAgICAgbm90R2V0U3RvcFVzZXI6ICF0aGlzLmluY2x1ZGVTdG9wVXNlcixcclxuICAgICAgICAgICAgbm90R2V0Q3VycmVudFVzZXI6ICF0aGlzLnBJbmNsdWRlQ3VycmVudFVzZXIsXHJcbiAgICAgICAgICAgIG9yZGVyRmllbGQ6IHRoaXMub3JkZXJGaWVsZCxcclxuICAgICAgICAgICAgdXNlclR5cGVNb2RlOiB0aGlzLnVzZXJUeXBlTW9kZSxcclxuICAgICAgICAgICAgZmlsdGVySWQ6IHRoaXMuZmlsdGVySWRcclxuICAgICAgICB9O1xyXG4gICAgICAgIGlmICh0aGlzLmVuYWJsZVBhZ2luYXRpb24pIHtcclxuICAgICAgICAgICAgcmVxdWVzdFBhcmFtLnBhZ2VTaXplID0gdGhpcy5wYWdlU2l6ZTtcclxuICAgICAgICAgICAgcmVxdWVzdFBhcmFtLnBhZ2VJbmRleCA9IHRoaXMucGFnZUluZGV4O1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZih0aGlzLndpdGhQZXJtaXNzaW9uKSB7XHJcbiAgICAgICAgICAgIHJlcXVlc3RQYXJhbS53aXRoUGVybWlzc2lvbiA9IHRydWU7XHJcbiAgICAgICAgICAgIHJlcXVlc3RQYXJhbS5hdXRoT3AgPSAnVXNlck1hbmFnZSc7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIOeEtuWQjuiOt+WPluW9k+WJjee7hOe7h+S4i+eahOaJgOacieaIkOWRmFxyXG4gICAgICAgIGNvbnN0IGdldFBlcnNvbm5lbCQgPSB0aGlzLmFwaVNlcnZpY2UuZ2V0UGVyc29ubmVsQnlPcmdJZCh0aGlzLmFic1VzZXJPcmdVcmwsIHRoaXMuYWJzT3JnVHlwZSwgdGhpcy5vcmdJZCwgcmVxdWVzdFBhcmFtKTtcclxuICAgICAgICBnZXRGaWx0ZXJQb3NpdGlvbiQucGlwZShcclxuICAgICAgICAgICAgc3dpdGNoTWFwKFxyXG4gICAgICAgICAgICAgICAgKHJlc0RhdGE6IGFueSkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmKHJlc0RhdGEgJiYgcmVzRGF0YS5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuaXNFbXB0eUZpbHRlclBvc2l0aW9uID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBmaWx0ZXJQb3NpdGlvbjogRmlsdGVyUG9zaXRpb247XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZmlsdGVyUG9zaXRpb25BcnIgPSAocmVzRGF0YSBhcyBBcnJheTxhbnk+KS5tYXAoKGRhdGE6IGFueSkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZmlsdGVyUG9zaXRpb24gPSBuZXcgRmlsdGVyUG9zaXRpb247XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaWx0ZXJQb3NpdGlvbi5pZCA9IGRhdGFbJ2lkJ107XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaWx0ZXJQb3NpdGlvbi5jb2RlID0gZGF0YVsnY29kZSddO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZmlsdGVyUG9zaXRpb24ubmFtZSA9IGRhdGFbJ25hbWUnXTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmaWx0ZXJQb3NpdGlvbjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5pc0VtcHR5RmlsdGVyUG9zaXRpb24gPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZ2V0UGVyc29ubmVsJC5waXBlKFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB0YXAoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAocmVzOiBhbnkpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCByY1Jlc0RhdGEgPSByZXMgPyByZXMuZGF0YSA6IFtdO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMudW5TZWxlY3RlZExpc3QgPSByY1Jlc0RhdGE7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5wYWdlVG90YWxBbGwgPSByZXMudG90YWxDb3VudDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnBhZ2VUb3RhbCA9IE1hdGguY2VpbCh0aGlzLnBhZ2VUb3RhbEFsbCAvIHRoaXMucGFnZVNpemUpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLnBhZ2VUb3RhbCA9PT0gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnBhZ2VUb3RhbCA9IDE7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMudW5TZWxlY3RlZExpc3RMb2FkKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYodGhpcy5kYXRhTG9hZGluZ1NlcnZpY2UpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5kYXRhTG9hZGluZ1NlcnZpY2UuaGlkZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAoZXJyb3IpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZih0aGlzLmRhdGFMb2FkaW5nU2VydmljZSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmRhdGFMb2FkaW5nU2VydmljZS5oaWRlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcih0aGlzLmZpbHRlclBvc2l0aW9uRXJyb3JJbmZvKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgKVxyXG4gICAgICAgICAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgICAgICB9IFxyXG4gICAgICAgICAgICApXHJcbiAgICAgICAgKS5zdWJzY3JpYmUoKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIGRhdGFncmlk55So5LqO5pWw5o2u5bGV56S6XHJcbiAgICAgKi9cclxuICAgIHVuU2VsZWN0ZWRMaXN0TG9hZChpbml0TG9hZCA9IGZhbHNlKSB7XHJcbiAgICAgICAgdGhpcy5pdGVtcyA9IFtdO1xyXG4gICAgICAgIHRoaXMudW5TZWxlY3RlZExpc3QuZm9yRWFjaChyZXMgPT4ge1xyXG4gICAgICAgICAgICAvLyBjb25zdCBpbmRleElkID0gTWF0aC5yYW5kb20oKS50b1N0cmluZygxNikuc3Vic3RyaW5nKDIpO1xyXG4gICAgICAgICAgICAvLyBjb25zdCBpdGVtID0ge1xyXG4gICAgICAgICAgICAvLyAgICAgYWJicmV2aWF0aW9uOiByZXMuYWJicmV2aWF0aW9uLFxyXG4gICAgICAgICAgICAvLyAgICAgY29kZTogcmVzLmNvZGUsXHJcbiAgICAgICAgICAgIC8vICAgICBkZWZhdWx0T3JnSWQ6IHJlcy5kZWZhdWx0T3JnSWQsXHJcbiAgICAgICAgICAgIC8vICAgICBkZWZhdWx0T3JnUGF0aDogcmVzLmRlZmF1bHRPcmdQYXRoLFxyXG4gICAgICAgICAgICAvLyAgICAgZXh0MTogcmVzLmV4dDEsXHJcbiAgICAgICAgICAgIC8vICAgICBleHQyOiByZXMuZXh0MixcclxuICAgICAgICAgICAgLy8gICAgIGZ1bGxQYXRoTmFtZTogcmVzLmZ1bGxQYXRoTmFtZSxcclxuICAgICAgICAgICAgLy8gICAgIG5hbWU6IHJlcy5uYW1lLFxyXG4gICAgICAgICAgICAvLyAgICAgb3JnVHlwZUlkOiByZXMub3JnVHlwZUlkLFxyXG4gICAgICAgICAgICAvLyAgICAgc2VjTGV2ZWw6IHJlcy5zZWNMZXZlbCxcclxuICAgICAgICAgICAgLy8gICAgIHNvcnRPcmRlcjogcmVzLnNvcnRPcmRlcixcclxuICAgICAgICAgICAgLy8gICAgIHN0YXRlOiByZXMuc3RhdGUsXHJcbiAgICAgICAgICAgIC8vICAgICBzdTogcmVzLnN1LFxyXG4gICAgICAgICAgICAvLyAgICAgdXNlcklkOiByZXMudXNlcklkLFxyXG4gICAgICAgICAgICAvLyAgICAgb3JnQWxsUGF0aDogcmVzLm9yZ0FsbFBhdGgsXHJcbiAgICAgICAgICAgIC8vICAgICBpbkZhdm9yaXRlczogZmFsc2UsXHJcbiAgICAgICAgICAgIC8vICAgICB0eXBlOiAncGVvcGxlJyxcclxuICAgICAgICAgICAgLy8gICAgIGNoZWNrZWQ6IGZhbHNlLFxyXG4gICAgICAgICAgICAvLyAgICAgaW5kZXhJZFxyXG4gICAgICAgICAgICAvLyB9O1xyXG4gICAgICAgICAgICBjb25zdCBpdGVtID0gXy5jbG9uZURlZXAocmVzKTtcclxuICAgICAgICAgICAgaXRlbS5jaGVja2VkID0gZmFsc2U7XHJcbiAgICAgICAgICAgIGl0ZW0uaW5GYXZvcml0ZXMgPSBmYWxzZTtcclxuICAgICAgICAgICAgaXRlbS5pbmRleElkID0gTWF0aC5yYW5kb20oKS50b1N0cmluZygxNikuc3Vic3RyaW5nKDIpO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5faXNJbkFycmF5KHJlc1t0aGlzLmlkRmllbGRdLCB0aGlzLmlkRmllbGQsIHRoaXMuc2VsZWN0aW9ucykgIT09IC0xKSB7XHJcbiAgICAgICAgICAgICAgICBpdGVtLmNoZWNrZWQgPSB0cnVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmICh0aGlzLl9pc0luQXJyYXkocmVzW3RoaXMuaWRGaWVsZF0sIHRoaXMuaWRGaWVsZCwgdGhpcy5mYXZvcml0ZXNMaXN0KSAhPT0gLTEpIHtcclxuICAgICAgICAgICAgICAgIGl0ZW0uaW5GYXZvcml0ZXMgPSB0cnVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGl0ZW0uZGlzcGxheU5hbWUgPSAhIXRoaXMuc2hvd1VzZXJDb2RlID8gKCdbJyArIGl0ZW0uY29kZSArICddJyArIGl0ZW0ubmFtZSkgOiBpdGVtLm5hbWU7XHJcbiAgICAgICAgICAgIHRoaXMuaXRlbXMucHVzaChpdGVtKTtcclxuICAgICAgICAgICAgdGhpcy5pdGVtc0JhY2t1cC5wdXNoKGl0ZW0pO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMudG9nZ2xlQ2hlY2tlZCgpO1xyXG4gICAgICAgIHRoaXMuaXRlbXMgPSB0aGlzLml0ZW1zLnNsaWNlKCk7XHJcbiAgICAgICAgdGhpcy5jZFJlZiA/IHRoaXMuY2RSZWYuZGV0ZWN0Q2hhbmdlcygpIDogbnVsbDtcclxuICAgIH1cclxuXHJcbiAgICB0b2dnbGVBbGwoKSB7XHJcbiAgICAgICAgaWYgKCF0aGlzLmFsbENoZWNrZWQpIHtcclxuICAgICAgICAgICAgdGhpcy5jaGVja0FsbCgpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMudW5DaGVja0FsbCgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmVtaXRTZWxlY3Rpb25zKCk7XHJcbiAgICB9XHJcblxyXG4gICAgdG9nZ2xlT25lKGRhdGEpIHtcclxuICAgICAgICBpZiAoZGF0YS5jaGVja2VkKSB7XHJcbiAgICAgICAgICAgIHRoaXMudW5TZWxlY3RMaW5lKGRhdGEpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0TGluZShkYXRhKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5lbWl0U2VsZWN0aW9ucygpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5YWo6YCJ5ZCO5aSE55CGXHJcbiAgICAgKiBAcGFyYW0gZGF0YUFyciDlhajpgInnmoTlgLxcclxuICAgICAqL1xyXG4gICAgY2hlY2tBbGwoKSB7XHJcbiAgICAgICAgdGhpcy5pdGVtcy5mb3JFYWNoKGl0ZW0gPT4ge1xyXG4gICAgICAgICAgICB0aGlzLl9pbnNlcnRPbmVJbnRvU2VsZWN0aW9ucyhpdGVtKTtcclxuICAgICAgICAgICAgaXRlbS5jaGVja2VkID0gdHJ1ZTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOWFqOmDqOWPlua2iFxyXG4gICAgICogQHBhcmFtIGRhdGFBcnIg5Y+W5raI55qE5pWw5o2uXHJcbiAgICAgKiBAcmV0dXJucyB2b2lkXHJcbiAgICAgKi9cclxuICAgIHVuQ2hlY2tBbGwoKSB7XHJcbiAgICAgICAgdGhpcy5pdGVtcy5mb3JFYWNoKGl0ZW0gPT4ge1xyXG4gICAgICAgICAgICB0aGlzLnNlbGVjdGlvbnMuZm9yRWFjaCgoc2VsZWN0aW9uLCBpbmRleCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgaWYgKGl0ZW1bdGhpcy5pZEZpZWxkXSA9PT0gc2VsZWN0aW9uW3RoaXMuaWRGaWVsZF0pIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdGlvbnMuc3BsaWNlKGluZGV4LCAxKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIGl0ZW0uY2hlY2tlZCA9IGZhbHNlO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgKiDlvZPliY3ooYzpgInkuK1cclxuICAgICogQHBhcmFtIGRhdGEg5b2T5YmN6KGM55qE5pWw5o2u77yI77yJXHJcbiAgICAqL1xyXG4gICAgc2VsZWN0TGluZShkYXRhOiBhbnkpIHtcclxuICAgICAgICBpZiAodGhpcy5tdWx0aVNlbGVjdCkge1xyXG4gICAgICAgICAgICB0aGlzLl9pbnNlcnRPbmVJbnRvU2VsZWN0aW9ucyhkYXRhKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLnVzZXJJZHMgPSAnJztcclxuICAgICAgICAgICAgdGhpcy5zZWxlY3Rpb25zID0gW107XHJcbiAgICAgICAgICAgIHRoaXMuaXRlbXMuZm9yRWFjaChpdGVtID0+IHtcclxuICAgICAgICAgICAgICAgIGlmIChpdGVtLmNoZWNrZWQpIHtcclxuICAgICAgICAgICAgICAgICAgICBpdGVtLmNoZWNrZWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIHRoaXMuX2luc2VydE9uZUludG9TZWxlY3Rpb25zKGRhdGEpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAodGhpcy5pc0FsbENoZWNrZWQoKSkge1xyXG4gICAgICAgICAgICB0aGlzLmFsbENoZWNrZWQgPSB0cnVlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOWNlemAieWPlua2iOmAieS4rVxyXG4gICAgICogQHBhcmFtIGRhdGEg5Y+W5raI6YCJ5Lit6KGMXHJcbiAgICAgKi9cclxuICAgIHVuU2VsZWN0TGluZShkYXRhOiBhbnkpIHtcclxuICAgICAgICBjb25zdCBpbmRleCA9IHRoaXMuX2lzSW5BcnJheShkYXRhW3RoaXMuaWRGaWVsZF0sIHRoaXMuaWRGaWVsZCwgdGhpcy5zZWxlY3Rpb25zKTtcclxuICAgICAgICBpZiAoaW5kZXggPiAtMSkge1xyXG4gICAgICAgICAgICB0aGlzLnNlbGVjdGlvbnMuc3BsaWNlKGluZGV4LCAxKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHRoaXMuYWxsQ2hlY2tlZCkge1xyXG4gICAgICAgICAgICB0aGlzLmFsbENoZWNrZWQgPSBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiAg5Y+W5raI6YCJ5LitXHJcbiAgICAgKiBAcGFyYW0gJGV2ZW50IOWPlua2iOWLvumAieeahOaVsOaNrlxyXG4gICAgICovXHJcbiAgICBjYW5jZWxTZWxlY3Rpb25zKCRldmVudCkge1xyXG4gICAgICAgIGlmICh0aGlzLml0ZW1zLmZpbmRJbmRleChpdGVtID0+IGl0ZW1bdGhpcy5pZEZpZWxkXSA9PT0gJGV2ZW50LmlkKSA9PT0gLTEpIHtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLml0ZW1zLmZvckVhY2goaXRlbSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChpdGVtW3RoaXMuaWRGaWVsZF0gPT09ICRldmVudC5pZCkge1xyXG4gICAgICAgICAgICAgICAgaXRlbS5jaGVja2VkID0gZmFsc2U7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLnNlbGVjdGlvbnMuZm9yRWFjaCgoc2VsZWN0aW9uLCBpbmRleCkgPT4ge1xyXG4gICAgICAgICAgICBpZiAoJGV2ZW50LmlkID09PSBzZWxlY3Rpb25bdGhpcy5pZEZpZWxkXSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zZWxlY3Rpb25zLnNwbGljZShpbmRleCwgMSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLmFsbENoZWNrZWQgPSBmYWxzZTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOWFqOmDqOWPlua2iOWLvumAiVxyXG4gICAgICovXHJcbiAgICBjbGVhckNoZWNrZWRzKCkge1xyXG4gICAgICAgIHRoaXMuaXRlbXMuZm9yRWFjaChpdGVtID0+IHtcclxuICAgICAgICAgICAgaXRlbS5jaGVja2VkID0gZmFsc2U7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5hbGxDaGVja2VkID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5zZWxlY3Rpb25zID0gW107XHJcbiAgICB9XHJcblxyXG4gICAgY2xlYXJVc2VySWRzKCkge1xyXG4gICAgICAgIHRoaXMudXNlcklkcyA9ICcnO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiDpgInkuK3lubbmj5LlhaXlvZPliY3ooYzmlbDmja7liLDlj7PkvqdcclxuICAgICAqIEBwYXJhbSBkYXRhIOW9k+WJjeihjOeahOaVsOaNrlxyXG4gICAgICogQHBhcmFtIGNvbGxlY3Rpb24g5pqC5a2Y5b2T5YmN5pWw5o2u55qE6ZuG5ZCIXHJcbiAgICAgKi9cclxuICAgIF9pbnNlcnRPbmVJbnRvU2VsZWN0aW9ucyhkYXRhOiBhbnkpIHtcclxuICAgICAgICAvLyDlpoLmnpzlvZPliY3mlbDmja7lt7Lnu4/np7vlhaXlj7PkvqfmlbDmja7vvIzliJnov5Tlm57jgIJcclxuICAgICAgICBpZiAodGhpcy5faXNJbkFycmF5KGRhdGFbdGhpcy5pZEZpZWxkXSwgdGhpcy5pZEZpZWxkLCB0aGlzLnNlbGVjdGlvbnMpID4gLTEpIHtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLnNlbGVjdGlvbnMucHVzaChkYXRhKTtcclxuICAgICAgICB0aGlzLnNlbGVjdGlvbnMgPSB0aGlzLnNlbGVjdGlvbnMuc2xpY2UoKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOWIpOaWreaYr+WQpuWcqOWGhVxyXG4gICAgICogQHBhcmFtIHZhbHVlIHZhbHVlXHJcbiAgICAgKiBAcGFyYW0gZmllbGQgZmllbGRcclxuICAgICAqIEBwYXJhbSBhcnJheSBhcnJheVxyXG4gICAgICogQHJldHVybnMg5L2N572u57Si5byVXHJcbiAgICAgKi9cclxuICAgIF9pc0luQXJyYXkodmFsdWU6IHN0cmluZywgZmllbGQ6IHN0cmluZywgYXJyYXk6IGFueVtdKTogbnVtYmVyIHtcclxuICAgICAgICBpZiAoIWZpZWxkIHx8ICF2YWx1ZSkge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IodGhpcy52YWxpZEVsZW1lbnRzSW5mbyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBhcnJheS5maW5kSW5kZXgoaXRlbSA9PiB2YWx1ZSA9PT0gaXRlbVtmaWVsZF0pO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog57+76aG15qOA5p+l77ya5Lq65ZGY5bGV56S65Yy655qE5Yu+6YCJ54q25oCB5LiO5bey6YCJ5Lq65ZGY5Yy65piv5ZCm5a+55bqUXHJcbiAgICAgKi9cclxuICAgIHRvZ2dsZUNoZWNrZWQoKSB7XHJcbiAgICAgICAgdGhpcy5pdGVtcy5mb3JFYWNoKGl0ZW0gPT4ge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5faXNJbkFycmF5KGl0ZW1bdGhpcy5pZEZpZWxkXSwgdGhpcy5pZEZpZWxkLCB0aGlzLnNlbGVjdGlvbnMpID4gLTEpIHtcclxuICAgICAgICAgICAgICAgIGl0ZW0uY2hlY2tlZCA9IHRydWU7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBpdGVtLmNoZWNrZWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIGlmICh0aGlzLmlzQWxsQ2hlY2tlZCgpKSB7XHJcbiAgICAgICAgICAgIHRoaXMuYWxsQ2hlY2tlZCA9IHRydWU7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5hbGxDaGVja2VkID0gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgaXNBbGxDaGVja2VkKCk6IGJvb2xlYW4ge1xyXG4gICAgICAgIGxldCBjb3VudCA9IDA7XHJcbiAgICAgICAgbGV0IGFsbENoZWNrZWQgPSBmYWxzZTtcclxuXHJcbiAgICAgICAgdGhpcy5pdGVtcy5mb3JFYWNoKGl0ZW0gPT4ge1xyXG4gICAgICAgICAgICB0aGlzLnNlbGVjdGlvbnMuZm9yRWFjaChzZWxlY3Rpb24gPT4ge1xyXG4gICAgICAgICAgICAgICAgaWYgKGl0ZW1bdGhpcy5pZEZpZWxkXSA9PT0gc2VsZWN0aW9uW3RoaXMuaWRGaWVsZF0pIHtcclxuICAgICAgICAgICAgICAgICAgICBjb3VudCArPSAxO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9KTtcclxuICAgICAgICBpZiAodGhpcy5pdGVtcy5sZW5ndGggPT09IGNvdW50ICYmIGNvdW50ID4gMCkge1xyXG4gICAgICAgICAgICBhbGxDaGVja2VkID0gdHJ1ZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGFsbENoZWNrZWQ7XHJcbiAgICB9XHJcblxyXG4gICAgdHJhY2tCeUZuKGluZGV4LCBpdGVtKSB7XHJcbiAgICAgICAgcmV0dXJuIGl0ZW0udXNlcklkO1xyXG4gICAgfVxyXG5cclxuICAgIHR1cm5PdmVyUGFnZShkaXI6IHN0cmluZywgbnVtOiBudW1iZXIpIHtcclxuICAgICAgICBpZiAoKGRpciA9PT0gJ3ByZScgJiYgdGhpcy5wYWdlSW5kZXggPT09IDEpIHx8IChkaXIgPT09ICduZXh0JyAmJiB0aGlzLnBhZ2VJbmRleCA9PT0gdGhpcy5wYWdlVG90YWwpKSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5wYWdlSW5kZXggPSB0aGlzLnBhZ2VJbmRleCArIG51bTtcclxuICAgICAgICB0aGlzLnN3aXRjaFBhZ2Uoe1xyXG4gICAgICAgICAgICBwYWdlSW5kZXg6IHRoaXMucGFnZUluZGV4LFxyXG4gICAgICAgICAgICBwYWdlU2l6ZTogdGhpcy5wYWdlU2l6ZSxcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBiZWZvcmVQYWdlSW5kZXhDaGFuZ2UoaW5wdXRFbDogS2V5Ym9hcmRFdmVudCwgbWF4TnVtYmVyKSB7XHJcbiAgICAgICAgY29uc3QgdGFyZ2V0ID0gaW5wdXRFbC50YXJnZXQgYXMgYW55O1xyXG4gICAgICAgIGNvbnN0IGN1cnJlbnRQYWdlTnVtYmVyID0gTnVtYmVyKHRhcmdldC52YWx1ZSk7XHJcbiAgICAgICAgaWYgKGN1cnJlbnRQYWdlTnVtYmVyID4gbWF4TnVtYmVyKSB7XHJcbiAgICAgICAgICAgIHRhcmdldC52YWx1ZSA9IG1heE51bWJlcjtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBpZiAoY3VycmVudFBhZ2VOdW1iZXIgPCAxKSB7XHJcbiAgICAgICAgICAgICAgICB0YXJnZXQudmFsdWUgPSAxO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMucGFnZUluZGV4ID0gTnVtYmVyKHRhcmdldC52YWx1ZSk7XHJcbiAgICB9XHJcblxyXG4gICAgb25Nb3VzZUVudGVyKCRldmVudCl7XHJcbiAgICAgICAgdGhpcy5zaG93UGFnZXNQYW5lbCA9IHRydWU7XHJcbiAgICB9XHJcblxyXG4gICAgb25Nb3VzZUxlYXZlKCRldmVudCkge1xyXG4gICAgICAgIHRoaXMuc2hvd1BhZ2VzUGFuZWwgPSBmYWxzZTtcclxuICAgIH1cclxuXHJcbiAgICBjaGFuZ2VQYWdlU2l6ZUhhbmRsZXIoJGV2ZW50LCBudW0pe1xyXG4gICAgICAgICRldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcclxuICAgICAgICBpZihudW0gPT0gdGhpcy5wYWdlU2l6ZSkge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuc2hvd1BhZ2VzUGFuZWwgPSBmYWxzZTtcclxuICAgICAgICB0aGlzLnBhZ2VTaXplID0gbnVtO1xyXG4gICAgICAgIHRoaXMuc3dpdGNoUGFnZSh7XHJcbiAgICAgICAgICAgIHBhZ2VJbmRleDogMSxcclxuICAgICAgICAgICAgcGFnZVNpemU6IHRoaXMucGFnZVNpemUsXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn1cclxuIl19