/**
 * @fileoverview added by tsickle
 * Generated from: lib/ffileupload-adapt-unifile.config.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable, Optional, InjectionToken, Inject, } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * @record
 */
export function FFileUploadAdaptUnifileConfig() { }
if (false) {
    /** @type {?|undefined} */
    FFileUploadAdaptUnifileConfig.prototype.rootId;
    /** @type {?|undefined} */
    FFileUploadAdaptUnifileConfig.prototype.formId;
    /** @type {?|undefined} */
    FFileUploadAdaptUnifileConfig.prototype.mode;
    /** @type {?|undefined} */
    FFileUploadAdaptUnifileConfig.prototype.options;
}
/** @type {?} */
export var FFileUploadAdaptUnifileConfigToken = new InjectionToken('MFFileUploadAdaptUnifileConfig');
var FFileUploadAdaptUnifileConfigService = /** @class */ (function () {
    function FFileUploadAdaptUnifileConfigService(exConfig) {
        this.config = (/** @type {?} */ ({
            rootId: '',
            formId: '',
            mode: 0
        }));
        if (exConfig) {
            Object.assign(this.config, exConfig);
        }
    }
    /**
     * 获取config属性的值
     */
    /**
     * 获取config属性的值
     * @return {?}
     */
    FFileUploadAdaptUnifileConfigService.prototype.getConfig = /**
     * 获取config属性的值
     * @return {?}
     */
    function () {
        return this.config;
    };
    /**
     * 设置config的属性值
     * @param key
     * @param value
     */
    /**
     * 设置config的属性值
     * @param {?} key
     * @param {?} value
     * @return {?}
     */
    FFileUploadAdaptUnifileConfigService.prototype.setConfig = /**
     * 设置config的属性值
     * @param {?} key
     * @param {?} value
     * @return {?}
     */
    function (key, value) {
        this.config[key] = value;
    };
    FFileUploadAdaptUnifileConfigService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    FFileUploadAdaptUnifileConfigService.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [FFileUploadAdaptUnifileConfigToken,] }] }
    ]; };
    /** @nocollapse */ FFileUploadAdaptUnifileConfigService.ngInjectableDef = i0.defineInjectable({ factory: function FFileUploadAdaptUnifileConfigService_Factory() { return new FFileUploadAdaptUnifileConfigService(i0.inject(FFileUploadAdaptUnifileConfigToken, 8)); }, token: FFileUploadAdaptUnifileConfigService, providedIn: "root" });
    return FFileUploadAdaptUnifileConfigService;
}());
export { FFileUploadAdaptUnifileConfigService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    FFileUploadAdaptUnifileConfigService.prototype.config;
}
;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmZpbGV1cGxvYWQtYWRhcHQtdW5pZmlsZS5jb25maWcuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL2V4dGVuZC1maWxldXBsb2FkLWFkYXB0LXVuaWZpbGUvIiwic291cmNlcyI6WyJsaWIvZmZpbGV1cGxvYWQtYWRhcHQtdW5pZmlsZS5jb25maWcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLFFBQVEsRUFBRSxjQUFjLEVBQUUsTUFBTSxHQUFHLE1BQU0sZUFBZSxDQUFDOzs7OztBQUU5RSxtREFLQzs7O0lBSkcsK0NBQWdCOztJQUNoQiwrQ0FBZ0I7O0lBQ2hCLDZDQUFjOztJQUNkLGdEQUFhOzs7QUFFakIsTUFBTSxLQUFPLGtDQUFrQyxHQUFHLElBQUksY0FBYyxDQUFnQyxnQ0FBZ0MsQ0FBQztBQUNySTtJQVVJLDhDQUFvRSxRQUF1QztRQU5uRyxXQUFNLEdBQUcsbUJBQUE7WUFDYixNQUFNLEVBQUUsRUFBRTtZQUNWLE1BQU0sRUFBRSxFQUFFO1lBQ1YsSUFBSSxFQUFFLENBQUM7U0FDVixFQUFpQyxDQUFDO1FBRy9CLElBQUksUUFBUSxFQUFFO1lBQ1YsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLFFBQVEsQ0FBQyxDQUFDO1NBQ3hDO0lBQ0wsQ0FBQztJQUNEOztPQUVHOzs7OztJQUNILHdEQUFTOzs7O0lBQVQ7UUFDSSxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDdkIsQ0FBQztJQUNEOzs7O09BSUc7Ozs7Ozs7SUFDSCx3REFBUzs7Ozs7O0lBQVQsVUFBVSxHQUFHLEVBQUUsS0FBSztRQUNoQixJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxHQUFHLEtBQUssQ0FBQztJQUM3QixDQUFDOztnQkE1QkosVUFBVSxTQUFDO29CQUNSLFVBQVUsRUFBRSxNQUFNO2lCQUNyQjs7OztnREFRZ0IsUUFBUSxZQUFJLE1BQU0sU0FBQyxrQ0FBa0M7OzsrQ0FuQnRFO0NBc0NDLEFBN0JELElBNkJDO1NBMUJZLG9DQUFvQzs7Ozs7O0lBQzdDLHNEQUltQzs7QUFxQnRDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlLCBPcHRpb25hbCwgSW5qZWN0aW9uVG9rZW4sIEluamVjdCwgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgRkZpbGVVcGxvYWRBZGFwdFVuaWZpbGVDb25maWcge1xyXG4gICAgcm9vdElkPzogc3RyaW5nO1xyXG4gICAgZm9ybUlkPzogc3RyaW5nO1xyXG4gICAgbW9kZT86IG51bWJlcjsvLzAg5Luj6KGo5q2j5byP77yMMeS7o+ihqOS4tOaXtlxyXG4gICAgb3B0aW9ucz86YW55O1xyXG59XHJcbmV4cG9ydCBjb25zdCBGRmlsZVVwbG9hZEFkYXB0VW5pZmlsZUNvbmZpZ1Rva2VuID0gbmV3IEluamVjdGlvblRva2VuPEZGaWxlVXBsb2FkQWRhcHRVbmlmaWxlQ29uZmlnPignTUZGaWxlVXBsb2FkQWRhcHRVbmlmaWxlQ29uZmlnJyk7XHJcbkBJbmplY3RhYmxlKHtcclxuICAgIHByb3ZpZGVkSW46ICdyb290J1xyXG59KVxyXG5leHBvcnQgY2xhc3MgRkZpbGVVcGxvYWRBZGFwdFVuaWZpbGVDb25maWdTZXJ2aWNlIHtcclxuICAgIHByaXZhdGUgY29uZmlnID0ge1xyXG4gICAgICAgIHJvb3RJZDogJycsXHJcbiAgICAgICAgZm9ybUlkOiAnJyxcclxuICAgICAgICBtb2RlOiAwXHJcbiAgICB9IGFzIEZGaWxlVXBsb2FkQWRhcHRVbmlmaWxlQ29uZmlnO1xyXG4gICAgXHJcbiAgICBjb25zdHJ1Y3RvcihAT3B0aW9uYWwoKSBASW5qZWN0KEZGaWxlVXBsb2FkQWRhcHRVbmlmaWxlQ29uZmlnVG9rZW4pIGV4Q29uZmlnOiBGRmlsZVVwbG9hZEFkYXB0VW5pZmlsZUNvbmZpZykge1xyXG4gICAgICAgIGlmIChleENvbmZpZykge1xyXG4gICAgICAgICAgICBPYmplY3QuYXNzaWduKHRoaXMuY29uZmlnLCBleENvbmZpZyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiDojrflj5Zjb25maWflsZ7mgKfnmoTlgLxcclxuICAgICAqL1xyXG4gICAgZ2V0Q29uZmlnKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmNvbmZpZztcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICog6K6+572uY29uZmln55qE5bGe5oCn5YC8XHJcbiAgICAgKiBAcGFyYW0ga2V5IFxyXG4gICAgICogQHBhcmFtIHZhbHVlIFxyXG4gICAgICovXHJcbiAgICBzZXRDb25maWcoa2V5LCB2YWx1ZSkge1xyXG4gICAgICAgIHRoaXMuY29uZmlnW2tleV0gPSB2YWx1ZTtcclxuICAgIH1cclxufTsiXX0=