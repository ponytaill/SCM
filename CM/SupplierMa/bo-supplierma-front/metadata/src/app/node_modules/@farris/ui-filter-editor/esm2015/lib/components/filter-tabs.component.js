/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*
 * @Author: 疯狂秀才(Lucas Huang)
 * @Date: 2019-07-10 11:44:49
 * @LastEditors: 疯狂秀才(Lucas Huang)
 * @LastEditTime: 2019-11-30 10:18:04
 * @QQ: 1055818239
 * @Version: v0.0.1
 */
import { Component, EventEmitter, Output, Input } from '@angular/core';
export class FilterTabsComponent {
    constructor() {
        this.columns = [];
        this.conditions = [];
        this.showCode = false;
        this.showSql = false;
        this.fieldEditor = { type: 'select' };
        this.selectTabChange = new EventEmitter();
        this.enableExpress = false;
        this.enableFrontExpress = false;
        this.showExpress = new EventEmitter();
        this.currentTabIndex = 0;
    }
    /**
     * @return {?}
     */
    ngOnInit() { }
    /**
     * @param {?} index
     * @return {?}
     */
    showTab(index) {
        this.currentTabIndex = index;
        this.selectTabChange.emit(index);
    }
    /**
     * @param {?} $event
     * @return {?}
     */
    showExpressDialog($event) {
        this.showExpress.emit($event);
    }
}
FilterTabsComponent.decorators = [
    { type: Component, args: [{
                selector: 'filter-tabs',
                template: `
    <ul class="nav nav-tabs" style="min-height: 38px">
        <li class="nav-item">
            <a class="nav-link" [class.active]="currentTabIndex === 0"  (click)="showTab(0)">{{ 'filterEditor.designTab' | locale }}</a>
        </li>
        <li class="nav-item" *ngIf="showCode">
            <a class="nav-link" [class.active]="currentTabIndex === 1" (click)="showTab(1)">{{ 'filterEditor.jsonTab' | locale }}</a>
        </li>
        <li class="nav-item" *ngIf="showSql">
            <a class="nav-link" [class.active]="currentTabIndex === 2" (click)="showTab(2)">{{ 'filterEditor.sqlTab' | locale }}</a>
        </li>
    </ul>

    <ng-container *ngIf="currentTabIndex === 0">
        <filter-grid style="overflow: hidden;"
          [enableExpress]="enableExpress" [enableFrontExpress]="enableFrontExpress"
          class="d-flex flex-column flex-fill"  [fieldEditor]="fieldEditor"
          [conditions]="conditions" [columns]="columns" (showExpress)="showExpressDialog($event)"></filter-grid>
    </ng-container>
    <ng-container *ngIf="currentTabIndex === 1 && showCode">
        <filter-code [height]="height" [conditions]="conditions"></filter-code>
    </ng-container>
    <ng-container *ngIf="currentTabIndex === 2 && showSql">
        <filter-sql [height]="height" [conditions]="conditions"></filter-sql>
    </ng-container>

    `,
                styles: [`.nav-item { cursor: default;}
        .nav-item a.active {font-weight: bold;}
        `]
            }] }
];
/** @nocollapse */
FilterTabsComponent.ctorParameters = () => [];
FilterTabsComponent.propDecorators = {
    columns: [{ type: Input }],
    conditions: [{ type: Input }],
    height: [{ type: Input }],
    showCode: [{ type: Input }],
    showSql: [{ type: Input }],
    fieldEditor: [{ type: Input }],
    selectTabChange: [{ type: Output }],
    enableExpress: [{ type: Input }],
    enableFrontExpress: [{ type: Input }],
    showExpress: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    FilterTabsComponent.prototype.columns;
    /** @type {?} */
    FilterTabsComponent.prototype.conditions;
    /** @type {?} */
    FilterTabsComponent.prototype.height;
    /** @type {?} */
    FilterTabsComponent.prototype.showCode;
    /** @type {?} */
    FilterTabsComponent.prototype.showSql;
    /** @type {?} */
    FilterTabsComponent.prototype.fieldEditor;
    /** @type {?} */
    FilterTabsComponent.prototype.selectTabChange;
    /** @type {?} */
    FilterTabsComponent.prototype.enableExpress;
    /** @type {?} */
    FilterTabsComponent.prototype.enableFrontExpress;
    /** @type {?} */
    FilterTabsComponent.prototype.showExpress;
    /** @type {?} */
    FilterTabsComponent.prototype.currentTabIndex;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsdGVyLXRhYnMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy91aS1maWx0ZXItZWRpdG9yLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvZmlsdGVyLXRhYnMuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQVFBLE9BQU8sRUFBRSxTQUFTLEVBQXVCLFlBQVksRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBdUM1RixNQUFNLE9BQU8sbUJBQW1CO0lBZTVCO1FBYlMsWUFBTyxHQUFHLEVBQUUsQ0FBQztRQUNiLGVBQVUsR0FBc0IsRUFBRSxDQUFDO1FBRW5DLGFBQVEsR0FBRyxLQUFLLENBQUM7UUFDakIsWUFBTyxHQUFHLEtBQUssQ0FBQztRQUNoQixnQkFBVyxHQUFHLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBQyxDQUFDO1FBQy9CLG9CQUFlLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUN0QyxrQkFBYSxHQUFHLEtBQUssQ0FBQztRQUN0Qix1QkFBa0IsR0FBRyxLQUFLLENBQUM7UUFDMUIsZ0JBQVcsR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO1FBRTNDLG9CQUFlLEdBQUcsQ0FBQyxDQUFDO0lBRUosQ0FBQzs7OztJQUVqQixRQUFRLEtBQUssQ0FBQzs7Ozs7SUFFZCxPQUFPLENBQUMsS0FBYTtRQUNqQixJQUFJLENBQUMsZUFBZSxHQUFHLEtBQUssQ0FBQztRQUM3QixJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNyQyxDQUFDOzs7OztJQUVELGlCQUFpQixDQUFDLE1BQU07UUFDcEIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDbEMsQ0FBQzs7O1lBOURKLFNBQVMsU0FBQztnQkFDUCxRQUFRLEVBQUUsYUFBYTtnQkFDdkIsUUFBUSxFQUFFOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztLQTBCVDt5QkFFRzs7U0FFQzthQUVSOzs7OztzQkFJSSxLQUFLO3lCQUNMLEtBQUs7cUJBQ0wsS0FBSzt1QkFDTCxLQUFLO3NCQUNMLEtBQUs7MEJBQ0wsS0FBSzs4QkFDTCxNQUFNOzRCQUNOLEtBQUs7aUNBQ0wsS0FBSzswQkFDTCxNQUFNOzs7O0lBVFAsc0NBQXNCOztJQUN0Qix5Q0FBNEM7O0lBQzVDLHFDQUF3Qjs7SUFDeEIsdUNBQTBCOztJQUMxQixzQ0FBeUI7O0lBQ3pCLDBDQUF5Qzs7SUFDekMsOENBQStDOztJQUMvQyw0Q0FBK0I7O0lBQy9CLGlEQUFvQzs7SUFDcEMsMENBQTJDOztJQUUzQyw4Q0FBb0IiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxyXG4gKiBAQXV0aG9yOiDnlq/ni4Lnp4DmiY0oTHVjYXMgSHVhbmcpXHJcbiAqIEBEYXRlOiAyMDE5LTA3LTEwIDExOjQ0OjQ5XHJcbiAqIEBMYXN0RWRpdG9yczog55av54uC56eA5omNKEx1Y2FzIEh1YW5nKVxyXG4gKiBATGFzdEVkaXRUaW1lOiAyMDE5LTExLTMwIDEwOjE4OjA0XHJcbiAqIEBRUTogMTA1NTgxODIzOVxyXG4gKiBAVmVyc2lvbjogdjAuMC4xXHJcbiAqL1xyXG5pbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgSG9zdEJpbmRpbmcsIEV2ZW50RW1pdHRlciwgT3V0cHV0LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBGaWx0ZXJDb25kaXRpb24gfSBmcm9tICdAZmFycmlzL3VpLWNvbW1vbi90eXBlcyc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICAgIHNlbGVjdG9yOiAnZmlsdGVyLXRhYnMnLFxyXG4gICAgdGVtcGxhdGU6IGBcclxuICAgIDx1bCBjbGFzcz1cIm5hdiBuYXYtdGFic1wiIHN0eWxlPVwibWluLWhlaWdodDogMzhweFwiPlxyXG4gICAgICAgIDxsaSBjbGFzcz1cIm5hdi1pdGVtXCI+XHJcbiAgICAgICAgICAgIDxhIGNsYXNzPVwibmF2LWxpbmtcIiBbY2xhc3MuYWN0aXZlXT1cImN1cnJlbnRUYWJJbmRleCA9PT0gMFwiICAoY2xpY2spPVwic2hvd1RhYigwKVwiPnt7ICdmaWx0ZXJFZGl0b3IuZGVzaWduVGFiJyB8IGxvY2FsZSB9fTwvYT5cclxuICAgICAgICA8L2xpPlxyXG4gICAgICAgIDxsaSBjbGFzcz1cIm5hdi1pdGVtXCIgKm5nSWY9XCJzaG93Q29kZVwiPlxyXG4gICAgICAgICAgICA8YSBjbGFzcz1cIm5hdi1saW5rXCIgW2NsYXNzLmFjdGl2ZV09XCJjdXJyZW50VGFiSW5kZXggPT09IDFcIiAoY2xpY2spPVwic2hvd1RhYigxKVwiPnt7ICdmaWx0ZXJFZGl0b3IuanNvblRhYicgfCBsb2NhbGUgfX08L2E+XHJcbiAgICAgICAgPC9saT5cclxuICAgICAgICA8bGkgY2xhc3M9XCJuYXYtaXRlbVwiICpuZ0lmPVwic2hvd1NxbFwiPlxyXG4gICAgICAgICAgICA8YSBjbGFzcz1cIm5hdi1saW5rXCIgW2NsYXNzLmFjdGl2ZV09XCJjdXJyZW50VGFiSW5kZXggPT09IDJcIiAoY2xpY2spPVwic2hvd1RhYigyKVwiPnt7ICdmaWx0ZXJFZGl0b3Iuc3FsVGFiJyB8IGxvY2FsZSB9fTwvYT5cclxuICAgICAgICA8L2xpPlxyXG4gICAgPC91bD5cclxuXHJcbiAgICA8bmctY29udGFpbmVyICpuZ0lmPVwiY3VycmVudFRhYkluZGV4ID09PSAwXCI+XHJcbiAgICAgICAgPGZpbHRlci1ncmlkIHN0eWxlPVwib3ZlcmZsb3c6IGhpZGRlbjtcIlxyXG4gICAgICAgICAgW2VuYWJsZUV4cHJlc3NdPVwiZW5hYmxlRXhwcmVzc1wiIFtlbmFibGVGcm9udEV4cHJlc3NdPVwiZW5hYmxlRnJvbnRFeHByZXNzXCJcclxuICAgICAgICAgIGNsYXNzPVwiZC1mbGV4IGZsZXgtY29sdW1uIGZsZXgtZmlsbFwiICBbZmllbGRFZGl0b3JdPVwiZmllbGRFZGl0b3JcIlxyXG4gICAgICAgICAgW2NvbmRpdGlvbnNdPVwiY29uZGl0aW9uc1wiIFtjb2x1bW5zXT1cImNvbHVtbnNcIiAoc2hvd0V4cHJlc3MpPVwic2hvd0V4cHJlc3NEaWFsb2coJGV2ZW50KVwiPjwvZmlsdGVyLWdyaWQ+XHJcbiAgICA8L25nLWNvbnRhaW5lcj5cclxuICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCJjdXJyZW50VGFiSW5kZXggPT09IDEgJiYgc2hvd0NvZGVcIj5cclxuICAgICAgICA8ZmlsdGVyLWNvZGUgW2hlaWdodF09XCJoZWlnaHRcIiBbY29uZGl0aW9uc109XCJjb25kaXRpb25zXCI+PC9maWx0ZXItY29kZT5cclxuICAgIDwvbmctY29udGFpbmVyPlxyXG4gICAgPG5nLWNvbnRhaW5lciAqbmdJZj1cImN1cnJlbnRUYWJJbmRleCA9PT0gMiAmJiBzaG93U3FsXCI+XHJcbiAgICAgICAgPGZpbHRlci1zcWwgW2hlaWdodF09XCJoZWlnaHRcIiBbY29uZGl0aW9uc109XCJjb25kaXRpb25zXCI+PC9maWx0ZXItc3FsPlxyXG4gICAgPC9uZy1jb250YWluZXI+XHJcblxyXG4gICAgYCxcclxuICAgIHN0eWxlczogW1xyXG4gICAgICAgIGAubmF2LWl0ZW0geyBjdXJzb3I6IGRlZmF1bHQ7fVxyXG4gICAgICAgIC5uYXYtaXRlbSBhLmFjdGl2ZSB7Zm9udC13ZWlnaHQ6IGJvbGQ7fVxyXG4gICAgICAgIGBcclxuICAgIF1cclxufSlcclxuXHJcbmV4cG9ydCBjbGFzcyBGaWx0ZXJUYWJzQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuXHJcbiAgICBASW5wdXQoKSBjb2x1bW5zID0gW107XHJcbiAgICBASW5wdXQoKSBjb25kaXRpb25zOiBGaWx0ZXJDb25kaXRpb25bXSA9IFtdO1xyXG4gICAgQElucHV0KCkgaGVpZ2h0OiBudW1iZXI7XHJcbiAgICBASW5wdXQoKSBzaG93Q29kZSA9IGZhbHNlO1xyXG4gICAgQElucHV0KCkgc2hvd1NxbCA9IGZhbHNlO1xyXG4gICAgQElucHV0KCkgZmllbGRFZGl0b3IgPSB7IHR5cGU6ICdzZWxlY3QnfTtcclxuICAgIEBPdXRwdXQoKSBzZWxlY3RUYWJDaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XHJcbiAgICBASW5wdXQoKSBlbmFibGVFeHByZXNzID0gZmFsc2U7XHJcbiAgICBASW5wdXQoKSBlbmFibGVGcm9udEV4cHJlc3MgPSBmYWxzZTtcclxuICAgIEBPdXRwdXQoKSBzaG93RXhwcmVzcyA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuXHJcbiAgICBjdXJyZW50VGFiSW5kZXggPSAwO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKCkgeyB9XHJcblxyXG4gICAgbmdPbkluaXQoKSB7IH1cclxuXHJcbiAgICBzaG93VGFiKGluZGV4OiBudW1iZXIpIHtcclxuICAgICAgICB0aGlzLmN1cnJlbnRUYWJJbmRleCA9IGluZGV4O1xyXG4gICAgICAgIHRoaXMuc2VsZWN0VGFiQ2hhbmdlLmVtaXQoaW5kZXgpO1xyXG4gICAgfVxyXG5cclxuICAgIHNob3dFeHByZXNzRGlhbG9nKCRldmVudCkge1xyXG4gICAgICAgIHRoaXMuc2hvd0V4cHJlc3MuZW1pdCgkZXZlbnQpO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==