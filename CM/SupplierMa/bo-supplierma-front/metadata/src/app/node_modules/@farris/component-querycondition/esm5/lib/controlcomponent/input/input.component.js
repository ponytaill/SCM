/**
 * @fileoverview added by tsickle
 * Generated from: lib/controlcomponent/input/input.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, EventEmitter, Output } from '@angular/core';
import { SolutionService } from '../../service/solution.service';
var InputComponent = /** @class */ (function () {
    function InputComponent(solutionService) {
        this.solutionService = solutionService;
        this.maxLength = undefined;
        this.hasError = false;
        this.conditionChange = new EventEmitter();
    }
    Object.defineProperty(InputComponent.prototype, "item", {
        get: /**
         * @return {?}
         */
        function () {
            return this.constructTextItem(this._inputItem);
        },
        set: /**
         * @param {?} textItem
         * @return {?}
         */
        function (textItem) {
            this._inputItem = textItem;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} textItem
     * @return {?}
     */
    InputComponent.prototype.constructTextItem = /**
     * @param {?} textItem
     * @return {?}
     */
    function (textItem) {
        /** @type {?} */
        var textValueObj = (/** @type {?} */ (textItem.value));
        // textValueObj.value = textValueObj.value && textValueObj.value.trim();
        textValueObj.value = textValueObj.value && textValueObj.value;
        textItem.value = textValueObj;
        return textItem;
    };
    /**
     * @return {?}
     */
    InputComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.testId = this.solutionService.getGuid();
        this.placeholder = (this.item.placeHolder) ? (this.item.placeHolder) : (this.item.control.placeholder);
    };
    /**
     * @param {?} field
     * @return {?}
     */
    InputComponent.prototype.getConditionItemTitle = /**
     * @param {?} field
     * @return {?}
     */
    function (field) {
        return this.solutionService.getConditionItemTitle(field);
    };
    /**
     * @return {?}
     */
    InputComponent.prototype.onBlur = /**
     * @return {?}
     */
    function () {
        if (this.hasError) {
            return;
        }
        this.conditionChange.emit();
    };
    /**
     * 是否有错误信息
     */
    /**
     * 是否有错误信息
     * @param {?} textControl
     * @return {?}
     */
    InputComponent.prototype.hasErrorInfo = /**
     * 是否有错误信息
     * @param {?} textControl
     * @return {?}
     */
    function (textControl) {
        if (textControl.invalid && (textControl.dirty || textControl.touched) && textControl.errors.maxlength) {
            this.hasError = true;
            return true;
        }
        this.hasError = false;
        return false;
    };
    InputComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-solution-input',
                    template: "<div class=\"farris-group-wrap\" id=\"{{item.id}}\">\r\n    <div class=\"form-group farris-form-group  common-group\" [ngClass]=\"{'q-state-readonly':item.readonly}\">\r\n        <label class=\"col-form-label\" *ngIf=\"item\" title=\"{{getConditionItemTitle(item)}}\">\r\n            <span class=\"farris-label-info text-danger\" *ngIf=\"item.control.isRequired()\">*</span>\r\n            <span class=\"farris-label-text\">{{item.fieldName}}</span>\r\n        </label>\r\n        <div class=\"farris-input-wrap\">\r\n            <input-group [(ngModel)]=\"item.value.value\" name=\"{{item.fieldName}}\" id=\"{{testId}}\"\r\n                (blurHandle)=\"onBlur()\" [placeholder]=\"placeholder\" [readonly]=\"item.readonly\" maxlength=\"maxLength\"\r\n                #textControl=\"ngModel\">\r\n            </input-group>\r\n            <ng-container *ngIf=\"maxLength\">\r\n                <div class=\"farris-feedback\" [class.f-state-invalid]=\"hasErrorInfo(textControl)\">\r\n                    <span class=\"f-feedback-message\">\u8BF7\u8F93\u5165\u6709\u6548\u683C\u5F0F</span>\r\n                </div>\r\n            </ng-container>\r\n        </div>\r\n    </div>\r\n</div>"
                }] }
    ];
    /** @nocollapse */
    InputComponent.ctorParameters = function () { return [
        { type: SolutionService }
    ]; };
    InputComponent.propDecorators = {
        item: [{ type: Input }],
        conditionChange: [{ type: Output, args: ['conditionChange',] }]
    };
    return InputComponent;
}());
export { InputComponent };
if (false) {
    /**
     * QueryCondition类型
     * @type {?}
     */
    InputComponent.prototype._inputItem;
    /** @type {?} */
    InputComponent.prototype.placeholder;
    /** @type {?} */
    InputComponent.prototype.maxLength;
    /** @type {?} */
    InputComponent.prototype.testId;
    /** @type {?} */
    InputComponent.prototype.hasError;
    /** @type {?} */
    InputComponent.prototype.conditionChange;
    /**
     * @type {?}
     * @private
     */
    InputComponent.prototype.solutionService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy9jb21wb25lbnQtcXVlcnljb25kaXRpb24vIiwic291cmNlcyI6WyJsaWIvY29udHJvbGNvbXBvbmVudC9pbnB1dC9pbnB1dC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBcUIsWUFBWSxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUUxRixPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFJakU7SUFtQ0ksd0JBQW9CLGVBQWdDO1FBQWhDLG9CQUFlLEdBQWYsZUFBZSxDQUFpQjtRQXRCcEQsY0FBUyxHQUFHLFNBQVMsQ0FBQztRQVV0QixhQUFRLEdBQUcsS0FBSyxDQUFDO1FBRVUsb0JBQWUsR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO0lBVVIsQ0FBQztJQXBCekQsc0JBQ0ksZ0NBQUk7Ozs7UUFHUjtZQUNJLE9BQU8sSUFBSSxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUNuRCxDQUFDOzs7OztRQU5ELFVBQ1MsUUFBYTtZQUNsQixJQUFJLENBQUMsVUFBVSxHQUFHLFFBQVEsQ0FBQztRQUMvQixDQUFDOzs7T0FBQTs7Ozs7SUFTRCwwQ0FBaUI7Ozs7SUFBakIsVUFBa0IsUUFBd0I7O1lBQ2hDLFlBQVksR0FBRyxtQkFBQSxRQUFRLENBQUMsS0FBSyxFQUFhO1FBQ2hELHdFQUF3RTtRQUN4RSxZQUFZLENBQUMsS0FBSyxHQUFHLFlBQVksQ0FBQyxLQUFLLElBQUksWUFBWSxDQUFDLEtBQUssQ0FBQztRQUM5RCxRQUFRLENBQUMsS0FBSyxHQUFHLFlBQVksQ0FBQztRQUM5QixPQUFPLFFBQVEsQ0FBQztJQUNwQixDQUFDOzs7O0lBSUQsaUNBQVE7OztJQUFSO1FBQ0ksSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQzdDLElBQUksQ0FBQyxXQUFXLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDM0csQ0FBQzs7Ozs7SUFFRCw4Q0FBcUI7Ozs7SUFBckIsVUFBc0IsS0FBcUI7UUFDdkMsT0FBTyxJQUFJLENBQUMsZUFBZSxDQUFDLHFCQUFxQixDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzdELENBQUM7Ozs7SUFFRCwrQkFBTTs7O0lBQU47UUFDSSxJQUFHLElBQUksQ0FBQyxRQUFRLEVBQUM7WUFDYixPQUFPO1NBQ1Y7UUFDRCxJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ2hDLENBQUM7SUFDRDs7T0FFRzs7Ozs7O0lBQ0gscUNBQVk7Ozs7O0lBQVosVUFBYSxXQUFvQjtRQUM3QixJQUFJLFdBQVcsQ0FBQyxPQUFPLElBQUksQ0FBQyxXQUFXLENBQUMsS0FBSyxJQUFJLFdBQVcsQ0FBQyxPQUFPLENBQUMsSUFBSSxXQUFXLENBQUMsTUFBTSxDQUFDLFNBQVMsRUFBRTtZQUNuRyxJQUFJLENBQUMsUUFBUSxHQUFDLElBQUksQ0FBQztZQUNuQixPQUFPLElBQUksQ0FBQztTQUNmO1FBQ0QsSUFBSSxDQUFDLFFBQVEsR0FBQyxLQUFLLENBQUM7UUFDcEIsT0FBTyxLQUFLLENBQUM7SUFDakIsQ0FBQzs7Z0JBOURKLFNBQVMsU0FBQztvQkFDUCxRQUFRLEVBQUUsb0JBQW9CO29CQUM5Qiw4cUNBQXFDO2lCQUN4Qzs7OztnQkFQUSxlQUFlOzs7dUJBbUJuQixLQUFLO2tDQVVMLE1BQU0sU0FBQyxpQkFBaUI7O0lBc0M3QixxQkFBQztDQUFBLEFBL0RELElBK0RDO1NBMURZLGNBQWM7Ozs7OztJQUl2QixvQ0FBMkI7O0lBRTNCLHFDQUFvQjs7SUFFcEIsbUNBQXNCOztJQVN0QixnQ0FBZTs7SUFDZixrQ0FBaUI7O0lBRWpCLHlDQUFnRTs7Ozs7SUFVcEQseUNBQXdDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25Jbml0LCBPbkNoYW5nZXMsIEV2ZW50RW1pdHRlciwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFF1ZXJ5Q29uZGl0aW9uIH0gZnJvbSAnLi4vLi4vZW50aXR5L3F1ZXJ5Y29uZGl0aW9uJztcclxuaW1wb3J0IHsgU29sdXRpb25TZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2VydmljZS9zb2x1dGlvbi5zZXJ2aWNlJztcclxuaW1wb3J0IHsgVGV4dFZhbHVlIH0gZnJvbSAnLi4vLi4vZW50aXR5L2NvbmRpdGlvbnZhbHVlL3RleHR2YWx1ZSc7XHJcbmltcG9ydCB7IE5nTW9kZWwgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICAgIHNlbGVjdG9yOiAnYXBwLXNvbHV0aW9uLWlucHV0JyxcclxuICAgIHRlbXBsYXRlVXJsOiAnLi9pbnB1dC5jb21wb25lbnQuaHRtbCcsXHJcbn0pXHJcblxyXG5leHBvcnQgY2xhc3MgSW5wdXRDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG4gICAgLyoqXHJcbiAgICAgKiBRdWVyeUNvbmRpdGlvbuexu+Wei1xyXG4gICAgICovXHJcbiAgICBfaW5wdXRJdGVtOiBRdWVyeUNvbmRpdGlvbjtcclxuXHJcbiAgICBwbGFjZWhvbGRlcjogc3RyaW5nO1xyXG5cclxuICAgIG1heExlbmd0aCA9IHVuZGVmaW5lZDtcclxuXHJcbiAgICBASW5wdXQoKVxyXG4gICAgc2V0IGl0ZW0odGV4dEl0ZW06IGFueSkge1xyXG4gICAgICAgIHRoaXMuX2lucHV0SXRlbSA9IHRleHRJdGVtO1xyXG4gICAgfVxyXG4gICAgZ2V0IGl0ZW0oKTogYW55IHtcclxuICAgICAgICByZXR1cm4gdGhpcy5jb25zdHJ1Y3RUZXh0SXRlbSh0aGlzLl9pbnB1dEl0ZW0pO1xyXG4gICAgfVxyXG4gICAgdGVzdElkOiBzdHJpbmc7XHJcbiAgICBoYXNFcnJvciA9IGZhbHNlO1xyXG5cclxuICAgIEBPdXRwdXQoJ2NvbmRpdGlvbkNoYW5nZScpIGNvbmRpdGlvbkNoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuXHJcbiAgICBjb25zdHJ1Y3RUZXh0SXRlbSh0ZXh0SXRlbTogUXVlcnlDb25kaXRpb24pOiBRdWVyeUNvbmRpdGlvbiB7XHJcbiAgICAgICAgY29uc3QgdGV4dFZhbHVlT2JqID0gdGV4dEl0ZW0udmFsdWUgYXMgVGV4dFZhbHVlO1xyXG4gICAgICAgIC8vIHRleHRWYWx1ZU9iai52YWx1ZSA9IHRleHRWYWx1ZU9iai52YWx1ZSAmJiB0ZXh0VmFsdWVPYmoudmFsdWUudHJpbSgpO1xyXG4gICAgICAgIHRleHRWYWx1ZU9iai52YWx1ZSA9IHRleHRWYWx1ZU9iai52YWx1ZSAmJiB0ZXh0VmFsdWVPYmoudmFsdWU7XHJcbiAgICAgICAgdGV4dEl0ZW0udmFsdWUgPSB0ZXh0VmFsdWVPYmo7XHJcbiAgICAgICAgcmV0dXJuIHRleHRJdGVtO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgc29sdXRpb25TZXJ2aWNlOiBTb2x1dGlvblNlcnZpY2UpIHsgfVxyXG5cclxuICAgIG5nT25Jbml0KCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMudGVzdElkID0gdGhpcy5zb2x1dGlvblNlcnZpY2UuZ2V0R3VpZCgpO1xyXG4gICAgICAgIHRoaXMucGxhY2Vob2xkZXIgPSAodGhpcy5pdGVtLnBsYWNlSG9sZGVyKSA/ICh0aGlzLml0ZW0ucGxhY2VIb2xkZXIpIDogKHRoaXMuaXRlbS5jb250cm9sLnBsYWNlaG9sZGVyKTtcclxuICAgIH1cclxuXHJcbiAgICBnZXRDb25kaXRpb25JdGVtVGl0bGUoZmllbGQ6IFF1ZXJ5Q29uZGl0aW9uKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuc29sdXRpb25TZXJ2aWNlLmdldENvbmRpdGlvbkl0ZW1UaXRsZShmaWVsZCk7XHJcbiAgICB9XHJcblxyXG4gICAgb25CbHVyKCkge1xyXG4gICAgICAgIGlmKHRoaXMuaGFzRXJyb3Ipe1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuY29uZGl0aW9uQ2hhbmdlLmVtaXQoKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICog5piv5ZCm5pyJ6ZSZ6K+v5L+h5oGvXHJcbiAgICAgKi9cclxuICAgIGhhc0Vycm9ySW5mbyh0ZXh0Q29udHJvbDogTmdNb2RlbCkge1xyXG4gICAgICAgIGlmICh0ZXh0Q29udHJvbC5pbnZhbGlkICYmICh0ZXh0Q29udHJvbC5kaXJ0eSB8fCB0ZXh0Q29udHJvbC50b3VjaGVkKSAmJiB0ZXh0Q29udHJvbC5lcnJvcnMubWF4bGVuZ3RoKSB7XHJcbiAgICAgICAgICAgIHRoaXMuaGFzRXJyb3I9dHJ1ZTtcclxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuaGFzRXJyb3I9ZmFsc2U7XHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfVxyXG59Il19