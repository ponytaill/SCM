import { FieldMetadataUtil } from '../entity/index';
// tslint:disable: no-bitwise
var PaginationManager = /** @class */ (function () {
    function PaginationManager(entityType, paginationConfig) {
        this.entityType = entityType;
        this.paginationConfig = paginationConfig;
        if (this.paginationConfig === null || this.paginationConfig === undefined) {
            this.paginationConfig = this.getNgListProperties();
        }
        // 兼容老表单，将之前的主表分页信息展开到分页配置根中
        this.expandMainEntityConfig();
        this.deleteMainEntityConfig();
    }
    /**
     * 主表分页信息展开到分页配置根中
     */
    PaginationManager.prototype.expandMainEntityConfig = function () {
        var entityName = this.entityType.name;
        if (this.paginationConfig.hasOwnProperty(entityName)) {
            var entityConfig = this.paginationConfig[entityName];
            this.paginationConfig = Object.assign(this.paginationConfig, entityConfig);
        }
    };
    /**
     * 删除主表实体配置信息
     */
    PaginationManager.prototype.deleteMainEntityConfig = function () {
        delete this.paginationConfig[this.entityType.name];
    };
    Object.defineProperty(PaginationManager.prototype, "pagination", {
        /**
         * 获取分页信息
         */
        get: function () {
            return this.paginationConfig;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 获取分页信息
     * @param path 路径
     * @param defaultValue 默认值
     */
    PaginationManager.prototype.getPaginationConfigByPath = function (path, defaultValue) {
        if (!path || path === '/') {
            return this.paginationConfig;
        }
        if (typeof path !== 'string') {
            throw new Error('路径必须为字符串！');
        }
        path = path.substring(1);
        var paths = path.split('/').filter(function (item) { return !!item && item.trim().length > 0; });
        var config = this.paginationConfig;
        paths.forEach(function (item) {
            if (config && config.hasOwnProperty(item)) {
                config = config[item];
            }
            else {
                config = null;
            }
        });
        return !!config ? config : typeof defaultValue !== 'undefined' ? defaultValue : undefined;
    };
    /**
     * 设置分页信息
     * @param path 路径
     * @param value 值
     */
    PaginationManager.prototype.setPaginationConfigByPath = function (path, value) {
        if (!Array.isArray(path)) {
            path = path.toString().match(/[^/[\]]+/g) || [];
        }
        path.slice(0, -1).reduce(function (prev, current, index) {
            return Object(prev[current]) === prev[current]
                ? prev[current]
                : prev[current] = Math.abs(path[index + 1]) >> 0 === +path[index + 1]
                    ? []
                    : {};
        }, this.paginationConfig)[path[path.length - 1]] = value;
        return this.paginationConfig;
    };
    /**
     * 递归获取当前实体的所有NgList属性
     * @param defaultPageSize defaultPageSize
     */
    PaginationManager.prototype.getNgListProperties = function (defaultPageSize) {
        if (defaultPageSize === void 0) { defaultPageSize = 0; }
        var getChilds = function (objectType) {
            var listProperties = FieldMetadataUtil.getNgList(objectType);
            var result = {};
            if (Object.keys(listProperties).length < 1) {
                return result;
            }
            Object.keys(listProperties).forEach(function (prop) {
                var itemTypeName = listProperties[prop].dataField;
                // 去掉尾部的s
                if (itemTypeName.endsWith('s')) {
                    itemTypeName = itemTypeName.substring(0, itemTypeName.length - 1);
                }
                result[itemTypeName] = {
                    pageSize: defaultPageSize
                };
                var child = getChilds(listProperties[prop].type);
                if (child !== null && Object.keys(child).length > 0) {
                    result = Object.assign({}, result, child);
                }
            });
            return result;
        };
        var childs = getChilds(this.entityType);
        var root = Object.assign({}, { pageSize: defaultPageSize }, childs);
        return root;
    };
    return PaginationManager;
}());
export { PaginationManager };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFnaW5hdGlvbl9tYW5hZ2VyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy9tb2JpbGUtZGV2a2l0LyIsInNvdXJjZXMiOlsibGliL3JlcG9zaXRvcnkvcGFnaW5hdGlvbl9tYW5hZ2VyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBVSxpQkFBaUIsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQzVELDZCQUE2QjtBQUU3QjtJQUVJLDJCQUFvQixVQUFtQixFQUFVLGdCQUFxQjtRQUFsRCxlQUFVLEdBQVYsVUFBVSxDQUFTO1FBQVUscUJBQWdCLEdBQWhCLGdCQUFnQixDQUFLO1FBQ2xFLElBQUksSUFBSSxDQUFDLGdCQUFnQixLQUFLLElBQUksSUFBSSxJQUFJLENBQUMsZ0JBQWdCLEtBQUssU0FBUyxFQUFFO1lBQ3ZFLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxJQUFJLENBQUMsbUJBQW1CLEVBQUUsQ0FBQztTQUN0RDtRQUNELDRCQUE0QjtRQUM1QixJQUFJLENBQUMsc0JBQXNCLEVBQUUsQ0FBQztRQUM5QixJQUFJLENBQUMsc0JBQXNCLEVBQUUsQ0FBQztJQUNsQyxDQUFDO0lBQ0Q7O09BRUc7SUFDSyxrREFBc0IsR0FBOUI7UUFDSSxJQUFNLFVBQVUsR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQztRQUN4QyxJQUFJLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxjQUFjLENBQUMsVUFBVSxDQUFDLEVBQUU7WUFDbEQsSUFBTSxZQUFZLEdBQUcsSUFBSSxDQUFDLGdCQUFnQixDQUFDLFVBQVUsQ0FBQyxDQUFDO1lBQ3ZELElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsRUFBRSxZQUFZLENBQUMsQ0FBQztTQUM5RTtJQUNMLENBQUM7SUFDRDs7T0FFRztJQUNLLGtEQUFzQixHQUE5QjtRQUNJLE9BQU8sSUFBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FB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QUFNLENBQUMsQ0FBQztRQUN0RSxPQUFPLElBQUksQ0FBQztJQUNoQixDQUFDO0lBRUwsd0JBQUM7QUFBRCxDQUFDLEFBN0dELElBNkdDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVHlwZSAgfSBmcm9tICcuLi9jb3JlL2luZGV4JztcclxuaW1wb3J0IHsgRW50aXR5LCBGaWVsZE1ldGFkYXRhVXRpbCB9IGZyb20gJy4uL2VudGl0eS9pbmRleCc7XHJcbi8vIHRzbGludDpkaXNhYmxlOiBuby1iaXR3aXNlXHJcblxyXG5leHBvcnQgY2xhc3MgUGFnaW5hdGlvbk1hbmFnZXI8VCBleHRlbmRzIEVudGl0eT4ge1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgZW50aXR5VHlwZTogVHlwZTxUPiwgcHJpdmF0ZSBwYWdpbmF0aW9uQ29uZmlnOiBhbnkpIHtcclxuICAgICAgICBpZiAodGhpcy5wYWdpbmF0aW9uQ29uZmlnID09PSBudWxsIHx8IHRoaXMucGFnaW5hdGlvbkNvbmZpZyA9PT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICAgIHRoaXMucGFnaW5hdGlvbkNvbmZpZyA9IHRoaXMuZ2V0TmdMaXN0UHJvcGVydGllcygpO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvLyDlhbzlrrnogIHooajljZXvvIzlsIbkuYvliY3nmoTkuLvooajliIbpobXkv6Hmga/lsZXlvIDliLDliIbpobXphY3nva7moLnkuK1cclxuICAgICAgICB0aGlzLmV4cGFuZE1haW5FbnRpdHlDb25maWcoKTtcclxuICAgICAgICB0aGlzLmRlbGV0ZU1haW5FbnRpdHlDb25maWcoKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICog5Li76KGo5YiG6aG15L+h5oGv5bGV5byA5Yiw5YiG6aG16YWN572u5qC55LitXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgZXhwYW5kTWFpbkVudGl0eUNvbmZpZygpIHtcclxuICAgICAgICBjb25zdCBlbnRpdHlOYW1lID0gdGhpcy5lbnRpdHlUeXBlLm5hbWU7XHJcbiAgICAgICAgaWYgKHRoaXMucGFnaW5hdGlvbkNvbmZpZy5oYXNPd25Qcm9wZXJ0eShlbnRpdHlOYW1lKSkge1xyXG4gICAgICAgICAgICBjb25zdCBlbnRpdHlDb25maWcgPSB0aGlzLnBhZ2luYXRpb25Db25maWdbZW50aXR5TmFtZV07XHJcbiAgICAgICAgICAgIHRoaXMucGFnaW5hdGlvbkNvbmZpZyA9IE9iamVjdC5hc3NpZ24odGhpcy5wYWdpbmF0aW9uQ29uZmlnLCBlbnRpdHlDb25maWcpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICog5Yig6Zmk5Li76KGo5a6e5L2T6YWN572u5L+h5oGvXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgZGVsZXRlTWFpbkVudGl0eUNvbmZpZygpIHtcclxuICAgICAgICBkZWxldGUgdGhpcy5wYWdpbmF0aW9uQ29uZmlnW3RoaXMuZW50aXR5VHlwZS5uYW1lXTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICog6I635Y+W5YiG6aG15L+h5oGvXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBnZXQgcGFnaW5hdGlvbigpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5wYWdpbmF0aW9uQ29uZmlnO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiDojrflj5bliIbpobXkv6Hmga9cclxuICAgICAqIEBwYXJhbSBwYXRoIOi3r+W+hFxyXG4gICAgICogQHBhcmFtIGRlZmF1bHRWYWx1ZSDpu5jorqTlgLxcclxuICAgICAqL1xyXG4gICAgcHVibGljIGdldFBhZ2luYXRpb25Db25maWdCeVBhdGgocGF0aDogc3RyaW5nLCBkZWZhdWx0VmFsdWU/OiBhbnkpIHtcclxuICAgICAgICBpZiAoIXBhdGggfHwgcGF0aCA9PT0gJy8nKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnBhZ2luYXRpb25Db25maWc7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICh0eXBlb2YgcGF0aCAhPT0gJ3N0cmluZycpIHtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCfot6/lvoTlv4XpobvkuLrlrZfnrKbkuLLvvIEnKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcGF0aCA9IHBhdGguc3Vic3RyaW5nKDEpO1xyXG4gICAgICAgIGNvbnN0IHBhdGhzID0gcGF0aC5zcGxpdCgnLycpLmZpbHRlcihpdGVtID0+ICEhaXRlbSAmJiBpdGVtLnRyaW0oKS5sZW5ndGggPiAwKTtcclxuICAgICAgICBsZXQgY29uZmlnID0gdGhpcy5wYWdpbmF0aW9uQ29uZmlnO1xyXG4gICAgICAgIHBhdGhzLmZvckVhY2goaXRlbSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChjb25maWcgJiYgY29uZmlnLmhhc093blByb3BlcnR5KGl0ZW0pKSB7XHJcbiAgICAgICAgICAgICAgICBjb25maWcgPSBjb25maWdbaXRlbV07XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBjb25maWcgPSBudWxsO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgcmV0dXJuICEhY29uZmlnID8gY29uZmlnIDogdHlwZW9mIGRlZmF1bHRWYWx1ZSAhPT0gJ3VuZGVmaW5lZCcgPyBkZWZhdWx0VmFsdWUgOiB1bmRlZmluZWQ7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIOiuvue9ruWIhumhteS/oeaBr1xyXG4gICAgICogQHBhcmFtIHBhdGgg6Lev5b6EXHJcbiAgICAgKiBAcGFyYW0gdmFsdWUg5YC8XHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBzZXRQYWdpbmF0aW9uQ29uZmlnQnlQYXRoKHBhdGg6IHN0cmluZyB8IEFycmF5PGFueT4sIHZhbHVlOiBhbnkpIHtcclxuICAgICAgICBpZiAoIUFycmF5LmlzQXJyYXkocGF0aCkpIHtcclxuICAgICAgICAgICAgcGF0aCA9IHBhdGgudG9TdHJpbmcoKS5tYXRjaCgvW14vW1xcXV0rL2cpIHx8IFtdO1xyXG4gICAgICAgIH1cclxuICAgICAgICBwYXRoLnNsaWNlKDAsIC0xKS5yZWR1Y2UoKHByZXYsIGN1cnJlbnQsIGluZGV4KSA9PlxyXG4gICAgICAgICAgICBPYmplY3QocHJldltjdXJyZW50XSkgPT09IHByZXZbY3VycmVudF1cclxuICAgICAgICAgICAgICAgID8gcHJldltjdXJyZW50XVxyXG4gICAgICAgICAgICAgICAgOiBwcmV2W2N1cnJlbnRdID0gTWF0aC5hYnMocGF0aFtpbmRleCArIDFdKSA+PiAwID09PSArcGF0aFtpbmRleCArIDFdXHJcbiAgICAgICAgICAgICAgICAgICAgPyBbXVxyXG4gICAgICAgICAgICAgICAgICAgIDoge30sXHJcbiAgICAgICAgICAgIHRoaXMucGFnaW5hdGlvbkNvbmZpZylbcGF0aFtwYXRoLmxlbmd0aCAtIDFdXSA9IHZhbHVlO1xyXG4gICAgICAgIHJldHVybiB0aGlzLnBhZ2luYXRpb25Db25maWc7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDpgJLlvZLojrflj5blvZPliY3lrp7kvZPnmoTmiYDmnIlOZ0xpc3TlsZ7mgKdcclxuICAgICAqIEBwYXJhbSBkZWZhdWx0UGFnZVNpemUgZGVmYXVsdFBhZ2VTaXplXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgZ2V0TmdMaXN0UHJvcGVydGllcyhkZWZhdWx0UGFnZVNpemU6IG51bWJlciA9IDApIHtcclxuXHJcbiAgICAgICAgY29uc3QgZ2V0Q2hpbGRzID0gKG9iamVjdFR5cGU6IFR5cGU8RW50aXR5PikgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCBsaXN0UHJvcGVydGllcyA9IEZpZWxkTWV0YWRhdGFVdGlsLmdldE5nTGlzdChvYmplY3RUeXBlKTtcclxuICAgICAgICAgICAgbGV0IHJlc3VsdCA9IHt9O1xyXG4gICAgICAgICAgICBpZiAoT2JqZWN0LmtleXMobGlzdFByb3BlcnRpZXMpLmxlbmd0aCA8IDEpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIE9iamVjdC5rZXlzKGxpc3RQcm9wZXJ0aWVzKS5mb3JFYWNoKHByb3AgPT4ge1xyXG4gICAgICAgICAgICAgICAgbGV0IGl0ZW1UeXBlTmFtZSA9IGxpc3RQcm9wZXJ0aWVzW3Byb3BdLmRhdGFGaWVsZDtcclxuICAgICAgICAgICAgICAgIC8vIOWOu+aOieWwvumDqOeahHNcclxuICAgICAgICAgICAgICAgIGlmIChpdGVtVHlwZU5hbWUuZW5kc1dpdGgoJ3MnKSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGl0ZW1UeXBlTmFtZSA9IGl0ZW1UeXBlTmFtZS5zdWJzdHJpbmcoMCwgaXRlbVR5cGVOYW1lLmxlbmd0aCAtIDEpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgcmVzdWx0W2l0ZW1UeXBlTmFtZV0gPSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcGFnZVNpemU6IGRlZmF1bHRQYWdlU2l6ZVxyXG4gICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGNoaWxkID0gZ2V0Q2hpbGRzKGxpc3RQcm9wZXJ0aWVzW3Byb3BdLnR5cGUpO1xyXG4gICAgICAgICAgICAgICAgaWYgKGNoaWxkICE9PSBudWxsICYmIE9iamVjdC5rZXlzKGNoaWxkKS5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0ID0gT2JqZWN0LmFzc2lnbih7fSwgcmVzdWx0LCBjaGlsZCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICByZXR1cm4gcmVzdWx0O1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgY29uc3QgY2hpbGRzID0gZ2V0Q2hpbGRzKHRoaXMuZW50aXR5VHlwZSk7XHJcbiAgICAgICAgY29uc3Qgcm9vdCA9IE9iamVjdC5hc3NpZ24oe30sIHsgcGFnZVNpemU6IGRlZmF1bHRQYWdlU2l6ZSB9LCBjaGlsZHMpO1xyXG4gICAgICAgIHJldHVybiByb290O1xyXG4gICAgfVxyXG5cclxufVxyXG4iXX0=