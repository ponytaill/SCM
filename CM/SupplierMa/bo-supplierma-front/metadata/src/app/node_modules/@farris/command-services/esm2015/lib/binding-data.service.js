import { Injectable } from '@angular/core';
import { AppContext, BindingData } from '@farris/devkit';
/**
 * 实体服务
 * @scope FrameComponent
 */
class BindingDataService {
    /**
     * 构造函数
     */
    constructor(bindingData, appContext) {
        this.bindingData = bindingData;
        this.appContext = appContext;
    }
    /**
     * 设置当前框架的当前行
     */
    setCurrentId(id, frameId) {
        // let bindingData = this.bindingData;
        // if (frameId) {
        //   const targetContext = this.appContext.getFrameContext(frameId);
        //   bindingData = targetContext.bindingData;
        // }
        // bindingData.list.setCurrentId(id);
        // @todo：全部重新设置一遍
        const frameContexts = Array.from(this.appContext.getAllFrameContexts().values());
        frameContexts.forEach((frameContext) => {
            const bindingData = frameContext.bindingData;
            bindingData.list.setCurrentId(id, true, false);
        });
    }
    setCurrentRow(id, frameId) {
        let bindingData = this.bindingData;
        if (frameId) {
            const targetContext = this.appContext.getFrameContext(frameId);
            bindingData = targetContext.bindingData;
        }
        bindingData.getList().setCurrentId(id);
    }
}
BindingDataService.decorators = [
    { type: Injectable }
];
/** @nocollapse */
BindingDataService.ctorParameters = () => [
    { type: BindingData },
    { type: AppContext }
];
export { BindingDataService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmluZGluZy1kYXRhLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL2NvbW1hbmQtc2VydmljZXMvIiwic291cmNlcyI6WyJsaWIvYmluZGluZy1kYXRhLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsVUFBVSxFQUFFLFdBQVcsRUFBZ0IsTUFBTSxnQkFBZ0IsQ0FBQztBQUV2RTs7O0dBR0c7QUFDSCxNQUNNLGtCQUFrQjtJQUV0Qjs7T0FFRztJQUNILFlBQ1UsV0FBd0IsRUFDeEIsVUFBc0I7UUFEdEIsZ0JBQVcsR0FBWCxXQUFXLENBQWE7UUFDeEIsZUFBVSxHQUFWLFVBQVUsQ0FBWTtJQUM1QixDQUFDO0lBRUw7O09BRUc7SUFDSCxZQUFZLENBQUMsRUFBVSxFQUFFLE9BQWU7UUFDdEMsc0NBQXNDO1FBQ3RDLGlCQUFpQjtRQUNqQixvRUFBb0U7UUFDcEUsNkNBQTZDO1FBQzdDLElBQUk7UUFDSixxQ0FBcUM7UUFFckMsaUJBQWlCO1FBQ2pCLE1BQU0sYUFBYSxHQUFHLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxtQkFBbUIsRUFBRSxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUM7UUFDakYsYUFBYSxDQUFDLE9BQU8sQ0FBQyxDQUFDLFlBQTBCLEVBQUUsRUFBRTtZQUNuRCxNQUFNLFdBQVcsR0FBRyxZQUFZLENBQUMsV0FBVyxDQUFDO1lBQzdDLFdBQVcsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLEVBQUUsRUFBRSxJQUFJLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFDakQsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBQ00sYUFBYSxDQUFDLEVBQVUsRUFBRSxPQUFlO1FBQzlDLElBQUksV0FBVyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUM7UUFDbkMsSUFBSSxPQUFPLEVBQUU7WUFDWCxNQUFNLGFBQWEsR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLGVBQWUsQ0FBQyxPQUFPLENBQUMsQ0FBQztZQUMvRCxXQUFXLEdBQUcsYUFBYSxDQUFDLFdBQVcsQ0FBQztTQUN6QztRQUNELFdBQVcsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxZQUFZLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDekMsQ0FBQzs7O1lBcENGLFVBQVU7Ozs7WUFOVSxXQUFXO1lBQXZCLFVBQVU7O0FBNkNuQixPQUFPLEVBQUUsa0JBQWtCLEVBQUUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFwcENvbnRleHQsIEJpbmRpbmdEYXRhLCBGcmFtZUNvbnRleHQgfSBmcm9tICdAZmFycmlzL2RldmtpdCc7XG5cbi8qKlxuICog5a6e5L2T5pyN5YqhXG4gKiBAc2NvcGUgRnJhbWVDb21wb25lbnRcbiAqL1xuQEluamVjdGFibGUoKVxuY2xhc3MgQmluZGluZ0RhdGFTZXJ2aWNlIHtcblxuICAvKipcbiAgICog5p6E6YCg5Ye95pWwXG4gICAqL1xuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIGJpbmRpbmdEYXRhOiBCaW5kaW5nRGF0YSxcbiAgICBwcml2YXRlIGFwcENvbnRleHQ6IEFwcENvbnRleHRcbiAgKSB7IH1cblxuICAvKipcbiAgICog6K6+572u5b2T5YmN5qGG5p6255qE5b2T5YmN6KGMXG4gICAqL1xuICBzZXRDdXJyZW50SWQoaWQ6IHN0cmluZywgZnJhbWVJZDogc3RyaW5nKSB7XG4gICAgLy8gbGV0IGJpbmRpbmdEYXRhID0gdGhpcy5iaW5kaW5nRGF0YTtcbiAgICAvLyBpZiAoZnJhbWVJZCkge1xuICAgIC8vICAgY29uc3QgdGFyZ2V0Q29udGV4dCA9IHRoaXMuYXBwQ29udGV4dC5nZXRGcmFtZUNvbnRleHQoZnJhbWVJZCk7XG4gICAgLy8gICBiaW5kaW5nRGF0YSA9IHRhcmdldENvbnRleHQuYmluZGluZ0RhdGE7XG4gICAgLy8gfVxuICAgIC8vIGJpbmRpbmdEYXRhLmxpc3Quc2V0Q3VycmVudElkKGlkKTtcblxuICAgIC8vIEB0b2Rv77ya5YWo6YOo6YeN5paw6K6+572u5LiA6YGNXG4gICAgY29uc3QgZnJhbWVDb250ZXh0cyA9IEFycmF5LmZyb20odGhpcy5hcHBDb250ZXh0LmdldEFsbEZyYW1lQ29udGV4dHMoKS52YWx1ZXMoKSk7XG4gICAgZnJhbWVDb250ZXh0cy5mb3JFYWNoKChmcmFtZUNvbnRleHQ6IEZyYW1lQ29udGV4dCkgPT4ge1xuICAgICAgY29uc3QgYmluZGluZ0RhdGEgPSBmcmFtZUNvbnRleHQuYmluZGluZ0RhdGE7XG4gICAgICBiaW5kaW5nRGF0YS5saXN0LnNldEN1cnJlbnRJZChpZCwgdHJ1ZSwgZmFsc2UpO1xuICAgIH0pO1xuICB9XG4gIHB1YmxpYyBzZXRDdXJyZW50Um93KGlkOiBzdHJpbmcsIGZyYW1lSWQ6IHN0cmluZykge1xuICAgIGxldCBiaW5kaW5nRGF0YSA9IHRoaXMuYmluZGluZ0RhdGE7XG4gICAgaWYgKGZyYW1lSWQpIHtcbiAgICAgIGNvbnN0IHRhcmdldENvbnRleHQgPSB0aGlzLmFwcENvbnRleHQuZ2V0RnJhbWVDb250ZXh0KGZyYW1lSWQpO1xuICAgICAgYmluZGluZ0RhdGEgPSB0YXJnZXRDb250ZXh0LmJpbmRpbmdEYXRhO1xuICAgIH1cbiAgICBiaW5kaW5nRGF0YS5nZXRMaXN0KCkuc2V0Q3VycmVudElkKGlkKTtcbiAgfVxufVxuXG5leHBvcnQgeyBCaW5kaW5nRGF0YVNlcnZpY2UgfTtcbiJdfQ==