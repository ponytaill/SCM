/*
 * @Author: Witt
 * @Date: 2018-11-17 13:38:23
 * @Last Modified by: Witt
 * @Last Modified time: 2018-11-17 13:38:50
 * @todo：临时删除原有功能，待重构
 */
import { Subject } from 'rxjs';
import { UIStateMetadataUtil } from './uistate_metadata_util';
/**
 * UI状态
 */
var UIState = /** @class */ (function () {
    function UIState() {
        this.changes = new Subject();
        this.innerData = Object.assign({});
        this._init();
    }
    UIState.prototype._init = function () {
        var construct = this.constructor;
        var uiFields = UIStateMetadataUtil.getUIFields(construct);
        this.initializeUIField(uiFields);
    };
    UIState.prototype.initializeUIField = function (uiFieldMetadata) {
        var _this = this;
        Object.keys(uiFieldMetadata).forEach(function (propertyName) {
            var fieldMetadata = uiFieldMetadata[propertyName];
            var uiField = fieldMetadata.stateName || propertyName;
            if (delete _this[propertyName]) {
                _this.defineProperty(propertyName, uiField);
            }
        });
    };
    UIState.prototype.isExistProperty = function (propertyName) {
        if (this.innerData.hasOwnProperty(propertyName) || this.hasOwnProperty(propertyName)) {
            return true;
        }
        return false;
    };
    UIState.prototype.defineProperty = function (propertyName, field) {
        if (field === void 0) { field = null; }
        Object.defineProperty(this, propertyName, {
            get: function () {
                return field !== null ? this.innerData[field] : this.innerData[propertyName];
            },
            set: function (value) {
                // 值相同时不触发变更
                var oldValue = field !== null ? this.innerData[field] : this.innerData[propertyName];
                if (oldValue === value) {
                    return;
                }
                if (field !== null) {
                    this.innerData[field] = value;
                }
                else {
                    this.innerData[propertyName] = value;
                }
                this.changes.next({
                    field: propertyName,
                    value: value
                });
            }
        });
    };
    UIState.prototype.setPropertyValue = function (propertyName, value) {
        if (propertyName === '' || propertyName === undefined) {
            return;
        }
        if (!this.isExistProperty(propertyName)) {
            this.defineProperty(propertyName);
        }
        this[propertyName] = value;
    };
    return UIState;
}());
export { UIState };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidWlfc3RhdGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL21vYmlsZS1kZXZraXQvIiwic291cmNlcyI6WyJsaWIvdWktc3RhdGUvdWlfc3RhdGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HO0FBRUgsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUMvQixPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQVM5RDs7R0FFRztBQUNIO0lBT0U7UUFDRSxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksT0FBTyxFQUEwQixDQUFDO1FBQ3JELElBQUksQ0FBQyxTQUFTLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUNuQyxJQUFJLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDZixDQUFDO0lBRUQsdUJBQUssR0FBTDtRQUNFLElBQU0sU0FBUyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUM7UUFDbkMsSUFBTSxRQUFRLEdBQUcsbUJBQW1CLENBQUMsV0FBVyxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQzVELElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNuQyxDQUFDO0lBRU8sbUNBQWlCLEdBQXpCLFVBQTBCLGVBQXVEO1FBQWpGLGlCQVNDO1FBUkMsTUFBTSxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQyxPQUFPLENBQUMsVUFBQSxZQUFZO1lBQy9DLElBQU0sYUFBYSxHQUFHLGVBQWUsQ0FBQyxZQUFZLENBQXdCLENBQUM7WUFDM0UsSUFBTSxPQUFPLEdBQUcsYUFBYSxDQUFDLFNBQVMsSUFBSSxZQUFZLENBQUM7WUFFeEQsSUFBSSxPQUFPLEtBQUksQ0FBQyxZQUFZLENBQUMsRUFBRTtnQkFDN0IsS0FBSSxDQUFDLGNBQWMsQ0FBQyxZQUFZLEVBQUUsT0FBTyxDQUFDLENBQUM7YUFDNUM7UUFDSCxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFTSxpQ0FBZSxHQUF0QixVQUF1QixZQUFpQjtRQUN0QyxJQUFJLElBQUksQ0FBQyxTQUFTLENBQUMsY0FBYyxDQUFDLFlBQVksQ0FBQyxJQUFJLElBQUksQ0FBQyxjQUFjLENBQUMsWUFBWSxDQUFDLEVBQUU7WUFDcEYsT0FBTyxJQUFJLENBQUM7U0FDYjtRQUNELE9BQU8sS0FBSyxDQUFDO0lBQ2YsQ0FBQztJQUVPLGdDQUFjLEdBQXRCLFVBQXVCLFlBQWlCLEVBQUUsS0FBaUI7UUFBakIsc0JBQUEsRUFBQSxZQUFpQjtRQUN6RCxNQUFNLENBQUMsY0FBYyxDQUFDLElBQUksRUFBRSxZQUFZLEVBQUU7WUFDeEMsR0FBRyxFQUFFO2dCQUNILE9BQU8sS0FBSyxLQUFLLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxZQUFZLENBQUMsQ0FBQztZQUMvRSxDQUFDO1lBQ0QsR0FBRyxFQUFFLFVBQVUsS0FBSztnQkFDbEIsWUFBWTtnQkFDWixJQUFNLFFBQVEsR0FBRyxLQUFLLEtBQUssSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLFlBQVksQ0FBQyxDQUFDO2dCQUN2RixJQUFJLFFBQVEsS0FBSyxLQUFLLEVBQUU7b0JBQ3RCLE9BQU87aUJBQ1I7Z0JBQ0QsSUFBSSxLQUFLLEtBQUssSUFBSSxFQUFFO29CQUNsQixJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxHQUFHLEtBQUssQ0FBQztpQkFDL0I7cUJBQU07b0JBQ0wsSUFBSSxDQUFDLFNBQVMsQ0FBQyxZQUFZLENBQUMsR0FBRyxLQUFLLENBQUM7aUJBQ3RDO2dCQUNELElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDO29CQUNoQixLQUFLLEVBQUUsWUFBWTtvQkFDbkIsS0FBSyxFQUFFLEtBQUs7aUJBQ2IsQ0FBQyxDQUFDO1lBQ0wsQ0FBQztTQUNGLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFTSxrQ0FBZ0IsR0FBdkIsVUFBd0IsWUFBaUIsRUFBRSxLQUFVO1FBQ25ELElBQUksWUFBWSxLQUFLLEVBQUUsSUFBSSxZQUFZLEtBQUssU0FBUyxFQUFFO1lBQ3JELE9BQU87U0FDUjtRQUNELElBQUksQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDLFlBQVksQ0FBQyxFQUFFO1lBQ3ZDLElBQUksQ0FBQyxjQUFjLENBQUMsWUFBWSxDQUFDLENBQUM7U0FDbkM7UUFDRCxJQUFJLENBQUMsWUFBWSxDQUFDLEdBQUcsS0FBSyxDQUFDO0lBQzdCLENBQUM7SUFDSCxjQUFDO0FBQUQsQ0FBQyxBQXRFRCxJQXNFQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXHJcbiAqIEBBdXRob3I6IFdpdHRcclxuICogQERhdGU6IDIwMTgtMTEtMTcgMTM6Mzg6MjNcclxuICogQExhc3QgTW9kaWZpZWQgYnk6IFdpdHRcclxuICogQExhc3QgTW9kaWZpZWQgdGltZTogMjAxOC0xMS0xNyAxMzozODo1MFxyXG4gKiBAdG9kb++8muS4tOaXtuWIoOmZpOWOn+acieWKn+iDve+8jOW+hemHjeaehFxyXG4gKi9cclxuXHJcbmltcG9ydCB7IFN1YmplY3QgfSBmcm9tICdyeGpzJztcclxuaW1wb3J0IHsgVUlTdGF0ZU1ldGFkYXRhVXRpbCB9IGZyb20gJy4vdWlzdGF0ZV9tZXRhZGF0YV91dGlsJztcclxuaW1wb3J0IHsgVUlTdGF0ZVByb3BNZXRhZGF0YSB9IGZyb20gJy4vZGVjb3JhdG9ycyc7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFVJU3RhdGVPYnNlcnZhYmxlUGFyYW0ge1xyXG4gIGZpZWxkOiBzdHJpbmc7XHJcbiAgdmFsdWU6IGFueTtcclxufVxyXG5cclxuXHJcbi8qKlxyXG4gKiBVSeeKtuaAgVxyXG4gKi9cclxuZXhwb3J0IGNsYXNzIFVJU3RhdGUge1xyXG5cclxuICBpbm5lckRhdGE6IHt9O1xyXG5cclxuICAvLyDnm5HlkKzlj5jljJZcclxuICBjaGFuZ2VzOiBTdWJqZWN0PFVJU3RhdGVPYnNlcnZhYmxlUGFyYW0+O1xyXG5cclxuICBjb25zdHJ1Y3RvcigpIHtcclxuICAgIHRoaXMuY2hhbmdlcyA9IG5ldyBTdWJqZWN0PFVJU3RhdGVPYnNlcnZhYmxlUGFyYW0+KCk7XHJcbiAgICB0aGlzLmlubmVyRGF0YSA9IE9iamVjdC5hc3NpZ24oe30pO1xyXG4gICAgdGhpcy5faW5pdCgpO1xyXG4gIH1cclxuXHJcbiAgX2luaXQoKSB7XHJcbiAgICBjb25zdCBjb25zdHJ1Y3QgPSB0aGlzLmNvbnN0cnVjdG9yO1xyXG4gICAgY29uc3QgdWlGaWVsZHMgPSBVSVN0YXRlTWV0YWRhdGFVdGlsLmdldFVJRmllbGRzKGNvbnN0cnVjdCk7XHJcbiAgICB0aGlzLmluaXRpYWxpemVVSUZpZWxkKHVpRmllbGRzKTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgaW5pdGlhbGl6ZVVJRmllbGQodWlGaWVsZE1ldGFkYXRhOiB7IFtrZXk6IHN0cmluZ106IFVJU3RhdGVQcm9wTWV0YWRhdGEgfSk6IHZvaWQge1xyXG4gICAgT2JqZWN0LmtleXModWlGaWVsZE1ldGFkYXRhKS5mb3JFYWNoKHByb3BlcnR5TmFtZSA9PiB7XHJcbiAgICAgIGNvbnN0IGZpZWxkTWV0YWRhdGEgPSB1aUZpZWxkTWV0YWRhdGFbcHJvcGVydHlOYW1lXSBhcyBVSVN0YXRlUHJvcE1ldGFkYXRhO1xyXG4gICAgICBjb25zdCB1aUZpZWxkID0gZmllbGRNZXRhZGF0YS5zdGF0ZU5hbWUgfHwgcHJvcGVydHlOYW1lO1xyXG5cclxuICAgICAgaWYgKGRlbGV0ZSB0aGlzW3Byb3BlcnR5TmFtZV0pIHtcclxuICAgICAgICB0aGlzLmRlZmluZVByb3BlcnR5KHByb3BlcnR5TmFtZSwgdWlGaWVsZCk7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGlzRXhpc3RQcm9wZXJ0eShwcm9wZXJ0eU5hbWU6IGFueSkge1xyXG4gICAgaWYgKHRoaXMuaW5uZXJEYXRhLmhhc093blByb3BlcnR5KHByb3BlcnR5TmFtZSkgfHwgdGhpcy5oYXNPd25Qcm9wZXJ0eShwcm9wZXJ0eU5hbWUpKSB7XHJcbiAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGZhbHNlO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBkZWZpbmVQcm9wZXJ0eShwcm9wZXJ0eU5hbWU6IGFueSwgZmllbGQ6IGFueSA9IG51bGwpIHtcclxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBwcm9wZXJ0eU5hbWUsIHtcclxuICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgcmV0dXJuIGZpZWxkICE9PSBudWxsID8gdGhpcy5pbm5lckRhdGFbZmllbGRdIDogdGhpcy5pbm5lckRhdGFbcHJvcGVydHlOYW1lXTtcclxuICAgICAgfSxcclxuICAgICAgc2V0OiBmdW5jdGlvbiAodmFsdWUpIHtcclxuICAgICAgICAvLyDlgLznm7jlkIzml7bkuI3op6blj5Hlj5jmm7RcclxuICAgICAgICBjb25zdCBvbGRWYWx1ZSA9IGZpZWxkICE9PSBudWxsID8gdGhpcy5pbm5lckRhdGFbZmllbGRdIDogdGhpcy5pbm5lckRhdGFbcHJvcGVydHlOYW1lXTtcclxuICAgICAgICBpZiAob2xkVmFsdWUgPT09IHZhbHVlKSB7XHJcbiAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChmaWVsZCAhPT0gbnVsbCkge1xyXG4gICAgICAgICAgdGhpcy5pbm5lckRhdGFbZmllbGRdID0gdmFsdWU7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIHRoaXMuaW5uZXJEYXRhW3Byb3BlcnR5TmFtZV0gPSB2YWx1ZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5jaGFuZ2VzLm5leHQoe1xyXG4gICAgICAgICAgZmllbGQ6IHByb3BlcnR5TmFtZSxcclxuICAgICAgICAgIHZhbHVlOiB2YWx1ZVxyXG4gICAgICAgIH0pO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBzZXRQcm9wZXJ0eVZhbHVlKHByb3BlcnR5TmFtZTogYW55LCB2YWx1ZTogYW55KSB7XHJcbiAgICBpZiAocHJvcGVydHlOYW1lID09PSAnJyB8fCBwcm9wZXJ0eU5hbWUgPT09IHVuZGVmaW5lZCkge1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBpZiAoIXRoaXMuaXNFeGlzdFByb3BlcnR5KHByb3BlcnR5TmFtZSkpIHtcclxuICAgICAgdGhpcy5kZWZpbmVQcm9wZXJ0eShwcm9wZXJ0eU5hbWUpO1xyXG4gICAgfVxyXG4gICAgdGhpc1twcm9wZXJ0eU5hbWVdID0gdmFsdWU7XHJcbiAgfVxyXG59XHJcbiJdfQ==