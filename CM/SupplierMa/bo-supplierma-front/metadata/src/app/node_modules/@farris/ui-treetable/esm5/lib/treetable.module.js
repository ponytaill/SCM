/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { TTHotkeys } from './hotkeys';
import { InputGroupModule } from '@farris/ui-input-group';
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { TreetableService } from './treetable.service';
import { TreeTableComponent, TTBodyComponent, TreeTableTogglerComponent, TreeTableSelectRowDirective, TreeTableCheckboxComponent, TreeTableHeaderCheckboxComponent, DblClickRowDirective, TTResizableColumnDirective, TreeTableColumnDirective, TTCustomCellStyleDirective, CustomRowStyleDirective } from './treetable.component';
import { PerfectScrollbarModule } from '@farris/ui-perfect-scrollbar';
import { FarrisCommonModule } from '@farris/ui-common';
import { FormsModule } from '@angular/forms';
import { DataColumnModule } from '@farris/ui-common/column';
import { ResizeService } from '@farris/ui-common/events';
import { FindInputComponent } from './find-input.component';
import { HighlightPipe } from './high-light.pipe';
import { LocaleModule } from '@farris/ui-locale';
import { PaginationModule } from '@farris/ui-pagination';
import { TreetableNodesPagerComponent } from './nodes_pager/nodes-pager.component';
import { ChildsLoadingComponent } from './nodes_pager/childs-loading.component';
import { CellTipsPipe } from './cell-tips.pipe';
import { FarrisContextMenuModule } from '@farris/ui-context-menu';
import { DisableNodePipe } from './disable-node.pipe';
var TreeTableModule = /** @class */ (function () {
    function TreeTableModule() {
    }
    TreeTableModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        CommonModule,
                        FormsModule,
                        FarrisCommonModule.forRoot(),
                        PerfectScrollbarModule,
                        InputGroupModule,
                        LocaleModule.forRoot(),
                        DataColumnModule.forRoot(),
                        PaginationModule,
                        FarrisContextMenuModule
                    ],
                    declarations: [
                        TreeTableComponent,
                        TTBodyComponent,
                        TreeTableTogglerComponent,
                        TreeTableSelectRowDirective,
                        TreeTableCheckboxComponent,
                        TreeTableHeaderCheckboxComponent,
                        DblClickRowDirective,
                        TTResizableColumnDirective,
                        TreeTableColumnDirective,
                        TTCustomCellStyleDirective,
                        FindInputComponent,
                        HighlightPipe,
                        CustomRowStyleDirective,
                        TreetableNodesPagerComponent,
                        ChildsLoadingComponent,
                        CellTipsPipe,
                        DisableNodePipe
                    ],
                    exports: [
                        TreeTableComponent,
                        TTBodyComponent,
                        TreeTableTogglerComponent,
                        TreeTableSelectRowDirective,
                        TreeTableCheckboxComponent,
                        TreeTableHeaderCheckboxComponent,
                        DblClickRowDirective,
                        TTResizableColumnDirective,
                        FarrisCommonModule,
                        TTCustomCellStyleDirective,
                        TreeTableColumnDirective,
                        HighlightPipe,
                        CustomRowStyleDirective,
                        TreetableNodesPagerComponent,
                        ChildsLoadingComponent,
                        CellTipsPipe,
                        DisableNodePipe,
                        FarrisContextMenuModule
                    ],
                    providers: [
                        TreetableService,
                        ResizeService,
                        TTHotkeys
                    ]
                },] }
    ];
    return TreeTableModule;
}());
export { TreeTableModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJlZXRhYmxlLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvdWktdHJlZXRhYmxlLyIsInNvdXJjZXMiOlsibGliL3RyZWV0YWJsZS5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUNBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFDdEMsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDMUQsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDdkQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLGVBQWUsRUFDeEMseUJBQXlCLEVBQ3pCLDJCQUEyQixFQUMzQiwwQkFBMEIsRUFDMUIsZ0NBQWdDLEVBQ2hDLG9CQUFvQixFQUNwQiwwQkFBMEIsRUFDMUIsd0JBQXdCLEVBQ3hCLDBCQUEwQixFQUMxQix1QkFBdUIsRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBQzFELE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQ3RFLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM3QyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUM1RCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDekQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDNUQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ2xELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNqRCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUN6RCxPQUFPLEVBQUUsNEJBQTRCLEVBQUUsTUFBTSxxQ0FBcUMsQ0FBQztBQUNuRixPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSx3Q0FBd0MsQ0FBQztBQUNoRixPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDaEQsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDbEUsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3REO0lBQUE7SUEyREEsQ0FBQzs7Z0JBM0RBLFFBQVEsU0FBQztvQkFDTixPQUFPLEVBQUU7d0JBQ0wsWUFBWTt3QkFDWixXQUFXO3dCQUNYLGtCQUFrQixDQUFDLE9BQU8sRUFBRTt3QkFDNUIsc0JBQXNCO3dCQUN0QixnQkFBZ0I7d0JBQ2hCLFlBQVksQ0FBQyxPQUFPLEVBQUU7d0JBQ3RCLGdCQUFnQixDQUFDLE9BQU8sRUFBRTt3QkFDMUIsZ0JBQWdCO3dCQUNoQix1QkFBdUI7cUJBQzFCO29CQUNELFlBQVksRUFBRTt3QkFDVixrQkFBa0I7d0JBQ2xCLGVBQWU7d0JBQ2YseUJBQXlCO3dCQUN6QiwyQkFBMkI7d0JBQzNCLDBCQUEwQjt3QkFDMUIsZ0NBQWdDO3dCQUNoQyxvQkFBb0I7d0JBQ3BCLDBCQUEwQjt3QkFDMUIsd0JBQXdCO3dCQUN4QiwwQkFBMEI7d0JBQzFCLGtCQUFrQjt3QkFDbEIsYUFBYTt3QkFDYix1QkFBdUI7d0JBQ3ZCLDRCQUE0Qjt3QkFDNUIsc0JBQXNCO3dCQUN0QixZQUFZO3dCQUNaLGVBQWU7cUJBQ2xCO29CQUNELE9BQU8sRUFBRTt3QkFDTCxrQkFBa0I7d0JBQ2xCLGVBQWU7d0JBQ2YseUJBQXlCO3dCQUN6QiwyQkFBMkI7d0JBQzNCLDBCQUEwQjt3QkFDMUIsZ0NBQWdDO3dCQUNoQyxvQkFBb0I7d0JBQ3BCLDBCQUEwQjt3QkFDMUIsa0JBQWtCO3dCQUNsQiwwQkFBMEI7d0JBQzFCLHdCQUF3Qjt3QkFDeEIsYUFBYTt3QkFDYix1QkFBdUI7d0JBQ3ZCLDRCQUE0Qjt3QkFDNUIsc0JBQXNCO3dCQUN0QixZQUFZO3dCQUNaLGVBQWU7d0JBQ2YsdUJBQXVCO3FCQUMxQjtvQkFDRCxTQUFTLEVBQUU7d0JBQ1AsZ0JBQWdCO3dCQUNoQixhQUFhO3dCQUNiLFNBQVM7cUJBQ1o7aUJBQ0o7O0lBR0Qsc0JBQUM7Q0FBQSxBQTNERCxJQTJEQztTQUZZLGVBQWUiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuaW1wb3J0IHsgVFRIb3RrZXlzIH0gZnJvbSAnLi9ob3RrZXlzJztcclxuaW1wb3J0IHsgSW5wdXRHcm91cE1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktaW5wdXQtZ3JvdXAnO1xyXG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xyXG5pbXBvcnQgeyBUcmVldGFibGVTZXJ2aWNlIH0gZnJvbSAnLi90cmVldGFibGUuc2VydmljZSc7XHJcbmltcG9ydCB7IFRyZWVUYWJsZUNvbXBvbmVudCwgVFRCb2R5Q29tcG9uZW50LFxyXG4gICAgVHJlZVRhYmxlVG9nZ2xlckNvbXBvbmVudCxcclxuICAgIFRyZWVUYWJsZVNlbGVjdFJvd0RpcmVjdGl2ZSxcclxuICAgIFRyZWVUYWJsZUNoZWNrYm94Q29tcG9uZW50LFxyXG4gICAgVHJlZVRhYmxlSGVhZGVyQ2hlY2tib3hDb21wb25lbnQsXHJcbiAgICBEYmxDbGlja1Jvd0RpcmVjdGl2ZSxcclxuICAgIFRUUmVzaXphYmxlQ29sdW1uRGlyZWN0aXZlLFxyXG4gICAgVHJlZVRhYmxlQ29sdW1uRGlyZWN0aXZlLFxyXG4gICAgVFRDdXN0b21DZWxsU3R5bGVEaXJlY3RpdmUsXHJcbiAgICBDdXN0b21Sb3dTdHlsZURpcmVjdGl2ZX0gZnJvbSAnLi90cmVldGFibGUuY29tcG9uZW50JztcclxuaW1wb3J0IHsgUGVyZmVjdFNjcm9sbGJhck1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktcGVyZmVjdC1zY3JvbGxiYXInO1xyXG5pbXBvcnQgeyBGYXJyaXNDb21tb25Nb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWNvbW1vbic7XHJcbmltcG9ydCB7IEZvcm1zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xyXG5pbXBvcnQgeyBEYXRhQ29sdW1uTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1jb21tb24vY29sdW1uJztcclxuaW1wb3J0IHsgUmVzaXplU2VydmljZSB9IGZyb20gJ0BmYXJyaXMvdWktY29tbW9uL2V2ZW50cyc7XHJcbmltcG9ydCB7IEZpbmRJbnB1dENvbXBvbmVudCB9IGZyb20gJy4vZmluZC1pbnB1dC5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBIaWdobGlnaHRQaXBlIH0gZnJvbSAnLi9oaWdoLWxpZ2h0LnBpcGUnO1xyXG5pbXBvcnQgeyBMb2NhbGVNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWxvY2FsZSc7XHJcbmltcG9ydCB7IFBhZ2luYXRpb25Nb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLXBhZ2luYXRpb24nO1xyXG5pbXBvcnQgeyBUcmVldGFibGVOb2Rlc1BhZ2VyQ29tcG9uZW50IH0gZnJvbSAnLi9ub2Rlc19wYWdlci9ub2Rlcy1wYWdlci5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBDaGlsZHNMb2FkaW5nQ29tcG9uZW50IH0gZnJvbSAnLi9ub2Rlc19wYWdlci9jaGlsZHMtbG9hZGluZy5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBDZWxsVGlwc1BpcGUgfSBmcm9tICcuL2NlbGwtdGlwcy5waXBlJztcclxuaW1wb3J0IHsgRmFycmlzQ29udGV4dE1lbnVNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWNvbnRleHQtbWVudSc7XHJcbmltcG9ydCB7IERpc2FibGVOb2RlUGlwZSB9IGZyb20gJy4vZGlzYWJsZS1ub2RlLnBpcGUnO1xyXG5ATmdNb2R1bGUoe1xyXG4gICAgaW1wb3J0czogW1xyXG4gICAgICAgIENvbW1vbk1vZHVsZSxcclxuICAgICAgICBGb3Jtc01vZHVsZSxcclxuICAgICAgICBGYXJyaXNDb21tb25Nb2R1bGUuZm9yUm9vdCgpLFxyXG4gICAgICAgIFBlcmZlY3RTY3JvbGxiYXJNb2R1bGUsXHJcbiAgICAgICAgSW5wdXRHcm91cE1vZHVsZSxcclxuICAgICAgICBMb2NhbGVNb2R1bGUuZm9yUm9vdCgpLFxyXG4gICAgICAgIERhdGFDb2x1bW5Nb2R1bGUuZm9yUm9vdCgpLFxyXG4gICAgICAgIFBhZ2luYXRpb25Nb2R1bGUsXHJcbiAgICAgICAgRmFycmlzQ29udGV4dE1lbnVNb2R1bGVcclxuICAgIF0sXHJcbiAgICBkZWNsYXJhdGlvbnM6IFtcclxuICAgICAgICBUcmVlVGFibGVDb21wb25lbnQsXHJcbiAgICAgICAgVFRCb2R5Q29tcG9uZW50LFxyXG4gICAgICAgIFRyZWVUYWJsZVRvZ2dsZXJDb21wb25lbnQsXHJcbiAgICAgICAgVHJlZVRhYmxlU2VsZWN0Um93RGlyZWN0aXZlLFxyXG4gICAgICAgIFRyZWVUYWJsZUNoZWNrYm94Q29tcG9uZW50LFxyXG4gICAgICAgIFRyZWVUYWJsZUhlYWRlckNoZWNrYm94Q29tcG9uZW50LFxyXG4gICAgICAgIERibENsaWNrUm93RGlyZWN0aXZlLFxyXG4gICAgICAgIFRUUmVzaXphYmxlQ29sdW1uRGlyZWN0aXZlLFxyXG4gICAgICAgIFRyZWVUYWJsZUNvbHVtbkRpcmVjdGl2ZSxcclxuICAgICAgICBUVEN1c3RvbUNlbGxTdHlsZURpcmVjdGl2ZSxcclxuICAgICAgICBGaW5kSW5wdXRDb21wb25lbnQsXHJcbiAgICAgICAgSGlnaGxpZ2h0UGlwZSxcclxuICAgICAgICBDdXN0b21Sb3dTdHlsZURpcmVjdGl2ZSxcclxuICAgICAgICBUcmVldGFibGVOb2Rlc1BhZ2VyQ29tcG9uZW50LFxyXG4gICAgICAgIENoaWxkc0xvYWRpbmdDb21wb25lbnQsXHJcbiAgICAgICAgQ2VsbFRpcHNQaXBlLFxyXG4gICAgICAgIERpc2FibGVOb2RlUGlwZVxyXG4gICAgXSxcclxuICAgIGV4cG9ydHM6IFtcclxuICAgICAgICBUcmVlVGFibGVDb21wb25lbnQsXHJcbiAgICAgICAgVFRCb2R5Q29tcG9uZW50LFxyXG4gICAgICAgIFRyZWVUYWJsZVRvZ2dsZXJDb21wb25lbnQsXHJcbiAgICAgICAgVHJlZVRhYmxlU2VsZWN0Um93RGlyZWN0aXZlLFxyXG4gICAgICAgIFRyZWVUYWJsZUNoZWNrYm94Q29tcG9uZW50LFxyXG4gICAgICAgIFRyZWVUYWJsZUhlYWRlckNoZWNrYm94Q29tcG9uZW50LFxyXG4gICAgICAgIERibENsaWNrUm93RGlyZWN0aXZlLFxyXG4gICAgICAgIFRUUmVzaXphYmxlQ29sdW1uRGlyZWN0aXZlLFxyXG4gICAgICAgIEZhcnJpc0NvbW1vbk1vZHVsZSxcclxuICAgICAgICBUVEN1c3RvbUNlbGxTdHlsZURpcmVjdGl2ZSxcclxuICAgICAgICBUcmVlVGFibGVDb2x1bW5EaXJlY3RpdmUsXHJcbiAgICAgICAgSGlnaGxpZ2h0UGlwZSxcclxuICAgICAgICBDdXN0b21Sb3dTdHlsZURpcmVjdGl2ZSxcclxuICAgICAgICBUcmVldGFibGVOb2Rlc1BhZ2VyQ29tcG9uZW50LFxyXG4gICAgICAgIENoaWxkc0xvYWRpbmdDb21wb25lbnQsXHJcbiAgICAgICAgQ2VsbFRpcHNQaXBlLFxyXG4gICAgICAgIERpc2FibGVOb2RlUGlwZSxcclxuICAgICAgICBGYXJyaXNDb250ZXh0TWVudU1vZHVsZVxyXG4gICAgXSxcclxuICAgIHByb3ZpZGVyczogW1xyXG4gICAgICAgIFRyZWV0YWJsZVNlcnZpY2UsXHJcbiAgICAgICAgUmVzaXplU2VydmljZSxcclxuICAgICAgICBUVEhvdGtleXNcclxuICAgIF1cclxufSlcclxuZXhwb3J0IGNsYXNzIFRyZWVUYWJsZU1vZHVsZSB7XHJcblxyXG59XHJcbiJdfQ==