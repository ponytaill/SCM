{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://@farris/component-querycondition/lib/service/communicationservice.ts","ng://@farris/component-querycondition/lib/service/convertorservice.ts","ng://@farris/component-querycondition/lib/entity/controltype.ts","ng://@farris/component-querycondition/lib/entity/controltype/dropdownlist/enumtype.ts","ng://@farris/component-querycondition/lib/entity/controltype/dropdownlist/integerenumvalue.ts","ng://@farris/component-querycondition/lib/entity/controltype/dropdownlist/stringenumvalue.ts","ng://@farris/component-querycondition/lib/entity/controltype/dropdownlist/boolenumvalue.ts","ng://@farris/component-querycondition/lib/entity/controltype/dropdownlist/ienumvalue.ts","ng://@farris/component-querycondition/lib/entity/controltype/dropdownlist/dropdownlistcontrol.ts","ng://@farris/component-querycondition/lib/entity/controltype/text/textcontrol.ts","ng://@farris/component-querycondition/lib/entity/controltype/daterange/date-range.control.ts","ng://@farris/component-querycondition/lib/entity/controltype/date/single-date-control.ts","ng://@farris/component-querycondition/lib/entity/controltype/smarthelp/smarthelpcontrol.ts","ng://@farris/component-querycondition/lib/entity/controltype/numberrange/numberrangecontrol.ts","ng://@farris/component-querycondition/lib/entity/controltype/number/single-number-control.ts","ng://@farris/component-querycondition/lib/entity/controltype/year/year-control.ts","ng://@farris/component-querycondition/lib/entity/controltype/checkbox/checkbox-control.ts","ng://@farris/component-querycondition/lib/entity/controltype/daterange/datertime-range-control.ts","ng://@farris/component-querycondition/lib/entity/controltype/month/month-control.ts","ng://@farris/component-querycondition/lib/entity/controltype/monthrange/month-range-control.ts","ng://@farris/component-querycondition/lib/entity/controltype/date/single-date-time-control.ts","ng://@farris/component-querycondition/lib/entity/controltype/combolookup/combolookup-control.ts","ng://@farris/component-querycondition/lib/entity/controltype/radio/radio-control.ts","ng://@farris/component-querycondition/lib/entity/controltype/input-group/inputgroupcontrol.ts","ng://@farris/component-querycondition/lib/entity/controltype/icontrol.ts","ng://@farris/component-querycondition/lib/entity/conditionvalue/textvalue.ts","ng://@farris/component-querycondition/lib/entity/conditionvalue/numberrangevaue.ts","ng://@farris/component-querycondition/lib/entity/conditionvalue/daterangevalue.ts","ng://@farris/component-querycondition/lib/entity/conditionvalue/smarthelpvalue.ts","ng://@farris/component-querycondition/lib/entity/conditionvalue/single-date-value.ts","ng://@farris/component-querycondition/lib/entity/conditionvalue/single-number-value.ts","ng://@farris/component-querycondition/lib/entity/conditionvalue/single-year-value.ts","ng://@farris/component-querycondition/lib/entity/conditionvalue/checkbox-value.ts","ng://@farris/component-querycondition/lib/entity/conditionvalue/dropdownlistvalue.ts","ng://@farris/component-querycondition/lib/entity/conditionvalue/single-month-value.ts","ng://@farris/component-querycondition/lib/entity/conditionvalue/month-range-value.ts","ng://@farris/component-querycondition/lib/entity/conditionvalue/single-date-time-value.ts","ng://@farris/component-querycondition/lib/entity/conditionvalue/combolookup-value.ts","ng://@farris/component-querycondition/lib/entity/conditionvalue/radio-value.ts","ng://@farris/component-querycondition/lib/entity/conditionvalue/inputgroupvalue.ts","ng://@farris/component-querycondition/lib/entity/conditionvalue/ivalue.ts","ng://@farris/component-querycondition/lib/entity/querycondition.ts","ng://@farris/component-querycondition/lib/entity/valuetype.ts","ng://@farris/component-querycondition/lib/service/solution.service.ts","ng://@farris/component-querycondition/lib/querycondition.component.ts","ng://@farris/component-querycondition/lib/controlcomponent/numberrangecomponent/numberrange.component.ts","ng://@farris/component-querycondition/lib/controlcomponent/input/input.component.ts","ng://@farris/component-querycondition/lib/controlcomponent/inputgroup/inputgroup.component.ts","ng://@farris/component-querycondition/lib/controlcomponent/smarthelp/smarthelp.component.ts","ng://@farris/component-querycondition/lib/controlcomponent/dropdown/dropdownlist.component.ts","ng://@farris/component-querycondition/lib/controlcomponent/numbercomponent/single-number.component.ts","ng://@farris/component-querycondition/lib/fieldconfigdialog/configdialog.component.ts","ng://@farris/component-querycondition/lib/controlcomponent/checkbox/checkbox.component.ts","ng://@farris/component-querycondition/lib/controlcomponent/radio/radio.component.ts","ng://@farris/component-querycondition/lib/controlcomponent/datepicker/datepicker.component.ts","ng://@farris/component-querycondition/lib/controlcomponent/combolookup/combolookup.component.ts","ng://@farris/component-querycondition/lib/directives/clear-fields.directive.ts","ng://@farris/component-querycondition/lib/directives/label-text-multi.directive.ts","ng://@farris/component-querycondition/lib/querycondition.module.ts","ng://@farris/component-querycondition/lib/entity/querysolutionvo.ts","ng://@farris/component-querycondition/lib/entity/querysolutionextendvo.ts","ng://@farris/component-querycondition/lib/entity/comparetype.ts","ng://@farris/component-querycondition/lib/entity/fieldconfig/fieldconfig.ts"],"names":["__values","o","m","Symbol","iterator","i","call","next","length","value","done","CommunicationService","Injectable","this","eventbus","EventEmitter","ConvertorService","ControlType","Text","SingleDate","SmartHelp","DropDownList","DateRange","NumberRange","SingleNumber","SingleYear","BoolCheck","DateTimeRange","SingleMonth","MonthRange","SingleDateTime","ComboLookUp","Radio","InputGroup","EnumType","IntType","StringType","BoolType","EnumIntegerValue","prototype","getEnumType","getEnumValueName","name","getEnumValue","EnumStringValue","EnumBoolValue","EnumValueConvert","convertJObject","obj","enumValue","enumType","jobj","Object","initFromJobject","content","assign","DropDownListControl","getControlType","isRequired","require","DropDownListControlConvert","convertToObject","dropDownListControl","valueType","enumValues","jarray_1","convertor_1","forEach","element","push","uri","beforeShow","beforeHide","idField","textField","multiSelect","panelHeight","placeholder","className","initFromObject","control","Array","convertor","TextControl","DateRangeControl","SingleDateControl","SmartHelpContol","NumberRangeControl","SingleNumberControl","SingleYearControl","CheckBoxControl","data","separator","isStringValue","DateTimeRangeControl","SingleMonthControl","MonthRangeControl","SingleDateTimeControl","ComboLookUpControl","RadioControl","RadioControlConvert","radioControl","horizontal","showLabel","disabled","InputGroupControl","DialogConfig","ControlConvert","controlType","TextValue","clearValue","undefined","setOriginalValue","getOriginalValue","isEmpty","NumberRangeValue","startValue","endValue","Error","begin","end","parseFloat","NumberRangeValueConvertor","numberRangeValue","DateRangeValue","formatted","startTime","split","delimiter","endTime","SmartHelpValue","_this","args","valueField","valueArr","map","helpItem","getPropValue","cloneDeep","join","textValue","isInputText","getTextValue","textArr","arg","shift","SingleDateValue","dateValue","date","SingleNumberValue","numValue","SingleYearValue","yearValue","year","CheckBoxValue","v","DropDownListValue","key","hasOwnProperty","SingleMonthValue","monthValue","month","MonthRangeValue","SingleDateTimeValue","datetimeValue","datetime","ComboLookUpValue","RadioValue","InputGroupValue","item","targetField","ConditionValueConvert","conditionValue","QueryCondition","visible","QueryConditionConvert","queryCondition","id","fieldCode","fieldName","placeHolder","valueConvert","controlConvertor","beginPlaceHolder","endPlaceHolder","conditonValue","conditionControl","ValueType","Value","Enum","Express","SolutionService","getControlConfigState","controlConfigState","updateControlConfigState","simpleCondition","convertToSimpleQueryConditions","fields","field","simpleQueryCondition","labelCode","getSimpleControl","controlData","simpleControl","controlTypeMap","get","controltype","updateSimpleControl","resultObj","sourceProps","source","distProps","k","convertToQueryConditions","_a","getControlAndValue","valueData","editable","groupText","usageMode","dialogOptions","setInputGroupDialog","click","format","returnFormat","weekSelect","showWeekNumbers","enableCustomFormat","emptyString","precision","textAlign","bigNumber","isBigNumber","min","minValue","max","maxValue","displayType","mapFields","preEventCmd","postEventCmd","context","enableFullTree","loadTreeDataType","singleSelect","expandLevel","enableCascade","nosearch","displayFields","displayTextSeparator","clearFields","clear","dialogTitle","panelWidth","pageSize","pageList","displayTypeTransform","maxDate","minDate","disable","getGuid","s4","Math","random","toString","substring","showInfo","message","infoType","title","timeout","notify","config","position","success","msg","info","warning","error","getConditionItemTitle","setValues","solution","fieldConfigs","readonly","qc","conditions","queryConditions","find","c","isNumCheck","updateControl","prop","isValid","type","filter","condition","inputGroupControlData","modalConfigData","modalConfig","dialogConfig","modalId","JSON","parse","replace","showHeader","showCloseButton","showMaxButton","width","height","NotifyService","BehaviorSubject","Map","defineProperty","QueryConditionComponent","_resetFieldConfigs","solutionService","_selectedFieldConditions","ngOnDestroy","destroy$","complete","ngOnInit","currentLocale","localeIds","isControlInline","selectedFieldConditions","ngAfterViewInit","ngAfterViewChecked","hasSetMultiClass","currentItem","indexOf","getStyle","configDialogConfirm","event","configData","reConfigConditions","target","this_1","configData_1","tslib_1.__values","configData_1_1","_c","_d","fieldConditionsChange","emit","openFieldConfigDialog","configDialog","inputSelectedFileds","dialog","show","resetSelectedConditionValues","exceptRequired","fieldCondition","conditionChange","confirmLabelFormat","hasCustom_1","labelFormat","noCheckBoxConditions_1","maxLength_1","showCompleteLabel","concat","Component","selector","template","encapsulation","ViewEncapsulation","None","providers","ComponentFactoryResolver","Injector","BsModalService","LocaleService","Input","Output","ViewChild","communicationService","convertorService","resolver","injector","modalService","localeService","en","zh-CHS","showButton","fieldCodeOfClearFields","Subject","ngZone","LOCALE_ID","NgZone","NumberRangeComponent","ngOnChanges","changes","currentValue","firstChange","some","constructMultiFieldNumberRange","testId","canNull","valueChange","dataArray","start","isNaN","beginValue","beginValueChange","$event","endValueChange","changeFields","InputComponent","constructTextItem","_inputItem","textItem","textValueObj","onBlur","hasError","hasErrorInfo","textControl","invalid","dirty","touched","errors","maxlength","maxLength","InputGroupComponent","constructInputGroupItem","inputGroupItem","inputGroupValueObj","getInputGroupBindingInfo","inputGroupControl","stringify","onClick","options","handle","selectedItem","isTextFromDialog","textFormDialog","clearData","SolutionSmartHelpComponent","getSmartHelpBindingInfo","lookup","textChanged","subscribe","textChangedHandler","smartHelpControl","dialogWidth","dialogHeight","smartHelpValue","parseInt","helpValue","selectedDataHandler","mappingEmitter","onBeforeOpen","t","ids","n","displayValue","of","DropDownListComponent","getDataSource","initialValue","selectedItemId","dropDownListDataSource","selectChange","selected","selectedValue","selection","uriDataKey","onClear","SingleNumberComponent","number","numberValue","ConfigDialogComponent","filedsDataSource","visibleFields","visibleSelectedFields","selectedIds","getValue","cancel","cancelEmitter","multiSelectCmp","searchValue","close","confirm","_fieldData","selectedFields","index","findIndex","confirmEmitter","reset","CheckBoxComponent","_item","nr","checkValue","valueChanged","RadioComponent","radioValue","HostBinding","cls","DatePickerComponent","dateRange","trim","bindValue","dateFormat","showType","ShowType","noDateAndMonth","showTime","noDate","updateParamsByCondition","selectWeek","pipe","takeUntil","simpleConditions","findSimpleCondition","onDateChange","returnFormatted","dateRangeDatesDelimiter","all","queryconditionComponent","ComboLookUpComponent","getComboLookUpBindingInfo","autoWidth","valueChangeHandler","selections","comboLookUpControl","comboLookUpValue","selectedValues","ClearFieldsDirective","ngCtrl","valueChanges","qcc","conditionItem","Directive","NgControl","decorators","Optional","Self","inject","LabelTextMultiDirective","_enableMulti","judgeMulti","runOutsideAngular","setTimeout","textEl","el","nativeElement","querySelector","clientWidth","scrollWidth","multiCls","ElementRef","QueryConditionModule","NgModule","imports","CommonModule","FormsModule","ReactiveFormsModule","FarrisDialogModule","LayoutModule","LookupModule","MultiSelectModule","FieldGroupModule","InputGroupModule","FDropdownDirectiveTypeModule","LoadingModule","forRoot","NotifyModule","FarrisDatePickerModule","LocaleModule","ComboListModule","NumberSpinnerModule","FarrisFormsModule","ComboLookupModule","declarations","entryComponents","bootstrap","exports","QuerySolutionVo","isDefault","isChanged","extendId","QuerySolutionVoConvertor","querySolutionVo","belongId","code","isSystem","extendInfo","jArray_1","queryConditionString","conditionJarry","convertor_2","formatFromJobject","formatConvertJObject","QuerySolutionExtendVo","CompareType","Equal","GreaterThan","GreaterThanOrEqual","LessThan","LessThanOrEqual","Like","FieldConfig"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable, EventEmitter } from '@angular/core';\r\n/**\r\n * ä¸ºäºå¼å®¹æ§ä»£ç ï¼\r\n * ä¿çä¸ä¸ªç©ºçservice\r\n*/\r\n@Injectable()\r\nexport class CommunicationService {\r\n    \r\n    public eventbus: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n}","import { Injectable } from '@angular/core';\r\n/**\r\n * ä¸ºäºå¼å®¹æ§ä»£ç ï¼\r\n * ä¿çä¸ä¸ªç©ºçservice\r\n*/\r\n@Injectable()\r\nexport class ConvertorService {\r\n    constructor(){}\r\n}","export enum ControlType{\r\n    Text = 0,\r\n    SingleDate = 1,\r\n    SmartHelp = 2,\r\n    DropDownList = 3,\r\n    DateRange = 4,\r\n    NumberRange = 5,\r\n    SingleNumber = 6,\r\n    SingleYear = 7,\r\n    BoolCheck = 8,\r\n    DateTimeRange = 9,\r\n    SingleMonth = 10,\r\n    MonthRange = 11,\r\n    SingleDateTime = 12,\r\n    ComboLookUp = 13,\r\n    Radio = 14,\r\n    InputGroup = 15\r\n}","export enum EnumType{\r\n    IntType=0,\r\n    StringType=1,\r\n    BoolType=2\r\n}","import { IEnumValue } from \"./ienumvalue\";\r\nimport { EnumType } from \"./enumtype\";\r\n\r\n/**\r\n * ä¸æåè¡¨Integerç±»å\r\n */\r\nexport class EnumIntegerValue implements IEnumValue{\r\n    getEnumType(): EnumType {\r\n        return EnumType.IntType;\r\n    }\r\n    \r\n    getEnumValueName():string{\r\n        return this.name;\r\n    }\r\n\r\n    getEnumValue():any{\r\n        return this.value;\r\n    }\r\n\r\n    /**\r\n     * ææ¬æ¾ç¤º\r\n     */\r\n    name:string;\r\n\r\n    /**\r\n     * å¼æ¾ç¤º\r\n     */\r\n    value:number;\r\n}","import { IEnumValue } from \"./ienumvalue\";\r\nimport { EnumType } from \"./enumtype\";\r\n\r\n/**\r\n * ä¸æåè¡¨Stringç±»å\r\n */\r\nexport class EnumStringValue implements IEnumValue{\r\n    getEnumType(): EnumType {\r\n        return  EnumType.StringType;\r\n    }\r\n\r\n    getEnumValueName():string{\r\n        return this.name;\r\n    }\r\n\r\n    getEnumValue():any{\r\n        return this.value;\r\n    }\r\n    \r\n    /**\r\n     * ææ¬æ¾ç¤º\r\n     */\r\n    name:string;\r\n\r\n    /**\r\n     * å¼æ¾ç¤º\r\n     */\r\n    value:string;\r\n}","import { IEnumValue } from \"./ienumvalue\";\r\nimport { EnumType } from \"./enumtype\";\r\n\r\n/**\r\n * ä¸æåè¡¨Boolç±»å\r\n */\r\nexport class EnumBoolValue implements IEnumValue{\r\n    \r\n    getEnumType(): EnumType {\r\n        return  EnumType.BoolType;\r\n    }\r\n\r\n    getEnumValueName():string{\r\n        return this.name;\r\n    }\r\n\r\n    getEnumValue():any{\r\n        return this.value;\r\n    }\r\n\r\n    /**\r\n     * ææ¬æ¾ç¤º\r\n     */\r\n    name:string;\r\n\r\n    /**\r\n     * å¼æ¾ç¤º\r\n     */\r\n    value:boolean;\r\n}","import { EnumType } from \"./enumtype\";\r\nimport { EnumIntegerValue } from \"./integerenumvalue\";\r\nimport { EnumStringValue } from \"./stringenumvalue\";\r\nimport { EnumBoolValue } from \"./boolenumvalue\";\r\n\r\nexport interface IEnumValue{\r\n    getEnumType():EnumType;\r\n    getEnumValueName():string;\r\n    getEnumValue():any;\r\n}\r\n\r\nexport class EnumValueConvert{\r\n\r\n    convertJObject(obj:IEnumValue):Object{\r\n        let enumValue=obj as IEnumValue;\r\n        let enumType=enumValue.getEnumType();\r\n        let jobj=new Object();\r\n        jobj[\"Type\"]=enumType;\r\n        jobj[\"Content\"]=enumValue;\r\n        return jobj;\r\n    }\r\n\r\n    initFromJobject(jobj:Object):IEnumValue{\r\n        let enumType=jobj[\"Type\"] as EnumType;\r\n        let content=jobj[\"Content\"] as IEnumValue;\r\n        if(enumType==EnumType.IntType){\r\n            return Object.assign(new EnumIntegerValue(),content) ;\r\n        }\r\n        else if(enumType==EnumType.BoolType){\r\n            return Object.assign(new EnumBoolValue(),content) ;\r\n        }\r\n        else{\r\n            return Object.assign(new EnumStringValue(),content) ;\r\n        }\r\n    }\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\nimport { EnumType } from \"./enumtype\";\r\nimport { IEnumValue, EnumValueConvert } from \"./ienumvalue\";\r\nimport { EnumStringValue } from \"./stringenumvalue\";\r\nimport { EnumBoolValue } from \"./boolenumvalue\";\r\nimport { EnumIntegerValue } from \"./integerenumvalue\";\r\n\r\n/**\r\n * ä¸æåè¡¨æ§ä»¶\r\n */\r\nexport class DropDownListControl implements IControl{\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.DropDownList;\r\n    }\r\n    isRequired(): boolean {\r\n        return !!this.require;\r\n    }\r\n    /**\r\n     * ä¸æå¼ç±»å\r\n     */\r\n    valueType: EnumType;\r\n\r\n    /**\r\n     * ä¸ææ°æ®æºåè¡¨\r\n     * è¯¥å±æ§ä¸ºIEnumValueæ¥å£ç±»åï¼å·ä½å®ç°ç±»å¦ä¸ï¼\r\n     * 1.å¸å°ç±»åï¼EnumBoolValue,å¸å°ç±»åçæ§ä»¶ä¼è½¬æä¸æåè¡¨ï¼å®ç°ç±»ä½¿ç¨EnumBoolValue\r\n     * 2.å­ç¬¦ä¸²ç±»åï¼EnumStringValue\r\n     * 3.æ´åç±»åï¼EnumIntegerValue ä¾å¦Radio Buttonç±»åéè¦ä½¿ç¨EnumIntegerValueå®ç°ç±»\r\n     */\r\n    enumValues: Array<IEnumValue>;\r\n\r\n    /**\r\n     * æå¡å¨ç«¯API\r\n     */\r\n    uri: string;\r\n\r\n    /**\r\n     * é¢æ¿æ¾ç¤ºåäºä»¶\r\n     */\r\n    beforeShow: any;\r\n\r\n    /**\r\n     * é¢æ¿éèåäºä»¶\r\n     */\r\n    beforeHide: any;\r\n\r\n    idField: string;\r\n\r\n    textField: string;\r\n\r\n    /**\r\n     * æ¯å¦å¤é\r\n    */\r\n    multiSelect: boolean;\r\n\r\n    /**\r\n     * èªå®ä¹æ ·å¼\r\n    */\r\n    className: string;\r\n\r\n    placeholder: string;\r\n\r\n    panelHeight: number | string;\r\n\r\n    require: boolean;\r\n}\r\n\r\n/**\r\n * ä¸æåè¡¨æ§ä»¶åºååä¸ååºååå¨\r\n */\r\nexport class DropDownListControlConvert{\r\n\r\n    /**\r\n     * åºåå\r\n     * @param obj ä¸æåè¡¨æ§ä»¶å®ä½\r\n     */\r\n    convertToObject(obj: DropDownListControl){\r\n        let dropDownListControl = obj as DropDownListControl;\r\n        let jobj = new Object();\r\n        jobj[\"valueType\"] = dropDownListControl.valueType;\r\n        if(dropDownListControl.enumValues != null){\r\n            let jarray = jobj[\"enumValues\"] = [];\r\n            let convertor = new EnumValueConvert();\r\n            dropDownListControl.enumValues.forEach(element => {\r\n                if(dropDownListControl.valueType == EnumType.BoolType){\r\n                    jarray.push(convertor.convertJObject(Object.assign(new EnumBoolValue(),element)));\r\n                }\r\n                else if(dropDownListControl.valueType == EnumType.IntType){\r\n                    jarray.push(convertor.convertJObject(Object.assign(new EnumIntegerValue(),element)));\r\n                }\r\n                else{\r\n                    jarray.push(convertor.convertJObject(Object.assign(new EnumStringValue(),element)));\r\n                }\r\n            });\r\n        }\r\n        jobj[\"uri\"] = dropDownListControl.uri;\r\n        jobj[\"beforeShow\"] = dropDownListControl.beforeShow;\r\n        jobj[\"beforeHide\"] = dropDownListControl.beforeHide;\r\n        jobj[\"idField\"] = dropDownListControl.idField;\r\n        jobj[\"textField\"] = dropDownListControl.textField;\r\n        jobj[\"multiSelect\"] = dropDownListControl.multiSelect;\r\n        jobj[\"panelHeight\"] = dropDownListControl.panelHeight;\r\n        jobj[\"placeholder\"] = dropDownListControl.placeholder;\r\n        jobj[\"className\"] = dropDownListControl.className;\r\n        jobj[\"require\"] = dropDownListControl.require;\r\n        return jobj;\r\n    }\r\n\r\n    /**\r\n     * ååºåå\r\n     * @param jobj ä¸æåè¡¨æ§ä»¶å®ä½åºåååçJSONå¯¹è±¡\r\n     */\r\n    initFromObject(jobj: Object): DropDownListControl{\r\n        let control = new DropDownListControl();\r\n        if(jobj[\"valueType\"] != null){\r\n            control.valueType = jobj[\"valueType\"] as number;\r\n        }\r\n        if(jobj[\"enumValues\"] != null){\r\n            control.enumValues = new Array<IEnumValue>();\r\n            jobj[\"enumValues\"].forEach(element => {\r\n                let convertor = new EnumValueConvert();\r\n                control.enumValues.push(convertor.initFromJobject(element));\r\n            });\r\n        }\r\n        if(jobj[\"uri\"] != null){\r\n            control.uri = jobj[\"uri\"];\r\n        }\r\n        if(jobj[\"beforeShow\"] != null){\r\n            control.beforeShow = jobj[\"beforeShow\"];\r\n        }\r\n        if(jobj[\"beforeHide\"] != null){\r\n            control.beforeHide = jobj[\"beforeHide\"];\r\n        }\r\n        if(jobj[\"idField\"] != null){\r\n            control.idField = jobj[\"idField\"];\r\n        }\r\n        if(jobj[\"textField\"] != null){\r\n            control.textField = jobj[\"textField\"];\r\n        }\r\n        if(jobj[\"multiSelect\"] != null){\r\n            control.multiSelect = jobj[\"multiSelect\"];\r\n        }\r\n        if(jobj[\"panelHeight\"] != null){\r\n            control.panelHeight = jobj[\"panelHeight\"];\r\n        }\r\n        if(jobj[\"placeholder\"] != null){\r\n            control.placeholder = jobj[\"placeholder\"];\r\n        }\r\n        if(jobj[\"className\"] != null){\r\n            control.className = jobj[\"className\"];\r\n        }\r\n        if(jobj[\"require\"] != null){\r\n            control.require = jobj[\"require\"];\r\n        }\r\n        return control;\r\n    }\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * ææ¬æ§ä»¶\r\n */\r\nexport class TextControl implements IControl {\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»åï¼è¿åå¼ï¼ææ¬æ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.Text;\r\n    }\r\n    isRequired(): boolean {\r\n        return !!this.require;\r\n    }\r\n    /**\r\n     * å­ç¬¦ä¸²é¿åº¦\r\n     */\r\n    length: number;\r\n    /**\r\n     * èªå®ä¹æ ·å¼\r\n    */\r\n    className: string;\r\n\r\n    placeholder: string;\r\n\r\n    require: boolean;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * æ¥æåºé´æ§ä»¶\r\n */\r\nexport class DateRangeControl implements IControl {\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.DateRange;\r\n    }\r\n    isRequired(): boolean {\r\n        return !!this.require;\r\n    }\r\n    /**\r\n     * æ¥ææ ¼å¼\r\n     */\r\n    format: string;\r\n        /**\r\n    * è¿åæå¡å¨ç«¯æ¥ææ ¼å¼\r\n    */\r\n   returnFormat: string;\r\n    /**\r\n     * èªå®ä¹æ ·å¼\r\n    */\r\n    className: string;\r\n        /*\r\n    *ç»ææç¤º\r\n    */\r\n //  beginPlaceHolder: string;\r\n   /**\r\n   * èµ·å§æç¤º\r\n   */\r\n   //endPlaceHolder: string;\r\n    placeholder: string;\r\n    require: boolean;\r\n    weekSelect: boolean;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * æ¥ææ§ä»¶\r\n */\r\nexport class SingleDateControl implements IControl {\r\n\r\n    isRequired(): boolean {\r\n        return !!this.require;\r\n    }\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.SingleDate;\r\n    }\r\n\r\n    /**\r\n     * æ¥ææ ¼å¼\r\n     */\r\n    format: string;\r\n    /**\r\n     * è¿åæå¡å¨ç«¯æ¥ææ ¼å¼\r\n     */\r\n    returnFormat: string;\r\n\r\n    /**\r\n    * èªå®ä¹æ ·å¼\r\n    */\r\n    className: string;\r\n    placeholder: string;\r\n    require: boolean;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * å¸®å©æ§ä»¶\r\n */\r\nexport class SmartHelpContol implements IControl {\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.SmartHelp;\r\n    }\r\n    isRequired(): boolean {\r\n        return !!this.require;\r\n    }\r\n\r\n    /**\r\n     * å¸®å©æ°æ®æº\r\n     */\r\n    uri: string;\r\n\r\n    /**\r\n     * å¸®å©çææ¬æ¾ç¤ºå­æ®µ\r\n     */\r\n    textField: string;\r\n\r\n    /**\r\n     * å¸®å©å¼å­æ®µ\r\n     */\r\n    valueField: string;\r\n\r\n    /**\r\n     * å­æ®µæ å°ä¿¡æ¯\r\n     */\r\n    mapFields: any;\r\n\r\n    /**\r\n     * ä¸»é®\r\n    */\r\n    idField: any;\r\n\r\n    /**\r\n     * å¸®å©å±ç¤ºå½¢å¼ï¼æ®éåè¡¨ï¼æ ç»æ\r\n    */\r\n    displayType: any;\r\n\r\n    /**\r\n     * è¿è¡æ¶åæ°éç½®ä¼ é\r\n    */\r\n    context: any;\r\n\r\n    /**\r\n     * å¸®å©åäºä»¶\r\n    */\r\n    preEventCmd: any;\r\n\r\n    /**\r\n    * å¸®å©åäºä»¶\r\n    */\r\n    postEventCmd: any;\r\n\r\n    /**\r\n     * èªå®ä¹æ ·å¼\r\n    */\r\n    className: string;\r\n\r\n    /**\r\n     * æé å®æ´æ \r\n     */\r\n    enableFullTree: boolean;\r\n\r\n    /**\r\n     * æ°æ®å è½½æ¹å¼\r\n     */\r\n    loadTreeDataType: string;\r\n\r\n    /**\r\n     * æ¯å¦å¤é\r\n     */\r\n    singleSelect: boolean;\r\n\r\n    /**å±å¼å°æå®çº§æ° */\r\n    expandLevel: number;\r\n\r\n    /**\r\n     * å¯ç¨çº§èéæ©\r\n     */\r\n    enableCascade: boolean;\r\n\r\n    /**\r\n     * æ§ä»¶ä¸ºç©ºæ¶æç¤ºä¿¡æ¯ï¼å¼å®¹æ§è¡¨å\r\n     */\r\n    placeholder: string;\r\n\r\n    /**\r\n     * æ§ä»¶æ¯å¦å¿å¡«\r\n     */\r\n    require: boolean;\r\n\r\n    //æææå·¥è¾å¥ãéæ©ä¸¤ç¨æ¶ï¼nosearchè®¾ä¸ºtrue\r\n    nosearch: boolean;\r\n\r\n    /**\r\n     * éæ©æ°æ®åèªå®ä¹æ¾ç¤ºçå­æ®µï¼é»è®¤ä¸ºç©ºï¼ä¸ºç©ºæ¶æ¾ç¤ºå¸®å©è®¾ç½®çææ¬å­æ®µ\r\n     */\r\n    displayFields: string;\r\n\r\n    /**\r\n     * èªå®ä¹æ¾ç¤ºå­æ®µæ¶ï¼ä¸åå­æ®µé´çåéç¬¦\r\n     */\r\n    displayTextSeparator: string;\r\n\r\n    /**\r\n     * æ¯å¦åè®¸ç¼è¾\r\n     */\r\n    editable: boolean;\r\n\r\n    /**\r\n     * å¼ååæ¶ï¼éè¦æ¸ç©ºåªäºå­æ®µ\r\n     */\r\n    clearFields: string;\r\n\r\n    /**\r\n     * å¸®å©æ¸ç©ºäºä»¶\r\n     */\r\n    clear: any;\r\n    /**\r\n     * é»è®¤åé¡µ\r\n     */\r\n    pageSize:number;\r\n    /**\r\n     * åé¡µ\r\n     */\r\n    pageList:string;\r\n   // æ é¢\r\n   dialogTitle: string;\r\n   // å®½åº¦\r\n   panelWidth: number;\r\n   // é«åº¦\r\n   panelHeight: number;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * æ°å­åºé´æ§ä»¶\r\n */\r\nexport class NumberRangeControl implements IControl {\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.NumberRange;\r\n    }\r\n    isRequired(): boolean {\r\n        return !!this.require;\r\n    }\r\n    /**\r\n     * é¿åº¦\r\n     */\r\n    length: number;\r\n\r\n    /**\r\n     * ç²¾åº¦\r\n     */\r\n    precision: number;\r\n    /**\r\n     * èªå®ä¹æ ·å¼\r\n    */\r\n    className: string;\r\n    /*\r\n    *ç»ææç¤º\r\n    */\r\n   //beginPlaceHolder: string;\r\n   /**\r\n   * èµ·å§æç¤º\r\n   */\r\n  // endPlaceHolder: string;\r\n\r\n    placeholder: string;\r\n\r\n    require: boolean;\r\n\r\n    textAlign: string;\r\n\r\n    bigNumber: boolean;\r\n\r\n    min: number;\r\n    max: number;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * æ°å­åºé´æ§ä»¶\r\n */\r\nexport class SingleNumberControl implements IControl {\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.SingleNumber;\r\n    }\r\n    isRequired(): boolean {\r\n        return !!this.require;\r\n    }\r\n    /**\r\n     * é¿åº¦\r\n     */\r\n    length: number;\r\n\r\n    /**\r\n     * ç²¾åº¦\r\n     */\r\n    precision: number;\r\n    /**\r\n    * èªå®ä¹æ ·å¼\r\n    */\r\n    className: string;\r\n\r\n    placeholder: string;\r\n\r\n    require: boolean;\r\n\r\n    textAlign: string;\r\n\r\n    bigNumber: boolean;\r\n\r\n    min: number;\r\n    max: number;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * æ¥ææ§ä»¶\r\n */\r\nexport class SingleYearControl implements IControl {\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.SingleYear;\r\n    }\r\n    isRequired(): boolean {\r\n        return !!this.require;\r\n    }\r\n    /**\r\n     * æ¥ææ ¼å¼\r\n     */\r\n    format: string;\r\n     /**\r\n     * è¿åæå¡å¨ç«¯æ¥ææ ¼å¼\r\n     */\r\n    returnFormat:string;\r\n    /**\r\n     * èªå®ä¹æ ·å¼\r\n    */\r\n    className: string;\r\n    placeholder: string;\r\n    require: boolean;\r\n    \r\n    // æå¤§å¼\r\n    maxDate:string|Date|null;\r\n    // æå°å¼\r\n    minDate:string|Date|null;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\ninterface Checkbox {\r\n    value: any;\r\n    name: any;\r\n}\r\n/**\r\n * æ¥ææ§ä»¶\r\n */\r\nexport class CheckBoxControl implements IControl {\r\n    \r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.BoolCheck;\r\n    }\r\n    isRequired(): boolean {\r\n        return !!this.require;\r\n    }\r\n    /**\r\n    * èªå®ä¹æ ·å¼\r\n    */\r\n    className: string;\r\n    /* radio æ°ç» */\r\n    data: Checkbox[] = [];\r\n    /* å¤éæ¡name */\r\n    name: string;\r\n    /* æ¯å¦æ°´å¹³åå¸ */\r\n    horizontal: boolean;\r\n    /* ç¦ç¨ */\r\n    disable: boolean;\r\n    /* å¤éæ¡ç»çå¼ */\r\n    value: any;\r\n    /* åéç¬¦ é»è®¤éå·*/\r\n    separator = ',';\r\n    /* å¼ç±»åæ¯å¦æ¯string */\r\n    isStringValue = true;\r\n\r\n    require: boolean;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * æ¥æåºé´æ§ä»¶\r\n */\r\nexport class DateTimeRangeControl implements IControl {\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.DateTimeRange;\r\n    }\r\n    isRequired(): boolean {\r\n        return !!this.require;\r\n    }\r\n        /**\r\n     * å¼ºå¶ä½¿ç¨èªå®ä¹æ ¼å¼\r\n     */\r\n    enableCustomFormat:boolean;\r\n\r\n    /**\r\n     * æ¥ææ ¼å¼\r\n     */\r\n    format: string;\r\n         /**\r\n     * è¿åæå¡å¨ç«¯æ¥ææ ¼å¼\r\n     */\r\n    returnFormat:string;\r\n\r\n    /**\r\n     * èªå®ä¹æ ·å¼\r\n    */\r\n    className: string;\r\n    placeholder: string;\r\n    require: boolean;\r\n        // èµ·å§æç¤º\r\n       // beginPlaceHolder:string;\r\n        // ç»ææç¤º\r\n      //  endPlaceHolder:string;\r\n    \r\n    //weekSelect: boolean;\r\n    //showWeekNumbers: boolean;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * æ¥ææ§ä»¶\r\n */\r\nexport class SingleMonthControl implements IControl {\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.SingleMonth;\r\n    }\r\n    isRequired(): boolean {\r\n        return !!this.require;\r\n    }\r\n    /**\r\n     * æ¥ææ ¼å¼\r\n     */\r\n    format: string;\r\n    /**\r\n     * è¿åæå¡å¨ç«¯æ¥ææ ¼å¼\r\n     */\r\n    returnFormat:string;\r\n    /**\r\n     * èªå®ä¹æ ·å¼\r\n    */\r\n    className: string;\r\n    placeholder: string;\r\n    require: boolean;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * æ¥æåºé´æ§ä»¶\r\n */\r\nexport class MonthRangeControl implements IControl {\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.MonthRange;\r\n    }\r\n    isRequired(): boolean {\r\n        return !!this.require;\r\n    }\r\n    /**\r\n     * æ¥ææ ¼å¼\r\n     */\r\n    format: string;\r\n        /**\r\n    * è¿åæå¡å¨ç«¯æ¥ææ ¼å¼\r\n    */\r\n   returnFormat: string;\r\n   /*\r\n  *ç»ææç¤º\r\n  */\r\n //beginPlaceHolder: string;\r\n /**\r\n * èµ·å§æç¤º\r\n */\r\n// endPlaceHolder: string;\r\n\r\n    /**\r\n     * èªå®ä¹æ ·å¼\r\n    */\r\n    className: string;\r\n    placeholder: string;\r\n    require: boolean;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * æ¥ææ§ä»¶\r\n */\r\nexport class SingleDateTimeControl implements IControl {\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.SingleDateTime;\r\n    }\r\n    isRequired(): boolean {\r\n        return !!this.require;\r\n    }\r\n       /**\r\n     * å¼ºå¶ä½¿ç¨èªå®ä¹æ ¼å¼\r\n     */\r\n    enableCustomFormat:boolean;\r\n    /**\r\n     * æ¥ææ ¼å¼\r\n     */\r\n    format: string;\r\n    /**\r\n     * è¿åæå¡å¨ç«¯æ¥ææ ¼å¼\r\n     */\r\n    returnFormat: string;\r\n\r\n    /**\r\n     * èªå®ä¹æ ·å¼\r\n    */\r\n    className: string;\r\n    placeholder: string;\r\n    require: boolean;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * å¸®å©æ§ä»¶\r\n */\r\nexport class ComboLookUpControl implements IControl {\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.ComboLookUp;\r\n    }\r\n    isRequired(): boolean {\r\n        return !!this.require;\r\n    }\r\n    /**\r\n     * ä¸æå¸®å©æ°æ®æº\r\n     */\r\n    uri: string;\r\n\r\n    /**\r\n     * ä¸»é®\r\n     */\r\n    idField: any;\r\n\r\n    /**\r\n     * ä¸æå¸®å©å¼å­æ®µ\r\n     */\r\n    valueField: string;\r\n\r\n    /**\r\n     * ä¸æå¸®å©ææ¬æ¾ç¤ºå­æ®µ\r\n     */\r\n    textField: string;\r\n\r\n    /**\r\n     * å­æ®µæ å°ä¿¡æ¯\r\n     */\r\n    mapFields: any;\r\n\r\n    /**\r\n     * ä¸æå¸®å©å±ç¤ºå½¢å¼ï¼ä¸æåè¡¨å¸®å©ï¼ä¸ææ åè¡¨å¸®å©\r\n     */\r\n    displayType: any;\r\n\r\n    /**\r\n     * å¸®å©åäºä»¶\r\n     */\r\n    preEventCmd: any;\r\n\r\n    /**\r\n     * å¸®å©åäºä»¶\r\n     */\r\n    postEventCmd: any;\r\n\r\n    /**\r\n     * æ¯å¦å¤é\r\n     */\r\n    singleSelect: boolean;\r\n\r\n    /**\r\n     * èªå®ä¹æ ·å¼\r\n     */\r\n    className: string;\r\n\r\n    placeholder: string;\r\n\r\n    panelWidth: number;\r\n\r\n    panelHeight: number;\r\n\r\n    require: boolean;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\nimport { EnumType } from \"../dropdownlist/enumtype\";\r\nimport { IEnumValue, EnumValueConvert } from \"../dropdownlist/ienumvalue\";\r\nimport { EnumStringValue } from \"../dropdownlist/stringenumvalue\";\r\nimport { EnumBoolValue } from \"../dropdownlist/boolenumvalue\";\r\nimport { EnumIntegerValue } from \"../dropdownlist/integerenumvalue\";\r\n\r\n/**\r\n * åéç»æ§ä»¶\r\n */\r\nexport class RadioControl implements IControl {\r\n    \r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.Radio;\r\n    }\r\n    isRequired(): boolean {\r\n        return !!this.require;\r\n    }\r\n    /**\r\n     * åéæ¡å¼ç±»å\r\n     */\r\n    valueType: EnumType;\r\n\r\n    /**\r\n     * åéæ¡æ°æ®æºåè¡¨\r\n     * è¯¥å±æ§ä¸ºIEnumValueæ¥å£ç±»åï¼å·ä½å®ç°ç±»å¦ä¸ï¼\r\n     * 1.å¸å°ç±»åï¼EnumBoolValue\r\n     * 2.å­ç¬¦ä¸²ç±»åï¼EnumStringValue\r\n     * 3.æ´åç±»åï¼EnumIntegerValue ä¾å¦Radio Buttonç±»åéè¦ä½¿ç¨EnumIntegerValueå®ç°ç±»\r\n     */\r\n    enumValues: Array<IEnumValue>;\r\n\r\n    /**\r\n    * èªå®ä¹æ ·å¼\r\n    */\r\n    className: string;\r\n\r\n    /**\r\n     * æ¯å¦æ¾ç¤ºlabel\r\n     */\r\n    showLabel: boolean;\r\n    \r\n    /* æ¯å¦æ°´å¹³åå¸ */\r\n    horizontal: boolean;\r\n    \r\n    /* æ¯å¦ç¦ç¨ */\r\n    disabled: boolean;\r\n    \r\n    require: boolean;\r\n}\r\n\r\n/**\r\n* åéç»æ§ä»¶åºååä¸ååºååå¨\r\n*/\r\nexport class RadioControlConvert{\r\n    /**\r\n     * åºåå\r\n     * @param obj åéç»æ§ä»¶å®ä½\r\n     */\r\n    convertToObject(obj: RadioControl){\r\n        let radioControl = obj as RadioControl;\r\n        let jobj = new Object();\r\n        jobj[\"valueType\"] = radioControl.valueType;\r\n        if(radioControl.enumValues != null){\r\n            let jarray = jobj[\"enumValues\"] = [];\r\n            let convertor = new EnumValueConvert();\r\n            radioControl.enumValues.forEach(element => {\r\n                if(radioControl.valueType == EnumType.BoolType){\r\n                    jarray.push(convertor.convertJObject(Object.assign(new EnumBoolValue(),element)));\r\n                }\r\n                else if(radioControl.valueType == EnumType.IntType){\r\n                    jarray.push(convertor.convertJObject(Object.assign(new EnumIntegerValue(),element)));\r\n                }\r\n                else{\r\n                    jarray.push(convertor.convertJObject(Object.assign(new EnumStringValue(),element)));\r\n                }\r\n            });\r\n        }\r\n        jobj[\"horizontal\"] = radioControl.horizontal;\r\n        jobj[\"showLabel\"] = radioControl.showLabel;\r\n        jobj[\"disabled\"] = radioControl.disabled;\r\n        jobj[\"className\"] = radioControl.className;\r\n        jobj[\"require\"] = radioControl.require;\r\n        return jobj;\r\n    }\r\n\r\n    /**\r\n     * ååºåå\r\n     * @param jobj åéç»æ§ä»¶å®ä½åºåååçJSONå¯¹è±¡\r\n     */\r\n    initFromObject(jobj: Object): RadioControl{\r\n        let control = new RadioControl();\r\n        if(jobj[\"valueType\"] != null){\r\n            control.valueType = jobj[\"valueType\"] as number;\r\n        }\r\n        if(jobj[\"enumValues\"] != null){\r\n            control.enumValues = new Array<IEnumValue>();\r\n            jobj[\"enumValues\"].forEach(element => {\r\n                let convertor = new EnumValueConvert();\r\n                control.enumValues.push(convertor.initFromJobject(element));\r\n            });\r\n        }\r\n        if(jobj[\"horizontal\"] != null){\r\n            control.horizontal = jobj[\"horizontal\"];\r\n        }\r\n        if(jobj[\"showLabel\"] != null){\r\n            control.showLabel = jobj[\"showLabel\"];\r\n        }\r\n        if(jobj[\"disabled\"] != null){\r\n            control.disabled = jobj[\"disabled\"];\r\n        }\r\n        if(jobj[\"className\"] != null){\r\n            control.className = jobj[\"className\"];\r\n        }\r\n        if(jobj[\"require\"] != null){\r\n            control.require = jobj[\"require\"];\r\n        }\r\n        return control;\r\n    }\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * æºè½è¾å¥æ¡æ§ä»¶\r\n */\r\nexport class InputGroupControl implements IControl {\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»åï¼è¿åå¼ï¼æºè½è¾å¥æ¡æ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.InputGroup;\r\n    }\r\n    isRequired(): boolean {\r\n        return !!this.require;\r\n    }\r\n    \r\n    /**\r\n     * èªå®ä¹æ ·å¼\r\n    */\r\n    className: string;\r\n\r\n    /**\r\n     * æ¯å¦å¿å¡«\r\n     */\r\n    require: boolean;\r\n\r\n    /**\r\n     * æ¯å¦åè®¸è¾å¥\r\n     */\r\n    editable: boolean;\r\n\r\n    /**\r\n     * æé®æ¾ç¤ºææ¬\r\n     */\r\n    groupText: string;\r\n\r\n    /**\r\n     * ä½¿ç¨æ¨¡å¼ï¼ææ¬ãå¼¹åºè¡¨åï¼\r\n     */\r\n    usageMode: string;\r\n\r\n    /**\r\n     * å¼¹åºè¡¨åç¸å³éç½®\r\n     */\r\n    dialogOptions: DialogConfig;\r\n\r\n    /**\r\n     * æé®ç¹å»äºä»¶\r\n     */\r\n    click: any;\r\n}\r\n\r\nexport class DialogConfig {\r\n    modalId: string;\r\n    mapFields: any;\r\n    title: string;\r\n    width: number;\r\n    height: number;\r\n    showCloseButton:boolean;\r\n    showMaxButton:boolean;\r\n    showHeader:boolean;\r\n}","import { ControlType } from \"../controltype\";\r\nimport { DropDownListControl, DropDownListControlConvert } from \"./dropdownlist/dropdownlistcontrol\";\r\nimport { TextControl } from \"./text/textcontrol\";\r\nimport { DateRangeControl } from \"./daterange/date-range.control\";\r\nimport { SingleDateControl } from \"./date/single-date-control\";\r\nimport { SmartHelpContol } from \"./smarthelp/smarthelpcontrol\";\r\nimport { NumberRangeControl } from \"./numberrange/numberrangecontrol\";\r\nimport { SingleNumberControl } from './number/single-number-control';\r\nimport { SingleYearControl } from './year/year-control';\r\nimport { CheckBoxControl } from './checkbox/checkbox-control';\r\nimport { DateTimeRangeControl } from './daterange/datertime-range-control';\r\nimport { SingleMonthControl } from './month/month-control';\r\nimport { MonthRangeControl } from './monthrange/month-range-control';\r\nimport { SingleDateTimeControl } from './date/single-date-time-control';\r\nimport { ComboLookUpControl } from './combolookup/combolookup-control';\r\nimport { RadioControl, RadioControlConvert } from './radio/radio-control';\r\nimport { InputGroupControl } from './input-group/inputgroupcontrol';\r\n\r\n/**\r\n * æ§ä»¶æ¥å£\r\n */\r\nexport interface IControl {\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType;\r\n\r\n    /**\r\n     * æ§ä»¶æ¯å¦å¿å¡«\r\n     */\r\n    isRequired(): boolean;\r\n}\r\n\r\nexport class ControlConvert {\r\n    convertJObject(obj: IControl): Object {\r\n        let control = obj as IControl;\r\n        let controlType = control.getControlType();\r\n        let jobj = new Object();\r\n        jobj[\"Type\"] = controlType;\r\n\r\n        if(controlType == ControlType.DropDownList) { \r\n            let convertor = new DropDownListControlConvert();\r\n            jobj[\"Content\"] = convertor.convertToObject(control as DropDownListControl);\r\n        }\r\n        else if(controlType == ControlType.Radio) {\r\n            let convertor = new RadioControlConvert();\r\n            jobj[\"Content\"] = convertor.convertToObject(control as RadioControl);\r\n        }\r\n        else {\r\n            jobj[\"Content\"] = control;\r\n        }\r\n        return jobj;\r\n    }\r\n\r\n    initFromJobject(jobj: Object): IControl {\r\n        let controlType = jobj[\"Type\"] as ControlType;\r\n        let content: IControl = jobj[\"Content\"];\r\n\r\n        if(controlType==ControlType.Text)\r\n            return Object.assign(new TextControl(), content as TextControl);\r\n        \r\n        if(controlType == ControlType.InputGroup)\r\n            return Object.assign(new InputGroupControl(), content as InputGroupControl);\r\n        \r\n        if(controlType == ControlType.DateRange)\r\n            return Object.assign(new DateRangeControl(), content as DateRangeControl);\r\n\r\n        if(controlType == ControlType.NumberRange)\r\n            return Object.assign(new NumberRangeControl(), content as NumberRangeControl);\r\n\r\n        if(controlType == ControlType.SingleDate)\r\n            return Object.assign(new SingleDateControl(), content as SingleDateControl);\r\n\r\n        if(controlType == ControlType.SingleNumber)\r\n            return Object.assign(new SingleNumberControl(), content as SingleNumberControl);\r\n\r\n        if(controlType == ControlType.DropDownList)\r\n            return new DropDownListControlConvert().initFromObject(content);\r\n\r\n        if(controlType == ControlType.SmartHelp)\r\n            return Object.assign(new SmartHelpContol(), content as SmartHelpContol);\r\n\r\n        if(controlType == ControlType.ComboLookUp)\r\n            return Object.assign(new ComboLookUpControl(), content as ComboLookUpControl);\r\n\r\n        if(controlType == ControlType.SingleYear)\r\n            return Object.assign(new SingleYearControl(), content as SingleYearControl);\r\n\r\n        if(controlType == ControlType.SingleMonth)\r\n            return Object.assign(new SingleMonthControl(), content as SingleMonthControl);\r\n\r\n        if(controlType == ControlType.BoolCheck)\r\n            return Object.assign(new CheckBoxControl(), content as CheckBoxControl);\r\n\r\n        if(controlType == ControlType.Radio)\r\n            return new RadioControlConvert().initFromObject(content);\r\n\r\n        if(controlType == ControlType.DateTimeRange)\r\n            return Object.assign(new DateTimeRangeControl(), content as DateTimeRangeControl);\r\n\r\n        if(controlType == ControlType.MonthRange)\r\n            return Object.assign(new MonthRangeControl(), content as MonthRangeControl);\r\n\r\n        if(controlType == ControlType.SingleDateTime)\r\n            return Object.assign(new SingleDateTimeControl(), content as SingleDateTimeControl);\r\n    }\r\n}","import { IValue } from \"./ivalue\";\r\nimport { ControlType } from \"../controltype\";\r\n\r\nexport class TextValue implements IValue{\r\n    clearValue(): void {\r\n        this.value = undefined;\r\n    }\r\n    setOriginalValue(value: any): void {\r\n        this.value = value;\r\n    }\r\n    getOriginalValue() {\r\n        return this.value;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.Text;\r\n    }\r\n    value:string;\r\n    constructor(data: {value: string} = {value : ''}){\r\n        // this.value = data.value ? data.value.trim() : '';\r\n        this.value = data.value ? data.value : '';\r\n    }\r\n    isEmpty(): boolean {\r\n        return !this.value;\r\n    }\r\n}","import { IValue } from \"./ivalue\";\r\nimport { ControlType } from \"../controltype\";\r\n\r\nexport class NumberRangeValue implements IValue {\r\n    isEmpty(): boolean {\r\n        return (this.startValue == null && this.endValue == null);\r\n    }\r\n    clearValue(): void {\r\n        this.startValue = undefined;\r\n        this.endValue = undefined;\r\n    }\r\n    setOriginalValue(value: any): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    getOriginalValue() {\r\n        return {\r\n            begin: this.startValue,\r\n            end: this.endValue\r\n        };\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.NumberRange;\r\n    }\r\n    startValue: number;\r\n    endValue: number;\r\n    constructor(data: {startValue: string, endValue: string} = {startValue: null, endValue: null}){\r\n        this.startValue = data.startValue == null ? null : parseFloat(data.startValue);\r\n        this.endValue = data.endValue == null ? null : parseFloat(data.endValue);\r\n    }\r\n}\r\n\r\nexport class NumberRangeValueConvertor {\r\n    convertToObject(obj: IValue): Object {\r\n        let numberRangeValue = obj as NumberRangeValue;\r\n        let jobj = new Object();\r\n        jobj[\"startValue\"] = numberRangeValue.startValue;\r\n        jobj[\"endValue\"] = numberRangeValue.endValue;\r\n        return jobj;\r\n    }\r\n\r\n    initFromObject(jobj: Object): NumberRangeValue {\r\n        let numberRangeValue = new NumberRangeValue();\r\n        if (jobj[\"startValue\"]) {\r\n            //key pointï¼as Numberå¹¶ä¸ä¼è½¬åæ ¼å¼\r\n            numberRangeValue.startValue = parseFloat(jobj[\"startValue\"]);\r\n        }\r\n        if (jobj[\"endValue\"]) {\r\n            numberRangeValue.endValue = parseFloat(jobj[\"endValue\"]);\r\n        }\r\n        return numberRangeValue;\r\n    }\r\n}","import { IValue } from \"./ivalue\";\r\nimport { ControlType } from \"../controltype\";\r\n\r\nexport class DateRangeValue implements IValue {\r\n  setOriginalValue(value: { formatted: string, delimiter: string }): void {\r\n    if (value.formatted) {\r\n      this.startTime = value.formatted.split(value.delimiter)[0];\r\n      this.endTime = value.formatted.split(value.delimiter)[1];\r\n    } else {\r\n      this.clearValue();\r\n    }\r\n  }\r\n  getOriginalValue() {\r\n     if(!this.startTime||!this.endTime){\r\n      return '';\r\n     }\r\n    return `${this.startTime}~${this.endTime}`;\r\n  }\r\n  getControlType(): ControlType {\r\n    return ControlType.DateRange;\r\n  }\r\n  clearValue(): void {\r\n    this.startTime = undefined;\r\n    this.endTime = undefined;\r\n  }\r\n  startTime: string;\r\n  endTime: string;\r\n\r\n  constructor(value: { startTime: string, endTime: string } = { startTime: '', endTime: '' }) {\r\n    this.startTime = value.startTime;\r\n    this.endTime = value.endTime;\r\n  }\r\n  isEmpty(): boolean {\r\n    return !this.startTime || !this.endTime;\r\n  }\r\n}\r\n","import { IValue } from \"./ivalue\";\r\nimport { ControlType } from \"../controltype\";\r\nimport { cloneDeep } from 'lodash-es';\r\n\r\nexport class SmartHelpValue implements IValue{\r\n\r\n    getControlType(): ControlType {\r\n        return ControlType.SmartHelp;\r\n    }\r\n\r\n    setOriginalValue(value: any): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    getOriginalValue(): string {\r\n        const args = this.valueField.split('.');\r\n        const valueArr = this.value.map(helpItem => this.getPropValue(helpItem, cloneDeep(args)));\r\n        return valueArr && valueArr.length ? valueArr.join(',') : '';\r\n    }\r\n\r\n    clearValue(): void {\r\n        this.value = [];\r\n        this.valueField = undefined;\r\n        this.textValue = undefined;\r\n        this.isInputText = undefined;\r\n    }\r\n    \r\n    isEmpty(): boolean {\r\n        return !this.value.length;\r\n    }\r\n\r\n    value: any[];\r\n    valueField: string;\r\n    textValue: string;\r\n    //å¸®å©çå¼æ¯å¦ä¸ºæå¨è¾å¥çä»»æå¼ï¼å¯¹åºå¸®å©çä»»æè¾å¥å±æ§nosearch\r\n    isInputText: boolean; \r\n\r\n    constructor(data: {\r\n        value: any, \r\n        valueField: string,\r\n        textValue: string,\r\n        isInputText: boolean\r\n    } = {value: [], valueField: undefined, textValue: undefined, isInputText: undefined}){\r\n        if(data.textValue){\r\n            this.value = data.value;\r\n            this.valueField = data.valueField;\r\n            this.textValue = data.textValue;\r\n            this.isInputText = data.isInputText;\r\n        }else{\r\n            //å¸®å©æªæ¯æå¤éæ¶ï¼æ²¡ætextValueå±æ§ï¼ææå¼é½æ¯éè¿éæ©äº§çç\r\n            this.value = data.value;\r\n            this.valueField = data.valueField ? data.valueField : '';\r\n            this.textValue = 'help-text-value-null'; \r\n            this.isInputText = false;\r\n        }\r\n    }\r\n\r\n    getTextValue(textField: string): string {\r\n        const args = textField.split('.');\r\n        const textArr = this.value.map(helpItem => this.getPropValue(helpItem, cloneDeep(args)));\r\n        return textArr && textArr.length ? textArr.join(',') : '';\r\n    }\r\n\r\n    getPropValue(helpItem: any, args: Array<string>): any{\r\n        if(args.length > 1){\r\n            const arg = args.shift();\r\n            return helpItem[arg] ? this.getPropValue(helpItem[arg], args) : null;\r\n        }\r\n        return helpItem[args[0]];\r\n    }\r\n}","import { IValue } from \"./ivalue\";\r\nimport { ControlType } from \"../controltype\";\r\n\r\nexport class SingleDateValue implements IValue{\r\n    setOriginalValue(value: any): void {\r\n        this.dateValue = value.formatted;\r\n    }\r\n    getOriginalValue() {\r\n        return this.dateValue;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.SingleDate;\r\n    }\r\n    dateValue: string;\r\n    \r\n    constructor(date: string = ''){\r\n        this.dateValue = date;\r\n    }\r\n    isEmpty(): boolean {\r\n        return !this.dateValue;\r\n    }\r\n    clearValue(): void {\r\n        this.dateValue = undefined;\r\n    }\r\n}","import { IValue } from \"./ivalue\";\r\nimport { ControlType } from \"../controltype\";\r\n\r\nexport class SingleNumberValue implements IValue{\r\n    isEmpty(): boolean {\r\n        return this.numValue == null;\r\n    }\r\n    clearValue(): void {\r\n        this.numValue = undefined;\r\n    }\r\n    setOriginalValue(value: any): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    getOriginalValue() {\r\n        return this.numValue;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.SingleNumber;\r\n    }\r\n    numValue: number;\r\n\r\n    constructor(data: string = null){\r\n        this.numValue = data == null ? null : parseFloat(data);\r\n    }\r\n}","import { IValue } from \"./ivalue\";\r\nimport { ControlType } from \"../controltype\";\r\n\r\nexport class SingleYearValue implements IValue{\r\n    setOriginalValue(value: any): void {\r\n        this.yearValue = value.formatted;\r\n    }\r\n    getOriginalValue() {\r\n        return this.yearValue;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.SingleYear;\r\n    }\r\n    clearValue(): void {\r\n        this.yearValue = undefined;\r\n    }\r\n    yearValue: string;\r\n    constructor(year: string = ''){\r\n        this.yearValue = year;\r\n    }\r\n    isEmpty(): boolean {\r\n        return !this.yearValue;\r\n    }\r\n}","import { IValue } from \"./ivalue\";\r\nimport { ControlType } from \"../controltype\";\r\n// CheckBoxValueåå§åï¼ä¸'app-solution-checkbox'ç»ä»¶åå§åæ¯åç¦»ç\r\n// CheckBoxValue è¦æ±valueæ¯å¸å°ç±»åï¼ç»ä»¶è¦æ±valueæ¯trueæ¶ï¼å¼åºä¸ºtrueå­ç¬¦ä¸²\r\nexport class CheckBoxValue implements IValue{\r\n    clearValue(): void {\r\n        this.value = [];\r\n    }\r\n    // å¦æç»ä»¶çè¿åå¼æ¯å­ç¬¦ä¸²ï¼è½¬åä¸ºå¸å°å¼\r\n    setOriginalValue(value: any[]): void {\r\n        if(value.length){\r\n            this.value = value.map(v => {\r\n               if(typeof v == 'string'){\r\n                 return true;\r\n               }else {\r\n                 return v;\r\n               }\r\n            });\r\n         }else{\r\n            this.value = value;\r\n         }\r\n    }\r\n    // æCheckBoxValueçtrueå¸å°å¼ï¼è½¬åä¸ºç»ä»¶å¯è¯å«çå­ç¬¦ä¸²\r\n    getOriginalValue() {\r\n        if(this.value.length){\r\n          return this.value.map(v => {\r\n            if(v === true){\r\n              return \"true\";\r\n            }else{\r\n              return v;\r\n            }\r\n          });\r\n        }\r\n        return this.value;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.BoolCheck;\r\n    }\r\n    value: any[];\r\n    // CheckBoxValue åå§åï¼ä¼ å¥çå¼æªåä»»ä½ä¿®æ¹\r\n    constructor(value: any[] = []){\r\n        this.value = value;\r\n    }\r\n    isEmpty(): boolean {\r\n        return this.value.length == 0;\r\n    }\r\n}","import { IValue } from \"./ivalue\";\r\nimport { ControlType } from \"../controltype\";\r\nimport { IEnumValue, EnumValueConvert } from \"../controltype/dropdownlist/ienumvalue\";\r\n\r\nexport class DropDownListValue implements IValue{\r\n    clearValue(): void {\r\n        this.value = [];\r\n        this.key = undefined;\r\n    }\r\n    setOriginalValue(data): void {}\r\n    getOriginalValue() {\r\n        return this.key;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.DropDownList;\r\n    }\r\n    value: any = [];//æ§ç»æ{Type: '', Content: {value: string, name: string}} æ°ç»æArray[{value: string, name: string}]\r\n    key: string;//æ§ç»ææ ï¼æ°ç»æä¸ºéä¸­çvalueå¼ï¼å¤éæ¯ä»¥,åå²çå­ç¬¦ä¸²\r\n    constructor(data: {value: any, key: string} = {value: [], key: undefined}){\r\n        if(data.value && data.value.length > 0){//å·²æåå§å¼[]\r\n            if(data.hasOwnProperty('key')){//æ°ç»æ\r\n                this.value = data.value;\r\n                this.key = data.key;\r\n            }else{//æ§ç»æ\r\n                this.value = data.value['Content'] && data.value['Content'].value ? [data.value['Content']] : [];\r\n                this.key = data.value['Content'] && data.value['Content'].value ? data.value['Content'].value: undefined;\r\n            }\r\n        }else{\r\n            this.clearValue();\r\n        }\r\n    }\r\n    isEmpty(): boolean {\r\n        return !this.key;\r\n    }\r\n}","import { IValue } from \"./ivalue\";\r\nimport { ControlType } from \"../controltype\";\r\n\r\nexport class SingleMonthValue implements IValue{\r\n    setOriginalValue(value: any): void {\r\n        this.monthValue = value.formatted;\r\n    }\r\n    getOriginalValue() {\r\n        return this.monthValue;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.SingleMonth;\r\n    }\r\n    clearValue(): void {\r\n        this.monthValue = undefined;\r\n    }\r\n    monthValue: string;\r\n    constructor(month: string = ''){\r\n        this.monthValue = month;\r\n    }\r\n    isEmpty(): boolean {\r\n        return !this.monthValue;\r\n    }\r\n}","import { IValue } from \"./ivalue\";\r\nimport { ControlType } from \"../controltype\";\r\n\r\nexport class MonthRangeValue implements IValue {\r\n  setOriginalValue(value: { formatted: string, delimiter: string }): void {\r\n    if (value.formatted) {\r\n      this.startTime = value.formatted.split(value.delimiter)[0];\r\n      this.endTime = value.formatted.split(value.delimiter)[1];\r\n    } else {\r\n      this.clearValue();\r\n    }\r\n  }\r\n  getOriginalValue() {\r\n    if(!this.startTime||!this.endTime){\r\n      return '';\r\n     }\r\n    return `${this.startTime}~${this.endTime}`;\r\n  }\r\n  getControlType(): ControlType {\r\n    return ControlType.MonthRange;\r\n  }\r\n  clearValue(): void {\r\n    this.startTime = undefined;\r\n    this.endTime = undefined;\r\n  }\r\n  startTime: string;\r\n  endTime: string;\r\n\r\n  constructor(value: { startTime: string, endTime: string } = { startTime: '', endTime: '' }) {\r\n    this.startTime = value.startTime;\r\n    this.endTime = value.endTime;\r\n  }\r\n  isEmpty(): boolean {\r\n    return !this.startTime || !this.endTime;\r\n  }\r\n}\r\n","import { IValue } from \"./ivalue\";\r\nimport { ControlType } from \"../controltype\";\r\n\r\nexport class SingleDateTimeValue implements IValue{\r\n    setOriginalValue(value: any): void {\r\n        this.datetimeValue = value.formatted;\r\n    }\r\n    getOriginalValue() {\r\n        return this.datetimeValue;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.SingleDateTime;\r\n    }\r\n    datetimeValue: string;\r\n    \r\n    constructor(datetime: string = ''){\r\n        this.datetimeValue = datetime;\r\n    }\r\n    isEmpty(): boolean {\r\n        return !this.datetimeValue;\r\n    }\r\n    clearValue(): void {\r\n        this.datetimeValue = undefined;\r\n    }\r\n}","import { IValue } from \"./ivalue\";\r\nimport { ControlType } from \"../controltype\";\r\nimport { cloneDeep } from 'lodash-es';\r\n\r\nexport class ComboLookUpValue implements IValue{\r\n    clearValue(): void {\r\n        this.value = [];\r\n        this.valueField = undefined;\r\n        this.textValue = undefined;\r\n    }\r\n    setOriginalValue(value: any): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    getOriginalValue(): string {\r\n        const args = this.valueField.split('.');\r\n        const valueArr = this.value.map(helpItem => this.getPropValue(helpItem, cloneDeep(args)));\r\n        return valueArr && valueArr.length ? valueArr.join(',') : '';\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.ComboLookUp;\r\n    }\r\n\r\n    valueField:string;\r\n    value:any[];\r\n    textValue: string;\r\n\r\n    constructor(data: {\r\n        value: any, \r\n        valueField: string,\r\n        textValue: string;\r\n    } = {value: [], valueField: undefined, textValue: undefined}){\r\n        if(data.textValue){//æ°ç»æï¼valueæ¯æ°ç»\r\n            this.valueField = data.valueField;\r\n            this.value = data.value;\r\n            this.textValue = data.textValue;\r\n        }else{//æ§ç»æï¼valueæ¯å¯¹è±¡\r\n            this.valueField = data.valueField ? data.valueField : '';\r\n            this.value = (data.value && data.value.data) ? [data.value.data] : [];\r\n            this.textValue = 'help-text-value-null'; //æ§ç»ææ textValueå±æ§\r\n        }\r\n\r\n    }\r\n    isEmpty(): boolean {\r\n        return !this.valueField;\r\n    }\r\n\r\n    getPropValue(helpItem: any, args: Array<string>): any{\r\n        if(args.length > 1){\r\n            const arg = args.shift();\r\n            return helpItem[arg] ? this.getPropValue(helpItem[arg], args) : null;\r\n        }\r\n        return helpItem[args[0]];\r\n    }\r\n\r\n    getTextValue(textField: string): string {\r\n        const args = textField.split('.');\r\n        const textArr = this.value.map(helpItem => this.getPropValue(helpItem, cloneDeep(args)));\r\n        return textArr && textArr.length ? textArr.join(',') : '';\r\n    }\r\n\r\n}","import { IValue } from \"./ivalue\";\r\nimport { ControlType } from \"../controltype\";\r\n\r\nexport class RadioValue implements IValue {\r\n    clearValue(): void {\r\n        this.value = undefined;\r\n    }\r\n    setOriginalValue(value: any): void {\r\n        this.value = value;\r\n    }\r\n    getOriginalValue(): any {\r\n        return this.value;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.Radio;\r\n    }\r\n    value: any;\r\n    constructor(value: any = undefined) {\r\n        this.value = value;\r\n    }\r\n    isEmpty(): boolean {\r\n        return !this.value;\r\n    }\r\n}","import { IValue } from './ivalue';\r\nimport { ControlType } from '../controltype';\r\nimport { cloneDeep } from 'lodash-es';\r\n\r\nexport class InputGroupValue implements IValue {\r\n\r\n    getControlType(): ControlType {\r\n        return ControlType.InputGroup;\r\n    }\r\n\r\n    setOriginalValue(value: any) {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    getOriginalValue(): string {\r\n        const args = this.textField.split('.');\r\n        const textArr = this.value.map(item => this.getPropValue(item, cloneDeep(args)));\r\n        return textArr && textArr.length ? textArr.join(','): '';\r\n    }\r\n\r\n    clearValue(): void {\r\n        this.value = [];\r\n        this.textValue = undefined;\r\n        this.textField = undefined;\r\n        this.isInputText = undefined;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return !this.textValue;\r\n    }\r\n\r\n    //éè¿å¼¹çªè¿åçè¥å¹²ä¸ªå¼å¯¹è±¡ææçæ°ç»\r\n    value: any[];\r\n    //æ§ä»¶åæ¾ç¤ºçå¼\r\n    textValue: string;\r\n    //å¼¹çªæ¨¡å¼ä¸ï¼ååè¡¨ä¸­åªä¸ªå­æ®µçå¼æ å°å°å½åå­æ®µ\r\n    textField: string;\r\n    //æ¯å¦æ¯æå¨è¾å¥çå¼\r\n    isInputText: boolean;\r\n\r\n    constructor(data: {\r\n        value: any,\r\n        textValue: string,\r\n        textField: string,\r\n        isInputText: boolean\r\n    } = {value: [], textValue: undefined, textField: undefined, isInputText: undefined}){\r\n        this.value = data.value;\r\n        // this.textValue = data.textValue ? data.textValue.trim() : '';\r\n        this.textValue = data.textValue ? data.textValue : '';\r\n        this.textField = data.textField;\r\n        this.isInputText = data.isInputText;\r\n    }\r\n\r\n    getTextValue(targetField: string): string {\r\n        const args = targetField.split('.');\r\n        const textArr = this.value.map(item => this.getPropValue(item, cloneDeep(args)));\r\n        return textArr && textArr.length ? textArr.join(','): '';\r\n    }\r\n\r\n    getPropValue(item: any, args: Array<string>): any{\r\n        if(args.length > 1){\r\n            const arg = args.shift();\r\n            return item[arg] ? this.getPropValue(item[arg], args) : '';\r\n        }\r\n        return item[args[0]];\r\n    }\r\n}","import { ControlType } from \"../controltype\";\r\nimport { TextValue } from \"./textvalue\";\r\nimport { NumberRangeValueConvertor, NumberRangeValue } from \"./numberrangevaue\";\r\nimport { DateRangeValue } from \"./daterangevalue\";\r\nimport { SmartHelpValue } from \"./smarthelpvalue\";\r\nimport { SingleDateValue } from './single-date-value';\r\nimport { SingleNumberValue } from './single-number-value';\r\nimport { SingleYearValue } from './single-year-value';\r\nimport { CheckBoxValue } from './checkbox-value';\r\nimport { DropDownListValue } from './dropdownlistvalue';\r\nimport { SingleMonthValue } from './single-month-value';\r\nimport { MonthRangeValue } from './month-range-value';\r\nimport { SingleDateTimeValue } from './single-date-time-value';\r\nimport { ComboLookUpValue} from './combolookup-value';\r\nimport { RadioValue } from './radio-value';\r\nimport { InputGroupValue } from './inputgroupvalue';\r\n\r\nexport interface IValue {\r\n    getControlType(): ControlType;\r\n    getOriginalValue(): any;\r\n    setOriginalValue(value: any): void;\r\n    clearValue(): void;\r\n    isEmpty(): boolean;\r\n}\r\n\r\nexport class ConditionValueConvert {\r\n    /**\r\n     * åºåå\r\n     * ä¸ºäºå¼å®¹C#äº§ççæ§æ°æ®ï¼åserverä¼ éçJSON objectå±æ§åå¨æ¹ä¸ºé¦å­æ¯å¤§å\r\n     */\r\n    convertToObject(obj: IValue): Object {\r\n        let conditionValue = obj as IValue;\r\n        let controlType = conditionValue.getControlType();\r\n        let jobj = new Object();\r\n        jobj[\"Type\"] = controlType;\r\n        if (controlType == ControlType.NumberRange) {\r\n            let convertor = new NumberRangeValueConvertor();\r\n            jobj[\"Content\"] = convertor.convertToObject(conditionValue);\r\n        }\r\n        else {\r\n            jobj[\"Content\"] = conditionValue;\r\n        }\r\n        return jobj;\r\n    }\r\n\r\n\r\n    initFromObject(jobj: Object): IValue {\r\n        let content: IValue = jobj[\"Content\"];\r\n        \r\n        switch(jobj[\"Type\"]){\r\n            case ControlType.Text:\r\n                return new TextValue(jobj[\"Content\"]);\r\n            case ControlType.NumberRange:\r\n                return new NumberRangeValue(jobj[\"Content\"]);\r\n            case ControlType.DateRange:\r\n            case ControlType.DateTimeRange:\r\n                return new DateRangeValue(jobj[\"Content\"]);\r\n            case ControlType.DropDownList:\r\n                return new DropDownListValue(jobj[\"Content\"]);\r\n            case ControlType.SmartHelp:\r\n                return new SmartHelpValue(jobj[\"Content\"]);\r\n            case ControlType.ComboLookUp:\r\n                return new ComboLookUpValue(jobj[\"Content\"]);\r\n            case ControlType.SingleDate:\r\n                return Object.assign(new SingleDateValue(), content as SingleDateValue);\r\n            case ControlType.SingleNumber:\r\n                return Object.assign(new SingleNumberValue(), content as SingleNumberValue);\r\n            case ControlType.SingleYear:\r\n                return Object.assign(new SingleYearValue(), content as SingleYearValue);\r\n            case ControlType.BoolCheck:\r\n                return Object.assign(new CheckBoxValue(), content as CheckBoxValue);\r\n            case ControlType.Radio:\r\n                return Object.assign(new RadioValue(), content as RadioValue);\r\n            case ControlType.SingleMonth:\r\n                return Object.assign(new SingleMonthValue(), content as SingleMonthValue);\r\n            case ControlType.MonthRange:\r\n                return Object.assign(new MonthRangeValue(), content as MonthRangeValue);\r\n            case ControlType.SingleDateTime:\r\n                return Object.assign(new SingleDateTimeValue(), content as SingleDateTimeValue);\r\n            case ControlType.InputGroup:\r\n                return Object.assign(new InputGroupValue(), content as InputGroupValue);\r\n        }\r\n    }\r\n}","import { CompareType } from \"./comparetype\";\r\nimport { ValueType } from \"./valuetype\";\r\nimport { IControl, ControlConvert } from \"./controltype/icontrol\";\r\nimport { IValue, ConditionValueConvert } from \"./conditionvalue/ivalue\";\r\n\r\n/**\r\n * æ¥è¯¢æ¡ä»¶å®ä½ç±»\r\n */\r\nexport class QueryCondition {\r\n\r\n  /**\r\n   * å¯ä¸æ§æ è¯\r\n   */\r\n  id: string;\r\n\r\n  /**\r\n   * å­æ®µç¼å·\r\n   */\r\n  fieldCode: string;\r\n\r\n  /**\r\n   * å­æ®µåç§°\r\n   */\r\n  fieldName: string;\r\n\r\n  /**\r\n   * æ¯è¾ç¬¦\r\n   */\r\n  // compareType:CompareType;\r\n\r\n  /**\r\n   * å¼ç±»å\r\n   */\r\n  valueType: ValueType;\r\n\r\n  /**\r\n   * ä¸ºç©ºæ¶æç¤ºä¿¡æ¯\r\n   */\r\n  placeHolder: string;\r\n  /**\r\n   * å¼å§\r\n   */\r\n  beginPlaceHolder:string;\r\n  /**\r\n   * ç»æ\r\n   */\r\n  endPlaceHolder:string;\r\n  /**\r\n   * å¼\r\n   * è¯¥å±æ§ä¸ºIValueæ¥å£ï¼æ ¹æ®ä¸åçæ§ä»¶ç±»åæä¸åçå®ç°ç±»ï¼å·ä½å¦ä¸ï¼\r\n   * 1. ææ¬ç±»åï¼TextValue\r\n   * 2. ä¸æåè¡¨ï¼DropDownListValue\r\n   * 3. æ¥æåºé´ï¼DateRangeValue\r\n   * 4. æ°å­åºé´ï¼NumberRangeValue\r\n   * 5. å¸®å©ç±»åï¼SmartHelpValue\r\n   * 6. å¤éæ¡: CheckBoxValue\r\n   * 7. åæ°å¼: SingleNumberValue\r\n   * 8. åå¹´åº¦: SingleYearValue\r\n   * 9. åæåº¦: SingleMonthValue\r\n   * 10. æåº¦åºé´: MonthRangeValue\r\n   * 11. åæ¥æ: SingleDateValue\r\n   * 12. åæ¥ææ¶é´: SingleDateTimeValue\r\n   * 13. ä¸æå¸®å©ï¼ ComboLookUpValue\r\n   * 14. åéæ¡ï¼ RadioValue\r\n   * 15. æºè½è¾å¥æ¡ï¼ InputGroupValue\r\n   */\r\n  value: IValue;\r\n\r\n  /**\r\n   * æ§ä»¶ç±»åï¼ç®ååæ¬ææ¬ç±»åï¼ä¸æåè¡¨ï¼æ¥æåºé´ï¼æ°å­åºé´ï¼å¸®å©ç±»å\r\n   * æ§ä»¶ç±»åä¸ºIControlæ¥å£ï¼æ ¹æ®ä¸åçæ§ä»¶ç±»åå¯¹åºä¸åçå®ç°ç±»ï¼å·ä½å¦ä¸ï¼\r\n   * 1. ææ¬ç±»åï¼TextControl\r\n   * 2. ä¸æåè¡¨ï¼DropDownListControl\r\n   * 3. æ¥æåºé´ï¼DateRangeControl\r\n   * 4. æ°å­åºé´ï¼NumberRangeControl\r\n   * 5. å¸®å©ç±»åï¼SmartHelpControl\r\n   * 6. åæ¥æï¼ SingleDateControl\r\n   * 7. åæ°å¼ï¼SingleNumberControl\r\n   * 8. åå¹´åº¦ï¼SingleYearControl\r\n   * 9. åæåº¦ï¼SingleMonthControl\r\n   * 10. æåº¦åºé´ï¼MonthRangeControl\r\n   * 11. åæ¥ææ¶é´ï¼SingleDateTimeControl\r\n   * 12. æ¥ææ¶é´åºé´ï¼DateTimeRangeControl\r\n   * 13. å¤éæ¡ï¼CheckBoxControl\r\n   * 14. ä¸æå¸®å©ï¼ComboLookUpControl\r\n   * 15. åéæ¡ï¼ RadioControl\r\n   * 16. æºè½è¾å¥æ¡ï¼ InputGroupControl\r\n   */\r\n  control: IControl;\r\n  readonly: boolean;\r\n  visible?: boolean = true;\r\n}\r\n\r\n/**\r\n * æ¥è¯¢æ¡ä»¶åºååä¸ååºååå¨\r\n */\r\nexport class QueryConditionConvert {\r\n\r\n  /**\r\n   * åºåå\r\n   * @param obj æ¥è¯¢æ¡ä»¶å®ä½\r\n   * ä¸ºäºå¼å®¹C#äº§ççæ§æ°æ®ï¼åserverä¼ éçJSON objectå±æ§åå¨æ¹ä¸ºé¦å­æ¯å¤§å\r\n   */\r\n  convertJObject(obj: QueryCondition): Object {\r\n    let queryCondition = obj as QueryCondition;\r\n    let jobj = new Object();\r\n    jobj[\"ID\"] = queryCondition.id;\r\n    jobj[\"FieldCode\"] = queryCondition.fieldCode;\r\n    jobj[\"FieldName\"] = queryCondition.fieldName;\r\n    // jobj[\"compareType\"]=queryCondition.compareType;\r\n    jobj[\"ValueType\"] = queryCondition.valueType;\r\n    jobj[\"placeHolder\"] = queryCondition.placeHolder;\r\n    // æ è®ºæ¯å¦åºé´é½è¿½å \r\n    jobj[\"beginPlaceHolder\"] = queryCondition.hasOwnProperty('beginPlaceHolder') ? queryCondition['beginPlaceHolder'] : '';\r\n    jobj[\"endPlaceHolder\"] = queryCondition.hasOwnProperty('endPlaceHolder') ? queryCondition['endPlaceHolder'] : '';\r\n    jobj[\"visible\"] = queryCondition.hasOwnProperty('visible') ? queryCondition['visible'] : true;\r\n    let valueConvert = new ConditionValueConvert();\r\n    if (queryCondition.value) {\r\n      jobj[\"Value\"] = valueConvert.convertToObject(queryCondition.value);\r\n    }\r\n    let controlConvertor = new ControlConvert();\r\n    if (queryCondition.control) {\r\n      jobj[\"Control\"] = controlConvertor.convertJObject(queryCondition.control);\r\n    }\r\n    return jobj;\r\n  }\r\n\r\n  /**\r\n   * ååºåå\r\n   * @param jobj æ¥è¯¢æ¡ä»¶å®ä½åºåååçJSONå¯¹è±¡\r\n   * serverç«¯å­å¨çæ¯åç«¯å®ä¹å¥½æ ¼å¼çå­ç¬¦ä¸²ï¼æä»¥clientæ¥æ¶æ¶ä»¥çº¦å®å¥½çæ ¼å¼ååºåå\r\n   */\r\n  initFromJobject(jobj: Object): QueryCondition {\r\n    let queryCondition = new QueryCondition();\r\n    queryCondition.id = jobj[\"ID\"];\r\n    queryCondition.fieldCode = jobj[\"FieldCode\"];\r\n    queryCondition.fieldName = jobj[\"FieldName\"];\r\n    // queryCondition.compareType=jobj[\"compareType\"] as CompareType;\r\n    queryCondition.valueType = (jobj[\"ValueType\"]) as ValueType;\r\n    queryCondition.placeHolder = jobj[\"placeHolder\"];\r\n    queryCondition.beginPlaceHolder = jobj.hasOwnProperty('beginPlaceHolder') ? jobj['beginPlaceHolder'] : '';\r\n    queryCondition.endPlaceHolder = jobj.hasOwnProperty('endPlaceHolder') ? jobj['endPlaceHolder'] : '';\r\n    queryCondition.visible = jobj.hasOwnProperty('visible') ? jobj['visible'] : true;\r\n    const conditonValue = jobj[\"Value\"];\r\n    if (conditonValue) {\r\n      let valueConvert = new ConditionValueConvert();\r\n      queryCondition.value = valueConvert.initFromObject(conditonValue);\r\n    }\r\n    const conditionControl = jobj[\"Control\"];\r\n    if (conditionControl) {\r\n      let controlConvertor = new ControlConvert();\r\n      queryCondition.control = controlConvertor.initFromJobject(conditionControl);\r\n    }\r\n    return queryCondition;\r\n  }\r\n}\r\n","export enum ValueType{\r\n\r\n    /**\r\n     *å¼ç±»å\r\n     */\r\n    Value = 0,\r\n\r\n    /**\r\n     * å¸®å©ç±»å\r\n     */\r\n    SmartHelp=1,\r\n\r\n    /**\r\n     * æä¸¾ç±»å\r\n     */\r\n    Enum=2,\r\n\r\n    /**\r\n     * è¡¨è¾¾å¼\r\n     */\r\n    Express=3\r\n}","import { Injectable } from '@angular/core';\r\nimport { NotifyService, NotifyOptions } from '@farris/ui-notify';\r\nimport { QueryCondition } from '../entity/querycondition';\r\nimport { ValueType } from '../entity/valuetype';\r\nimport { TextControl } from '../entity/controltype/text/textcontrol';\r\nimport { InputGroupControl, DialogConfig } from '../entity/controltype/input-group/inputgroupcontrol';\r\nimport { TextValue } from '../entity/conditionvalue/textvalue';\r\nimport { DateRangeControl } from '../entity/controltype/daterange/date-range.control';\r\nimport { DateRangeValue } from '../entity/conditionvalue/daterangevalue';\r\nimport { NumberRangeControl } from '../entity/controltype/numberrange/numberrangecontrol';\r\nimport { NumberRangeValue } from '../entity/conditionvalue/numberrangevaue';\r\nimport { DropDownListControl } from '../entity/controltype/dropdownlist/dropdownlistcontrol';\r\nimport { DropDownListValue } from '../entity/conditionvalue/dropdownlistvalue';\r\nimport { SmartHelpContol } from '../entity/controltype/smarthelp/smarthelpcontrol';\r\nimport { SmartHelpValue } from '../entity/conditionvalue/smarthelpvalue';\r\nimport { SingleDateControl } from '../entity/controltype/date/single-date-control';\r\nimport { SingleDateValue } from '../entity/conditionvalue/single-date-value';\r\nimport { SingleNumberControl } from '../entity/controltype/number/single-number-control';\r\nimport { SingleNumberValue } from '../entity/conditionvalue/single-number-value';\r\nimport { SingleYearControl } from '../entity/controltype/year/year-control';\r\nimport { SingleYearValue } from '../entity/conditionvalue/single-year-value';\r\nimport { SingleMonthControl } from '../entity/controltype/month/month-control';\r\nimport { SingleMonthValue } from '../entity/conditionvalue/single-month-value';\r\nimport { CheckBoxControl } from '../entity/controltype/checkbox/checkbox-control';\r\nimport { CheckBoxValue } from '../entity/conditionvalue/checkbox-value';\r\nimport { DateTimeRangeControl } from '../entity/controltype/daterange/datertime-range-control';\r\nimport { MonthRangeControl } from '../entity/controltype/monthrange/month-range-control';\r\nimport { MonthRangeValue } from '../entity/conditionvalue/month-range-value';\r\nimport { SingleDateTimeControl } from '../entity/controltype/date/single-date-time-control';\r\nimport { SingleDateTimeValue } from '../entity/conditionvalue/single-date-time-value';\r\nimport { ComboLookUpControl } from '../entity/controltype/combolookup/combolookup-control';\r\nimport { ComboLookUpValue } from '../entity/conditionvalue/combolookup-value';\r\nimport { RadioControl } from '../entity/controltype/radio/radio-control';\r\nimport { RadioValue } from '../entity/conditionvalue/radio-value';\r\nimport { InputGroupValue } from '../entity/conditionvalue/inputgroupvalue';\r\nimport { QuerySolutionVo } from '../entity/querysolutionvo';\r\nimport { FieldConfig } from '../entity/fieldconfig/fieldconfig';\r\nimport { ControlType } from '../entity/controltype';\r\nimport { Subject, BehaviorSubject } from 'rxjs';\r\n\r\n\r\n@Injectable()\r\nexport class SolutionService {\r\n  // æ è®°åæ´\r\n  private controlConfigState: BehaviorSubject<any> = new BehaviorSubject([]);\r\n\r\n  constructor(private notify: NotifyService) { }\r\n  controlTypeMap: Map<number, string> = new Map([\r\n    [ControlType.Text, 'text'], [ControlType.BoolCheck, 'bool-check'], [ControlType.DateRange, 'date'],\r\n    [ControlType.DateTimeRange, 'date-time'], [ControlType.NumberRange, 'number'], [ControlType.DropDownList, 'dropdown'],\r\n    [ControlType.SmartHelp, 'help'], [ControlType.SingleDate, 'single-date'], [ControlType.SingleNumber, 'single-number'],\r\n    [ControlType.SingleYear, 'single-year'], [ControlType.SingleMonth, 'single-month'], [ControlType.MonthRange, 'month'],\r\n    [ControlType.SingleDateTime, 'single-date-time'], [ControlType.ComboLookUp, 'combolist-help'], [ControlType.Radio, 'radio'],\r\n    [ControlType.InputGroup, 'input-group']\r\n  ]);\r\n  getControlConfigState() {\r\n    return this.controlConfigState;\r\n  }\r\n  /**\r\n   * ä¼ éè¿æ¥çæ¯å·²ç»å¤çè¿çæ¡ä»¶\r\n   * @param simpleCondition \r\n   */\r\n  updateControlConfigState(simpleCondition: Array<any>) {\r\n    this.controlConfigState.next(simpleCondition);\r\n  }\r\n\r\n  /**\r\n   * åªè¿åå­å¨çå±æ§\r\n   */\r\n  convertToSimpleQueryConditions(fields: Array<FieldConfig>): Array<any> {\r\n    if(fields && fields.length == 0) {\r\n      return [];\r\n    }\r\n    return fields.map(field => {\r\n      let simpleQueryCondition = {};\r\n      simpleQueryCondition['fieldCode'] = field.labelCode;\r\n      if(field.hasOwnProperty('visible')) {\r\n        simpleQueryCondition['visible'] = field.visible;\r\n      }\r\n      simpleQueryCondition['control'] = this.getSimpleControl(field);\r\n      return simpleQueryCondition;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * åªå¤çè®¾ç½®çå±æ§\r\n   * @param field \r\n   */\r\n  private getSimpleControl(field: FieldConfig) {\r\n    const controlData = field.control;\r\n    let simpleControl = {};\r\n    let tControlType = this.controlTypeMap.get(controlData.controltype);\r\n    switch (tControlType) {\r\n      case 'single-year':\r\n        this.updateSimpleControl(simpleControl, ['maxDate', 'minDate'], controlData);\r\n        break;\r\n      default:\r\n        simpleControl = {};\r\n    }\r\n    return simpleControl;\r\n  }\r\n\r\n  /**\r\n   * åªå¤çæå®å±æ§\r\n   * @param resultObj ä¿®æ¹çå¯¹è±¡  {test01:'',test01:''}\r\n   * @param sourceProps å¾è·åçå±æ§åè¡¨ ['prop01','prop02']\r\n   * @param source åå¼æ¥æº{prop01:'',prop02:''}\r\n   * @param distProps ç®æ å±æ§ï¼å¯¹åºçè¿åå±æ§æç§è®¾ç½®['dist01','']\r\n   * @return \r\n   */\r\n  private updateSimpleControl(resultObj: any, sourceProps: any, source: any, distProps = []) {\r\n    if (distProps.length == 0) {\r\n      distProps = sourceProps;\r\n    }\r\n    for (let m = 0; m < sourceProps.length; m++) {\r\n      if (!distProps[m]) {\r\n        distProps[m] = sourceProps[m];\r\n      }\r\n    }\r\n    for (let k = 0; k < sourceProps.length; k++) {\r\n      if (source && source.hasOwnProperty(sourceProps[k])) {\r\n        resultObj[distProps[k]] = source[sourceProps[k]];\r\n      }\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * å°å­æ®µéç½®JSONæè¿°ä¿¡æ¯è½¬æ¢ä¸ºç­éæ¡ä»¶\r\n   * @param fields å­æ®µéç½®ä¿¡æ¯\r\n   * @returns ç­éæ¡ä»¶æ°ç»\r\n   */\r\n  public convertToQueryConditions(fields: Array<FieldConfig>): Array<QueryCondition> {\r\n    let queryCondition: QueryCondition;\r\n    return fields.map(field => {\r\n      queryCondition = new QueryCondition();\r\n      queryCondition.id = field.id;\r\n      queryCondition.fieldCode = field.labelCode;\r\n      // queryCondition.code = field.code; æ ç¨å±æ§\r\n      queryCondition.fieldName = field.name;\r\n      queryCondition.valueType = ValueType.Value;\r\n      queryCondition.placeHolder = field.placeHolder;\r\n      queryCondition.beginPlaceHolder=field.hasOwnProperty('beginPlaceHolder')?field.beginPlaceHolder:'';\r\n      queryCondition.endPlaceHolder=field.hasOwnProperty('endPlaceHolder')?field.endPlaceHolder:'';      \r\n      let { control, value } = this.getControlAndValue(field);\r\n      queryCondition.control = control;\r\n      queryCondition.value = value;\r\n      return queryCondition;\r\n    });\r\n  }\r\n  /**\r\n   * æ ¹æ®æ§ä»¶ç±»ååå«åå»ºç­éæ¡ä»¶çcontrolå¯¹è±¡åvalueå¯¹è±¡\r\n   * @param field å­æ®µéç½®ä¿¡æ¯\r\n   * @returns ç­éæ¡ä»¶çcontrolå¯¹è±¡åvalueå¯¹è±¡\r\n   */\r\n  getControlAndValue(field: FieldConfig) {\r\n    const controlData = field.control;\r\n    const valueData = field.value;\r\n    let control, value: any;\r\n    switch (controlData.controltype) {\r\n      case 'text':\r\n        control = new TextControl();\r\n        control.className = controlData.className;\r\n        control.placeholder = controlData.placeholder;\r\n        control.require = controlData.require;\r\n        //plain string\r\n        value = new TextValue({ value: valueData });\r\n        break;\r\n      case 'input-group':\r\n        control = new InputGroupControl();\r\n        control.className = controlData.className;\r\n        control.require = controlData.require;\r\n        control.editable = controlData.editable;\r\n        control.groupText = controlData.groupText;\r\n        control.usageMode = controlData.usageMode;\r\n        control.dialogOptions = this.setInputGroupDialog(field);\r\n        control.click = controlData.click;\r\n        value = new InputGroupValue(valueData);\r\n        break;\r\n      case 'date':\r\n        control = new DateRangeControl();\r\n        control.format = controlData.format;\r\n        control.returnFormat=controlData.returnFormat;\r\n        control.className = controlData.className;\r\n        control.placeholder = controlData.placeholder;\r\n        control.require = controlData.require;\r\n        control.weekSelect = controlData.weekSelect;\r\n        control.showWeekNumbers = controlData.showWeekNumbers;\r\n        //control.beginPlaceHolder=controlData.beginPlaceHolder;\r\n        //control.endPlaceHolder=controlData.endPlaceHolder;\r\n        //{startTime: valueData.startTime, endTime: valueData.endTime}\r\n        value = new DateRangeValue(valueData);\r\n        break;\r\n      case 'date-time':\r\n        control = new DateTimeRangeControl();\r\n        control.format = controlData.format;\r\n        control.returnFormat=controlData.returnFormat;\r\n        control.className = controlData.className;\r\n        control.placeholder = controlData.placeholder;\r\n        control.require = controlData.require;\r\n        control.enableCustomFormat=controlData.enableCustomFormat;        \r\n       // control.beginPlaceHolder=controlData.beginPlaceHolder;\r\n        //control.endPlaceHolder=controlData.endPlaceHolder;\r\n        //control.weekSelect = controlData.weekSelect;\r\n        //control.showWeekNumbers = controlData.showWeekNumbers;\r\n        //{startTime: valueData.startTime, endTime: valueData.endTime}\r\n        value = new DateRangeValue(valueData);\r\n        break;\r\n      case 'month':\r\n        control = new MonthRangeControl();\r\n        control.format = controlData.format;\r\n        control.returnFormat=controlData.returnFormat;\r\n        control.className = controlData.className;\r\n        control.placeholder = controlData.placeholder;\r\n        control.require = controlData.require;      \r\n        //control.beginPlaceHolder=controlData.beginPlaceHolder;\r\n        //control.endPlaceHolder=controlData.endPlaceHolder;\r\n        value = new MonthRangeValue(valueData);\r\n        break;\r\n      case 'number':\r\n        control = new NumberRangeControl();\r\n        control.className = controlData.className;\r\n        control.placeholder = this.emptyString(controlData.placeholder);\r\n        control.require = controlData.require;\r\n        control.precision = controlData.precision;\r\n        control.textAlign = controlData.textAlign;\r\n        control.bigNumber = controlData.isBigNumber;\r\n        control.min = controlData.minValue;\r\n        control.max = controlData.maxValue;        \r\n        //control.beginPlaceHolder=controlData.beginPlaceHolder;\r\n        //control.endPlaceHolder=controlData.endPlaceHolder;\r\n        //{startValue: valueData.startValue, endValue: valueData.endValue}\r\n        value = new NumberRangeValue(valueData);\r\n        break;\r\n      case 'dropdown':\r\n        control = new DropDownListControl();\r\n        control.valueType = controlData.valueType;\r\n        control.enumValues = controlData.enumValues;\r\n        control.uri = controlData.uri;\r\n        control.beforeShow = controlData.beforeShow;\r\n        control.beforeHide = controlData.beforeHide;\r\n        control.idField = controlData.idField;\r\n        control.textField = controlData.textField;\r\n        control.multiSelect = controlData.multiSelect;\r\n        control.className = controlData.className;\r\n        control.placeholder = controlData.placeholder;\r\n        control.panelHeight = controlData.panelHeight;\r\n        control.require = controlData.require;\r\n        //{value: [enumValues], key: ä»¥ï¼å·åå²çå­ç¬¦ä¸²})\r\n        value = new DropDownListValue(valueData);\r\n        break;\r\n      case 'help':\r\n        control = new SmartHelpContol();\r\n        control.uri = controlData.uri;\r\n        control.textField = controlData.textField;\r\n        control.valueField = controlData.valueField;\r\n        control.displayType = controlData.displayType;\r\n        control.idField = controlData.idField;\r\n        control.mapFields = controlData.mapFields;\r\n        control.preEventCmd = controlData.preEventCmd;\r\n        control.postEventCmd = controlData.postEventCmd;\r\n        control.context = controlData.context;\r\n        control.className = controlData.className;\r\n        control.enableFullTree = controlData.enableFullTree;\r\n        control.loadTreeDataType = controlData.loadTreeDataType;\r\n        control.singleSelect = controlData.singleSelect;\r\n        control.expandLevel = controlData.expandLevel;\r\n        control.enableCascade = controlData.enableCascade;\r\n        control.placeholder = controlData.placeholder;\r\n        control.require = controlData.require;\r\n        control.nosearch = controlData.nosearch;\r\n        control.displayFields = controlData.displayFields;\r\n        control.displayTextSeparator = controlData.displayTextSeparator;\r\n        control.editable = controlData.editable;\r\n        control.clearFields = controlData.clearFields;\r\n        control.clear = controlData.clear;\r\n        control.dialogTitle = controlData.dialogTitle;\r\n        control.panelHeight = controlData.panelHeight;\r\n        control.panelWidth = controlData.panelWidth;\r\n        if (controlData.hasOwnProperty('pageSize')) {\r\n          control.pageSize = controlData.pageSize;\r\n        }\r\n        if (controlData.hasOwnProperty('pageList')) {\r\n          control.pageList = controlData.pageList;\r\n        }\r\n        //{value: [{}], valueField: string, textValue: string}\r\n        value = new SmartHelpValue(valueData);\r\n        break;\r\n      case 'combolist-help':\r\n        control = new ComboLookUpControl();\r\n        control.uri = controlData.uri;\r\n        control.idField = controlData.idField;\r\n        control.valueField = controlData.valueField;\r\n        control.textField = controlData.textField;\r\n        control.mapFields = controlData.mapFields;\r\n        control.displayType = this.displayTypeTransform(controlData.displayType);\r\n        control.singleSelect = controlData.singleSelect;\r\n        control.preEventCmd = controlData.preEventCmd;\r\n        control.postEventCmd = controlData.postEventCmd;\r\n        control.enableFullTree = controlData.enableFullTree;\r\n        control.loadTreeDataType = controlData.loadTreeDataType;\r\n        control.expandLevel = controlData.expandLevel;\r\n        control.className = controlData.className;\r\n        control.placeholder = controlData.placeholder;\r\n        control.panelWidth = controlData.panelWidth;\r\n        control.panelHeight = controlData.panelHeight;\r\n        control.require = controlData.require;\r\n        //{value: [{}], valueField: string, textValue: string}\r\n        value = new ComboLookUpValue(valueData);\r\n        break;\r\n      case 'single-date':\r\n        control = new SingleDateControl();\r\n        control.format = controlData.format;\r\n        control.returnFormat=controlData.returnFormat;\r\n        control.className = controlData.className;\r\n        control.placeholder = controlData.placeholder;\r\n        control.require = controlData.require;\r\n        //plain string\r\n        value = new SingleDateValue(valueData);\r\n        break;\r\n      case 'single-date-time':\r\n        control = new SingleDateTimeControl();\r\n        control.format = controlData.format;\r\n        control.returnFormat=controlData.returnFormat;\r\n        control.className = controlData.className;\r\n        control.placeholder = controlData.placeholder;\r\n        control.require = controlData.require;\r\n        control.enableCustomFormat=controlData.enableCustomFormat;    \r\n        value = new SingleDateTimeValue(valueData);\r\n        break;\r\n      case 'single-number':\r\n        control = new SingleNumberControl();\r\n        control.className = controlData.className;\r\n        control.placeholder = this.emptyString(controlData.placeholder);\r\n        control.precision = controlData.precision;\r\n        control.require = controlData.require;\r\n        control.textAlign = controlData.textAlign;\r\n        control.bigNumber = controlData.isBigNumber;\r\n        control.min = controlData.minValue;\r\n        control.max = controlData.maxValue;\r\n        //{numValue: xxxx}\r\n        value = new SingleNumberValue(valueData);\r\n        break;\r\n      case 'single-year':\r\n        control = new SingleYearControl();\r\n        control.format = controlData.format;\r\n        control.returnFormat=controlData.returnFormat;\r\n        control.className = controlData.className;\r\n        control.placeholder = controlData.placeholder;\r\n        control.require = controlData.require;\r\n        control.maxDate = controlData.maxDate;\r\n        control.minDate = controlData.minDate;\r\n        //yearValue : plain string\r\n        value = new SingleYearValue(valueData);\r\n        break;\r\n      case 'single-month':\r\n        control = new SingleMonthControl();\r\n        control.format = controlData.format;\r\n        control.returnFormat=controlData.returnFormat;\r\n        control.className = controlData.className;\r\n        control.placeholder = controlData.placeholder;\r\n        control.require = controlData.require;\r\n        value = new SingleMonthValue(valueData);\r\n        break;\r\n      case 'bool-check':\r\n        control = new CheckBoxControl();\r\n        control.className = controlData.className;\r\n        control.data = [{ value: \"true\", name: field.name }];\r\n        control.horizontal = controlData.horizontal;\r\n        control.disable = controlData.disable;\r\n        control.isStringValue = false;\r\n        control.require = controlData.require;\r\n        //[true] or [false]\r\n        value = new CheckBoxValue(valueData);\r\n        break;\r\n      case 'radio':\r\n        control = new RadioControl();\r\n        control.valueType = controlData.valueType;\r\n        control.enumValues = controlData.enumValues;\r\n        control.className = controlData.className;\r\n        control.showLabel = controlData.showLabel;\r\n        control.horizontal = controlData.horizontal;\r\n        control.disabled = controlData.disabled;\r\n        control.require = controlData.require;\r\n        value = new RadioValue(valueData);\r\n        break;\r\n    }\r\n    return { control, value };\r\n  }\r\n\r\n  getGuid() {\r\n    return (this.s4() + this.s4() + \"-\" + this.s4() + \"-\" + this.s4() + \"-\" + this.s4() + \"-\" + this.s4() + this.s4() + this.s4());\r\n  }\r\n\r\n  private s4() {\r\n    return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n  }\r\n\r\n  showInfo(message: string, infoType: string, title: string, timeout: number) {\r\n    this.notify.config.position = 'top-center';\r\n    if (infoType == 'success') {\r\n      this.notify.success(<NotifyOptions>{ title: title, msg: message, timeout: timeout });\r\n    }\r\n    else if (infoType == 'info') {\r\n      this.notify.info(<NotifyOptions>{ title: title, msg: message, timeout: timeout });\r\n    }\r\n    else if (infoType == 'warning') {\r\n      this.notify.warning(<NotifyOptions>{ title: title, msg: message, timeout: timeout });\r\n    }\r\n    else if (infoType == 'error') {\r\n      this.notify.error(<NotifyOptions>{ title: title, msg: message, timeout: timeout });\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n  * æ ¹æ®å­æ®µè·åLableæ§ä»¶çTitle\r\n  * @param field\r\n  */\r\n  getConditionItemTitle(field: QueryCondition) {\r\n    if (field.id && field.id !== '') {\r\n      return field.fieldName;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * å è½½ç­éæ¹æ¡æ¶èµé»è®¤å¼\r\n   * @param solution éè¦èµé»è®¤å¼çç­éæ¹æ¡\r\n   * @param fieldConfigs é»è®¤å¼è®¾ç½®\r\n   * @param readonly æ¯å¦åªè¯»\r\n   * @returns å·²èµé»è®¤å¼çç­éæ¹æ¡\r\n   */\r\n  setValues(solution: QuerySolutionVo, fieldConfigs: FieldConfig[], readonly: boolean): QuerySolutionVo {\r\n    let qc: QueryCondition;\r\n    const conditions = solution.queryConditions ? solution.queryConditions : [];\r\n    let controlType: string;\r\n    fieldConfigs.forEach(field => {\r\n      qc = conditions.find(c => c.fieldCode == field.labelCode);\r\n      //qc.controlå¹¶ä¸æ¯controlData\r\n      if (qc && qc.control && qc.value) {\r\n        controlType = this.controlTypeMap.get(qc.control.getControlType());\r\n        field.control = { controltype: controlType };\r\n        const { control, value } = this.getControlAndValue(field);\r\n        qc.value = this.isNumCheck(qc, value, field);\r\n        qc.readonly = readonly;\r\n      }\r\n    });\r\n    return solution;\r\n  }\r\n  /**\r\n   * \r\n   * @param solution éè¦æ´æ°éç½®çç­éæ¹æ¡\r\n   * @param fieldConfigs æ´æ°éç½®\r\n   * @returns å·²æ´æ°éç½®çç­éæ¹æ¡\r\n   */\r\n  updateControl(conditions: Array<QueryCondition>, fieldConfigs: Array<any>) {\r\n    let qc: QueryCondition;\r\n    conditions = conditions ? conditions : [];\r\n    if (conditions.length > 0) {\r\n      fieldConfigs.forEach(field => {\r\n        qc = conditions.find(c => c.fieldCode == field['fieldCode']);\r\n        if(qc && qc.hasOwnProperty('visible') && field.hasOwnProperty('visible') && field['visible'] !== qc.visible ) {\r\n          qc.visible = field['visible'];\r\n        }\r\n        if (qc && qc.control) {\r\n          for (var prop in field.control) {\r\n            qc.control[prop] = field.control[prop]\r\n          }\r\n        }\r\n      });\r\n    }\r\n    // let qc: QueryCondition;\r\n    // const conditions = solution.queryConditions ? solution.queryConditions : [];\r\n    // if (conditions.length > 0) {\r\n    //   fieldConfigs.forEach(field => {\r\n    //     qc = conditions.find(c => c.fieldCode == field.labelCode);\r\n    //     if (qc && qc.control) {\r\n    //       for (var prop in field.control) {\r\n    //         qc.control[prop] = field.control[prop]\r\n    //       }\r\n    //     }\r\n    //   });\r\n    // }\r\n  }\r\n\r\n  /**\r\n   * å¿å¡«æ§ä»¶éç©ºå¤æ­\r\n   * @param conditions è¿è¡ç­éæä½æ¶å½åææçç­éæ¡ä»¶\r\n   */\r\n  isValid(conditions: Array<QueryCondition>): any[] {\r\n    let qc: QueryCondition;\r\n    const errorArr = conditions.map(qc => {\r\n      if (qc.control.isRequired() && qc.value.isEmpty() && qc.visible) {\r\n        return {\r\n          type: 'require',\r\n          field: qc.fieldName\r\n        };\r\n      }\r\n    });\r\n    return errorArr.filter(error => error != null);\r\n  }\r\n\r\n  /**\r\n   * è§£å³æ°å¼æ§ä»¶placeholderæ¾ç¤ºä¸ºundefinedçé®é¢\r\n   * @param s æ°å¼æ§ä»¶JSONæè¿°ä¸­çplaceholderéç½®ä¿¡æ¯\r\n   */\r\n  private emptyString(data: any) {\r\n    if (data === null || data === undefined) {\r\n      return '';\r\n    }\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * è§£å³jitçæä»£ç åä¸æå¸®å©æ§ä»¶çdisplayTypeå±æ§ä¸ç»ä»¶apiä¸ä¸è´çé®é¢\r\n   * @param data ä¸æå¸®å©æ§ä»¶JSONæè¿°ä¸­çdisplayTypeéç½®ä¿¡æ¯\r\n   */\r\n  private displayTypeTransform(data: any) {\r\n    if (data === 'List') {\r\n      return 'LOOKUPLIST';\r\n    }\r\n    return 'LOOKUPTREELIST';\r\n  }\r\n\r\n  /**\r\n   * è§£å³æ°å¼æ§ä»¶èµé»è®¤å¼åè½ä¸æå¤§æå°å¼éå¶åè½çå²çªé®é¢\r\n   * @param condition å½åæ­£å¨èµé»è®¤å¼çç­éæ¡ä»¶ï¼è¥æ¯æ°å¼ç±»åï¼éè¦æåå¶controlå¯¹è±¡çmaxå±æ§åminå±æ§çå¼\r\n   * @param value é»è®¤å¼éç½®valueå¯¹è±¡\r\n   * @param field é»è®¤å¼éç½®\r\n   * @returns æ ¡éªæå¤§å¼åæå°å¼ä¹åçé»è®¤å¼éç½®valueå¯¹è±¡\r\n   */\r\n  private isNumCheck(condition: any, value: any, field: any) {\r\n    let minValue: any;\r\n    let maxValue: any;\r\n    if (field.control.controltype == 'single-number') {\r\n      minValue = (condition.control.min == null || condition.control.min == undefined) ? -2147483648 : condition.control.min;\r\n      maxValue = (condition.control.max == null || condition.control.max == undefined) ? 2147483647 : condition.control.max;\r\n      value.numValue = ((value.numValue - minValue) > 0) ? value.numValue : minValue;\r\n      value.numValue = ((value.numValue - maxValue) < 0) ? value.numValue : maxValue;\r\n    }\r\n    if (field.control.controltype == 'number') {\r\n      minValue = (condition.control.min == null || condition.control.min == undefined) ? -2147483648 : condition.control.min;\r\n      maxValue = (condition.control.max == null || condition.control.max == undefined) ? 2147483647 : condition.control.max;\r\n      value.startValue = ((value.startValue - minValue) > 0) ? value.startValue : minValue;\r\n      value.startValue = ((value.startValue - maxValue) < 0) ? value.startValue : maxValue;\r\n      value.endValue = ((value.endValue - minValue) > 0) ? value.endValue : minValue;\r\n      value.endValue = ((value.endValue - maxValue) < 0) ? value.endValue : maxValue;\r\n    }\r\n    return value;\r\n  }\r\n\r\n  /**\r\n   * æºè½è¾å¥æ¡æ§ä»¶éè¦å¼¹åºè¡¨åæ¶ï¼å°è¡¨åéç½®JSONæè¿°è½¬æ¢ä¸ºå¼¹åºè¡¨åå½ä»¤å¯æ¥æ¶çå¼¹çªåæ°\r\n   * @param field éç½®ä¸ºæºè½è¾å¥æ¡æ§ä»¶çå­æ®µçJSONæè¿°\r\n   * @returns å¼¹çªåæ°\r\n   */\r\n  private setInputGroupDialog(field: any): DialogConfig {\r\n    let inputGroupControlData = field.control;\r\n    let modalConfigData = inputGroupControlData.modalConfig;\r\n    if (!field.id || inputGroupControlData.usageMode == 'text') {\r\n      return undefined;\r\n    }\r\n\r\n    let dialogConfig = new DialogConfig();\r\n    dialogConfig.modalId = field.id;\r\n    if (modalConfigData.mapFields) {\r\n      dialogConfig.mapFields = JSON.parse(modalConfigData.mapFields.replace(/'/g, '\"'));\r\n    }\r\n    dialogConfig.showHeader = modalConfigData.hasOwnProperty('showHeader') ? modalConfigData.showHeader : true;\r\n    dialogConfig.showCloseButton = modalConfigData.hasOwnProperty('showCloseButton') ? modalConfigData.showCloseButton : true;\r\n    dialogConfig.showMaxButton = modalConfigData.hasOwnProperty('showMaxButton') ? modalConfigData.showMaxButton : true;\r\n    dialogConfig.title = modalConfigData.hasOwnProperty('title') ? modalConfigData.title : '';\r\n    dialogConfig.width = modalConfigData.width;\r\n    dialogConfig.height = modalConfigData.height;\r\n    return dialogConfig;\r\n  }\r\n}\r\n\r\n","import { Component, ViewEncapsulation, Input, ComponentFactoryResolver, Injector, ComponentFactory,\r\n    Output, EventEmitter, LOCALE_ID, ViewChild, OnInit, OnDestroy, AfterViewChecked, NgZone, AfterViewInit } from '@angular/core';\r\nimport { QueryCondition } from './entity/querycondition';\r\nimport { CommunicationService } from './service/communicationservice';\r\nimport { ConvertorService } from './service/convertorservice';\r\nimport { ControlType } from './entity/controltype';\r\nimport { ConfigDialogComponent } from './fieldconfigdialog/configdialog.component';\r\nimport { BsModalService } from '@farris/ui-modal';\r\nimport { SolutionService } from './service/solution.service';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { Subject } from 'rxjs';\r\nimport { cloneDeep } from 'lodash-es';\r\n\r\n@Component({\r\n    selector: 'farris-querycondition',\r\n    templateUrl: './querycondition.component.html',\r\n    styleUrls: ['./querycondition.component.css'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    providers: [CommunicationService]\r\n})\r\nexport class QueryConditionComponent implements OnInit, OnDestroy, AfterViewChecked, AfterViewInit {\r\n\r\n    @Input() fieldConfigs: Array<QueryCondition>;\r\n    private _resetFieldConfigs = [];\r\n    @Input() \r\n    set resetFieldConfigs(value: Array<any>) {\r\n        if(value && value.length > 0) {\r\n            this.solutionService.updateControlConfigState(value);\r\n        }\r\n        this._resetFieldConfigs = value;\r\n    }\r\n    get resetFieldConfigs(){\r\n        return this._resetFieldConfigs;\r\n    }\r\n    @Input() isControlInline: boolean = true;\r\n    private _selectedFieldConditions:Array<QueryCondition>;\r\n    @Input() \r\n    set selectedFieldConditions(value: Array<QueryCondition>) {\r\n        this._selectedFieldConditions = value;\r\n    }\r\n    get selectedFieldConditions(): Array<QueryCondition> {\r\n        return this._selectedFieldConditions;\r\n    };\r\n\r\n    @Input() showCompleteLabel: boolean = false;\r\n\r\n    @Input() isDisabled: boolean;\r\n\r\n    @Output() fieldConditionsChange: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @ViewChild('configDialog') configDialog: ConfigDialogComponent;\r\n\r\n    localeIds = {\r\n        'en': 'en',\r\n        'zh-CHS': 'zh-CHS'\r\n    }\r\n    currentLocale: string;\r\n    \r\n    solutionService: SolutionService;\r\n    \r\n    controlType = ControlType;\r\n    \r\n    labelFormat: string;\r\n\r\n    showButton: boolean = false;\r\n\r\n    fieldCodeOfClearFields: Array<string> = [];\r\n\r\n    destroy$: Subject<any> = new Subject<any>();\r\n    \r\n    @ViewChild(\"queryConditionWrap\") queryConditionWrapEl;\r\n    // è·ångZone\r\n    private ngZone = null;\r\n    constructor(\r\n        private communicationService: CommunicationService,\r\n        private convertorService: ConvertorService,\r\n        private resolver: ComponentFactoryResolver,\r\n        private injector: Injector,\r\n        private modalService: BsModalService,\r\n        private localeService: LocaleService\r\n    ) {\r\n        this.currentLocale = this.injector.get(LOCALE_ID);\r\n        this.solutionService = this.injector.get(SolutionService);\r\n        if (!this.ngZone) {          \r\n            this.ngZone = this.injector.get<NgZone>(NgZone, null);\r\n        }\r\n    }\r\n    ngOnDestroy(): void {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        if (this.currentLocale === this.localeIds['en']) {\r\n            this.isControlInline = false;\r\n        }\r\n        this.selectedFieldConditions = this.selectedFieldConditions || new Array<QueryCondition>();\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n    }\r\n\r\n    ngAfterViewChecked(): void {\r\n        \r\n    }\r\n\r\n    hasSetMultiClass(currentItem: any):boolean{\r\n        if(currentItem.control.className&&currentItem.control.className.indexOf('farris-group-multi-label')>-1){\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /* */\r\n    getStyle(currentItem: any): string {\r\n        const defaultCondtionStyle = 'col-12 col-md-6 col-xl-3 col-el-2';\r\n        // è®¾ç½®æ¾ç¤ºæ ç­¾å¨å¹¶ä¸æ¾ç¤ºäºæè¡\r\n        // if(this.showCompleteLabel && currentItem.control.className == 'farris-group-multi-label'){\r\n        //     return defaultCondtionStyle.concat(\" farris-group-multi-label\");\r\n        // }\r\n        let className = currentItem.control.className;\r\n        className = className ? className.replace('farris-group-multi-label','') : '';        \r\n        return className ? className : defaultCondtionStyle;\r\n    }\r\n\r\n    configDialogConfirm(event: Event) {\r\n        const configData = event as unknown as Array<string>;\r\n        const reConfigConditions = new Array<QueryCondition>();\r\n        for(const data of configData) {\r\n            const target = this.selectedFieldConditions.find(condition => condition.fieldCode == data);\r\n            if(target) {\r\n                reConfigConditions.push(target);\r\n            } else {\r\n                reConfigConditions.push(this.fieldConfigs.find(condition => condition.fieldCode == data));\r\n            }\r\n        }\r\n        for(const condition of this.selectedFieldConditions) {\r\n            if(!condition.visible) {\r\n                reConfigConditions.push(condition);\r\n            }\r\n        }\r\n        this.selectedFieldConditions = reConfigConditions;\r\n        this.fieldConditionsChange.emit(this.selectedFieldConditions);\r\n    }\r\n\r\n    openFieldConfigDialog() {\r\n        this.configDialog.inputSelectedFileds = this.selectedFieldConditions ? this.selectedFieldConditions : [];\r\n        this.configDialog.dialog.show();\r\n    }\r\n\r\n    resetSelectedConditionValues(exceptRequired = false): Array<QueryCondition> {\r\n        return this.selectedFieldConditions.map(fieldCondition => {\r\n            if(exceptRequired){\r\n                if(!fieldCondition.control.isRequired()){\r\n                    fieldCondition.value.clearValue();\r\n                }\r\n            }else{\r\n                fieldCondition.value.clearValue();\r\n            }\r\n            \r\n            return fieldCondition;\r\n        });\r\n    }\r\n\r\n    conditionChange() {\r\n        this.fieldConditionsChange.emit(this.selectedFieldConditions);\r\n    }\r\n\r\n    confirmLabelFormat(conditions: Array<QueryCondition>) {\r\n        if(this.isControlInline) {\r\n            this.labelFormat = 'farris-form-controls-inline';\r\n            let hasCustom = false;\r\n            if(conditions.length) {\r\n                // å¤éæ¡labelæ ç­¾ç®åå¨æ¡çå³ä¾§ï¼è¶åºå®½åº¦åä¸æ¹åºç°æ»å¨æ¡ï¼è®¡ç®æ ç­¾æå¤§é¿åº¦æ¶éå°å¶æé¤\r\n                let noCheckBoxConditions: Array<QueryCondition> = [];\r\n                conditions.forEach(condition => {\r\n                    if(condition.control.getControlType() != ControlType.BoolCheck) {\r\n                        noCheckBoxConditions.push(condition);\r\n                    }\r\n                    if(condition.control['className']&& condition.control['className']!= 'farris-group-multi-label') {\r\n                        hasCustom = true;\r\n                    }\r\n                });\r\n               \r\n                this.labelFormat += hasCustom ? ' condition-is-custom' : ' condition-with-fixed';              \r\n\r\n                let maxLength = 0;\r\n                if(noCheckBoxConditions.length) {\r\n                    noCheckBoxConditions.forEach(item => {\r\n                        maxLength = (item.fieldName.length > maxLength) ? (item.fieldName.length) : maxLength;\r\n                    });\r\n                }\r\n                //éè¦å®æ´æ¾ç¤ºæ§ä»¶æ ç­¾æ¶ï¼æ ¹æ®æ ç­¾æå¤§é¿åº¦ç¡®å®æ ç­¾æ æ¯è¡å¯æ¾ç¤ºçå­ç¬¦æ°\r\n                if(this.showCompleteLabel) {\r\n                    if(maxLength > 8) {\r\n                        //æ ç­¾è¶åº8ä¸ªå­ç¬¦åï¼è®¾ç½®æ¯è¡æå¤å¯æ¾ç¤º10ä¸ªå­ç¬¦\r\n                        this.labelFormat = this.labelFormat.concat(\" f-form-label-xl\");\r\n                    }\r\n                    else if((maxLength < 9) && (maxLength > 6)) {\r\n                        //æ ç­¾è¶åº6ä¸ªå­ç¬¦ãä¸è¶è¿8ä¸ªå­ç¬¦æ¶ï¼è®¾ç½®æ¯è¡æå¤å¯æ¾ç¤º8ä¸ªå­ç¬¦\r\n                        this.labelFormat = this.labelFormat.concat(\" f-form-label-lg\");\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if(this.labelFormat){\r\n            return this.labelFormat + (this.isControlInline&&this.showCompleteLabel?' condition-with-complete':'');\r\n        }\r\n    }\r\n}\r\n","import { Component, Input, OnInit, Output, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { SolutionService } from '../../service/solution.service';\r\nimport { NumberRangeValue, NumberRangeValueConvertor } from '../../entity/conditionvalue/numberrangevaue';\r\n\r\n\r\n@Component({\r\n  selector: 'app-solution-numberrange',\r\n  templateUrl: './numberrange.component.html',\r\n})\r\n\r\nexport class NumberRangeComponent implements OnInit, OnChanges {\r\n  // numberRange: string;\r\n  beginValue: any;\r\n  endValue: any;\r\n  testId: string;\r\n  precision: number;\r\n  textAlign: string;\r\n  placeholder: string;\r\n  @Input() item: any;\r\n  canNull: boolean;\r\n  bigNumber: boolean;\r\n  min: number;\r\n  max: number;\r\n  beginPlaceHolder:string;\r\n  endPlaceHolder:string;\r\n\r\n  /**\r\n   * æä¸ªå­æ®µåçå¼ååäºä»¶æ¶ï¼éè¦åæ­¥æ¸ç©ºçå­æ®µï¼å¯è½ä¸æ¯å½åå­æ®µ\r\n   */\r\n  @Input() changeFields: Array<string> = [];\r\n\r\n  @Output('conditionChange') conditionChange = new EventEmitter();\r\n\r\n  constructor(private solutionService: SolutionService) { }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if(changes['changeFields'] && changes['changeFields'].currentValue && !changes['changeFields'].firstChange) {\r\n      const isChange = changes['changeFields'].currentValue.some(field => field == this.item.fieldCode);\r\n      if(isChange){\r\n        this.constructMultiFieldNumberRange(this.item.value as NumberRangeValue);\r\n      }\r\n  }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.testId = this.solutionService.getGuid();\r\n    this.canNull = true;\r\n    this.placeholder = (this.item.placeHolder) ? (this.item.placeHolder) : (this.item.control.placeholder);\r\n    this.beginPlaceHolder=this.item.beginPlaceHolder?this.item.beginPlaceHolder:this.placeholder;\r\n    this.endPlaceHolder=this.item.endPlaceHolder?this.item.endPlaceHolder:this.placeholder;\r\n    this.precision = this.item.control.precision;\r\n    this.textAlign = this.item.control.textAlign;\r\n    this.bigNumber = this.item.control.bigNumber ? this.item.control.bigNumber : false;\r\n    if(!this.bigNumber){\r\n      this.min = (this.item.control.min === undefined || this.item.control.min === null) ? -2147483648 : (this.item.control.min);\r\n      this.max = (this.item.control.max === undefined || this.item.control.max === null) ? 2147483647 : (this.item.control.max);\r\n    }\r\n    this.constructMultiFieldNumberRange(this.item.value as NumberRangeValue);\r\n  }\r\n\r\n  valueChange(data: any) {\r\n    if(typeof data !== 'string') {\r\n      return;\r\n    }\r\n    const dataArray = data.split(\"~\");\r\n    const start = dataArray[0] && dataArray[0].length > 0 ? dataArray[0] : null;\r\n    const end = dataArray[1] && dataArray[1].length > 0 ? dataArray[1] : null;\r\n    if(!this.bigNumber) {\r\n      this.item.value = new NumberRangeValue({startValue: start, endValue: end});\r\n    } else {\r\n      const numberRangeValue = new NumberRangeValue();\r\n      isNaN(parseFloat(start)) ? numberRangeValue.startValue = null : numberRangeValue.startValue = parseFloat(start);\r\n      isNaN(parseFloat(end)) ? numberRangeValue.endValue = null : numberRangeValue.endValue = parseFloat(end);\r\n      this.item.value = numberRangeValue;\r\n    }\r\n    this.conditionChange.emit();\r\n  }\r\n\r\n  // constructNumberRange(value: NumberRangeValue): string {\r\n  //   return \"a~b\".replace(/a/, value.startValue ? value.startValue.toString().trim() : \"\").replace(/b/, value.endValue ? value.endValue.toString().trim() : \"\");\r\n  // }\r\n\r\n  constructMultiFieldNumberRange(value: NumberRangeValue) {\r\n    // this.beginValue = value && value.startValue ? value.startValue.toString().trim() : '';\r\n    // this.endValue = value && value.endValue ? value.endValue.toString().trim() : '';\r\n    this.beginValue = value.startValue == null ? null : value.startValue;\r\n    this.endValue = value.endValue == null ? null : value.endValue;\r\n  }\r\n\r\n  // getConditionItemStyle(field: QueryCondition, controlType: any) {\r\n  //     return this.solutionService.getConditionItemStyle(field,controlType);\r\n  // }\r\n\r\n  getConditionItemTitle(field: QueryCondition) {\r\n    return this.solutionService.getConditionItemTitle(field);\r\n  }\r\n\r\n  beginValueChange($event) {\r\n    this.beginValue = $event;\r\n  }\r\n\r\n  endValueChange($event) {\r\n    this.endValue = $event;\r\n  }\r\n}\r\n","import { Component, Input, OnInit, OnChanges, EventEmitter, Output } from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { SolutionService } from '../../service/solution.service';\r\nimport { TextValue } from '../../entity/conditionvalue/textvalue';\r\nimport { NgModel } from '@angular/forms';\r\n\r\n@Component({\r\n    selector: 'app-solution-input',\r\n    templateUrl: './input.component.html',\r\n})\r\n\r\nexport class InputComponent implements OnInit {\r\n    /**\r\n     * QueryConditionç±»å\r\n     */\r\n    _inputItem: QueryCondition;\r\n\r\n    placeholder: string;\r\n\r\n    maxLength = undefined;\r\n\r\n    @Input()\r\n    set item(textItem: any) {\r\n        this._inputItem = textItem;\r\n    }\r\n    get item(): any {\r\n        return this.constructTextItem(this._inputItem);\r\n    }\r\n    testId: string;\r\n    hasError = false;\r\n\r\n    @Output('conditionChange') conditionChange = new EventEmitter();\r\n\r\n    constructTextItem(textItem: QueryCondition): QueryCondition {\r\n        const textValueObj = textItem.value as TextValue;\r\n        // textValueObj.value = textValueObj.value && textValueObj.value.trim();\r\n        textValueObj.value = textValueObj.value && textValueObj.value;\r\n        textItem.value = textValueObj;\r\n        return textItem;\r\n    }\r\n\r\n    constructor(private solutionService: SolutionService) { }\r\n\r\n    ngOnInit(): void {\r\n        this.testId = this.solutionService.getGuid();\r\n        this.placeholder = (this.item.placeHolder) ? (this.item.placeHolder) : (this.item.control.placeholder);\r\n    }\r\n\r\n    getConditionItemTitle(field: QueryCondition) {\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n\r\n    onBlur() {\r\n        if(this.hasError){\r\n            return;\r\n        }\r\n        this.conditionChange.emit();\r\n    }\r\n    /**\r\n     * æ¯å¦æéè¯¯ä¿¡æ¯\r\n     */\r\n    hasErrorInfo(textControl: NgModel) {\r\n        if (textControl.invalid && (textControl.dirty || textControl.touched) && textControl.errors.maxlength) {\r\n            this.hasError=true;\r\n            return true;\r\n        }\r\n        this.hasError=false;\r\n        return false;\r\n    }\r\n}","import { Component, Input, OnInit, EventEmitter, Output, OnDestroy } from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { SolutionService } from '../../service/solution.service';\r\nimport { InputGroupControl } from '../../entity/controltype/input-group/inputgroupcontrol';\r\nimport { InputGroupValue } from '../../entity/conditionvalue/inputgroupvalue';\r\n\r\n\r\n@Component({\r\n    selector: 'app-solution-inputgroup',\r\n    templateUrl: './inputgroup.component.html',\r\n})\r\n\r\nexport class InputGroupComponent implements OnInit, OnDestroy {\r\n    /**\r\n     * QueryConditionç±»å\r\n     */\r\n    _inputItem: QueryCondition;\r\n\r\n    @Input()\r\n    set item(inputGroupItem: any) {\r\n        this._inputItem = inputGroupItem;\r\n    }\r\n    get item(): any{\r\n        return this.constructInputGroupItem(this._inputItem);\r\n    }\r\n\r\n    @Output('conditionChange') conditionChange = new EventEmitter();\r\n    //ç»ä»¶id\r\n    testId: string;\r\n    //ä½¿ç¨æ¨¡å¼ï¼ææ¬textæèå¼¹çªopen-modal\r\n    usageMode: string;\r\n    //å¼¹çªå½ä»¤éè¦æ¥æ¶çåæ°\r\n    dialogOptions: any;\r\n    //å¼¹çªæ¨¡å¼ä¸ï¼ååè¡¨ä¸­åªä¸ªå­æ®µçå¼æ å°å°å½åå­æ®µ\r\n    textField: string;\r\n    //æ§ä»¶åæ¾ç¤ºææ¬æ¯å¦ä¸ºå¼¹çªè¿åçææ¬ï¼æå¨è¾å¥æèæå¨ååºä¿®æ¹æ¶ä¸ºfalse\r\n    isTextFromDialog: boolean = false;\r\n    //å¼¹çªè¿åçææ¬\r\n    textFormDialog: string;\r\n\r\n    constructInputGroupItem(inputGroupItem: QueryCondition): QueryCondition {\r\n        const inputGroupValueObj = inputGroupItem.value as InputGroupValue;\r\n        // inputGroupValueObj.textValue = inputGroupValueObj.textValue && inputGroupValueObj.textValue.trim();\r\n        inputGroupValueObj.textValue = inputGroupValueObj.textValue && inputGroupValueObj.textValue;\r\n        inputGroupItem.value = inputGroupValueObj;\r\n        return inputGroupItem;\r\n    }\r\n\r\n    constructor(private solutionService:SolutionService){}\r\n\r\n    ngOnInit(): void {\r\n        this.testId = this.solutionService.getGuid();\r\n        this.getInputGroupBindingInfo();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.item = null;\r\n    }\r\n\r\n    getInputGroupBindingInfo() {\r\n        const inputGroupControl = (this.item.control as InputGroupControl);\r\n        this.usageMode = inputGroupControl.usageMode;\r\n        if(this.usageMode == 'open-modal'||this.usageMode == 'open-remote-modal') {\r\n            this.dialogOptions = inputGroupControl.dialogOptions;\r\n            /*\r\n                example of dialogOptions = {\r\n                   modalId: \"1e011720-eb0f-4c9c-82b6-6844c89b2303\"\r\n                   mapFields: {hDepartment: \"Name\"}\r\n                   title: \"æµè¯æ é¢æ \"\r\n                   width: 800\r\n                   height: 600\r\n                }\r\n             */\r\n            if(this.dialogOptions.mapFields){\r\n                this.textField = JSON.stringify(this.dialogOptions.mapFields).split('\"')[1];\r\n            }\r\n        }\r\n    }\r\n\r\n    getConditionItemTitle(field:QueryCondition){\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n    \r\n    onClick(event: any){\r\n        if(this.usageMode == 'text'){\r\n            this.item.control.click();\r\n        }\r\n        else{\r\n            const options = this.dialogOptions;\r\n            options.handle = (selectedItem) => {\r\n                if(selectedItem && this.textField){\r\n                    this.item.value.value = selectedItem;\r\n                    this.item.value.textValue = this.item.value.getTextValue(this.textField);\r\n                    this.item.value.textField = this.textField;\r\n                    this.item.value.isInputText = false;\r\n\r\n                    this.isTextFromDialog = true;\r\n                    this.textFormDialog = this.item.value.textValue;\r\n                    this.onBlur();\r\n                }\r\n            }\r\n            this.item.control.click({event, options});\r\n        }\r\n    }\r\n\r\n    onBlur(){\r\n        if(this.usageMode == 'text') {\r\n            this.item.value.isInputText = true;\r\n        }\r\n        if(this.usageMode == 'open-modal'||this.usageMode == 'open-remote-modal') {\r\n            if(!this.isTextFromDialog) {\r\n                //console.log('å¼¹çªæ¨¡å¼ä¸æ§ä»¶åææ¬æ¯æå¨è¾å¥ç');\r\n                this.item.value.isInputText = true;\r\n            }\r\n            if(this.item.value.textValue != this.textFormDialog){\r\n                //console.log('éè¿å¼¹çªéæ©çå¼å·²è¢«æå¨ä¿®æ¹');\r\n                this.isTextFromDialog = false;\r\n                this.item.value.value = [];\r\n                this.item.value.textField = undefined;\r\n                this.item.value.isInputText = true;\r\n            }\r\n        }\r\n        this.conditionChange.emit();\r\n    }\r\n\r\n    clearData() {\r\n        (this.item.value as InputGroupValue).clearValue();\r\n        this.conditionChange.emit();\r\n    }\r\n}","import { Component, Input, OnInit, OnChanges, Output, EventEmitter, Injector, ViewChild, SimpleChanges } from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { ControlType } from '../../entity/controltype';\r\nimport { SmartHelpContol } from '../../entity/controltype/smarthelp/smarthelpcontrol';\r\nimport { IControl } from '../../entity/controltype/icontrol';\r\nimport { SmartHelpValue } from '../../entity/conditionvalue/smarthelpvalue';\r\nimport { SolutionService } from '../../service/solution.service';\r\nimport { LookupGridComponent } from '@farris/ui-lookup';\r\nimport { of } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'app-solution-smarthelp',\r\n    templateUrl: './smarthelp.component.html',\r\n})\r\n\r\nexport class SolutionSmartHelpComponent implements OnInit, OnChanges {\r\n\r\n    /**\r\n     * QueryConditionç±»å\r\n     */\r\n    @Input() item: any;\r\n\r\n    /**\r\n     * æä¸ªå­æ®µåçå¼ååäºä»¶æ¶ï¼éè¦åæ­¥æ¸ç©ºçå­æ®µï¼å¯è½ä¸æ¯å½åå­æ®µ\r\n     */\r\n    @Input() changeFields: Array<string> = [];\r\n\r\n    @Output('conditionChange') conditionChange = new EventEmitter();\r\n\r\n    @Output('helpMapping') mappingEmitter = new EventEmitter();\r\n\r\n    @ViewChild('lookup') lookup: LookupGridComponent;\r\n\r\n    uri: string;\r\n    textField: string;\r\n    mapFields: any;\r\n    idField: any;\r\n    valueField: any;\r\n    textValue: any;\r\n    displayType: any;\r\n    context: any;\r\n    preEventCmd: any;\r\n    postEventCmd: any;\r\n    loadTreeDataType: string;\r\n    enableFullTree: boolean;\r\n    singleSelect: boolean;\r\n    expandLevel: number;\r\n    enableCascade: boolean;\r\n    testId: string;\r\n    placeholder: string;\r\n    nosearch: boolean;\r\n    displayFields: string;\r\n    displayTextSeparator: string;\r\n    editable: boolean;\r\n    clearFields: string;\r\n    // æ é¢\r\n    dialogTitle: string;\r\n    // å®½åº¦\r\n    dialogWidth: number;\r\n    // é«åº¦\r\n    dialogHeight: number;\r\n    /** æ¯é¡µè®°å½æ° */\r\n    pageSize: number = 20;\r\n    /** å¯ç¨åé¡µè®°å½æ°åè¡¨ */\r\n    pageList: Array<number> = [10, 20, 30, 50, 100];\r\n\r\n    constructor(private solutionService: SolutionService) { }\r\n\r\n    ngOnInit(): void {\r\n        this.getSmartHelpBindingInfo();\r\n        this.testId = this.solutionService.getGuid();\r\n        this.placeholder = (this.item.placeHolder) ? (this.item.placeHolder) : (this.item.control.placeholder);\r\n\r\n        this.lookup.textChanged.subscribe((v) => {\r\n            this.textChangedHandler(v);\r\n        })\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        this.getSmartHelpBindingInfo();\r\n        if (changes['changeFields'] && changes['changeFields'].currentValue && !changes['changeFields'].firstChange) {\r\n            const isChange = changes['changeFields'].currentValue.some(field => field == this.item.fieldCode);\r\n            if (isChange) {\r\n                this.textValue = (this.item.value as SmartHelpValue).textValue;\r\n            }\r\n        }\r\n    }\r\n\r\n    //ITEMï¼\r\n    //control: SmartHelpContol {uri: \"WuLiao.wOrgId\", textField: \"name\", valueField: \"code\", mapFields: {}, idField: \"id\"}\r\n    // fieldCode: \"wOrgId\"\r\n    // fieldName: \"æå±æºæ\"\r\n    // id: \"WuLiao.wOrgId\"\r\n    // value: SmartHelpValue {valueField: null, value: null}\r\n    // valueType: 0\r\n    getSmartHelpBindingInfo() {\r\n        const smartHelpControl = (this.item.control as SmartHelpContol);\r\n        this.uri = smartHelpControl.uri;\r\n        this.textField = smartHelpControl.textField;\r\n        this.idField = smartHelpControl.idField;\r\n        this.valueField = smartHelpControl.valueField;\r\n        this.displayType = smartHelpControl.displayType;\r\n        this.mapFields = smartHelpControl.mapFields;\r\n        this.context = smartHelpControl.context;\r\n        this.preEventCmd = smartHelpControl.preEventCmd;\r\n        this.postEventCmd = smartHelpControl.postEventCmd;\r\n        this.enableFullTree = smartHelpControl.enableFullTree;\r\n        this.loadTreeDataType = smartHelpControl.loadTreeDataType;\r\n        this.singleSelect = smartHelpControl.singleSelect === false ? false : true;\r\n        this.expandLevel = smartHelpControl.expandLevel;\r\n        this.enableCascade = smartHelpControl.enableCascade;\r\n        // æ é¢\r\n        this.dialogTitle = smartHelpControl.dialogTitle?smartHelpControl.dialogTitle:'';\r\n        // å®½åº¦\r\n        this.dialogWidth = smartHelpControl.panelWidth;\r\n        // é«åº¦\r\n        this.dialogHeight = smartHelpControl.panelHeight;\r\n        const smartHelpValue = (this.item.value as SmartHelpValue);\r\n        if (smartHelpValue.textValue == 'help-text-value-null') {//æ§æ°æ®å¼å®¹\r\n            this.textValue = smartHelpValue.getTextValue(this.textField);\r\n        } else {\r\n            this.textValue = smartHelpValue.textValue;\r\n        }\r\n        this.nosearch = smartHelpControl.nosearch;//é»è®¤false\r\n        this.displayFields = smartHelpControl.displayFields ? smartHelpControl.displayFields : '';\r\n        this.displayTextSeparator = smartHelpControl.displayTextSeparator ? smartHelpControl.displayTextSeparator : '_';\r\n        this.editable = smartHelpControl.editable;\r\n        this.clearFields = smartHelpControl.clearFields;\r\n        if (smartHelpControl.hasOwnProperty('pageSize') && smartHelpControl.pageSize) {\r\n            this.pageSize = smartHelpControl.pageSize\r\n        }\r\n        if (smartHelpControl.hasOwnProperty('pageList') && smartHelpControl.pageList) {\r\n            this.pageList = smartHelpControl.pageList.split(\",\").map(item => { return parseInt(item); })\r\n        }\r\n    }\r\n\r\n    onBeforeOpen = () => {\r\n        const t = this.item.value as SmartHelpValue;\r\n        if (t && t.value) {\r\n            const ids = t.value.map(n => n[this.idField || 'id']).join(',');\r\n            this.lookup.displayValue = ids;\r\n        }\r\n\r\n        return of(true);\r\n    }\r\n\r\n    clearData(data: any) {\r\n        (this.item.value as SmartHelpValue).clearValue();\r\n        if (this.item.control.clear) {\r\n            this.item.control.clear();\r\n        }\r\n        this.conditionChange.emit();\r\n    }\r\n\r\n    getConditionItemTitle(field: QueryCondition) {\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n\r\n    /**\r\n     * selectedItem\r\n     * code: \"code02\"\r\n        id: \"id02\"\r\n        name: \"æºæ02\"\r\n        version: \"2019-10-21T00:00:00\"\r\n    */\r\n    textChangedHandler(data: string) {//æå·¥è¾å¥æ¶è§¦å\r\n        if (this.item && this.item.value) {\r\n            const helpValue = (this.item.value as SmartHelpValue);\r\n            helpValue.value = [data];\r\n            helpValue.textValue = data;\r\n            helpValue.isInputText = true;\r\n            // this.textValue = helpValue.textValue;\r\n            this.conditionChange.emit();\r\n        }\r\n    }\r\n\r\n    selectedDataHandler(selectedItem: any) {//éæ©æ¶è§¦å\r\n        const helpValue = (this.item.value as SmartHelpValue);\r\n        helpValue.value = this.singleSelect ? [selectedItem] : selectedItem;//åéè¿åå¯¹è±¡ï¼å¤éè¿åæ°ç»\r\n        helpValue.valueField = this.valueField;\r\n        helpValue.textValue = this.textValue;\r\n        helpValue.isInputText = false;\r\n        this.conditionChange.emit();\r\n    }\r\n}","import { Component, Input, OnInit, OnChanges, EventEmitter, Output, SimpleChanges } from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { ControlType } from '../../entity/controltype';\r\nimport { DropDownListControl } from '../../entity/controltype/dropdownlist/dropdownlistcontrol';\r\nimport { EnumType } from '../../entity/controltype/dropdownlist/enumtype';\r\nimport { EnumIntegerValue } from '../../entity/controltype/dropdownlist/integerenumvalue';\r\nimport { EnumStringValue } from '../../entity/controltype/dropdownlist/stringenumvalue';\r\nimport { EnumBoolValue } from '../../entity/controltype/dropdownlist/boolenumvalue';\r\nimport { SolutionService } from '../../service/solution.service';\r\nimport { IValue } from '../../entity/conditionvalue/ivalue';\r\nimport { DropDownListValue } from '../../entity/conditionvalue/dropdownlistvalue';\r\n\r\n@Component({\r\n    selector: 'app-solution-dropdownlist',\r\n    templateUrl: './dropdownlist.component.html',\r\n})\r\n\r\nexport class DropDownListComponent implements OnInit, OnChanges {\r\n    /**\r\n     * QueryConditionç±»å\r\n     */\r\n    @Input() item: any;\r\n\r\n    /**\r\n     * æä¸ªå­æ®µåçå¼ååäºä»¶æ¶ï¼éè¦åæ­¥æ¸ç©ºçå­æ®µï¼å¯è½ä¸æ¯å½åå­æ®µ\r\n     */\r\n    @Input() changeFields: Array<string> = [];\r\n\r\n    @Output('conditionChange') conditionChange = new EventEmitter();\r\n\r\n    //ä¸æåè¡¨æ°æ®æº\r\n    dropDownListDataSource: Array<any> = new Array<any>();\r\n    //æå¡å¨ç«¯APIå°å\r\n    uri: string;\r\n    //é¢æ¿æ¾ç¤ºåäºä»¶\r\n    beforeShow: any;\r\n    //é¢æ¿éèåäºä»¶\r\n    beforeHide: any;\r\n    //æä¸¾å¼å­æ®µ\r\n    idField: string;\r\n    //æä¸¾åç§°å­æ®µ\r\n    textField: string;\r\n    //ä¸æåè¡¨æ§ä»¶åæ¾ç¤ºææ¬\r\n    selectedItemId: any = '';\r\n    //ç»ä»¶id\r\n    testId: string;\r\n    //æ§ç»æä¸­placeholderå±æ§å¨item.controlå\r\n    placeholder: string;\r\n\r\n    constructor(private solutionService: SolutionService) {}\r\n\r\n    ngOnInit(): void {\r\n        this.getDataSource();\r\n        const initialValue = this.item.value as DropDownListValue;\r\n        initialValue.key && (this.selectedItemId = initialValue.key);\r\n        this.testId = this.solutionService.getGuid();\r\n        this.placeholder = (this.item.placeHolder) ? (this.item.placeHolder) : (this.item.control.placeholder);\r\n        this.beforeShow = (this.item.control as DropDownListControl).beforeShow;\r\n        this.beforeHide = (this.item.control as DropDownListControl).beforeHide;\r\n        this.idField = (this.item.control as DropDownListControl).idField ? (this.item.control as DropDownListControl).idField : 'value';\r\n        this.textField = (this.item.control as DropDownListControl).textField ? (this.item.control as DropDownListControl).textField : 'name';\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        this.getDataSource();\r\n        if(changes['changeFields'] && changes['changeFields'].currentValue && !changes['changeFields'].firstChange) {\r\n            const isChange = changes['changeFields'].currentValue.some(field => field == this.item.fieldCode);\r\n            if(isChange){\r\n                this.selectedItemId = (this.item.value as DropDownListValue).key;\r\n            }\r\n        }\r\n    }\r\n\r\n    getDataSource() {\r\n        this.dropDownListDataSource = (this.item.control as DropDownListControl).enumValues;\r\n        this.uri = (this.item.control as DropDownListControl).uri;\r\n    }\r\n\r\n    selectChange(selected: any) {\r\n        const selectedValue = selected['selections'].map((selection: any) => {\r\n            return {\r\n                value: this.uri ? selection[this.textField] : selection[this.idField],\r\n                name: selection[this.textField]\r\n            }\r\n        });\r\n        const uriDataKey = (selectedValue as Array<any>).map(data => data.value).join(\",\");\r\n        this.item.value = new DropDownListValue({\r\n            value : selectedValue,\r\n            key :  this.uri ? uriDataKey : selected['value']\r\n        });\r\n        this.conditionChange.emit();\r\n    }\r\n\r\n    onClear(event: any) {\r\n        this.item.value = new DropDownListValue();\r\n    }\r\n\r\n    getConditionItemTitle(field:QueryCondition) {\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n}","import { Component, Input, OnInit, Output, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { SolutionService } from '../../service/solution.service';\r\nimport { SingleNumberValue } from '../../entity/conditionvalue/single-number-value';\r\n\r\n@Component({\r\n    selector: 'app-solution-single-number',\r\n    templateUrl: './single-number.component.html',\r\n})\r\n\r\nexport class SingleNumberComponent implements OnInit, OnChanges {\r\n\r\n    number: number;\r\n    placeholder: string;\r\n    precision: number;\r\n    textAlign: string;\r\n    @Input() item: any;\r\n    testId: string;\r\n    canNull: boolean;\r\n    bigNumber: boolean;\r\n    min: number;\r\n    max: number;\r\n\r\n    /**\r\n     * æä¸ªå­æ®µåçå¼ååäºä»¶æ¶ï¼éè¦åæ­¥æ¸ç©ºçå­æ®µï¼å¯è½ä¸æ¯å½åå­æ®µ\r\n     */\r\n    @Input() changeFields: Array<string> = [];\r\n\r\n    @Output('conditionChange') conditionChange = new EventEmitter();\r\n\r\n    constructor(private solutionService:SolutionService){}\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if(changes['changeFields'] && changes['changeFields'].currentValue && !changes['changeFields'].firstChange) {\r\n            const isChange = changes['changeFields'].currentValue.some(field => field == this.item.fieldCode);\r\n            if(isChange){\r\n                this.number = this.item.value.getOriginalValue();\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.number = this.item.value.getOriginalValue();\r\n        this.testId = this.solutionService.getGuid();\r\n        this.canNull = true;\r\n        this.placeholder = (this.item.placeHolder) ? (this.item.placeHolder) : (this.item.control.placeholder);\r\n        this.precision = this.item.control.precision;\r\n        this.textAlign = this.item.control.textAlign;\r\n        this.bigNumber = this.item.control.bigNumber ? this.item.control.bigNumber : false;\r\n        if(!this.bigNumber){\r\n            this.min = (this.item.control.min === undefined || this.item.control.min === null) ? -2147483648 : (this.item.control.min);\r\n            this.max = (this.item.control.max === undefined || this.item.control.max === null) ? 2147483647 : (this.item.control.max);\r\n        }\r\n    }\r\n\r\n    valueChange(data: any){\r\n        const numberValue = new SingleNumberValue();\r\n        isNaN(parseFloat(data)) ? numberValue.numValue = null : numberValue.numValue = data;\r\n        this.item.value = numberValue;\r\n        this.conditionChange.emit();\r\n    }\r\n\r\n    // getConditionItemStyle(field: QueryCondition, controlType: any) {\r\n    //     return this.solutionService.getConditionItemStyle(field,controlType);\r\n    // }\r\n\r\n    getConditionItemTitle(field:QueryCondition){\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n}","import { Component, OnInit, Output, EventEmitter, ViewChild, TemplateRef, HostBinding, ViewEncapsulation, ElementRef, Input, SkipSelf, OnChanges, SimpleChanges, ContentChild, AfterContentInit, AfterViewInit } from '@angular/core';\r\nimport { SolutionService } from '../service/solution.service';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { DialogComponent } from '@farris/ui-dialog';\r\nimport { QueryCondition } from '../entity/querycondition';\r\nimport { MultiSelectComponent } from '@farris/ui-multi-select';\r\n@Component({\r\n    selector: 'app-queryconfigdialog',\r\n    templateUrl: './configdialog.component.html',\r\n    styleUrls: ['./configdialog.component.css'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ConfigDialogComponent implements OnInit, OnChanges {\r\n    @Input() inputSelectedFileds: Array<QueryCondition> = [];\r\n    @Input() filedsDataSource: Array<QueryCondition>;\r\n    @Output() cancelEmitter: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() confirmEmitter: EventEmitter<any> = new EventEmitter<any>();\r\n    @ViewChild('dialog') dialog: DialogComponent;\r\n    @ViewChild('searchMulti') multiSelectCmp: MultiSelectComponent;\r\n\r\n    selectedIds: Array<string> = [];\r\n    title: string;\r\n    visibleFields: Array<QueryCondition>;\r\n    visibleSelectedFields: Array<QueryCondition>;\r\n    constructor(private solutionService: SolutionService, private localeService: LocaleService) { }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if(changes.filedsDataSource && changes.filedsDataSource.currentValue) {\r\n            this.visibleFields = this.filedsDataSource.filter(item => {return !!item.visible});\r\n        }\r\n\r\n        if (changes.inputSelectedFileds && changes.inputSelectedFileds.currentValue) {\r\n            this.visibleSelectedFields = this.inputSelectedFileds.filter(item => {return !!item.visible});\r\n            if(this.visibleSelectedFields.length) {\r\n                this.selectedIds = this.visibleSelectedFields.map(qc => qc.id);\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.title = this.localeService.getValue('queryCondition.container.config');\r\n        if(this.filedsDataSource) {\r\n            this.visibleFields = this.filedsDataSource.filter(item => {return !!item.visible});\r\n        }\r\n    }\r\n    /**\r\n     * åæ¶\r\n     */\r\n    cancel() {\r\n        this.selectedIds = this.visibleSelectedFields.map(qc => qc.id);\r\n        this.cancelEmitter.emit(true);        \r\n        this.multiSelectCmp.searchValue = '';\r\n        this.dialog.close();\r\n    }\r\n\r\n    /**\r\n     * ç¡®è®¤\r\n     */\r\n    confirm() {\r\n        const selectedFields = [];\r\n        let _fieldData: QueryCondition;\r\n        this.selectedIds.forEach(id => {\r\n            const index = this.visibleSelectedFields.findIndex(field => field.id == id);\r\n            if (index > -1) {\r\n                selectedFields.push(this.visibleSelectedFields[index].fieldCode);\r\n            } else {\r\n                _fieldData = this.visibleFields.find(field => field.id == id);\r\n                _fieldData.value.clearValue();\r\n                selectedFields.push(_fieldData.fieldCode);\r\n            }\r\n        });\r\n        this.confirmEmitter.emit(selectedFields);\r\n        this.multiSelectCmp.searchValue = '';\r\n        this.dialog.close();\r\n    }\r\n\r\n    /**\r\n     * éç½®\r\n     */\r\n    reset() {\r\n\r\n    }\r\n}\r\n","import { Component, Input, OnInit, Injector, OnChanges, SimpleChanges, EventEmitter, Output} from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { SolutionService } from '../../service/solution.service';\r\nimport { CheckBoxValue } from '../../entity/conditionvalue/checkbox-value';\r\nimport { CheckBoxControl } from '../../entity/controltype/checkbox/checkbox-control';\r\n\r\n\r\n@Component({\r\n    selector: 'app-solution-checkbox',\r\n    templateUrl: './checkbox.component.html',\r\n})\r\n\r\nexport class CheckBoxComponent implements OnInit, OnChanges {\r\n   \r\n    _item: QueryCondition;\r\n    checkValue: any[];\r\n    controlData: CheckBoxControl;\r\n    @Input() \r\n    set item(nr: QueryCondition){\r\n        this._item = nr;\r\n    }\r\n\r\n    get item(){\r\n        return this._item;\r\n    }\r\n    testId:string;\r\n\r\n    /**\r\n     * æä¸ªå­æ®µåçå¼ååäºä»¶æ¶ï¼éè¦åæ­¥æ¸ç©ºçå­æ®µï¼å¯è½ä¸æ¯å½åå­æ®µ\r\n     */\r\n    @Input() changeFields: Array<string> = [];\r\n\r\n    @Output('conditionChange') conditionChange = new EventEmitter();\r\n\r\n    solutionService: SolutionService;\r\n\r\n    constructor(private injector: Injector){\r\n        this.solutionService = this.injector.get(SolutionService);\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if(changes['changeFields'] && changes['changeFields'].currentValue && !changes['changeFields'].firstChange) {\r\n            const isChange = changes['changeFields'].currentValue.some(field => field == this.item.fieldCode);\r\n            if(isChange){\r\n                this.checkValue = (this.item.value as CheckBoxValue).getOriginalValue();\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.checkValue = this.item.value.getOriginalValue();\r\n        this.controlData = this.item.control as CheckBoxControl;\r\n        this.testId = this.solutionService.getGuid();\r\n    }\r\n\r\n    valueChanged(event: any[]){\r\n        //éä¸­æ¶è¿å[true], ä»éä¸­åä¸ºæªéä¸­æ¶è¿å[]\r\n        if(event.length){\r\n            this._item.value.setOriginalValue(event);\r\n        }else{\r\n            this._item.value.setOriginalValue([false]);\r\n        }\r\n        this.conditionChange.emit();\r\n    }\r\n\r\n    getConditionItemTitle(field:QueryCondition){\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n}","import { Component, Input, OnInit, OnChanges, Injector, EventEmitter, Output, HostBinding, SimpleChanges } from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { SolutionService } from '../../service/solution.service';\r\nimport { RadioControl } from '../../entity/controltype/radio/radio-control';\r\nimport { RadioValue } from '../../entity/conditionvalue/radio-value';\r\n\r\n@Component({\r\n    selector: 'app-solution-radio',\r\n    templateUrl: './radio.component.html',\r\n})\r\n\r\nexport class RadioComponent implements OnInit, OnChanges {\r\n\r\n    _item: QueryCondition;\r\n    solutionService: SolutionService;\r\n    radioControl: RadioControl;\r\n    radioValue: any;\r\n    testId: string;\r\n    showLabel: boolean;\r\n\r\n    @Input()\r\n    set item(nr: QueryCondition){\r\n        this._item = nr;\r\n    }\r\n    get item(){\r\n        return this._item;\r\n    }\r\n    \r\n    /**\r\n     * æä¸ªå­æ®µåçå¼ååäºä»¶æ¶ï¼éè¦åæ­¥æ¸ç©ºçå­æ®µï¼å¯è½ä¸æ¯å½åå­æ®µ\r\n     */\r\n    @Input() changeFields: Array<string> = [];\r\n\r\n    @Output('conditionChange') conditionChange = new EventEmitter();\r\n\r\n    @HostBinding('class.f-solution-radio-group-wrapper') cls = true;\r\n\r\n    constructor(private injector: Injector) {\r\n       this.solutionService = this.injector.get(SolutionService);\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if(changes['changeFields'] && changes['changeFields'].currentValue && !changes['changeFields'].firstChange) {\r\n            const isChange = changes['changeFields'].currentValue.some(field => field == this.item.fieldCode);\r\n            if(isChange){\r\n                this.radioValue = (this.item.value as RadioValue).getOriginalValue();\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnInit(): void {\r\n       this.radioControl = this.item.control as RadioControl;\r\n       this.radioValue = (this.item.value as RadioValue).getOriginalValue();\r\n       this.testId = this.solutionService.getGuid();\r\n       this.showLabel = this.radioControl.showLabel;\r\n    }\r\n\r\n    valueChanged(event: any){\r\n        this._item.value.setOriginalValue(event);\r\n        this.conditionChange.emit();\r\n    }\r\n\r\n    getConditionItemTitle(field:QueryCondition){\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n}","import { Component, Input, OnInit, OnChanges, Injector, EventEmitter, Output, SimpleChanges, OnDestroy } from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { SolutionService } from '../../service/solution.service';\r\n\r\nimport { ControlType } from '../../entity/controltype';\r\nimport { ShowType } from '@farris/ui-datepicker';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { QueryConditionComponent } from '../../querycondition.component';\r\n\r\n@Component({\r\n  selector: 'app-solution-datepicker',\r\n  templateUrl: './datepicker.component.html',\r\n})\r\nexport class DatePickerComponent implements OnInit, OnChanges, OnDestroy {\r\n  // è¿æ»¤æ¡ä»¶\r\n  @Input() item: any;\r\n  // \r\n  @Input() controlType: number;\r\n\r\n  /**\r\n   * æä¸ªå­æ®µåçå¼ååäºä»¶æ¶ï¼éè¦åæ­¥æ¸ç©ºçå­æ®µï¼å¯è½ä¸æ¯å½åå­æ®µ\r\n   */\r\n  @Input() changeFields: Array<string> = [];\r\n\r\n  @Output('conditionChange') conditionChange = new EventEmitter();\r\n\r\n  solutionService: SolutionService;\r\n  dateRange: boolean; // trueåºé´ falseå\r\n  showTime: boolean; // trueæ¾ç¤ºæ¶é´ falseä¸æ¾ç¤º\r\n  showType: number = ShowType.all; // æ¾ç¤ºç±»åï¼é»è®¤æ¾ç¤ºå¨é¨1ï¼ä¸æ¾ç¤ºæ¥æï¼ç¨äºéæ©å¹´ææ¨¡å¼2ï¼ä¸æ¾ç¤ºæ¥æåæä»½ï¼ç¨äºéæ©å¹´æ¨¡å¼3ï¼ç¨äºå¨éæ©4ã\r\n  maxDate: string | Date | null = '';\r\n  minDate: string | Date | null = '';\r\n  disableDates: { year: number, month: number, day: number }[];\r\n  placeholder: string;\r\n  dateFormat: string; // æ¾ç¤ºå¼æ¥ææ ¼å¼å\r\n  returnFormat: string; // è¿åå¼æ¥ææ ¼å¼å\r\n  returnType: string; // è¿åå¼ç±»åï¼è¿åå¼ç±»åé»è®¤æåµä¸æ¯åè¾å¥å¼ç±»åç¸åï¼ä½æ¯å¦æè¾å¥å¼ä¸ºnullç­éæ³å¼ï¼é»è®¤ä¸ºStringï¼å¦ææ³æ¹ä¸ºDateï¼å®ä¹è¯¥å­æ®µã\r\n  disabled: boolean;\r\n  readonly: boolean;\r\n  editable: boolean = false;\r\n  dateRangeDatesDelimiter: string = '~';\r\n  bindValue: string;\r\n  beginValue: any;\r\n  endValue: any;\r\n  testId: string;\r\n  beginPlaceHolder:string;\r\n  endPlaceHolder:string;\r\n  destroy$: Subject<any>;\r\n  \r\n  constructor(private injector: Injector) {\r\n    this.solutionService = this.injector.get(SolutionService);\r\n    const queryconditionComponent = this.injector.get(QueryConditionComponent, null);\r\n    if(queryconditionComponent) {\r\n      this.destroy$ = queryconditionComponent.destroy$;\r\n    } else {\r\n      this.destroy$ = new Subject<any>();\r\n    }\r\n\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes['changeFields'] && changes['changeFields'].currentValue && !changes['changeFields'].firstChange) {\r\n      const isChange = changes['changeFields'].currentValue.some(field => field == this.item.fieldCode);\r\n      if (isChange) {\r\n        if (this.dateRange) {\r\n          this.beginValue = this.item.value && this.item.value.startTime ? this.item.value.startTime.toString().trim() : '';\r\n          this.endValue = this.item.value && this.item.value.endTime ? this.item.value.endTime.toString().trim() : '';\r\n          this.bindValue = this.item.value.getOriginalValue();\r\n        } else {\r\n          this.bindValue = this.item.value.getOriginalValue();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.testId = this.solutionService.getGuid();\r\n    // const controlType = this.item.control.getControlType();\r\n    switch (this.controlType) {\r\n      case ControlType.DateRange:\r\n        this.returnFormat = this.item.control.returnFormat?this.item.control.returnFormat:'yyyy-MM-dd';\r\n        this.dateFormat = this.item.control.format ? this.item.control.format : 'yyyy-MM-dd';\r\n        this.dateRange = true;\r\n        break;\r\n      case ControlType.SingleDate:\r\n        this.returnFormat = this.item.control.returnFormat?this.item.control.returnFormat:'yyyy-MM-dd';\r\n        this.dateFormat = this.item.control.format ? this.item.control.format : 'yyyy-MM-dd';\r\n        this.dateRange = false;\r\n        break;\r\n      case ControlType.SingleYear:\r\n        this.returnFormat = this.item.control.returnFormat?this.item.control.returnFormat:'yyyy';\r\n        this.dateFormat = this.item.control.format ? this.item.control.format : 'yyyy';\r\n        this.showType = ShowType.noDateAndMonth;\r\n        this.dateRange = false;\r\n        break;\r\n      case ControlType.DateTimeRange:\r\n        this.returnFormat = this.item.control.returnFormat?this.item.control.returnFormat:'yyyy-MM-dd HH:mm:ss';\r\n        if(this.item.control.enableCustomFormat){\r\n          // ä½¿ç¨èªå®ä¹æ ¼å¼\r\n          this.dateFormat = this.item.control.format ? this.item.control.format : 'yyyy-MM-dd HH:mm:ss';\r\n        }else{\r\n           // æªå¯ç¨èªå®ä¹æ ¼å¼\r\n           this.dateFormat = this.item.control.format ? this.item.control.format : 'yyyy-MM-dd';\r\n           this.dateFormat = this.dateFormat + ' HH:mm:ss';\r\n        }\r\n        this.showTime = true;\r\n        this.dateRange = true;\r\n        break;\r\n      case ControlType.SingleMonth:\r\n        this.returnFormat = this.item.control.returnFormat?this.item.control.returnFormat:'yyyy-MM';\r\n        this.dateFormat = this.item.control.format ? this.item.control.format : 'yyyy-MM';\r\n        this.showType = ShowType.noDate;\r\n        this.dateRange = false;\r\n        break;\r\n      case ControlType.MonthRange:\r\n        this.returnFormat = this.item.control.returnFormat?this.item.control.returnFormat:'yyyy-MM';\r\n        this.dateFormat = this.item.control.format ? this.item.control.format : 'yyyy-MM';\r\n        this.showType = ShowType.noDate;\r\n        this.dateRange = true;\r\n        break;\r\n      case ControlType.SingleDateTime:\r\n        this.returnFormat = this.item.control.returnFormat?this.item.control.returnFormat:'yyyy-MM-dd HH:mm:ss';\r\n        if(this.item.control.enableCustomFormat){\r\n          // ä½¿ç¨èªå®ä¹æ ¼å¼\r\n          this.dateFormat = this.item.control.format ? this.item.control.format : 'yyyy-MM-dd HH:mm:ss';\r\n        }else{\r\n           // æªå¯ç¨èªå®ä¹æ ¼å¼\r\n           this.dateFormat = this.item.control.format ? this.item.control.format : 'yyyy-MM-dd';\r\n           this.dateFormat = this.dateFormat + ' HH:mm:ss';\r\n        }\r\n        this.showTime = true;\r\n        this.dateRange = false;\r\n        break;\r\n    }\r\n    // æ´æ°æ¡ä»¶\r\n    this.updateParamsByCondition();\r\n    this.placeholder = this.item.placeHolder ? this.item.placeHolder : this.item.control.placeholder;\r\n    if (this.dateRange) {\r\n      this.beginValue = this.item.value && this.item.value.startTime ? this.item.value.startTime.toString().trim() : '';\r\n      this.endValue = this.item.value && this.item.value.endTime ? this.item.value.endTime.toString().trim() : '';\r\n      this.beginPlaceHolder = this.item.beginPlaceHolder ? this.item.beginPlaceHolder : this.placeholder;\r\n      this.endPlaceHolder = this.item.endPlaceHolder ? this.item.endPlaceHolder : this.placeholder;\r\n      this.bindValue = this.item.value.getOriginalValue();\r\n    } else {\r\n      this.bindValue = this.item.value.getOriginalValue();\r\n    }\r\n    \r\n    if (this.item.control.weekSelect && this.controlType == ControlType.DateRange) {\r\n      this.showType = ShowType.selectWeek;\r\n    }\r\n    \r\n    // \r\n    this.solutionService.getControlConfigState().pipe(takeUntil(this.destroy$)).subscribe((simpleConditions) => {\r\n      //ç®åæ¡ä»¶\r\n      let findSimpleCondition = simpleConditions.find(item => item['fieldCode'] == this.item['fieldCode']);\r\n      if (findSimpleCondition) {\r\n        this.updateParamsByCondition(findSimpleCondition);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n\r\n  }\r\n\r\n  private updateParamsByCondition(condition = null) {\r\n    let conditionControl = null;\r\n    conditionControl = condition ? condition.control : this.item.control;\r\n    switch (this.controlType) {\r\n      case ControlType.SingleYear:\r\n        this.maxDate = conditionControl.hasOwnProperty('maxDate') ? conditionControl['maxDate'] : this.maxDate;\r\n        this.minDate = conditionControl.hasOwnProperty('minDate') ? conditionControl['minDate'] : this.minDate;\r\n        break;\r\n    }\r\n  }\r\n  \r\n  onDateChange(event: any) {\r\n    this.item.value.setOriginalValue({\r\n      formatted: event.returnFormatted,\r\n      delimiter: this.dateRangeDatesDelimiter\r\n    });\r\n    this.conditionChange.emit();\r\n  }\r\n\r\n  getConditionItemTitle(field: QueryCondition) {\r\n    return this.solutionService.getConditionItemTitle(field);\r\n  }\r\n\r\n  beginValueChange($event) {\r\n   // this.beginValue = $event;\r\n  }\r\n\r\n  endValueChange($event) {\r\n   // this.endValue = $event;\r\n  }\r\n}\r\n","import { Component, Input, OnInit, OnChanges, Output, EventEmitter, SimpleChanges } from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { ComboLookUpControl } from '../../entity/controltype/combolookup/combolookup-control';\r\nimport { ComboLookUpValue } from '../../entity/conditionvalue/combolookup-value';\r\nimport { SolutionService } from '../../service/solution.service';\r\n\r\n@Component({\r\n    selector: 'app-solution-combolookup',\r\n    templateUrl: './combolookup.component.html',\r\n})\r\n\r\nexport class ComboLookUpComponent implements OnInit,OnChanges{\r\n   \r\n    /**\r\n     * QueryConditionç±»å\r\n     */\r\n    @Input() item:any;\r\n\r\n    /**\r\n     * æä¸ªå­æ®µåçå¼ååäºä»¶æ¶ï¼éè¦åæ­¥æ¸ç©ºçå­æ®µï¼å¯è½ä¸æ¯å½åå­æ®µ\r\n     */\r\n    @Input() changeFields: Array<string> = [];\r\n\r\n    @Output('conditionChange') conditionChange = new EventEmitter();\r\n\r\n    uri: string;\r\n    idField: any;\r\n    valueField: any;\r\n    textField: string;\r\n    textValue: any;\r\n    mapFields: any;\r\n    displayType: any;\r\n    multiSelect: boolean;\r\n    preEventCmd: any;\r\n    postEventCmd: any;\r\n    testId: string;\r\n    placeholder: string;\r\n    autoWidth: boolean;\r\n    panelWidth: number;\r\n    panelHeight: number;\r\n    selectedValues = \"\";\r\n\r\n    constructor(private solutionService: SolutionService){ }\r\n\r\n    ngOnInit(): void {\r\n        this.getComboLookUpBindingInfo();\r\n        this.testId = this.solutionService.getGuid();\r\n        this.placeholder = (this.item.placeHolder) ? (this.item.placeHolder) : (this.item.control.placeholder);\r\n        this.autoWidth = false;\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        this.getComboLookUpBindingInfo();\r\n        if(changes['changeFields'] && changes['changeFields'].currentValue && !changes['changeFields'].firstChange) {\r\n            const isChange = changes['changeFields'].currentValue.some(field => field == this.item.fieldCode);\r\n            if(isChange){\r\n                this.textValue = (this.item.value as ComboLookUpValue).textValue;\r\n            }\r\n        }\r\n    }\r\n\r\n    valueChangeHandler(data: any){\r\n        const helpValue = (this.item.value as ComboLookUpValue);\r\n        helpValue.value = data.selections;\r\n        helpValue.valueField = this.valueField;\r\n        helpValue.textValue = helpValue.getTextValue(this.textField);\r\n        this.textValue = helpValue.textValue;\r\n        this.conditionChange.emit();\r\n    }\r\n\r\n    getComboLookUpBindingInfo(){\r\n        const comboLookUpControl = (this.item.control as ComboLookUpControl);\r\n        this.uri = comboLookUpControl.uri;\r\n        this.idField = comboLookUpControl.idField;\r\n        this.valueField = comboLookUpControl.valueField;\r\n        this.textField = comboLookUpControl.textField;\r\n        this.mapFields = comboLookUpControl.mapFields;\r\n        this.displayType = comboLookUpControl.displayType;\r\n        this.preEventCmd = comboLookUpControl.preEventCmd;\r\n        this.postEventCmd = comboLookUpControl.postEventCmd;\r\n        this.multiSelect = comboLookUpControl.singleSelect === true ? false : true;\r\n        this.panelWidth = comboLookUpControl.panelWidth ? comboLookUpControl.panelWidth : 300;\r\n        this.panelHeight = comboLookUpControl.panelHeight ? comboLookUpControl.panelHeight : 300;\r\n        const comboLookUpValue = (this.item.value as ComboLookUpValue);\r\n        if(comboLookUpValue.textValue == 'help-text-value-null'){//æ§æ°æ®å¼å®¹\r\n            this.textValue = comboLookUpValue.getTextValue(this.textField);\r\n        }else{\r\n            this.textValue = comboLookUpValue.textValue;\r\n        }\r\n\r\n        if (comboLookUpValue && comboLookUpValue.value) {\r\n            this.selectedValues = (comboLookUpValue.value || []).map(n => n[this.idField]).join(',');\r\n        }\r\n    }\r\n\r\n    clearData(data: any){\r\n        (this.item.value as ComboLookUpValue).clearValue();\r\n        this.conditionChange.emit();\r\n    }\r\n\r\n    getConditionItemTitle(field:QueryCondition){\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n}","import { Directive, Input, OnInit, Optional, Self, Injector } from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\nimport { QueryConditionComponent } from '../querycondition.component';\r\n\r\n@Directive({\r\n    selector: '[clear-fields]'\r\n})\r\nexport class ClearFieldsDirective implements OnInit { \r\n    @Input('clear-fields') clearFields = '';\r\n   \r\n    constructor(@Optional() @Self() private ngCtrl: NgControl, private qcc: QueryConditionComponent, private inject: Injector) {} \r\n\r\n    ngOnInit() {\r\n        if(this.clearFields && this.ngCtrl) {\r\n            this.ngCtrl.valueChanges.subscribe( (v) => {\r\n                this.qcc.fieldCodeOfClearFields = [];\r\n                this.clearFields.split(',').forEach(n => {\r\n                    const visibleConditions = this.qcc.selectedFieldConditions.filter(condition => {return !!condition.visible});  \r\n                    const conditionItem = visibleConditions.find(c => c.fieldCode === n);\r\n                    if (conditionItem) {\r\n                        this.qcc.fieldCodeOfClearFields.push(n);\r\n                        conditionItem.value.clearValue();\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n}","import { Directive, Input, OnInit, Injector, ElementRef, NgZone } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[label-text-multi]'\r\n})\r\nexport class LabelTextMultiDirective implements OnInit {\r\n    private multiCls = 'farris-group-multi-label';\r\n    private _enableMulti = false;\r\n    @Input('label-text-multi')\r\n    set enableMulti(value: boolean) {\r\n        this._enableMulti = value;\r\n        this.judgeMulti();\r\n    }\r\n    get enableMulti() {\r\n        return this._enableMulti\r\n    }\r\n    // è·ångZone\r\n    private ngZone = null;\r\n    constructor(private el: ElementRef, private injector: Injector) {\r\n        if (!this.ngZone) {\r\n            this.ngZone = this.injector.get<NgZone>(NgZone, null);\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n    }\r\n    judgeMulti() {\r\n        if (this._enableMulti) {\r\n            this.ngZone.runOutsideAngular(() => {\r\n\r\n                setTimeout(() => {\r\n                    let textEl = this.el.nativeElement.querySelector('.farris-label-text');\r\n                    if (!textEl) {\r\n                        return;\r\n                    }\r\n                    // è¶åº\r\n                    if (textEl.clientWidth < textEl.scrollWidth) {\r\n                        this.el.nativeElement.className = this.el.nativeElement.className + ' ' + this.multiCls;\r\n                    } else {\r\n                        this.el.nativeElement.className = this.el.nativeElement.className.replace(this.multiCls, '');\r\n                    }\r\n                }, 20);\r\n            });\r\n\r\n        }\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { QueryConditionComponent } from './querycondition.component';\r\nimport { NumberRangeComponent } from './controlcomponent/numberrangecomponent/numberrange.component';\r\nimport { InputComponent } from './controlcomponent/input/input.component';\r\nimport { InputGroupComponent } from './controlcomponent/inputgroup/inputgroup.component';\r\nimport { SolutionSmartHelpComponent } from './controlcomponent/smarthelp/smarthelp.component';\r\nimport { DropDownListComponent } from './controlcomponent/dropdown/dropdownlist.component';\r\nimport { SingleNumberComponent } from './controlcomponent/numbercomponent/single-number.component';\r\nimport { SolutionService } from './service/solution.service';\r\nimport { ConvertorService } from './service/convertorservice';\r\nimport { ConfigDialogComponent } from './fieldconfigdialog/configdialog.component';\r\nimport { NotifyModule, NotifyService } from '@farris/ui-notify';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { FarrisDialogModule } from '@farris/ui-dialog';\r\nimport { LayoutModule } from '@farris/ui-layout';\r\nimport { LookupModule } from '@farris/ui-lookup';\r\nimport { MultiSelectModule } from '@farris/ui-multi-select';\r\nimport { FieldGroupModule } from '@farris/ui-field-group';\r\nimport { InputGroupModule } from '@farris/ui-input-group';\r\nimport { FDropdownDirectiveTypeModule } from '@farris/ui-dropdown'\r\nimport { LoadingModule } from '@farris/ui-loading';\r\n// import { InputModeModule } from '@farris/ui-input-group'\r\nimport { FarrisDatePickerModule } from '@farris/ui-datepicker';\r\nimport { LocaleModule } from '@farris/ui-locale';\r\nimport { ComboListModule } from '@farris/ui-combo-list';\r\nimport { NumberSpinnerModule } from '@farris/ui-number-spinner';\r\nimport { FarrisFormsModule } from '@farris/ui-forms';\r\nimport { CheckBoxComponent } from './controlcomponent/checkbox/checkbox.component';\r\nimport { RadioComponent } from './controlcomponent/radio/radio.component';\r\nimport { DatePickerComponent } from './controlcomponent/datepicker/datepicker.component';\r\nimport { ComboLookUpComponent } from './controlcomponent/combolookup/combolookup.component';\r\nimport { ComboLookupModule } from '@farris/ui-combo-lookup';\r\nimport { ClearFieldsDirective } from './directives/clear-fields.directive';\r\nimport { LabelTextMultiDirective } from './directives/label-text-multi.directive';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule, ReactiveFormsModule,\r\n    FarrisDialogModule,\r\n    LayoutModule,\r\n    LookupModule,\r\n    // FarrisInputModule,\r\n    MultiSelectModule,\r\n    FieldGroupModule,\r\n    InputGroupModule,\r\n    FDropdownDirectiveTypeModule,\r\n    LoadingModule.forRoot(),\r\n    NotifyModule.forRoot(),\r\n    FarrisDatePickerModule,\r\n    LocaleModule,\r\n    ComboListModule,\r\n    NumberSpinnerModule,\r\n    FarrisFormsModule,\r\n    ComboLookupModule\r\n  ],\r\n  declarations: [\r\n    QueryConditionComponent,\r\n    ConfigDialogComponent,\r\n    DatePickerComponent,\r\n    NumberRangeComponent,\r\n    SolutionSmartHelpComponent,\r\n    InputComponent,\r\n    DropDownListComponent,\r\n    SingleNumberComponent,\r\n    CheckBoxComponent,\r\n    ComboLookUpComponent,\r\n    RadioComponent,\r\n    InputGroupComponent,\r\n    ClearFieldsDirective,\r\n    LabelTextMultiDirective\r\n  ],\r\n  entryComponents: [\r\n    ConfigDialogComponent,\r\n  ],\r\n  providers: [\r\n    SolutionService,\r\n    NotifyService,\r\n    ConvertorService\r\n  ],\r\n  bootstrap: [QueryConditionComponent],\r\n  exports: [\r\n    QueryConditionComponent,\r\n    ConfigDialogComponent,\r\n    DatePickerComponent,\r\n    NumberRangeComponent,\r\n    SolutionSmartHelpComponent,\r\n    InputComponent,\r\n    DropDownListComponent,\r\n    SingleNumberComponent,\r\n    CheckBoxComponent,\r\n    ComboLookUpComponent,\r\n    RadioComponent,\r\n    InputGroupComponent\r\n  ]\r\n})\r\nexport class QueryConditionModule { }\r\n","import { QueryCondition, QueryConditionConvert } from \"./querycondition\";\r\nimport { QuerySolutionExtendVo } from './querysolutionextendvo';\r\n\r\n/**\r\n * æ¥è¯¢æ¹æ¡å®ä½ç±» \r\n */\r\nexport class QuerySolutionVo {\r\n    /**\r\n     * å¯ä¸æ§æ è¯\r\n     */\r\n    id: string;\r\n\r\n    /**\r\n     * æå±IDï¼ä¾å¦æå±è¡¨åID\r\n     */\r\n    belongId: string;\r\n\r\n    /**\r\n     * æ¥è¯¢æ¹æ¡ç¼å·\r\n     */\r\n    code: string;\r\n\r\n    /**\r\n     * æ¥è¯¢æ¹æ¡åç§°\r\n     */\r\n    name: string;\r\n\r\n    /**\r\n     * æ¥è¯¢æ¡ä»¶\r\n     */\r\n    queryConditions: Array<QueryCondition>;\r\n\r\n    /**\r\n     * æ¯å¦ç³»ç»é¢ç½®æ¥è¯¢æ¹æ¡\r\n     */\r\n    isSystem: boolean;\r\n\r\n    /**\r\n     * æ¯å¦é»è®¤æ¥è¯¢æ¹æ¡\r\n     * åå§æ¶ï¼ä¸ºfalse\r\n     */\r\n    isDefault: boolean = false;\r\n\r\n    isChanged: boolean = false;\r\n    /**\r\n     * ç±»åï¼ preæ¯ä¸æ¬¡æ¥è¯¢\r\n     */\r\n    type: string;\r\n\r\n    extendId: string = 'query-scheme-1';\r\n\r\n    extendInfo: Array<QuerySolutionExtendVo>;\r\n}\r\n\r\n/**\r\n * æ¥è¯¢æ¹æ¡å®ä½ç±»åºååä¸ååºååå¨\r\n */\r\nexport class QuerySolutionVoConvertor {\r\n\r\n    /**\r\n     * åºåå\r\n     * @param obj æ¥è¯¢æ¹æ¡å®ä½\r\n     */\r\n    convertJObject(obj: QuerySolutionVo): Object {\r\n        let querySolutionVo = obj as QuerySolutionVo;\r\n        let jobj = new Object();\r\n        jobj[\"id\"] = querySolutionVo.id;\r\n        jobj[\"belongId\"] = querySolutionVo.belongId;\r\n        jobj[\"code\"] = querySolutionVo.code;\r\n        jobj[\"name\"] = querySolutionVo.name;\r\n        jobj[\"isSystem\"] = querySolutionVo.isSystem;\r\n        jobj[\"isDefault\"] = querySolutionVo.isDefault;\r\n        jobj[\"type\"] = querySolutionVo.type;\r\n        jobj[\"extendId\"] = querySolutionVo.extendId;\r\n        jobj[\"extendInfo\"] = querySolutionVo.extendInfo;\r\n        if (querySolutionVo.queryConditions && querySolutionVo.queryConditions.length > 0) {\r\n            let jArray = [];\r\n            let convertor = new QueryConditionConvert();\r\n            querySolutionVo.queryConditions.forEach(element => {\r\n                jArray.push(convertor.convertJObject(element));\r\n            });\r\n            //åæå¡ç«¯åéæ°æ®æ¶ï¼åéquery condition listçjson string\r\n            jobj[\"queryConditionString\"] = JSON.stringify(jArray);\r\n        }\r\n        return jobj;\r\n    }\r\n\r\n    /**\r\n     * ååºåå(åå§å)\r\n     * @param jobj æ¥è¯¢æ¹æ¡åºåååçObject\r\n     */\r\n    initFromJobject(jobj: Object): QuerySolutionVo {\r\n        let querySolutionVo = new QuerySolutionVo();\r\n        querySolutionVo.id = jobj[\"id\"];\r\n        querySolutionVo.code = jobj[\"code\"];\r\n        querySolutionVo.name = jobj[\"name\"];\r\n        querySolutionVo.belongId = jobj[\"belongId\"];\r\n        querySolutionVo.isSystem = jobj[\"isSystem\"];\r\n        querySolutionVo.isDefault = jobj[\"isDefault\"];\r\n        querySolutionVo.type = jobj.hasOwnProperty('type') ? jobj[\"type\"] : '';\r\n        querySolutionVo.extendId = jobj.hasOwnProperty('extendId') ? jobj[\"extendId\"] : \"\";\r\n        querySolutionVo.queryConditions = new Array<QueryCondition>();\r\n        //æå¡å¨ç«¯è¿åçquery condition listå®éæ¯ json string\r\n        const queryConditionString = jobj[\"queryConditionString\"];\r\n        if (queryConditionString) {\r\n            const conditionJarry = JSON.parse(queryConditionString);\r\n            let convertor = new QueryConditionConvert();\r\n            conditionJarry.forEach(element => {\r\n                querySolutionVo.queryConditions.push(convertor.initFromJobject(element));\r\n            });\r\n        }\r\n        return querySolutionVo;\r\n    }\r\n    /**\r\n     * ä»ç¼å­ä¸­ååçJSONæ°æ®éè¦è½¬å\r\n     * ä»å¤§åè½¬æ¢å°å°åæ¡ä»¶\r\n     */\r\n    formatFromJobject(jobj: Array<any> | string): Array<QueryCondition> {\r\n        let queryConditions = new Array<QueryCondition>();\r\n        let conditionJarry;\r\n        if (typeof jobj == 'string') {\r\n            conditionJarry = JSON.parse(jobj);\r\n        } else {\r\n            conditionJarry = jobj;\r\n        }\r\n        let convertor = new QueryConditionConvert();\r\n        conditionJarry.forEach(element => {\r\n            queryConditions.push(convertor.initFromJobject(element));\r\n        });\r\n        return queryConditions;\r\n    }\r\n    /**\r\n     * å­å¥ç¼å­ä¸­\r\n     * ä»å¤§åè½¬æ¢å°å°åæ¡ä»¶\r\n     */\r\n    formatConvertJObject(jobj: Array<QueryCondition>):Array<any>{\r\n        let queryConditions =[];\r\n        let convertor = new QueryConditionConvert();\r\n        jobj.forEach(element => {\r\n            queryConditions.push(convertor.convertJObject(element));\r\n        });\r\n        return queryConditions;\r\n    }\r\n}","\r\nexport class QuerySolutionExtendVo {\r\n    \r\n    id: string;\r\n\r\n    relatedId: string;\r\n\r\n    orgId: string;\r\n}","/**\r\n * æ­¤ç±»æ²¡æè¢«ä½¿ç¨\r\n * æ¯è¾ç¬¦ \r\n */\r\nexport enum CompareType{\r\n\r\n    /**\r\n     * ç­äº\r\n     */\r\n    // Equal=1,\r\n    Equal = 0,\r\n\r\n    /**\r\n     * å¤§äº\r\n     */\r\n    GreaterThan = 2,\r\n\r\n    /**\r\n     * å¤§äºæç­äº\r\n     */\r\n    GreaterThanOrEqual = 3,\r\n\r\n    /**\r\n     * å°äº\r\n     */\r\n    LessThan = 4,\r\n\r\n    /**\r\n     * å°äºæç­äº\r\n     */\r\n    LessThanOrEqual = 5, \r\n\r\n    /**\r\n     * ä¹é´\r\n     */\r\n    // BetWeen=6\r\n    Like = 6\r\n}","import { QueryCondition } from '../querycondition';\r\n\r\n/**\r\n * å­æ®µéç½®\r\n */\r\nexport class FieldConfig {\r\n\r\n  /**\r\n   * å­æ®µID\r\n   */\r\n  id?: string;\r\n\r\n  /**\r\n   * å­æ®µæ ç­¾ï¼å­æ®µç¼å·çå¯ä¸æ è¯\r\n   */\r\n  labelCode: string;\r\n\r\n  /**\r\n   * å­æ®µåç§°\r\n   */\r\n  name?: string;\r\n\r\n  /**\r\n   * æ¯å¦è¢«éä¸­\r\n   */\r\n  isChecked?: boolean;\r\n\r\n  /**\r\n   * æ¯å¦è¢«ç¦ç¨\r\n   */\r\n  isDisabled?: boolean;\r\n\r\n  /**\r\n   * å­æ®µä¸ºç©ºæ¶æç¤ºä¿¡æ¯\r\n   */\r\n  placeHolder?: string;\r\n  beginPlaceHolder?:string;\r\n  endPlaceHolder?:string;\r\n\r\n  control?: any;\r\n\r\n  value?: any;\r\n\r\n  visible?: boolean = true;\r\n\r\n  constructor(qc: QueryCondition) {\r\n    this.id = qc.id;\r\n    this.labelCode = qc.fieldCode;\r\n    this.name = qc.fieldName;\r\n  }\r\n\r\n\r\n}\r\n"]}