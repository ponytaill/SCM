/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { DatagridComponent } from './../../datagrid.component';
import { NotifyService } from '@farris/ui-notify';
import { ChangeDetectorRef, Injector, Optional, TemplateRef } from '@angular/core';
/*
 * @Author: 疯狂秀才(Lucas Huang)
 * @Date: 2019-08-06 07:43:07
 * @LastEditors: 疯狂秀才(Lucas Huang)
 * @LastEditTime: 2019-10-17 20:20:21
 * @QQ: 1055818239
 * @Version: v0.0.1
 */
import { Component, Input, Output, EventEmitter, ElementRef, ViewChild } from '@angular/core';
import { PaginationControlsComponent } from '@farris/ui-pagination';
export class DatagridPagerComponent {
    /**
     * @param {?} el
     * @param {?} cd
     * @param {?} inject
     */
    constructor(el, cd, inject) {
        this.el = el;
        this.cd = cd;
        this.inject = inject;
        this.pagerPos = 'right';
        this.id = 'farris-datagrid-pager';
        /**
         * 显示页码的数量
         */
        this.maxSize = 7;
        /**
         * 是否显示页码
         */
        this.directionLinks = true;
        this.autoHide = false;
        this.responsive = false;
        /**
         * 上页标签
         */
        this.previousLabel = '上页';
        /**
         * 下页标签
         */
        this.nextLabel = '下页';
        this.showPageList = false;
        this.showPageInfo = true;
        this.showPageNumber = true;
        this.locked = false;
        this.selectedData = [];
        this.viewMode = 'default';
        this.showSelectedList = false;
        this.showGotoInput = false;
        /**
         * 分页条自定义内容区模板
         */
        this.contentTemplate = null;
        this.data = null;
        this.pageChange = new EventEmitter();
        this.pageSizeChange = new EventEmitter();
        this.removeSelectedItem = new EventEmitter();
        this.clearSelectedItem = new EventEmitter();
        this.styles = { opacity: 1 };
        this.mouseInSelectedList = false;
        this.openSelectedList = false;
        this.selectionDataChange$ = null;
        if (this.inject) {
            this.notifySer = this.inject.get(NotifyService, null);
        }
    }
    /**
     * @return {?}
     */
    get pagination() {
        return this.pager.paginationDirective;
    }
    /**
     * @return {?}
     */
    get pageSize() {
        return this.pagination.getPageSize();
    }
    /**
     * @return {?}
     */
    get total() {
        return this.pagination.getTotalItems();
    }
    /**
     * @return {?}
     */
    get outerHeight() {
        if (this.pc) {
            return this.pc.nativeElement.offsetHeight;
        }
        return 40;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.listenCheckDataChanged();
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
        this.lockedStyles();
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    ngOnChanges(changes) {
        if (changes.selectedData && !changes.selectedData.isFirstChange()) {
            if (!this.selectedData || !this.selectedData.length) {
                this.closeSelectedList();
            }
        }
        if (changes.showSelectedList && !changes.showSelectedList.isFirstChange()) {
            this.listenCheckDataChanged();
        }
        if (changes.locked && !changes.locked.isFirstChange()) {
            this.lockedStyles();
        }
    }
    /**
     * @private
     * @return {?}
     */
    listenCheckDataChanged() {
        if (this.showSelectedList) {
            /** @type {?} */
            const dg = this.inject.get(DatagridComponent, null);
            if (dg) {
                this.selectionDataChange$ = dg.checkedChange.subscribe((/**
                 * @param {?} data
                 * @return {?}
                 */
                (data) => {
                    this.selectedData = data;
                    if (!this.cd['destroyed']) {
                        this.cd.detectChanges();
                    }
                }));
            }
        }
        else {
            if (this.selectionDataChange$) {
                this.selectionDataChange$.unsubscribe();
                this.selectionDataChange$ = null;
            }
        }
    }
    /**
     * @param {?} pageIndex
     * @return {?}
     */
    onPageChange(pageIndex) {
        if (typeof pageIndex === 'object') {
            pageIndex = pageIndex.pageIndex || 1;
        }
        this.pageChange.emit(Number.parseInt(pageIndex, 10));
    }
    /**
     * @param {?} pageSize
     * @return {?}
     */
    onPageSizeChange(pageSize) {
        this.pageSizeChange.emit(Number.parseInt(pageSize, 10));
    }
    /**
     * @return {?}
     */
    lock() {
        this.locked = true;
        this.lockedStyles();
    }
    /**
     * @return {?}
     */
    unlock() {
        this.locked = false;
        this.lockedStyles();
    }
    /**
     * @private
     * @return {?}
     */
    lockedStyles() {
        this.styles = { opacity: this.locked ? 0.5 : 1 };
        this.cd.detectChanges();
    }
    /**
     * @param {?} $event
     * @return {?}
     */
    onMouseEnter($event) {
        $event.stopPropagation();
        if (this.locked) {
            return;
        }
        this.mouseInSelectedList = true;
        if (this.selectedData && this.selectedData.length) {
            this.openSelectedList = !this.openSelectedList;
        }
        else {
            this.openSelectedList = false;
        }
    }
    /**
     * @return {?}
     */
    closeSelectedList() {
        this.openSelectedList = false;
        this.mouseInSelectedList = false;
        if (!this.cd['destroyed']) {
            this.cd.detectChanges();
        }
    }
    /**
     * @param {?} id
     * @return {?}
     */
    onDelSelectedItem(id) {
        this.removeSelectedItem.emit(id);
    }
    /**
     * @param {?} $event
     * @return {?}
     */
    onClearSelected($event) {
        this.clearSelectedItem.emit();
        this.closeSelectedList();
    }
    /**
     * @param {?} $event
     * @return {?}
     */
    onSelectListPanelClose($event) {
        this.closeSelectedList();
    }
}
DatagridPagerComponent.decorators = [
    { type: Component, args: [{
                selector: 'datagrid-pager',
                template: "<div class=\"f-datagrid-pager\" #pagerContainer [ngStyle]=\"styles\">\r\n    <pagination-controls #pager [id]=\"id\" [maxSize]=\"maxSize\"\r\n        [directionLinks]=\"directionLinks\"\r\n        [showPageList]=\"showPageList\"\r\n        [showPageInfo]=\"showPageInfo\"\r\n        [showPageNumber]=\"showPageNumber\"\r\n        [autoHide]=\"autoHide\" [responsive]=\"responsive\"\r\n        [previousLabel]=\"previousLabel\" [nextLabel]=\"nextLabel\"\r\n        [showGotoInput]=\"showGotoInput\"\r\n        (pageChange)=\"onPageChange($event)\"\r\n        (pageSizeChange)=\"onPageSizeChange($event)\"\r\n        [position]=\"pagerPos\"\r\n        [viewMode]=\"viewMode\" [showSelectedList]=\"showSelectedList\">\r\n\r\n        <div  class=\"pager-overlay-container\"  style=\"position: absolute;bottom: 0;left: -10px;\">\r\n            <pager-selected-list *ngIf=\"openSelectedList\"\r\n                [data]=\"selectedData | selectedItem: listItemFormatter\"\r\n                (close)=\"onSelectListPanelClose($event)\"\r\n                (remove)=\"onDelSelectedItem($event)\"\r\n                (clear)=\"onClearSelected($event)\"\r\n            ></pager-selected-list>\r\n        </div>\r\n\r\n        <div class=\"flex-fill pager-pos-right\" style=\"left: 0\" [style.position]=\"pagerPos==='center'? 'absolute':'relative'\">\r\n            <div class=\"d-flex flex-row\" style=\"align-items: center;\">\r\n                <span class=\"badge badge-pill badge-light mr-2\" *ngIf=\"showSelectedList\"\r\n                    style=\"cursor:pointer\" [attr.title]=\"'datagrid.selectionData.tooltip' | locale\"\r\n                    [class.badge-primary]=\"mouseInSelectedList\"\r\n                    [innerHTML]=\"'datagrid.selectionData.currentLenth' | locale | replaceX: selectedData.length\"\r\n                    (click)=\"onMouseEnter($event)\">\r\n                </span>\r\n\r\n                <div class=\"f-utils-fill mr-2 content-template\" *ngIf=\"contentTemplate && pagerPos === 'right'\">\r\n                    <ng-container [ngTemplateOutlet]=\"contentTemplate\" [ngTemplateOutletContext]=\"{ footerData: data }\"></ng-container>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"flex-fill pager-pos-left\" *ngIf=\"pagerPos === 'left'\">\r\n            <div class=\"d-flex flex-row\" style=\"align-items: center;\">\r\n                \r\n                <div class=\"f-utils-fill mr-2 content-template\" *ngIf=\"contentTemplate\">\r\n                    <ng-container [ngTemplateOutlet]=\"contentTemplate\" [ngTemplateOutletContext]=\"{ footerData: data }\"></ng-container>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    </pagination-controls>\r\n</div>"
            }] }
];
/** @nocollapse */
DatagridPagerComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: ChangeDetectorRef },
    { type: Injector, decorators: [{ type: Optional }] }
];
DatagridPagerComponent.propDecorators = {
    pagerPos: [{ type: Input }],
    id: [{ type: Input }],
    maxSize: [{ type: Input }],
    directionLinks: [{ type: Input }],
    autoHide: [{ type: Input }],
    responsive: [{ type: Input }],
    previousLabel: [{ type: Input }],
    nextLabel: [{ type: Input }],
    showPageList: [{ type: Input }],
    showPageInfo: [{ type: Input }],
    showPageNumber: [{ type: Input }],
    locked: [{ type: Input }],
    selectedData: [{ type: Input }],
    viewMode: [{ type: Input }],
    listItemFormatter: [{ type: Input }],
    showSelectedList: [{ type: Input }],
    showGotoInput: [{ type: Input }],
    contentTemplate: [{ type: Input }],
    data: [{ type: Input }],
    pageChange: [{ type: Output }],
    pageSizeChange: [{ type: Output }],
    removeSelectedItem: [{ type: Output }],
    clearSelectedItem: [{ type: Output }],
    pc: [{ type: ViewChild, args: ['pagerContainer',] }],
    pager: [{ type: ViewChild, args: ['pager',] }]
};
if (false) {
    /** @type {?} */
    DatagridPagerComponent.prototype.pagerPos;
    /** @type {?} */
    DatagridPagerComponent.prototype.id;
    /**
     * 显示页码的数量
     * @type {?}
     */
    DatagridPagerComponent.prototype.maxSize;
    /**
     * 是否显示页码
     * @type {?}
     */
    DatagridPagerComponent.prototype.directionLinks;
    /** @type {?} */
    DatagridPagerComponent.prototype.autoHide;
    /** @type {?} */
    DatagridPagerComponent.prototype.responsive;
    /**
     * 上页标签
     * @type {?}
     */
    DatagridPagerComponent.prototype.previousLabel;
    /**
     * 下页标签
     * @type {?}
     */
    DatagridPagerComponent.prototype.nextLabel;
    /** @type {?} */
    DatagridPagerComponent.prototype.showPageList;
    /** @type {?} */
    DatagridPagerComponent.prototype.showPageInfo;
    /** @type {?} */
    DatagridPagerComponent.prototype.showPageNumber;
    /** @type {?} */
    DatagridPagerComponent.prototype.locked;
    /** @type {?} */
    DatagridPagerComponent.prototype.selectedData;
    /** @type {?} */
    DatagridPagerComponent.prototype.viewMode;
    /** @type {?} */
    DatagridPagerComponent.prototype.listItemFormatter;
    /** @type {?} */
    DatagridPagerComponent.prototype.showSelectedList;
    /** @type {?} */
    DatagridPagerComponent.prototype.showGotoInput;
    /**
     * 分页条自定义内容区模板
     * @type {?}
     */
    DatagridPagerComponent.prototype.contentTemplate;
    /** @type {?} */
    DatagridPagerComponent.prototype.data;
    /** @type {?} */
    DatagridPagerComponent.prototype.pageChange;
    /** @type {?} */
    DatagridPagerComponent.prototype.pageSizeChange;
    /** @type {?} */
    DatagridPagerComponent.prototype.removeSelectedItem;
    /** @type {?} */
    DatagridPagerComponent.prototype.clearSelectedItem;
    /** @type {?} */
    DatagridPagerComponent.prototype.pc;
    /** @type {?} */
    DatagridPagerComponent.prototype.pager;
    /** @type {?} */
    DatagridPagerComponent.prototype.styles;
    /** @type {?} */
    DatagridPagerComponent.prototype.mouseInSelectedList;
    /** @type {?} */
    DatagridPagerComponent.prototype.openSelectedList;
    /**
     * @type {?}
     * @private
     */
    DatagridPagerComponent.prototype.selectionDataChange$;
    /**
     * @type {?}
     * @private
     */
    DatagridPagerComponent.prototype.notifySer;
    /** @type {?} */
    DatagridPagerComponent.prototype.el;
    /**
     * @type {?}
     * @private
     */
    DatagridPagerComponent.prototype.cd;
    /**
     * @type {?}
     * @private
     */
    DatagridPagerComponent.prototype.inject;
}
//# sourceMappingURL=data:application/json;base64,