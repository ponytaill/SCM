import { Injector } from '../core/index';
import { AppContext } from '../app/index';
import { Entity } from '../entity/index';
import { Repository } from '../repository/index';
import { BindingData } from '../binding-data/index';
import { UIState } from '../ui-state/index';
import { StateMachine } from '../state-machine/index';
import { Form } from '../form/index';
import { ViewModel } from '../view-model/index';
import { CommandBus } from '../command/index';
/**
 * 视图模型上下文
 */
declare class ViewModelContext {
    private innerViewModel;
    appContext: AppContext;
    root: ViewModelContext;
    parent: ViewModelContext;
    id: string;
    constructor();
    init(viewModel: any): void;
    regToTree(): void;
    regToAppContext(): void;
    readonly viewModel: ViewModel;
    readonly injector: Injector;
    readonly repository: Repository<Entity>;
    readonly bindingData: BindingData;
    readonly uiState: UIState;
    readonly stateMachine: StateMachine;
    readonly form: Form;
    readonly commandBus: CommandBus;
}
export { ViewModelContext };
