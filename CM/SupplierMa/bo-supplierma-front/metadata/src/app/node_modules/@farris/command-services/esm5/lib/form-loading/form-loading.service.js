import { Injectable, Optional } from '@angular/core';
import { LoadingService } from '@farris/ui-loading';
import { HideEventService } from './hide-event.service';
import { AppContext } from '@farris/devkit';
// tslint:disable: no-string-literal
/**
 * 加载提示Helper
 * 1、包装@farris/ui的LoadingService；
 * 2、提供针对表单的快捷方法；
 */
var FormLoadingService = /** @class */ (function () {
    /**
     * 强制显示，不能隐藏
     */
    /**
     * 构造函数
     * 注入@farris/ui的LoadingService
     */
    function FormLoadingService(loadingService, hideEventService, applicationContext) {
        var _this = this;
        this.loadingService = loadingService;
        this.hideEventService = hideEventService;
        this.applicationContext = applicationContext;
        /**
         * 延迟loading定时器
         */
        this.loadingTimerIds = [];
        if (hideEventService) {
            this.hideEventService.hideEvent.subscribe(function (result) {
                _this.hide();
            });
        }
    }
    FormLoadingService.prototype.setSuspend = function (flag) {
        FormLoadingService.isSuspend = flag;
    };
    /**
     * 显示加载中
     */
    FormLoadingService.prototype.show = function (configOrMessage) {
        if (FormLoadingService.isSuspend === true) {
            return;
        }
        if (this.loadingCmp) {
            this.loadingCmp.close();
            this.loadingCmp = null;
        }
        this.registerService();
        var loadingConfig = this.buildLoadingConfig(configOrMessage);
        this.loadingCmp = this.loadingService.show(loadingConfig);
        return this.loadingCmp;
    };
    /**
     * 延迟显示Loading
     */
    FormLoadingService.prototype.showLoadingWithDelay = function (delayTime, configOrMessage) {
        var _this = this;
        // this.show(configOrMessage);
        var timerId = setTimeout(function () {
            _this.show(configOrMessage);
        }, delayTime);
        this.loadingTimerIds.push(timerId);
        this.registerService();
        return timerId;
    };
    /**
     * 隐藏延迟的Loading
     */
    FormLoadingService.prototype.hideDelayLoading = function (timerIdToClear) {
        this.clearLoadingTimer(timerIdToClear);
        this.hide();
    };
    /**
     * 构造LoadingConfig
     * @param configOrMessage 配置对象或消息字符串
     */
    FormLoadingService.prototype.buildLoadingConfig = function (configOrMessage) {
        var loadingConfig;
        if (!!configOrMessage) {
            if (typeof configOrMessage === 'object') {
                loadingConfig = configOrMessage;
            }
            else {
                loadingConfig = { 'message': configOrMessage };
            }
        }
        else {
            loadingConfig = {};
        }
        if (!loadingConfig.hasOwnProperty('delay')) {
            loadingConfig.delay = 0;
        }
        return loadingConfig;
    };
    /**
     * 关闭所有loading
     */
    FormLoadingService.prototype.clearAll = function () {
        var _this = this;
        FormLoadingService.isSuspend = false;
        window.setTimeout(function () {
            _this.loadingService.clearAll();
        }, 350);
        this.loadingCmp = null;
        this.clearAllLoadingTimers();
        this.destroy();
    };
    /**
     * 清空Loading定时器
     */
    FormLoadingService.prototype.clearLoadingTimer = function (timerIdToClear) {
        clearTimeout(timerIdToClear);
        this.loadingTimerIds = this.loadingTimerIds.filter(function (timerId) {
            return timerId !== timerIdToClear;
        });
    };
    /**
     * 清空所有Loading定时器
     */
    FormLoadingService.prototype.clearAllLoadingTimers = function () {
        var _this = this;
        this.loadingTimerIds.forEach(function (timerId) {
            _this.clearLoadingTimer(timerId);
        });
    };
    /**
     * 隐藏加载中
     */
    FormLoadingService.prototype.hide = function () {
        if (!this.loadingCmp) {
            this.destroy();
            return;
        }
        if (FormLoadingService.isSuspend === true) {
            return;
        }
        this.loadingCmp.close();
        this.loadingCmp = null;
        this.destroy();
    };
    /**
     * 销毁loadingService
     */
    FormLoadingService.prototype.destroy = function () {
        if (FormLoadingService.isSuspend === true) {
            return;
        }
        var services = window['DEVKIT_LOADING_SERVICE'] || [];
        if (services && Array.isArray(services) && services.length > 0) {
            services.forEach(function (service) {
                if (service) {
                    service.clearAllLoadingTimers();
                    if (service.loadingCmp) {
                        service.loadingCmp.close();
                        service.loadingCmp = null;
                    }
                }
            });
        }
        window['DEVKIT_LOADING_SERVICE'] = [];
    };
    /**
     * 注册所有的LoadingService实例
     */
    FormLoadingService.prototype.registerService = function () {
        var services = window['DEVKIT_LOADING_SERVICE'] || [];
        services.push(this);
        window['DEVKIT_LOADING_SERVICE'] = services;
    };
    FormLoadingService.isSuspend = false;
    FormLoadingService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    FormLoadingService.ctorParameters = function () { return [
        { type: LoadingService },
        { type: HideEventService, decorators: [{ type: Optional }] },
        { type: AppContext, decorators: [{ type: Optional }] }
    ]; };
    return FormLoadingService;
}());
export { FormLoadingService };
//# sourceMappingURL=data:application/json;base64,