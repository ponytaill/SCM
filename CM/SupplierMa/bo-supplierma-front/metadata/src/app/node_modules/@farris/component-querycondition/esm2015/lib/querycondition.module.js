/**
 * @fileoverview added by tsickle
 * Generated from: lib/querycondition.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { QueryConditionComponent } from './querycondition.component';
import { NumberRangeComponent } from './controlcomponent/numberrangecomponent/numberrange.component';
import { InputComponent } from './controlcomponent/input/input.component';
import { InputGroupComponent } from './controlcomponent/inputgroup/inputgroup.component';
import { SolutionSmartHelpComponent } from './controlcomponent/smarthelp/smarthelp.component';
import { DropDownListComponent } from './controlcomponent/dropdown/dropdownlist.component';
import { SingleNumberComponent } from './controlcomponent/numbercomponent/single-number.component';
import { SolutionService } from './service/solution.service';
import { ConvertorService } from './service/convertorservice';
import { ConfigDialogComponent } from './fieldconfigdialog/configdialog.component';
import { NotifyModule, NotifyService } from '@farris/ui-notify';
import { CommonModule } from '@angular/common';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { FarrisDialogModule } from '@farris/ui-dialog';
import { LayoutModule } from '@farris/ui-layout';
import { LookupModule } from '@farris/ui-lookup';
import { MultiSelectModule } from '@farris/ui-multi-select';
import { FieldGroupModule } from '@farris/ui-field-group';
import { InputGroupModule } from '@farris/ui-input-group';
import { FDropdownDirectiveTypeModule } from '@farris/ui-dropdown';
import { LoadingModule } from '@farris/ui-loading';
// import { InputModeModule } from '@farris/ui-input-group'
import { FarrisDatePickerModule } from '@farris/ui-datepicker';
import { LocaleModule } from '@farris/ui-locale';
import { ComboListModule } from '@farris/ui-combo-list';
import { NumberSpinnerModule } from '@farris/ui-number-spinner';
import { FarrisFormsModule } from '@farris/ui-forms';
import { CheckBoxComponent } from './controlcomponent/checkbox/checkbox.component';
import { RadioComponent } from './controlcomponent/radio/radio.component';
import { DatePickerComponent } from './controlcomponent/datepicker/datepicker.component';
import { ComboLookUpComponent } from './controlcomponent/combolookup/combolookup.component';
import { ComboLookupModule } from '@farris/ui-combo-lookup';
import { ClearFieldsDirective } from './directives/clear-fields.directive';
import { LabelTextMultiDirective } from './directives/label-text-multi.directive';
export class QueryConditionModule {
}
QueryConditionModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule,
                    FormsModule, ReactiveFormsModule,
                    FarrisDialogModule,
                    LayoutModule,
                    LookupModule,
                    // FarrisInputModule,
                    MultiSelectModule,
                    FieldGroupModule,
                    InputGroupModule,
                    FDropdownDirectiveTypeModule,
                    LoadingModule.forRoot(),
                    NotifyModule.forRoot(),
                    FarrisDatePickerModule,
                    LocaleModule,
                    ComboListModule,
                    NumberSpinnerModule,
                    FarrisFormsModule,
                    ComboLookupModule
                ],
                declarations: [
                    QueryConditionComponent,
                    ConfigDialogComponent,
                    DatePickerComponent,
                    NumberRangeComponent,
                    SolutionSmartHelpComponent,
                    InputComponent,
                    DropDownListComponent,
                    SingleNumberComponent,
                    CheckBoxComponent,
                    ComboLookUpComponent,
                    RadioComponent,
                    InputGroupComponent,
                    ClearFieldsDirective,
                    LabelTextMultiDirective
                ],
                entryComponents: [
                    ConfigDialogComponent,
                ],
                providers: [
                    SolutionService,
                    NotifyService,
                    ConvertorService
                ],
                bootstrap: [QueryConditionComponent],
                exports: [
                    QueryConditionComponent,
                    ConfigDialogComponent,
                    DatePickerComponent,
                    NumberRangeComponent,
                    SolutionSmartHelpComponent,
                    InputComponent,
                    DropDownListComponent,
                    SingleNumberComponent,
                    CheckBoxComponent,
                    ComboLookUpComponent,
                    RadioComponent,
                    InputGroupComponent
                ]
            },] }
];
//# sourceMappingURL=data:application/json;base64,