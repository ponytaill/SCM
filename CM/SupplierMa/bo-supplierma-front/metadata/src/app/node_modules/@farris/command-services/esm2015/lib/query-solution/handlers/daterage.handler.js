import { CompareType } from '../enum/compare-type.enum';
import { ValueType } from '../enum/value-type.enum';
import { RelationType } from '../enum/relation-type.enum';
export class DateRangeHandler {
    convert(qc) {
        const arr = [];
        const drv = qc.value;
        drv.startTime && arr.push({
            'FilterField': qc.fieldCode,
            'Compare': CompareType.GreaterOrEqual,
            'Value': drv.startTime,
            'Relation': RelationType.And,
            'Expresstype': ValueType.Value
        });
        drv.endTime && arr.push({
            'FilterField': qc.fieldCode,
            'Compare': CompareType.LessOrEqual,
            'Value': drv.endTime,
            'Relation': RelationType.And,
            'Expresstype': ValueType.Value
        });
        return arr;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZXJhZ2UuaGFuZGxlci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvY29tbWFuZC1zZXJ2aWNlcy8iLCJzb3VyY2VzIjpbImxpYi9xdWVyeS1zb2x1dGlvbi9oYW5kbGVycy9kYXRlcmFnZS5oYW5kbGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUN4RCxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDcEQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBRTFELE1BQU0sT0FBTyxnQkFBZ0I7SUFDekIsT0FBTyxDQUFDLEVBQWtCO1FBQ3RCLE1BQU0sR0FBRyxHQUFHLEVBQUUsQ0FBQztRQUNmLE1BQU0sR0FBRyxHQUFJLEVBQUUsQ0FBQyxLQUF3QixDQUFDO1FBQ3pDLEdBQUcsQ0FBQyxTQUFTLElBQUksR0FBRyxDQUFDLElBQUksQ0FBQztZQUN0QixhQUFhLEVBQUcsRUFBRSxDQUFDLFNBQVM7WUFDNUIsU0FBUyxFQUFHLFdBQVcsQ0FBQyxjQUFjO1lBQ3RDLE9BQU8sRUFBRyxHQUFHLENBQUMsU0FBUztZQUN2QixVQUFVLEVBQUcsWUFBWSxDQUFDLEdBQUc7WUFDN0IsYUFBYSxFQUFFLFNBQVMsQ0FBQyxLQUFLO1NBQ2pDLENBQUMsQ0FBQztRQUNILEdBQUcsQ0FBQyxPQUFPLElBQUksR0FBRyxDQUFDLElBQUksQ0FBQztZQUNwQixhQUFhLEVBQUcsRUFBRSxDQUFDLFNBQVM7WUFDNUIsU0FBUyxFQUFHLFdBQVcsQ0FBQyxXQUFXO1lBQ25DLE9BQU8sRUFBRyxHQUFHLENBQUMsT0FBTztZQUNyQixVQUFVLEVBQUcsWUFBWSxDQUFDLEdBQUc7WUFDN0IsYUFBYSxFQUFFLFNBQVMsQ0FBQyxLQUFLO1NBQ2pDLENBQUMsQ0FBQztRQUVILE9BQU8sR0FBRyxDQUFDO0lBQ2YsQ0FBQztDQUNKIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSVF1ZXJ5Q29uZGl0aW9uSGFuZGxlciB9IGZyb20gXCIuL2lxdWVyeWNvbmRpdGlvbi5oYW5kbGVyXCI7XG5pbXBvcnQgeyBRdWVyeUNvbmRpdGlvbiwgRGF0ZVJhbmdlVmFsdWV9IGZyb20gXCJAZmFycmlzL2NvbXBvbmVudC1xdWVyeWNvbmRpdGlvblwiO1xuaW1wb3J0IHsgQ29tcGFyZVR5cGUgfSBmcm9tICcuLi9lbnVtL2NvbXBhcmUtdHlwZS5lbnVtJztcbmltcG9ydCB7IFZhbHVlVHlwZSB9IGZyb20gJy4uL2VudW0vdmFsdWUtdHlwZS5lbnVtJztcbmltcG9ydCB7IFJlbGF0aW9uVHlwZSB9IGZyb20gJy4uL2VudW0vcmVsYXRpb24tdHlwZS5lbnVtJztcblxuZXhwb3J0IGNsYXNzIERhdGVSYW5nZUhhbmRsZXIgaW1wbGVtZW50cyBJUXVlcnlDb25kaXRpb25IYW5kbGVye1xuICAgIGNvbnZlcnQocWM6IFF1ZXJ5Q29uZGl0aW9uKSB7XG4gICAgICAgIGNvbnN0IGFyciA9IFtdO1xuICAgICAgICBjb25zdCBkcnYgPSAocWMudmFsdWUgYXMgRGF0ZVJhbmdlVmFsdWUpO1xuICAgICAgICBkcnYuc3RhcnRUaW1lICYmIGFyci5wdXNoKHtcbiAgICAgICAgICAgICdGaWx0ZXJGaWVsZCcgOiBxYy5maWVsZENvZGUsXG4gICAgICAgICAgICAnQ29tcGFyZScgOiBDb21wYXJlVHlwZS5HcmVhdGVyT3JFcXVhbCwgLy9HcmVhdGVyT3JFcXVhbFxuICAgICAgICAgICAgJ1ZhbHVlJyA6IGRydi5zdGFydFRpbWUsXG4gICAgICAgICAgICAnUmVsYXRpb24nIDogUmVsYXRpb25UeXBlLkFuZCwgLy9hbmRcbiAgICAgICAgICAgICdFeHByZXNzdHlwZSc6IFZhbHVlVHlwZS5WYWx1ZVxuICAgICAgICB9KTtcbiAgICAgICAgZHJ2LmVuZFRpbWUgJiYgYXJyLnB1c2goe1xuICAgICAgICAgICAgJ0ZpbHRlckZpZWxkJyA6IHFjLmZpZWxkQ29kZSxcbiAgICAgICAgICAgICdDb21wYXJlJyA6IENvbXBhcmVUeXBlLkxlc3NPckVxdWFsLCAvL0xlc3NPckVxdWFsXG4gICAgICAgICAgICAnVmFsdWUnIDogZHJ2LmVuZFRpbWUsXG4gICAgICAgICAgICAnUmVsYXRpb24nIDogUmVsYXRpb25UeXBlLkFuZCwvL2FuZFxuICAgICAgICAgICAgJ0V4cHJlc3N0eXBlJzogVmFsdWVUeXBlLlZhbHVlXG4gICAgICAgIH0pO1xuXG4gICAgICAgIHJldHVybiBhcnI7XG4gICAgfVxufSJdfQ==