{"version":3,"sources":["ng://@farris/ui-list-view/lib/list-view.service.ts","node_modules/tslib/tslib.es6.js","ng://@farris/ui-list-view/lib/template.directive.ts","ng://@farris/ui-list-view/lib/list-view.component.ts","ng://@farris/ui-list-view/lib/component/list-view-checkout.component.ts","ng://@farris/ui-list-view/lib/selected-listitem-formatter.pipe.ts","ng://@farris/ui-list-view/lib/list-view.module.ts"],"names":["ListViewService","Injectable","args","providedIn","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","__spread","concat","ListViewHeaderTemplateDirective","Directive","selector","TemplateRef","template","ListViewTemplateDirective","ListViewFooterTemplateDirective","ListViewEmptyTemplateDirective","defineProperty","ListViewComponent","_activeIndex","val","dataInit","_pageList","pager","setPageList","_total","paginationOptions","totalItems","fill","ngOnInit","id","Date","getTime","itemsPerPage","pageSize","currentPage","pageIndex","pageList","total","remote","pagerOnServer","currentData","data","ngOnChanges","changes","_this","isFirstChange","checkValues","differenceBy","currentValue","previousValue","v","enableMorePageSelect","checkRows","checkItems","selectDataListWithOtherPager","ids","map","listidName","checkedItems","ngAfterViewInit","ngAfterContentInit","searchList","searchField","filter","list","result","listValue","values","toString","includes","listdata","searchValue","listSelect","event","listItem","index","checkChangeEvent","isClickCheckbox","checkChange","emit","selectItemIndex","selectDataList","findIndex","item","getKey","multipleSelect","keepSelect","splice","updateDataListForMorePager","unshift","clickItem","listClick","checked","onCheckValuesChange","getSelect","changeData","state","sort","sortkeyName","sortType","compare","sortResult","selectRow","primaryValue","row","find","cdr","markForCheck","KeyName","type","obj1","obj2","val1","val2","getItemActive","onPageChange","page","pageChanged","pageInfo","onPageSizeChange","pageLength","Math","floor","pageSizeChanged","getCurrentData","getSelectData","setData","listviewData","activeIndex","dataItem","detectChanges","active","Array","isArray","indexOf","a","checkItemsChange","items","instance","newCheckeds_1","sameBy","forEach","listCheckAll","listCheckAllCancel","checkValuesChange","onMouseEnter","$event","stopPropagation","mouseInSelectedList","openSelectedList","closeSelectedList","onDelSelectedItem","updateCheckedValues","onClearSelected","onSelectListPanelClose","clearCheckeds","clearAll","_setItemsCheckedStatus","unCheckItems","Component","ElementRef","Renderer2","ChangeDetectorRef","ContentChild","read","ViewChild","Input","Output","HostBinding","el","renderer","showEmpty","emptyTemplate","supportPaging","showSelectedList","selectedItemFormat","cardLayout","EventEmitter","showPageList","showPageInfo","showPageNumber","showGotoInput","maxSize","directionLinks","autoHide","responsive","labels","previousLabel","nextLabel","screenReaderPaginationLabel","screenReaderPageLabel","screenReaderCurrentLabel","b","fn","Set","has","ListViewCheckoutComponent","handleClick","disabled","checkedChange","originalEvent","SelectedListFormatPipe","transform","formatter","idField_1","listViewRef","d","text","txt","keys","k","join","Pipe","name","ListViewModule","NgModule","declarations","imports","CommonModule","FormsModule","LocaleModule","forRoot","FarrisCommonModule","PaginationModule","exports"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ListViewService {\r\n\r\n  constructor() { }\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Directive, TemplateRef } from '@angular/core';\r\n\r\n\r\n@Directive({\r\n  selector: '[listViewHeader]'\r\n})\r\nexport class ListViewHeaderTemplateDirective {\r\n  constructor(public template: TemplateRef<any>) {}\r\n}\r\n\r\n@Directive({\r\n  selector: '[listTemplate]'\r\n})\r\nexport class ListViewTemplateDirective {\r\n  constructor(public template: TemplateRef<any>) {}\r\n}\r\n\r\n@Directive({\r\n  selector: '[listViewFooter]'\r\n})\r\nexport class ListViewFooterTemplateDirective {\r\n  constructor(public template: TemplateRef<any>) {}\r\n}\r\n\r\n@Directive({\r\n  selector: '[listViewEmpty]'\r\n})\r\nexport class ListViewEmptyTemplateDirective {\r\n  constructor(public template: TemplateRef<any>) {}\r\n}","import {\r\n    Component, OnInit, AfterContentInit, ElementRef, TemplateRef, ContentChild, Output, EventEmitter, Input, Renderer2, ViewChild,\r\n    AfterViewInit, HostBinding, SimpleChanges, OnChanges, ChangeDetectorRef, DoCheck\r\n} from '@angular/core';\r\nimport {\r\n    ListViewHeaderTemplateDirective,\r\n    ListViewTemplateDirective,\r\n    ListViewFooterTemplateDirective,\r\n    ListViewEmptyTemplateDirective,\r\n} from './template.directive';\r\n\r\nimport { PaginationInstance, PaginationControlsComponent } from '@farris/ui-pagination';\r\n\r\n\r\n@Component({\r\n    selector: 'farris-list-view',\r\n    templateUrl: './list-view.component.html',\r\n    styleUrls: ['./list-view.component.scss']\r\n})\r\nexport class ListViewComponent implements OnInit, OnChanges, AfterContentInit, AfterViewInit {\r\n\r\n    @ContentChild(ListViewHeaderTemplateDirective, { read: TemplateRef }) headerTemplate: TemplateRef<any>;\r\n    @ContentChild(ListViewTemplateDirective, { read: TemplateRef }) listTemplate: TemplateRef<any>;\r\n    @ContentChild(ListViewFooterTemplateDirective, { read: TemplateRef }) footerTemplate: TemplateRef<any>;\r\n    @ContentChild(ListViewEmptyTemplateDirective, { read: TemplateRef }) emptyDataTemplate: TemplateRef<any>;\r\n\r\n    @ViewChild('listGroup') listGroup: ElementRef;\r\n\r\n\r\n    @ViewChild('pager') pager: PaginationControlsComponent;\r\n\r\n    // @Input() height:number;\r\n    /** åè¡¨æ°æ® */\r\n    @Input() data = [];\r\n\r\n    @Input() id: string;\r\n\r\n    /** æ°æ®ä¸ºç©ºæ¯å¦å±ç¤ºé»è®¤ */\r\n    @Input() showEmpty = true;\r\n    /** æ¯å¦èªå®ä¹ç©ºæ°æ®æ¨¡æ¿ */\r\n    @Input() emptyTemplate = false;\r\n    /** æ¯å¦æ¯æå¤é é»è®¤ä¸ºfalse */\r\n    @Input() multipleSelect = false;\r\n\r\n    /** æ¯å¦æ¯æåé¡µ é»è®¤false */\r\n    @Input() supportPaging = false;\r\n\r\n    // é»è®¤åé¡µ\r\n    @Input() pagerOnServer = true;\r\n    @Input() pageSize = 10;\r\n    @Input() pageIndex = 1;\r\n    /** å¯ç¨è·¨é¡µå¤é */\r\n    @Input() enableMorePageSelect = false;\r\n    @Input() showSelectedList = false;\r\n    @Input() selectedItemFormat: (item: any) => string = null;\r\n\r\n    /**\r\n     * ä¿æéä¸­ç¶æï¼é»è®¤ä¸º trueï¼ å¯ç¨å¤éåææã\r\n     * å½è®¾ä¸ºfalseæ¶ï¼éä¸­é¡¹åæ¬¡ç¹å»å°åæ¶éä¸­ç¶æ\r\n     */\r\n    @Input() keepSelect = true;\r\n\r\n\r\n    // æ¯å¦å¹³éº\r\n    @Input() fill = false;\r\n    // æ¯å¦æ¨ªåæå\r\n    @Input() cardLayout = false;\r\n\r\n    _activeIndex: number;\r\n    get activeIndex() {\r\n        return this._activeIndex;\r\n    }\r\n    @Input() set activeIndex(val) {\r\n        this._activeIndex = val;\r\n        this.dataInit();\r\n    }\r\n\r\n    @Input() listClassName: string;\r\n    /**\r\n     * å¾éå¼\r\n     */\r\n    @Input() checkValues: any[] = [];\r\n    @Output() checkValuesChange: EventEmitter<any[]> = new EventEmitter<any[]>();\r\n\r\n    @Input() checkItems = [];\r\n    @Input() checkItemsChange: EventEmitter<{items: any[], instance: any}> = new EventEmitter<{items: [], instance: any}>();\r\n\r\n    // @Input() borderBottom:boolean = true;\r\n    @Input() showPageList = true;\r\n    @Input() showPageInfo = true;\r\n    @Input() showPageNumber = true;\r\n    @Input() showGotoInput = false;\r\n\r\n    private _pageList = [10, 20, 30, 50, 100];\r\n\r\n    get pageList() {\r\n        return this._pageList;\r\n    }\r\n    @Input() set pageList(val) {\r\n        this._pageList = val;\r\n        if (this.pager) {\r\n            this.pager.setPageList(val);\r\n        }\r\n    }\r\n\r\n    private _total = 0;\r\n    @Input()\r\n    set total(val) {\r\n        if (this._total !== val) {\r\n            this._total = val || 0;\r\n            this.paginationOptions = Object.assign(this.paginationOptions || {}, { totalItems: val });\r\n        }\r\n    }\r\n\r\n    get total() {\r\n        return this._total;\r\n    }\r\n\r\n    /** ä½ä¸ºå¯ä¸æ è¯çæ°æ®keyå¼ å¦ææ²¡ä¼  å¯ä¸æ è¯ä¸ºindexå¼ */\r\n    @Input() listidName = 'id';\r\n\r\n    @HostBinding('class.f-listview-fill') get listviewFill() { return this.fill; }\r\n\r\n\r\n    /** ç¹å»æä¸è¡å */\r\n    @Output() listClick = new EventEmitter();\r\n    /** å¤éæ¡ éä¸­ç¶æåå */\r\n    @Output() checkChange = new EventEmitter();\r\n\r\n    // åé¡µäºä»¶\r\n    @Output() pageChanged = new EventEmitter();\r\n    @Output() pageSizeChanged = new EventEmitter();\r\n\r\n    /** å½åå±ç¤ºåè¡¨æ°æ® */\r\n    currentData = [];\r\n\r\n    /** éä¸­çåè¡¨æ°ç» */\r\n    selectDataList = [];\r\n    /** è·¨é¡µå¤éè®°å½ */\r\n    selectDataListWithOtherPager = [];\r\n\r\n    // å½åç¹å»\r\n    public clickItem: any;\r\n\r\n    public maxSize = 7;\r\n    public directionLinks = true;\r\n    public autoHide = false;\r\n    public responsive = true;\r\n    public paginationOptions: any = {};\r\n\r\n    public labels: any = {\r\n        previousLabel: ' ',\r\n        nextLabel: ' ',\r\n        screenReaderPaginationLabel: 'Pagination',\r\n        screenReaderPageLabel: 'page',\r\n        screenReaderCurrentLabel: `You're on page`\r\n    };\r\n\r\n    mouseInSelectedList = false;\r\n    openSelectedList = false;\r\n    constructor(private el: ElementRef, private renderer: Renderer2, private cdr: ChangeDetectorRef) { }\r\n\r\n    ngOnInit() {\r\n        this.paginationOptions = {\r\n            id: 'Farris-listView-Pagination_' + (this.id || new Date().getTime()),\r\n            itemsPerPage: this.pageSize,\r\n            currentPage: this.pageIndex,\r\n            pageList: this.pageList,\r\n            totalItems: this.total,\r\n            remote: this.pagerOnServer\r\n        };\r\n\r\n        this.currentData = this.data;\r\n        this.dataInit();\r\n    }\r\n\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.data && !changes.data.isFirstChange()) {\r\n            this.currentData = this.data;\r\n            this.dataInit();\r\n        }\r\n        if (changes['total'] && !changes.total.isFirstChange()) {\r\n            this.paginationOptions['totalItems'] = this.total;\r\n            this.paginationOptions = {...this.paginationOptions};\r\n        }\r\n        if (changes['pageIndex'] && !changes.pageIndex.isFirstChange()) {\r\n            this.paginationOptions['currentPage'] = this.pageIndex;\r\n            this.paginationOptions = {...this.paginationOptions};\r\n        }\r\n\r\n        if (changes['pageSize'] && !changes.pageSize.isFirstChange()) {\r\n            this.paginationOptions['itemsPerPage'] = this.pageSize;\r\n            this.paginationOptions = {...this.paginationOptions};\r\n        }\r\n\r\n\r\n        if (changes.checkValues && !changes.checkValues.isFirstChange()) {\r\n            const change = this.differenceBy(changes.checkValues.currentValue || [], changes.checkValues.previousValue || [], v => {\r\n                return v;\r\n            });\r\n            if (change) {\r\n                if (!this.enableMorePageSelect) {\r\n                    this.checkRows(this.checkValues);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (changes.checkItems && !changes.checkItems.isFirstChange()) {\r\n            this.selectDataListWithOtherPager = [...this.checkItems];\r\n            const ids = this.checkItems.map(n => n[this.listidName]);\r\n            this.checkedItems(ids, false);\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n    }\r\n    ngAfterContentInit() {\r\n\r\n    }\r\n\r\n    /** é»è®¤æç´¢æ¨¡æ¿ ç¹å»æç´¢ */\r\n    searchList(searchField) {\r\n        if (searchField !== '' && this.data && this.data.length) {\r\n            this.currentData = this.data.filter((list) => {\r\n                let result;\r\n                const listValue = Object.values(list);\r\n                for (let i = 0; i < listValue.length; i++) {\r\n                    if (typeof listValue[i] == 'string') {\r\n                        if (listValue[i].toString().includes(searchField)) {\r\n                            result = listValue[i].toString().includes(searchField);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                return result;\r\n            });\r\n        } else {\r\n            this.currentData = this.data;\r\n        }\r\n        return { listdata: this.currentData, searchValue: searchField, length: this.currentData.length }\r\n    }\r\n\r\n    /** ç¹å»æä¸åäºä»¶ */\r\n    listSelect(event, listItem, index, checkChangeEvent = false) {\r\n        const isClickCheckbox = typeof event === 'boolean';\r\n\r\n        if (listItem['unClick'] || listItem['selectDisable']) {\r\n            return;\r\n        } else {\r\n            this.checkChange.emit({ listdata: listItem, index });\r\n            const selectItemIndex = this.selectDataList.findIndex((item, i) => {\r\n                return this.getKey(item, i) === this.getKey(listItem, index);\r\n            });\r\n            if (this.multipleSelect) {\r\n                if (listItem['checked']) {\r\n                    if (!this.keepSelect || isClickCheckbox) {\r\n                        // æ¯æå¤é å é¤è¯¥éä¸­è¡\r\n                        this.selectDataList.splice(selectItemIndex, 1);\r\n                        this.updateDataListForMorePager('remove', listItem);\r\n                        listItem['checked'] = false;\r\n                    } else {\r\n                        this.selectDataList.splice(selectItemIndex, 1);\r\n                        this.selectDataList.unshift(listItem);\r\n                    }\r\n                } else {\r\n                    // æ¯æå¤é æå¥è¯¥éä¸­è¡\r\n                    if (selectItemIndex === -1) {\r\n                        this.selectDataList.unshift(listItem);\r\n                        this.updateDataListForMorePager('append', listItem);\r\n                    } else {\r\n                        this.selectDataList.splice(selectItemIndex, 1);\r\n                        this.selectDataList.unshift(listItem);\r\n                    }\r\n                    listItem['checked'] = true;\r\n                }\r\n            } else {\r\n                // ä¸æ¯æå¤é æ¿æ¢å½åéä¸­è¡\r\n                this.selectDataList = [];\r\n                this.selectDataList.push(listItem);\r\n            }\r\n            if (!checkChangeEvent) {\r\n                this.clickItem = listItem;\r\n            }\r\n            this.listClick.emit({ data: this.selectDataList, index, checkChangeEvent });\r\n        }\r\n        if (this.multipleSelect) {\r\n            let ids = this.data.filter(item => !!item.checked).map(item => item[this.listidName]);\r\n            if (this.enableMorePageSelect) {\r\n                ids = this.selectDataListWithOtherPager.map(item => item[this.listidName]);\r\n            }\r\n            this.onCheckValuesChange(ids);\r\n        }\r\n    }\r\n\r\n    /** è·å¾æ¯ä¸è¡list å¯ä¸æ è¯ */\r\n    getKey(list, index) {\r\n        if (this.listidName && list.hasOwnProperty(this.listidName)) {\r\n            return list[this.listidName];\r\n        } else {\r\n            return index;\r\n        }\r\n    }\r\n\r\n    /** checkboxç¶æåå */\r\n    getSelect(event, changeData, i) {\r\n        const state = event.checked;\r\n        this.listSelect(state, changeData, i, true);\r\n    }\r\n\r\n    /** æåºäºä»¶ */\r\n    sort(sortkeyName, sortType = 'asc') {\r\n        this.currentData.sort(this.compare(sortkeyName, sortType));\r\n        return { sortResult: { listdata: this.currentData, sortkeyName, sortType } };\r\n    }\r\n\r\n\r\n    public selectRow(primaryValue: any) {\r\n        if (this.currentData && this.currentData.length > 0) {\r\n            const row = this.currentData.find(item => item[this.listidName] === primaryValue);\r\n            if (row) {\r\n                this.clickItem = row;\r\n                this.cdr.markForCheck();\r\n            }\r\n        }\r\n\r\n    }\r\n    private compare(KeyName, type) {\r\n        if (type === 'desc') {\r\n            return (obj1, obj2) => {\r\n                const val1 = obj1[KeyName];\r\n                const val2 = obj2[KeyName];\r\n                if (val2 < val1) {\r\n                    return 1;\r\n                } else if (val2 > val1) {\r\n                    return -1;\r\n                } else {\r\n                    return 0;\r\n                }\r\n            };\r\n        }\r\n        if (type === 'asc') {\r\n            return (obj1, obj2) => {\r\n                const val1 = obj1[KeyName];\r\n                const val2 = obj2[KeyName];\r\n                if (val2 > val1) {\r\n                    return 1;\r\n                } else if (val2 < val1) {\r\n                    return -1;\r\n                } else { return 0; }\r\n            };\r\n        }\r\n    }\r\n\r\n    getItemActive(item) {\r\n        // ä¸ç®¡æ¯å¦å¼å¯å¤éï¼å½åè¡åªæä¸è¡\r\n        if (this.listidName && this.clickItem) {\r\n            return item[this.listidName] === this.clickItem[this.listidName];\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n    onPageChange(page: { pageIndex: number, pageSize: number }) {\r\n        if (this.pageIndex !== page.pageIndex) {\r\n            this.pageIndex = page.pageIndex;\r\n            this.paginationOptions.currentPage = page.pageIndex;\r\n            // this.paginationOptions = {...this.paginationOptions};\r\n            this.pageChanged.emit({ pageInfo: page });\r\n        }\r\n    }\r\n\r\n    onPageSizeChange(pageSize: number) {\r\n        // console.log(this.pageSize !== pageSize && this.total);\r\n        if (this.pageSize !== pageSize && this.total) {\r\n            this.paginationOptions.itemsPerPage = pageSize;\r\n            this.pageSize = pageSize;\r\n\r\n            const total = this.total;\r\n            let pageLength = Math.floor(total / pageSize);\r\n            if (total % pageSize > 0) {\r\n                pageLength += 1;\r\n            }\r\n\r\n            if (pageLength && this.pageIndex > pageLength) {\r\n                this.pageIndex = pageLength;\r\n                this.paginationOptions.currentPage = this.pageIndex;\r\n            }\r\n            // this.paginationOptions = {...this.paginationOptions};\r\n            this.pageSizeChanged.emit({ pageInfo: { pageIndex: this.pageIndex, pageSize } });\r\n        }\r\n    }\r\n\r\n    getCurrentData() {\r\n        return this.currentData;\r\n    }\r\n\r\n    getSelectData() {\r\n        return this.selectDataList;\r\n    }\r\n    /** æ¯æéæ°è®¾ç½®listviewæ°æ® */\r\n    setData(listviewData) {\r\n        this.currentData = listviewData;\r\n        this.data = listviewData;\r\n        this.dataInit();\r\n    }\r\n\r\n    dataInit() {\r\n        if (this.data && this.data.length) {\r\n            this.selectDataList = this.data.filter((list) => {\r\n                return list['checked'];\r\n            });\r\n            if (this.activeIndex >= 0 && this.activeIndex <= (this.data.length - 1)) {\r\n                const dataItem = this.data[this.activeIndex];\r\n                if (dataItem) {\r\n                    this.clickItem = dataItem;\r\n                    this.selectDataList.push(this.clickItem);\r\n                }\r\n            } else if (this.activeIndex < 0) {\r\n                return;\r\n            } else {\r\n                if (!this.selectDataList.length && !this.multipleSelect) {\r\n                    this.selectDataList.push(this.data[0]);\r\n                }\r\n                this.clickItem = this.data[0];\r\n            }\r\n        }\r\n\r\n        this.updateDataListForMorePager();        \r\n\r\n        if (this.cdr) {\r\n            this.cdr.detectChanges();\r\n        }\r\n    }\r\n\r\n    private updateDataListForMorePager(active: 'remove'|'append'|'' = '', listItem?: any, emit = true) {\r\n        if (this.multipleSelect && this.enableMorePageSelect) {\r\n\r\n            if (active === 'remove' && listItem) {\r\n                if (!Array.isArray(listItem)) {\r\n                    this.selectDataListWithOtherPager =\r\n                        this.selectDataListWithOtherPager.filter(n => {\r\n                            if (typeof listItem === 'object') {\r\n                                return n[this.listidName] != listItem[this.listidName];\r\n                            } else {\r\n                                return n[this.listidName] != listItem;\r\n                            }\r\n                        });\r\n                } else {\r\n                    this.selectDataListWithOtherPager =\r\n                        this.selectDataListWithOtherPager.filter(n => {\r\n                            return listItem.indexOf(a => a[this.listidName] === n[this.listidName]) === -1;\r\n                        });\r\n                }\r\n\r\n                if (emit) {\r\n                    this.checkItemsChange.emit({items: [...this.selectDataListWithOtherPager], instance: this});\r\n                }\r\n\r\n            } else if (active === 'append') {\r\n                if (!Array.isArray(listItem)) {\r\n                    this.selectDataListWithOtherPager = [...this.selectDataListWithOtherPager, listItem];\r\n                } else {\r\n                    this.selectDataListWithOtherPager = [...this.selectDataListWithOtherPager, ...listItem];\r\n                }\r\n\r\n                if (emit) {\r\n                    this.checkItemsChange.emit({items: [...this.selectDataListWithOtherPager], instance: this});\r\n                }\r\n            } else {\r\n                if (!this.selectDataListWithOtherPager.length) {\r\n                    this.selectDataListWithOtherPager = [...this.selectDataList];\r\n                } else {\r\n\r\n                    const newCheckeds = this.sameBy(this.currentData, this.selectDataListWithOtherPager, (v) => v[this.listidName]);\r\n                    if (newCheckeds && newCheckeds.length) {\r\n                        this.data.forEach(item => {\r\n                            item.checked = newCheckeds.includes(item[this.listidName]);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /** å¨é */\r\n    listCheckAll() {\r\n        if (this.multipleSelect) {\r\n            this.currentData.forEach(item => {\r\n                item.checked = true;\r\n            });\r\n            this.selectDataList = this.currentData.filter((list) => {\r\n                return list['checked'];\r\n            });\r\n\r\n            this.updateDataListForMorePager('append', this.currentData);\r\n            this.cdr.markForCheck();\r\n        }\r\n    }\r\n    /** åæ¶å¨é */\r\n    listCheckAllCancel() {\r\n        if (this.multipleSelect) {\r\n            this.currentData.forEach(item => {\r\n                item.checked = false;\r\n            });\r\n            this.selectDataList = [];\r\n            this.updateDataListForMorePager('remove', this.currentData);\r\n            this.cdr.markForCheck();\r\n        }\r\n    }\r\n    /**\r\n     * å¾éè¡\r\n     * @param ids ids\r\n     */\r\n    public checkRows(ids: any[]): void {\r\n        if (this.multipleSelect) {\r\n            if (!ids || ids.length < 1) {\r\n                this.listCheckAllCancel();\r\n                return;\r\n            }\r\n            this.data.forEach(item => {\r\n                if (ids.includes(item[this.listidName])) {\r\n                    item.checked = true;\r\n                } else {\r\n                    item.checked = false;\r\n                }\r\n            });\r\n\r\n            // this.onCheckValuesChange(ids);\r\n            this.cdr.markForCheck();\r\n        }\r\n    }\r\n\r\n    private onCheckValuesChange(ids: any[]) {\r\n        this.checkValuesChange.emit(ids);\r\n    }\r\n\r\n    private differenceBy = (a, b, fn) => {\r\n        const s = new Set(b.map(fn));\r\n        return a.map(fn).filter(el => !s.has(el));\r\n    }\r\n\r\n    private sameBy = (a, b, fn) => {\r\n        const s = new Set(b.map(fn));\r\n        return a.map(fn).filter(el => s.has(el));\r\n    }\r\n\r\n\r\n    onMouseEnter($event) {\r\n        $event.stopPropagation();\r\n\r\n        this.mouseInSelectedList = true;\r\n        if (this.selectDataListWithOtherPager && this.selectDataListWithOtherPager.length) {\r\n            this.openSelectedList = !this.openSelectedList;\r\n        } else {\r\n            this.openSelectedList = false;\r\n        }\r\n    }\r\n\r\n\r\n    closeSelectedList() {\r\n        this.openSelectedList = false;\r\n        this.mouseInSelectedList = false;\r\n        if (!this.cdr['destroyed']) {\r\n            this.cdr.detectChanges();\r\n        }\r\n    }\r\n\r\n    onDelSelectedItem(id: any) {\r\n        this.currentData.forEach(item => {\r\n            if (item[this.listidName] == id) {\r\n                item.checked = false;\r\n            }\r\n        });\r\n\r\n        this.selectDataList = this.selectDataList.filter(n => n[this.listidName] != id);\r\n        this.updateDataListForMorePager('remove', id);\r\n\r\n        this.updateCheckedValues();\r\n\r\n    }\r\n\r\n    onClearSelected($event) {\r\n        // this.clearSelectedItem.emit();\r\n        this.closeSelectedList();\r\n        this.listCheckAllCancel();\r\n\r\n        this.selectDataListWithOtherPager = [];\r\n        this.checkValues = [];\r\n        this.onCheckValuesChange([]);\r\n    }\r\n\r\n    onSelectListPanelClose($event) {\r\n        this.closeSelectedList();\r\n    }\r\n\r\n    private updateCheckedValues(emit = true) {\r\n        if (this.multipleSelect) {\r\n            if (!this.enableMorePageSelect) {\r\n                this.checkValues = this.selectDataList.map(n => n[this.listidName]);\r\n            } else {\r\n                this.checkValues = this.selectDataListWithOtherPager.map(n => n[this.listidName]);\r\n            }\r\n\r\n            if (emit) {\r\n                this.onCheckValuesChange(this.checkValues);\r\n                this.checkItemsChange.emit({ items: this.selectDataListWithOtherPager, instance: this });\r\n            }\r\n        }\r\n    }\r\n\r\n    clearCheckeds(clearAll = true, emit = true) {\r\n        if (this.multipleSelect) {\r\n            this.currentData.forEach(item => {\r\n                item.checked = false;\r\n            });\r\n            this.selectDataList = [];\r\n\r\n            if (clearAll) {\r\n                this.selectDataListWithOtherPager = [];\r\n            } else  {\r\n                this.updateDataListForMorePager('remove', this.currentData);\r\n            }\r\n\r\n            if (emit) {\r\n                this.updateCheckedValues(emit);\r\n            }\r\n\r\n            this.cdr.markForCheck();\r\n        }\r\n    }\r\n\r\n    private _setItemsCheckedStatus( ids: any, checked: boolean, emit: boolean) {\r\n        if (ids && ids.length) {\r\n            const action = checked ? 'append': 'remove';\r\n            ids.forEach(i => {\r\n                let id = i;\r\n                if (typeof i === 'object') {\r\n                    id = i[this.listidName];\r\n                }\r\n\r\n                const item = this.data.find(n => n[this.listidName] === id);\r\n                if (item) {\r\n                    item.checked = checked;\r\n                }\r\n\r\n                if (checked) {\r\n                    this.updateDataListForMorePager('append', i, false);\r\n                } else {\r\n                    this.updateDataListForMorePager('remove', id, false);\r\n                }\r\n            });\r\n\r\n            this.updateCheckedValues(emit);\r\n            this.cdr.markForCheck();\r\n        }\r\n    }\r\n\r\n    unCheckItems(ids: number[] | string[] | object[], emit = false) {\r\n        this._setItemsCheckedStatus(ids, false, emit);\r\n    }\r\n\r\n    checkedItems(ids: object[], emit = false) {\r\n        this._setItemsCheckedStatus(ids, true, emit);\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n","import { Component, OnInit, Input,Output,EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'list-view-checkout',\r\n    templateUrl: './list-view-checkout.component.html'\r\n})\r\n\r\nexport class ListViewCheckoutComponent implements OnInit {\r\n    @Input() checked: boolean;\r\n    @Input() id: string;\r\n    @Input() disabled: boolean;\r\n\r\n    @Output() checkedChange = new EventEmitter();\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit() { }\r\n\r\n    handleClick(event: MouseEvent) {\r\n        event.stopPropagation();\r\n        if (!this.disabled) {\r\n            this.checkedChange.emit({originalEvent: event, checked: !this.checked});\r\n        }\r\n    }\r\n}\r\n","import { ListViewComponent } from './list-view.component';\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({name: 'formatItems'})\r\nexport class SelectedListFormatPipe implements PipeTransform {\r\n\r\n    constructor( private listViewRef: ListViewComponent ) {}\r\n\r\n    transform(data: any, formatter: any): any {\r\n        if (data) {\r\n\r\n            const idField = this.listViewRef.listidName;\r\n\r\n            if (formatter) {\r\n                data = data.map( d => {\r\n                    return {id: d[idField], text:  formatter(d) };\r\n                });\r\n            } else  {\r\n                data = data.map((d: any) => {\r\n                    const txt = [];\r\n                    const keys = Object.keys(d);\r\n                    keys.forEach(k => {\r\n                        txt.push(d[k]);\r\n                    });\r\n                    return {id: d[idField], text: txt.join(', ') };\r\n                });\r\n            }\r\n\r\n            return data;\r\n        }\r\n\r\n        return [];\r\n    }\r\n}\r\n","import { FarrisCommonModule } from '@farris/ui-common';\r\nimport { LocaleModule } from '@farris/ui-locale';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PaginationModule } from '@farris/ui-pagination';\r\nimport { ListViewComponent } from './list-view.component';\r\nimport { ListViewCheckoutComponent } from './component/list-view-checkout.component';\r\n\r\nimport {\r\n    ListViewHeaderTemplateDirective,\r\n    ListViewTemplateDirective,\r\n    ListViewFooterTemplateDirective,\r\n    ListViewEmptyTemplateDirective\r\n} from './template.directive';\r\nimport { SelectedListFormatPipe } from './selected-listitem-formatter.pipe';\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        ListViewComponent,\r\n        ListViewCheckoutComponent,\r\n        ListViewHeaderTemplateDirective,\r\n        ListViewTemplateDirective,\r\n        ListViewFooterTemplateDirective,\r\n        ListViewEmptyTemplateDirective,\r\n        SelectedListFormatPipe,\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        LocaleModule.forRoot(),\r\n        FarrisCommonModule,\r\n        PaginationModule\r\n    ],\r\n    exports: [\r\n        ListViewComponent,\r\n        ListViewCheckoutComponent,\r\n        ListViewHeaderTemplateDirective,\r\n        ListViewTemplateDirective,\r\n        ListViewFooterTemplateDirective,\r\n        ListViewEmptyTemplateDirective,\r\n        SelectedListFormatPipe\r\n    ]\r\n})\r\nexport class ListViewModule { }\r\n"]}