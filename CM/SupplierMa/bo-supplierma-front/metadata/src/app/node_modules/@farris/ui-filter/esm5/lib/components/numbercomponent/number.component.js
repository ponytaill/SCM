/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, HostBinding, EventEmitter, Output, ElementRef } from '@angular/core';
import { SolutionService } from '../../service/solution.service';
// import { NumberRangeValue } from '../../entity/conditionvalue/numberrangevaue';
var NumberComponent = /** @class */ (function () {
    function NumberComponent(solutionService, element) {
        this.solutionService = solutionService;
        this.element = element;
        this.searchHandle = new EventEmitter();
        /**
         * 判断是否是在扩展区域展示
         */
        this.extend = false;
        /**
         * 判断是否显示label
         */
        this.showlabel = true;
        this.canNull = true;
    }
    Object.defineProperty(NumberComponent.prototype, "isExtend", {
        get: /**
         * @return {?}
         */
        function () {
            return !this.extend && this.autoLabel;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NumberComponent.prototype, "hidenLabel", {
        get: /**
         * @return {?}
         */
        function () {
            return !this.showlabel;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NumberComponent.prototype, "item", {
        get: /**
         * @return {?}
         */
        function () {
            return this._item;
        },
        set: /**
         * @param {?} nr
         * @return {?}
         */
        function (nr) {
            this._item = nr;
            this.precision = nr.control.precision;
            this.bigNumber = nr.control.bigNumber;
            if (!this.bigNumber) {
                this.min = -2147483648;
                this.max = 2147483647;
            }
            this.constructMultiFieldNumberRange((/** @type {?} */ (nr.value)));
            if (this._item && this._item.control && this._item.control.hasOwnProperty('isExtend')) {
                this.extend = this._item.control.isExtend;
                if (!this.extend) {
                    this.showlabel = this._item.control.showLabel;
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    NumberComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        if (this.item) {
            this.beginPlaceHolder = this.item.beginPlaceHolder || '';
            this.endPlaceHolder = this.item.endPlaceHolder || '';
            // const type = Object.prototype.toString.call(this.item.placeHolder);
            // if(type == '[object Undefined]'){
            //     if(this.item.control && this.item.control.hasOwnProperty('placeholder')){
            //         this.placeholder = this.item.control.placeholder;
            //     }
            // }
            // else{
            //     this.placeholder = this.item.placeHolder;
            // }
            // const beginplac = Object.prototype.toString.call(this.item.beginPlaceHolder);
            // if(beginplac == '[object Undefined]'){
            //     if(this.item.control && this.item.control.hasOwnProperty('placeholder')){
            //         this.beginPlaceHolder = this.item.control.beginPlaceHolder;
            //     }
            // }
            // else{
            //     this.beginPlaceHolder = this.item.beginPlaceHolder;
            // }
            // const endplac = Object.prototype.toString.call(this.item.beginPlaceHolder);
            // if(endplac == '[object Undefined]'){
            //     if(this.item.control && this.item.control.hasOwnProperty('placeholder')){
            //         this.endPlaceHolder = this.item.control.endPlaceHolder;
            //     }
            // }
            // else{
            //     this.endPlaceHolder = this.item.endPlaceHolder;
            // }
        }
    };
    /**
     * @return {?}
     */
    NumberComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        // if(!this.extend){
        //     const El = this.element.nativeElement;
        //     const itemWidth = El.clientWidth;
        //     El.querySelector('.list-filter-number-item').style.width = itemWidth + 'px';
        //     El.querySelector('.number-item-btns').style.width = itemWidth + 100 + 'px';
        // }
    };
    /**
     * @param {?} field
     * @return {?}
     */
    NumberComponent.prototype.getConditionItemTitle = /**
     * @param {?} field
     * @return {?}
     */
    function (field) {
        return this.solutionService.getConditionItemTitle(field);
    };
    // constructNumberRange(value: NumberRangeValue): string{
    //     return "a~b".replace(/a/,value.startValue?value.startValue.toString().trim():"").replace(/b/,value.endValue?value.endValue.toString().trim():"");
    // }
    // constructNumberRange(value: NumberRangeValue): string{
    //     return "a~b".replace(/a/,value.startValue?value.startValue.toString().trim():"").replace(/b/,value.endValue?value.endValue.toString().trim():"");
    // }
    /**
     * @param {?} value
     * @return {?}
     */
    NumberComponent.prototype.constructMultiFieldNumberRange = 
    // constructNumberRange(value: NumberRangeValue): string{
    //     return "a~b".replace(/a/,value.startValue?value.startValue.toString().trim():"").replace(/b/,value.endValue?value.endValue.toString().trim():"");
    // }
    /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        // this.beginValue = value && value.startValue ? value.startValue.toString().trim() : '';
        // this.endValue = value && value.endValue ? value.endValue.toString().trim() : '';
        this.beginValue = value.startValue == null ? null : value.startValue;
        this.endValue = value.endValue == null ? null : value.endValue;
    };
    /**
     * @param {?} event
     * @return {?}
     */
    NumberComponent.prototype.numberChange = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (event) {
            // const dataArray = event.split("~");
            // console.log(dataArray);
            // this._item.value = (new NumberRangeValueConvertor).initFromObject({startValue: dataArray[0], endValue: dataArray[1]});
            /** @type {?} */
            var dataArray = event.split("~");
            this.item.value.startValue = dataArray[0] ? dataArray[0] : null;
            this.item.value.endValue = dataArray[1] ? dataArray[1] : null;
        }
        else {
            this._item.value.startValue = null;
            this._item.value.endValue = null;
        }
        // const dataArray = event.split("~");
        // this._item.value = (new NumberRangeValueConvertor).initFromObject({startValue: dataArray[0], endValue: dataArray[1]});
        if (this.disabled) {
            return;
        }
        this.searchHandle.emit();
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    NumberComponent.prototype.beginValueChange = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        this.beginValue = $event;
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    NumberComponent.prototype.endValueChange = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        this.endValue = $event;
    };
    NumberComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-filter-number',
                    template: "<label class=\"col-form-label\" *ngIf=\"item && showlabel\" title=\"{{getConditionItemTitle(item)}}\">\r\n    <span class=\"farris-label-info text-danger\" *ngIf=\"item.control.required\">*</span>\r\n    <span class=\"farris-label-text\">{{item.fieldName}}</span>\r\n</label>\r\n<div class=\"farris-input-wrap d-flex\">\r\n    <farris-number-range class=\"f-utils-fill-flex-row\" [canNull]=\"canNull\" [disabled]=\"disabled\" [beginValue]=\"beginValue\" \r\n    [endValue]=\"endValue\" (beginValueChange)=\"beginValueChange($event)\" (endValueChange)=\"endValueChange($event)\" \r\n    (valueChange)=\"numberChange($event)\" [beginPlaceHolder]=\"beginPlaceHolder\" [endPlaceHolder]=\"endPlaceHolder\" [placeholder]=\"placeholder\" \r\n    [precision]=\"precision\" [bigNumber]=\"bigNumber\" [min]=\"min\" [max]=\"max\"></farris-number-range>\r\n</div>"
                }] }
    ];
    /** @nocollapse */
    NumberComponent.ctorParameters = function () { return [
        { type: SolutionService },
        { type: ElementRef }
    ]; };
    NumberComponent.propDecorators = {
        autoLabel: [{ type: Input }],
        disabled: [{ type: Input }],
        searchHandle: [{ type: Output, args: ['searchHandle',] }],
        isExtend: [{ type: HostBinding, args: ['class.filter-item-wrap',] }],
        hidenLabel: [{ type: HostBinding, args: ['class.filter-item-hiddenlabel',] }],
        item: [{ type: Input }]
    };
    return NumberComponent;
}());
export { NumberComponent };
if (false) {
    /** @type {?} */
    NumberComponent.prototype.autoLabel;
    /** @type {?} */
    NumberComponent.prototype.disabled;
    /** @type {?} */
    NumberComponent.prototype.searchHandle;
    /**
     * 判断是否是在扩展区域展示
     * @type {?}
     */
    NumberComponent.prototype.extend;
    /**
     * 判断是否显示label
     * @type {?}
     */
    NumberComponent.prototype.showlabel;
    /** @type {?} */
    NumberComponent.prototype.canNull;
    /** @type {?} */
    NumberComponent.prototype.number;
    /** @type {?} */
    NumberComponent.prototype.beginValue;
    /** @type {?} */
    NumberComponent.prototype.endValue;
    /** @type {?} */
    NumberComponent.prototype.precision;
    /** @type {?} */
    NumberComponent.prototype.placeholder;
    /** @type {?} */
    NumberComponent.prototype.beginPlaceHolder;
    /** @type {?} */
    NumberComponent.prototype.endPlaceHolder;
    /** @type {?} */
    NumberComponent.prototype.bigNumber;
    /** @type {?} */
    NumberComponent.prototype.max;
    /** @type {?} */
    NumberComponent.prototype.min;
    /** @type {?} */
    NumberComponent.prototype._item;
    /** @type {?} */
    NumberComponent.prototype.numberRange;
    /**
     * @type {?}
     * @private
     */
    NumberComponent.prototype.solutionService;
    /**
     * @type {?}
     * @private
     */
    NumberComponent.prototype.element;
}
//# sourceMappingURL=data:application/json;base64,