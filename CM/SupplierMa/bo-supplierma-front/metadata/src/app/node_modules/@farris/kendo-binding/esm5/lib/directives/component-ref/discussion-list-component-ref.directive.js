import { Directive, ElementRef, Injector } from "@angular/core";
import { FrameContext } from "@farris/devkit";
import { DiscussionListComponent } from '@farris/discussion-group';
var DiscussionListComponentRefDirective = /** @class */ (function () {
    function DiscussionListComponentRefDirective(injector, component, elementRef, frameContext) {
        this.injector = injector;
        this.component = component;
        this.elementRef = elementRef;
        this.frameContext = frameContext;
    }
    DiscussionListComponentRefDirective.prototype.ngOnInit = function () {
        var id = this.elementRef && this.elementRef.nativeElement && this.elementRef.nativeElement.id;
        if (this.frameContext && id) {
            this.frameContext.componentRefManager.add(id, this.component);
        }
    };
    DiscussionListComponentRefDirective.prototype.ngOnDestroy = function () {
    };
    DiscussionListComponentRefDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[discussionListRef]'
                },] }
    ];
    /** @nocollapse */
    DiscussionListComponentRefDirective.ctorParameters = function () { return [
        { type: Injector },
        { type: DiscussionListComponent },
        { type: ElementRef },
        { type: FrameContext }
    ]; };
    return DiscussionListComponentRefDirective;
}());
export { DiscussionListComponentRefDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlzY3Vzc2lvbi1saXN0LWNvbXBvbmVudC1yZWYuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy9rZW5kby1iaW5kaW5nLyIsInNvdXJjZXMiOlsibGliL2RpcmVjdGl2ZXMvY29tcG9uZW50LXJlZi9kaXNjdXNzaW9uLWxpc3QtY29tcG9uZW50LXJlZi5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsUUFBUSxFQUFxQixNQUFNLGVBQWUsQ0FBQztBQUNuRixPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDOUMsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFFbkU7SUFJRSw2Q0FBb0IsUUFBa0IsRUFBVSxTQUFrQyxFQUFVLFVBQXNCLEVBQVUsWUFBMEI7UUFBbEksYUFBUSxHQUFSLFFBQVEsQ0FBVTtRQUFVLGNBQVMsR0FBVCxTQUFTLENBQXlCO1FBQVUsZUFBVSxHQUFWLFVBQVUsQ0FBWTtRQUFVLGlCQUFZLEdBQVosWUFBWSxDQUFjO0lBQUksQ0FBQztJQUMzSixzREFBUSxHQUFSO1FBQ0UsSUFBTSxFQUFFLEdBQUcsSUFBSSxDQUFDLFVBQVUsSUFBSSxJQUFJLENBQUMsVUFBVSxDQUFDLGFBQWEsSUFBSSxJQUFJLENBQUMsVUFBVSxDQUFDLGFBQWEsQ0FBQyxFQUFFLENBQUM7UUFDaEcsSUFBSSxJQUFJLENBQUMsWUFBWSxJQUFJLEVBQUUsRUFBRTtZQUMzQixJQUFJLENBQUMsWUFBWSxDQUFDLG1CQUFtQixDQUFDLEdBQUcsQ0FBQyxFQUFFLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1NBQy9EO0lBQ0gsQ0FBQztJQUNELHlEQUFXLEdBQVg7SUFDQSxDQUFDOztnQkFaRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLHFCQUFxQjtpQkFDaEM7Ozs7Z0JBTitCLFFBQVE7Z0JBRS9CLHVCQUF1QjtnQkFGWixVQUFVO2dCQUNyQixZQUFZOztJQWlCckIsMENBQUM7Q0FBQSxBQWRELElBY0M7U0FYWSxtQ0FBbUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIEVsZW1lbnRSZWYsIEluamVjdG9yLCBPbkRlc3Ryb3ksIE9uSW5pdCB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XHJcbmltcG9ydCB7IEZyYW1lQ29udGV4dCB9IGZyb20gXCJAZmFycmlzL2RldmtpdFwiO1xyXG5pbXBvcnQgeyBEaXNjdXNzaW9uTGlzdENvbXBvbmVudCB9IGZyb20gJ0BmYXJyaXMvZGlzY3Vzc2lvbi1ncm91cCc7XHJcblxyXG5ARGlyZWN0aXZlKHtcclxuICBzZWxlY3RvcjogJ1tkaXNjdXNzaW9uTGlzdFJlZl0nXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBEaXNjdXNzaW9uTGlzdENvbXBvbmVudFJlZkRpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGluamVjdG9yOiBJbmplY3RvciwgcHJpdmF0ZSBjb21wb25lbnQ6IERpc2N1c3Npb25MaXN0Q29tcG9uZW50LCBwcml2YXRlIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYsIHByaXZhdGUgZnJhbWVDb250ZXh0OiBGcmFtZUNvbnRleHQpIHsgfVxyXG4gIG5nT25Jbml0KCk6IHZvaWQge1xyXG4gICAgY29uc3QgaWQgPSB0aGlzLmVsZW1lbnRSZWYgJiYgdGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQgJiYgdGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQuaWQ7XHJcbiAgICBpZiAodGhpcy5mcmFtZUNvbnRleHQgJiYgaWQpIHtcclxuICAgICAgdGhpcy5mcmFtZUNvbnRleHQuY29tcG9uZW50UmVmTWFuYWdlci5hZGQoaWQsIHRoaXMuY29tcG9uZW50KTtcclxuICAgIH1cclxuICB9XHJcbiAgbmdPbkRlc3Ryb3koKTogdm9pZCB7XHJcbiAgfVxyXG5cclxufSJdfQ==