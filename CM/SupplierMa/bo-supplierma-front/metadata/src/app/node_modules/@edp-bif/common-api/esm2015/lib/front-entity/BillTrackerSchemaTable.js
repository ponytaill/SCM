/**
 * @fileoverview added by tsickle
 * Generated from: lib/front-entity/BillTrackerSchemaTable.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { BillSchemaField } from "@edp-aif/common-api";
/** @type {?} */
export const fullPathPrefix = "#";
export class BillTrackerSchemaTable {
    /**
     * 自定义JSON序列化方法
     * @return {?}
     */
    toJSON() {
        /** @type {?} */
        const fields = this.fields && this.fields.map((/**
         * @param {?} originF
         * @return {?}
         */
        (originF) => {
            /** @type {?} */
            let sf = new BillSchemaField();
            // sf.fullPath = originF.fullPath;
            sf.fieldPath = originF.fieldPath;
            sf.fieldName = originF.fieldName;
            sf.caption = originF.caption;
            sf.displayName = originF.displayName;
            sf.order = originF.order;
            sf.i18nCols = originF.i18nCols;
            sf.formatInfo = originF.formatInfo;
            return sf;
        }));
        /** @type {?} */
        const obj = {
            code: this.code,
            caption: this.caption,
            displayName: this.displayName,
            order: this.order,
            show: this.show,
            fields: fields,
            i18nCols: this.i18nCols,
        };
        return obj;
    }
}
if (false) {
    /** @type {?} */
    BillTrackerSchemaTable.prototype.code;
    /** @type {?} */
    BillTrackerSchemaTable.prototype.caption;
    /** @type {?} */
    BillTrackerSchemaTable.prototype.displayName;
    /** @type {?} */
    BillTrackerSchemaTable.prototype.order;
    /** @type {?} */
    BillTrackerSchemaTable.prototype.show;
    /** @type {?} */
    BillTrackerSchemaTable.prototype.fields;
    /** @type {?} */
    BillTrackerSchemaTable.prototype.i18nCols;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQmlsbFRyYWNrZXJTY2hlbWFUYWJsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BlZHAtYmlmL2NvbW1vbi1hcGkvIiwic291cmNlcyI6WyJsaWIvZnJvbnQtZW50aXR5L0JpbGxUcmFja2VyU2NoZW1hVGFibGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsZUFBZSxFQUFzQixNQUFNLHFCQUFxQixDQUFDOztBQXlCMUUsTUFBTSxPQUFPLGNBQWMsR0FBVyxHQUFHO0FBRXpDLE1BQU0sT0FBTyxzQkFBc0I7Ozs7O0lBZS9CLE1BQU07O2NBQ0ksTUFBTSxHQUFHLElBQUksQ0FBQyxNQUFNLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHOzs7O1FBQUMsQ0FBQyxPQUFPLEVBQUUsRUFBRTs7Z0JBQ2xELEVBQUUsR0FBRyxJQUFJLGVBQWUsRUFBRTtZQUM5QixrQ0FBa0M7WUFDbEMsRUFBRSxDQUFDLFNBQVMsR0FBRyxPQUFPLENBQUMsU0FBUyxDQUFDO1lBQ2pDLEVBQUUsQ0FBQyxTQUFTLEdBQUcsT0FBTyxDQUFDLFNBQVMsQ0FBQztZQUNqQyxFQUFFLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUM7WUFDN0IsRUFBRSxDQUFDLFdBQVcsR0FBRyxPQUFPLENBQUMsV0FBVyxDQUFDO1lBQ3JDLEVBQUUsQ0FBQyxLQUFLLEdBQUcsT0FBTyxDQUFDLEtBQUssQ0FBQztZQUN6QixFQUFFLENBQUMsUUFBUSxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUM7WUFDL0IsRUFBRSxDQUFDLFVBQVUsR0FBRyxPQUFPLENBQUMsVUFBVSxDQUFDO1lBRW5DLE9BQU8sRUFBRSxDQUFDO1FBQ2QsQ0FBQyxFQUFDOztjQUVJLEdBQUcsR0FBRztZQUNSLElBQUksRUFBRSxJQUFJLENBQUMsSUFBSTtZQUNmLE9BQU8sRUFBRSxJQUFJLENBQUMsT0FBTztZQUNyQixXQUFXLEVBQUUsSUFBSSxDQUFDLFdBQVc7WUFDN0IsS0FBSyxFQUFFLElBQUksQ0FBQyxLQUFLO1lBQ2pCLElBQUksRUFBRSxJQUFJLENBQUMsSUFBSTtZQUNmLE1BQU0sRUFBRSxNQUFNO1lBQ2QsUUFBUSxFQUFFLElBQUksQ0FBQyxRQUFRO1NBQzFCO1FBRUQsT0FBTyxHQUFHLENBQUM7SUFDZixDQUFDO0NBQ0o7OztJQXpDRyxzQ0FBYTs7SUFDYix5Q0FBZ0I7O0lBQ2hCLDZDQUFvQjs7SUFDcEIsdUNBQWM7O0lBQ2Qsc0NBQWM7O0lBQ2Qsd0NBQWlEOztJQUNqRCwwQ0FFRSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJpbGxTY2hlbWFGaWVsZCwgQmlsbFNjaGVtYVN1YkZpZWxkIH0gZnJvbSBcIkBlZHAtYWlmL2NvbW1vbi1hcGlcIjtcclxuXHJcbmRlY2xhcmUgbW9kdWxlICdAZWRwLWFpZi9jb21tb24tYXBpL2xpYi9iaWxsa2l0JyB7XHJcbiAgICBleHBvcnQgaW50ZXJmYWNlIEJpbGxTY2hlbWFGaWVsZEJhc2Uge1xyXG4gICAgICAgIGZpZWxkUGF0aD86IHN0cmluZztcclxuICAgICAgICBkaXNwbGF5TmFtZT86IHN0cmluZztcclxuICAgICAgICBvcmRlcj86IG51bWJlcjtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBmdWxsUGF0aCA9IFwiI1wiICsgdGFibGVOYW1lICsgXCIuXCIgKyBmaWVsZFBhdGhcclxuICAgICAgICAgKi9cclxuICAgICAgICBmdWxsUGF0aD86IHN0cmluZztcclxuICAgICAgICBjYXB0aW9uUGF0aD86IHN0cmluZztcclxuICAgICAgICBpMThuQ29scz86IHtcclxuICAgICAgICAgICAgY29sSTE4blZhbHVlcz86IGFueTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIGZvcm1hdEluZm8/OiB7XHJcbiAgICAgICAgICAgIGRhdGVGb3JtYXR0ZXI/OiBzdHJpbmc7XHJcbiAgICAgICAgICAgIHNjYWxlPzogbnVtYmVyO1xyXG4gICAgICAgICAgICBzY2FsZUV4cHJlc3Npb24/OiBzdHJpbmc7XHJcbiAgICAgICAgICAgIGVuYWJsZVNjYWxlRXhwcmVzc2lvbj86IGJvb2xlYW47XHJcbiAgICAgICAgICAgIHN0cmluZ01hcEZvcm1hdHRlcj86IGFueTtcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgY29uc3QgZnVsbFBhdGhQcmVmaXg6IHN0cmluZyA9IFwiI1wiO1xyXG5cclxuZXhwb3J0IGNsYXNzIEJpbGxUcmFja2VyU2NoZW1hVGFibGUge1xyXG4gICAgY29kZTogc3RyaW5nO1xyXG4gICAgY2FwdGlvbjogc3RyaW5nO1xyXG4gICAgZGlzcGxheU5hbWU6IHN0cmluZztcclxuICAgIG9yZGVyOiBudW1iZXI7XHJcbiAgICBzaG93OiBib29sZWFuO1xyXG4gICAgZmllbGRzOiAoQmlsbFNjaGVtYUZpZWxkIHwgQmlsbFNjaGVtYVN1YkZpZWxkKVtdO1xyXG4gICAgaTE4bkNvbHM/OiB7XHJcbiAgICAgICAgY29sSTE4blZhbHVlcz86IGFueTtcclxuICAgIH07XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDoh6rlrprkuYlKU09O5bqP5YiX5YyW5pa55rOVXHJcbiAgICAgKiBAcmV0dXJucyBcclxuICAgICAqL1xyXG4gICAgdG9KU09OKCkge1xyXG4gICAgICAgIGNvbnN0IGZpZWxkcyA9IHRoaXMuZmllbGRzICYmIHRoaXMuZmllbGRzLm1hcCgob3JpZ2luRikgPT4ge1xyXG4gICAgICAgICAgICBsZXQgc2YgPSBuZXcgQmlsbFNjaGVtYUZpZWxkKCk7XHJcbiAgICAgICAgICAgIC8vIHNmLmZ1bGxQYXRoID0gb3JpZ2luRi5mdWxsUGF0aDtcclxuICAgICAgICAgICAgc2YuZmllbGRQYXRoID0gb3JpZ2luRi5maWVsZFBhdGg7XHJcbiAgICAgICAgICAgIHNmLmZpZWxkTmFtZSA9IG9yaWdpbkYuZmllbGROYW1lO1xyXG4gICAgICAgICAgICBzZi5jYXB0aW9uID0gb3JpZ2luRi5jYXB0aW9uO1xyXG4gICAgICAgICAgICBzZi5kaXNwbGF5TmFtZSA9IG9yaWdpbkYuZGlzcGxheU5hbWU7XHJcbiAgICAgICAgICAgIHNmLm9yZGVyID0gb3JpZ2luRi5vcmRlcjtcclxuICAgICAgICAgICAgc2YuaTE4bkNvbHMgPSBvcmlnaW5GLmkxOG5Db2xzO1xyXG4gICAgICAgICAgICBzZi5mb3JtYXRJbmZvID0gb3JpZ2luRi5mb3JtYXRJbmZvO1xyXG5cclxuICAgICAgICAgICAgcmV0dXJuIHNmO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICBjb25zdCBvYmogPSB7XHJcbiAgICAgICAgICAgIGNvZGU6IHRoaXMuY29kZSxcclxuICAgICAgICAgICAgY2FwdGlvbjogdGhpcy5jYXB0aW9uLFxyXG4gICAgICAgICAgICBkaXNwbGF5TmFtZTogdGhpcy5kaXNwbGF5TmFtZSxcclxuICAgICAgICAgICAgb3JkZXI6IHRoaXMub3JkZXIsXHJcbiAgICAgICAgICAgIHNob3c6IHRoaXMuc2hvdyxcclxuICAgICAgICAgICAgZmllbGRzOiBmaWVsZHMsXHJcbiAgICAgICAgICAgIGkxOG5Db2xzOiB0aGlzLmkxOG5Db2xzLFxyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIHJldHVybiBvYmo7XHJcbiAgICB9XHJcbn0iXX0=