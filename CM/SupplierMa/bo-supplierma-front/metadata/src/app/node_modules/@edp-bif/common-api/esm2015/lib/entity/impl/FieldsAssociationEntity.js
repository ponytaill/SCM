/**
 * @fileoverview added by tsickle
 * Generated from: lib/entity/impl/FieldsAssociationEntity.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { BpmnModelJsonHelper, Entity } from "@edp-aif/common-api";
import { AssociationFieldsType } from "./AssociationFieldsType";
export class FieldsAssociationEntity extends Entity {
    constructor() {
        super(...arguments);
        this.sysInit = false;
        this.associationFieldsType = AssociationFieldsType.DEFAULT;
    }
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.code = null;
        this.name = null;
        this.sysInit = false;
        this.docuRelationId = null;
        this.associationFieldsType = AssociationFieldsType.DEFAULT;
        this.upDocuMainCode = null;
        this.upDocuMainField = null;
        this.downDocuMainCode = null;
        this.downDocuMainField = null;
        this.upDocuItemCode = null;
        this.upDocuItemField = null;
        this.downDocuItemCode = null;
        this.downDocuItemField = null;
        this.upDocuDetailCode = null;
        this.upDocuDetailField = null;
        this.downDocuDetailCode = null;
        this.downDocuDetailField = null;
        this.mapUpMainField = null;
        this.mapDownMainField = null;
        this.mapUpItemCode = null;
        this.mapUpItemField = null;
        this.mapDownItemCode = null;
        this.mapDownItemField = null;
        this.mapUpDetailCode = null;
        this.mapUpDetailField = null;
        this.mapDownDetailCode = null;
        this.mapDownDetailField = null;
        this.colI18nValues = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "code", this.code);
        BpmnModelJsonHelper.SetAttributeValue(obj, "name", this.name);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sysInit", this.sysInit);
        BpmnModelJsonHelper.SetAttributeValue(obj, "docuRelationId", this.docuRelationId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "associationFieldsType", this.associationFieldsType);
        BpmnModelJsonHelper.SetAttributeValue(obj, "upDocuMainCode", this.upDocuMainCode);
        BpmnModelJsonHelper.SetAttributeValue(obj, "upDocuMainField", this.upDocuMainField);
        BpmnModelJsonHelper.SetAttributeValue(obj, "downDocuMainCode", this.downDocuMainCode);
        BpmnModelJsonHelper.SetAttributeValue(obj, "downDocuMainField", this.downDocuMainField);
        BpmnModelJsonHelper.SetAttributeValue(obj, "upDocuItemCode", this.upDocuItemCode);
        BpmnModelJsonHelper.SetAttributeValue(obj, "upDocuItemField", this.upDocuItemField);
        BpmnModelJsonHelper.SetAttributeValue(obj, "downDocuItemCode", this.downDocuItemCode);
        BpmnModelJsonHelper.SetAttributeValue(obj, "downDocuItemField", this.downDocuItemField);
        BpmnModelJsonHelper.SetAttributeValue(obj, "upDocuDetailCode", this.upDocuDetailCode);
        BpmnModelJsonHelper.SetAttributeValue(obj, "upDocuDetailField", this.upDocuDetailField);
        BpmnModelJsonHelper.SetAttributeValue(obj, "downDocuDetailCode", this.downDocuDetailCode);
        BpmnModelJsonHelper.SetAttributeValue(obj, "downDocuDetailField", this.downDocuDetailField);
        BpmnModelJsonHelper.SetAttributeValue(obj, "mapUpMainField", this.mapUpMainField);
        BpmnModelJsonHelper.SetAttributeValue(obj, "mapDownMainField", this.mapDownMainField);
        BpmnModelJsonHelper.SetAttributeValue(obj, "mapUpItemCode", this.mapUpItemCode);
        BpmnModelJsonHelper.SetAttributeValue(obj, "mapUpItemField", this.mapUpItemField);
        BpmnModelJsonHelper.SetAttributeValue(obj, "mapDownItemCode", this.mapDownItemCode);
        BpmnModelJsonHelper.SetAttributeValue(obj, "mapDownItemField", this.mapDownItemField);
        BpmnModelJsonHelper.SetAttributeValue(obj, "mapUpDetailCode", this.mapUpDetailCode);
        BpmnModelJsonHelper.SetAttributeValue(obj, "mapUpDetailField", this.mapUpDetailField);
        BpmnModelJsonHelper.SetAttributeValue(obj, "mapDownDetailCode", this.mapDownDetailCode);
        BpmnModelJsonHelper.SetAttributeValue(obj, "mapDownDetailField", this.mapDownDetailField);
        BpmnModelJsonHelper.SetAttributeValue(obj, "colI18nValues", this.colI18nValues);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.code = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "code");
        this.name = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "name");
        this.sysInit = BpmnModelJsonHelper.GetAttributeValueAsBoolean(obj, "sysInit");
        this.docuRelationId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "docuRelationId");
        this.associationFieldsType = AssociationFieldsType[BpmnModelJsonHelper.GetAttributeValueAsString(obj, "associationFieldsType")];
        this.upDocuMainCode = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "upDocuMainCode");
        this.upDocuMainField = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "upDocuMainField");
        this.downDocuMainCode = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "downDocuMainCode");
        this.downDocuMainField = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "downDocuMainField");
        this.upDocuItemCode = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "upDocuItemCode");
        this.upDocuItemField = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "upDocuItemField");
        this.downDocuItemCode = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "downDocuItemCode");
        this.downDocuItemField = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "downDocuItemField");
        this.upDocuDetailCode = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "upDocuDetailCode");
        this.upDocuDetailField = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "upDocuDetailField");
        this.downDocuDetailCode = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "downDocuDetailCode");
        this.downDocuDetailField = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "downDocuDetailField");
        this.mapUpMainField = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "mapUpMainField");
        this.mapDownMainField = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "mapDownMainField");
        this.mapUpItemCode = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "mapUpItemCode");
        this.mapUpItemField = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "mapUpItemField");
        this.mapDownItemCode = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "mapDownItemCode");
        this.mapDownItemField = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "mapDownItemField");
        this.mapUpDetailCode = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "mapUpDetailCode");
        this.mapUpDetailField = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "mapUpDetailField");
        this.mapDownDetailCode = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "mapDownDetailCode");
        this.mapDownDetailField = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "mapDownDetailField");
        this.colI18nValues = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "colI18nValues");
    }
}
if (false) {
    /** @type {?} */
    FieldsAssociationEntity.prototype.code;
    /** @type {?} */
    FieldsAssociationEntity.prototype.name;
    /** @type {?} */
    FieldsAssociationEntity.prototype.sysInit;
    /** @type {?} */
    FieldsAssociationEntity.prototype.docuRelationId;
    /** @type {?} */
    FieldsAssociationEntity.prototype.associationFieldsType;
    /** @type {?} */
    FieldsAssociationEntity.prototype.upDocuMainCode;
    /** @type {?} */
    FieldsAssociationEntity.prototype.upDocuMainField;
    /** @type {?} */
    FieldsAssociationEntity.prototype.downDocuMainCode;
    /** @type {?} */
    FieldsAssociationEntity.prototype.downDocuMainField;
    /** @type {?} */
    FieldsAssociationEntity.prototype.upDocuItemCode;
    /** @type {?} */
    FieldsAssociationEntity.prototype.upDocuItemField;
    /** @type {?} */
    FieldsAssociationEntity.prototype.downDocuItemCode;
    /** @type {?} */
    FieldsAssociationEntity.prototype.downDocuItemField;
    /** @type {?} */
    FieldsAssociationEntity.prototype.upDocuDetailCode;
    /** @type {?} */
    FieldsAssociationEntity.prototype.upDocuDetailField;
    /** @type {?} */
    FieldsAssociationEntity.prototype.downDocuDetailCode;
    /** @type {?} */
    FieldsAssociationEntity.prototype.downDocuDetailField;
    /** @type {?} */
    FieldsAssociationEntity.prototype.mapDownMainField;
    /** @type {?} */
    FieldsAssociationEntity.prototype.mapUpMainField;
    /** @type {?} */
    FieldsAssociationEntity.prototype.mapUpItemCode;
    /** @type {?} */
    FieldsAssociationEntity.prototype.mapUpItemField;
    /** @type {?} */
    FieldsAssociationEntity.prototype.mapDownItemCode;
    /** @type {?} */
    FieldsAssociationEntity.prototype.mapDownItemField;
    /** @type {?} */
    FieldsAssociationEntity.prototype.mapUpDetailCode;
    /** @type {?} */
    FieldsAssociationEntity.prototype.mapUpDetailField;
    /** @type {?} */
    FieldsAssociationEntity.prototype.mapDownDetailCode;
    /** @type {?} */
    FieldsAssociationEntity.prototype.mapDownDetailField;
    /** @type {?} */
    FieldsAssociationEntity.prototype.colI18nValues;
}
//# sourceMappingURL=data:application/json;base64,