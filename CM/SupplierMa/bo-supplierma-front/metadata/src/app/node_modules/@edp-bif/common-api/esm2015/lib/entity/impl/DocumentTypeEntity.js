/**
 * @fileoverview added by tsickle
 * Generated from: lib/entity/impl/DocumentTypeEntity.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { BpmnModelJsonHelper, Entity } from '@edp-aif/common-api';
import { JointQueryMode } from './JointQueryMode';
export class DocumentTypeEntity extends Entity {
    constructor() {
        super(...arguments);
        this.sysInit = false;
        // accessMode: AccessMode = AccessMode.DEFAULT;
        this.jointQueryMode = JointQueryMode.DEFAULT;
        // dataSql: string;
        this.extend = false;
    }
    /**
     * @return {?}
     */
    DocumentTypeEntity() {
    }
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.code = null;
        this.name = null;
        this.sysInit = false;
        this.moduleId = null;
        this.bizKind = null;
        this.bizType = null;
        this.suCode = null;
        this.schemaId = null;
        this.jointQueryMode = JointQueryMode.DEFAULT;
        this.jointQueryParameters = null;
        this.nodeName = null;
        this.customNodeName = null;
        this.nodeStyle = null;
        this.customNodeStyle = null;
        this.summaryFields = null;
        this.customSummaryFields = null;
        this.displayFields = null;
        this.customDisplayFields = null;
        this.extend = false;
        this.colI18nValues = null;
        this.rootId = null;
        this.parentId = null;
        this.enableConditionExpressionText = null;
        this.trackingSourceType = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, 'code', this.code);
        BpmnModelJsonHelper.SetAttributeValue(obj, 'name', this.name);
        BpmnModelJsonHelper.SetAttributeValue(obj, 'sysInit', this.sysInit);
        BpmnModelJsonHelper.SetAttributeValue(obj, 'moduleId', this.moduleId);
        BpmnModelJsonHelper.SetAttributeValue(obj, 'bizKind', this.bizKind);
        BpmnModelJsonHelper.SetAttributeValue(obj, 'bizType', this.bizType);
        BpmnModelJsonHelper.SetAttributeValue(obj, 'suCode', this.suCode);
        BpmnModelJsonHelper.SetAttributeValue(obj, 'schemaId', this.schemaId);
        BpmnModelJsonHelper.SetAttributeValue(obj, 'jointQueryMode', this.jointQueryMode);
        BpmnModelJsonHelper.SetAttributeValue(obj, 'jointQueryParameters', this.jointQueryParameters);
        BpmnModelJsonHelper.SetAttributeValue(obj, 'nodeName', this.nodeName);
        BpmnModelJsonHelper.SetAttributeValue(obj, 'customNodeName', this.customNodeName);
        BpmnModelJsonHelper.SetAttributeValue(obj, 'nodeStyle', this.nodeStyle);
        BpmnModelJsonHelper.SetAttributeValue(obj, 'customNodeStyle', this.customNodeStyle);
        BpmnModelJsonHelper.SetAttributeValue(obj, 'summaryFields', this.summaryFields);
        BpmnModelJsonHelper.SetAttributeValue(obj, 'customSummaryFields', this.customSummaryFields);
        BpmnModelJsonHelper.SetAttributeValue(obj, 'displayFields', this.displayFields);
        BpmnModelJsonHelper.SetAttributeValue(obj, 'customDisplayFields', this.customDisplayFields);
        BpmnModelJsonHelper.SetAttributeValue(obj, 'extend', this.extend);
        BpmnModelJsonHelper.SetAttributeValue(obj, 'colI18nValues', this.colI18nValues);
        BpmnModelJsonHelper.SetAttributeValue(obj, 'rootId', this.rootId);
        BpmnModelJsonHelper.SetAttributeValue(obj, 'parentId', this.parentId);
        BpmnModelJsonHelper.SetAttributeValue(obj, 'enableConditionExpressionText', this.enableConditionExpressionText);
        BpmnModelJsonHelper.SetAttributeValue(obj, 'trackingSourceType', this.trackingSourceType);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.code = BpmnModelJsonHelper.GetAttributeValueAsString(obj, 'code');
        this.name = BpmnModelJsonHelper.GetAttributeValueAsString(obj, 'name');
        this.sysInit = BpmnModelJsonHelper.GetAttributeValueAsBoolean(obj, 'sysInit');
        this.moduleId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, 'moduleId');
        this.bizKind = BpmnModelJsonHelper.GetAttributeValueAsString(obj, 'bizKind');
        this.bizType = BpmnModelJsonHelper.GetAttributeValueAsString(obj, 'bizType');
        this.suCode = BpmnModelJsonHelper.GetAttributeValueAsString(obj, 'suCode');
        this.schemaId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, 'schemaId');
        this.jointQueryMode = JointQueryMode[BpmnModelJsonHelper.GetAttributeValueAsString(obj, 'jointQueryMode')];
        this.jointQueryParameters = BpmnModelJsonHelper.GetAttributeValueAsString(obj, 'jointQueryParameters');
        this.nodeName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, 'nodeName');
        this.customNodeName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, 'customNodeName');
        this.nodeStyle = BpmnModelJsonHelper.GetAttributeValueAsString(obj, 'nodeStyle');
        this.customNodeStyle = BpmnModelJsonHelper.GetAttributeValueAsString(obj, 'customNodeStyle');
        this.summaryFields = BpmnModelJsonHelper.GetAttributeValueAsString(obj, 'summaryFields');
        this.customSummaryFields = BpmnModelJsonHelper.GetAttributeValueAsString(obj, 'customSummaryFields');
        this.displayFields = BpmnModelJsonHelper.GetAttributeValueAsString(obj, 'displayFields');
        this.customDisplayFields = BpmnModelJsonHelper.GetAttributeValueAsString(obj, 'customDisplayFields');
        this.extend = BpmnModelJsonHelper.GetAttributeValueAsBoolean(obj, 'extend');
        this.colI18nValues = BpmnModelJsonHelper.GetAttributeValueAsString(obj, 'colI18nValues');
        this.rootId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, 'rootId');
        this.parentId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, 'parentId');
        this.enableConditionExpressionText = BpmnModelJsonHelper.GetAttributeValueAsString(obj, 'enableConditionExpressionText');
        this.trackingSourceType = BpmnModelJsonHelper.GetAttributeValueAsString(obj, 'trackingSourceType');
    }
}
if (false) {
    /** @type {?} */
    DocumentTypeEntity.prototype.code;
    /** @type {?} */
    DocumentTypeEntity.prototype.name;
    /** @type {?} */
    DocumentTypeEntity.prototype.sysInit;
    /** @type {?} */
    DocumentTypeEntity.prototype.moduleId;
    /** @type {?} */
    DocumentTypeEntity.prototype.bizKind;
    /** @type {?} */
    DocumentTypeEntity.prototype.bizType;
    /** @type {?} */
    DocumentTypeEntity.prototype.suCode;
    /** @type {?} */
    DocumentTypeEntity.prototype.schemaId;
    /** @type {?} */
    DocumentTypeEntity.prototype.jointQueryMode;
    /** @type {?} */
    DocumentTypeEntity.prototype.jointQueryParameters;
    /** @type {?} */
    DocumentTypeEntity.prototype.nodeName;
    /** @type {?} */
    DocumentTypeEntity.prototype.customNodeName;
    /** @type {?} */
    DocumentTypeEntity.prototype.nodeStyle;
    /** @type {?} */
    DocumentTypeEntity.prototype.customNodeStyle;
    /** @type {?} */
    DocumentTypeEntity.prototype.summaryFields;
    /** @type {?} */
    DocumentTypeEntity.prototype.customSummaryFields;
    /** @type {?} */
    DocumentTypeEntity.prototype.displayFields;
    /** @type {?} */
    DocumentTypeEntity.prototype.customDisplayFields;
    /** @type {?} */
    DocumentTypeEntity.prototype.extend;
    /** @type {?} */
    DocumentTypeEntity.prototype.colI18nValues;
    /** @type {?} */
    DocumentTypeEntity.prototype.rootId;
    /** @type {?} */
    DocumentTypeEntity.prototype.parentId;
    /** @type {?} */
    DocumentTypeEntity.prototype.enableConditionExpressionText;
    /** @type {?} */
    DocumentTypeEntity.prototype.trackingSourceType;
}
//# sourceMappingURL=data:application/json;base64,