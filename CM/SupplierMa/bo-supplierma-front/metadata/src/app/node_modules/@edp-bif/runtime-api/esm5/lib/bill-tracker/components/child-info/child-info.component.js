/**
 * @fileoverview added by tsickle
 * Generated from: lib/bill-tracker/components/child-info/child-info.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { ChangeDetectorRef, Component, ComponentFactoryResolver, Inject, Injector, Input, LOCALE_ID, Optional, ViewChild, ViewContainerRef } from "@angular/core";
import { BillDataTable, BillSchemaTable, DataType } from "@edp-aif/common-api";
import { BillTrackingDataShownMode, BillTrackingSettings } from "@edp-bif/common-api";
import { DatagridComponent } from "@farris/ui-datagrid";
import { LoadingService } from "@farris/ui-loading";
import { MessagerService } from "@farris/ui-messager";
import { BsModalService } from "@farris/ui-modal";
import { NotifyService } from "@farris/ui-notify";
import { BillInfo } from "../../../entity/tracking/BillInfo";
import { BillTrackerLocalePipe } from "../../pipe/bill-tracker-locale.pipe";
import { BillTrackerDataInfoService } from "../../services/bill-tracker-data-info.service";
import { ChildInfoListComponent } from "../child-info-list/child-info-list.component";
var ChildInfoComponent = /** @class */ (function () {
    function ChildInfoComponent(notify, messager, loading, modal, dataInfoService, localePipe, vcr, inj, cfr, cdr, localeId) {
        this.notify = notify;
        this.messager = messager;
        this.loading = loading;
        this.modal = modal;
        this.dataInfoService = dataInfoService;
        this.localePipe = localePipe;
        this.vcr = vcr;
        this.inj = inj;
        this.cfr = cfr;
        this.cdr = cdr;
        this.localeId = localeId;
        this.secTitle = null;
        this.showDetail = false;
        this.dgCols = [];
        this.dgData = [];
        this.dgLineNumberTitle = this.localePipe.transform("lineNumber");
        this.dgIdField = "bifDgId0d63";
        this.localeId = localeId || this.inj.get(LOCALE_ID);
    }
    /**
     * @return {?}
     */
    ChildInfoComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        // 设置section标题
        this.secTitle = this.localePipe.transform("basicInfo");
        // 表名解析
        this.secTitle = this.dataInfoService.getTableLabel(this.billInfo, this.schemaTable, this.localeId);
        // 单据追踪配置
        /** @type {?} */
        var bts = new BillTrackingSettings();
        if (this.billInfo && this.billInfo.billTrackingSettings) {
            bts.LoadFromJson(this.billInfo.billTrackingSettings);
        }
        // 字段解析
        /** @type {?} */
        var fieldContent = bts.customFieldContent;
        /** @type {?} */
        var fieldConfig = fieldContent && (typeof fieldContent == "object" ? fieldContent : JSON.parse(fieldContent));
        /** @type {?} */
        var selectedFields = fieldConfig && fieldConfig.schema && fieldConfig.schema[this.schemaTable.tableName] && fieldConfig.schema[this.schemaTable.tableName].fields;
        selectedFields = selectedFields ? selectedFields : [];
        /** @type {?} */
        var showCustomFields = bts.billTrackingDataShownMode === BillTrackingDataShownMode.CUSTOMFIELD;
        /** @type {?} */
        var fs = this.schemaTable.getFieldList();
        // 提取字段
        /** @type {?} */
        var ffs = this.dataInfoService.extractFFields(fs, selectedFields, showCustomFields);
        // 筛选显示列
        ffs = ffs.filter((/**
         * @param {?} f
         * @return {?}
         */
        function (f) { return f.show; }));
        // 按order排序
        ffs = this.dataInfoService.sortFieldsByOrder(ffs);
        // 创建显示列
        this.dgCols = [];
        ffs.forEach((/**
         * @param {?} f
         * @return {?}
         */
        function (f) {
            /** @type {?} */
            var c = {
                field: f.fieldPath || f.fieldName,
                title: _this.dataInfoService.getFieldLabel(f, _this.localeId),
                width: 120
            };
            if (f.dataType == DataType.Boolean) {
                c.formatter = (/**
                 * @param {?} value
                 * @param {?} rowData
                 * @param {?} rowIndex
                 * @return {?}
                 */
                function (value, rowData, rowIndex) {
                    if (value == true) {
                        return _this.localePipe.transform("yes");
                    }
                    else if (value == false) {
                        return _this.localePipe.transform("no");
                    }
                    else {
                        return "-";
                    }
                });
            }
            _this.dgCols.push(c);
        }));
        // 构建行数据
        /** @type {?} */
        var rows = this.dataTable.GetRowList();
        this.dgData = tslib_1.__spread(this.dataInfoService.extractDataRows(rows, ffs, fs, this.dgIdField));
        if (this.dgData.length > 0) {
            setTimeout((/**
             * @return {?}
             */
            function () {
                _this.dg && _this.dg.selectRow(_this.dgData[0][_this.dgIdField]);
            }), 500);
        }
    };
    /**
     * @param {?} row
     * @return {?}
     */
    ChildInfoComponent.prototype.selectChanged = /**
     * @param {?} row
     * @return {?}
     */
    function (row) {
        /** @type {?} */
        var r = this.dataTable.GetRowMap()[row.id];
        this.showDetail = this.dataInfoService.hasChildData(r, this.billInfo);
        this.cdr.detectChanges();
    };
    /**
     * @return {?}
     */
    ChildInfoComponent.prototype.viewChildData = /**
     * @return {?}
     */
    function () {
        if (this.dg.selectedRow == null) {
            this.notify.warning(this.localePipe.transform("selectOneFirst"));
            return;
        }
        /** @type {?} */
        var row = this.dataTable.GetRowMap()[this.dg.selectedRow.id];
        if (!this.dataInfoService.hasChildData(row, this.billInfo)) {
            this.notify.info(this.localePipe.transform("noChildData"));
            return;
        }
        /** @type {?} */
        var cmpF = this.cfr.resolveComponentFactory(ChildInfoListComponent);
        /** @type {?} */
        var cmpR = cmpF.create(this.inj, []);
        // 获取子表列表
        /** @type {?} */
        var childSchemaTables = this.dataInfoService.getChildTables(this.billInfo, this.schemaTable);
        cmpR.instance.childSchemaTables = childSchemaTables;
        cmpR.instance.childDataTableMap = row.GetChildTableMap();
        cmpR.instance.billInfo = this.billInfo;
        /** @type {?} */
        var bsModalRef = this.modal.show(cmpR, {
            title: this.localePipe.transform("childData"),
            width: 900,
            height: 600,
            showButtons: false,
        });
        cmpR.instance.bsModalRef = bsModalRef;
    };
    ChildInfoComponent.decorators = [
        { type: Component, args: [{
                    selector: "lib-bill-tracker-child-info",
                    template: "<div class=\"f-struct-wrapper\" *ngIf=\"dgCols&&dgCols.length>0&&dgData&&dgData.length>0\">\r\n    <farris-section class=\"f-section-tabs f-section-in-mainsubcard\" [mainTitle]=\"secTitle\">\r\n        <ng-template farrisSectionToolbar [toolbarCls]=\"'section-test-toolbar'\">\r\n            <button class=\"btn btn-secondary f-btn-ml\" *ngIf=\"showDetail\" (click)=\"viewChildData()\">\r\n                {{ \"childData\" | billTrackerLocale}}\r\n            </button>\r\n        </ng-template>\r\n        <div class=\"\">\r\n            <div class=\"f-utils-fill\">\r\n                <farris-datagrid #dg [data]=\"dgData\" [idField]=\"dgIdField\" [fields]=\"dgCols\" [showLineNumber]=\"true\"\r\n                    [striped]=\"true\" [virtualized]=\"false\" [pagination]=\"false\" [virtualizedAsyncLoad]=\"false\"\r\n                    [multiSelect]=\"false\" [fit]=\"true\" [showCheckbox]=\"false\" [showAllCheckbox]=\"false\"\r\n                    [lineNumberTitle]=\"dgLineNumberTitle\" [mergeCell]=\"false\" [showBorder]=\"true\"\r\n                    [checkOnSelect]=\"false\" [selectOnCheck]=\"false\" [nowrap]=\"true\" [autoFitColumns]=\"true\"\r\n                    [fitColumns]=\"true\" [autoHeight]=\"false\" (selectChanged)=\"selectChanged($event)\">\r\n                </farris-datagrid>\r\n            </div>\r\n        </div>\r\n    </farris-section>\r\n</div>"
                }] }
    ];
    /** @nocollapse */
    ChildInfoComponent.ctorParameters = function () { return [
        { type: NotifyService },
        { type: MessagerService },
        { type: LoadingService },
        { type: BsModalService },
        { type: BillTrackerDataInfoService },
        { type: BillTrackerLocalePipe },
        { type: ViewContainerRef },
        { type: Injector },
        { type: ComponentFactoryResolver },
        { type: ChangeDetectorRef },
        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [LOCALE_ID,] }] }
    ]; };
    ChildInfoComponent.propDecorators = {
        schemaTable: [{ type: Input, args: ["schemaTable",] }],
        dataTable: [{ type: Input, args: ["dataTable",] }],
        billInfo: [{ type: Input, args: ["billInfo",] }],
        dg: [{ type: ViewChild, args: ["dg",] }]
    };
    return ChildInfoComponent;
}());
export { ChildInfoComponent };
if (false) {
    /** @type {?} */
    ChildInfoComponent.prototype.schemaTable;
    /** @type {?} */
    ChildInfoComponent.prototype.dataTable;
    /** @type {?} */
    ChildInfoComponent.prototype.billInfo;
    /** @type {?} */
    ChildInfoComponent.prototype.secTitle;
    /** @type {?} */
    ChildInfoComponent.prototype.showDetail;
    /** @type {?} */
    ChildInfoComponent.prototype.dg;
    /** @type {?} */
    ChildInfoComponent.prototype.dgCols;
    /** @type {?} */
    ChildInfoComponent.prototype.dgData;
    /** @type {?} */
    ChildInfoComponent.prototype.dgLineNumberTitle;
    /** @type {?} */
    ChildInfoComponent.prototype.dgIdField;
    /** @type {?} */
    ChildInfoComponent.prototype.notify;
    /** @type {?} */
    ChildInfoComponent.prototype.messager;
    /** @type {?} */
    ChildInfoComponent.prototype.loading;
    /** @type {?} */
    ChildInfoComponent.prototype.modal;
    /** @type {?} */
    ChildInfoComponent.prototype.dataInfoService;
    /** @type {?} */
    ChildInfoComponent.prototype.localePipe;
    /** @type {?} */
    ChildInfoComponent.prototype.vcr;
    /** @type {?} */
    ChildInfoComponent.prototype.inj;
    /** @type {?} */
    ChildInfoComponent.prototype.cfr;
    /** @type {?} */
    ChildInfoComponent.prototype.cdr;
    /** @type {?} */
    ChildInfoComponent.prototype.localeId;
}
//# sourceMappingURL=data:application/json;base64,