{"version":3,"file":"gsp-svc-formdoc-upload.js.map","sources":["ng://@gsp-svc/formdoc-upload/lib/formdoc-upload.service.ts","ng://@gsp-svc/formdoc-upload/lib/formdoc-upload.component.ts","ng://@gsp-svc/formdoc-upload/lib/formdoc-upload.module.ts","ng://@gsp-svc/formdoc-upload/lib/upload/entity/doctype.ts","ng://@gsp-svc/formdoc-upload/lib/upload/entity/gspformdocinfo.ts","ng://@gsp-svc/formdoc-upload/lib/upload/entity/operatingmodes.ts","ng://@gsp-svc/formdoc-upload/lib/upload/entity/gspformremovelistentity.ts","ng://@gsp-svc/formdoc-upload/lib/upload/entity/gspformdocoperateentity.ts","ng://@gsp-svc/formdoc-upload/lib/upload/entity/changeinstancerequest.ts","ng://@gsp-svc/formdoc-upload/lib/upload/upload.service.ts","ng://@gsp-svc/formdoc-upload/lib/upload/entity/uploadfileinfo.ts","ng://@gsp-svc/formdoc-upload/lib/upload/entity/gspformuploadentity.ts","ng://@gsp-svc/formdoc-upload/lib/upload/entity/extensionstoragefileinfo.ts","ng://@gsp-svc/formdoc-upload/lib/upload/file-upload/file-upload.component.ts","ng://@gsp-svc/formdoc-upload/lib/upload/download.service.ts","ng://@gsp-svc/formdoc-upload/lib/upload/upload.module.ts","ng://@gsp-svc/formdoc-upload/lib/uploaddialog/uploaddialog/uploaddialog.component.ts","ng://@gsp-svc/formdoc-upload/lib/uploaddialog.service.ts","ng://@gsp-svc/formdoc-upload/lib/uploaddialog/uploaddialog.module.ts","ng://@gsp-svc/formdoc-upload/lib/upload/entity/uploadlimit.ts","ng://@gsp-svc/formdoc-upload/lib/upload/entity/gspformuploadlistentity.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormdocUploadService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-formdoc-upload',\n  template: `\n    <p>\n      formdoc-upload works!\n    </p>\n  `,\n  styles: []\n})\nexport class FormdocUploadComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { FormdocUploadComponent } from './formdoc-upload.component';\n\n\n@NgModule({\n  declarations: [FormdocUploadComponent],\n  imports: [\n  ],\n  exports: [FormdocUploadComponent]\n})\nexport class FormdocUploadModule { }\n","export enum DocType{\r\n    Word,\r\n    Excel,\r\n    Powerpoint,\r\n    Pdf,\r\n    Txt,\r\n    Image,\r\n    Other\r\n}","import { GspDocMetaProperty } from './gspdocmetaproperty';\r\n\r\nexport class GspFormDocInfo {\r\n    public metadataId: string;\r\n    public fileName: string;\r\n    public fileContent: string;\r\n    public index: number;\r\n    public total: number;\r\n    public exPropertyName: string;\r\n    public extProperty: GspDocMetaProperty;\r\n}","export enum OperatingModes{\r\n    Formal,\r\n    Temp\r\n}","import { OperatingModes } from \"./operatingmodes\";\r\n\r\nexport class GspFormRemoveListEntity {\r\n    public metadataIdList: string[];\r\n    public mode: OperatingModes;\r\n    public rootId: string;\r\n}","export class GspFormDocOperateEntity {\r\n    public metadataIdList: string[];\r\n    public rootId: string;\r\n}","import { ExStorageFileInfo } from './extensionstoragefileinfo';\r\n\r\nexport class ChangeInstanceRequest {\r\n    public fileInfoList: ExStorageFileInfo[];\r\n    public rootId: string;\r\n}","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { GspFormUploadListEntity } from './entity/gspformuploadlistentity';\nimport { HttpService } from '@ecp-caf/caf-common';\nimport { catchError, tap } from 'rxjs/operators';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { GspFormRemoveListEntity } from './entity/gspformremovelistentity';\nimport { of } from 'rxjs/observable/of';\nimport { GspFormDocOperateEntity } from './entity/gspformdocoperateentity';\n\nimport { GspFormUploadEntity } from './entity/gspformuploadentity';\nimport { ExStorageFileInfo } from './entity/extensionstoragefileinfo';\nimport { ChangeInstanceRequest } from './entity/changeinstancerequest';\nimport { OperatingModes } from './entity/operatingmodes';\n\n\n\n@Injectable()\nexport class UploadService {\n\n  constructor(private http: HttpService) { }\n\n  uploadList(docListInfo: GspFormUploadListEntity, rootId: string): Observable<any> {\n    let url;\n    docListInfo.rootId = rootId;\n\n    url = \"/api/runtime/dfs/v1.0/formdoc/list\";\n    //url = \"/api/runtime/dfs/v1.0/formdoc/list\";\n\n    return this.http.post(url, docListInfo).pipe(\n      tap(res => { }),\n      catchError((error: HttpErrorResponse) => {\n        return of(error);\n      }));\n  }\n\n\n  commit(metadataIdList: string[], rootId: string): Observable<any> {\n    let url;\n    let entity: GspFormDocOperateEntity = new GspFormDocOperateEntity;\n    entity.metadataIdList = metadataIdList;\n    entity.rootId = rootId;\n    url = \"/api/runtime/dfs/v1.0/formdoc/commit\";\n    //url = \"http://localhost:5000/api/runtime/dfs/v1.0/formdoc/commit\";\n\n    return this.http.post(url, entity).pipe();\n  }\n\n  cancel(metadataIdList: string[], rootId: string): Observable<any> {\n    let url;\n    let entity: GspFormDocOperateEntity = new GspFormDocOperateEntity;\n    entity.metadataIdList = metadataIdList;\n    entity.rootId = rootId;\n    url = \"/api/runtime/dfs/v1.0/formdoc/cancel\";\n    //url = \"http://localhost:5000/api/runtime/dfs/v1.0/formdoc/cancel\";\n    //localStorage.setItem(\"SessionId\",\"huoliang\");\n    return this.http.put(url, entity).pipe();\n  }\n\n  removeList(idList: string[], rootId: string) {\n    let url;\n    //url = \"http://localhost:5000/api/runtime/dfs/v1.0/formdoc/list\";\n    url = \"/api/runtime/dfs/v1.0/formdoc/list\";\n    var idListInfo = new GspFormRemoveListEntity;\n    idListInfo.metadataIdList = idList;\n    idListInfo.mode = OperatingModes.Temp;\n    idListInfo.rootId = rootId;\n    return this.http.delete(url, idListInfo).pipe();\n  }\n\n  getFile(metadataId: string, rootId: string) {\n\n    let url;\n    if (rootId == \"\")\n      url = \"/api/runtime/dfs/v1.0/formdoc/file/\" + metadataId;\n    else\n      url = \"/api/runtime/dfs/v1.0/formdoc/file/\" + metadataId + \"/\" + rootId;\n    return this.http.get(url).pipe(tap(res => { }),\n      catchError((error: HttpErrorResponse) => {\n        return of(error);\n      }));\n\n  }\n\n  uploadFile(docInfo: GspFormUploadEntity): Observable<any> {\n\n    let url = \"/api/runtime/dfs/v1.0/formdoc\";\n    //url = \"/api/runtime/dfs/v1.0/formdoc/list\";\n\n    return this.http.post(url, docInfo).pipe(\n      tap(res => { }),\n      catchError((error: HttpErrorResponse) => {\n        return of(error);\n      }));\n  }\n\n\n  getStorageExtensionInfo(): Observable<any> {\n    let url = \"/api/runtime/dfs/v1.0/storagestrategy/extension\";\n    //url = \"/api/runtime/dfs/v1.0/formdoc/list\";\n\n    return this.http.get(url).pipe(\n      tap(res => { }),\n      catchError((error: HttpErrorResponse) => {\n        return of(error);\n      }));\n  }\n\n  changeStorageInstance(storageInfoList: ExStorageFileInfo[], rootId: string): Observable<any> {\n    let url = \"/api/runtime/dfs/v1.0/formdoc/changeinstance\";\n    let request: ChangeInstanceRequest = new ChangeInstanceRequest;\n    request.fileInfoList = storageInfoList;\n    request.rootId = rootId;\n    return this.http.post(url, request).pipe(\n      tap(res => { }),\n      catchError((error: HttpErrorResponse) => {\n        return of(error);\n      }));\n  }\n\n\n  getUploadedFileInfoList(formId: string, rootId: string): Observable<any> {\n    let url = \"/api/runtime/dfs/v1.0/formdoc/uploadedfile/infolist\" + \"?formid=\" + formId + \"&rootid=\" + rootId;\n    //url = \"/api/runtime/dfs/v1.0/formdoc/list\";\n\n    return this.http.get(url).pipe(\n      tap(res => { }),\n      catchError((error: HttpErrorResponse) => {\n        return of(error);\n      }));\n  }\n\n  getRootSetting(rootId: string): Observable<any> {\n    let url = \"/api/runtime/dfs/v1.0/rootsetting/\" + rootId;\n\n    return this.http.get(url).pipe(\n      tap(res => { }),\n      catchError((error: HttpErrorResponse) => {\n        return of(error);\n      }));\n  }\n\n}\n","export class UploadFileInfo {\r\n\r\n    public metadataId: string;\r\n    public fileName: string;\r\n    public fileSize:string;\r\n\r\n}","import { OperatingModes } from './operatingmodes';\r\nimport { GspFormDocInfo } from './gspformdocinfo';\r\n\r\nexport class GspFormUploadEntity{\r\n    public formId: string;\r\n    public docInfo: GspFormDocInfo;\r\n    public mode: OperatingModes;\r\n    public rootId: string;\r\n\r\n}","export class ExStorageFileInfo {\r\n    public metadataId: string;\r\n    public exPropertyName: string;\r\n}","import { Component, OnInit, Input, ViewChild, TemplateRef, Optional, Injector } from '@angular/core';\nimport { FileInfo } from '../entity/fileinfo';\nimport { DocType } from '../entity/doctype';\nimport { GspFormDocInfo } from '../entity/gspformdocinfo';\nimport { OperatingModes } from '../entity/operatingmodes';\nimport { UploadService } from '../upload.service';\nimport { UploadFileInfo } from '../entity/uploadfileinfo';\nimport { MessagerService } from '@farris/ui-messager';\nimport { map } from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\nimport { GspFormUploadEntity } from '../entity/gspformuploadentity';\nimport { UUID } from 'angular2-uuid';\nimport { StorageExtension } from '../entity/storageextension';\nimport { ExStorageFileInfo } from '../entity/extensionstoragefileinfo';\nimport { DropListEntity } from '../entity/droplistentity';\nimport { LoadingService } from '@farris/ui-loading';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { fillProperties } from '@angular/core/src/util/property';\n\n\n@Component({\n  selector: 'app-file-upload',\n  templateUrl: './file-upload.component.html',\n  styleUrls: ['./file-upload.component.css'],\n})\nexport class FileUploadComponent implements OnInit {\n\n  files: FileInfo[] = [];\n  metadataIdList: string[] = [];\n  uploadFileInfoList: UploadFileInfo[] = [];\n  errFileList: string[] = [];\n  errTypeList: string[] = [];\n  nullFileList: string[] = [];\n  showType: number = 0;\n  mouseOn: boolean = false;\n  bufferSize = 1024 * 1024;\n  selectedFiles: any;\n\n  selectedFileCount: number = 0;\n\n  uploadIconAddress = '/platform/runtime/dfs/images/upload.svg';\n  uploadLittleIconAddress = '/platform/runtime/dfs/images/uploadIcon.svg';\n\n  hasSelectedFile: boolean = false;\n\n  fileAllSelected: boolean = false;\n\n  uploadProcess = { width: '0%' };\n\n  fileTotalChunk: { [key: string]: number } = {};\n  //fileUploadState: { [key: string]: boolean } = {};\n  //flag: number = 0;\n  requestArray: Array<Observable<any>> = new Array;\n\n  requestBodyArray: Array<GspFormUploadEntity> = new Array;\n\n  uploadedChunk: { [key: string]: number } = {};\n  uploadedProcess: { [key: string]: number } = {};\n\n  //allSelected: boolean = true;\n  storageExtension: StorageExtension;\n\n  defaultPropertyName: string = \"\";\n  propertiesNames: DropListEntity[] = [];\n\n  queueListStyle = { width: '480px' };\n\n  dropListValue: string = \"\";\n\n  uploadedFileTotal: number = 0;\n\n  haveExtensionProperty: boolean = false;\n\n  uploadedFileInfoList = [];\n  oldUploadedFileList = [];\n  //uploadedNameList = [];\n\n  sameNameAllowed = true;\n\n  constructor(private msgService: MessagerService, private uploadService: UploadService, private loadService: LoadingService, private injector?: Injector) { }\n  @Input() formId: string;\n  @Input() rootId: string;\n  @Input() fileType: string = \"*\";\n  @Input() fileCount: number = 0;\n  @Input() oldIdList: string[] = [];\n\n  //@Output() onCustomEvent: EventEmitter<any> = new EventEmitter();\n\n  @ViewChild('opCell') opCell: TemplateRef<any>;\n\n  ngOnInit() {\n    //if (this.storageService != null) {\n    this.uploadService.getStorageExtensionInfo().subscribe(\n      res => {\n        if (res != null && res.error == null) {\n          this.storageExtension = res;\n          this.defaultPropertyName = this.storageExtension.defaultPropertyName;\n          this.propertiesNames.push({ id: \"0\", name: this.storageExtension.defaultPropertyName });\n          let i = 0;\n          // this.propertiesNames.push(...(this.storageExtension.extensionPropertyNameList));\n          this.storageExtension.extensionPropertyNameList.forEach(element => {\n            this.propertiesNames.push({ id: (++i).toString(), name: element });\n          });\n          this.queueListStyle.width = '380px';\n          this.haveExtensionProperty = true;\n\n        }\n      }\n    )\n\n    this.uploadService.getRootSetting(this.rootId).subscribe(\n      res => {\n        if (res != null && res.error == null) {\n          this.sameNameAllowed = res.sameNameAllowed;\n          if (!this.sameNameAllowed) {\n            this.uploadService.getUploadedFileInfoList(this.formId, this.rootId).subscribe(\n              res => {\n                if (res != null && res.error == null) {\n                  this.uploadedFileInfoList = res;\n                  this.oldUploadedFileList = JSON.parse(JSON.stringify(res));;\n\n                }\n              })\n          }\n        }\n      }\n    )\n    if (this.oldIdList != null && this.oldIdList.length > 0) {\n      this.uploadService.removeList(this.oldIdList, this.rootId).subscribe();\n    }\n  }\n\n\n  fileSelected($event) {\n    this.hasSelectedFile = true;\n    this.selectedFiles = document.querySelector('#file');\n\n    if (this.fileCount > 0) {\n      if (this.selectedFiles.files.length + this.files.length > this.fileCount) {\n        let selectedNum: number = (this.selectedFiles.files.length as number) + this.files.length;\n        this.msgService.warning('å·²éæ©' + selectedNum + 'ä¸ªæä»¶ï¼è¶è¿ç³»ç»è®¾ç½®çæ°ééå¶' + this.fileCount + 'ä¸ªï¼è¯·éæ°éæ©ä¸ä¼ æä»¶ã');\n        return;\n      }\n    }\n\n    //this.flag = 0;\n    for (let i = 0; i < this.selectedFiles.files.length; i++) {\n      let selectedFile = this.selectedFiles.files[i];\n      //selectedFile.slice\n      let uuid = UUID.UUID();\n      if (!this.sameNameAllowed) {\n        if (this.uploadedFileInfoList.find(x => x.fileName == selectedFile.name) != null) {\n          // this.uploadedNameList.push(selectedFile.name);\n          // this.msgService.question('ä¹åå·²ä¸ä¼ è¿ååæä»¶: ' + selectedFile.name + 'ï¼éè¦æ¿æ¢ä¹ï¼', () => {\n          //   uuid = this.uploadedFileInfoList.find(x => x.fileName == selectedFile.name).metadataId;\n          //   this.uploadFile(uuid, selectedFile);\n          // })\n          const msg = this.msgService.show('warning', 'å·²ä¸ä¼ è¿ååæä»¶: ' + selectedFile.name, {\n            initialState: {\n              buttons: [\n                {\n                  text: 'éå½å',\n                  cls: 'btn btn-secondary',\n                  handle: () => {\n                    let oldName: string = selectedFile.name;\n                    let newName\n                    let flag = true;\n                    let i = 1;\n                    while (flag) {\n                      newName = oldName.substring(0, oldName.lastIndexOf('.')) + '(' + i + ')' + oldName.substring(oldName.lastIndexOf('.'));\n                      if (this.uploadedFileInfoList.find(x => x.fileName == newName) != null) {\n                        i++;\n                      }\n                      else\n                        flag = false;\n                    }\n\n                    this.uploadFile(uuid, selectedFile, newName);\n                    msg.close();\n                  }\n                },\n                {\n                  text: 'æ¿æ¢',\n                  cls: 'btn btn-secondary',\n                  handle: () => {\n                    uuid = this.uploadedFileInfoList.find(x => x.fileName == selectedFile.name).metadataId;\n                    this.uploadFile(uuid, selectedFile, selectedFile.name);\n                    this.uploadedFileTotal--;\n                    if (this.oldUploadedFileList.find(x => x.fileName == selectedFile.name)) {\n                      this.uploadedFileTotal++;\n                      this.uploadedFileInfoList.splice(this.uploadedFileInfoList.indexOf(this.uploadedFileInfoList.filter(x => x.fileName == selectedFile.name)[0]), 1);\n                    }\n                    msg.close();\n                  }\n                },\n                {\n                  text: 'åæ¶',\n                  cls: 'btn btn-secondary',\n                  handle: () => {\n                    msg.close();\n                  }\n                }\n              ]\n            }\n          })\n          continue;\n        }\n      }\n\n      // if (this.files.find(x => x.name == selectedFile.name) != null) {\n      //   this.errFileList.push(selectedFile.name);\n      //   continue;\n      // }\n\n      if (selectedFile.size == 0) {\n        this.nullFileList.push(selectedFile.name);\n        continue;\n      }\n\n      //this.flag += Math.ceil(selectedFile.size / this.bufferSize);\n      //let reader = new FileReader();\n      this.uploadFile(uuid, selectedFile, selectedFile.name);\n\n    }\n    // if (this.uploadedNameList.length > 0) {\n    //   let name: string = this.listToString(this.uploadedNameList);\n    //   this.msgService.warning('ä¹åå·²ä¸ä¼ è¿ååæä»¶: ' + name + 'è¯·éæ°éæ©ä¸ä¼ æä»¶ã');\n    //   this.uploadedNameList = [];\n    // }\n\n    if (this.errFileList.length > 0) {\n      let name: string = this.listToString(this.errFileList);\n      this.msgService.warning('å·²ä¸ä¼ ååæä»¶: ' + name + 'è¯·éæ°éæ©ä¸ä¼ æä»¶ã');\n      this.errFileList = [];\n    }\n\n    if (this.nullFileList.length > 0) {\n      let name: string = this.listToString(this.nullFileList);\n      name = name.substring(0, name.length - 1);\n      this.msgService.warning('æä»¶:  ' + name + ' å¤§å°ä¸º0ï¼è¯·éæ°éæ©ä¸ä¼ æä»¶ã');\n      this.nullFileList = [];\n    }\n    // if (this.errTypeList.length > 0) {\n    //   let type: string = this.listToString(this.errTypeList);\n    //   this.msgService.warning('ä¸æ¯æä¸ä¼ ç±»åä¸º ' + type + 'çæä»¶è¯·éæ°éæ©ä¸ä¼ æä»¶ã');\n    //   this.errTypeList = [];\n    // }\n    this.files = this.files.slice();\n    this.fileAllSelected = false;\n    $event.target.value = '';\n  }\n\n  showErrorMessage(file) {\n    this.msgService.error('ä¸ä¼ éä»¶å¤±è´¥ã' + file.errorMessage);\n  }\n\n\n  uploadFile(uuid: string, selectedFile, fileName: string) {\n    let fileInfo: FileInfo;\n    // let uuid = UUID.UUID();\n    //reader.readAsBinaryString(selectedFile);\n    //reader.onload = (e) => {\n    fileInfo = {\n      id: uuid,\n      name: fileName,\n      type: selectedFile.type,\n      source: \"\",\n      size: this.getFileSize(selectedFile.size),\n      fileSize: selectedFile.size,\n      picListDisplayName: this.getPicListDisplayName(fileName),\n      queueListDisplayName: this.getQueueDisplayName(fileName),\n      //content: reader.result.toString(),\n      hasUploaded: false,\n      mouseOn: false,\n      selectd: false,\n      isUploading: true,\n      uploadResult: false,\n      uploadProcess: 0,\n      errorMessage: \"\",\n      extensionDropListId: 0,\n      extensionName: \"\"\n    }\n\n    if (this.storageExtension != null)\n      fileInfo.extensionName = this.defaultPropertyName;\n    let chunkTotal: number = Math.ceil(selectedFile.size / this.bufferSize);\n    let chunkIndex: number = 0;\n\n\n    this.fileTotalChunk[uuid] = chunkTotal;\n\n    let uploadFileInfo = new UploadFileInfo();\n\n    uploadFileInfo.metadataId = uuid;\n    uploadFileInfo.fileName = fileInfo.name;\n    uploadFileInfo.fileSize = fileInfo.size;\n\n\n    while (chunkIndex < chunkTotal) {\n      let uploadInfo = new GspFormUploadEntity;\n      uploadInfo.formId = this.formId;\n      uploadInfo.mode = OperatingModes.Temp;\n      uploadInfo.rootId = this.rootId;\n\n      let docInfo: GspFormDocInfo = new GspFormDocInfo;\n\n      docInfo.fileName = fileName;\n      docInfo.metadataId = uuid;\n      docInfo.total = chunkTotal;\n\n      this.uploadedChunk[docInfo.metadataId] = 0;\n\n      let nextSize = Math.min((chunkIndex + 1) * this.bufferSize, selectedFile.size);\n      let fileData = selectedFile.slice(chunkIndex * this.bufferSize, nextSize);\n      let reader = new FileReader();\n      reader.readAsBinaryString(fileData);\n      let innerIndex = chunkIndex;\n      reader.onload = () => {\n        docInfo.fileContent = btoa(reader.result.toString());\n\n        docInfo.index = innerIndex;\n        //chunkIndex++;\n        if (this.haveExtensionProperty)\n          docInfo.exPropertyName = this.defaultPropertyName;\n        //docInfo.isLast = true;\n        uploadInfo.docInfo = docInfo;\n\n        let info = uploadInfo;\n\n        // this.requestArray.push(this.uploadService.uploadFile(uploadInfo));\n        this.requestBodyArray.push(info);\n\n        this.uploadService.uploadFile(info).subscribe(res => {\n          if (res != null) {\n            this.files[this.files.indexOf(fileInfo)].uploadResult = false;\n            this.files[this.files.indexOf(fileInfo)].isUploading = false;\n            this.files[this.files.indexOf(fileInfo)].errorMessage = res.error.Message;\n          } else {\n            this.uploadedChunk[docInfo.metadataId]++;\n            this.files[this.files.indexOf(fileInfo)].uploadProcess = Number.parseInt((this.uploadedChunk[docInfo.metadataId] / this.fileTotalChunk[docInfo.metadataId] * 100).toFixed(0));\n            if (this.uploadedChunk[docInfo.metadataId] == this.fileTotalChunk[docInfo.metadataId]) {\n              this.files[this.files.indexOf(fileInfo)].uploadResult = true;\n              this.files[this.files.indexOf(fileInfo)].isUploading = false;\n              this.uploadFileInfoList = this.uploadFileInfoList.concat(uploadFileInfo);\n              this.uploadedFileInfoList = this.uploadedFileInfoList.concat(uploadFileInfo);\n              this.uploadedFileTotal++;\n            }\n          }\n        });\n      }\n      //console.log(chunkIndex + 1);\n      chunkIndex = chunkIndex + 1;\n    }\n\n    let type: string = selectedFile.type;\n    if (type.includes(\"image\")) {\n      this.addDocInfo(selectedFile, fileInfo, DocType.Image);\n    }\n    else if (type.includes(\"word\")) {\n      this.addDocInfo(selectedFile, fileInfo, DocType.Word);\n    }\n    else if (type.includes(\"pdf\")) {\n      this.addDocInfo(selectedFile, fileInfo, DocType.Pdf);\n    }\n    else if (type.includes(\"plain\")) {\n      this.addDocInfo(selectedFile, fileInfo, DocType.Txt);\n    }\n    else if (type.includes(\"sheet\") || type.includes(\"excel\")) {\n      this.addDocInfo(selectedFile, fileInfo, DocType.Excel)\n    }\n    else if (type.includes(\"powerpoint\") || type.includes(\"presentation\")) {\n      this.addDocInfo(selectedFile, fileInfo, DocType.Powerpoint);\n    }\n    else {\n      this.addDocInfo(selectedFile, fileInfo, DocType.Other);\n      // let name: string = selectedFile.name;\n      // let errType = name.substring(selectedFile.name.lastIndexOf('.'));\n      // this.errTypeList.push(errType);\n    }\n    let index = -1;\n    this.files.forEach(x => {\n      if (x.name == fileInfo.name) {\n        if (index == -1)\n          index = this.files.indexOf(x);\n      }\n    })\n    if (index != -1 && index != this.files.length - 1) {\n      this.files.splice(index, 1);\n      this.uploadFileInfoList.splice(index, 1);\n      this.uploadedFileInfoList.splice(index, 1);\n      this.uploadedFileTotal--;\n    }\n  }\n\n\n  selectAllFile() {\n\n    if (!this.fileAllSelected) {\n      this.files.forEach(element => {\n        // let obj: any = document.getElementById(element.name);\n        // obj.checked = true;\n        element.selectd = true;\n      });\n      this.fileAllSelected = true;\n      this.selectedFileCount = this.files.length;\n\n    } else {\n      this.files.forEach(element => {\n        // let obj: any = document.getElementById(element.name);\n        // obj.checked = false;\n        element.selectd = false;\n      });\n      this.fileAllSelected = false;\n      this.selectedFileCount = 0;\n    }\n  }\n\n\n  checkoutSelectFile(file: FileInfo) {\n    // let obj: any = document.getElementById(fileName);\n    file.selectd = !file.selectd;\n    if (file.selectd)\n      this.selectedFileCount++;\n    else\n      this.selectedFileCount--;\n    if (this.selectedFileCount == this.files.length) {\n      this.fileAllSelected = true;\n      //this.isFileAllSelected();\n    }\n    else {\n      this.fileAllSelected = false;\n      //this.isFileAllSelected();\n    }\n\n  }\n\n  listDeleteFile(fileInfo: FileInfo) {\n    if (fileInfo.selectd)\n      this.selectedFileCount--;\n    //console.log(fileName);\n    this.files.splice(this.files.indexOf(fileInfo), 1);\n    if (fileInfo.uploadResult) {\n      let idList: string[] = [];\n      idList.push(fileInfo.id);\n      this.uploadService.cancel(idList, this.rootId).subscribe();\n\n      this.uploadFileInfoList.splice(this.uploadFileInfoList.indexOf(this.uploadFileInfoList.filter(x => x.fileName == fileInfo.name)[0]), 1);\n      this.uploadedFileInfoList.splice(this.uploadedFileInfoList.indexOf(this.uploadedFileInfoList.filter(x => x.fileName == fileInfo.name)[0]), 1);\n      this.uploadedFileTotal--;\n    }\n    if (this.selectedFileCount == 0)\n      this.fileAllSelected = false;\n  }\n\n  listMultipleDeleteFile() {\n    let selectedFile: FileInfo[] = [];\n    this.files.forEach(element => {\n      let obj: any = document.getElementById(element.name);\n      if (obj.checked)\n        selectedFile.push(element);\n    })\n    let metadataList: string[] = [];\n    selectedFile.forEach(element => {\n      metadataList.push(element.id);\n      this.files.splice(this.files.indexOf(element), 1);\n      if (element.uploadResult) {\n        // let idList: string[] = [];\n        // idList.push(fileInfo.id);\n        // this.uploadService.cancel(idList, this.rootId).subscribe();\n\n        this.uploadFileInfoList.splice(this.uploadFileInfoList.indexOf(this.uploadFileInfoList.filter(x => x.fileName == element.name)[0]), 1);\n        this.uploadedFileInfoList.splice(this.uploadedFileInfoList.indexOf(this.uploadedFileInfoList.filter(x => x.fileName == element.name)[0]), 1);\n        this.uploadedFileTotal--;\n      }\n    })\n    this.uploadService.cancel(metadataList, this.rootId).subscribe();\n\n    let allBox: any = document.getElementById(\"allCheckBox\");\n    if (allBox != null)\n      allBox.checked = false;\n    this.selectedFileCount = 0;\n    this.fileAllSelected = false;\n  }\n\n\n  getPicListDisplayName(fileName: string) {\n    if (fileName.length <= 10)\n      return fileName;\n    else {\n      let headContent = fileName.substring(0, 2);\n      let tailContent = fileName.substring(fileName.lastIndexOf('.') - 2);\n      return headContent + \"â¦\" + tailContent;\n    }\n  }\n\n  getQueueDisplayName(fileName: string) {\n    return fileName;\n  }\n\n  addDocInfo(selectdFile, fileInfo: FileInfo, docType: DocType) {\n    switch (docType) {\n      case DocType.Word: {\n        fileInfo.source = \"/platform/runtime/dfs/images/word.png\"\n        this.files.push(fileInfo);\n        break;\n      }\n\n      case DocType.Pdf: {\n        fileInfo.source = \"/platform/runtime/dfs/images/pdf.png\"\n        this.files.push(fileInfo);\n        break;\n      }\n\n      case DocType.Excel: {\n        fileInfo.source = \"/platform/runtime/dfs/images/excel.png\";\n        this.files.push(fileInfo);\n        break;\n      }\n\n      case DocType.Txt: {\n        fileInfo.source = \"/platform/runtime/dfs/images/txt.png\";\n        this.files.push(fileInfo);\n        break;\n      }\n\n      case DocType.Powerpoint: {\n        fileInfo.source = \"/platform/runtime/dfs/images/ppt.png\";\n        this.files.push(fileInfo);\n        break;\n      }\n\n      case DocType.Other: {\n        fileInfo.source = \"/platform/runtime/dfs/images/file.png\";\n        this.files.push(fileInfo);\n        break;\n      }\n\n      case DocType.Image:\n        let reader = new FileReader();\n\n        reader.readAsDataURL(selectdFile);\n        reader.onload = (_event) => {\n          let imgUrl = reader.result;\n          if (this.injector != null) {\n            let sanitizer = this.injector.get(DomSanitizer);\n            fileInfo.source = sanitizer.bypassSecurityTrustResourceUrl(imgUrl);\n          } else\n            fileInfo.source = imgUrl;\n          this.files.push(fileInfo);\n        }\n        break;\n    }\n\n  }\n\n  listToString(strList: string[]) {\n    let name: string = \"\";\n    for (let i = 0; i < strList.length; i++) {\n      name += strList[i] + \",\";\n    }\n    return name;\n  }\n\n\n  exStorageFileList: ExStorageFileInfo[] = [];\n\n  typeChange($event: any, file: FileInfo) {\n    file.extensionName = $event.data.name;\n    let exStorageFileInfo: ExStorageFileInfo = new ExStorageFileInfo;\n    if (file.extensionName == this.storageExtension.defaultPropertyName) {\n      if (this.exStorageFileList.filter(x => x.metadataId == file.id).length > 0)\n        this.exStorageFileList.splice(this.exStorageFileList.findIndex(x => x.metadataId == file.id), 1)\n    } else {\n      if (this.exStorageFileList.filter(x => x.metadataId == file.id).length > 0) {\n        exStorageFileInfo = this.exStorageFileList.filter(x => x.metadataId == file.id)[0];\n        exStorageFileInfo.exPropertyName = file.extensionName;\n      } else {\n        exStorageFileInfo.metadataId = file.id;\n        exStorageFileInfo.exPropertyName = file.extensionName;\n        this.exStorageFileList.push(exStorageFileInfo);\n      }\n    }\n  }\n\n  upload(): Observable<any> {\n    if (this.uploadedFileTotal != this.files.filter(x => x.isUploading || x.uploadResult).length) {\n      // this.notifyService.success(<NotifyOptions>{\n      //   msg: 'ä¿å­æåï¼', timeout: 3000\n      // });\n      this.msgService.warning('ç­ä¸ä¸ï¼ææ¡£æ­£å¨ä¸ä¼ ã');\n      return of(false);\n    }\n    if (this.storageExtension == null)\n      return of(this.uploadFileInfoList);\n    else {\n      if (this.exStorageFileList.length == 0)\n        return of(this.uploadFileInfoList);\n      else {\n        const loading = this.loadService.show({\n          message: 'æ­£å¨å°æä»¶ä¿å­å°' + this.storageExtension.extensionName\n        });\n        return this.uploadService.changeStorageInstance(this.exStorageFileList, this.rootId).pipe(\n          map(res => {\n            if (res != null)\n              this.msgService.error('ä¿å­å°' + this.storageExtension.extensionName + \"å¤±è´¥ï¼ä¸ä¼ æä»¶èªå¨ä¿å­å°\" + this.storageExtension.defaultPropertyName + \"å­å¨ã\" + res.error.Message);\n            loading.close();\n            return this.uploadFileInfoList;\n          }))\n      }\n    }\n  }\n\n  cancel() {\n    if (this.uploadFileInfoList.length == 0)\n      return;\n    this.uploadFileInfoList.forEach(element => {\n      this.metadataIdList.push(element.metadataId);\n    })\n    this.uploadService.cancel(this.metadataIdList, this.rootId).subscribe();\n\n  }\n\n  getUploadFileInfoList() {\n    return this.uploadFileInfoList;\n  }\n\n  delete(file) {\n    this.files.splice(this.files.indexOf(file), 1);\n    if (file.uploadResult)\n      this.uploadedFileTotal--;\n    if (this.exStorageFileList.filter(x => x.metadataId == file.id).length > 0) {\n      this.exStorageFileList.splice(this.exStorageFileList.findIndex(x => x.metadataId == file.id), 1);\n    }\n    // var obj:any = document.querySelector('#file');\n    // obj.files.remove();\n    //obj.value='';\n  }\n\n  getFileSize(size: number) {\n    if (size < 102400)\n      return (size / 1024).toFixed(1) + \"K\";\n    else if (size < 1024 * 1024)\n      return (size / 1024).toFixed(0) + \"K\";\n    else if (size < 100 * 1024 * 1024)\n      return (size / 1024 / 1024).toFixed(1) + \"M\";\n    else if (size < 1024 * 1024 * 1024)\n      return (size / 1024 / 1024).toFixed(0) + \"M\";\n    else\n      return (size / 1024 / 1024 / 1024).toFixed(1) + \"G\";\n  }\n  showByGroup() {\n    this.showType = 0;\n    // this.selectedFileCount = 0;\n  }\n\n  showByList() {\n    this.showType = 1;\n    // this.selectedFileCount = 0;\n    if (this.selectedFileCount != 0 && this.selectedFileCount == this.files.length) {\n      this.fileAllSelected = true;\n    }\n  }\n\n  mouseOver(file) {\n    file.mouseOn = true;\n  }\n  mouseOut(file) {\n    file.mouseOn = false;\n  }\n\n}\n\n\n","import { Injectable } from '@angular/core';\n\n\n@Injectable()\nexport class DownloadService {\n\n  constructor() { }\n\n  getDownloadUrl(metadataId: string, rootId: string) {\n    return \"/api/runtime/dfs/v1.0/doc/filecontent?metadataid=\" + metadataId + \"&rootid=\" + rootId + \"&token=\" + this.getToken(this.mergeString(metadataId, rootId));\n  }\n\n  getMultipleDownloadUrl(metadataIdList: string, rootId: string) {\n    let list: string[] = JSON.parse(metadataIdList);\n    return \"/api/runtime/dfs/v1.0/doc/multiple/download?metadataidlist=\" + metadataIdList + \"&rootid=\" + rootId + \"&token=\" + this.getToken(this.mergeString(list[0], rootId));\n  }\n\n  getMultipleDownloadUrlWithName(metadataIdList: string, rootId: string, zipName: string) {\n    let list: string[] = JSON.parse(metadataIdList);\n    if (zipName == null || zipName == \"\")\n      zipName = 'unifile.zip';\n    if (!zipName.endsWith(\".zip\"))\n      zipName += '.zip';\n    return \"/api/runtime/dfs/v1.0/doc/compress/download?metadataidlist=\" + metadataIdList + \"&rootid=\" + rootId + \"&token=\" + this.getToken(this.mergeString(list[0], rootId)) + \"&zipName=\" + zipName;\n  }\n\n  getHistoryDownloadUrl(metadataId: string, rootId: string, version: string) {\n    //let list:string[]=JSON.parse(metadataIdList);\n    return \"/api/runtime/dfs/v1.0/doc/historycontent?metadataid=\" + metadataId + \"&rootid=\" + rootId + \"&version=\" + version + \"&token=\" + this.getToken(this.mergeString(metadataId, rootId));\n  }\n\n\n\n  private mergeString(str: string, str1: string): string {\n    let min = str.length < str1.length ? str.length : str1.length;\n    let res: string = \"\";\n    let i = 0;\n    for (i = 0; i < min; i++) {\n      res += str.substring(i, i + 1);\n      res += str1.substring(i, i + 1);\n    }\n    res += str.length < str1.length ? str1.substring(i) : str.substring(i);\n    return res;\n  }\n\n  private getToken(str: string): string {\n    let array = [1, 2, 3];\n    if (str.length > 24)\n      str = str.substring(0, 24);\n    let length = Math.floor(str.length / 3);\n    let str1 = str.substring(0, length);\n    let str2 = str.substring(length, 2 * length);\n    let str3 = str.substring(2 * length, 3 * length);\n    let randomArray = [];\n    var random = Math.ceil(Math.random() * 3);\n    randomArray.push(array[random - 1]);\n    array.splice(random - 1, 1);\n    random = Math.ceil(Math.random() * 2);\n    randomArray.push(array[random - 1]);\n    array.splice(random - 1, 1);\n    randomArray.push(array[0]);\n    let timeStamp: string = Math.round(new Date().getTime() / 1000) + \"\";\n\n    return timeStamp.substring(0, 5) + \"times\" + randomArray[0] + \"\" + randomArray[1] + \"\" + randomArray[2] + this.switchStr(str1, str2, str3, randomArray[0]) + this.switchStr(str1, str2, str3, randomArray[1]) + this.switchStr(str1, str2, str3, randomArray[2]) + \"times\" + timeStamp.substring(5);\n  }\n\n  private switchStr(str1: string, str2: string, str3: string, i: number): string {\n    switch (i) {\n      case 1: return str1;\n      case 2: return str2;\n      case 3: return str3;\n    }\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FileUploadComponent } from './file-upload/file-upload.component';\nimport { ButtonsModule } from '@progress/kendo-angular-buttons';\nimport { NotifyModule } from '@farris/ui-notify';\nimport { MessagerModule } from '@farris/ui-messager';\nimport { UploadService } from './upload.service';\nimport { LoadingModule } from '@farris/ui-loading';\nimport { ProgressModule } from '@farris/ui-progress'\nimport { FormsModule } from '@angular/forms';\nimport { ComboListModule } from '@farris/ui-combo-list';\nimport { DownloadService } from './download.service';\n\n\n\n@NgModule({\n  declarations: [FileUploadComponent],\n  imports: [\n    CommonModule,\n    ButtonsModule,\n    NotifyModule,\n    MessagerModule.forRoot(),\n    LoadingModule.forRoot(),\n    ProgressModule,\n    FormsModule,\n    ComboListModule\n\n  ],\n  exports: [FileUploadComponent],\n  entryComponents: [FileUploadComponent],\n  providers: [UploadService, DownloadService]\n})\nexport class UploadModule { }\n\nexport const Éµa = UploadModule;\n","import { Component, OnInit, ViewChild, Input } from '@angular/core';\nimport { BsModalRef, BsModalService } from '@farris/ui-modal';\nimport { FileUploadComponent } from '../../upload/file-upload/file-upload.component';\n\n@Component({\n  selector: 'app-uploaddialog',\n  templateUrl: './uploaddialog.component.html',\n  styleUrls: ['./uploaddialog.component.css']\n})\nexport class UploadDialogComponent implements OnInit {\n\n  dlg: BsModalRef;\n\n  metadataIdList:string[]=[];\n\n  @Input() formId:string;\n\n  constructor(private modalService: BsModalService) { }\n\n  @ViewChild(FileUploadComponent) fileUpload: FileUploadComponent;\n\n  ngOnInit() {\n  }\n\n  showDialog() {\n    this.dlg = this.modalService.show(FileUploadComponent, {\n      title: 'éæ©æä»¶',\n      width: 800, height: 500,\n      buttons: [\n        {\n          text: 'ä¸ä¼ ', cls: 'k-button k-button-icontext k-primary', iconCls: \"k-icon k-i-check\", handle: () => {\n            this.fileUpload.upload();\n            this.dlg.close();\n          }\n        },\n        {\n          text: 'å³é­', cls: 'k-button k-button-icontext', iconCls: \"k-icon k-i-close\", handle: () => {\n            this.fileUpload.cancel();\n            this.dlg.close();\n          }\n        }\n      ],\n\n      showButtons: true,\n\n    });\n    this.dlg.content.formId=this.formId;\n\n  }\n\n}\n","import { Injectable, Injector, ComponentFactoryResolver } from '@angular/core';\r\nimport { FileUploadComponent } from './upload/file-upload/file-upload.component';\r\nimport { BsModalService, BsModalRef } from '@farris/ui-modal';\r\nimport { UploadFileInfo } from './upload/entity/uploadfileinfo';\r\nimport { Observable, of } from 'rxjs';\r\nimport { UploadLimit } from './upload/entity/uploadlimit';\r\n\r\n\r\n@Injectable()\r\nexport class UploadDialogService {\r\n    constructor(private modalService: BsModalService, private componentFactoryResolver: ComponentFactoryResolver, private injector: Injector) { }\r\n\r\n    dlg: BsModalRef;\r\n\r\n    fileInfoList: UploadFileInfo[] = [];\r\n\r\n    showDialog(formId: string, rootId: string) {\r\n        let flag = 0;\r\n        return new Promise(resolve => {\r\n            var viewerFactory = this.componentFactoryResolver.resolveComponentFactory(FileUploadComponent);\r\n            var viewerRef = viewerFactory.create(this.injector);\r\n\r\n            viewerRef.instance.rootId = rootId;\r\n            viewerRef.instance.formId = formId;\r\n\r\n            this.dlg = this.modalService.show(viewerRef, {\r\n                title: 'ä¸ä¼ æä»¶',\r\n                width: 950, height: 570,\r\n                buttons: [\r\n                    {\r\n                        text: 'ä¿å­', cls: 'k-button k-button-icontext k-primary', handle: () => {\r\n                            this.dlg.content.upload().subscribe(\r\n                                res => {\r\n                                    if (res) {\r\n                                        resolve(res);\r\n                                        flag = 1;\r\n                                        this.dlg.close();\r\n                                    }\r\n                                }\r\n                            );\r\n                        }\r\n                    },\r\n                    {\r\n                        text: 'å³é­', cls: 'k-button k-button-icontext', handle: () => {\r\n                            this.dlg.close();\r\n                        }\r\n                    }\r\n                ],\r\n\r\n                showButtons: true,\r\n                showMaxButton: false,\r\n                beforeClose: (): Observable<boolean> => {\r\n                    if (flag == 0)\r\n                        this.dlg.content.cancel();\r\n                    return of(true);\r\n                }\r\n            });\r\n        })\r\n    }\r\n\r\n    uploadFile(formId: string, rootId: string,oldIdList: string[]=[]) { \r\n        return this.uploadFileWithLimit(formId, rootId, null, oldIdList);\r\n    }\r\n\r\n\r\n    uploadFileWithLimit(formId: string, rootId: string, limit: UploadLimit, oldIdList: string[]=[]) {\r\n        let flag = 0;\r\n        return new Promise(resolve => {\r\n            var uploadFactory = this.componentFactoryResolver.resolveComponentFactory(FileUploadComponent);\r\n            var uploadRef = uploadFactory.create(this.injector);\r\n            if (limit != null) {\r\n                uploadRef.instance.fileCount = limit.fileCount;\r\n                if (limit.fileType != null && limit.fileType != \"\")\r\n                    uploadRef.instance.fileType = limit.fileType\r\n            }\r\n\r\n            uploadRef.instance.rootId = rootId;\r\n            uploadRef.instance.formId = formId;\r\n            uploadRef.instance.oldIdList=oldIdList;\r\n\r\n            this.dlg = this.modalService.show(uploadRef, {\r\n                title: 'ä¸ä¼ æä»¶',\r\n                width: 950, height: 570,\r\n                buttons: [\r\n                    {\r\n\r\n                        text: 'ä¿å­', cls: 'k-button k-button-icontext k-primary', handle: () => {\r\n                            this.dlg.content.upload().subscribe(\r\n                                res => {\r\n                                    if (res) {\r\n                                        resolve(res);\r\n                                        flag = 1;\r\n                                        this.dlg.close();\r\n                                    }\r\n                                }\r\n                            );\r\n                        }\r\n                    },\r\n                    {\r\n                        text: 'å³é­', cls: 'k-button k-button-icontext', handle: () => {\r\n                            this.dlg.close();\r\n                        }\r\n                    }\r\n                ],\r\n\r\n                showButtons: true,\r\n                showMaxButton: false,\r\n                beforeClose: (): Observable<boolean> => {\r\n                    if (flag == 0)\r\n                        this.dlg.content.cancel();\r\n                    return of(true);\r\n                }\r\n            });\r\n        })\r\n    }\r\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FarrisDialogModule } from '@farris/ui-dialog';\nimport { ButtonsModule } from '@progress/kendo-angular-buttons';\nimport { MessagerModule } from '@farris/ui-messager';\nimport { BsModalService } from '@farris/ui-modal';\n\nimport { UploadModule } from '../upload/upload.module';\nimport { UploadDialogComponent } from './uploaddialog/uploaddialog.component';\nimport { HttpService } from '@ecp-caf/caf-common';\nimport { UploadService } from '../upload/upload.service';\nimport { UploadDialogService } from '../uploaddialog.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NotifyModule } from '@farris/ui-notify';\nimport { FileUploadComponent } from '../upload/file-upload/file-upload.component';\n\n\n@NgModule({\n  declarations: [UploadDialogComponent],\n  imports: [\n    CommonModule,\n    FarrisDialogModule,\n    MessagerModule.forRoot(),\n    UploadModule,\n    ButtonsModule,\n    NotifyModule.forRoot(),\n    HttpClientModule\n  ],\n  exports: [UploadDialogComponent,FileUploadComponent],\n  entryComponents: [UploadDialogComponent,FileUploadComponent],\n  providers: [BsModalService, HttpService, UploadDialogService, UploadService]\n})\nexport class UploadDialogMoudle { }\n","export class UploadLimit {\r\n    public fileType: string = \"*\";\r\n    public fileCount: number = 0;\r\n}","import { GspFormDocInfo } from './gspformdocinfo';\r\nimport { OperatingModes } from './operatingmodes';\r\n\r\nexport class GspFormUploadListEntity {\r\n    public formId: string;\r\n    public docInfoList: GspFormDocInfo[];\r\n    public mode: OperatingModes;\r\n    public rootId: string;\r\n}"],"names":["of"],"mappings":"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"}
